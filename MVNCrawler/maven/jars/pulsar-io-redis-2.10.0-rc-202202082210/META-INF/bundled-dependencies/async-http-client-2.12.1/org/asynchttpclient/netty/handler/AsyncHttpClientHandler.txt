Compiled from "AsyncHttpClientHandler.java"
public abstract class org.asynchttpclient.netty.handler.AsyncHttpClientHandler extends io.netty.channel.ChannelInboundHandlerAdapter {
  protected final org.slf4j.Logger logger;

  protected final org.asynchttpclient.AsyncHttpClientConfig config;

  protected final org.asynchttpclient.netty.channel.ChannelManager channelManager;

  protected final org.asynchttpclient.netty.request.NettyRequestSender requestSender;

  final org.asynchttpclient.netty.handler.intercept.Interceptors interceptors;

  final boolean hasIOExceptionFilters;

  org.asynchttpclient.netty.handler.AsyncHttpClientHandler(org.asynchttpclient.AsyncHttpClientConfig, org.asynchttpclient.netty.channel.ChannelManager, org.asynchttpclient.netty.request.NettyRequestSender);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      12: putfield      #4                  // Field logger:Lorg/slf4j/Logger;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
      30: aload_0
      31: new           #8                  // class org/asynchttpclient/netty/handler/intercept/Interceptors
      34: dup
      35: aload_1
      36: aload_2
      37: aload_3
      38: invokespecial #9                  // Method org/asynchttpclient/netty/handler/intercept/Interceptors."<init>":(Lorg/asynchttpclient/AsyncHttpClientConfig;Lorg/asynchttpclient/netty/channel/ChannelManager;Lorg/asynchttpclient/netty/request/NettyRequestSender;)V
      41: putfield      #10                 // Field interceptors:Lorg/asynchttpclient/netty/handler/intercept/Interceptors;
      44: aload_0
      45: aload_1
      46: invokeinterface #11,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getIoExceptionFilters:()Ljava/util/List;
      51: invokeinterface #12,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      56: ifne          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: putfield      #13                 // Field hasIOExceptionFilters:Z
      67: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: astore_3
       7: aload_3
       8: invokestatic  #15                 // Method org/asynchttpclient/netty/channel/Channels.getAttribute:(Lio/netty/channel/Channel;)Ljava/lang/Object;
      11: astore        4
      13: aload         4
      15: instanceof    #16                 // class org/asynchttpclient/netty/OnLastHttpContentCallback
      18: ifeq          39
      21: aload_2
      22: instanceof    #17                 // class io/netty/handler/codec/http/LastHttpContent
      25: ifeq          276
      28: aload         4
      30: checkcast     #16                 // class org/asynchttpclient/netty/OnLastHttpContentCallback
      33: invokevirtual #18                 // Method org/asynchttpclient/netty/OnLastHttpContentCallback.call:()V
      36: goto          276
      39: aload         4
      41: instanceof    #19                 // class org/asynchttpclient/netty/NettyResponseFuture
      44: ifeq          70
      47: aload         4
      49: checkcast     #19                 // class org/asynchttpclient/netty/NettyResponseFuture
      52: astore        5
      54: aload         5
      56: invokevirtual #20                 // Method org/asynchttpclient/netty/NettyResponseFuture.touch:()V
      59: aload_0
      60: aload_3
      61: aload         5
      63: aload_2
      64: invokevirtual #21                 // Method handleRead:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Object;)V
      67: goto          276
      70: aload         4
      72: instanceof    #22                 // class org/asynchttpclient/netty/handler/StreamedResponsePublisher
      75: ifeq          236
      78: aload         4
      80: checkcast     #22                 // class org/asynchttpclient/netty/handler/StreamedResponsePublisher
      83: astore        5
      85: aload         5
      87: invokevirtual #23                 // Method org/asynchttpclient/netty/handler/StreamedResponsePublisher.future:()Lorg/asynchttpclient/netty/NettyResponseFuture;
      90: invokevirtual #20                 // Method org/asynchttpclient/netty/NettyResponseFuture.touch:()V
      93: aload_2
      94: instanceof    #24                 // class io/netty/handler/codec/http/HttpContent
      97: ifeq          187
     100: aload_2
     101: checkcast     #24                 // class io/netty/handler/codec/http/HttpContent
     104: invokeinterface #25,  1           // InterfaceMethod io/netty/handler/codec/http/HttpContent.content:()Lio/netty/buffer/ByteBuf;
     109: astore        6
     111: aload         6
     113: invokevirtual #26                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
     116: ifeq          145
     119: aload_0
     120: getfield      #5                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
     123: invokeinterface #27,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getResponseBodyPartFactory:()Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;
     128: aload         6
     130: iconst_0
     131: invokevirtual #28                 // Method org/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory.newResponseBodyPart:(Lio/netty/buffer/ByteBuf;Z)Lorg/asynchttpclient/HttpResponseBodyPart;
     134: astore        7
     136: aload_1
     137: aload         7
     139: invokeinterface #29,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     144: pop
     145: aload_2
     146: instanceof    #17                 // class io/netty/handler/codec/http/LastHttpContent
     149: ifeq          184
     152: aload_1
     153: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
     158: aload         5
     160: invokeinterface #31,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     165: pop
     166: aload_1
     167: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
     172: pop
     173: aload_0
     174: aload_3
     175: aload         5
     177: invokevirtual #23                 // Method org/asynchttpclient/netty/handler/StreamedResponsePublisher.future:()Lorg/asynchttpclient/netty/NettyResponseFuture;
     180: aload_2
     181: invokevirtual #21                 // Method handleRead:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Object;)V
     184: goto          233
     187: aload_0
     188: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
     191: new           #33                 // class java/lang/StringBuilder
     194: dup
     195: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     198: ldc           #35                 // String Received unexpected message while expecting a chunk:
     200: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload_2
     204: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     207: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: invokeinterface #39,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     215: aload_1
     216: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
     221: aload         5
     223: invokeinterface #31,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     228: pop
     229: aload_3
     230: invokestatic  #40                 // Method org/asynchttpclient/netty/channel/Channels.setDiscard:(Lio/netty/channel/Channel;)V
     233: goto          276
     236: aload         4
     238: getstatic     #41                 // Field org/asynchttpclient/netty/DiscardEvent.DISCARD:Lorg/asynchttpclient/netty/DiscardEvent;
     241: if_acmpeq     276
     244: aload_0
     245: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
     248: ldc           #42                 // String Orphan channel {} with attribute {} received message {}, closing
     250: iconst_3
     251: anewarray     #43                 // class java/lang/Object
     254: dup
     255: iconst_0
     256: aload_3
     257: aastore
     258: dup
     259: iconst_1
     260: aload         4
     262: aastore
     263: dup
     264: iconst_2
     265: aload_2
     266: aastore
     267: invokeinterface #44,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     272: aload_3
     273: invokestatic  #45                 // Method org/asynchttpclient/netty/channel/Channels.silentlyCloseChannel:(Lio/netty/channel/Channel;)V
     276: aload_2
     277: invokestatic  #46                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     280: pop
     281: goto          294
     284: astore        8
     286: aload_2
     287: invokestatic  #46                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     290: pop
     291: aload         8
     293: athrow
     294: return
    Exception table:
       from    to  target type
          13   276   284   any
         284   286   284   any

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
       4: invokevirtual #47                 // Method org/asynchttpclient/netty/request/NettyRequestSender.isClosed:()Z
       7: ifeq          11
      10: return
      11: aload_1
      12: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      17: astore_2
      18: aload_0
      19: getfield      #6                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      22: aload_2
      23: invokevirtual #48                 // Method org/asynchttpclient/netty/channel/ChannelManager.removeAll:(Lio/netty/channel/Channel;)V
      26: aload_2
      27: invokestatic  #15                 // Method org/asynchttpclient/netty/channel/Channels.getAttribute:(Lio/netty/channel/Channel;)Ljava/lang/Object;
      30: astore_3
      31: aload_0
      32: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
      35: ldc           #49                 // String Channel Closed: {} with attribute {}
      37: aload_2
      38: aload_3
      39: invokeinterface #50,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      44: aload_3
      45: instanceof    #22                 // class org/asynchttpclient/netty/handler/StreamedResponsePublisher
      48: ifeq          59
      51: aload_3
      52: checkcast     #22                 // class org/asynchttpclient/netty/handler/StreamedResponsePublisher
      55: invokevirtual #23                 // Method org/asynchttpclient/netty/handler/StreamedResponsePublisher.future:()Lorg/asynchttpclient/netty/NettyResponseFuture;
      58: astore_3
      59: aload_3
      60: instanceof    #16                 // class org/asynchttpclient/netty/OnLastHttpContentCallback
      63: ifeq          89
      66: aload_3
      67: checkcast     #16                 // class org/asynchttpclient/netty/OnLastHttpContentCallback
      70: astore        4
      72: aload_2
      73: aload         4
      75: invokevirtual #51                 // Method org/asynchttpclient/netty/OnLastHttpContentCallback.future:()Lorg/asynchttpclient/netty/NettyResponseFuture;
      78: invokestatic  #52                 // Method org/asynchttpclient/netty/channel/Channels.setAttribute:(Lio/netty/channel/Channel;Ljava/lang/Object;)V
      81: aload         4
      83: invokevirtual #18                 // Method org/asynchttpclient/netty/OnLastHttpContentCallback.call:()V
      86: goto          147
      89: aload_3
      90: instanceof    #19                 // class org/asynchttpclient/netty/NettyResponseFuture
      93: ifeq          147
      96: aload_3
      97: checkcast     #19                 // class org/asynchttpclient/netty/NettyResponseFuture
     100: astore        4
     102: aload         4
     104: invokevirtual #20                 // Method org/asynchttpclient/netty/NettyResponseFuture.touch:()V
     107: aload_0
     108: getfield      #13                 // Field hasIOExceptionFilters:Z
     111: ifeq          131
     114: aload_0
     115: getfield      #7                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
     118: aload         4
     120: getstatic     #53                 // Field org/asynchttpclient/exception/ChannelClosedException.INSTANCE:Lorg/asynchttpclient/exception/ChannelClosedException;
     123: aload_2
     124: invokevirtual #54                 // Method org/asynchttpclient/netty/request/NettyRequestSender.applyIoExceptionFiltersAndReplayRequest:(Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/io/IOException;Lio/netty/channel/Channel;)Z
     127: ifeq          131
     130: return
     131: aload_0
     132: aload         4
     134: invokevirtual #55                 // Method handleChannelInactive:(Lorg/asynchttpclient/netty/NettyResponseFuture;)V
     137: aload_0
     138: getfield      #7                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
     141: aload_2
     142: aload         4
     144: invokevirtual #56                 // Method org/asynchttpclient/netty/request/NettyRequestSender.handleUnexpectedClosedChannel:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;)V
     147: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_2
       1: invokestatic  #57                 // Method org/asynchttpclient/util/MiscUtils.getCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
       4: astore_3
       5: aload_3
       6: instanceof    #58                 // class io/netty/handler/codec/PrematureChannelClosureException
       9: ifne          19
      12: aload_3
      13: instanceof    #59                 // class java/nio/channels/ClosedChannelException
      16: ifeq          20
      19: return
      20: aload_1
      21: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      26: astore        4
      28: aconst_null
      29: astore        5
      31: aload_0
      32: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
      35: ldc           #60                 // String Unexpected I/O exception on channel {}
      37: aload         4
      39: aload_3
      40: invokeinterface #50,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      45: aload         4
      47: invokestatic  #15                 // Method org/asynchttpclient/netty/channel/Channels.getAttribute:(Lio/netty/channel/Channel;)Ljava/lang/Object;
      50: astore        6
      52: aload         6
      54: instanceof    #22                 // class org/asynchttpclient/netty/handler/StreamedResponsePublisher
      57: ifeq          78
      60: aload_1
      61: aload_2
      62: invokeinterface #61,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      67: pop
      68: aload         6
      70: checkcast     #22                 // class org/asynchttpclient/netty/handler/StreamedResponsePublisher
      73: invokevirtual #23                 // Method org/asynchttpclient/netty/handler/StreamedResponsePublisher.future:()Lorg/asynchttpclient/netty/NettyResponseFuture;
      76: astore        6
      78: aload         6
      80: instanceof    #19                 // class org/asynchttpclient/netty/NettyResponseFuture
      83: ifeq          169
      86: aload         6
      88: checkcast     #19                 // class org/asynchttpclient/netty/NettyResponseFuture
      91: astore        5
      93: aload         5
      95: aconst_null
      96: iconst_0
      97: invokevirtual #62                 // Method org/asynchttpclient/netty/NettyResponseFuture.attachChannel:(Lio/netty/channel/Channel;Z)V
     100: aload         5
     102: invokevirtual #20                 // Method org/asynchttpclient/netty/NettyResponseFuture.touch:()V
     105: aload_3
     106: instanceof    #63                 // class java/io/IOException
     109: ifeq          142
     112: aload_0
     113: getfield      #13                 // Field hasIOExceptionFilters:Z
     116: ifeq          142
     119: aload_0
     120: getfield      #7                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
     123: aload         5
     125: getstatic     #53                 // Field org/asynchttpclient/exception/ChannelClosedException.INSTANCE:Lorg/asynchttpclient/exception/ChannelClosedException;
     128: aload         4
     130: invokevirtual #54                 // Method org/asynchttpclient/netty/request/NettyRequestSender.applyIoExceptionFiltersAndReplayRequest:(Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/io/IOException;Lio/netty/channel/Channel;)Z
     133: ifne          141
     136: aload         4
     138: invokestatic  #45                 // Method org/asynchttpclient/netty/channel/Channels.silentlyCloseChannel:(Lio/netty/channel/Channel;)V
     141: return
     142: aload_3
     143: invokestatic  #64                 // Method org/asynchttpclient/netty/future/StackTraceInspector.recoverOnReadOrWriteException:(Ljava/lang/Throwable;)Z
     146: ifeq          192
     149: aload_0
     150: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
     153: ldc           #65                 // String Trying to recover from dead Channel: {}
     155: aload         4
     157: invokeinterface #66,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     162: aload         5
     164: aload_3
     165: putfield      #67                 // Field org/asynchttpclient/netty/NettyResponseFuture.pendingException:Ljava/lang/Throwable;
     168: return
     169: aload         6
     171: instanceof    #16                 // class org/asynchttpclient/netty/OnLastHttpContentCallback
     174: ifeq          192
     177: ldc           #16                 // class org/asynchttpclient/netty/OnLastHttpContentCallback
     179: aload         6
     181: invokevirtual #68                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     184: checkcast     #16                 // class org/asynchttpclient/netty/OnLastHttpContentCallback
     187: invokevirtual #51                 // Method org/asynchttpclient/netty/OnLastHttpContentCallback.future:()Lorg/asynchttpclient/netty/NettyResponseFuture;
     190: astore        5
     192: goto          200
     195: astore        6
     197: aload         6
     199: astore_3
     200: aload         5
     202: ifnull        258
     205: aload_0
     206: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
     209: ldc           #70                 // String Was unable to recover Future: {}
     211: aload         5
     213: invokeinterface #66,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     218: aload_0
     219: getfield      #7                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
     222: aload         4
     224: aload         5
     226: aload_3
     227: invokevirtual #71                 // Method org/asynchttpclient/netty/request/NettyRequestSender.abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
     230: aload_0
     231: aload         5
     233: aload_2
     234: invokevirtual #72                 // Method handleException:(Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
     237: goto          258
     240: astore        6
     242: aload_0
     243: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
     246: aload         6
     248: invokevirtual #73                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     251: aload         6
     253: invokeinterface #74,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     258: aload_0
     259: getfield      #6                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
     262: aload         4
     264: invokevirtual #75                 // Method org/asynchttpclient/netty/channel/ChannelManager.closeChannel:(Lio/netty/channel/Channel;)V
     267: aload         4
     269: invokestatic  #45                 // Method org/asynchttpclient/netty/channel/Channels.silentlyCloseChannel:(Lio/netty/channel/Channel;)V
     272: return
    Exception table:
       from    to  target type
          45   141   195   Class java/lang/Throwable
         142   168   195   Class java/lang/Throwable
         169   192   195   Class java/lang/Throwable
         205   237   240   Class java/lang/Throwable

  public void channelActive(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
       6: pop
       7: return

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #76                 // Method isHandledByReactiveStreams:(Lio/netty/channel/ChannelHandlerContext;)Z
       5: ifne          18
       8: aload_1
       9: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      14: pop
      15: goto          25
      18: aload_1
      19: invokeinterface #77,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      24: pop
      25: return

  private boolean isHandledByReactiveStreams(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokestatic  #15                 // Method org/asynchttpclient/netty/channel/Channels.getAttribute:(Lio/netty/channel/Channel;)Ljava/lang/Object;
       9: instanceof    #22                 // class org/asynchttpclient/netty/handler/StreamedResponsePublisher
      12: ireturn

  void finishUpdate(org.asynchttpclient.netty.NettyResponseFuture<?>, io.netty.channel.Channel, boolean);
    Code:
       0: aload_1
       1: invokevirtual #78                 // Method org/asynchttpclient/netty/NettyResponseFuture.cancelTimeouts:()V
       4: iload_3
       5: ifeq          19
       8: aload_0
       9: getfield      #6                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      12: aload_2
      13: invokevirtual #75                 // Method org/asynchttpclient/netty/channel/ChannelManager.closeChannel:(Lio/netty/channel/Channel;)V
      16: goto          36
      19: aload_0
      20: getfield      #6                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      23: aload_2
      24: aload_1
      25: invokevirtual #79                 // Method org/asynchttpclient/netty/NettyResponseFuture.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
      28: iconst_1
      29: aload_1
      30: invokevirtual #80                 // Method org/asynchttpclient/netty/NettyResponseFuture.getPartitionKey:()Ljava/lang/Object;
      33: invokevirtual #81                 // Method org/asynchttpclient/netty/channel/ChannelManager.tryToOfferChannelToPool:(Lio/netty/channel/Channel;Lorg/asynchttpclient/AsyncHandler;ZLjava/lang/Object;)V
      36: aload_1
      37: invokevirtual #82                 // Method org/asynchttpclient/netty/NettyResponseFuture.done:()V
      40: goto          61
      43: astore        4
      45: aload_0
      46: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
      49: aload         4
      51: invokevirtual #84                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      54: aload         4
      56: invokeinterface #85,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      61: return
    Exception table:
       from    to  target type
          36    40    43   Class java/lang/Exception

  public abstract void handleRead(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, java.lang.Object) throws java.lang.Exception;

  public abstract void handleException(org.asynchttpclient.netty.NettyResponseFuture<?>, java.lang.Throwable);

  public abstract void handleChannelInactive(org.asynchttpclient.netty.NettyResponseFuture<?>);
}
