Compiled from "DefaultRequest.java"
public class org.asynchttpclient.DefaultRequest implements org.asynchttpclient.Request {
  public final org.asynchttpclient.proxy.ProxyServer proxyServer;

  private final java.lang.String method;

  private final org.asynchttpclient.uri.Uri uri;

  private final java.net.InetAddress address;

  private final java.net.InetAddress localAddress;

  private final io.netty.handler.codec.http.HttpHeaders headers;

  private final java.util.List<io.netty.handler.codec.http.cookie.Cookie> cookies;

  private final byte[] byteData;

  private final java.util.List<byte[]> compositeByteData;

  private final java.lang.String stringData;

  private final java.nio.ByteBuffer byteBufferData;

  private final java.io.InputStream streamData;

  private final org.asynchttpclient.request.body.generator.BodyGenerator bodyGenerator;

  private final java.util.List<org.asynchttpclient.Param> formParams;

  private final java.util.List<org.asynchttpclient.request.body.multipart.Part> bodyParts;

  private final java.lang.String virtualHost;

  private final org.asynchttpclient.Realm realm;

  private final java.io.File file;

  private final java.lang.Boolean followRedirect;

  private final int requestTimeout;

  private final int readTimeout;

  private final long rangeOffset;

  private final java.nio.charset.Charset charset;

  private final org.asynchttpclient.channel.ChannelPoolPartitioning channelPoolPartitioning;

  private final io.netty.resolver.NameResolver<java.net.InetAddress> nameResolver;

  private java.util.List<org.asynchttpclient.Param> queryParams;

  public org.asynchttpclient.DefaultRequest(java.lang.String, org.asynchttpclient.uri.Uri, java.net.InetAddress, java.net.InetAddress, io.netty.handler.codec.http.HttpHeaders, java.util.List<io.netty.handler.codec.http.cookie.Cookie>, byte[], java.util.List<byte[]>, java.lang.String, java.nio.ByteBuffer, java.io.InputStream, org.asynchttpclient.request.body.generator.BodyGenerator, java.util.List<org.asynchttpclient.Param>, java.util.List<org.asynchttpclient.request.body.multipart.Part>, java.lang.String, org.asynchttpclient.proxy.ProxyServer, org.asynchttpclient.Realm, java.io.File, java.lang.Boolean, int, int, long, java.nio.charset.Charset, org.asynchttpclient.channel.ChannelPoolPartitioning, io.netty.resolver.NameResolver<java.net.InetAddress>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field method:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field uri:Lorg/asynchttpclient/uri/Uri;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field address:Ljava/net/InetAddress;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field localAddress:Ljava/net/InetAddress;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field cookies:Ljava/util/List;
      37: aload_0
      38: aload         7
      40: putfield      #8                  // Field byteData:[B
      43: aload_0
      44: aload         8
      46: putfield      #9                  // Field compositeByteData:Ljava/util/List;
      49: aload_0
      50: aload         9
      52: putfield      #10                 // Field stringData:Ljava/lang/String;
      55: aload_0
      56: aload         10
      58: putfield      #11                 // Field byteBufferData:Ljava/nio/ByteBuffer;
      61: aload_0
      62: aload         11
      64: putfield      #12                 // Field streamData:Ljava/io/InputStream;
      67: aload_0
      68: aload         12
      70: putfield      #13                 // Field bodyGenerator:Lorg/asynchttpclient/request/body/generator/BodyGenerator;
      73: aload_0
      74: aload         13
      76: putfield      #14                 // Field formParams:Ljava/util/List;
      79: aload_0
      80: aload         14
      82: putfield      #15                 // Field bodyParts:Ljava/util/List;
      85: aload_0
      86: aload         15
      88: putfield      #16                 // Field virtualHost:Ljava/lang/String;
      91: aload_0
      92: aload         16
      94: putfield      #17                 // Field proxyServer:Lorg/asynchttpclient/proxy/ProxyServer;
      97: aload_0
      98: aload         17
     100: putfield      #18                 // Field realm:Lorg/asynchttpclient/Realm;
     103: aload_0
     104: aload         18
     106: putfield      #19                 // Field file:Ljava/io/File;
     109: aload_0
     110: aload         19
     112: putfield      #20                 // Field followRedirect:Ljava/lang/Boolean;
     115: aload_0
     116: iload         20
     118: putfield      #21                 // Field requestTimeout:I
     121: aload_0
     122: iload         21
     124: putfield      #22                 // Field readTimeout:I
     127: aload_0
     128: lload         22
     130: putfield      #23                 // Field rangeOffset:J
     133: aload_0
     134: aload         24
     136: putfield      #24                 // Field charset:Ljava/nio/charset/Charset;
     139: aload_0
     140: aload         25
     142: putfield      #25                 // Field channelPoolPartitioning:Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
     145: aload_0
     146: aload         26
     148: putfield      #26                 // Field nameResolver:Lio/netty/resolver/NameResolver;
     151: return

  public java.lang.String getUrl();
    Code:
       0: aload_0
       1: getfield      #3                  // Field uri:Lorg/asynchttpclient/uri/Uri;
       4: invokevirtual #27                 // Method org/asynchttpclient/uri/Uri.toUrl:()Ljava/lang/String;
       7: areturn

  public java.lang.String getMethod();
    Code:
       0: aload_0
       1: getfield      #2                  // Field method:Ljava/lang/String;
       4: areturn

  public org.asynchttpclient.uri.Uri getUri();
    Code:
       0: aload_0
       1: getfield      #3                  // Field uri:Lorg/asynchttpclient/uri/Uri;
       4: areturn

  public java.net.InetAddress getAddress();
    Code:
       0: aload_0
       1: getfield      #4                  // Field address:Ljava/net/InetAddress;
       4: areturn

  public java.net.InetAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field localAddress:Ljava/net/InetAddress;
       4: areturn

  public io.netty.handler.codec.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #6                  // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
       4: areturn

  public java.util.List<io.netty.handler.codec.http.cookie.Cookie> getCookies();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cookies:Ljava/util/List;
       4: areturn

  public byte[] getByteData();
    Code:
       0: aload_0
       1: getfield      #8                  // Field byteData:[B
       4: areturn

  public java.util.List<byte[]> getCompositeByteData();
    Code:
       0: aload_0
       1: getfield      #9                  // Field compositeByteData:Ljava/util/List;
       4: areturn

  public java.lang.String getStringData();
    Code:
       0: aload_0
       1: getfield      #10                 // Field stringData:Ljava/lang/String;
       4: areturn

  public java.nio.ByteBuffer getByteBufferData();
    Code:
       0: aload_0
       1: getfield      #11                 // Field byteBufferData:Ljava/nio/ByteBuffer;
       4: areturn

  public java.io.InputStream getStreamData();
    Code:
       0: aload_0
       1: getfield      #12                 // Field streamData:Ljava/io/InputStream;
       4: areturn

  public org.asynchttpclient.request.body.generator.BodyGenerator getBodyGenerator();
    Code:
       0: aload_0
       1: getfield      #13                 // Field bodyGenerator:Lorg/asynchttpclient/request/body/generator/BodyGenerator;
       4: areturn

  public java.util.List<org.asynchttpclient.Param> getFormParams();
    Code:
       0: aload_0
       1: getfield      #14                 // Field formParams:Ljava/util/List;
       4: areturn

  public java.util.List<org.asynchttpclient.request.body.multipart.Part> getBodyParts();
    Code:
       0: aload_0
       1: getfield      #15                 // Field bodyParts:Ljava/util/List;
       4: areturn

  public java.lang.String getVirtualHost();
    Code:
       0: aload_0
       1: getfield      #16                 // Field virtualHost:Ljava/lang/String;
       4: areturn

  public org.asynchttpclient.proxy.ProxyServer getProxyServer();
    Code:
       0: aload_0
       1: getfield      #17                 // Field proxyServer:Lorg/asynchttpclient/proxy/ProxyServer;
       4: areturn

  public org.asynchttpclient.Realm getRealm();
    Code:
       0: aload_0
       1: getfield      #18                 // Field realm:Lorg/asynchttpclient/Realm;
       4: areturn

  public java.io.File getFile();
    Code:
       0: aload_0
       1: getfield      #19                 // Field file:Ljava/io/File;
       4: areturn

  public java.lang.Boolean getFollowRedirect();
    Code:
       0: aload_0
       1: getfield      #20                 // Field followRedirect:Ljava/lang/Boolean;
       4: areturn

  public int getRequestTimeout();
    Code:
       0: aload_0
       1: getfield      #21                 // Field requestTimeout:I
       4: ireturn

  public int getReadTimeout();
    Code:
       0: aload_0
       1: getfield      #22                 // Field readTimeout:I
       4: ireturn

  public long getRangeOffset();
    Code:
       0: aload_0
       1: getfield      #23                 // Field rangeOffset:J
       4: lreturn

  public java.nio.charset.Charset getCharset();
    Code:
       0: aload_0
       1: getfield      #24                 // Field charset:Ljava/nio/charset/Charset;
       4: areturn

  public org.asynchttpclient.channel.ChannelPoolPartitioning getChannelPoolPartitioning();
    Code:
       0: aload_0
       1: getfield      #25                 // Field channelPoolPartitioning:Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
       4: areturn

  public io.netty.resolver.NameResolver<java.net.InetAddress> getNameResolver();
    Code:
       0: aload_0
       1: getfield      #26                 // Field nameResolver:Lio/netty/resolver/NameResolver;
       4: areturn

  public java.util.List<org.asynchttpclient.Param> getQueryParams();
    Code:
       0: aload_0
       1: getfield      #28                 // Field queryParams:Ljava/util/List;
       4: ifnonnull     147
       7: aload_0
       8: getfield      #3                  // Field uri:Lorg/asynchttpclient/uri/Uri;
      11: invokevirtual #29                 // Method org/asynchttpclient/uri/Uri.getQuery:()Ljava/lang/String;
      14: invokestatic  #30                 // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/lang/String;)Z
      17: ifeq          140
      20: aload_0
      21: new           #31                 // class java/util/ArrayList
      24: dup
      25: iconst_1
      26: invokespecial #32                 // Method java/util/ArrayList."<init>":(I)V
      29: putfield      #28                 // Field queryParams:Ljava/util/List;
      32: aload_0
      33: getfield      #3                  // Field uri:Lorg/asynchttpclient/uri/Uri;
      36: invokevirtual #29                 // Method org/asynchttpclient/uri/Uri.getQuery:()Ljava/lang/String;
      39: ldc           #33                 // String &
      41: invokevirtual #34                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      44: astore_1
      45: aload_1
      46: arraylength
      47: istore_2
      48: iconst_0
      49: istore_3
      50: iload_3
      51: iload_2
      52: if_icmpge     137
      55: aload_1
      56: iload_3
      57: aaload
      58: astore        4
      60: aload         4
      62: bipush        61
      64: invokevirtual #35                 // Method java/lang/String.indexOf:(I)I
      67: istore        5
      69: iload         5
      71: ifgt          97
      74: aload_0
      75: getfield      #28                 // Field queryParams:Ljava/util/List;
      78: new           #36                 // class org/asynchttpclient/Param
      81: dup
      82: aload         4
      84: aconst_null
      85: invokespecial #37                 // Method org/asynchttpclient/Param."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      88: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      93: pop
      94: goto          131
      97: aload_0
      98: getfield      #28                 // Field queryParams:Ljava/util/List;
     101: new           #36                 // class org/asynchttpclient/Param
     104: dup
     105: aload         4
     107: iconst_0
     108: iload         5
     110: invokevirtual #39                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     113: aload         4
     115: iload         5
     117: iconst_1
     118: iadd
     119: invokevirtual #40                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     122: invokespecial #37                 // Method org/asynchttpclient/Param."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     125: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     130: pop
     131: iinc          3, 1
     134: goto          50
     137: goto          147
     140: aload_0
     141: invokestatic  #41                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     144: putfield      #28                 // Field queryParams:Ljava/util/List;
     147: aload_0
     148: getfield      #28                 // Field queryParams:Ljava/util/List;
     151: areturn

  public java.lang.String toString();
    Code:
       0: new           #42                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #43                 // Method getUrl:()Ljava/lang/String;
       8: invokespecial #44                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      11: astore_1
      12: aload_1
      13: ldc           #45                 // String \t
      15: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: pop
      19: aload_1
      20: aload_0
      21: getfield      #2                  // Field method:Ljava/lang/String;
      24: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: pop
      28: aload_1
      29: ldc           #47                 // String \theaders:
      31: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: pop
      35: aload_0
      36: getfield      #6                  // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      39: invokevirtual #48                 // Method io/netty/handler/codec/http/HttpHeaders.isEmpty:()Z
      42: ifne          117
      45: aload_0
      46: getfield      #6                  // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      49: invokevirtual #49                 // Method io/netty/handler/codec/http/HttpHeaders.iterator:()Ljava/util/Iterator;
      52: astore_2
      53: aload_2
      54: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          117
      62: aload_2
      63: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #52                 // class java/util/Map$Entry
      71: astore_3
      72: aload_1
      73: ldc           #45                 // String \t
      75: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: pop
      79: aload_1
      80: aload_3
      81: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      86: checkcast     #54                 // class java/lang/String
      89: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_1
      94: ldc           #55                 // String :
      96: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: pop
     100: aload_1
     101: aload_3
     102: invokeinterface #56,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     107: checkcast     #54                 // class java/lang/String
     110: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: pop
     114: goto          53
     117: aload_0
     118: getfield      #14                 // Field formParams:Ljava/util/List;
     121: invokestatic  #57                 // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/util/Collection;)Z
     124: ifeq          198
     127: aload_1
     128: ldc           #58                 // String \tformParams:
     130: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: pop
     134: aload_0
     135: getfield      #14                 // Field formParams:Ljava/util/List;
     138: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     143: astore_2
     144: aload_2
     145: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     150: ifeq          198
     153: aload_2
     154: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     159: checkcast     #36                 // class org/asynchttpclient/Param
     162: astore_3
     163: aload_1
     164: ldc           #45                 // String \t
     166: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: pop
     170: aload_1
     171: aload_3
     172: invokevirtual #60                 // Method org/asynchttpclient/Param.getName:()Ljava/lang/String;
     175: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: pop
     179: aload_1
     180: ldc           #55                 // String :
     182: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: pop
     186: aload_1
     187: aload_3
     188: invokevirtual #61                 // Method org/asynchttpclient/Param.getValue:()Ljava/lang/String;
     191: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: pop
     195: goto          144
     198: aload_1
     199: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     202: areturn
}
