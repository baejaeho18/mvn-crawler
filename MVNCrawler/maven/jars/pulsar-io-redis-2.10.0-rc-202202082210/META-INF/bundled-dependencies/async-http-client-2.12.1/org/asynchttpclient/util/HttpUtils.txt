Compiled from "HttpUtils.java"
public class org.asynchttpclient.util.HttpUtils {
  public static final io.netty.util.AsciiString ACCEPT_ALL_HEADER_VALUE;

  public static final io.netty.util.AsciiString GZIP_DEFLATE;

  private static final java.lang.String CONTENT_TYPE_CHARSET_ATTRIBUTE;

  private static final java.lang.String CONTENT_TYPE_BOUNDARY_ATTRIBUTE;

  private static final java.lang.String BROTLY_ACCEPT_ENCODING_SUFFIX;

  private static byte[] MULTIPART_CHARS;

  private org.asynchttpclient.util.HttpUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String hostHeader(org.asynchttpclient.uri.Uri);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/asynchttpclient/uri/Uri.getHost:()Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: invokevirtual #3                  // Method org/asynchttpclient/uri/Uri.getPort:()I
       9: istore_2
      10: iload_2
      11: iconst_m1
      12: if_icmpeq     23
      15: iload_2
      16: aload_0
      17: invokevirtual #4                  // Method org/asynchttpclient/uri/Uri.getSchemeDefaultPort:()I
      20: if_icmpne     27
      23: aload_1
      24: goto          50
      27: new           #5                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      34: aload_1
      35: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #8                  // String :
      40: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: iload_2
      44: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: areturn

  public static java.lang.String originHeader(org.asynchttpclient.uri.Uri);
    Code:
       0: getstatic     #11                 // Field org/asynchttpclient/util/StringBuilderPool.DEFAULT:Lorg/asynchttpclient/util/StringBuilderPool;
       3: invokevirtual #12                 // Method org/asynchttpclient/util/StringBuilderPool.stringBuilder:()Ljava/lang/StringBuilder;
       6: astore_1
       7: aload_1
       8: aload_0
       9: invokevirtual #13                 // Method org/asynchttpclient/uri/Uri.isSecured:()Z
      12: ifeq          20
      15: ldc           #14                 // String https://
      17: goto          22
      20: ldc           #15                 // String http://
      22: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: invokevirtual #2                  // Method org/asynchttpclient/uri/Uri.getHost:()Ljava/lang/String;
      29: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: pop
      33: aload_0
      34: invokevirtual #16                 // Method org/asynchttpclient/uri/Uri.getExplicitPort:()I
      37: aload_0
      38: invokevirtual #4                  // Method org/asynchttpclient/uri/Uri.getSchemeDefaultPort:()I
      41: if_icmpeq     58
      44: aload_1
      45: bipush        58
      47: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      50: aload_0
      51: invokevirtual #3                  // Method org/asynchttpclient/uri/Uri.getPort:()I
      54: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: pop
      58: aload_1
      59: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: areturn

  public static java.nio.charset.Charset extractContentTypeCharsetAttribute(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #19                 // String charset=
       3: invokestatic  #20                 // Method extractContentTypeAttribute:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      15: goto          19
      18: aconst_null
      19: areturn

  public static java.lang.String extractContentTypeBoundaryAttribute(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #22                 // String boundary=
       3: invokestatic  #20                 // Method extractContentTypeAttribute:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  private static java.lang.String extractContentTypeAttribute(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: iconst_0
       7: istore_2
       8: iload_2
       9: aload_0
      10: invokevirtual #23                 // Method java/lang/String.length:()I
      13: if_icmpge     164
      16: aload_0
      17: iconst_1
      18: iload_2
      19: aload_1
      20: iconst_0
      21: aload_1
      22: invokevirtual #23                 // Method java/lang/String.length:()I
      25: invokevirtual #24                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      28: ifeq          158
      31: iload_2
      32: aload_1
      33: invokevirtual #23                 // Method java/lang/String.length:()I
      36: iadd
      37: istore_3
      38: iload_3
      39: aload_0
      40: invokevirtual #23                 // Method java/lang/String.length:()I
      43: if_icmpge     80
      46: aload_0
      47: iload_3
      48: invokevirtual #25                 // Method java/lang/String.charAt:(I)C
      51: istore        4
      53: iload         4
      55: bipush        32
      57: if_icmpeq     74
      60: iload         4
      62: bipush        39
      64: if_icmpeq     74
      67: iload         4
      69: bipush        34
      71: if_icmpne     80
      74: iinc          3, 1
      77: goto          38
      80: iload_3
      81: aload_0
      82: invokevirtual #23                 // Method java/lang/String.length:()I
      85: if_icmpne     91
      88: goto          164
      91: iload_3
      92: iconst_1
      93: iadd
      94: istore        4
      96: iload         4
      98: aload_0
      99: invokevirtual #23                 // Method java/lang/String.length:()I
     102: if_icmpge     150
     105: aload_0
     106: iload         4
     108: invokevirtual #25                 // Method java/lang/String.charAt:(I)C
     111: istore        5
     113: iload         5
     115: bipush        32
     117: if_icmpeq     150
     120: iload         5
     122: bipush        39
     124: if_icmpeq     150
     127: iload         5
     129: bipush        34
     131: if_icmpeq     150
     134: iload         5
     136: bipush        59
     138: if_icmpne     144
     141: goto          150
     144: iinc          4, 1
     147: goto          96
     150: aload_0
     151: iload_3
     152: iload         4
     154: invokevirtual #26                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     157: areturn
     158: iinc          2, 1
     161: goto          8
     164: aconst_null
     165: areturn

  public static byte[] computeMultipartBoundary();
    Code:
       0: invokestatic  #27                 // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
       3: astore_0
       4: aload_0
       5: bipush        11
       7: invokevirtual #28                 // Method java/util/concurrent/ThreadLocalRandom.nextInt:(I)I
      10: bipush        30
      12: iadd
      13: newarray       byte
      15: astore_1
      16: iconst_0
      17: istore_2
      18: iload_2
      19: aload_1
      20: arraylength
      21: if_icmpge     45
      24: aload_1
      25: iload_2
      26: getstatic     #29                 // Field MULTIPART_CHARS:[B
      29: aload_0
      30: getstatic     #29                 // Field MULTIPART_CHARS:[B
      33: arraylength
      34: invokevirtual #28                 // Method java/util/concurrent/ThreadLocalRandom.nextInt:(I)I
      37: baload
      38: bastore
      39: iinc          2, 1
      42: goto          18
      45: aload_1
      46: areturn

  public static java.lang.String patchContentTypeWithBoundaryAttribute(java.lang.CharSequence, byte[]);
    Code:
       0: getstatic     #11                 // Field org/asynchttpclient/util/StringBuilderPool.DEFAULT:Lorg/asynchttpclient/util/StringBuilderPool;
       3: invokevirtual #12                 // Method org/asynchttpclient/util/StringBuilderPool.stringBuilder:()Ljava/lang/StringBuilder;
       6: aload_0
       7: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      10: astore_2
      11: aload_0
      12: invokeinterface #31,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      17: ifeq          46
      20: aload_0
      21: aload_0
      22: invokeinterface #31,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      27: iconst_1
      28: isub
      29: invokeinterface #32,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      34: bipush        59
      36: if_icmpeq     46
      39: aload_2
      40: bipush        59
      42: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      45: pop
      46: aload_2
      47: bipush        32
      49: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      52: ldc           #22                 // String boundary=
      54: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: new           #33                 // class java/lang/String
      60: dup
      61: aload_1
      62: getstatic     #34                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      65: invokespecial #35                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      68: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: areturn

  public static boolean followRedirect(org.asynchttpclient.AsyncHttpClientConfig, org.asynchttpclient.Request);
    Code:
       0: aload_1
       1: invokeinterface #36,  1           // InterfaceMethod org/asynchttpclient/Request.getFollowRedirect:()Ljava/lang/Boolean;
       6: ifnull        21
       9: aload_1
      10: invokeinterface #36,  1           // InterfaceMethod org/asynchttpclient/Request.getFollowRedirect:()Ljava/lang/Boolean;
      15: invokevirtual #37                 // Method java/lang/Boolean.booleanValue:()Z
      18: goto          27
      21: aload_0
      22: invokeinterface #38,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isFollowRedirect:()Z
      27: ireturn

  public static java.nio.ByteBuffer urlEncodeFormParams(java.util.List<org.asynchttpclient.Param>, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // Method urlEncodeFormParams0:(Ljava/util/List;Ljava/nio/charset/Charset;)Ljava/lang/StringBuilder;
       5: getstatic     #34                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
       8: invokestatic  #40                 // Method org/asynchttpclient/util/StringUtils.charSequence2ByteBuffer:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;
      11: areturn

  private static java.lang.StringBuilder urlEncodeFormParams0(java.util.List<org.asynchttpclient.Param>, java.nio.charset.Charset);
    Code:
       0: getstatic     #11                 // Field org/asynchttpclient/util/StringBuilderPool.DEFAULT:Lorg/asynchttpclient/util/StringBuilderPool;
       3: invokevirtual #12                 // Method org/asynchttpclient/util/StringBuilderPool.stringBuilder:()Ljava/lang/StringBuilder;
       6: astore_2
       7: aload_0
       8: invokeinterface #41,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          52
      23: aload_3
      24: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #44                 // class org/asynchttpclient/Param
      32: astore        4
      34: aload_2
      35: aload         4
      37: invokevirtual #45                 // Method org/asynchttpclient/Param.getName:()Ljava/lang/String;
      40: aload         4
      42: invokevirtual #46                 // Method org/asynchttpclient/Param.getValue:()Ljava/lang/String;
      45: aload_1
      46: invokestatic  #47                 // Method encodeAndAppendFormParam:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      49: goto          14
      52: aload_2
      53: aload_2
      54: invokevirtual #48                 // Method java/lang/StringBuilder.length:()I
      57: iconst_1
      58: isub
      59: invokevirtual #49                 // Method java/lang/StringBuilder.setLength:(I)V
      62: aload_2
      63: areturn

  private static void encodeAndAppendFormParam(java.lang.StringBuilder, java.lang.String, java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokestatic  #50                 // Method encodeAndAppendFormField:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/nio/charset/Charset;)V
       6: aload_2
       7: ifnull        23
      10: aload_0
      11: bipush        61
      13: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      16: pop
      17: aload_0
      18: aload_2
      19: aload_3
      20: invokestatic  #50                 // Method encodeAndAppendFormField:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      23: aload_0
      24: bipush        38
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      29: pop
      30: return

  private static void encodeAndAppendFormField(java.lang.StringBuilder, java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_2
       1: getstatic     #51                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       4: invokevirtual #52                 // Method java/nio/charset/Charset.equals:(Ljava/lang/Object;)Z
       7: ifeq          19
      10: aload_0
      11: aload_1
      12: invokestatic  #53                 // Method org/asynchttpclient/util/Utf8UrlEncoder.encodeAndAppendFormElement:(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      15: pop
      16: goto          36
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokevirtual #54                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      25: invokestatic  #55                 // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: pop
      32: goto          36
      35: astore_3
      36: return
    Exception table:
       from    to  target type
          19    32    35   Class java/io/UnsupportedEncodingException

  public static java.lang.CharSequence filterOutBrotliFromAcceptEncoding(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #57                 // String , br
       3: invokevirtual #58                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       6: ifeq          25
       9: aload_0
      10: iconst_0
      11: aload_0
      12: invokevirtual #23                 // Method java/lang/String.length:()I
      15: ldc           #57                 // String , br
      17: invokevirtual #23                 // Method java/lang/String.length:()I
      20: isub
      21: invokevirtual #59                 // Method java/lang/String.subSequence:(II)Ljava/lang/CharSequence;
      24: areturn
      25: aload_0
      26: areturn

  static {};
    Code:
       0: new           #60                 // class io/netty/util/AsciiString
       3: dup
       4: ldc           #61                 // String */*
       6: invokespecial #62                 // Method io/netty/util/AsciiString."<init>":(Ljava/lang/CharSequence;)V
       9: putstatic     #63                 // Field ACCEPT_ALL_HEADER_VALUE:Lio/netty/util/AsciiString;
      12: new           #60                 // class io/netty/util/AsciiString
      15: dup
      16: new           #5                  // class java/lang/StringBuilder
      19: dup
      20: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      23: getstatic     #64                 // Field io/netty/handler/codec/http/HttpHeaderValues.GZIP:Lio/netty/util/AsciiString;
      26: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #66                 // String ,
      31: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: getstatic     #67                 // Field io/netty/handler/codec/http/HttpHeaderValues.DEFLATE:Lio/netty/util/AsciiString;
      37: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #62                 // Method io/netty/util/AsciiString."<init>":(Ljava/lang/CharSequence;)V
      46: putstatic     #68                 // Field GZIP_DEFLATE:Lio/netty/util/AsciiString;
      49: ldc           #69                 // String -_1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
      51: getstatic     #34                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      54: invokevirtual #70                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      57: putstatic     #29                 // Field MULTIPART_CHARS:[B
      60: return
}
