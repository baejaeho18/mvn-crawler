Compiled from "ByteArrayMultipartPart.java"
public class org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart extends org.asynchttpclient.request.body.multipart.part.FileLikeMultipartPart<org.asynchttpclient.request.body.multipart.ByteArrayPart> {
  private final io.netty.buffer.ByteBuf contentBuffer;

  public org.asynchttpclient.request.body.multipart.part.ByteArrayMultipartPart(org.asynchttpclient.request.body.multipart.ByteArrayPart, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/asynchttpclient/request/body/multipart/part/FileLikeMultipartPart."<init>":(Lorg/asynchttpclient/request/body/multipart/FileLikePart;[B)V
       6: aload_0
       7: aload_1
       8: invokevirtual #2                  // Method org/asynchttpclient/request/body/multipart/ByteArrayPart.getBytes:()[B
      11: invokestatic  #3                  // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
      14: putfield      #4                  // Field contentBuffer:Lio/netty/buffer/ByteBuf;
      17: return

  protected long getContentLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
       4: checkcast     #6                  // class org/asynchttpclient/request/body/multipart/ByteArrayPart
       7: invokevirtual #2                  // Method org/asynchttpclient/request/body/multipart/ByteArrayPart.getBytes:()[B
      10: arraylength
      11: i2l
      12: lreturn

  protected long transferContentTo(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field contentBuffer:Lio/netty/buffer/ByteBuf;
       5: aload_1
       6: getstatic     #7                  // Field org/asynchttpclient/request/body/multipart/part/MultipartState.POST_CONTENT:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
       9: invokevirtual #8                  // Method transfer:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lorg/asynchttpclient/request/body/multipart/part/MultipartState;)J
      12: lreturn

  protected long transferContentTo(java.nio.channels.WritableByteChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field contentBuffer:Lio/netty/buffer/ByteBuf;
       5: aload_1
       6: getstatic     #7                  // Field org/asynchttpclient/request/body/multipart/part/MultipartState.POST_CONTENT:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
       9: invokevirtual #9                  // Method transfer:(Lio/netty/buffer/ByteBuf;Ljava/nio/channels/WritableByteChannel;Lorg/asynchttpclient/request/body/multipart/part/MultipartState;)J
      12: lreturn

  public void close();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method org/asynchttpclient/request/body/multipart/part/FileLikeMultipartPart.close:()V
       4: aload_0
       5: getfield      #4                  // Field contentBuffer:Lio/netty/buffer/ByteBuf;
       8: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.release:()Z
      11: pop
      12: return
}
