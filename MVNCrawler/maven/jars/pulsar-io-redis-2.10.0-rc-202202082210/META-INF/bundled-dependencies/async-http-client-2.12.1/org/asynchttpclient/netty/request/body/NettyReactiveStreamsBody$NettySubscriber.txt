Compiled from "NettyReactiveStreamsBody.java"
class org.asynchttpclient.netty.request.body.NettyReactiveStreamsBody$NettySubscriber extends com.typesafe.netty.HandlerSubscriber<io.netty.handler.codec.http.HttpContent> {
  private static final org.slf4j.Logger LOGGER;

  private static final org.reactivestreams.Subscription DO_NOT_DELAY;

  private final io.netty.channel.Channel channel;

  private final org.asynchttpclient.netty.NettyResponseFuture<?> future;

  private java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> deferredSubscription;

  org.asynchttpclient.netty.request.body.NettyReactiveStreamsBody$NettySubscriber(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2,  1            // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
       7: invokespecial #3                  // Method com/typesafe/netty/HandlerSubscriber."<init>":(Lio/netty/util/concurrent/EventExecutor;)V
      10: aload_0
      11: new           #4                  // class java/util/concurrent/atomic/AtomicReference
      14: dup
      15: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      18: putfield      #6                  // Field deferredSubscription:Ljava/util/concurrent/atomic/AtomicReference;
      21: aload_0
      22: aload_1
      23: putfield      #7                  // Field channel:Lio/netty/channel/Channel;
      26: aload_0
      27: aload_2
      28: putfield      #8                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
      31: return

  protected void complete();
    Code:
       0: aload_0
       1: getfield      #7                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #2,  1            // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
       9: aload_0
      10: invokedynamic #9,  0              // InvokeDynamic #0:run:(Lorg/asynchttpclient/netty/request/body/NettyReactiveStreamsBody$NettySubscriber;)Ljava/lang/Runnable;
      15: invokeinterface #10,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      20: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field deferredSubscription:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: aload_1
       6: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifne          17
      12: aload_0
      13: aload_1
      14: invokespecial #12                 // Method com/typesafe/netty/HandlerSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      17: return

  void delayedStart();
    Code:
       0: aload_0
       1: getfield      #6                  // Field deferredSubscription:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #13                 // Field DO_NOT_DELAY:Lorg/reactivestreams/Subscription;
       7: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class org/reactivestreams/Subscription
      13: astore_1
      14: aload_1
      15: ifnull        23
      18: aload_0
      19: aload_1
      20: invokespecial #12                 // Method com/typesafe/netty/HandlerSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      23: return

  protected void error(java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #16                 // String error
       3: invokestatic  #17                 // Method org/asynchttpclient/util/Assertions.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokespecial #18                 // Method removeFromPipeline:()V
      11: aload_0
      12: getfield      #8                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
      15: aload_1
      16: invokevirtual #19                 // Method org/asynchttpclient/netty/NettyResponseFuture.abort:(Ljava/lang/Throwable;)V
      19: return

  private void removeFromPipeline();
    Code:
       0: aload_0
       1: getfield      #7                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
       9: aload_0
      10: invokeinterface #21,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      15: pop
      16: getstatic     #22                 // Field LOGGER:Lorg/slf4j/Logger;
      19: ldc           #23                 // String Removed handler %s from pipeline.
      21: iconst_1
      22: anewarray     #24                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: ldc           #25                 // String request-body-streamer
      29: aastore
      30: invokestatic  #26                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: invokeinterface #27,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      38: goto          65
      41: astore_1
      42: getstatic     #22                 // Field LOGGER:Lorg/slf4j/Logger;
      45: ldc           #29                 // String Failed to remove handler %s from pipeline.
      47: iconst_1
      48: anewarray     #24                 // class java/lang/Object
      51: dup
      52: iconst_0
      53: ldc           #25                 // String request-body-streamer
      55: aastore
      56: invokestatic  #26                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      59: aload_1
      60: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      65: return
    Exception table:
       from    to  target type
           0    38    41   Class java/util/NoSuchElementException

  private void lambda$complete$1();
    Code:
       0: aload_0
       1: getfield      #7                  // Field channel:Lio/netty/channel/Channel;
       4: getstatic     #31                 // Field io/netty/handler/codec/http/LastHttpContent.EMPTY_LAST_CONTENT:Lio/netty/handler/codec/http/LastHttpContent;
       7: invokeinterface #32,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      12: aload_0
      13: invokedynamic #33,  0             // InvokeDynamic #1:operationComplete:(Lorg/asynchttpclient/netty/request/body/NettyReactiveStreamsBody$NettySubscriber;)Lio/netty/util/concurrent/GenericFutureListener;
      18: invokeinterface #34,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      23: pop
      24: return

  private void lambda$null$0(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #18                 // Method removeFromPipeline:()V
       4: return

  static {};
    Code:
       0: ldc           #35                 // class org/asynchttpclient/netty/request/body/NettyReactiveStreamsBody$NettySubscriber
       2: invokestatic  #36                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #22                 // Field LOGGER:Lorg/slf4j/Logger;
       8: new           #37                 // class org/asynchttpclient/netty/request/body/NettyReactiveStreamsBody$NettySubscriber$1
      11: dup
      12: invokespecial #38                 // Method org/asynchttpclient/netty/request/body/NettyReactiveStreamsBody$NettySubscriber$1."<init>":()V
      15: putstatic     #13                 // Field DO_NOT_DELAY:Lorg/reactivestreams/Subscription;
      18: return
}
