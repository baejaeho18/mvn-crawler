Compiled from "PropertiesBasedResumableProcessor.java"
public class org.asynchttpclient.handler.resumable.PropertiesBasedResumableProcessor implements org.asynchttpclient.handler.resumable.ResumableAsyncHandler$ResumableProcessor {
  private static final org.slf4j.Logger log;

  private static final java.io.File TMP;

  private static final java.lang.String storeName;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long> properties;

  public org.asynchttpclient.handler.resumable.PropertiesBasedResumableProcessor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field properties:Ljava/util/concurrent/ConcurrentHashMap;
      15: return

  private static java.lang.String append(java.util.Map$Entry<java.lang.String, java.lang.Long>);
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokeinterface #7,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      13: checkcast     #8                  // class java/lang/String
      16: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        61
      21: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokeinterface #11,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: bipush        10
      35: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      38: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn

  public void put(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field properties:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: lload_2
       6: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: invokevirtual #15                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: return

  public void remove(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_0
       5: getfield      #4                  // Field properties:Ljava/util/concurrent/ConcurrentHashMap;
       8: aload_1
       9: invokevirtual #16                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: return

  public void save(java.util.Map<java.lang.String, java.lang.Long>);
    Code:
       0: getstatic     #17                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #18                 // String Saving current download state {}
       5: aload_0
       6: getfield      #4                  // Field properties:Ljava/util/concurrent/ConcurrentHashMap;
       9: invokevirtual #19                 // Method java/util/concurrent/ConcurrentHashMap.toString:()Ljava/lang/String;
      12: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aconst_null
      18: astore_2
      19: getstatic     #21                 // Field TMP:Ljava/io/File;
      22: invokevirtual #22                 // Method java/io/File.exists:()Z
      25: ifne          69
      28: getstatic     #21                 // Field TMP:Ljava/io/File;
      31: invokevirtual #23                 // Method java/io/File.mkdirs:()Z
      34: ifne          69
      37: new           #24                 // class java/lang/IllegalStateException
      40: dup
      41: new           #5                  // class java/lang/StringBuilder
      44: dup
      45: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #25                 // String Unable to create directory:
      50: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: getstatic     #21                 // Field TMP:Ljava/io/File;
      56: invokevirtual #26                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      59: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: new           #28                 // class java/io/File
      72: dup
      73: getstatic     #21                 // Field TMP:Ljava/io/File;
      76: ldc           #30                 // String ResumableAsyncHandler.properties
      78: invokespecial #31                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      81: astore_3
      82: aload_3
      83: invokevirtual #22                 // Method java/io/File.exists:()Z
      86: ifne          126
      89: aload_3
      90: invokevirtual #32                 // Method java/io/File.createNewFile:()Z
      93: ifne          126
      96: new           #24                 // class java/lang/IllegalStateException
      99: dup
     100: new           #5                  // class java/lang/StringBuilder
     103: dup
     104: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     107: ldc           #33                 // String Unable to create temp file:
     109: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_3
     113: invokevirtual #26                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     116: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     125: athrow
     126: aload_3
     127: invokevirtual #34                 // Method java/io/File.canWrite:()Z
     130: ifne          141
     133: new           #24                 // class java/lang/IllegalStateException
     136: dup
     137: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":()V
     140: athrow
     141: aload_3
     142: invokevirtual #36                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
     145: iconst_0
     146: anewarray     #37                 // class java/nio/file/OpenOption
     149: invokestatic  #38                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
     152: astore_2
     153: aload_0
     154: getfield      #4                  // Field properties:Ljava/util/concurrent/ConcurrentHashMap;
     157: invokevirtual #39                 // Method java/util/concurrent/ConcurrentHashMap.entrySet:()Ljava/util/Set;
     160: invokeinterface #40,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     165: astore        4
     167: aload         4
     169: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     174: ifeq          207
     177: aload         4
     179: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     184: checkcast     #43                 // class java/util/Map$Entry
     187: astore        5
     189: aload_2
     190: aload         5
     192: invokestatic  #44                 // Method append:(Ljava/util/Map$Entry;)Ljava/lang/String;
     195: getstatic     #45                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     198: invokevirtual #46                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     201: invokevirtual #47                 // Method java/io/OutputStream.write:([B)V
     204: goto          167
     207: aload_2
     208: invokevirtual #48                 // Method java/io/OutputStream.flush:()V
     211: aload_2
     212: invokestatic  #49                 // Method org/asynchttpclient/util/MiscUtils.closeSilently:(Ljava/io/Closeable;)V
     215: goto          248
     218: astore_3
     219: getstatic     #17                 // Field log:Lorg/slf4j/Logger;
     222: aload_3
     223: invokevirtual #51                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     226: aload_3
     227: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     232: aload_2
     233: invokestatic  #49                 // Method org/asynchttpclient/util/MiscUtils.closeSilently:(Ljava/io/Closeable;)V
     236: goto          248
     239: astore        6
     241: aload_2
     242: invokestatic  #49                 // Method org/asynchttpclient/util/MiscUtils.closeSilently:(Ljava/io/Closeable;)V
     245: aload         6
     247: athrow
     248: return
    Exception table:
       from    to  target type
          19   211   218   Class java/lang/Throwable
          19   211   239   any
         218   232   239   any
         239   241   239   any

  public java.util.Map<java.lang.String, java.lang.Long> load();
    Code:
       0: aconst_null
       1: astore_1
       2: new           #53                 // class java/util/Scanner
       5: dup
       6: new           #28                 // class java/io/File
       9: dup
      10: getstatic     #21                 // Field TMP:Ljava/io/File;
      13: ldc           #30                 // String ResumableAsyncHandler.properties
      15: invokespecial #31                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      18: getstatic     #45                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      21: invokevirtual #54                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      24: invokespecial #55                 // Method java/util/Scanner."<init>":(Ljava/io/File;Ljava/lang/String;)V
      27: astore_1
      28: aload_1
      29: ldc           #56                 // String [=\n]
      31: invokevirtual #57                 // Method java/util/Scanner.useDelimiter:(Ljava/lang/String;)Ljava/util/Scanner;
      34: pop
      35: aload_1
      36: invokevirtual #58                 // Method java/util/Scanner.hasNext:()Z
      39: ifeq          74
      42: aload_1
      43: invokevirtual #59                 // Method java/util/Scanner.next:()Ljava/lang/String;
      46: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
      49: astore_2
      50: aload_1
      51: invokevirtual #59                 // Method java/util/Scanner.next:()Ljava/lang/String;
      54: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
      57: astore_3
      58: aload_0
      59: getfield      #4                  // Field properties:Ljava/util/concurrent/ConcurrentHashMap;
      62: aload_2
      63: aload_3
      64: invokestatic  #61                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
      67: invokevirtual #15                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: goto          35
      74: getstatic     #17                 // Field log:Lorg/slf4j/Logger;
      77: ldc           #62                 // String Loading previous download state {}
      79: aload_0
      80: getfield      #4                  // Field properties:Ljava/util/concurrent/ConcurrentHashMap;
      83: invokevirtual #19                 // Method java/util/concurrent/ConcurrentHashMap.toString:()Ljava/lang/String;
      86: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      91: aload_1
      92: ifnull        164
      95: aload_1
      96: invokevirtual #63                 // Method java/util/Scanner.close:()V
      99: goto          164
     102: astore_2
     103: getstatic     #17                 // Field log:Lorg/slf4j/Logger;
     106: ldc           #65                 // String Missing {}
     108: ldc           #30                 // String ResumableAsyncHandler.properties
     110: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     115: aload_1
     116: ifnull        164
     119: aload_1
     120: invokevirtual #63                 // Method java/util/Scanner.close:()V
     123: goto          164
     126: astore_2
     127: getstatic     #17                 // Field log:Lorg/slf4j/Logger;
     130: aload_2
     131: invokevirtual #51                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     134: aload_2
     135: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     140: aload_1
     141: ifnull        164
     144: aload_1
     145: invokevirtual #63                 // Method java/util/Scanner.close:()V
     148: goto          164
     151: astore        4
     153: aload_1
     154: ifnull        161
     157: aload_1
     158: invokevirtual #63                 // Method java/util/Scanner.close:()V
     161: aload         4
     163: athrow
     164: aload_0
     165: getfield      #4                  // Field properties:Ljava/util/concurrent/ConcurrentHashMap;
     168: areturn
    Exception table:
       from    to  target type
           2    91   102   Class java/io/FileNotFoundException
           2    91   126   Class java/lang/Throwable
           2    91   151   any
         102   115   151   any
         126   140   151   any
         151   153   151   any

  static {};
    Code:
       0: ldc           #29                 // class org/asynchttpclient/handler/resumable/PropertiesBasedResumableProcessor
       2: invokestatic  #66                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #17                 // Field log:Lorg/slf4j/Logger;
       8: new           #28                 // class java/io/File
      11: dup
      12: ldc           #67                 // String java.io.tmpdir
      14: invokestatic  #68                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      17: ldc           #69                 // String ahc
      19: invokespecial #70                 // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: putstatic     #21                 // Field TMP:Ljava/io/File;
      25: return
}
