Compiled from "NettyResponseFuture.java"
public final class org.asynchttpclient.netty.NettyResponseFuture<V> implements org.asynchttpclient.ListenableFuture<V> {
  private static final org.slf4j.Logger LOGGER;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.asynchttpclient.netty.NettyResponseFuture> REDIRECT_COUNT_UPDATER;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.asynchttpclient.netty.NettyResponseFuture> CURRENT_RETRY_UPDATER;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.asynchttpclient.netty.NettyResponseFuture> IS_DONE_FIELD;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.asynchttpclient.netty.NettyResponseFuture> IS_CANCELLED_FIELD;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.asynchttpclient.netty.NettyResponseFuture> IN_AUTH_FIELD;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.asynchttpclient.netty.NettyResponseFuture> IN_PROXY_AUTH_FIELD;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.asynchttpclient.netty.NettyResponseFuture> CONTENT_PROCESSED_FIELD;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.asynchttpclient.netty.NettyResponseFuture> ON_THROWABLE_CALLED_FIELD;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.asynchttpclient.netty.NettyResponseFuture, org.asynchttpclient.netty.timeout.TimeoutsHolder> TIMEOUTS_HOLDER_FIELD;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.asynchttpclient.netty.NettyResponseFuture, java.lang.Object> PARTITION_KEY_LOCK_FIELD;

  private final long start;

  private final org.asynchttpclient.channel.ChannelPoolPartitioning connectionPoolPartitioning;

  private final org.asynchttpclient.netty.channel.ConnectionSemaphore connectionSemaphore;

  private final org.asynchttpclient.proxy.ProxyServer proxyServer;

  private final int maxRetry;

  private final java.util.concurrent.CompletableFuture<V> future;

  public java.lang.Throwable pendingException;

  private volatile int isDone;

  private volatile int isCancelled;

  private volatile int inAuth;

  private volatile int inProxyAuth;

  private volatile int contentProcessed;

  private volatile int onThrowableCalled;

  private volatile org.asynchttpclient.netty.timeout.TimeoutsHolder timeoutsHolder;

  private volatile java.lang.Object partitionKeyLock;

  private volatile int redirectCount;

  private volatile int currentRetry;

  private volatile long touch;

  private volatile org.asynchttpclient.netty.channel.ChannelState channelState;

  private io.netty.channel.Channel channel;

  private boolean keepAlive;

  private org.asynchttpclient.Request targetRequest;

  private org.asynchttpclient.Request currentRequest;

  private org.asynchttpclient.netty.request.NettyRequest nettyRequest;

  private org.asynchttpclient.AsyncHandler<V> asyncHandler;

  private boolean streamAlreadyConsumed;

  private boolean reuseChannel;

  private boolean headersAlreadyWrittenOnContinue;

  private boolean dontWriteBodyBecauseExpectContinue;

  private boolean allowConnect;

  private org.asynchttpclient.Realm realm;

  private org.asynchttpclient.Realm proxyRealm;

  public org.asynchttpclient.netty.NettyResponseFuture(org.asynchttpclient.Request, org.asynchttpclient.AsyncHandler<V>, org.asynchttpclient.netty.request.NettyRequest, int, org.asynchttpclient.channel.ChannelPoolPartitioning, org.asynchttpclient.netty.channel.ConnectionSemaphore, org.asynchttpclient.proxy.ProxyServer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/asynchttpclient/util/DateUtils.unpreciseMillisTime:()J
       8: putfield      #3                  // Field start:J
      11: aload_0
      12: new           #4                  // class java/util/concurrent/CompletableFuture
      15: dup
      16: invokespecial #5                  // Method java/util/concurrent/CompletableFuture."<init>":()V
      19: putfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
      22: aload_0
      23: iconst_0
      24: putfield      #7                  // Field isDone:I
      27: aload_0
      28: iconst_0
      29: putfield      #8                  // Field isCancelled:I
      32: aload_0
      33: iconst_0
      34: putfield      #9                  // Field inAuth:I
      37: aload_0
      38: iconst_0
      39: putfield      #10                 // Field inProxyAuth:I
      42: aload_0
      43: iconst_0
      44: putfield      #11                 // Field contentProcessed:I
      47: aload_0
      48: iconst_0
      49: putfield      #12                 // Field onThrowableCalled:I
      52: aload_0
      53: iconst_0
      54: putfield      #13                 // Field redirectCount:I
      57: aload_0
      58: iconst_0
      59: putfield      #14                 // Field currentRetry:I
      62: aload_0
      63: invokestatic  #2                  // Method org/asynchttpclient/util/DateUtils.unpreciseMillisTime:()J
      66: putfield      #15                 // Field touch:J
      69: aload_0
      70: getstatic     #16                 // Field org/asynchttpclient/netty/channel/ChannelState.NEW:Lorg/asynchttpclient/netty/channel/ChannelState;
      73: putfield      #17                 // Field channelState:Lorg/asynchttpclient/netty/channel/ChannelState;
      76: aload_0
      77: iconst_1
      78: putfield      #18                 // Field keepAlive:Z
      81: aload_0
      82: aload_2
      83: putfield      #19                 // Field asyncHandler:Lorg/asynchttpclient/AsyncHandler;
      86: aload_0
      87: aload_0
      88: aload_1
      89: dup_x1
      90: putfield      #20                 // Field currentRequest:Lorg/asynchttpclient/Request;
      93: putfield      #21                 // Field targetRequest:Lorg/asynchttpclient/Request;
      96: aload_0
      97: aload_3
      98: putfield      #22                 // Field nettyRequest:Lorg/asynchttpclient/netty/request/NettyRequest;
     101: aload_0
     102: aload         5
     104: putfield      #23                 // Field connectionPoolPartitioning:Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
     107: aload_0
     108: aload         6
     110: putfield      #24                 // Field connectionSemaphore:Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
     113: aload_0
     114: aload         7
     116: putfield      #25                 // Field proxyServer:Lorg/asynchttpclient/proxy/ProxyServer;
     119: aload_0
     120: iload         4
     122: putfield      #26                 // Field maxRetry:I
     125: return

  private void releasePartitionKeyLock();
    Code:
       0: aload_0
       1: getfield      #24                 // Field connectionSemaphore:Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: invokevirtual #27                 // Method takePartitionKeyLock:()Ljava/lang/Object;
      12: astore_1
      13: aload_1
      14: ifnull        27
      17: aload_0
      18: getfield      #24                 // Field connectionSemaphore:Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
      21: aload_1
      22: invokeinterface #28,  2           // InterfaceMethod org/asynchttpclient/netty/channel/ConnectionSemaphore.releaseChannelLock:(Ljava/lang/Object;)V
      27: return

  public java.lang.Object takePartitionKeyLock();
    Code:
       0: aload_0
       1: getfield      #29                 // Field partitionKeyLock:Ljava/lang/Object;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: getstatic     #30                 // Field PARTITION_KEY_LOCK_FIELD:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: aload_0
      13: aconst_null
      14: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isDone:I
       4: ifne          14
       7: aload_0
       8: invokevirtual #32                 // Method isCancelled:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isCancelled:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method releasePartitionKeyLock:()V
       4: aload_0
       5: invokevirtual #34                 // Method cancelTimeouts:()V
       8: getstatic     #35                 // Field IS_CANCELLED_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      11: aload_0
      12: iconst_1
      13: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      16: ifeq          21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: getfield      #37                 // Field channel:Lio/netty/channel/Channel;
      25: ifnull        42
      28: aload_0
      29: getfield      #37                 // Field channel:Lio/netty/channel/Channel;
      32: invokestatic  #38                 // Method org/asynchttpclient/netty/channel/Channels.setDiscard:(Lio/netty/channel/Channel;)V
      35: aload_0
      36: getfield      #37                 // Field channel:Lio/netty/channel/Channel;
      39: invokestatic  #39                 // Method org/asynchttpclient/netty/channel/Channels.silentlyCloseChannel:(Lio/netty/channel/Channel;)V
      42: getstatic     #40                 // Field ON_THROWABLE_CALLED_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      45: aload_0
      46: iconst_1
      47: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      50: ifne          84
      53: aload_0
      54: getfield      #19                 // Field asyncHandler:Lorg/asynchttpclient/AsyncHandler;
      57: new           #41                 // class java/util/concurrent/CancellationException
      60: dup
      61: invokespecial #42                 // Method java/util/concurrent/CancellationException."<init>":()V
      64: invokeinterface #43,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onThrowable:(Ljava/lang/Throwable;)V
      69: goto          84
      72: astore_2
      73: getstatic     #45                 // Field LOGGER:Lorg/slf4j/Logger;
      76: ldc           #46                 // String cancel
      78: aload_2
      79: invokeinterface #47,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      84: aload_0
      85: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
      88: iconst_0
      89: invokevirtual #48                 // Method java/util/concurrent/CompletableFuture.cancel:(Z)Z
      92: pop
      93: iconst_1
      94: ireturn
    Exception table:
       from    to  target type
          53    69    72   Class java/lang/Throwable

  public V get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
       4: invokevirtual #49                 // Method java/util/concurrent/CompletableFuture.get:()Ljava/lang/Object;
       7: areturn

  public V get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
       4: lload_1
       5: aload_3
       6: invokevirtual #50                 // Method java/util/concurrent/CompletableFuture.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
       9: areturn

  private void loadContent() throws java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
       4: invokevirtual #51                 // Method java/util/concurrent/CompletableFuture.isDone:()Z
       7: ifeq          33
      10: aload_0
      11: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
      14: invokevirtual #49                 // Method java/util/concurrent/CompletableFuture.get:()Ljava/lang/Object;
      17: pop
      18: goto          33
      21: astore_1
      22: new           #53                 // class java/lang/RuntimeException
      25: dup
      26: ldc           #54                 // String unreachable
      28: aload_1
      29: invokespecial #55                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: athrow
      33: getstatic     #56                 // Field CURRENT_RETRY_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      36: aload_0
      37: aload_0
      38: getfield      #26                 // Field maxRetry:I
      41: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      44: getstatic     #58                 // Field CONTENT_PROCESSED_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      47: aload_0
      48: iconst_1
      49: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      52: ifne          135
      55: aload_0
      56: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
      59: aload_0
      60: getfield      #19                 // Field asyncHandler:Lorg/asynchttpclient/AsyncHandler;
      63: invokeinterface #59,  1           // InterfaceMethod org/asynchttpclient/AsyncHandler.onCompleted:()Ljava/lang/Object;
      68: invokevirtual #60                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      71: pop
      72: goto          135
      75: astore_1
      76: getstatic     #40                 // Field ON_THROWABLE_CALLED_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      79: aload_0
      80: iconst_1
      81: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      84: ifne          126
      87: aload_0
      88: getfield      #19                 // Field asyncHandler:Lorg/asynchttpclient/AsyncHandler;
      91: aload_1
      92: invokeinterface #43,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onThrowable:(Ljava/lang/Throwable;)V
      97: goto          112
     100: astore_2
     101: getstatic     #45                 // Field LOGGER:Lorg/slf4j/Logger;
     104: ldc           #61                 // String asyncHandler.onThrowable
     106: aload_2
     107: invokeinterface #62,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     112: aload_0
     113: invokevirtual #34                 // Method cancelTimeouts:()V
     116: goto          126
     119: astore_3
     120: aload_0
     121: invokevirtual #34                 // Method cancelTimeouts:()V
     124: aload_3
     125: athrow
     126: aload_0
     127: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
     130: aload_1
     131: invokevirtual #63                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
     134: pop
     135: aload_0
     136: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
     139: aconst_null
     140: invokevirtual #64                 // Method java/util/concurrent/CompletableFuture.getNow:(Ljava/lang/Object;)Ljava/lang/Object;
     143: pop
     144: return
    Exception table:
       from    to  target type
          10    18    21   Class java/lang/InterruptedException
          55    72    75   Class java/lang/Throwable
          87    97   100   Class java/lang/Throwable
          87   112   119   any

  private boolean terminateAndExit();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method releasePartitionKeyLock:()V
       4: aload_0
       5: invokevirtual #34                 // Method cancelTimeouts:()V
       8: aload_0
       9: aconst_null
      10: putfield      #37                 // Field channel:Lio/netty/channel/Channel;
      13: aload_0
      14: iconst_0
      15: putfield      #65                 // Field reuseChannel:Z
      18: getstatic     #66                 // Field IS_DONE_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      21: aload_0
      22: iconst_1
      23: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      26: ifne          36
      29: aload_0
      30: getfield      #8                  // Field isCancelled:I
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public final void done();
    Code:
       0: aload_0
       1: invokespecial #67                 // Method terminateAndExit:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #68                 // Method loadContent:()V
      12: goto          44
      15: astore_1
      16: goto          44
      19: astore_1
      20: aload_0
      21: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
      24: aload_1
      25: invokevirtual #63                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      28: pop
      29: goto          44
      32: astore_1
      33: aload_0
      34: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
      37: aload_1
      38: invokevirtual #63                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      41: pop
      42: aload_1
      43: athrow
      44: return
    Exception table:
       from    to  target type
           8    12    15   Class java/util/concurrent/ExecutionException
           8    12    19   Class java/lang/RuntimeException
           8    12    32   Class java/lang/Throwable

  public final void abort(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #67                 // Method terminateAndExit:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
      12: aload_1
      13: invokevirtual #63                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      16: pop
      17: getstatic     #40                 // Field ON_THROWABLE_CALLED_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: aload_0
      21: iconst_0
      22: iconst_1
      23: invokevirtual #70                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      26: ifeq          54
      29: aload_0
      30: getfield      #19                 // Field asyncHandler:Lorg/asynchttpclient/AsyncHandler;
      33: aload_1
      34: invokeinterface #43,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onThrowable:(Ljava/lang/Throwable;)V
      39: goto          54
      42: astore_2
      43: getstatic     #45                 // Field LOGGER:Lorg/slf4j/Logger;
      46: ldc           #61                 // String asyncHandler.onThrowable
      48: aload_2
      49: invokeinterface #62,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: return
    Exception table:
       from    to  target type
          29    39    42   Class java/lang/Throwable

  public void touch();
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/asynchttpclient/util/DateUtils.unpreciseMillisTime:()J
       4: putfield      #15                 // Field touch:J
       7: return

  public org.asynchttpclient.ListenableFuture<V> addListener(java.lang.Runnable, java.util.concurrent.Executor);
    Code:
       0: aload_2
       1: ifnonnull     10
       4: invokedynamic #71,  0             // InvokeDynamic #0:execute:()Ljava/util/concurrent/Executor;
       9: astore_2
      10: aload_0
      11: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
      14: aload_1
      15: invokedynamic #72,  0             // InvokeDynamic #1:accept:(Ljava/lang/Runnable;)Ljava/util/function/BiConsumer;
      20: aload_2
      21: invokevirtual #73                 // Method java/util/concurrent/CompletableFuture.whenCompleteAsync:(Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      24: pop
      25: aload_0
      26: areturn

  public java.util.concurrent.CompletableFuture<V> toCompletableFuture();
    Code:
       0: aload_0
       1: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
       4: areturn

  public org.asynchttpclient.uri.Uri getUri();
    Code:
       0: aload_0
       1: getfield      #21                 // Field targetRequest:Lorg/asynchttpclient/Request;
       4: invokeinterface #74,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
       9: areturn

  public org.asynchttpclient.proxy.ProxyServer getProxyServer();
    Code:
       0: aload_0
       1: getfield      #25                 // Field proxyServer:Lorg/asynchttpclient/proxy/ProxyServer;
       4: areturn

  public void cancelTimeouts();
    Code:
       0: getstatic     #75                 // Field TIMEOUTS_HOLDER_FIELD:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #76                 // class org/asynchttpclient/netty/timeout/TimeoutsHolder
      11: astore_1
      12: aload_1
      13: ifnull        20
      16: aload_1
      17: invokevirtual #77                 // Method org/asynchttpclient/netty/timeout/TimeoutsHolder.cancel:()V
      20: return

  public final org.asynchttpclient.Request getTargetRequest();
    Code:
       0: aload_0
       1: getfield      #21                 // Field targetRequest:Lorg/asynchttpclient/Request;
       4: areturn

  public void setTargetRequest(org.asynchttpclient.Request);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field targetRequest:Lorg/asynchttpclient/Request;
       5: return

  public final org.asynchttpclient.Request getCurrentRequest();
    Code:
       0: aload_0
       1: getfield      #20                 // Field currentRequest:Lorg/asynchttpclient/Request;
       4: areturn

  public void setCurrentRequest(org.asynchttpclient.Request);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field currentRequest:Lorg/asynchttpclient/Request;
       5: return

  public final org.asynchttpclient.netty.request.NettyRequest getNettyRequest();
    Code:
       0: aload_0
       1: getfield      #22                 // Field nettyRequest:Lorg/asynchttpclient/netty/request/NettyRequest;
       4: areturn

  public final void setNettyRequest(org.asynchttpclient.netty.request.NettyRequest);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field nettyRequest:Lorg/asynchttpclient/netty/request/NettyRequest;
       5: return

  public final org.asynchttpclient.AsyncHandler<V> getAsyncHandler();
    Code:
       0: aload_0
       1: getfield      #19                 // Field asyncHandler:Lorg/asynchttpclient/AsyncHandler;
       4: areturn

  public void setAsyncHandler(org.asynchttpclient.AsyncHandler<V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field asyncHandler:Lorg/asynchttpclient/AsyncHandler;
       5: return

  public final boolean isKeepAlive();
    Code:
       0: aload_0
       1: getfield      #18                 // Field keepAlive:Z
       4: ireturn

  public final void setKeepAlive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field keepAlive:Z
       5: return

  public int incrementAndGetCurrentRedirectCount();
    Code:
       0: getstatic     #78                 // Field REDIRECT_COUNT_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #79                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
       7: ireturn

  public org.asynchttpclient.netty.timeout.TimeoutsHolder getTimeoutsHolder();
    Code:
       0: getstatic     #75                 // Field TIMEOUTS_HOLDER_FIELD:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokevirtual #80                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #76                 // class org/asynchttpclient/netty/timeout/TimeoutsHolder
      10: areturn

  public void setTimeoutsHolder(org.asynchttpclient.netty.timeout.TimeoutsHolder);
    Code:
       0: getstatic     #75                 // Field TIMEOUTS_HOLDER_FIELD:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokevirtual #81                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: return

  public boolean isInAuth();
    Code:
       0: aload_0
       1: getfield      #9                  // Field inAuth:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setInAuth(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: putfield      #9                  // Field inAuth:I
      13: return

  public boolean isAndSetInAuth(boolean);
    Code:
       0: getstatic     #82                 // Field IN_AUTH_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iload_1
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public boolean isInProxyAuth();
    Code:
       0: aload_0
       1: getfield      #10                 // Field inProxyAuth:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setInProxyAuth(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: putfield      #10                 // Field inProxyAuth:I
      13: return

  public boolean isAndSetInProxyAuth(boolean);
    Code:
       0: getstatic     #83                 // Field IN_PROXY_AUTH_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iload_1
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public org.asynchttpclient.netty.channel.ChannelState getChannelState();
    Code:
       0: aload_0
       1: getfield      #17                 // Field channelState:Lorg/asynchttpclient/netty/channel/ChannelState;
       4: areturn

  public void setChannelState(org.asynchttpclient.netty.channel.ChannelState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field channelState:Lorg/asynchttpclient/netty/channel/ChannelState;
       5: return

  public boolean isStreamConsumed();
    Code:
       0: aload_0
       1: getfield      #84                 // Field streamAlreadyConsumed:Z
       4: ireturn

  public void setStreamConsumed(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #84                 // Field streamAlreadyConsumed:Z
       5: return

  public long getLastTouch();
    Code:
       0: aload_0
       1: getfield      #15                 // Field touch:J
       4: lreturn

  public boolean isHeadersAlreadyWrittenOnContinue();
    Code:
       0: aload_0
       1: getfield      #85                 // Field headersAlreadyWrittenOnContinue:Z
       4: ireturn

  public void setHeadersAlreadyWrittenOnContinue(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #85                 // Field headersAlreadyWrittenOnContinue:Z
       5: return

  public boolean isDontWriteBodyBecauseExpectContinue();
    Code:
       0: aload_0
       1: getfield      #86                 // Field dontWriteBodyBecauseExpectContinue:Z
       4: ireturn

  public void setDontWriteBodyBecauseExpectContinue(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #86                 // Field dontWriteBodyBecauseExpectContinue:Z
       5: return

  public boolean isConnectAllowed();
    Code:
       0: aload_0
       1: getfield      #87                 // Field allowConnect:Z
       4: ireturn

  public void setConnectAllowed(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #87                 // Field allowConnect:Z
       5: return

  public void attachChannel(io.netty.channel.Channel, boolean);
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method isDone:()Z
       4: ifeq          11
       7: aload_1
       8: invokestatic  #39                 // Method org/asynchttpclient/netty/channel/Channels.silentlyCloseChannel:(Lio/netty/channel/Channel;)V
      11: aload_0
      12: aload_1
      13: putfield      #37                 // Field channel:Lio/netty/channel/Channel;
      16: aload_0
      17: iload_2
      18: putfield      #65                 // Field reuseChannel:Z
      21: return

  public io.netty.channel.Channel channel();
    Code:
       0: aload_0
       1: getfield      #37                 // Field channel:Lio/netty/channel/Channel;
       4: areturn

  public boolean isReuseChannel();
    Code:
       0: aload_0
       1: getfield      #65                 // Field reuseChannel:Z
       4: ireturn

  public void setReuseChannel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #65                 // Field reuseChannel:Z
       5: return

  public boolean incrementRetryAndCheck();
    Code:
       0: aload_0
       1: getfield      #26                 // Field maxRetry:I
       4: ifle          25
       7: getstatic     #56                 // Field CURRENT_RETRY_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: aload_0
      11: invokevirtual #79                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
      14: aload_0
      15: getfield      #26                 // Field maxRetry:I
      18: if_icmpgt     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean isReplayPossible();
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method isDone:()Z
       4: ifne          50
       7: aload_0
       8: getfield      #37                 // Field channel:Lio/netty/channel/Channel;
      11: invokestatic  #89                 // Method org/asynchttpclient/netty/channel/Channels.isChannelActive:(Lio/netty/channel/Channel;)Z
      14: ifeq          32
      17: aload_0
      18: invokevirtual #90                 // Method getUri:()Lorg/asynchttpclient/uri/Uri;
      21: invokevirtual #91                 // Method org/asynchttpclient/uri/Uri.getScheme:()Ljava/lang/String;
      24: ldc           #92                 // String https
      26: invokevirtual #93                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      29: ifeq          50
      32: aload_0
      33: getfield      #9                  // Field inAuth:I
      36: ifne          50
      39: aload_0
      40: getfield      #10                 // Field inProxyAuth:I
      43: ifne          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn

  public long getStart();
    Code:
       0: aload_0
       1: getfield      #3                  // Field start:J
       4: lreturn

  public java.lang.Object getPartitionKey();
    Code:
       0: aload_0
       1: getfield      #23                 // Field connectionPoolPartitioning:Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
       4: aload_0
       5: getfield      #21                 // Field targetRequest:Lorg/asynchttpclient/Request;
       8: invokeinterface #74,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
      13: aload_0
      14: getfield      #21                 // Field targetRequest:Lorg/asynchttpclient/Request;
      17: invokeinterface #94,  1           // InterfaceMethod org/asynchttpclient/Request.getVirtualHost:()Ljava/lang/String;
      22: aload_0
      23: getfield      #25                 // Field proxyServer:Lorg/asynchttpclient/proxy/ProxyServer;
      26: invokeinterface #95,  4           // InterfaceMethod org/asynchttpclient/channel/ChannelPoolPartitioning.getPartitionKey:(Lorg/asynchttpclient/uri/Uri;Ljava/lang/String;Lorg/asynchttpclient/proxy/ProxyServer;)Ljava/lang/Object;
      31: areturn

  public void acquirePartitionLockLazily() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field connectionSemaphore:Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
       4: ifnull        14
       7: aload_0
       8: getfield      #29                 // Field partitionKeyLock:Ljava/lang/Object;
      11: ifnull        15
      14: return
      15: aload_0
      16: invokevirtual #96                 // Method getPartitionKey:()Ljava/lang/Object;
      19: astore_1
      20: aload_0
      21: getfield      #24                 // Field connectionSemaphore:Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
      24: aload_1
      25: invokeinterface #97,  2           // InterfaceMethod org/asynchttpclient/netty/channel/ConnectionSemaphore.acquireChannelLock:(Ljava/lang/Object;)V
      30: getstatic     #30                 // Field PARTITION_KEY_LOCK_FIELD:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      33: aload_0
      34: aload_1
      35: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: astore_2
      39: aload_2
      40: ifnull        67
      43: aload_0
      44: getfield      #24                 // Field connectionSemaphore:Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
      47: aload_2
      48: invokeinterface #28,  2           // InterfaceMethod org/asynchttpclient/netty/channel/ConnectionSemaphore.releaseChannelLock:(Ljava/lang/Object;)V
      53: aload_0
      54: invokespecial #33                 // Method releasePartitionKeyLock:()V
      57: new           #98                 // class java/lang/IllegalStateException
      60: dup
      61: ldc           #99                 // String Trying to acquire partition lock concurrently. Please report.
      63: invokespecial #100                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: invokevirtual #88                 // Method isDone:()Z
      71: ifeq          78
      74: aload_0
      75: invokespecial #33                 // Method releasePartitionKeyLock:()V
      78: return

  public org.asynchttpclient.Realm getRealm();
    Code:
       0: aload_0
       1: getfield      #101                // Field realm:Lorg/asynchttpclient/Realm;
       4: areturn

  public void setRealm(org.asynchttpclient.Realm);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #101                // Field realm:Lorg/asynchttpclient/Realm;
       5: return

  public org.asynchttpclient.Realm getProxyRealm();
    Code:
       0: aload_0
       1: getfield      #102                // Field proxyRealm:Lorg/asynchttpclient/Realm;
       4: areturn

  public void setProxyRealm(org.asynchttpclient.Realm);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #102                // Field proxyRealm:Lorg/asynchttpclient/Realm;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #103                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #105                // String NettyResponseFuture{currentRetry=
       9: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #14                 // Field currentRetry:I
      16: invokevirtual #107                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #108                // String ,\n\tisDone=
      21: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field isDone:I
      28: invokevirtual #107                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #109                // String ,\n\tisCancelled=
      33: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #8                  // Field isCancelled:I
      40: invokevirtual #107                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #110                // String ,\n\tasyncHandler=
      45: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #19                 // Field asyncHandler:Lorg/asynchttpclient/AsyncHandler;
      52: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #112                // String ,\n\tnettyRequest=
      57: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #22                 // Field nettyRequest:Lorg/asynchttpclient/netty/request/NettyRequest;
      64: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #113                // String ,\n\tfuture=
      69: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #6                  // Field future:Ljava/util/concurrent/CompletableFuture;
      76: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #114                // String ,\n\turi=
      81: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #90                 // Method getUri:()Lorg/asynchttpclient/uri/Uri;
      88: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: ldc           #115                // String ,\n\tkeepAlive=
      93: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #18                 // Field keepAlive:Z
     100: invokevirtual #116                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     103: ldc           #117                // String ,\n\tredirectCount=
     105: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: getfield      #13                 // Field redirectCount:I
     112: invokevirtual #107                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     115: ldc           #118                // String ,\n\ttimeoutsHolder=
     117: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: getstatic     #75                 // Field TIMEOUTS_HOLDER_FIELD:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     123: aload_0
     124: invokevirtual #80                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
     127: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     130: ldc           #119                // String ,\n\tinAuth=
     132: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_0
     136: getfield      #9                  // Field inAuth:I
     139: invokevirtual #107                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     142: ldc           #120                // String ,\n\ttouch=
     144: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: aload_0
     148: getfield      #15                 // Field touch:J
     151: invokevirtual #121                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     154: bipush        125
     156: invokevirtual #122                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     159: invokevirtual #123                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: areturn

  private static void lambda$addListener$0(java.lang.Runnable, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokeinterface #124,  1          // InterfaceMethod java/lang/Runnable.run:()V
       6: return

  static {};
    Code:
       0: ldc           #125                // class org/asynchttpclient/netty/NettyResponseFuture
       2: invokestatic  #126                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #45                 // Field LOGGER:Lorg/slf4j/Logger;
       8: ldc           #125                // class org/asynchttpclient/netty/NettyResponseFuture
      10: ldc           #127                // String redirectCount
      12: invokestatic  #128                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      15: putstatic     #78                 // Field REDIRECT_COUNT_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      18: ldc           #125                // class org/asynchttpclient/netty/NettyResponseFuture
      20: ldc           #129                // String currentRetry
      22: invokestatic  #128                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      25: putstatic     #56                 // Field CURRENT_RETRY_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      28: ldc           #125                // class org/asynchttpclient/netty/NettyResponseFuture
      30: ldc           #130                // String isDone
      32: invokestatic  #128                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      35: putstatic     #66                 // Field IS_DONE_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      38: ldc           #125                // class org/asynchttpclient/netty/NettyResponseFuture
      40: ldc           #131                // String isCancelled
      42: invokestatic  #128                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      45: putstatic     #35                 // Field IS_CANCELLED_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      48: ldc           #125                // class org/asynchttpclient/netty/NettyResponseFuture
      50: ldc           #132                // String inAuth
      52: invokestatic  #128                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      55: putstatic     #82                 // Field IN_AUTH_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      58: ldc           #125                // class org/asynchttpclient/netty/NettyResponseFuture
      60: ldc           #133                // String inProxyAuth
      62: invokestatic  #128                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      65: putstatic     #83                 // Field IN_PROXY_AUTH_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      68: ldc           #125                // class org/asynchttpclient/netty/NettyResponseFuture
      70: ldc           #134                // String contentProcessed
      72: invokestatic  #128                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      75: putstatic     #58                 // Field CONTENT_PROCESSED_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      78: ldc           #125                // class org/asynchttpclient/netty/NettyResponseFuture
      80: ldc           #135                // String onThrowableCalled
      82: invokestatic  #128                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      85: putstatic     #40                 // Field ON_THROWABLE_CALLED_FIELD:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      88: ldc           #125                // class org/asynchttpclient/netty/NettyResponseFuture
      90: ldc           #76                 // class org/asynchttpclient/netty/timeout/TimeoutsHolder
      92: ldc           #136                // String timeoutsHolder
      94: invokestatic  #137                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      97: putstatic     #75                 // Field TIMEOUTS_HOLDER_FIELD:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     100: ldc           #125                // class org/asynchttpclient/netty/NettyResponseFuture
     102: ldc           #138                // class java/lang/Object
     104: ldc           #139                // String partitionKeyLock
     106: invokestatic  #137                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     109: putstatic     #30                 // Field PARTITION_KEY_LOCK_FIELD:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     112: return
}
