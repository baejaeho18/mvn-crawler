Compiled from "MiscUtils.java"
public class org.asynchttpclient.util.MiscUtils {
  private org.asynchttpclient.util.MiscUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isNonEmpty(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method isEmpty:(Ljava/lang/String;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static boolean isEmpty(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #3                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public static boolean isNonEmpty(java.lang.Object[]);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: arraylength
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static boolean isNonEmpty(byte[]);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: arraylength
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static boolean isNonEmpty(java.util.Collection<?>);
    Code:
       0: aload_0
       1: ifnull        17
       4: aload_0
       5: invokeinterface #4,  1            // InterfaceMethod java/util/Collection.isEmpty:()Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public static boolean isNonEmpty(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: ifnull        17
       4: aload_0
       5: invokeinterface #5,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public static <T> T withDefault(T, T);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aload_1
       5: goto          9
       8: aload_0
       9: areturn

  public static void closeSilently(java.io.Closeable);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokeinterface #6,  1            // InterfaceMethod java/io/Closeable.close:()V
      10: goto          14
      13: astore_1
      14: return
    Exception table:
       from    to  target type
           4    10    13   Class java/io/IOException

  public static java.lang.Throwable getCause(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokestatic  #9                  // Method getCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      13: goto          17
      16: aload_0
      17: areturn
}
