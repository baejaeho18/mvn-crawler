Compiled from "BodyChunkedInput.java"
public class org.asynchttpclient.netty.request.body.BodyChunkedInput implements io.netty.handler.stream.ChunkedInput<io.netty.buffer.ByteBuf> {
  public static final int DEFAULT_CHUNK_SIZE;

  private final org.asynchttpclient.request.body.Body body;

  private final int chunkSize;

  private final long contentLength;

  private boolean endOfInput;

  private long progress;

  org.asynchttpclient.netty.request.body.BodyChunkedInput(org.asynchttpclient.request.body.Body);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field progress:J
       9: aload_0
      10: aload_1
      11: ldc           #3                  // String body
      13: invokestatic  #4                  // Method org/asynchttpclient/util/Assertions.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: checkcast     #5                  // class org/asynchttpclient/request/body/Body
      19: putfield      #6                  // Field body:Lorg/asynchttpclient/request/body/Body;
      22: aload_0
      23: aload_1
      24: invokeinterface #7,  1            // InterfaceMethod org/asynchttpclient/request/body/Body.getContentLength:()J
      29: putfield      #8                  // Field contentLength:J
      32: aload_0
      33: getfield      #8                  // Field contentLength:J
      36: lconst_0
      37: lcmp
      38: ifgt          51
      41: aload_0
      42: sipush        8192
      45: putfield      #10                 // Field chunkSize:I
      48: goto          66
      51: aload_0
      52: aload_0
      53: getfield      #8                  // Field contentLength:J
      56: ldc2_w        #11                 // long 8192l
      59: invokestatic  #13                 // Method java/lang/Math.min:(JJ)J
      62: l2i
      63: putfield      #10                 // Field chunkSize:I
      66: return

  public io.netty.buffer.ByteBuf readChunk(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       7: invokevirtual #15                 // Method readChunk:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
      10: areturn

  public io.netty.buffer.ByteBuf readChunk(io.netty.buffer.ByteBufAllocator) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #16                 // Field endOfInput:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_1
      10: aload_0
      11: getfield      #10                 // Field chunkSize:I
      14: invokeinterface #17,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
      19: astore_2
      20: aload_0
      21: getfield      #6                  // Field body:Lorg/asynchttpclient/request/body/Body;
      24: aload_2
      25: invokeinterface #18,  2           // InterfaceMethod org/asynchttpclient/request/body/Body.transferTo:(Lio/netty/buffer/ByteBuf;)Lorg/asynchttpclient/request/body/Body$BodyState;
      30: astore_3
      31: aload_0
      32: dup
      33: getfield      #2                  // Field progress:J
      36: aload_2
      37: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      40: i2l
      41: ladd
      42: putfield      #2                  // Field progress:J
      45: getstatic     #20                 // Field org/asynchttpclient/netty/request/body/BodyChunkedInput$1.$SwitchMap$org$asynchttpclient$request$body$Body$BodyState:[I
      48: aload_3
      49: invokevirtual #21                 // Method org/asynchttpclient/request/body/Body$BodyState.ordinal:()I
      52: iaload
      53: tableswitch   { // 1 to 3
                     1: 80
                     2: 87
                     3: 94
               default: 96
          }
      80: aload_0
      81: iconst_1
      82: putfield      #16                 // Field endOfInput:Z
      85: aload_2
      86: areturn
      87: aload_2
      88: invokevirtual #22                 // Method io/netty/buffer/ByteBuf.release:()Z
      91: pop
      92: aconst_null
      93: areturn
      94: aload_2
      95: areturn
      96: new           #23                 // class java/lang/IllegalStateException
      99: dup
     100: new           #24                 // class java/lang/StringBuilder
     103: dup
     104: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     107: ldc           #26                 // String Unknown state:
     109: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_3
     113: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     116: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     122: athrow

  public boolean isEndOfInput();
    Code:
       0: aload_0
       1: getfield      #16                 // Field endOfInput:Z
       4: ireturn

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field body:Lorg/asynchttpclient/request/body/Body;
       4: invokeinterface #31,  1           // InterfaceMethod org/asynchttpclient/request/body/Body.close:()V
       9: return

  public long length();
    Code:
       0: aload_0
       1: getfield      #8                  // Field contentLength:J
       4: lreturn

  public long progress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field progress:J
       4: lreturn

  public java.lang.Object readChunk(io.netty.buffer.ByteBufAllocator) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method readChunk:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
       5: areturn

  public java.lang.Object readChunk(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method readChunk:(Lio/netty/channel/ChannelHandlerContext;)Lio/netty/buffer/ByteBuf;
       5: areturn
}
