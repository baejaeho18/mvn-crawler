Compiled from "InputStreamBodyGenerator.java"
class org.asynchttpclient.request.body.generator.InputStreamBodyGenerator$InputStreamBody implements org.asynchttpclient.request.body.Body {
  private final java.io.InputStream inputStream;

  private final long contentLength;

  private byte[] chunk;

  final org.asynchttpclient.request.body.generator.InputStreamBodyGenerator this$0;

  private org.asynchttpclient.request.body.generator.InputStreamBodyGenerator$InputStreamBody(org.asynchttpclient.request.body.generator.InputStreamBodyGenerator, java.io.InputStream, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/asynchttpclient/request/body/generator/InputStreamBodyGenerator;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field inputStream:Ljava/io/InputStream;
      14: aload_0
      15: lload_3
      16: putfield      #5                  // Field contentLength:J
      19: return

  public long getContentLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field contentLength:J
       4: lreturn

  public org.asynchttpclient.request.body.Body$BodyState transferTo(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.writableBytes:()I
       5: bipush        10
       7: isub
       8: newarray       byte
      10: putfield      #7                  // Field chunk:[B
      13: iconst_m1
      14: istore_2
      15: iconst_0
      16: istore_3
      17: aload_0
      18: getfield      #4                  // Field inputStream:Ljava/io/InputStream;
      21: aload_0
      22: getfield      #7                  // Field chunk:[B
      25: invokevirtual #8                  // Method java/io/InputStream.read:([B)I
      28: istore_2
      29: goto          46
      32: astore        4
      34: invokestatic  #10                 // Method org/asynchttpclient/request/body/generator/InputStreamBodyGenerator.access$100:()Lorg/slf4j/Logger;
      37: ldc           #11                 // String Unable to read
      39: aload         4
      41: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      46: iload_2
      47: ifle          63
      50: aload_1
      51: aload_0
      52: getfield      #7                  // Field chunk:[B
      55: iconst_0
      56: iload_2
      57: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.writeBytes:([BII)Lio/netty/buffer/ByteBuf;
      60: pop
      61: iconst_1
      62: istore_3
      63: iload_3
      64: ifeq          73
      67: getstatic     #14                 // Field org/asynchttpclient/request/body/Body$BodyState.CONTINUE:Lorg/asynchttpclient/request/body/Body$BodyState;
      70: goto          76
      73: getstatic     #15                 // Field org/asynchttpclient/request/body/Body$BodyState.STOP:Lorg/asynchttpclient/request/body/Body$BodyState;
      76: areturn
    Exception table:
       from    to  target type
          17    29    32   Class java/io/IOException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputStream:Ljava/io/InputStream;
       4: invokevirtual #16                 // Method java/io/InputStream.close:()V
       7: return

  org.asynchttpclient.request.body.generator.InputStreamBodyGenerator$InputStreamBody(org.asynchttpclient.request.body.generator.InputStreamBodyGenerator, java.io.InputStream, long, org.asynchttpclient.request.body.generator.InputStreamBodyGenerator$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: invokespecial #1                  // Method "<init>":(Lorg/asynchttpclient/request/body/generator/InputStreamBodyGenerator;Ljava/io/InputStream;J)V
       7: return
}
