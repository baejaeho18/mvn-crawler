Compiled from "AsyncHttpClientConfigHelper.java"
public class org.asynchttpclient.config.AsyncHttpClientConfigHelper$Config {
  public static final java.lang.String DEFAULT_AHC_PROPERTIES;

  public static final java.lang.String CUSTOM_AHC_PROPERTIES;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.String> propsCache;

  private final java.util.Properties defaultProperties;

  private volatile java.util.Properties customProperties;

  public org.asynchttpclient.config.AsyncHttpClientConfigHelper$Config();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field propsCache:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: aload_0
      17: ldc           #6                  // String ahc-default.properties
      19: iconst_1
      20: invokespecial #7                  // Method parsePropertiesFile:(Ljava/lang/String;Z)Ljava/util/Properties;
      23: putfield      #8                  // Field defaultProperties:Ljava/util/Properties;
      26: aload_0
      27: aload_0
      28: ldc           #9                  // String ahc.properties
      30: iconst_0
      31: invokespecial #7                  // Method parsePropertiesFile:(Ljava/lang/String;Z)Ljava/util/Properties;
      34: putfield      #10                 // Field customProperties:Ljava/util/Properties;
      37: return

  public void reload();
    Code:
       0: aload_0
       1: aload_0
       2: ldc           #9                  // String ahc.properties
       4: iconst_0
       5: invokespecial #7                  // Method parsePropertiesFile:(Ljava/lang/String;Z)Ljava/util/Properties;
       8: putfield      #10                 // Field customProperties:Ljava/util/Properties;
      11: aload_0
      12: getfield      #4                  // Field propsCache:Ljava/util/concurrent/ConcurrentHashMap;
      15: invokevirtual #11                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      18: return

  private java.util.Properties parsePropertiesFile(java.lang.String, boolean);
    Code:
       0: new           #12                 // class java/util/Properties
       3: dup
       4: invokespecial #13                 // Method java/util/Properties."<init>":()V
       7: astore_3
       8: aload_0
       9: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: aload_1
      13: invokevirtual #15                 // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      16: astore        4
      18: aload         4
      20: ifnull        63
      23: aload_3
      24: aload         4
      26: invokevirtual #16                 // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      29: goto          94
      32: astore        5
      34: new           #18                 // class java/lang/IllegalArgumentException
      37: dup
      38: new           #19                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #21                 // String Can\'t parse config file
      47: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: aload         5
      59: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      62: athrow
      63: iload_2
      64: ifeq          94
      67: new           #18                 // class java/lang/IllegalArgumentException
      70: dup
      71: new           #19                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #25                 // String Can\'t locate config file
      80: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_1
      84: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_3
      95: areturn
    Exception table:
       from    to  target type
          23    29    32   Class java/io/IOException

  public java.lang.String getString(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propsCache:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: aload_0
       6: invokedynamic #27,  0             // InvokeDynamic #0:apply:(Lorg/asynchttpclient/config/AsyncHttpClientConfigHelper$Config;)Ljava/util/function/Function;
      11: invokevirtual #28                 // Method java/util/concurrent/ConcurrentHashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      14: checkcast     #29                 // class java/lang/String
      17: areturn

  public java.lang.String[] getStringArray(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: invokevirtual #31                 // Method java/lang/String.trim:()Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: invokevirtual #32                 // Method java/lang/String.isEmpty:()Z
      15: ifeq          20
      18: aconst_null
      19: areturn
      20: aload_2
      21: ldc           #33                 // String ,
      23: invokevirtual #34                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      26: astore_3
      27: aload_3
      28: arraylength
      29: anewarray     #29                 // class java/lang/String
      32: astore        4
      34: iconst_0
      35: istore        5
      37: iload         5
      39: aload_3
      40: arraylength
      41: if_icmpge     62
      44: aload         4
      46: iload         5
      48: aload_3
      49: iload         5
      51: aaload
      52: invokevirtual #31                 // Method java/lang/String.trim:()Ljava/lang/String;
      55: aastore
      56: iinc          5, 1
      59: goto          37
      62: aload         4
      64: areturn

  public int getInt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #35                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       8: ireturn

  public boolean getBoolean(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #36                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
       8: ireturn

  private java.lang.String lambda$getString$0(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #37                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnonnull     18
       9: aload_0
      10: getfield      #10                 // Field customProperties:Ljava/util/Properties;
      13: aload_1
      14: invokevirtual #38                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      17: astore_2
      18: aload_2
      19: ifnonnull     31
      22: aload_0
      23: getfield      #8                  // Field defaultProperties:Ljava/util/Properties;
      26: aload_1
      27: invokevirtual #38                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      30: astore_2
      31: aload_2
      32: areturn
}
