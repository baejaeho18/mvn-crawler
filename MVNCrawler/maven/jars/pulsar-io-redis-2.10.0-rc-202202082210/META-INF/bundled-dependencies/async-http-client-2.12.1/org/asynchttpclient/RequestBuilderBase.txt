Compiled from "RequestBuilderBase.java"
public abstract class org.asynchttpclient.RequestBuilderBase<T extends org.asynchttpclient.RequestBuilderBase<T>> {
  private static final org.slf4j.Logger LOGGER;

  private static final org.asynchttpclient.uri.Uri DEFAULT_REQUEST_URL;

  public static io.netty.resolver.NameResolver<java.net.InetAddress> DEFAULT_NAME_RESOLVER;

  protected org.asynchttpclient.util.UriEncoder uriEncoder;

  protected java.util.List<org.asynchttpclient.Param> queryParams;

  protected org.asynchttpclient.SignatureCalculator signatureCalculator;

  protected java.lang.String method;

  protected org.asynchttpclient.uri.Uri uri;

  protected java.net.InetAddress address;

  protected java.net.InetAddress localAddress;

  protected io.netty.handler.codec.http.HttpHeaders headers;

  protected java.util.ArrayList<io.netty.handler.codec.http.cookie.Cookie> cookies;

  protected byte[] byteData;

  protected java.util.List<byte[]> compositeByteData;

  protected java.lang.String stringData;

  protected java.nio.ByteBuffer byteBufferData;

  protected java.io.InputStream streamData;

  protected org.asynchttpclient.request.body.generator.BodyGenerator bodyGenerator;

  protected java.util.List<org.asynchttpclient.Param> formParams;

  protected java.util.List<org.asynchttpclient.request.body.multipart.Part> bodyParts;

  protected java.lang.String virtualHost;

  protected org.asynchttpclient.proxy.ProxyServer proxyServer;

  protected org.asynchttpclient.Realm realm;

  protected java.io.File file;

  protected java.lang.Boolean followRedirect;

  protected int requestTimeout;

  protected int readTimeout;

  protected long rangeOffset;

  protected java.nio.charset.Charset charset;

  protected org.asynchttpclient.channel.ChannelPoolPartitioning channelPoolPartitioning;

  protected io.netty.resolver.NameResolver<java.net.InetAddress> nameResolver;

  protected org.asynchttpclient.RequestBuilderBase(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: invokespecial #1                  // Method "<init>":(Ljava/lang/String;ZZ)V
       7: return

  protected org.asynchttpclient.RequestBuilderBase(java.lang.String, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field org/asynchttpclient/channel/ChannelPoolPartitioning$PerHostChannelPoolPartitioning.INSTANCE:Lorg/asynchttpclient/channel/ChannelPoolPartitioning$PerHostChannelPoolPartitioning;
       8: putfield      #4                  // Field channelPoolPartitioning:Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
      11: aload_0
      12: getstatic     #5                  // Field DEFAULT_NAME_RESOLVER:Lio/netty/resolver/NameResolver;
      15: putfield      #6                  // Field nameResolver:Lio/netty/resolver/NameResolver;
      18: aload_0
      19: aload_1
      20: putfield      #7                  // Field method:Ljava/lang/String;
      23: aload_0
      24: iload_2
      25: invokestatic  #8                  // Method org/asynchttpclient/util/UriEncoder.uriEncoder:(Z)Lorg/asynchttpclient/util/UriEncoder;
      28: putfield      #9                  // Field uriEncoder:Lorg/asynchttpclient/util/UriEncoder;
      31: aload_0
      32: new           #10                 // class io/netty/handler/codec/http/DefaultHttpHeaders
      35: dup
      36: iload_3
      37: invokespecial #11                 // Method io/netty/handler/codec/http/DefaultHttpHeaders."<init>":(Z)V
      40: putfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      43: return

  protected org.asynchttpclient.RequestBuilderBase(org.asynchttpclient.Request);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: invokespecial #13                 // Method "<init>":(Lorg/asynchttpclient/Request;ZZ)V
       7: return

  protected org.asynchttpclient.RequestBuilderBase(org.asynchttpclient.Request, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field org/asynchttpclient/channel/ChannelPoolPartitioning$PerHostChannelPoolPartitioning.INSTANCE:Lorg/asynchttpclient/channel/ChannelPoolPartitioning$PerHostChannelPoolPartitioning;
       8: putfield      #4                  // Field channelPoolPartitioning:Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
      11: aload_0
      12: getstatic     #5                  // Field DEFAULT_NAME_RESOLVER:Lio/netty/resolver/NameResolver;
      15: putfield      #6                  // Field nameResolver:Lio/netty/resolver/NameResolver;
      18: aload_0
      19: aload_1
      20: invokeinterface #14,  1           // InterfaceMethod org/asynchttpclient/Request.getMethod:()Ljava/lang/String;
      25: putfield      #7                  // Field method:Ljava/lang/String;
      28: aload_0
      29: iload_2
      30: invokestatic  #8                  // Method org/asynchttpclient/util/UriEncoder.uriEncoder:(Z)Lorg/asynchttpclient/util/UriEncoder;
      33: putfield      #9                  // Field uriEncoder:Lorg/asynchttpclient/util/UriEncoder;
      36: aload_0
      37: aload_1
      38: invokeinterface #15,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
      43: putfield      #16                 // Field uri:Lorg/asynchttpclient/uri/Uri;
      46: aload_0
      47: aload_1
      48: invokeinterface #17,  1           // InterfaceMethod org/asynchttpclient/Request.getAddress:()Ljava/net/InetAddress;
      53: putfield      #18                 // Field address:Ljava/net/InetAddress;
      56: aload_0
      57: aload_1
      58: invokeinterface #19,  1           // InterfaceMethod org/asynchttpclient/Request.getLocalAddress:()Ljava/net/InetAddress;
      63: putfield      #20                 // Field localAddress:Ljava/net/InetAddress;
      66: aload_0
      67: new           #10                 // class io/netty/handler/codec/http/DefaultHttpHeaders
      70: dup
      71: iload_3
      72: invokespecial #11                 // Method io/netty/handler/codec/http/DefaultHttpHeaders."<init>":(Z)V
      75: putfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      78: aload_0
      79: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      82: aload_1
      83: invokeinterface #21,  1           // InterfaceMethod org/asynchttpclient/Request.getHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
      88: invokevirtual #22                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Lio/netty/handler/codec/http/HttpHeaders;)Lio/netty/handler/codec/http/HttpHeaders;
      91: pop
      92: aload_1
      93: invokeinterface #23,  1           // InterfaceMethod org/asynchttpclient/Request.getCookies:()Ljava/util/List;
      98: invokestatic  #24                 // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/util/Collection;)Z
     101: ifeq          121
     104: aload_0
     105: new           #25                 // class java/util/ArrayList
     108: dup
     109: aload_1
     110: invokeinterface #23,  1           // InterfaceMethod org/asynchttpclient/Request.getCookies:()Ljava/util/List;
     115: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     118: putfield      #27                 // Field cookies:Ljava/util/ArrayList;
     121: aload_0
     122: aload_1
     123: invokeinterface #28,  1           // InterfaceMethod org/asynchttpclient/Request.getByteData:()[B
     128: putfield      #29                 // Field byteData:[B
     131: aload_0
     132: aload_1
     133: invokeinterface #30,  1           // InterfaceMethod org/asynchttpclient/Request.getCompositeByteData:()Ljava/util/List;
     138: putfield      #31                 // Field compositeByteData:Ljava/util/List;
     141: aload_0
     142: aload_1
     143: invokeinterface #32,  1           // InterfaceMethod org/asynchttpclient/Request.getStringData:()Ljava/lang/String;
     148: putfield      #33                 // Field stringData:Ljava/lang/String;
     151: aload_0
     152: aload_1
     153: invokeinterface #34,  1           // InterfaceMethod org/asynchttpclient/Request.getByteBufferData:()Ljava/nio/ByteBuffer;
     158: putfield      #35                 // Field byteBufferData:Ljava/nio/ByteBuffer;
     161: aload_0
     162: aload_1
     163: invokeinterface #36,  1           // InterfaceMethod org/asynchttpclient/Request.getStreamData:()Ljava/io/InputStream;
     168: putfield      #37                 // Field streamData:Ljava/io/InputStream;
     171: aload_0
     172: aload_1
     173: invokeinterface #38,  1           // InterfaceMethod org/asynchttpclient/Request.getBodyGenerator:()Lorg/asynchttpclient/request/body/generator/BodyGenerator;
     178: putfield      #39                 // Field bodyGenerator:Lorg/asynchttpclient/request/body/generator/BodyGenerator;
     181: aload_1
     182: invokeinterface #40,  1           // InterfaceMethod org/asynchttpclient/Request.getFormParams:()Ljava/util/List;
     187: invokestatic  #24                 // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/util/Collection;)Z
     190: ifeq          210
     193: aload_0
     194: new           #25                 // class java/util/ArrayList
     197: dup
     198: aload_1
     199: invokeinterface #40,  1           // InterfaceMethod org/asynchttpclient/Request.getFormParams:()Ljava/util/List;
     204: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     207: putfield      #41                 // Field formParams:Ljava/util/List;
     210: aload_1
     211: invokeinterface #42,  1           // InterfaceMethod org/asynchttpclient/Request.getBodyParts:()Ljava/util/List;
     216: invokestatic  #24                 // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/util/Collection;)Z
     219: ifeq          239
     222: aload_0
     223: new           #25                 // class java/util/ArrayList
     226: dup
     227: aload_1
     228: invokeinterface #42,  1           // InterfaceMethod org/asynchttpclient/Request.getBodyParts:()Ljava/util/List;
     233: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     236: putfield      #43                 // Field bodyParts:Ljava/util/List;
     239: aload_0
     240: aload_1
     241: invokeinterface #44,  1           // InterfaceMethod org/asynchttpclient/Request.getVirtualHost:()Ljava/lang/String;
     246: putfield      #45                 // Field virtualHost:Ljava/lang/String;
     249: aload_0
     250: aload_1
     251: invokeinterface #46,  1           // InterfaceMethod org/asynchttpclient/Request.getProxyServer:()Lorg/asynchttpclient/proxy/ProxyServer;
     256: putfield      #47                 // Field proxyServer:Lorg/asynchttpclient/proxy/ProxyServer;
     259: aload_0
     260: aload_1
     261: invokeinterface #48,  1           // InterfaceMethod org/asynchttpclient/Request.getRealm:()Lorg/asynchttpclient/Realm;
     266: putfield      #49                 // Field realm:Lorg/asynchttpclient/Realm;
     269: aload_0
     270: aload_1
     271: invokeinterface #50,  1           // InterfaceMethod org/asynchttpclient/Request.getFile:()Ljava/io/File;
     276: putfield      #51                 // Field file:Ljava/io/File;
     279: aload_0
     280: aload_1
     281: invokeinterface #52,  1           // InterfaceMethod org/asynchttpclient/Request.getFollowRedirect:()Ljava/lang/Boolean;
     286: putfield      #53                 // Field followRedirect:Ljava/lang/Boolean;
     289: aload_0
     290: aload_1
     291: invokeinterface #54,  1           // InterfaceMethod org/asynchttpclient/Request.getRequestTimeout:()I
     296: putfield      #55                 // Field requestTimeout:I
     299: aload_0
     300: aload_1
     301: invokeinterface #56,  1           // InterfaceMethod org/asynchttpclient/Request.getReadTimeout:()I
     306: putfield      #57                 // Field readTimeout:I
     309: aload_0
     310: aload_1
     311: invokeinterface #58,  1           // InterfaceMethod org/asynchttpclient/Request.getRangeOffset:()J
     316: putfield      #59                 // Field rangeOffset:J
     319: aload_0
     320: aload_1
     321: invokeinterface #60,  1           // InterfaceMethod org/asynchttpclient/Request.getCharset:()Ljava/nio/charset/Charset;
     326: putfield      #61                 // Field charset:Ljava/nio/charset/Charset;
     329: aload_0
     330: aload_1
     331: invokeinterface #62,  1           // InterfaceMethod org/asynchttpclient/Request.getChannelPoolPartitioning:()Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
     336: putfield      #4                  // Field channelPoolPartitioning:Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
     339: aload_0
     340: aload_1
     341: invokeinterface #63,  1           // InterfaceMethod org/asynchttpclient/Request.getNameResolver:()Lio/netty/resolver/NameResolver;
     346: putfield      #6                  // Field nameResolver:Lio/netty/resolver/NameResolver;
     349: return

  private T asDerivedType();
    Code:
       0: aload_0
       1: areturn

  public T setUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // Method org/asynchttpclient/uri/Uri.create:(Ljava/lang/String;)Lorg/asynchttpclient/uri/Uri;
       5: invokevirtual #65                 // Method setUri:(Lorg/asynchttpclient/uri/Uri;)Lorg/asynchttpclient/RequestBuilderBase;
       8: areturn

  public T setUri(org.asynchttpclient.uri.Uri);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field uri:Lorg/asynchttpclient/uri/Uri;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T setAddress(java.net.InetAddress);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field address:Ljava/net/InetAddress;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T setLocalAddress(java.net.InetAddress);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field localAddress:Ljava/net/InetAddress;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T setVirtualHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field virtualHost:Ljava/lang/String;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T clearHeaders();
    Code:
       0: aload_0
       1: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
       4: invokevirtual #67                 // Method io/netty/handler/codec/http/HttpHeaders.clear:()Lio/netty/handler/codec/http/HttpHeaders;
       7: pop
       8: aload_0
       9: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      12: areturn

  public T setHeader(java.lang.CharSequence, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #68                 // Method setHeader:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lorg/asynchttpclient/RequestBuilderBase;
       6: areturn

  public T setHeader(java.lang.CharSequence, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #69                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
       9: pop
      10: aload_0
      11: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      14: areturn

  public T setHeader(java.lang.CharSequence, java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #70                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Lio/netty/handler/codec/http/HttpHeaders;
       9: pop
      10: aload_0
      11: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      14: areturn

  public T addHeader(java.lang.CharSequence, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #71                 // Method addHeader:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lorg/asynchttpclient/RequestBuilderBase;
       6: areturn

  public T addHeader(java.lang.CharSequence, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     17
       4: getstatic     #72                 // Field LOGGER:Lorg/slf4j/Logger;
       7: ldc           #73                 // String Value was null, set to \"\"
       9: invokeinterface #74,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      14: ldc           #75                 // String
      16: astore_2
      17: aload_0
      18: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      21: aload_1
      22: aload_2
      23: invokevirtual #76                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      26: pop
      27: aload_0
      28: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      31: areturn

  public T addHeader(java.lang.CharSequence, java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #77                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Lio/netty/handler/codec/http/HttpHeaders;
       9: pop
      10: aload_0
      11: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      14: areturn

  public T setHeaders(io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: aload_0
       5: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
       8: invokevirtual #67                 // Method io/netty/handler/codec/http/HttpHeaders.clear:()Lio/netty/handler/codec/http/HttpHeaders;
      11: pop
      12: goto          20
      15: aload_0
      16: aload_1
      17: putfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      20: aload_0
      21: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      24: areturn

  public T setHeaders(java.util.Map<? extends java.lang.CharSequence, ? extends java.lang.Iterable<?>>);
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method clearHeaders:()Lorg/asynchttpclient/RequestBuilderBase;
       4: pop
       5: aload_1
       6: ifnull        21
       9: aload_1
      10: aload_0
      11: invokedynamic #79,  0             // InvokeDynamic #0:accept:(Lorg/asynchttpclient/RequestBuilderBase;)Ljava/util/function/BiConsumer;
      16: invokeinterface #80,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      21: aload_0
      22: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      25: areturn

  public T setSingleHeaders(java.util.Map<? extends java.lang.CharSequence, ?>);
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method clearHeaders:()Lorg/asynchttpclient/RequestBuilderBase;
       4: pop
       5: aload_1
       6: ifnull        21
       9: aload_1
      10: aload_0
      11: invokedynamic #81,  0             // InvokeDynamic #1:accept:(Lorg/asynchttpclient/RequestBuilderBase;)Ljava/util/function/BiConsumer;
      16: invokeinterface #80,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      21: aload_0
      22: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      25: areturn

  private void lazyInitCookies();
    Code:
       0: aload_0
       1: getfield      #27                 // Field cookies:Ljava/util/ArrayList;
       4: ifnonnull     19
       7: aload_0
       8: new           #25                 // class java/util/ArrayList
      11: dup
      12: iconst_3
      13: invokespecial #82                 // Method java/util/ArrayList."<init>":(I)V
      16: putfield      #27                 // Field cookies:Ljava/util/ArrayList;
      19: return

  public T setCookies(java.util.Collection<io.netty.handler.codec.http.cookie.Cookie>);
    Code:
       0: aload_0
       1: new           #25                 // class java/util/ArrayList
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       9: putfield      #27                 // Field cookies:Ljava/util/ArrayList;
      12: aload_0
      13: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      16: areturn

  public T addCookie(io.netty.handler.codec.http.cookie.Cookie);
    Code:
       0: aload_0
       1: invokespecial #83                 // Method lazyInitCookies:()V
       4: aload_0
       5: getfield      #27                 // Field cookies:Ljava/util/ArrayList;
       8: aload_1
       9: invokevirtual #84                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      12: pop
      13: aload_0
      14: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      17: areturn

  public T addOrReplaceCookie(io.netty.handler.codec.http.cookie.Cookie);
    Code:
       0: aload_1
       1: invokeinterface #85,  1           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.name:()Ljava/lang/String;
       6: astore_2
       7: iconst_0
       8: istore_3
       9: iconst_0
      10: istore        4
      12: aload_0
      13: invokespecial #83                 // Method lazyInitCookies:()V
      16: aload_0
      17: getfield      #27                 // Field cookies:Ljava/util/ArrayList;
      20: invokevirtual #86                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      23: astore        5
      25: aload         5
      27: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          72
      35: aload         5
      37: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #89                 // class io/netty/handler/codec/http/cookie/Cookie
      45: astore        6
      47: aload         6
      49: invokeinterface #85,  1           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.name:()Ljava/lang/String;
      54: aload_2
      55: invokevirtual #90                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      58: ifeq          66
      61: iconst_1
      62: istore_3
      63: goto          72
      66: iinc          4, 1
      69: goto          25
      72: iload_3
      73: ifeq          90
      76: aload_0
      77: getfield      #27                 // Field cookies:Ljava/util/ArrayList;
      80: iload         4
      82: aload_1
      83: invokevirtual #91                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: goto          99
      90: aload_0
      91: getfield      #27                 // Field cookies:Ljava/util/ArrayList;
      94: aload_1
      95: invokevirtual #84                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      98: pop
      99: aload_0
     100: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
     103: areturn

  public void resetCookies();
    Code:
       0: aload_0
       1: getfield      #27                 // Field cookies:Ljava/util/ArrayList;
       4: ifnull        14
       7: aload_0
       8: getfield      #27                 // Field cookies:Ljava/util/ArrayList;
      11: invokevirtual #92                 // Method java/util/ArrayList.clear:()V
      14: return

  public void resetQuery();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #93                 // Field queryParams:Ljava/util/List;
       5: aload_0
       6: getfield      #16                 // Field uri:Lorg/asynchttpclient/uri/Uri;
       9: ifnull        24
      12: aload_0
      13: aload_0
      14: getfield      #16                 // Field uri:Lorg/asynchttpclient/uri/Uri;
      17: aconst_null
      18: invokevirtual #94                 // Method org/asynchttpclient/uri/Uri.withNewQuery:(Ljava/lang/String;)Lorg/asynchttpclient/uri/Uri;
      21: putfield      #16                 // Field uri:Lorg/asynchttpclient/uri/Uri;
      24: return

  public void resetFormParams();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #41                 // Field formParams:Ljava/util/List;
       5: return

  public void resetNonMultipartData();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #29                 // Field byteData:[B
       5: aload_0
       6: aconst_null
       7: putfield      #31                 // Field compositeByteData:Ljava/util/List;
      10: aload_0
      11: aconst_null
      12: putfield      #35                 // Field byteBufferData:Ljava/nio/ByteBuffer;
      15: aload_0
      16: aconst_null
      17: putfield      #33                 // Field stringData:Ljava/lang/String;
      20: aload_0
      21: aconst_null
      22: putfield      #37                 // Field streamData:Ljava/io/InputStream;
      25: aload_0
      26: aconst_null
      27: putfield      #39                 // Field bodyGenerator:Lorg/asynchttpclient/request/body/generator/BodyGenerator;
      30: return

  public void resetMultipartData();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #43                 // Field bodyParts:Ljava/util/List;
       5: return

  public T setBody(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field file:Ljava/io/File;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  private void resetBody();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method resetFormParams:()V
       4: aload_0
       5: invokevirtual #96                 // Method resetNonMultipartData:()V
       8: aload_0
       9: invokevirtual #97                 // Method resetMultipartData:()V
      12: return

  public T setBody(byte[]);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method resetBody:()V
       4: aload_0
       5: aload_1
       6: putfield      #29                 // Field byteData:[B
       9: aload_0
      10: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      13: areturn

  public T setBody(java.util.List<byte[]>);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method resetBody:()V
       4: aload_0
       5: aload_1
       6: putfield      #31                 // Field compositeByteData:Ljava/util/List;
       9: aload_0
      10: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      13: areturn

  public T setBody(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method resetBody:()V
       4: aload_0
       5: aload_1
       6: putfield      #33                 // Field stringData:Ljava/lang/String;
       9: aload_0
      10: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      13: areturn

  public T setBody(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method resetBody:()V
       4: aload_0
       5: aload_1
       6: putfield      #35                 // Field byteBufferData:Ljava/nio/ByteBuffer;
       9: aload_0
      10: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      13: areturn

  public T setBody(java.io.InputStream);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method resetBody:()V
       4: aload_0
       5: aload_1
       6: putfield      #37                 // Field streamData:Ljava/io/InputStream;
       9: aload_0
      10: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      13: areturn

  public T setBody(org.reactivestreams.Publisher<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #99                 // long -1l
       5: invokevirtual #101                // Method setBody:(Lorg/reactivestreams/Publisher;J)Lorg/asynchttpclient/RequestBuilderBase;
       8: areturn

  public T setBody(org.reactivestreams.Publisher<io.netty.buffer.ByteBuf>, long);
    Code:
       0: aload_0
       1: new           #102                // class org/asynchttpclient/request/body/generator/ReactiveStreamsBodyGenerator
       4: dup
       5: aload_1
       6: lload_2
       7: invokespecial #103                // Method org/asynchttpclient/request/body/generator/ReactiveStreamsBodyGenerator."<init>":(Lorg/reactivestreams/Publisher;J)V
      10: invokevirtual #104                // Method setBody:(Lorg/asynchttpclient/request/body/generator/BodyGenerator;)Lorg/asynchttpclient/RequestBuilderBase;
      13: areturn

  public T setBody(org.asynchttpclient.request.body.generator.BodyGenerator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field bodyGenerator:Lorg/asynchttpclient/request/body/generator/BodyGenerator;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T addQueryParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #93                 // Field queryParams:Ljava/util/List;
       4: ifnonnull     19
       7: aload_0
       8: new           #25                 // class java/util/ArrayList
      11: dup
      12: iconst_1
      13: invokespecial #82                 // Method java/util/ArrayList."<init>":(I)V
      16: putfield      #93                 // Field queryParams:Ljava/util/List;
      19: aload_0
      20: getfield      #93                 // Field queryParams:Ljava/util/List;
      23: new           #105                // class org/asynchttpclient/Param
      26: dup
      27: aload_1
      28: aload_2
      29: invokespecial #106                // Method org/asynchttpclient/Param."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      32: invokeinterface #107,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      37: pop
      38: aload_0
      39: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      42: areturn

  public T addQueryParams(java.util.List<org.asynchttpclient.Param>);
    Code:
       0: aload_0
       1: getfield      #93                 // Field queryParams:Ljava/util/List;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: putfield      #93                 // Field queryParams:Ljava/util/List;
      12: goto          26
      15: aload_0
      16: getfield      #93                 // Field queryParams:Ljava/util/List;
      19: aload_1
      20: invokeinterface #108,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_0
      27: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      30: areturn

  public T setQueryParams(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // Method org/asynchttpclient/Param.map2ParamList:(Ljava/util/Map;)Ljava/util/List;
       5: invokevirtual #110                // Method setQueryParams:(Ljava/util/List;)Lorg/asynchttpclient/RequestBuilderBase;
       8: areturn

  public T setQueryParams(java.util.List<org.asynchttpclient.Param>);
    Code:
       0: aload_0
       1: getfield      #16                 // Field uri:Lorg/asynchttpclient/uri/Uri;
       4: ifnull        32
       7: aload_0
       8: getfield      #16                 // Field uri:Lorg/asynchttpclient/uri/Uri;
      11: invokevirtual #111                // Method org/asynchttpclient/uri/Uri.getQuery:()Ljava/lang/String;
      14: invokestatic  #112                // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/lang/String;)Z
      17: ifeq          32
      20: aload_0
      21: aload_0
      22: getfield      #16                 // Field uri:Lorg/asynchttpclient/uri/Uri;
      25: aconst_null
      26: invokevirtual #94                 // Method org/asynchttpclient/uri/Uri.withNewQuery:(Ljava/lang/String;)Lorg/asynchttpclient/uri/Uri;
      29: putfield      #16                 // Field uri:Lorg/asynchttpclient/uri/Uri;
      32: aload_0
      33: aload_1
      34: putfield      #93                 // Field queryParams:Ljava/util/List;
      37: aload_0
      38: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      41: areturn

  public T addFormParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method resetNonMultipartData:()V
       4: aload_0
       5: invokevirtual #97                 // Method resetMultipartData:()V
       8: aload_0
       9: getfield      #41                 // Field formParams:Ljava/util/List;
      12: ifnonnull     27
      15: aload_0
      16: new           #25                 // class java/util/ArrayList
      19: dup
      20: iconst_1
      21: invokespecial #82                 // Method java/util/ArrayList."<init>":(I)V
      24: putfield      #41                 // Field formParams:Ljava/util/List;
      27: aload_0
      28: getfield      #41                 // Field formParams:Ljava/util/List;
      31: new           #105                // class org/asynchttpclient/Param
      34: dup
      35: aload_1
      36: aload_2
      37: invokespecial #106                // Method org/asynchttpclient/Param."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      40: invokeinterface #107,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: aload_0
      47: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      50: areturn

  public T setFormParams(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // Method org/asynchttpclient/Param.map2ParamList:(Ljava/util/Map;)Ljava/util/List;
       5: invokevirtual #113                // Method setFormParams:(Ljava/util/List;)Lorg/asynchttpclient/RequestBuilderBase;
       8: areturn

  public T setFormParams(java.util.List<org.asynchttpclient.Param>);
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method resetNonMultipartData:()V
       4: aload_0
       5: invokevirtual #97                 // Method resetMultipartData:()V
       8: aload_0
       9: aload_1
      10: putfield      #41                 // Field formParams:Ljava/util/List;
      13: aload_0
      14: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      17: areturn

  public T addBodyPart(org.asynchttpclient.request.body.multipart.Part);
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method resetFormParams:()V
       4: aload_0
       5: invokevirtual #96                 // Method resetNonMultipartData:()V
       8: aload_0
       9: getfield      #43                 // Field bodyParts:Ljava/util/List;
      12: ifnonnull     26
      15: aload_0
      16: new           #25                 // class java/util/ArrayList
      19: dup
      20: invokespecial #114                // Method java/util/ArrayList."<init>":()V
      23: putfield      #43                 // Field bodyParts:Ljava/util/List;
      26: aload_0
      27: getfield      #43                 // Field bodyParts:Ljava/util/List;
      30: aload_1
      31: invokeinterface #107,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      36: pop
      37: aload_0
      38: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      41: areturn

  public T setBodyParts(java.util.List<org.asynchttpclient.request.body.multipart.Part>);
    Code:
       0: aload_0
       1: new           #25                 // class java/util/ArrayList
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       9: putfield      #43                 // Field bodyParts:Ljava/util/List;
      12: aload_0
      13: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      16: areturn

  public T setProxyServer(org.asynchttpclient.proxy.ProxyServer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field proxyServer:Lorg/asynchttpclient/proxy/ProxyServer;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T setProxyServer(org.asynchttpclient.proxy.ProxyServer$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #115                // Method org/asynchttpclient/proxy/ProxyServer$Builder.build:()Lorg/asynchttpclient/proxy/ProxyServer;
       5: putfield      #47                 // Field proxyServer:Lorg/asynchttpclient/proxy/ProxyServer;
       8: aload_0
       9: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      12: areturn

  public T setRealm(org.asynchttpclient.Realm$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #116                // Method org/asynchttpclient/Realm$Builder.build:()Lorg/asynchttpclient/Realm;
       5: putfield      #49                 // Field realm:Lorg/asynchttpclient/Realm;
       8: aload_0
       9: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      12: areturn

  public T setRealm(org.asynchttpclient.Realm);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field realm:Lorg/asynchttpclient/Realm;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T setFollowRedirect(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #117                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #53                 // Field followRedirect:Ljava/lang/Boolean;
       8: aload_0
       9: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
      12: areturn

  public T setRequestTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #55                 // Field requestTimeout:I
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T setReadTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #57                 // Field readTimeout:I
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T setRangeOffset(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #59                 // Field rangeOffset:J
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T setMethod(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field method:Ljava/lang/String;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T setCharset(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field charset:Ljava/nio/charset/Charset;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T setChannelPoolPartitioning(org.asynchttpclient.channel.ChannelPoolPartitioning);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field channelPoolPartitioning:Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T setNameResolver(io.netty.resolver.NameResolver<java.net.InetAddress>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field nameResolver:Lio/netty/resolver/NameResolver;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  public T setSignatureCalculator(org.asynchttpclient.SignatureCalculator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #118                // Field signatureCalculator:Lorg/asynchttpclient/SignatureCalculator;
       5: aload_0
       6: invokespecial #66                 // Method asDerivedType:()Lorg/asynchttpclient/RequestBuilderBase;
       9: areturn

  private org.asynchttpclient.RequestBuilderBase<?> executeSignatureCalculator();
    Code:
       0: aload_0
       1: getfield      #118                // Field signatureCalculator:Lorg/asynchttpclient/SignatureCalculator;
       4: ifnonnull     9
       7: aload_0
       8: areturn
       9: new           #119                // class org/asynchttpclient/RequestBuilder
      12: dup
      13: aload_0
      14: getfield      #7                  // Field method:Ljava/lang/String;
      17: invokespecial #120                // Method org/asynchttpclient/RequestBuilder."<init>":(Ljava/lang/String;)V
      20: astore_1
      21: aload_0
      22: getfield      #41                 // Field formParams:Ljava/util/List;
      25: ifnull        37
      28: aload_1
      29: aload_0
      30: getfield      #41                 // Field formParams:Ljava/util/List;
      33: invokevirtual #121                // Method org/asynchttpclient/RequestBuilder.setFormParams:(Ljava/util/List;)Lorg/asynchttpclient/RequestBuilderBase;
      36: pop
      37: aload_0
      38: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      41: ifnull        56
      44: aload_1
      45: getfield      #122                // Field org/asynchttpclient/RequestBuilder.headers:Lio/netty/handler/codec/http/HttpHeaders;
      48: aload_0
      49: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      52: invokevirtual #22                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Lio/netty/handler/codec/http/HttpHeaders;)Lio/netty/handler/codec/http/HttpHeaders;
      55: pop
      56: aload_0
      57: getfield      #27                 // Field cookies:Ljava/util/ArrayList;
      60: ifnull        72
      63: aload_1
      64: aload_0
      65: getfield      #27                 // Field cookies:Ljava/util/ArrayList;
      68: invokevirtual #123                // Method org/asynchttpclient/RequestBuilder.setCookies:(Ljava/util/Collection;)Lorg/asynchttpclient/RequestBuilderBase;
      71: pop
      72: aload_0
      73: getfield      #43                 // Field bodyParts:Ljava/util/List;
      76: ifnull        88
      79: aload_1
      80: aload_0
      81: getfield      #43                 // Field bodyParts:Ljava/util/List;
      84: invokevirtual #124                // Method org/asynchttpclient/RequestBuilder.setBodyParts:(Ljava/util/List;)Lorg/asynchttpclient/RequestBuilderBase;
      87: pop
      88: aload_1
      89: aload_0
      90: getfield      #9                  // Field uriEncoder:Lorg/asynchttpclient/util/UriEncoder;
      93: putfield      #125                // Field org/asynchttpclient/RequestBuilder.uriEncoder:Lorg/asynchttpclient/util/UriEncoder;
      96: aload_1
      97: aload_0
      98: getfield      #93                 // Field queryParams:Ljava/util/List;
     101: putfield      #126                // Field org/asynchttpclient/RequestBuilder.queryParams:Ljava/util/List;
     104: aload_1
     105: aload_0
     106: getfield      #16                 // Field uri:Lorg/asynchttpclient/uri/Uri;
     109: putfield      #127                // Field org/asynchttpclient/RequestBuilder.uri:Lorg/asynchttpclient/uri/Uri;
     112: aload_1
     113: aload_0
     114: getfield      #18                 // Field address:Ljava/net/InetAddress;
     117: putfield      #128                // Field org/asynchttpclient/RequestBuilder.address:Ljava/net/InetAddress;
     120: aload_1
     121: aload_0
     122: getfield      #20                 // Field localAddress:Ljava/net/InetAddress;
     125: putfield      #129                // Field org/asynchttpclient/RequestBuilder.localAddress:Ljava/net/InetAddress;
     128: aload_1
     129: aload_0
     130: getfield      #29                 // Field byteData:[B
     133: putfield      #130                // Field org/asynchttpclient/RequestBuilder.byteData:[B
     136: aload_1
     137: aload_0
     138: getfield      #31                 // Field compositeByteData:Ljava/util/List;
     141: putfield      #131                // Field org/asynchttpclient/RequestBuilder.compositeByteData:Ljava/util/List;
     144: aload_1
     145: aload_0
     146: getfield      #33                 // Field stringData:Ljava/lang/String;
     149: putfield      #132                // Field org/asynchttpclient/RequestBuilder.stringData:Ljava/lang/String;
     152: aload_1
     153: aload_0
     154: getfield      #35                 // Field byteBufferData:Ljava/nio/ByteBuffer;
     157: putfield      #133                // Field org/asynchttpclient/RequestBuilder.byteBufferData:Ljava/nio/ByteBuffer;
     160: aload_1
     161: aload_0
     162: getfield      #37                 // Field streamData:Ljava/io/InputStream;
     165: putfield      #134                // Field org/asynchttpclient/RequestBuilder.streamData:Ljava/io/InputStream;
     168: aload_1
     169: aload_0
     170: getfield      #39                 // Field bodyGenerator:Lorg/asynchttpclient/request/body/generator/BodyGenerator;
     173: putfield      #135                // Field org/asynchttpclient/RequestBuilder.bodyGenerator:Lorg/asynchttpclient/request/body/generator/BodyGenerator;
     176: aload_1
     177: aload_0
     178: getfield      #45                 // Field virtualHost:Ljava/lang/String;
     181: putfield      #136                // Field org/asynchttpclient/RequestBuilder.virtualHost:Ljava/lang/String;
     184: aload_1
     185: aload_0
     186: getfield      #47                 // Field proxyServer:Lorg/asynchttpclient/proxy/ProxyServer;
     189: putfield      #137                // Field org/asynchttpclient/RequestBuilder.proxyServer:Lorg/asynchttpclient/proxy/ProxyServer;
     192: aload_1
     193: aload_0
     194: getfield      #49                 // Field realm:Lorg/asynchttpclient/Realm;
     197: putfield      #138                // Field org/asynchttpclient/RequestBuilder.realm:Lorg/asynchttpclient/Realm;
     200: aload_1
     201: aload_0
     202: getfield      #51                 // Field file:Ljava/io/File;
     205: putfield      #139                // Field org/asynchttpclient/RequestBuilder.file:Ljava/io/File;
     208: aload_1
     209: aload_0
     210: getfield      #53                 // Field followRedirect:Ljava/lang/Boolean;
     213: putfield      #140                // Field org/asynchttpclient/RequestBuilder.followRedirect:Ljava/lang/Boolean;
     216: aload_1
     217: aload_0
     218: getfield      #55                 // Field requestTimeout:I
     221: putfield      #141                // Field org/asynchttpclient/RequestBuilder.requestTimeout:I
     224: aload_1
     225: aload_0
     226: getfield      #59                 // Field rangeOffset:J
     229: putfield      #142                // Field org/asynchttpclient/RequestBuilder.rangeOffset:J
     232: aload_1
     233: aload_0
     234: getfield      #61                 // Field charset:Ljava/nio/charset/Charset;
     237: putfield      #143                // Field org/asynchttpclient/RequestBuilder.charset:Ljava/nio/charset/Charset;
     240: aload_1
     241: aload_0
     242: getfield      #4                  // Field channelPoolPartitioning:Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
     245: putfield      #144                // Field org/asynchttpclient/RequestBuilder.channelPoolPartitioning:Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
     248: aload_1
     249: aload_0
     250: getfield      #6                  // Field nameResolver:Lio/netty/resolver/NameResolver;
     253: putfield      #145                // Field org/asynchttpclient/RequestBuilder.nameResolver:Lio/netty/resolver/NameResolver;
     256: aload_1
     257: invokevirtual #146                // Method org/asynchttpclient/RequestBuilder.build:()Lorg/asynchttpclient/Request;
     260: astore_2
     261: aload_0
     262: getfield      #118                // Field signatureCalculator:Lorg/asynchttpclient/SignatureCalculator;
     265: aload_2
     266: aload_1
     267: invokeinterface #147,  3          // InterfaceMethod org/asynchttpclient/SignatureCalculator.calculateAndAddSignature:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/RequestBuilderBase;)V
     272: aload_1
     273: areturn

  private void updateCharset();
    Code:
       0: aload_0
       1: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
       4: getstatic     #148                // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_TYPE:Lio/netty/util/AsciiString;
       7: invokevirtual #149                // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
      10: astore_1
      11: aload_1
      12: invokestatic  #150                // Method org/asynchttpclient/util/HttpUtils.extractContentTypeCharsetAttribute:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      15: astore_2
      16: aload_0
      17: aload_2
      18: aload_0
      19: getfield      #61                 // Field charset:Ljava/nio/charset/Charset;
      22: getstatic     #151                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      25: invokestatic  #152                // Method org/asynchttpclient/util/MiscUtils.withDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: invokestatic  #152                // Method org/asynchttpclient/util/MiscUtils.withDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #153                // class java/nio/charset/Charset
      34: putfield      #61                 // Field charset:Ljava/nio/charset/Charset;
      37: aload_1
      38: ifnull        98
      41: aload_1
      42: iconst_1
      43: iconst_0
      44: ldc           #154                // String text/
      46: iconst_0
      47: iconst_5
      48: invokevirtual #155                // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      51: ifeq          98
      54: aload_2
      55: ifnonnull     98
      58: aload_0
      59: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      62: getstatic     #148                // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_TYPE:Lio/netty/util/AsciiString;
      65: new           #156                // class java/lang/StringBuilder
      68: dup
      69: invokespecial #157                // Method java/lang/StringBuilder."<init>":()V
      72: aload_1
      73: invokevirtual #158                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #159                // String ; charset=
      78: invokevirtual #158                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: getfield      #61                 // Field charset:Ljava/nio/charset/Charset;
      85: invokevirtual #160                // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      88: invokevirtual #158                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #161                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokevirtual #69                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      97: pop
      98: return

  private org.asynchttpclient.uri.Uri computeUri();
    Code:
       0: aload_0
       1: getfield      #16                 // Field uri:Lorg/asynchttpclient/uri/Uri;
       4: astore_1
       5: aload_1
       6: ifnonnull     29
       9: getstatic     #72                 // Field LOGGER:Lorg/slf4j/Logger;
      12: ldc           #162                // String setUrl hasn\'t been invoked. Using {}
      14: getstatic     #163                // Field DEFAULT_REQUEST_URL:Lorg/asynchttpclient/uri/Uri;
      17: invokeinterface #164,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      22: getstatic     #163                // Field DEFAULT_REQUEST_URL:Lorg/asynchttpclient/uri/Uri;
      25: astore_1
      26: goto          33
      29: aload_1
      30: invokestatic  #165                // Method org/asynchttpclient/uri/Uri.validateSupportedScheme:(Lorg/asynchttpclient/uri/Uri;)V
      33: aload_0
      34: getfield      #9                  // Field uriEncoder:Lorg/asynchttpclient/util/UriEncoder;
      37: aload_1
      38: aload_0
      39: getfield      #93                 // Field queryParams:Ljava/util/List;
      42: invokevirtual #166                // Method org/asynchttpclient/util/UriEncoder.encode:(Lorg/asynchttpclient/uri/Uri;Ljava/util/List;)Lorg/asynchttpclient/uri/Uri;
      45: areturn

  public org.asynchttpclient.Request build();
    Code:
       0: aload_0
       1: invokespecial #167                // Method updateCharset:()V
       4: aload_0
       5: invokespecial #168                // Method executeSignatureCalculator:()Lorg/asynchttpclient/RequestBuilderBase;
       8: astore_1
       9: aload_1
      10: invokespecial #169                // Method computeUri:()Lorg/asynchttpclient/uri/Uri;
      13: astore_2
      14: aload_1
      15: getfield      #27                 // Field cookies:Ljava/util/ArrayList;
      18: ifnonnull     27
      21: invokestatic  #170                // Method java/util/Collections.emptyList:()Ljava/util/List;
      24: goto          38
      27: new           #25                 // class java/util/ArrayList
      30: dup
      31: aload_1
      32: getfield      #27                 // Field cookies:Ljava/util/ArrayList;
      35: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      38: astore_3
      39: aload_1
      40: getfield      #41                 // Field formParams:Ljava/util/List;
      43: ifnonnull     52
      46: invokestatic  #170                // Method java/util/Collections.emptyList:()Ljava/util/List;
      49: goto          63
      52: new           #25                 // class java/util/ArrayList
      55: dup
      56: aload_1
      57: getfield      #41                 // Field formParams:Ljava/util/List;
      60: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      63: astore        4
      65: aload_1
      66: getfield      #43                 // Field bodyParts:Ljava/util/List;
      69: ifnonnull     78
      72: invokestatic  #170                // Method java/util/Collections.emptyList:()Ljava/util/List;
      75: goto          89
      78: new           #25                 // class java/util/ArrayList
      81: dup
      82: aload_1
      83: getfield      #43                 // Field bodyParts:Ljava/util/List;
      86: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      89: astore        5
      91: new           #171                // class org/asynchttpclient/DefaultRequest
      94: dup
      95: aload_1
      96: getfield      #7                  // Field method:Ljava/lang/String;
      99: aload_2
     100: aload_1
     101: getfield      #18                 // Field address:Ljava/net/InetAddress;
     104: aload_1
     105: getfield      #20                 // Field localAddress:Ljava/net/InetAddress;
     108: aload_1
     109: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
     112: aload_3
     113: aload_1
     114: getfield      #29                 // Field byteData:[B
     117: aload_1
     118: getfield      #31                 // Field compositeByteData:Ljava/util/List;
     121: aload_1
     122: getfield      #33                 // Field stringData:Ljava/lang/String;
     125: aload_1
     126: getfield      #35                 // Field byteBufferData:Ljava/nio/ByteBuffer;
     129: aload_1
     130: getfield      #37                 // Field streamData:Ljava/io/InputStream;
     133: aload_1
     134: getfield      #39                 // Field bodyGenerator:Lorg/asynchttpclient/request/body/generator/BodyGenerator;
     137: aload         4
     139: aload         5
     141: aload_1
     142: getfield      #45                 // Field virtualHost:Ljava/lang/String;
     145: aload_1
     146: getfield      #47                 // Field proxyServer:Lorg/asynchttpclient/proxy/ProxyServer;
     149: aload_1
     150: getfield      #49                 // Field realm:Lorg/asynchttpclient/Realm;
     153: aload_1
     154: getfield      #51                 // Field file:Ljava/io/File;
     157: aload_1
     158: getfield      #53                 // Field followRedirect:Ljava/lang/Boolean;
     161: aload_1
     162: getfield      #55                 // Field requestTimeout:I
     165: aload_1
     166: getfield      #57                 // Field readTimeout:I
     169: aload_1
     170: getfield      #59                 // Field rangeOffset:J
     173: aload_1
     174: getfield      #61                 // Field charset:Ljava/nio/charset/Charset;
     177: aload_1
     178: getfield      #4                  // Field channelPoolPartitioning:Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
     181: aload_1
     182: getfield      #6                  // Field nameResolver:Lio/netty/resolver/NameResolver;
     185: invokespecial #172                // Method org/asynchttpclient/DefaultRequest."<init>":(Ljava/lang/String;Lorg/asynchttpclient/uri/Uri;Ljava/net/InetAddress;Ljava/net/InetAddress;Lio/netty/handler/codec/http/HttpHeaders;Ljava/util/List;[BLjava/util/List;Ljava/lang/String;Ljava/nio/ByteBuffer;Ljava/io/InputStream;Lorg/asynchttpclient/request/body/generator/BodyGenerator;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Lorg/asynchttpclient/proxy/ProxyServer;Lorg/asynchttpclient/Realm;Ljava/io/File;Ljava/lang/Boolean;IIJLjava/nio/charset/Charset;Lorg/asynchttpclient/channel/ChannelPoolPartitioning;Lio/netty/resolver/NameResolver;)V
     188: areturn

  private void lambda$setSingleHeaders$1(java.lang.CharSequence, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #76                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
       9: pop
      10: return

  private void lambda$setHeaders$0(java.lang.CharSequence, java.lang.Iterable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #77                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Lio/netty/handler/codec/http/HttpHeaders;
       9: pop
      10: return

  static {};
    Code:
       0: ldc           #173                // class org/asynchttpclient/RequestBuilderBase
       2: invokestatic  #174                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #72                 // Field LOGGER:Lorg/slf4j/Logger;
       8: ldc           #175                // String http://localhost
      10: invokestatic  #64                 // Method org/asynchttpclient/uri/Uri.create:(Ljava/lang/String;)Lorg/asynchttpclient/uri/Uri;
      13: putstatic     #163                // Field DEFAULT_REQUEST_URL:Lorg/asynchttpclient/uri/Uri;
      16: new           #176                // class io/netty/resolver/DefaultNameResolver
      19: dup
      20: getstatic     #177                // Field io/netty/util/concurrent/ImmediateEventExecutor.INSTANCE:Lio/netty/util/concurrent/ImmediateEventExecutor;
      23: invokespecial #178                // Method io/netty/resolver/DefaultNameResolver."<init>":(Lio/netty/util/concurrent/EventExecutor;)V
      26: putstatic     #5                  // Field DEFAULT_NAME_RESOLVER:Lio/netty/resolver/NameResolver;
      29: return
}
