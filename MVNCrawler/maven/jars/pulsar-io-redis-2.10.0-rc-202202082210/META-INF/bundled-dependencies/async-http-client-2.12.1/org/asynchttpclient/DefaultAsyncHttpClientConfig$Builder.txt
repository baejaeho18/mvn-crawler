Compiled from "DefaultAsyncHttpClientConfig.java"
public class org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder {
  private final java.util.List<org.asynchttpclient.filter.RequestFilter> requestFilters;

  private final java.util.List<org.asynchttpclient.filter.ResponseFilter> responseFilters;

  private final java.util.List<org.asynchttpclient.filter.IOExceptionFilter> ioExceptionFilters;

  private boolean followRedirect;

  private int maxRedirects;

  private boolean strict302Handling;

  private boolean compressionEnforced;

  private java.lang.String userAgent;

  private org.asynchttpclient.Realm realm;

  private int maxRequestRetry;

  private boolean disableUrlEncodingForBoundRequests;

  private boolean useLaxCookieEncoder;

  private boolean disableZeroCopy;

  private boolean keepEncodingHeader;

  private org.asynchttpclient.proxy.ProxyServerSelector proxyServerSelector;

  private boolean useProxySelector;

  private boolean useProxyProperties;

  private boolean validateResponseHeaders;

  private boolean aggregateWebSocketFrameFragments;

  private boolean enablewebSocketCompression;

  private int webSocketMaxBufferSize;

  private int webSocketMaxFrameSize;

  private int connectTimeout;

  private int requestTimeout;

  private int readTimeout;

  private int shutdownQuietPeriod;

  private int shutdownTimeout;

  private boolean keepAlive;

  private int pooledConnectionIdleTimeout;

  private int connectionPoolCleanerPeriod;

  private int connectionTtl;

  private int maxConnections;

  private int maxConnectionsPerHost;

  private int acquireFreeChannelTimeout;

  private org.asynchttpclient.channel.ChannelPool channelPool;

  private org.asynchttpclient.netty.channel.ConnectionSemaphoreFactory connectionSemaphoreFactory;

  private org.asynchttpclient.channel.KeepAliveStrategy keepAliveStrategy;

  private boolean useOpenSsl;

  private boolean useInsecureTrustManager;

  private boolean disableHttpsEndpointIdentificationAlgorithm;

  private int handshakeTimeout;

  private java.lang.String[] enabledProtocols;

  private java.lang.String[] enabledCipherSuites;

  private boolean filterInsecureCipherSuites;

  private int sslSessionCacheSize;

  private int sslSessionTimeout;

  private io.netty.handler.ssl.SslContext sslContext;

  private org.asynchttpclient.SslEngineFactory sslEngineFactory;

  private org.asynchttpclient.cookie.CookieStore cookieStore;

  private int expiredCookieEvictionDelay;

  private boolean tcpNoDelay;

  private boolean soReuseAddress;

  private boolean soKeepAlive;

  private int soLinger;

  private int soSndBuf;

  private int soRcvBuf;

  private java.lang.String threadPoolName;

  private int httpClientCodecMaxInitialLineLength;

  private int httpClientCodecMaxHeaderSize;

  private int httpClientCodecMaxChunkSize;

  private int httpClientCodecInitialBufferSize;

  private int chunkedFileChunkSize;

  private boolean useNativeTransport;

  private io.netty.buffer.ByteBufAllocator allocator;

  private java.util.Map<io.netty.channel.ChannelOption<java.lang.Object>, java.lang.Object> channelOptions;

  private io.netty.channel.EventLoopGroup eventLoopGroup;

  private io.netty.util.Timer nettyTimer;

  private java.util.concurrent.ThreadFactory threadFactory;

  private java.util.function.Consumer<io.netty.channel.Channel> httpAdditionalChannelInitializer;

  private java.util.function.Consumer<io.netty.channel.Channel> wsAdditionalChannelInitializer;

  private org.asynchttpclient.AsyncHttpClientConfig$ResponseBodyPartFactory responseBodyPartFactory;

  private int ioThreadsCount;

  private long hashedWheelTickDuration;

  private int hashedWheelSize;

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedList
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #4                  // Field requestFilters:Ljava/util/List;
      15: aload_0
      16: new           #2                  // class java/util/LinkedList
      19: dup
      20: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      23: putfield      #5                  // Field responseFilters:Ljava/util/List;
      26: aload_0
      27: new           #2                  // class java/util/LinkedList
      30: dup
      31: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      34: putfield      #6                  // Field ioExceptionFilters:Ljava/util/List;
      37: aload_0
      38: invokestatic  #7                  // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultFollowRedirect:()Z
      41: putfield      #8                  // Field followRedirect:Z
      44: aload_0
      45: invokestatic  #9                  // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultMaxRedirects:()I
      48: putfield      #10                 // Field maxRedirects:I
      51: aload_0
      52: invokestatic  #11                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultStrict302Handling:()Z
      55: putfield      #12                 // Field strict302Handling:Z
      58: aload_0
      59: invokestatic  #13                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultCompressionEnforced:()Z
      62: putfield      #14                 // Field compressionEnforced:Z
      65: aload_0
      66: invokestatic  #15                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUserAgent:()Ljava/lang/String;
      69: putfield      #16                 // Field userAgent:Ljava/lang/String;
      72: aload_0
      73: invokestatic  #17                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultMaxRequestRetry:()I
      76: putfield      #18                 // Field maxRequestRetry:I
      79: aload_0
      80: invokestatic  #19                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultDisableUrlEncodingForBoundRequests:()Z
      83: putfield      #20                 // Field disableUrlEncodingForBoundRequests:Z
      86: aload_0
      87: invokestatic  #21                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUseLaxCookieEncoder:()Z
      90: putfield      #22                 // Field useLaxCookieEncoder:Z
      93: aload_0
      94: invokestatic  #23                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultDisableZeroCopy:()Z
      97: putfield      #24                 // Field disableZeroCopy:Z
     100: aload_0
     101: invokestatic  #25                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultKeepEncodingHeader:()Z
     104: putfield      #26                 // Field keepEncodingHeader:Z
     107: aload_0
     108: invokestatic  #27                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUseProxySelector:()Z
     111: putfield      #28                 // Field useProxySelector:Z
     114: aload_0
     115: invokestatic  #29                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUseProxyProperties:()Z
     118: putfield      #30                 // Field useProxyProperties:Z
     121: aload_0
     122: invokestatic  #31                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultValidateResponseHeaders:()Z
     125: putfield      #32                 // Field validateResponseHeaders:Z
     128: aload_0
     129: invokestatic  #33                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultAggregateWebSocketFrameFragments:()Z
     132: putfield      #34                 // Field aggregateWebSocketFrameFragments:Z
     135: aload_0
     136: invokestatic  #35                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultEnableWebSocketCompression:()Z
     139: putfield      #36                 // Field enablewebSocketCompression:Z
     142: aload_0
     143: invokestatic  #37                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultWebSocketMaxBufferSize:()I
     146: putfield      #38                 // Field webSocketMaxBufferSize:I
     149: aload_0
     150: invokestatic  #39                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultWebSocketMaxFrameSize:()I
     153: putfield      #40                 // Field webSocketMaxFrameSize:I
     156: aload_0
     157: invokestatic  #41                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultConnectTimeout:()I
     160: putfield      #42                 // Field connectTimeout:I
     163: aload_0
     164: invokestatic  #43                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultRequestTimeout:()I
     167: putfield      #44                 // Field requestTimeout:I
     170: aload_0
     171: invokestatic  #45                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultReadTimeout:()I
     174: putfield      #46                 // Field readTimeout:I
     177: aload_0
     178: invokestatic  #47                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultShutdownQuietPeriod:()I
     181: putfield      #48                 // Field shutdownQuietPeriod:I
     184: aload_0
     185: invokestatic  #49                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultShutdownTimeout:()I
     188: putfield      #50                 // Field shutdownTimeout:I
     191: aload_0
     192: invokestatic  #51                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultKeepAlive:()Z
     195: putfield      #52                 // Field keepAlive:Z
     198: aload_0
     199: invokestatic  #53                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultPooledConnectionIdleTimeout:()I
     202: putfield      #54                 // Field pooledConnectionIdleTimeout:I
     205: aload_0
     206: invokestatic  #55                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultConnectionPoolCleanerPeriod:()I
     209: putfield      #56                 // Field connectionPoolCleanerPeriod:I
     212: aload_0
     213: invokestatic  #57                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultConnectionTtl:()I
     216: putfield      #58                 // Field connectionTtl:I
     219: aload_0
     220: invokestatic  #59                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultMaxConnections:()I
     223: putfield      #60                 // Field maxConnections:I
     226: aload_0
     227: invokestatic  #61                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultMaxConnectionsPerHost:()I
     230: putfield      #62                 // Field maxConnectionsPerHost:I
     233: aload_0
     234: invokestatic  #63                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultAcquireFreeChannelTimeout:()I
     237: putfield      #64                 // Field acquireFreeChannelTimeout:I
     240: aload_0
     241: new           #65                 // class org/asynchttpclient/channel/DefaultKeepAliveStrategy
     244: dup
     245: invokespecial #66                 // Method org/asynchttpclient/channel/DefaultKeepAliveStrategy."<init>":()V
     248: putfield      #67                 // Field keepAliveStrategy:Lorg/asynchttpclient/channel/KeepAliveStrategy;
     251: aload_0
     252: invokestatic  #68                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUseOpenSsl:()Z
     255: putfield      #69                 // Field useOpenSsl:Z
     258: aload_0
     259: invokestatic  #70                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUseInsecureTrustManager:()Z
     262: putfield      #71                 // Field useInsecureTrustManager:Z
     265: aload_0
     266: invokestatic  #72                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultDisableHttpsEndpointIdentificationAlgorithm:()Z
     269: putfield      #73                 // Field disableHttpsEndpointIdentificationAlgorithm:Z
     272: aload_0
     273: invokestatic  #74                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHandshakeTimeout:()I
     276: putfield      #75                 // Field handshakeTimeout:I
     279: aload_0
     280: invokestatic  #76                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultEnabledProtocols:()[Ljava/lang/String;
     283: putfield      #77                 // Field enabledProtocols:[Ljava/lang/String;
     286: aload_0
     287: invokestatic  #78                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultEnabledCipherSuites:()[Ljava/lang/String;
     290: putfield      #79                 // Field enabledCipherSuites:[Ljava/lang/String;
     293: aload_0
     294: invokestatic  #80                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultFilterInsecureCipherSuites:()Z
     297: putfield      #81                 // Field filterInsecureCipherSuites:Z
     300: aload_0
     301: invokestatic  #82                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSslSessionCacheSize:()I
     304: putfield      #83                 // Field sslSessionCacheSize:I
     307: aload_0
     308: invokestatic  #84                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSslSessionTimeout:()I
     311: putfield      #85                 // Field sslSessionTimeout:I
     314: aload_0
     315: new           #86                 // class org/asynchttpclient/cookie/ThreadSafeCookieStore
     318: dup
     319: invokespecial #87                 // Method org/asynchttpclient/cookie/ThreadSafeCookieStore."<init>":()V
     322: putfield      #88                 // Field cookieStore:Lorg/asynchttpclient/cookie/CookieStore;
     325: aload_0
     326: invokestatic  #89                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultExpiredCookieEvictionDelay:()I
     329: putfield      #90                 // Field expiredCookieEvictionDelay:I
     332: aload_0
     333: invokestatic  #91                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultTcpNoDelay:()Z
     336: putfield      #92                 // Field tcpNoDelay:Z
     339: aload_0
     340: invokestatic  #93                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSoReuseAddress:()Z
     343: putfield      #94                 // Field soReuseAddress:Z
     346: aload_0
     347: invokestatic  #95                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSoKeepAlive:()Z
     350: putfield      #96                 // Field soKeepAlive:Z
     353: aload_0
     354: invokestatic  #97                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSoLinger:()I
     357: putfield      #98                 // Field soLinger:I
     360: aload_0
     361: invokestatic  #99                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSoSndBuf:()I
     364: putfield      #100                // Field soSndBuf:I
     367: aload_0
     368: invokestatic  #101                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSoRcvBuf:()I
     371: putfield      #102                // Field soRcvBuf:I
     374: aload_0
     375: invokestatic  #103                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultThreadPoolName:()Ljava/lang/String;
     378: putfield      #104                // Field threadPoolName:Ljava/lang/String;
     381: aload_0
     382: invokestatic  #105                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHttpClientCodecMaxInitialLineLength:()I
     385: putfield      #106                // Field httpClientCodecMaxInitialLineLength:I
     388: aload_0
     389: invokestatic  #107                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHttpClientCodecMaxHeaderSize:()I
     392: putfield      #108                // Field httpClientCodecMaxHeaderSize:I
     395: aload_0
     396: invokestatic  #109                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHttpClientCodecMaxChunkSize:()I
     399: putfield      #110                // Field httpClientCodecMaxChunkSize:I
     402: aload_0
     403: invokestatic  #111                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHttpClientCodecInitialBufferSize:()I
     406: putfield      #112                // Field httpClientCodecInitialBufferSize:I
     409: aload_0
     410: invokestatic  #113                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultChunkedFileChunkSize:()I
     413: putfield      #114                // Field chunkedFileChunkSize:I
     416: aload_0
     417: invokestatic  #115                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUseNativeTransport:()Z
     420: putfield      #116                // Field useNativeTransport:Z
     423: aload_0
     424: new           #117                // class java/util/HashMap
     427: dup
     428: invokespecial #118                // Method java/util/HashMap."<init>":()V
     431: putfield      #119                // Field channelOptions:Ljava/util/Map;
     434: aload_0
     435: getstatic     #120                // Field org/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory.EAGER:Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;
     438: putfield      #121                // Field responseBodyPartFactory:Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;
     441: aload_0
     442: invokestatic  #122                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultIoThreadsCount:()I
     445: putfield      #123                // Field ioThreadsCount:I
     448: aload_0
     449: invokestatic  #124                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHashedWheelTimerTickDuration:()I
     452: i2l
     453: putfield      #125                // Field hashedWheelTickDuration:J
     456: aload_0
     457: invokestatic  #126                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHashedWheelTimerSize:()I
     460: putfield      #127                // Field hashedWheelSize:I
     463: return

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder(org.asynchttpclient.AsyncHttpClientConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedList
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #4                  // Field requestFilters:Ljava/util/List;
      15: aload_0
      16: new           #2                  // class java/util/LinkedList
      19: dup
      20: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      23: putfield      #5                  // Field responseFilters:Ljava/util/List;
      26: aload_0
      27: new           #2                  // class java/util/LinkedList
      30: dup
      31: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      34: putfield      #6                  // Field ioExceptionFilters:Ljava/util/List;
      37: aload_0
      38: invokestatic  #7                  // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultFollowRedirect:()Z
      41: putfield      #8                  // Field followRedirect:Z
      44: aload_0
      45: invokestatic  #9                  // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultMaxRedirects:()I
      48: putfield      #10                 // Field maxRedirects:I
      51: aload_0
      52: invokestatic  #11                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultStrict302Handling:()Z
      55: putfield      #12                 // Field strict302Handling:Z
      58: aload_0
      59: invokestatic  #13                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultCompressionEnforced:()Z
      62: putfield      #14                 // Field compressionEnforced:Z
      65: aload_0
      66: invokestatic  #15                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUserAgent:()Ljava/lang/String;
      69: putfield      #16                 // Field userAgent:Ljava/lang/String;
      72: aload_0
      73: invokestatic  #17                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultMaxRequestRetry:()I
      76: putfield      #18                 // Field maxRequestRetry:I
      79: aload_0
      80: invokestatic  #19                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultDisableUrlEncodingForBoundRequests:()Z
      83: putfield      #20                 // Field disableUrlEncodingForBoundRequests:Z
      86: aload_0
      87: invokestatic  #21                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUseLaxCookieEncoder:()Z
      90: putfield      #22                 // Field useLaxCookieEncoder:Z
      93: aload_0
      94: invokestatic  #23                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultDisableZeroCopy:()Z
      97: putfield      #24                 // Field disableZeroCopy:Z
     100: aload_0
     101: invokestatic  #25                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultKeepEncodingHeader:()Z
     104: putfield      #26                 // Field keepEncodingHeader:Z
     107: aload_0
     108: invokestatic  #27                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUseProxySelector:()Z
     111: putfield      #28                 // Field useProxySelector:Z
     114: aload_0
     115: invokestatic  #29                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUseProxyProperties:()Z
     118: putfield      #30                 // Field useProxyProperties:Z
     121: aload_0
     122: invokestatic  #31                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultValidateResponseHeaders:()Z
     125: putfield      #32                 // Field validateResponseHeaders:Z
     128: aload_0
     129: invokestatic  #33                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultAggregateWebSocketFrameFragments:()Z
     132: putfield      #34                 // Field aggregateWebSocketFrameFragments:Z
     135: aload_0
     136: invokestatic  #35                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultEnableWebSocketCompression:()Z
     139: putfield      #36                 // Field enablewebSocketCompression:Z
     142: aload_0
     143: invokestatic  #37                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultWebSocketMaxBufferSize:()I
     146: putfield      #38                 // Field webSocketMaxBufferSize:I
     149: aload_0
     150: invokestatic  #39                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultWebSocketMaxFrameSize:()I
     153: putfield      #40                 // Field webSocketMaxFrameSize:I
     156: aload_0
     157: invokestatic  #41                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultConnectTimeout:()I
     160: putfield      #42                 // Field connectTimeout:I
     163: aload_0
     164: invokestatic  #43                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultRequestTimeout:()I
     167: putfield      #44                 // Field requestTimeout:I
     170: aload_0
     171: invokestatic  #45                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultReadTimeout:()I
     174: putfield      #46                 // Field readTimeout:I
     177: aload_0
     178: invokestatic  #47                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultShutdownQuietPeriod:()I
     181: putfield      #48                 // Field shutdownQuietPeriod:I
     184: aload_0
     185: invokestatic  #49                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultShutdownTimeout:()I
     188: putfield      #50                 // Field shutdownTimeout:I
     191: aload_0
     192: invokestatic  #51                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultKeepAlive:()Z
     195: putfield      #52                 // Field keepAlive:Z
     198: aload_0
     199: invokestatic  #53                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultPooledConnectionIdleTimeout:()I
     202: putfield      #54                 // Field pooledConnectionIdleTimeout:I
     205: aload_0
     206: invokestatic  #55                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultConnectionPoolCleanerPeriod:()I
     209: putfield      #56                 // Field connectionPoolCleanerPeriod:I
     212: aload_0
     213: invokestatic  #57                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultConnectionTtl:()I
     216: putfield      #58                 // Field connectionTtl:I
     219: aload_0
     220: invokestatic  #59                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultMaxConnections:()I
     223: putfield      #60                 // Field maxConnections:I
     226: aload_0
     227: invokestatic  #61                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultMaxConnectionsPerHost:()I
     230: putfield      #62                 // Field maxConnectionsPerHost:I
     233: aload_0
     234: invokestatic  #63                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultAcquireFreeChannelTimeout:()I
     237: putfield      #64                 // Field acquireFreeChannelTimeout:I
     240: aload_0
     241: new           #65                 // class org/asynchttpclient/channel/DefaultKeepAliveStrategy
     244: dup
     245: invokespecial #66                 // Method org/asynchttpclient/channel/DefaultKeepAliveStrategy."<init>":()V
     248: putfield      #67                 // Field keepAliveStrategy:Lorg/asynchttpclient/channel/KeepAliveStrategy;
     251: aload_0
     252: invokestatic  #68                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUseOpenSsl:()Z
     255: putfield      #69                 // Field useOpenSsl:Z
     258: aload_0
     259: invokestatic  #70                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUseInsecureTrustManager:()Z
     262: putfield      #71                 // Field useInsecureTrustManager:Z
     265: aload_0
     266: invokestatic  #72                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultDisableHttpsEndpointIdentificationAlgorithm:()Z
     269: putfield      #73                 // Field disableHttpsEndpointIdentificationAlgorithm:Z
     272: aload_0
     273: invokestatic  #74                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHandshakeTimeout:()I
     276: putfield      #75                 // Field handshakeTimeout:I
     279: aload_0
     280: invokestatic  #76                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultEnabledProtocols:()[Ljava/lang/String;
     283: putfield      #77                 // Field enabledProtocols:[Ljava/lang/String;
     286: aload_0
     287: invokestatic  #78                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultEnabledCipherSuites:()[Ljava/lang/String;
     290: putfield      #79                 // Field enabledCipherSuites:[Ljava/lang/String;
     293: aload_0
     294: invokestatic  #80                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultFilterInsecureCipherSuites:()Z
     297: putfield      #81                 // Field filterInsecureCipherSuites:Z
     300: aload_0
     301: invokestatic  #82                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSslSessionCacheSize:()I
     304: putfield      #83                 // Field sslSessionCacheSize:I
     307: aload_0
     308: invokestatic  #84                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSslSessionTimeout:()I
     311: putfield      #85                 // Field sslSessionTimeout:I
     314: aload_0
     315: new           #86                 // class org/asynchttpclient/cookie/ThreadSafeCookieStore
     318: dup
     319: invokespecial #87                 // Method org/asynchttpclient/cookie/ThreadSafeCookieStore."<init>":()V
     322: putfield      #88                 // Field cookieStore:Lorg/asynchttpclient/cookie/CookieStore;
     325: aload_0
     326: invokestatic  #89                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultExpiredCookieEvictionDelay:()I
     329: putfield      #90                 // Field expiredCookieEvictionDelay:I
     332: aload_0
     333: invokestatic  #91                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultTcpNoDelay:()Z
     336: putfield      #92                 // Field tcpNoDelay:Z
     339: aload_0
     340: invokestatic  #93                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSoReuseAddress:()Z
     343: putfield      #94                 // Field soReuseAddress:Z
     346: aload_0
     347: invokestatic  #95                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSoKeepAlive:()Z
     350: putfield      #96                 // Field soKeepAlive:Z
     353: aload_0
     354: invokestatic  #97                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSoLinger:()I
     357: putfield      #98                 // Field soLinger:I
     360: aload_0
     361: invokestatic  #99                 // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSoSndBuf:()I
     364: putfield      #100                // Field soSndBuf:I
     367: aload_0
     368: invokestatic  #101                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultSoRcvBuf:()I
     371: putfield      #102                // Field soRcvBuf:I
     374: aload_0
     375: invokestatic  #103                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultThreadPoolName:()Ljava/lang/String;
     378: putfield      #104                // Field threadPoolName:Ljava/lang/String;
     381: aload_0
     382: invokestatic  #105                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHttpClientCodecMaxInitialLineLength:()I
     385: putfield      #106                // Field httpClientCodecMaxInitialLineLength:I
     388: aload_0
     389: invokestatic  #107                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHttpClientCodecMaxHeaderSize:()I
     392: putfield      #108                // Field httpClientCodecMaxHeaderSize:I
     395: aload_0
     396: invokestatic  #109                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHttpClientCodecMaxChunkSize:()I
     399: putfield      #110                // Field httpClientCodecMaxChunkSize:I
     402: aload_0
     403: invokestatic  #111                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHttpClientCodecInitialBufferSize:()I
     406: putfield      #112                // Field httpClientCodecInitialBufferSize:I
     409: aload_0
     410: invokestatic  #113                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultChunkedFileChunkSize:()I
     413: putfield      #114                // Field chunkedFileChunkSize:I
     416: aload_0
     417: invokestatic  #115                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultUseNativeTransport:()Z
     420: putfield      #116                // Field useNativeTransport:Z
     423: aload_0
     424: new           #117                // class java/util/HashMap
     427: dup
     428: invokespecial #118                // Method java/util/HashMap."<init>":()V
     431: putfield      #119                // Field channelOptions:Ljava/util/Map;
     434: aload_0
     435: getstatic     #120                // Field org/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory.EAGER:Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;
     438: putfield      #121                // Field responseBodyPartFactory:Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;
     441: aload_0
     442: invokestatic  #122                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultIoThreadsCount:()I
     445: putfield      #123                // Field ioThreadsCount:I
     448: aload_0
     449: invokestatic  #124                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHashedWheelTimerTickDuration:()I
     452: i2l
     453: putfield      #125                // Field hashedWheelTickDuration:J
     456: aload_0
     457: invokestatic  #126                // Method org/asynchttpclient/config/AsyncHttpClientConfigDefaults.defaultHashedWheelTimerSize:()I
     460: putfield      #127                // Field hashedWheelSize:I
     463: aload_0
     464: aload_1
     465: invokeinterface #128,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isFollowRedirect:()Z
     470: putfield      #8                  // Field followRedirect:Z
     473: aload_0
     474: aload_1
     475: invokeinterface #129,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getMaxRedirects:()I
     480: putfield      #10                 // Field maxRedirects:I
     483: aload_0
     484: aload_1
     485: invokeinterface #130,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isStrict302Handling:()Z
     490: putfield      #12                 // Field strict302Handling:Z
     493: aload_0
     494: aload_1
     495: invokeinterface #131,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isCompressionEnforced:()Z
     500: putfield      #14                 // Field compressionEnforced:Z
     503: aload_0
     504: aload_1
     505: invokeinterface #132,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getUserAgent:()Ljava/lang/String;
     510: putfield      #16                 // Field userAgent:Ljava/lang/String;
     513: aload_0
     514: aload_1
     515: invokeinterface #133,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getRealm:()Lorg/asynchttpclient/Realm;
     520: putfield      #134                // Field realm:Lorg/asynchttpclient/Realm;
     523: aload_0
     524: aload_1
     525: invokeinterface #135,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getMaxRequestRetry:()I
     530: putfield      #18                 // Field maxRequestRetry:I
     533: aload_0
     534: aload_1
     535: invokeinterface #136,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isDisableUrlEncodingForBoundRequests:()Z
     540: putfield      #20                 // Field disableUrlEncodingForBoundRequests:Z
     543: aload_0
     544: aload_1
     545: invokeinterface #137,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isUseLaxCookieEncoder:()Z
     550: putfield      #22                 // Field useLaxCookieEncoder:Z
     553: aload_0
     554: aload_1
     555: invokeinterface #138,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isDisableZeroCopy:()Z
     560: putfield      #24                 // Field disableZeroCopy:Z
     563: aload_0
     564: aload_1
     565: invokeinterface #139,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isKeepEncodingHeader:()Z
     570: putfield      #26                 // Field keepEncodingHeader:Z
     573: aload_0
     574: aload_1
     575: invokeinterface #140,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getProxyServerSelector:()Lorg/asynchttpclient/proxy/ProxyServerSelector;
     580: putfield      #141                // Field proxyServerSelector:Lorg/asynchttpclient/proxy/ProxyServerSelector;
     583: aload_0
     584: aload_1
     585: invokeinterface #142,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isAggregateWebSocketFrameFragments:()Z
     590: putfield      #34                 // Field aggregateWebSocketFrameFragments:Z
     593: aload_0
     594: aload_1
     595: invokeinterface #143,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isEnableWebSocketCompression:()Z
     600: putfield      #36                 // Field enablewebSocketCompression:Z
     603: aload_0
     604: aload_1
     605: invokeinterface #144,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getWebSocketMaxBufferSize:()I
     610: putfield      #38                 // Field webSocketMaxBufferSize:I
     613: aload_0
     614: aload_1
     615: invokeinterface #145,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getWebSocketMaxFrameSize:()I
     620: putfield      #40                 // Field webSocketMaxFrameSize:I
     623: aload_0
     624: aload_1
     625: invokeinterface #146,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getConnectTimeout:()I
     630: putfield      #42                 // Field connectTimeout:I
     633: aload_0
     634: aload_1
     635: invokeinterface #147,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getRequestTimeout:()I
     640: putfield      #44                 // Field requestTimeout:I
     643: aload_0
     644: aload_1
     645: invokeinterface #148,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getReadTimeout:()I
     650: putfield      #46                 // Field readTimeout:I
     653: aload_0
     654: aload_1
     655: invokeinterface #149,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getShutdownQuietPeriod:()I
     660: putfield      #48                 // Field shutdownQuietPeriod:I
     663: aload_0
     664: aload_1
     665: invokeinterface #150,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getShutdownTimeout:()I
     670: putfield      #50                 // Field shutdownTimeout:I
     673: aload_0
     674: aload_1
     675: invokeinterface #151,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isKeepAlive:()Z
     680: putfield      #52                 // Field keepAlive:Z
     683: aload_0
     684: aload_1
     685: invokeinterface #152,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getPooledConnectionIdleTimeout:()I
     690: putfield      #54                 // Field pooledConnectionIdleTimeout:I
     693: aload_0
     694: aload_1
     695: invokeinterface #153,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getConnectionTtl:()I
     700: putfield      #58                 // Field connectionTtl:I
     703: aload_0
     704: aload_1
     705: invokeinterface #154,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getMaxConnections:()I
     710: putfield      #60                 // Field maxConnections:I
     713: aload_0
     714: aload_1
     715: invokeinterface #155,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getMaxConnectionsPerHost:()I
     720: putfield      #62                 // Field maxConnectionsPerHost:I
     723: aload_0
     724: aload_1
     725: invokeinterface #156,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getChannelPool:()Lorg/asynchttpclient/channel/ChannelPool;
     730: putfield      #157                // Field channelPool:Lorg/asynchttpclient/channel/ChannelPool;
     733: aload_0
     734: aload_1
     735: invokeinterface #158,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getConnectionSemaphoreFactory:()Lorg/asynchttpclient/netty/channel/ConnectionSemaphoreFactory;
     740: putfield      #159                // Field connectionSemaphoreFactory:Lorg/asynchttpclient/netty/channel/ConnectionSemaphoreFactory;
     743: aload_0
     744: aload_1
     745: invokeinterface #160,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getKeepAliveStrategy:()Lorg/asynchttpclient/channel/KeepAliveStrategy;
     750: putfield      #67                 // Field keepAliveStrategy:Lorg/asynchttpclient/channel/KeepAliveStrategy;
     753: aload_0
     754: aload_1
     755: invokeinterface #161,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isUseInsecureTrustManager:()Z
     760: putfield      #71                 // Field useInsecureTrustManager:Z
     763: aload_0
     764: aload_1
     765: invokeinterface #162,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getHandshakeTimeout:()I
     770: putfield      #75                 // Field handshakeTimeout:I
     773: aload_0
     774: aload_1
     775: invokeinterface #163,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getEnabledProtocols:()[Ljava/lang/String;
     780: putfield      #77                 // Field enabledProtocols:[Ljava/lang/String;
     783: aload_0
     784: aload_1
     785: invokeinterface #164,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getEnabledCipherSuites:()[Ljava/lang/String;
     790: putfield      #79                 // Field enabledCipherSuites:[Ljava/lang/String;
     793: aload_0
     794: aload_1
     795: invokeinterface #165,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isFilterInsecureCipherSuites:()Z
     800: putfield      #81                 // Field filterInsecureCipherSuites:Z
     803: aload_0
     804: aload_1
     805: invokeinterface #166,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getSslSessionCacheSize:()I
     810: putfield      #83                 // Field sslSessionCacheSize:I
     813: aload_0
     814: aload_1
     815: invokeinterface #167,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getSslSessionTimeout:()I
     820: putfield      #85                 // Field sslSessionTimeout:I
     823: aload_0
     824: aload_1
     825: invokeinterface #168,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getSslContext:()Lio/netty/handler/ssl/SslContext;
     830: putfield      #169                // Field sslContext:Lio/netty/handler/ssl/SslContext;
     833: aload_0
     834: aload_1
     835: invokeinterface #170,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getSslEngineFactory:()Lorg/asynchttpclient/SslEngineFactory;
     840: putfield      #171                // Field sslEngineFactory:Lorg/asynchttpclient/SslEngineFactory;
     843: aload_0
     844: getfield      #4                  // Field requestFilters:Ljava/util/List;
     847: aload_1
     848: invokeinterface #172,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getRequestFilters:()Ljava/util/List;
     853: invokeinterface #173,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     858: pop
     859: aload_0
     860: getfield      #5                  // Field responseFilters:Ljava/util/List;
     863: aload_1
     864: invokeinterface #174,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getResponseFilters:()Ljava/util/List;
     869: invokeinterface #173,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     874: pop
     875: aload_0
     876: getfield      #6                  // Field ioExceptionFilters:Ljava/util/List;
     879: aload_1
     880: invokeinterface #175,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getIoExceptionFilters:()Ljava/util/List;
     885: invokeinterface #173,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     890: pop
     891: aload_0
     892: aload_1
     893: invokeinterface #176,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isTcpNoDelay:()Z
     898: putfield      #92                 // Field tcpNoDelay:Z
     901: aload_0
     902: aload_1
     903: invokeinterface #177,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isSoReuseAddress:()Z
     908: putfield      #94                 // Field soReuseAddress:Z
     911: aload_0
     912: aload_1
     913: invokeinterface #178,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isSoKeepAlive:()Z
     918: putfield      #96                 // Field soKeepAlive:Z
     921: aload_0
     922: aload_1
     923: invokeinterface #179,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getSoLinger:()I
     928: putfield      #98                 // Field soLinger:I
     931: aload_0
     932: aload_1
     933: invokeinterface #180,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getSoSndBuf:()I
     938: putfield      #100                // Field soSndBuf:I
     941: aload_0
     942: aload_1
     943: invokeinterface #181,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getSoRcvBuf:()I
     948: putfield      #102                // Field soRcvBuf:I
     951: aload_0
     952: aload_1
     953: invokeinterface #182,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getThreadPoolName:()Ljava/lang/String;
     958: putfield      #104                // Field threadPoolName:Ljava/lang/String;
     961: aload_0
     962: aload_1
     963: invokeinterface #183,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getHttpClientCodecMaxInitialLineLength:()I
     968: putfield      #106                // Field httpClientCodecMaxInitialLineLength:I
     971: aload_0
     972: aload_1
     973: invokeinterface #184,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getHttpClientCodecMaxHeaderSize:()I
     978: putfield      #108                // Field httpClientCodecMaxHeaderSize:I
     981: aload_0
     982: aload_1
     983: invokeinterface #185,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getHttpClientCodecMaxChunkSize:()I
     988: putfield      #110                // Field httpClientCodecMaxChunkSize:I
     991: aload_0
     992: aload_1
     993: invokeinterface #186,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getChunkedFileChunkSize:()I
     998: putfield      #114                // Field chunkedFileChunkSize:I
    1001: aload_0
    1002: getfield      #119                // Field channelOptions:Ljava/util/Map;
    1005: aload_1
    1006: invokeinterface #187,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getChannelOptions:()Ljava/util/Map;
    1011: invokeinterface #188,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
    1016: aload_0
    1017: aload_1
    1018: invokeinterface #189,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getEventLoopGroup:()Lio/netty/channel/EventLoopGroup;
    1023: putfield      #190                // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
    1026: aload_0
    1027: aload_1
    1028: invokeinterface #191,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isUseNativeTransport:()Z
    1033: putfield      #116                // Field useNativeTransport:Z
    1036: aload_0
    1037: aload_1
    1038: invokeinterface #192,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
    1043: putfield      #193                // Field allocator:Lio/netty/buffer/ByteBufAllocator;
    1046: aload_0
    1047: aload_1
    1048: invokeinterface #194,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getNettyTimer:()Lio/netty/util/Timer;
    1053: putfield      #195                // Field nettyTimer:Lio/netty/util/Timer;
    1056: aload_0
    1057: aload_1
    1058: invokeinterface #196,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getThreadFactory:()Ljava/util/concurrent/ThreadFactory;
    1063: putfield      #197                // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
    1066: aload_0
    1067: aload_1
    1068: invokeinterface #198,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getHttpAdditionalChannelInitializer:()Ljava/util/function/Consumer;
    1073: putfield      #199                // Field httpAdditionalChannelInitializer:Ljava/util/function/Consumer;
    1076: aload_0
    1077: aload_1
    1078: invokeinterface #200,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getWsAdditionalChannelInitializer:()Ljava/util/function/Consumer;
    1083: putfield      #201                // Field wsAdditionalChannelInitializer:Ljava/util/function/Consumer;
    1086: aload_0
    1087: aload_1
    1088: invokeinterface #202,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getResponseBodyPartFactory:()Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;
    1093: putfield      #121                // Field responseBodyPartFactory:Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;
    1096: aload_0
    1097: aload_1
    1098: invokeinterface #203,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getIoThreadsCount:()I
    1103: putfield      #123                // Field ioThreadsCount:I
    1106: aload_0
    1107: aload_1
    1108: invokeinterface #204,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getHashedWheelTimerTickDuration:()J
    1113: putfield      #125                // Field hashedWheelTickDuration:J
    1116: aload_0
    1117: aload_1
    1118: invokeinterface #205,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getHashedWheelTimerSize:()I
    1123: putfield      #127                // Field hashedWheelSize:I
    1126: return

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setFollowRedirect(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field followRedirect:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setMaxRedirects(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field maxRedirects:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setStrict302Handling(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field strict302Handling:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setCompressionEnforced(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field compressionEnforced:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setUserAgent(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field userAgent:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setRealm(org.asynchttpclient.Realm);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #134                // Field realm:Lorg/asynchttpclient/Realm;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setRealm(org.asynchttpclient.Realm$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #206                // Method org/asynchttpclient/Realm$Builder.build:()Lorg/asynchttpclient/Realm;
       5: putfield      #134                // Field realm:Lorg/asynchttpclient/Realm;
       8: aload_0
       9: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setMaxRequestRetry(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field maxRequestRetry:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setDisableUrlEncodingForBoundRequests(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field disableUrlEncodingForBoundRequests:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setUseLaxCookieEncoder(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field useLaxCookieEncoder:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setDisableZeroCopy(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field disableZeroCopy:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setKeepEncodingHeader(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field keepEncodingHeader:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setProxyServerSelector(org.asynchttpclient.proxy.ProxyServerSelector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #141                // Field proxyServerSelector:Lorg/asynchttpclient/proxy/ProxyServerSelector;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setValidateResponseHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field validateResponseHeaders:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setProxyServer(org.asynchttpclient.proxy.ProxyServer);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #207,  0            // InvokeDynamic #0:select:(Lorg/asynchttpclient/proxy/ProxyServer;)Lorg/asynchttpclient/proxy/ProxyServerSelector;
       7: putfield      #141                // Field proxyServerSelector:Lorg/asynchttpclient/proxy/ProxyServerSelector;
      10: aload_0
      11: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setProxyServer(org.asynchttpclient.proxy.ProxyServer$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #208                // Method org/asynchttpclient/proxy/ProxyServer$Builder.build:()Lorg/asynchttpclient/proxy/ProxyServer;
       5: invokevirtual #209                // Method setProxyServer:(Lorg/asynchttpclient/proxy/ProxyServer;)Lorg/asynchttpclient/DefaultAsyncHttpClientConfig$Builder;
       8: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setUseProxySelector(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field useProxySelector:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setUseProxyProperties(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field useProxyProperties:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setAggregateWebSocketFrameFragments(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field aggregateWebSocketFrameFragments:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setEnablewebSocketCompression(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field enablewebSocketCompression:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setWebSocketMaxBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field webSocketMaxBufferSize:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setWebSocketMaxFrameSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field webSocketMaxFrameSize:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setConnectTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #42                 // Field connectTimeout:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setRequestTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #44                 // Field requestTimeout:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setReadTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #46                 // Field readTimeout:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setShutdownQuietPeriod(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #48                 // Field shutdownQuietPeriod:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setShutdownTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field shutdownTimeout:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setKeepAlive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #52                 // Field keepAlive:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setPooledConnectionIdleTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #54                 // Field pooledConnectionIdleTimeout:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setConnectionPoolCleanerPeriod(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #56                 // Field connectionPoolCleanerPeriod:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setConnectionTtl(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #58                 // Field connectionTtl:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setMaxConnections(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #60                 // Field maxConnections:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setMaxConnectionsPerHost(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #62                 // Field maxConnectionsPerHost:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setAcquireFreeChannelTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #64                 // Field acquireFreeChannelTimeout:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setChannelPool(org.asynchttpclient.channel.ChannelPool);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #157                // Field channelPool:Lorg/asynchttpclient/channel/ChannelPool;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setConnectionSemaphoreFactory(org.asynchttpclient.netty.channel.ConnectionSemaphoreFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #159                // Field connectionSemaphoreFactory:Lorg/asynchttpclient/netty/channel/ConnectionSemaphoreFactory;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setKeepAliveStrategy(org.asynchttpclient.channel.KeepAliveStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field keepAliveStrategy:Lorg/asynchttpclient/channel/KeepAliveStrategy;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setUseOpenSsl(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #69                 // Field useOpenSsl:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setUseInsecureTrustManager(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #71                 // Field useInsecureTrustManager:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setDisableHttpsEndpointIdentificationAlgorithm(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #73                 // Field disableHttpsEndpointIdentificationAlgorithm:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setHandshakeTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #75                 // Field handshakeTimeout:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setEnabledProtocols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field enabledProtocols:[Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setEnabledCipherSuites(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #79                 // Field enabledCipherSuites:[Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setFilterInsecureCipherSuites(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #81                 // Field filterInsecureCipherSuites:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setSslSessionCacheSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #210                // Method java/lang/Integer.intValue:()I
       5: putfield      #83                 // Field sslSessionCacheSize:I
       8: aload_0
       9: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setSslSessionTimeout(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #210                // Method java/lang/Integer.intValue:()I
       5: putfield      #85                 // Field sslSessionTimeout:I
       8: aload_0
       9: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setSslContext(io.netty.handler.ssl.SslContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #169                // Field sslContext:Lio/netty/handler/ssl/SslContext;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setSslEngineFactory(org.asynchttpclient.SslEngineFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #171                // Field sslEngineFactory:Lorg/asynchttpclient/SslEngineFactory;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder addRequestFilter(org.asynchttpclient.filter.RequestFilter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field requestFilters:Ljava/util/List;
       4: aload_1
       5: invokeinterface #211,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder removeRequestFilter(org.asynchttpclient.filter.RequestFilter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field requestFilters:Ljava/util/List;
       4: aload_1
       5: invokeinterface #212,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder addResponseFilter(org.asynchttpclient.filter.ResponseFilter);
    Code:
       0: aload_0
       1: getfield      #5                  // Field responseFilters:Ljava/util/List;
       4: aload_1
       5: invokeinterface #211,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder removeResponseFilter(org.asynchttpclient.filter.ResponseFilter);
    Code:
       0: aload_0
       1: getfield      #5                  // Field responseFilters:Ljava/util/List;
       4: aload_1
       5: invokeinterface #212,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder addIOExceptionFilter(org.asynchttpclient.filter.IOExceptionFilter);
    Code:
       0: aload_0
       1: getfield      #6                  // Field ioExceptionFilters:Ljava/util/List;
       4: aload_1
       5: invokeinterface #211,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder removeIOExceptionFilter(org.asynchttpclient.filter.IOExceptionFilter);
    Code:
       0: aload_0
       1: getfield      #6                  // Field ioExceptionFilters:Ljava/util/List;
       4: aload_1
       5: invokeinterface #212,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setCookieStore(org.asynchttpclient.cookie.CookieStore);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #88                 // Field cookieStore:Lorg/asynchttpclient/cookie/CookieStore;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setExpiredCookieEvictionDelay(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #90                 // Field expiredCookieEvictionDelay:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setTcpNoDelay(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #92                 // Field tcpNoDelay:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setSoReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #94                 // Field soReuseAddress:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setSoKeepAlive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #96                 // Field soKeepAlive:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setSoLinger(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #98                 // Field soLinger:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setSoSndBuf(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #100                // Field soSndBuf:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setSoRcvBuf(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #102                // Field soRcvBuf:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setThreadPoolName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #104                // Field threadPoolName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setHttpClientCodecMaxInitialLineLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #106                // Field httpClientCodecMaxInitialLineLength:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setHttpClientCodecMaxHeaderSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #108                // Field httpClientCodecMaxHeaderSize:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setHttpClientCodecMaxChunkSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #110                // Field httpClientCodecMaxChunkSize:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setHttpClientCodecInitialBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #112                // Field httpClientCodecInitialBufferSize:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setChunkedFileChunkSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #114                // Field chunkedFileChunkSize:I
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setHashedWheelTickDuration(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #125                // Field hashedWheelTickDuration:J
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setHashedWheelSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #127                // Field hashedWheelSize:I
       5: aload_0
       6: areturn

  public <T> org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder addChannelOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: getfield      #119                // Field channelOptions:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #213,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setEventLoopGroup(io.netty.channel.EventLoopGroup);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #190                // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setUseNativeTransport(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #116                // Field useNativeTransport:Z
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #193                // Field allocator:Lio/netty/buffer/ByteBufAllocator;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setNettyTimer(io.netty.util.Timer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #195                // Field nettyTimer:Lio/netty/util/Timer;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #197                // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setHttpAdditionalChannelInitializer(java.util.function.Consumer<io.netty.channel.Channel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #199                // Field httpAdditionalChannelInitializer:Ljava/util/function/Consumer;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setWsAdditionalChannelInitializer(java.util.function.Consumer<io.netty.channel.Channel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #201                // Field wsAdditionalChannelInitializer:Ljava/util/function/Consumer;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setResponseBodyPartFactory(org.asynchttpclient.AsyncHttpClientConfig$ResponseBodyPartFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #121                // Field responseBodyPartFactory:Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;
       5: aload_0
       6: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder setIoThreadsCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #123                // Field ioThreadsCount:I
       5: aload_0
       6: areturn

  private org.asynchttpclient.proxy.ProxyServerSelector resolveProxyServerSelector();
    Code:
       0: aload_0
       1: getfield      #141                // Field proxyServerSelector:Lorg/asynchttpclient/proxy/ProxyServerSelector;
       4: ifnull        12
       7: aload_0
       8: getfield      #141                // Field proxyServerSelector:Lorg/asynchttpclient/proxy/ProxyServerSelector;
      11: areturn
      12: aload_0
      13: getfield      #28                 // Field useProxySelector:Z
      16: ifeq          23
      19: invokestatic  #214                // Method org/asynchttpclient/util/ProxyUtils.getJdkDefaultProxyServerSelector:()Lorg/asynchttpclient/proxy/ProxyServerSelector;
      22: areturn
      23: aload_0
      24: getfield      #30                 // Field useProxyProperties:Z
      27: ifeq          37
      30: invokestatic  #215                // Method java/lang/System.getProperties:()Ljava/util/Properties;
      33: invokestatic  #216                // Method org/asynchttpclient/util/ProxyUtils.createProxyServerSelector:(Ljava/util/Properties;)Lorg/asynchttpclient/proxy/ProxyServerSelector;
      36: areturn
      37: getstatic     #217                // Field org/asynchttpclient/proxy/ProxyServerSelector.NO_PROXY_SELECTOR:Lorg/asynchttpclient/proxy/ProxyServerSelector;
      40: areturn

  public org.asynchttpclient.DefaultAsyncHttpClientConfig build();
    Code:
       0: new           #218                // class org/asynchttpclient/DefaultAsyncHttpClientConfig
       3: dup
       4: aload_0
       5: getfield      #8                  // Field followRedirect:Z
       8: aload_0
       9: getfield      #10                 // Field maxRedirects:I
      12: aload_0
      13: getfield      #12                 // Field strict302Handling:Z
      16: aload_0
      17: getfield      #14                 // Field compressionEnforced:Z
      20: aload_0
      21: getfield      #16                 // Field userAgent:Ljava/lang/String;
      24: aload_0
      25: getfield      #134                // Field realm:Lorg/asynchttpclient/Realm;
      28: aload_0
      29: getfield      #18                 // Field maxRequestRetry:I
      32: aload_0
      33: getfield      #20                 // Field disableUrlEncodingForBoundRequests:Z
      36: aload_0
      37: getfield      #22                 // Field useLaxCookieEncoder:Z
      40: aload_0
      41: getfield      #24                 // Field disableZeroCopy:Z
      44: aload_0
      45: getfield      #26                 // Field keepEncodingHeader:Z
      48: aload_0
      49: invokespecial #219                // Method resolveProxyServerSelector:()Lorg/asynchttpclient/proxy/ProxyServerSelector;
      52: aload_0
      53: getfield      #32                 // Field validateResponseHeaders:Z
      56: aload_0
      57: getfield      #34                 // Field aggregateWebSocketFrameFragments:Z
      60: aload_0
      61: getfield      #36                 // Field enablewebSocketCompression:Z
      64: aload_0
      65: getfield      #42                 // Field connectTimeout:I
      68: aload_0
      69: getfield      #44                 // Field requestTimeout:I
      72: aload_0
      73: getfield      #46                 // Field readTimeout:I
      76: aload_0
      77: getfield      #48                 // Field shutdownQuietPeriod:I
      80: aload_0
      81: getfield      #50                 // Field shutdownTimeout:I
      84: aload_0
      85: getfield      #52                 // Field keepAlive:Z
      88: aload_0
      89: getfield      #54                 // Field pooledConnectionIdleTimeout:I
      92: aload_0
      93: getfield      #56                 // Field connectionPoolCleanerPeriod:I
      96: aload_0
      97: getfield      #58                 // Field connectionTtl:I
     100: aload_0
     101: getfield      #60                 // Field maxConnections:I
     104: aload_0
     105: getfield      #62                 // Field maxConnectionsPerHost:I
     108: aload_0
     109: getfield      #64                 // Field acquireFreeChannelTimeout:I
     112: aload_0
     113: getfield      #157                // Field channelPool:Lorg/asynchttpclient/channel/ChannelPool;
     116: aload_0
     117: getfield      #159                // Field connectionSemaphoreFactory:Lorg/asynchttpclient/netty/channel/ConnectionSemaphoreFactory;
     120: aload_0
     121: getfield      #67                 // Field keepAliveStrategy:Lorg/asynchttpclient/channel/KeepAliveStrategy;
     124: aload_0
     125: getfield      #69                 // Field useOpenSsl:Z
     128: aload_0
     129: getfield      #71                 // Field useInsecureTrustManager:Z
     132: aload_0
     133: getfield      #73                 // Field disableHttpsEndpointIdentificationAlgorithm:Z
     136: aload_0
     137: getfield      #75                 // Field handshakeTimeout:I
     140: aload_0
     141: getfield      #77                 // Field enabledProtocols:[Ljava/lang/String;
     144: aload_0
     145: getfield      #79                 // Field enabledCipherSuites:[Ljava/lang/String;
     148: aload_0
     149: getfield      #81                 // Field filterInsecureCipherSuites:Z
     152: aload_0
     153: getfield      #83                 // Field sslSessionCacheSize:I
     156: aload_0
     157: getfield      #85                 // Field sslSessionTimeout:I
     160: aload_0
     161: getfield      #169                // Field sslContext:Lio/netty/handler/ssl/SslContext;
     164: aload_0
     165: getfield      #171                // Field sslEngineFactory:Lorg/asynchttpclient/SslEngineFactory;
     168: aload_0
     169: getfield      #4                  // Field requestFilters:Ljava/util/List;
     172: invokeinterface #220,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     177: ifeq          186
     180: invokestatic  #221                // Method java/util/Collections.emptyList:()Ljava/util/List;
     183: goto          193
     186: aload_0
     187: getfield      #4                  // Field requestFilters:Ljava/util/List;
     190: invokestatic  #222                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     193: aload_0
     194: getfield      #5                  // Field responseFilters:Ljava/util/List;
     197: invokeinterface #220,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     202: ifeq          211
     205: invokestatic  #221                // Method java/util/Collections.emptyList:()Ljava/util/List;
     208: goto          218
     211: aload_0
     212: getfield      #5                  // Field responseFilters:Ljava/util/List;
     215: invokestatic  #222                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     218: aload_0
     219: getfield      #6                  // Field ioExceptionFilters:Ljava/util/List;
     222: invokeinterface #220,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     227: ifeq          236
     230: invokestatic  #221                // Method java/util/Collections.emptyList:()Ljava/util/List;
     233: goto          243
     236: aload_0
     237: getfield      #6                  // Field ioExceptionFilters:Ljava/util/List;
     240: invokestatic  #222                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     243: aload_0
     244: getfield      #88                 // Field cookieStore:Lorg/asynchttpclient/cookie/CookieStore;
     247: aload_0
     248: getfield      #90                 // Field expiredCookieEvictionDelay:I
     251: aload_0
     252: getfield      #92                 // Field tcpNoDelay:Z
     255: aload_0
     256: getfield      #94                 // Field soReuseAddress:Z
     259: aload_0
     260: getfield      #96                 // Field soKeepAlive:Z
     263: aload_0
     264: getfield      #98                 // Field soLinger:I
     267: aload_0
     268: getfield      #100                // Field soSndBuf:I
     271: aload_0
     272: getfield      #102                // Field soRcvBuf:I
     275: aload_0
     276: getfield      #104                // Field threadPoolName:Ljava/lang/String;
     279: aload_0
     280: getfield      #106                // Field httpClientCodecMaxInitialLineLength:I
     283: aload_0
     284: getfield      #108                // Field httpClientCodecMaxHeaderSize:I
     287: aload_0
     288: getfield      #110                // Field httpClientCodecMaxChunkSize:I
     291: aload_0
     292: getfield      #112                // Field httpClientCodecInitialBufferSize:I
     295: aload_0
     296: getfield      #114                // Field chunkedFileChunkSize:I
     299: aload_0
     300: getfield      #38                 // Field webSocketMaxBufferSize:I
     303: aload_0
     304: getfield      #40                 // Field webSocketMaxFrameSize:I
     307: aload_0
     308: getfield      #119                // Field channelOptions:Ljava/util/Map;
     311: invokeinterface #223,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     316: ifeq          325
     319: invokestatic  #224                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     322: goto          332
     325: aload_0
     326: getfield      #119                // Field channelOptions:Ljava/util/Map;
     329: invokestatic  #225                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     332: aload_0
     333: getfield      #190                // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
     336: aload_0
     337: getfield      #116                // Field useNativeTransport:Z
     340: aload_0
     341: getfield      #193                // Field allocator:Lio/netty/buffer/ByteBufAllocator;
     344: aload_0
     345: getfield      #195                // Field nettyTimer:Lio/netty/util/Timer;
     348: aload_0
     349: getfield      #197                // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
     352: aload_0
     353: getfield      #199                // Field httpAdditionalChannelInitializer:Ljava/util/function/Consumer;
     356: aload_0
     357: getfield      #201                // Field wsAdditionalChannelInitializer:Ljava/util/function/Consumer;
     360: aload_0
     361: getfield      #121                // Field responseBodyPartFactory:Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;
     364: aload_0
     365: getfield      #123                // Field ioThreadsCount:I
     368: aload_0
     369: getfield      #125                // Field hashedWheelTickDuration:J
     372: aload_0
     373: getfield      #127                // Field hashedWheelSize:I
     376: aconst_null
     377: invokespecial #226                // Method org/asynchttpclient/DefaultAsyncHttpClientConfig."<init>":(ZIZZLjava/lang/String;Lorg/asynchttpclient/Realm;IZZZZLorg/asynchttpclient/proxy/ProxyServerSelector;ZZZIIIIIZIIIIIILorg/asynchttpclient/channel/ChannelPool;Lorg/asynchttpclient/netty/channel/ConnectionSemaphoreFactory;Lorg/asynchttpclient/channel/KeepAliveStrategy;ZZZI[Ljava/lang/String;[Ljava/lang/String;ZIILio/netty/handler/ssl/SslContext;Lorg/asynchttpclient/SslEngineFactory;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/asynchttpclient/cookie/CookieStore;IZZZIIILjava/lang/String;IIIIIIILjava/util/Map;Lio/netty/channel/EventLoopGroup;ZLio/netty/buffer/ByteBufAllocator;Lio/netty/util/Timer;Ljava/util/concurrent/ThreadFactory;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;IJILorg/asynchttpclient/DefaultAsyncHttpClientConfig$1;)V
     380: areturn

  private static org.asynchttpclient.proxy.ProxyServer lambda$setProxyServer$0(org.asynchttpclient.proxy.ProxyServer, org.asynchttpclient.uri.Uri);
    Code:
       0: aload_0
       1: areturn
}
