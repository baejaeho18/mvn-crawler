Compiled from "PerHostConnectionSemaphore.java"
public class org.asynchttpclient.netty.channel.PerHostConnectionSemaphore implements org.asynchttpclient.netty.channel.ConnectionSemaphore {
  protected final java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.util.concurrent.Semaphore> freeChannelsPerHost;

  protected final int maxConnectionsPerHost;

  protected final java.io.IOException tooManyConnectionsPerHost;

  protected final int acquireTimeout;

  org.asynchttpclient.netty.channel.PerHostConnectionSemaphore(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field freeChannelsPerHost:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: new           #5                  // class org/asynchttpclient/exception/TooManyConnectionsPerHostException
      19: dup
      20: iload_1
      21: invokespecial #6                  // Method org/asynchttpclient/exception/TooManyConnectionsPerHostException."<init>":(I)V
      24: ldc           #7                  // class org/asynchttpclient/netty/channel/PerHostConnectionSemaphore
      26: ldc           #8                  // String acquireChannelLock
      28: invokestatic  #9                  // Method org/asynchttpclient/util/ThrowableUtil.unknownStackTrace:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;
      31: checkcast     #10                 // class java/io/IOException
      34: putfield      #11                 // Field tooManyConnectionsPerHost:Ljava/io/IOException;
      37: aload_0
      38: iload_1
      39: putfield      #12                 // Field maxConnectionsPerHost:I
      42: aload_0
      43: iconst_0
      44: iload_2
      45: invokestatic  #13                 // Method java/lang/Math.max:(II)I
      48: putfield      #14                 // Field acquireTimeout:I
      51: return

  public void acquireChannelLock(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method getFreeConnectionsForHost:(Ljava/lang/Object;)Ljava/util/concurrent/Semaphore;
       5: aload_0
       6: getfield      #14                 // Field acquireTimeout:I
       9: i2l
      10: getstatic     #16                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      13: invokevirtual #17                 // Method java/util/concurrent/Semaphore.tryAcquire:(JLjava/util/concurrent/TimeUnit;)Z
      16: ifne          24
      19: aload_0
      20: getfield      #11                 // Field tooManyConnectionsPerHost:Ljava/io/IOException;
      23: athrow
      24: goto          37
      27: astore_2
      28: new           #19                 // class java/lang/RuntimeException
      31: dup
      32: aload_2
      33: invokespecial #20                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      36: athrow
      37: return
    Exception table:
       from    to  target type
           0    24    27   Class java/lang/InterruptedException

  public void releaseChannelLock(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method getFreeConnectionsForHost:(Ljava/lang/Object;)Ljava/util/concurrent/Semaphore;
       5: invokevirtual #21                 // Method java/util/concurrent/Semaphore.release:()V
       8: return

  protected java.util.concurrent.Semaphore getFreeConnectionsForHost(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #12                 // Field maxConnectionsPerHost:I
       4: ifle          27
       7: aload_0
       8: getfield      #4                  // Field freeChannelsPerHost:Ljava/util/concurrent/ConcurrentHashMap;
      11: aload_1
      12: aload_0
      13: invokedynamic #22,  0             // InvokeDynamic #0:apply:(Lorg/asynchttpclient/netty/channel/PerHostConnectionSemaphore;)Ljava/util/function/Function;
      18: invokevirtual #23                 // Method java/util/concurrent/ConcurrentHashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      21: checkcast     #24                 // class java/util/concurrent/Semaphore
      24: goto          30
      27: getstatic     #25                 // Field org/asynchttpclient/netty/channel/InfiniteSemaphore.INSTANCE:Lorg/asynchttpclient/netty/channel/InfiniteSemaphore;
      30: areturn

  private java.util.concurrent.Semaphore lambda$getFreeConnectionsForHost$0(java.lang.Object);
    Code:
       0: new           #24                 // class java/util/concurrent/Semaphore
       3: dup
       4: aload_0
       5: getfield      #12                 // Field maxConnectionsPerHost:I
       8: invokespecial #26                 // Method java/util/concurrent/Semaphore."<init>":(I)V
      11: areturn
}
