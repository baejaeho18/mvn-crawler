Compiled from "WebSocketHandler.java"
public final class org.asynchttpclient.netty.handler.WebSocketHandler extends org.asynchttpclient.netty.handler.AsyncHttpClientHandler {
  public org.asynchttpclient.netty.handler.WebSocketHandler(org.asynchttpclient.AsyncHttpClientConfig, org.asynchttpclient.netty.channel.ChannelManager, org.asynchttpclient.netty.request.NettyRequestSender);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/asynchttpclient/netty/handler/AsyncHttpClientHandler."<init>":(Lorg/asynchttpclient/AsyncHttpClientConfig;Lorg/asynchttpclient/netty/channel/ChannelManager;Lorg/asynchttpclient/netty/request/NettyRequestSender;)V
       7: return

  private static org.asynchttpclient.ws.WebSocketUpgradeHandler getWebSocketUpgradeHandler(org.asynchttpclient.netty.NettyResponseFuture<?>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/asynchttpclient/netty/NettyResponseFuture.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
       4: checkcast     #3                  // class org/asynchttpclient/ws/WebSocketUpgradeHandler
       7: areturn

  private static org.asynchttpclient.netty.ws.NettyWebSocket getNettyWebSocket(org.asynchttpclient.netty.NettyResponseFuture<?>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method getWebSocketUpgradeHandler:(Lorg/asynchttpclient/netty/NettyResponseFuture;)Lorg/asynchttpclient/ws/WebSocketUpgradeHandler;
       4: invokevirtual #5                  // Method org/asynchttpclient/ws/WebSocketUpgradeHandler.onCompleted:()Lorg/asynchttpclient/netty/ws/NettyWebSocket;
       7: areturn

  private void upgrade(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, org.asynchttpclient.ws.WebSocketUpgradeHandler, io.netty.handler.codec.http.HttpResponse, io.netty.handler.codec.http.HttpHeaders) throws java.lang.Exception;
    Code:
       0: aload         4
       2: invokeinterface #6,  1            // InterfaceMethod io/netty/handler/codec/http/HttpResponse.status:()Lio/netty/handler/codec/http/HttpResponseStatus;
       7: getstatic     #7                  // Field io/netty/handler/codec/http/HttpResponseStatus.SWITCHING_PROTOCOLS:Lio/netty/handler/codec/http/HttpResponseStatus;
      10: invokevirtual #8                  // Method io/netty/handler/codec/http/HttpResponseStatus.equals:(Ljava/lang/Object;)Z
      13: istore        6
      15: aload         4
      17: invokeinterface #9,  1            // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      22: getstatic     #10                 // Field io/netty/handler/codec/http/HttpHeaderNames.UPGRADE:Lio/netty/util/AsciiString;
      25: invokevirtual #11                 // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
      28: ifnull        35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: istore        7
      38: aload         4
      40: invokeinterface #9,  1            // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      45: getstatic     #12                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONNECTION:Lio/netty/util/AsciiString;
      48: invokevirtual #11                 // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
      51: astore        8
      53: getstatic     #13                 // Field io/netty/handler/codec/http/HttpHeaderValues.UPGRADE:Lio/netty/util/AsciiString;
      56: aload         8
      58: invokevirtual #14                 // Method io/netty/util/AsciiString.contentEqualsIgnoreCase:(Ljava/lang/CharSequence;)Z
      61: istore        9
      63: aload_3
      64: aload         5
      66: invokevirtual #15                 // Method org/asynchttpclient/ws/WebSocketUpgradeHandler.onHeadersReceived:(Lio/netty/handler/codec/http/HttpHeaders;)Lorg/asynchttpclient/AsyncHandler$State;
      69: getstatic     #16                 // Field org/asynchttpclient/AsyncHandler$State.CONTINUE:Lorg/asynchttpclient/AsyncHandler$State;
      72: if_acmpne     79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: istore        10
      82: iload         10
      84: ifeq          102
      87: iload         6
      89: ifeq          102
      92: iload         7
      94: ifeq          102
      97: iload         9
      99: ifne          121
     102: aload_0
     103: getfield      #17                 // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
     106: aload_1
     107: aload_2
     108: new           #18                 // class java/io/IOException
     111: dup
     112: ldc           #19                 // String Invalid handshake response
     114: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     117: invokevirtual #21                 // Method org/asynchttpclient/netty/request/NettyRequestSender.abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
     120: return
     121: aload         4
     123: invokeinterface #9,  1            // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
     128: getstatic     #22                 // Field io/netty/handler/codec/http/HttpHeaderNames.SEC_WEBSOCKET_ACCEPT:Lio/netty/util/AsciiString;
     131: invokevirtual #11                 // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
     134: astore        11
     136: aload_2
     137: invokevirtual #23                 // Method org/asynchttpclient/netty/NettyResponseFuture.getNettyRequest:()Lorg/asynchttpclient/netty/request/NettyRequest;
     140: invokevirtual #24                 // Method org/asynchttpclient/netty/request/NettyRequest.getHttpRequest:()Lio/netty/handler/codec/http/HttpRequest;
     143: invokeinterface #25,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
     148: getstatic     #26                 // Field io/netty/handler/codec/http/HttpHeaderNames.SEC_WEBSOCKET_KEY:Lio/netty/util/AsciiString;
     151: invokevirtual #11                 // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
     154: invokestatic  #27                 // Method org/asynchttpclient/ws/WebSocketUtils.getAcceptKey:(Ljava/lang/String;)Ljava/lang/String;
     157: astore        12
     159: aload         11
     161: ifnull        174
     164: aload         11
     166: aload         12
     168: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     171: ifne          220
     174: aload_0
     175: getfield      #17                 // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
     178: aload_1
     179: aload_2
     180: new           #18                 // class java/io/IOException
     183: dup
     184: new           #29                 // class java/lang/StringBuilder
     187: dup
     188: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     191: ldc           #31                 // String Invalid challenge. Actual:
     193: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload         11
     198: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: ldc           #33                 // String . Expected:
     203: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload         12
     208: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     214: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     217: invokevirtual #21                 // Method org/asynchttpclient/netty/request/NettyRequestSender.abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
     220: aload_1
     221: aload_2
     222: invokestatic  #35                 // Method org/asynchttpclient/netty/channel/Channels.setAttribute:(Lio/netty/channel/Channel;Ljava/lang/Object;)V
     225: aload_3
     226: new           #36                 // class org/asynchttpclient/netty/ws/NettyWebSocket
     229: dup
     230: aload_1
     231: aload         5
     233: invokespecial #37                 // Method org/asynchttpclient/netty/ws/NettyWebSocket."<init>":(Lio/netty/channel/Channel;Lio/netty/handler/codec/http/HttpHeaders;)V
     236: invokevirtual #38                 // Method org/asynchttpclient/ws/WebSocketUpgradeHandler.setWebSocket:(Lorg/asynchttpclient/netty/ws/NettyWebSocket;)V
     239: aload_0
     240: getfield      #39                 // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
     243: aload_1
     244: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
     249: invokevirtual #41                 // Method org/asynchttpclient/netty/channel/ChannelManager.upgradePipelineForWebSockets:(Lio/netty/channel/ChannelPipeline;)V
     252: aload_3
     253: invokevirtual #42                 // Method org/asynchttpclient/ws/WebSocketUpgradeHandler.onOpen:()V
     256: goto          274
     259: astore        13
     261: aload_0
     262: getfield      #44                 // Field logger:Lorg/slf4j/Logger;
     265: ldc           #45                 // String onSuccess unexpected exception
     267: aload         13
     269: invokeinterface #46,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     274: aload_2
     275: invokevirtual #47                 // Method org/asynchttpclient/netty/NettyResponseFuture.done:()V
     278: return
    Exception table:
       from    to  target type
         252   256   259   Class java/lang/Exception

  private void abort(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, org.asynchttpclient.ws.WebSocketUpgradeHandler, org.asynchttpclient.HttpResponseStatus);
    Code:
       0: aload_3
       1: new           #18                 // class java/io/IOException
       4: dup
       5: new           #29                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #48                 // String Invalid Status code=
      14: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload         4
      19: invokevirtual #49                 // Method org/asynchttpclient/HttpResponseStatus.getStatusCode:()I
      22: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: ldc           #51                 // String  text=
      27: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload         4
      32: invokevirtual #52                 // Method org/asynchttpclient/HttpResponseStatus.getStatusText:()Ljava/lang/String;
      35: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      44: invokevirtual #53                 // Method org/asynchttpclient/ws/WebSocketUpgradeHandler.onThrowable:(Ljava/lang/Throwable;)V
      47: aload_0
      48: aload_2
      49: aload_1
      50: iconst_1
      51: invokevirtual #54                 // Method finishUpdate:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;Z)V
      54: goto          69
      57: astore        5
      59: aload_0
      60: aload_2
      61: aload_1
      62: iconst_1
      63: invokevirtual #54                 // Method finishUpdate:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;Z)V
      66: aload         5
      68: athrow
      69: return
    Exception table:
       from    to  target type
           0    47    57   any
          57    59    57   any

  public void handleRead(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_3
       1: instanceof    #55                 // class io/netty/handler/codec/http/HttpResponse
       4: ifeq          160
       7: aload_3
       8: checkcast     #55                 // class io/netty/handler/codec/http/HttpResponse
      11: astore        4
      13: aload_0
      14: getfield      #44                 // Field logger:Lorg/slf4j/Logger;
      17: invokeinterface #56,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      22: ifeq          49
      25: aload_2
      26: invokevirtual #23                 // Method org/asynchttpclient/netty/NettyResponseFuture.getNettyRequest:()Lorg/asynchttpclient/netty/request/NettyRequest;
      29: invokevirtual #24                 // Method org/asynchttpclient/netty/request/NettyRequest.getHttpRequest:()Lio/netty/handler/codec/http/HttpRequest;
      32: astore        5
      34: aload_0
      35: getfield      #44                 // Field logger:Lorg/slf4j/Logger;
      38: ldc           #57                 // String \n\nRequest {}\n\nResponse {}\n
      40: aload         5
      42: aload         4
      44: invokeinterface #58,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      49: aload_2
      50: invokestatic  #4                  // Method getWebSocketUpgradeHandler:(Lorg/asynchttpclient/netty/NettyResponseFuture;)Lorg/asynchttpclient/ws/WebSocketUpgradeHandler;
      53: astore        5
      55: new           #59                 // class org/asynchttpclient/netty/NettyResponseStatus
      58: dup
      59: aload_2
      60: invokevirtual #60                 // Method org/asynchttpclient/netty/NettyResponseFuture.getUri:()Lorg/asynchttpclient/uri/Uri;
      63: aload         4
      65: aload_1
      66: invokespecial #61                 // Method org/asynchttpclient/netty/NettyResponseStatus."<init>":(Lorg/asynchttpclient/uri/Uri;Lio/netty/handler/codec/http/HttpResponse;Lio/netty/channel/Channel;)V
      69: astore        6
      71: aload         4
      73: invokeinterface #9,  1            // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      78: astore        7
      80: aload_0
      81: getfield      #62                 // Field interceptors:Lorg/asynchttpclient/netty/handler/intercept/Interceptors;
      84: aload_1
      85: aload_2
      86: aload         5
      88: aload         4
      90: aload         6
      92: aload         7
      94: invokevirtual #63                 // Method org/asynchttpclient/netty/handler/intercept/Interceptors.exitAfterIntercept:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/AsyncHandler;Lio/netty/handler/codec/http/HttpResponse;Lorg/asynchttpclient/HttpResponseStatus;Lio/netty/handler/codec/http/HttpHeaders;)Z
      97: ifne          157
     100: getstatic     #64                 // Field org/asynchttpclient/netty/handler/WebSocketHandler$1.$SwitchMap$org$asynchttpclient$AsyncHandler$State:[I
     103: aload         5
     105: aload         6
     107: invokevirtual #65                 // Method org/asynchttpclient/ws/WebSocketUpgradeHandler.onStatusReceived:(Lorg/asynchttpclient/HttpResponseStatus;)Lorg/asynchttpclient/AsyncHandler$State;
     110: invokevirtual #66                 // Method org/asynchttpclient/AsyncHandler$State.ordinal:()I
     113: iaload
     114: lookupswitch  { // 1
                     1: 132
               default: 147
          }
     132: aload_0
     133: aload_1
     134: aload_2
     135: aload         5
     137: aload         4
     139: aload         7
     141: invokespecial #67                 // Method upgrade:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/ws/WebSocketUpgradeHandler;Lio/netty/handler/codec/http/HttpResponse;Lio/netty/handler/codec/http/HttpHeaders;)V
     144: goto          157
     147: aload_0
     148: aload_1
     149: aload_2
     150: aload         5
     152: aload         6
     154: invokespecial #68                 // Method abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/ws/WebSocketUpgradeHandler;Lorg/asynchttpclient/HttpResponseStatus;)V
     157: goto          226
     160: aload_3
     161: instanceof    #69                 // class io/netty/handler/codec/http/websocketx/WebSocketFrame
     164: ifeq          207
     167: aload_3
     168: checkcast     #69                 // class io/netty/handler/codec/http/websocketx/WebSocketFrame
     171: astore        4
     173: aload_2
     174: invokestatic  #70                 // Method getNettyWebSocket:(Lorg/asynchttpclient/netty/NettyResponseFuture;)Lorg/asynchttpclient/netty/ws/NettyWebSocket;
     177: astore        5
     179: aload         5
     181: invokevirtual #71                 // Method org/asynchttpclient/netty/ws/NettyWebSocket.isReady:()Z
     184: ifeq          197
     187: aload         5
     189: aload         4
     191: invokevirtual #72                 // Method org/asynchttpclient/netty/ws/NettyWebSocket.handleFrame:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;)V
     194: goto          204
     197: aload         5
     199: aload         4
     201: invokevirtual #73                 // Method org/asynchttpclient/netty/ws/NettyWebSocket.bufferFrame:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;)V
     204: goto          226
     207: aload_3
     208: instanceof    #74                 // class io/netty/handler/codec/http/LastHttpContent
     211: ifne          226
     214: aload_0
     215: getfield      #44                 // Field logger:Lorg/slf4j/Logger;
     218: ldc           #75                 // String Invalid message {}
     220: aload_3
     221: invokeinterface #76,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     226: return

  public void handleException(org.asynchttpclient.netty.NettyResponseFuture<?>, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #44                 // Field logger:Lorg/slf4j/Logger;
       4: ldc           #77                 // String onError
       6: aload_2
       7: invokeinterface #46,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      12: aload_1
      13: invokestatic  #70                 // Method getNettyWebSocket:(Lorg/asynchttpclient/netty/NettyResponseFuture;)Lorg/asynchttpclient/netty/ws/NettyWebSocket;
      16: astore_3
      17: aload_3
      18: ifnull        31
      21: aload_3
      22: aload_2
      23: invokevirtual #78                 // Method org/asynchttpclient/netty/ws/NettyWebSocket.onError:(Ljava/lang/Throwable;)V
      26: aload_3
      27: invokevirtual #79                 // Method org/asynchttpclient/netty/ws/NettyWebSocket.sendCloseFrame:()Lio/netty/util/concurrent/Future;
      30: pop
      31: goto          47
      34: astore_3
      35: aload_0
      36: getfield      #44                 // Field logger:Lorg/slf4j/Logger;
      39: ldc           #77                 // String onError
      41: aload_3
      42: invokeinterface #81,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: return
    Exception table:
       from    to  target type
          12    31    34   Class java/lang/Throwable

  public void handleChannelInactive(org.asynchttpclient.netty.NettyResponseFuture<?>);
    Code:
       0: aload_0
       1: getfield      #44                 // Field logger:Lorg/slf4j/Logger;
       4: ldc           #82                 // String Connection was closed abnormally (that is, with no close frame being received).
       6: invokeinterface #83,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      11: aload_1
      12: invokestatic  #70                 // Method getNettyWebSocket:(Lorg/asynchttpclient/netty/NettyResponseFuture;)Lorg/asynchttpclient/netty/ws/NettyWebSocket;
      15: astore_2
      16: aload_2
      17: ifnull        29
      20: aload_2
      21: sipush        1006
      24: ldc           #82                 // String Connection was closed abnormally (that is, with no close frame being received).
      26: invokevirtual #84                 // Method org/asynchttpclient/netty/ws/NettyWebSocket.onClose:(ILjava/lang/String;)V
      29: goto          45
      32: astore_2
      33: aload_0
      34: getfield      #44                 // Field logger:Lorg/slf4j/Logger;
      37: ldc           #77                 // String onError
      39: aload_2
      40: invokeinterface #81,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      45: return
    Exception table:
       from    to  target type
          11    29    32   Class java/lang/Throwable
}
