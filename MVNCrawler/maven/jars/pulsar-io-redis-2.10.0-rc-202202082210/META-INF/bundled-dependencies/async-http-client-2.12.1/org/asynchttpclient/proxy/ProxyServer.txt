Compiled from "ProxyServer.java"
public class org.asynchttpclient.proxy.ProxyServer {
  private final java.lang.String host;

  private final int port;

  private final int securedPort;

  private final org.asynchttpclient.Realm realm;

  private final java.util.List<java.lang.String> nonProxyHosts;

  private final org.asynchttpclient.proxy.ProxyType proxyType;

  public org.asynchttpclient.proxy.ProxyServer(java.lang.String, int, int, org.asynchttpclient.Realm, java.util.List<java.lang.String>, org.asynchttpclient.proxy.ProxyType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field host:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field port:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field securedPort:I
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field realm:Lorg/asynchttpclient/Realm;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field nonProxyHosts:Ljava/util/List;
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field proxyType:Lorg/asynchttpclient/proxy/ProxyType;
      37: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #2                  // Field host:Ljava/lang/String;
       4: areturn

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #3                  // Field port:I
       4: ireturn

  public int getSecuredPort();
    Code:
       0: aload_0
       1: getfield      #4                  // Field securedPort:I
       4: ireturn

  public java.util.List<java.lang.String> getNonProxyHosts();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nonProxyHosts:Ljava/util/List;
       4: areturn

  public org.asynchttpclient.Realm getRealm();
    Code:
       0: aload_0
       1: getfield      #5                  // Field realm:Lorg/asynchttpclient/Realm;
       4: areturn

  public org.asynchttpclient.proxy.ProxyType getProxyType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field proxyType:Lorg/asynchttpclient/proxy/ProxyType;
       4: areturn

  public boolean isIgnoredForHost(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #8                  // String hostname
       3: invokestatic  #9                  // Method org/asynchttpclient/util/Assertions.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #6                  // Field nonProxyHosts:Ljava/util/List;
      11: invokestatic  #10                 // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/util/Collection;)Z
      14: ifeq          60
      17: aload_0
      18: getfield      #6                  // Field nonProxyHosts:Ljava/util/List;
      21: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          60
      36: aload_2
      37: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #14                 // class java/lang/String
      45: astore_3
      46: aload_0
      47: aload_1
      48: aload_3
      49: invokespecial #15                 // Method matchNonProxyHost:(Ljava/lang/String;Ljava/lang/String;)Z
      52: ifeq          57
      55: iconst_1
      56: ireturn
      57: goto          27
      60: iconst_0
      61: ireturn

  private boolean matchNonProxyHost(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: invokevirtual #16                 // Method java/lang/String.length:()I
       4: iconst_1
       5: if_icmple     73
       8: aload_2
       9: iconst_0
      10: invokevirtual #17                 // Method java/lang/String.charAt:(I)C
      13: bipush        42
      15: if_icmpne     43
      18: aload_1
      19: iconst_1
      20: aload_1
      21: invokevirtual #16                 // Method java/lang/String.length:()I
      24: aload_2
      25: invokevirtual #16                 // Method java/lang/String.length:()I
      28: isub
      29: iconst_1
      30: iadd
      31: aload_2
      32: iconst_1
      33: aload_2
      34: invokevirtual #16                 // Method java/lang/String.length:()I
      37: iconst_1
      38: isub
      39: invokevirtual #18                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      42: ireturn
      43: aload_2
      44: aload_2
      45: invokevirtual #16                 // Method java/lang/String.length:()I
      48: iconst_1
      49: isub
      50: invokevirtual #17                 // Method java/lang/String.charAt:(I)C
      53: bipush        42
      55: if_icmpne     73
      58: aload_1
      59: iconst_1
      60: iconst_0
      61: aload_2
      62: iconst_0
      63: aload_2
      64: invokevirtual #16                 // Method java/lang/String.length:()I
      67: iconst_1
      68: isub
      69: invokevirtual #18                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      72: ireturn
      73: aload_2
      74: aload_1
      75: invokevirtual #19                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      78: ireturn
}
