Compiled from "ResumableAsyncHandler.java"
public class org.asynchttpclient.handler.resumable.ResumableAsyncHandler implements org.asynchttpclient.AsyncHandler<org.asynchttpclient.Response> {
  private static final org.slf4j.Logger logger;

  private static final org.asynchttpclient.handler.resumable.ResumableAsyncHandler$ResumableIndexThread resumeIndexThread;

  private static java.util.Map<java.lang.String, java.lang.Long> resumableIndex;

  private final java.util.concurrent.atomic.AtomicLong byteTransferred;

  private final org.asynchttpclient.handler.resumable.ResumableAsyncHandler$ResumableProcessor resumableProcessor;

  private final org.asynchttpclient.AsyncHandler<org.asynchttpclient.Response> decoratedAsyncHandler;

  private final boolean accumulateBody;

  private java.lang.String url;

  private org.asynchttpclient.Response$ResponseBuilder responseBuilder;

  private org.asynchttpclient.handler.resumable.ResumableListener resumableListener;

  private org.asynchttpclient.handler.resumable.ResumableAsyncHandler(long, org.asynchttpclient.handler.resumable.ResumableAsyncHandler$ResumableProcessor, org.asynchttpclient.AsyncHandler<org.asynchttpclient.Response>, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/asynchttpclient/Response$ResponseBuilder
       8: dup
       9: invokespecial #4                  // Method org/asynchttpclient/Response$ResponseBuilder."<init>":()V
      12: putfield      #5                  // Field responseBuilder:Lorg/asynchttpclient/Response$ResponseBuilder;
      15: aload_0
      16: new           #6                  // class org/asynchttpclient/handler/resumable/ResumableAsyncHandler$NULLResumableListener
      19: dup
      20: aconst_null
      21: invokespecial #7                  // Method org/asynchttpclient/handler/resumable/ResumableAsyncHandler$NULLResumableListener."<init>":(Lorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$1;)V
      24: putfield      #8                  // Field resumableListener:Lorg/asynchttpclient/handler/resumable/ResumableListener;
      27: aload_0
      28: new           #9                  // class java/util/concurrent/atomic/AtomicLong
      31: dup
      32: lload_1
      33: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      36: putfield      #11                 // Field byteTransferred:Ljava/util/concurrent/atomic/AtomicLong;
      39: aload_3
      40: ifnonnull     52
      43: new           #12                 // class org/asynchttpclient/handler/resumable/ResumableAsyncHandler$NULLResumableHandler
      46: dup
      47: aconst_null
      48: invokespecial #13                 // Method org/asynchttpclient/handler/resumable/ResumableAsyncHandler$NULLResumableHandler."<init>":(Lorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$1;)V
      51: astore_3
      52: aload_0
      53: aload_3
      54: putfield      #14                 // Field resumableProcessor:Lorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor;
      57: aload_3
      58: invokeinterface #15,  1           // InterfaceMethod org/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor.load:()Ljava/util/Map;
      63: putstatic     #1                  // Field resumableIndex:Ljava/util/Map;
      66: getstatic     #16                 // Field resumeIndexThread:Lorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableIndexThread;
      69: aload_3
      70: invokevirtual #17                 // Method org/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableIndexThread.addResumableProcessor:(Lorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor;)V
      73: aload_0
      74: aload         4
      76: putfield      #18                 // Field decoratedAsyncHandler:Lorg/asynchttpclient/AsyncHandler;
      79: aload_0
      80: iload         5
      82: putfield      #19                 // Field accumulateBody:Z
      85: return

  public org.asynchttpclient.handler.resumable.ResumableAsyncHandler(long);
    Code:
       0: aload_0
       1: lload_1
       2: aconst_null
       3: aconst_null
       4: iconst_0
       5: invokespecial #20                 // Method "<init>":(JLorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor;Lorg/asynchttpclient/AsyncHandler;Z)V
       8: return

  public org.asynchttpclient.handler.resumable.ResumableAsyncHandler(boolean);
    Code:
       0: aload_0
       1: lconst_0
       2: aconst_null
       3: aconst_null
       4: iload_1
       5: invokespecial #20                 // Method "<init>":(JLorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor;Lorg/asynchttpclient/AsyncHandler;Z)V
       8: return

  public org.asynchttpclient.handler.resumable.ResumableAsyncHandler();
    Code:
       0: aload_0
       1: lconst_0
       2: aconst_null
       3: aconst_null
       4: iconst_0
       5: invokespecial #20                 // Method "<init>":(JLorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor;Lorg/asynchttpclient/AsyncHandler;Z)V
       8: return

  public org.asynchttpclient.handler.resumable.ResumableAsyncHandler(org.asynchttpclient.AsyncHandler<org.asynchttpclient.Response>);
    Code:
       0: aload_0
       1: lconst_0
       2: new           #21                 // class org/asynchttpclient/handler/resumable/PropertiesBasedResumableProcessor
       5: dup
       6: invokespecial #22                 // Method org/asynchttpclient/handler/resumable/PropertiesBasedResumableProcessor."<init>":()V
       9: aload_1
      10: iconst_0
      11: invokespecial #20                 // Method "<init>":(JLorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor;Lorg/asynchttpclient/AsyncHandler;Z)V
      14: return

  public org.asynchttpclient.handler.resumable.ResumableAsyncHandler(long, org.asynchttpclient.AsyncHandler<org.asynchttpclient.Response>);
    Code:
       0: aload_0
       1: lload_1
       2: new           #21                 // class org/asynchttpclient/handler/resumable/PropertiesBasedResumableProcessor
       5: dup
       6: invokespecial #22                 // Method org/asynchttpclient/handler/resumable/PropertiesBasedResumableProcessor."<init>":()V
       9: aload_3
      10: iconst_0
      11: invokespecial #20                 // Method "<init>":(JLorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor;Lorg/asynchttpclient/AsyncHandler;Z)V
      14: return

  public org.asynchttpclient.handler.resumable.ResumableAsyncHandler(org.asynchttpclient.handler.resumable.ResumableAsyncHandler$ResumableProcessor);
    Code:
       0: aload_0
       1: lconst_0
       2: aload_1
       3: aconst_null
       4: iconst_0
       5: invokespecial #20                 // Method "<init>":(JLorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor;Lorg/asynchttpclient/AsyncHandler;Z)V
       8: return

  public org.asynchttpclient.handler.resumable.ResumableAsyncHandler(org.asynchttpclient.handler.resumable.ResumableAsyncHandler$ResumableProcessor, boolean);
    Code:
       0: aload_0
       1: lconst_0
       2: aload_1
       3: aconst_null
       4: iload_2
       5: invokespecial #20                 // Method "<init>":(JLorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor;Lorg/asynchttpclient/AsyncHandler;Z)V
       8: return

  public org.asynchttpclient.AsyncHandler$State onStatusReceived(org.asynchttpclient.HttpResponseStatus) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field responseBuilder:Lorg/asynchttpclient/Response$ResponseBuilder;
       4: aload_1
       5: invokevirtual #23                 // Method org/asynchttpclient/Response$ResponseBuilder.accumulate:(Lorg/asynchttpclient/HttpResponseStatus;)V
       8: aload_1
       9: invokevirtual #24                 // Method org/asynchttpclient/HttpResponseStatus.getStatusCode:()I
      12: sipush        200
      15: if_icmpeq     28
      18: aload_1
      19: invokevirtual #24                 // Method org/asynchttpclient/HttpResponseStatus.getStatusCode:()I
      22: sipush        206
      25: if_icmpne     42
      28: aload_0
      29: aload_1
      30: invokevirtual #25                 // Method org/asynchttpclient/HttpResponseStatus.getUri:()Lorg/asynchttpclient/uri/Uri;
      33: invokevirtual #26                 // Method org/asynchttpclient/uri/Uri.toUrl:()Ljava/lang/String;
      36: putfield      #27                 // Field url:Ljava/lang/String;
      39: goto          46
      42: getstatic     #28                 // Field org/asynchttpclient/AsyncHandler$State.ABORT:Lorg/asynchttpclient/AsyncHandler$State;
      45: areturn
      46: aload_0
      47: getfield      #18                 // Field decoratedAsyncHandler:Lorg/asynchttpclient/AsyncHandler;
      50: ifnull        64
      53: aload_0
      54: getfield      #18                 // Field decoratedAsyncHandler:Lorg/asynchttpclient/AsyncHandler;
      57: aload_1
      58: invokeinterface #29,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onStatusReceived:(Lorg/asynchttpclient/HttpResponseStatus;)Lorg/asynchttpclient/AsyncHandler$State;
      63: areturn
      64: getstatic     #30                 // Field org/asynchttpclient/AsyncHandler$State.CONTINUE:Lorg/asynchttpclient/AsyncHandler$State;
      67: areturn

  public void onThrowable(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #18                 // Field decoratedAsyncHandler:Lorg/asynchttpclient/AsyncHandler;
       4: ifnull        20
       7: aload_0
       8: getfield      #18                 // Field decoratedAsyncHandler:Lorg/asynchttpclient/AsyncHandler;
      11: aload_1
      12: invokeinterface #31,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onThrowable:(Ljava/lang/Throwable;)V
      17: goto          31
      20: getstatic     #32                 // Field logger:Lorg/slf4j/Logger;
      23: ldc           #33                 // String
      25: aload_1
      26: invokeinterface #34,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      31: return

  public org.asynchttpclient.AsyncHandler$State onBodyPartReceived(org.asynchttpclient.HttpResponseBodyPart) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #19                 // Field accumulateBody:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #5                  // Field responseBuilder:Lorg/asynchttpclient/Response$ResponseBuilder;
      11: aload_1
      12: invokevirtual #35                 // Method org/asynchttpclient/Response$ResponseBuilder.accumulate:(Lorg/asynchttpclient/HttpResponseBodyPart;)V
      15: getstatic     #30                 // Field org/asynchttpclient/AsyncHandler$State.CONTINUE:Lorg/asynchttpclient/AsyncHandler$State;
      18: astore_2
      19: aload_0
      20: getfield      #8                  // Field resumableListener:Lorg/asynchttpclient/handler/resumable/ResumableListener;
      23: aload_1
      24: invokevirtual #36                 // Method org/asynchttpclient/HttpResponseBodyPart.getBodyByteBuffer:()Ljava/nio/ByteBuffer;
      27: invokeinterface #37,  2           // InterfaceMethod org/asynchttpclient/handler/resumable/ResumableListener.onBytesReceived:(Ljava/nio/ByteBuffer;)V
      32: goto          40
      35: astore_3
      36: getstatic     #28                 // Field org/asynchttpclient/AsyncHandler$State.ABORT:Lorg/asynchttpclient/AsyncHandler$State;
      39: areturn
      40: aload_0
      41: getfield      #18                 // Field decoratedAsyncHandler:Lorg/asynchttpclient/AsyncHandler;
      44: ifnull        58
      47: aload_0
      48: getfield      #18                 // Field decoratedAsyncHandler:Lorg/asynchttpclient/AsyncHandler;
      51: aload_1
      52: invokeinterface #39,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onBodyPartReceived:(Lorg/asynchttpclient/HttpResponseBodyPart;)Lorg/asynchttpclient/AsyncHandler$State;
      57: astore_2
      58: aload_0
      59: getfield      #11                 // Field byteTransferred:Ljava/util/concurrent/atomic/AtomicLong;
      62: aload_1
      63: invokevirtual #40                 // Method org/asynchttpclient/HttpResponseBodyPart.getBodyPartBytes:()[B
      66: arraylength
      67: i2l
      68: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      71: pop2
      72: aload_0
      73: getfield      #14                 // Field resumableProcessor:Lorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor;
      76: aload_0
      77: getfield      #27                 // Field url:Ljava/lang/String;
      80: aload_0
      81: getfield      #11                 // Field byteTransferred:Ljava/util/concurrent/atomic/AtomicLong;
      84: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      87: invokeinterface #43,  4           // InterfaceMethod org/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor.put:(Ljava/lang/String;J)V
      92: aload_2
      93: areturn
    Exception table:
       from    to  target type
          19    32    35   Class java/io/IOException

  public org.asynchttpclient.Response onCompleted() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #14                 // Field resumableProcessor:Lorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor;
       4: aload_0
       5: getfield      #27                 // Field url:Ljava/lang/String;
       8: invokeinterface #44,  2           // InterfaceMethod org/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableProcessor.remove:(Ljava/lang/String;)V
      13: aload_0
      14: getfield      #8                  // Field resumableListener:Lorg/asynchttpclient/handler/resumable/ResumableListener;
      17: invokeinterface #45,  1           // InterfaceMethod org/asynchttpclient/handler/resumable/ResumableListener.onAllBytesReceived:()V
      22: aload_0
      23: getfield      #18                 // Field decoratedAsyncHandler:Lorg/asynchttpclient/AsyncHandler;
      26: ifnull        39
      29: aload_0
      30: getfield      #18                 // Field decoratedAsyncHandler:Lorg/asynchttpclient/AsyncHandler;
      33: invokeinterface #46,  1           // InterfaceMethod org/asynchttpclient/AsyncHandler.onCompleted:()Ljava/lang/Object;
      38: pop
      39: aload_0
      40: getfield      #5                  // Field responseBuilder:Lorg/asynchttpclient/Response$ResponseBuilder;
      43: invokevirtual #47                 // Method org/asynchttpclient/Response$ResponseBuilder.build:()Lorg/asynchttpclient/Response;
      46: areturn

  public org.asynchttpclient.AsyncHandler$State onHeadersReceived(io.netty.handler.codec.http.HttpHeaders) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field responseBuilder:Lorg/asynchttpclient/Response$ResponseBuilder;
       4: aload_1
       5: invokevirtual #48                 // Method org/asynchttpclient/Response$ResponseBuilder.accumulate:(Lio/netty/handler/codec/http/HttpHeaders;)V
       8: aload_1
       9: getstatic     #49                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_LENGTH:Lio/netty/util/AsciiString;
      12: invokevirtual #50                 // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: ifnull        35
      20: aload_2
      21: invokestatic  #51                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      24: ldc2_w        #52                 // long -1l
      27: lcmp
      28: ifne          35
      31: getstatic     #28                 // Field org/asynchttpclient/AsyncHandler$State.ABORT:Lorg/asynchttpclient/AsyncHandler$State;
      34: areturn
      35: aload_0
      36: getfield      #18                 // Field decoratedAsyncHandler:Lorg/asynchttpclient/AsyncHandler;
      39: ifnull        53
      42: aload_0
      43: getfield      #18                 // Field decoratedAsyncHandler:Lorg/asynchttpclient/AsyncHandler;
      46: aload_1
      47: invokeinterface #54,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onHeadersReceived:(Lio/netty/handler/codec/http/HttpHeaders;)Lorg/asynchttpclient/AsyncHandler$State;
      52: areturn
      53: getstatic     #30                 // Field org/asynchttpclient/AsyncHandler$State.CONTINUE:Lorg/asynchttpclient/AsyncHandler$State;
      56: areturn

  public org.asynchttpclient.AsyncHandler$State onTrailingHeadersReceived(io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_0
       1: getfield      #5                  // Field responseBuilder:Lorg/asynchttpclient/Response$ResponseBuilder;
       4: aload_1
       5: invokevirtual #48                 // Method org/asynchttpclient/Response$ResponseBuilder.accumulate:(Lio/netty/handler/codec/http/HttpHeaders;)V
       8: getstatic     #30                 // Field org/asynchttpclient/AsyncHandler$State.CONTINUE:Lorg/asynchttpclient/AsyncHandler$State;
      11: areturn

  public org.asynchttpclient.Request adjustRequestRange(org.asynchttpclient.Request);
    Code:
       0: getstatic     #1                  // Field resumableIndex:Ljava/util/Map;
       3: aload_1
       4: invokeinterface #55,  1           // InterfaceMethod org/asynchttpclient/Request.getUrl:()Ljava/lang/String;
       9: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #57                 // class java/lang/Long
      17: astore_2
      18: aload_2
      19: ifnull        33
      22: aload_0
      23: getfield      #11                 // Field byteTransferred:Ljava/util/concurrent/atomic/AtomicLong;
      26: aload_2
      27: invokevirtual #58                 // Method java/lang/Long.longValue:()J
      30: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      33: aload_0
      34: getfield      #8                  // Field resumableListener:Lorg/asynchttpclient/handler/resumable/ResumableListener;
      37: ifnull        90
      40: aload_0
      41: getfield      #8                  // Field resumableListener:Lorg/asynchttpclient/handler/resumable/ResumableListener;
      44: invokeinterface #60,  1           // InterfaceMethod org/asynchttpclient/handler/resumable/ResumableListener.length:()J
      49: lconst_0
      50: lcmp
      51: ifle          90
      54: aload_0
      55: getfield      #11                 // Field byteTransferred:Ljava/util/concurrent/atomic/AtomicLong;
      58: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      61: aload_0
      62: getfield      #8                  // Field resumableListener:Lorg/asynchttpclient/handler/resumable/ResumableListener;
      65: invokeinterface #60,  1           // InterfaceMethod org/asynchttpclient/handler/resumable/ResumableListener.length:()J
      70: lcmp
      71: ifeq          90
      74: aload_0
      75: getfield      #11                 // Field byteTransferred:Ljava/util/concurrent/atomic/AtomicLong;
      78: aload_0
      79: getfield      #8                  // Field resumableListener:Lorg/asynchttpclient/handler/resumable/ResumableListener;
      82: invokeinterface #60,  1           // InterfaceMethod org/asynchttpclient/handler/resumable/ResumableListener.length:()J
      87: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      90: aload_1
      91: invokeinterface #61,  1           // InterfaceMethod org/asynchttpclient/Request.toBuilder:()Lorg/asynchttpclient/RequestBuilder;
      96: astore_3
      97: aload_1
      98: invokeinterface #62,  1           // InterfaceMethod org/asynchttpclient/Request.getHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
     103: getstatic     #63                 // Field io/netty/handler/codec/http/HttpHeaderNames.RANGE:Lio/netty/util/AsciiString;
     106: invokevirtual #50                 // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
     109: ifnonnull     162
     112: aload_0
     113: getfield      #11                 // Field byteTransferred:Ljava/util/concurrent/atomic/AtomicLong;
     116: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     119: lconst_0
     120: lcmp
     121: ifeq          162
     124: aload_3
     125: getstatic     #63                 // Field io/netty/handler/codec/http/HttpHeaderNames.RANGE:Lio/netty/util/AsciiString;
     128: new           #64                 // class java/lang/StringBuilder
     131: dup
     132: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #66                 // String bytes=
     137: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_0
     141: getfield      #11                 // Field byteTransferred:Ljava/util/concurrent/atomic/AtomicLong;
     144: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     147: invokevirtual #68                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     150: ldc           #69                 // String -
     152: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: invokevirtual #71                 // Method org/asynchttpclient/RequestBuilder.setHeader:(Ljava/lang/CharSequence;Ljava/lang/String;)Lorg/asynchttpclient/RequestBuilderBase;
     161: pop
     162: aload_3
     163: invokevirtual #72                 // Method org/asynchttpclient/RequestBuilder.build:()Lorg/asynchttpclient/Request;
     166: areturn

  public org.asynchttpclient.handler.resumable.ResumableAsyncHandler setResumableListener(org.asynchttpclient.handler.resumable.ResumableListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field resumableListener:Lorg/asynchttpclient/handler/resumable/ResumableListener;
       5: aload_0
       6: areturn

  public java.lang.Object onCompleted() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method onCompleted:()Lorg/asynchttpclient/Response;
       4: areturn

  static java.util.Map access$200();
    Code:
       0: getstatic     #1                  // Field resumableIndex:Ljava/util/Map;
       3: areturn

  static {};
    Code:
       0: ldc           #74                 // class org/asynchttpclient/handler/TransferCompletionHandler
       2: invokestatic  #75                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #32                 // Field logger:Lorg/slf4j/Logger;
       8: new           #76                 // class org/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableIndexThread
      11: dup
      12: invokespecial #77                 // Method org/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableIndexThread."<init>":()V
      15: putstatic     #16                 // Field resumeIndexThread:Lorg/asynchttpclient/handler/resumable/ResumableAsyncHandler$ResumableIndexThread;
      18: return
}
