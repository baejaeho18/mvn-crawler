Compiled from "HttpHandler.java"
public final class org.asynchttpclient.netty.handler.HttpHandler extends org.asynchttpclient.netty.handler.AsyncHttpClientHandler {
  public org.asynchttpclient.netty.handler.HttpHandler(org.asynchttpclient.AsyncHttpClientConfig, org.asynchttpclient.netty.channel.ChannelManager, org.asynchttpclient.netty.request.NettyRequestSender);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/asynchttpclient/netty/handler/AsyncHttpClientHandler."<init>":(Lorg/asynchttpclient/AsyncHttpClientConfig;Lorg/asynchttpclient/netty/channel/ChannelManager;Lorg/asynchttpclient/netty/request/NettyRequestSender;)V
       7: return

  private boolean abortAfterHandlingStatus(org.asynchttpclient.AsyncHandler<?>, org.asynchttpclient.netty.NettyResponseStatus) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #2,  2            // InterfaceMethod org/asynchttpclient/AsyncHandler.onStatusReceived:(Lorg/asynchttpclient/HttpResponseStatus;)Lorg/asynchttpclient/AsyncHandler$State;
       7: getstatic     #3                  // Field org/asynchttpclient/AsyncHandler$State.ABORT:Lorg/asynchttpclient/AsyncHandler$State;
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private boolean abortAfterHandlingHeaders(org.asynchttpclient.AsyncHandler<?>, io.netty.handler.codec.http.HttpHeaders) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #4                  // Method io/netty/handler/codec/http/HttpHeaders.isEmpty:()Z
       4: ifne          24
       7: aload_1
       8: aload_2
       9: invokeinterface #5,  2            // InterfaceMethod org/asynchttpclient/AsyncHandler.onHeadersReceived:(Lio/netty/handler/codec/http/HttpHeaders;)Lorg/asynchttpclient/AsyncHandler$State;
      14: getstatic     #3                  // Field org/asynchttpclient/AsyncHandler$State.ABORT:Lorg/asynchttpclient/AsyncHandler$State;
      17: if_acmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private boolean abortAfterHandlingReactiveStreams(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, org.asynchttpclient.AsyncHandler<?>);
    Code:
       0: aload_3
       1: instanceof    #6                  // class org/asynchttpclient/handler/StreamedAsyncHandler
       4: ifeq          83
       7: aload_3
       8: checkcast     #6                  // class org/asynchttpclient/handler/StreamedAsyncHandler
      11: astore        4
      13: new           #7                  // class org/asynchttpclient/netty/handler/StreamedResponsePublisher
      16: dup
      17: aload_1
      18: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      23: aload_0
      24: getfield      #9                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      27: aload_2
      28: aload_1
      29: invokespecial #10                 // Method org/asynchttpclient/netty/handler/StreamedResponsePublisher."<init>":(Lio/netty/util/concurrent/EventExecutor;Lorg/asynchttpclient/netty/channel/ChannelManager;Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;)V
      32: astore        5
      34: aload_1
      35: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      40: aload_1
      41: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      46: ldc           #12                 // String streamedAsyncHandler
      48: aload         5
      50: invokeinterface #13,  4           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      55: pop
      56: aload_1
      57: aload         5
      59: invokestatic  #14                 // Method org/asynchttpclient/netty/channel/Channels.setAttribute:(Lio/netty/channel/Channel;Ljava/lang/Object;)V
      62: aload         4
      64: aload         5
      66: invokeinterface #15,  2           // InterfaceMethod org/asynchttpclient/handler/StreamedAsyncHandler.onStream:(Lorg/reactivestreams/Publisher;)Lorg/asynchttpclient/AsyncHandler$State;
      71: getstatic     #3                  // Field org/asynchttpclient/AsyncHandler$State.ABORT:Lorg/asynchttpclient/AsyncHandler$State;
      74: if_acmpne     81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ireturn
      83: iconst_0
      84: ireturn

  private void handleHttpResponse(io.netty.handler.codec.http.HttpResponse, io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, org.asynchttpclient.AsyncHandler<?>) throws java.lang.Exception;
    Code:
       0: aload_3
       1: invokevirtual #16                 // Method org/asynchttpclient/netty/NettyResponseFuture.getNettyRequest:()Lorg/asynchttpclient/netty/request/NettyRequest;
       4: invokevirtual #17                 // Method org/asynchttpclient/netty/request/NettyRequest.getHttpRequest:()Lio/netty/handler/codec/http/HttpRequest;
       7: astore        5
       9: aload_0
      10: getfield      #18                 // Field logger:Lorg/slf4j/Logger;
      13: ldc           #19                 // String \n\nRequest {}\n\nResponse {}\n
      15: aload         5
      17: aload_1
      18: invokeinterface #20,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      23: aload_3
      24: aload_0
      25: getfield      #21                 // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      28: invokeinterface #22,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getKeepAliveStrategy:()Lorg/asynchttpclient/channel/KeepAliveStrategy;
      33: aload_2
      34: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
      39: checkcast     #24                 // class java/net/InetSocketAddress
      42: aload_3
      43: invokevirtual #25                 // Method org/asynchttpclient/netty/NettyResponseFuture.getTargetRequest:()Lorg/asynchttpclient/Request;
      46: aload         5
      48: aload_1
      49: invokeinterface #26,  5           // InterfaceMethod org/asynchttpclient/channel/KeepAliveStrategy.keepAlive:(Ljava/net/InetSocketAddress;Lorg/asynchttpclient/Request;Lio/netty/handler/codec/http/HttpRequest;Lio/netty/handler/codec/http/HttpResponse;)Z
      54: invokevirtual #27                 // Method org/asynchttpclient/netty/NettyResponseFuture.setKeepAlive:(Z)V
      57: new           #28                 // class org/asynchttpclient/netty/NettyResponseStatus
      60: dup
      61: aload_3
      62: invokevirtual #29                 // Method org/asynchttpclient/netty/NettyResponseFuture.getUri:()Lorg/asynchttpclient/uri/Uri;
      65: aload_1
      66: aload_2
      67: invokespecial #30                 // Method org/asynchttpclient/netty/NettyResponseStatus."<init>":(Lorg/asynchttpclient/uri/Uri;Lio/netty/handler/codec/http/HttpResponse;Lio/netty/channel/Channel;)V
      70: astore        6
      72: aload_1
      73: invokeinterface #31,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      78: astore        7
      80: aload_0
      81: getfield      #32                 // Field interceptors:Lorg/asynchttpclient/netty/handler/intercept/Interceptors;
      84: aload_2
      85: aload_3
      86: aload         4
      88: aload_1
      89: aload         6
      91: aload         7
      93: invokevirtual #33                 // Method org/asynchttpclient/netty/handler/intercept/Interceptors.exitAfterIntercept:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/AsyncHandler;Lio/netty/handler/codec/http/HttpResponse;Lorg/asynchttpclient/HttpResponseStatus;Lio/netty/handler/codec/http/HttpHeaders;)Z
      96: ifne          151
      99: aload_0
     100: aload         4
     102: aload         6
     104: invokespecial #34                 // Method abortAfterHandlingStatus:(Lorg/asynchttpclient/AsyncHandler;Lorg/asynchttpclient/netty/NettyResponseStatus;)Z
     107: ifne          132
     110: aload_0
     111: aload         4
     113: aload         7
     115: invokespecial #35                 // Method abortAfterHandlingHeaders:(Lorg/asynchttpclient/AsyncHandler;Lio/netty/handler/codec/http/HttpHeaders;)Z
     118: ifne          132
     121: aload_0
     122: aload_2
     123: aload_3
     124: aload         4
     126: invokespecial #36                 // Method abortAfterHandlingReactiveStreams:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/AsyncHandler;)Z
     129: ifeq          136
     132: iconst_1
     133: goto          137
     136: iconst_0
     137: istore        8
     139: iload         8
     141: ifeq          151
     144: aload_0
     145: aload_3
     146: aload_2
     147: iconst_1
     148: invokevirtual #37                 // Method finishUpdate:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;Z)V
     151: return

  private void handleChunk(io.netty.handler.codec.http.HttpContent, io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, org.asynchttpclient.AsyncHandler<?>) throws java.lang.Exception;
    Code:
       0: iconst_0
       1: istore        5
       3: aload_1
       4: instanceof    #38                 // class io/netty/handler/codec/http/LastHttpContent
       7: istore        6
       9: iload         6
      11: ifeq          59
      14: aload_1
      15: checkcast     #38                 // class io/netty/handler/codec/http/LastHttpContent
      18: astore        7
      20: aload         7
      22: invokeinterface #39,  1           // InterfaceMethod io/netty/handler/codec/http/LastHttpContent.trailingHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
      27: astore        8
      29: aload         8
      31: invokevirtual #4                  // Method io/netty/handler/codec/http/HttpHeaders.isEmpty:()Z
      34: ifne          59
      37: aload         4
      39: aload         8
      41: invokeinterface #40,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onTrailingHeadersReceived:(Lio/netty/handler/codec/http/HttpHeaders;)Lorg/asynchttpclient/AsyncHandler$State;
      46: getstatic     #3                  // Field org/asynchttpclient/AsyncHandler$State.ABORT:Lorg/asynchttpclient/AsyncHandler$State;
      49: if_acmpne     56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: istore        5
      59: aload_1
      60: invokeinterface #41,  1           // InterfaceMethod io/netty/handler/codec/http/HttpContent.content:()Lio/netty/buffer/ByteBuf;
      65: astore        7
      67: iload         5
      69: ifne          133
      72: aload         4
      74: instanceof    #6                  // class org/asynchttpclient/handler/StreamedAsyncHandler
      77: ifne          133
      80: aload         7
      82: invokevirtual #42                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      85: ifne          93
      88: iload         6
      90: ifeq          133
      93: aload_0
      94: getfield      #21                 // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      97: invokeinterface #43,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getResponseBodyPartFactory:()Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;
     102: aload         7
     104: iload         6
     106: invokevirtual #44                 // Method org/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory.newResponseBodyPart:(Lio/netty/buffer/ByteBuf;Z)Lorg/asynchttpclient/HttpResponseBodyPart;
     109: astore        8
     111: aload         4
     113: aload         8
     115: invokeinterface #45,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onBodyPartReceived:(Lorg/asynchttpclient/HttpResponseBodyPart;)Lorg/asynchttpclient/AsyncHandler$State;
     120: getstatic     #3                  // Field org/asynchttpclient/AsyncHandler$State.ABORT:Lorg/asynchttpclient/AsyncHandler$State;
     123: if_acmpne     130
     126: iconst_1
     127: goto          131
     130: iconst_0
     131: istore        5
     133: iload         5
     135: ifne          143
     138: iload         6
     140: ifeq          170
     143: iload         5
     145: ifne          155
     148: aload_3
     149: invokevirtual #46                 // Method org/asynchttpclient/netty/NettyResponseFuture.isKeepAlive:()Z
     152: ifne          159
     155: iconst_1
     156: goto          160
     159: iconst_0
     160: istore        8
     162: aload_0
     163: aload_3
     164: aload_2
     165: iload         8
     167: invokevirtual #37                 // Method finishUpdate:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;Z)V
     170: return

  public void handleRead(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #47                 // Method org/asynchttpclient/netty/NettyResponseFuture.isDone:()Z
       4: ifeq          16
       7: aload_0
       8: getfield      #9                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      11: aload_1
      12: invokevirtual #48                 // Method org/asynchttpclient/netty/channel/ChannelManager.closeChannel:(Lio/netty/channel/Channel;)V
      15: return
      16: aload_2
      17: invokevirtual #49                 // Method org/asynchttpclient/netty/NettyResponseFuture.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
      20: astore        4
      22: aload_3
      23: instanceof    #50                 // class io/netty/handler/codec/DecoderResultProvider
      26: ifeq          61
      29: aload_3
      30: checkcast     #50                 // class io/netty/handler/codec/DecoderResultProvider
      33: astore        5
      35: aload         5
      37: invokeinterface #51,  1           // InterfaceMethod io/netty/handler/codec/DecoderResultProvider.decoderResult:()Lio/netty/handler/codec/DecoderResult;
      42: invokevirtual #52                 // Method io/netty/handler/codec/DecoderResult.cause:()Ljava/lang/Throwable;
      45: astore        6
      47: aload         6
      49: ifnull        61
      52: aload_0
      53: aload_1
      54: aload_2
      55: aload         6
      57: invokespecial #53                 // Method readFailed:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
      60: return
      61: aload_3
      62: instanceof    #54                 // class io/netty/handler/codec/http/HttpResponse
      65: ifeq          83
      68: aload_0
      69: aload_3
      70: checkcast     #54                 // class io/netty/handler/codec/http/HttpResponse
      73: aload_1
      74: aload_2
      75: aload         4
      77: invokespecial #55                 // Method handleHttpResponse:(Lio/netty/handler/codec/http/HttpResponse;Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/AsyncHandler;)V
      80: goto          102
      83: aload_3
      84: instanceof    #56                 // class io/netty/handler/codec/http/HttpContent
      87: ifeq          102
      90: aload_0
      91: aload_3
      92: checkcast     #56                 // class io/netty/handler/codec/http/HttpContent
      95: aload_1
      96: aload_2
      97: aload         4
      99: invokespecial #57                 // Method handleChunk:(Lio/netty/handler/codec/http/HttpContent;Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/AsyncHandler;)V
     102: goto          151
     105: astore        5
     107: aload_0
     108: getfield      #59                 // Field hasIOExceptionFilters:Z
     111: ifeq          140
     114: aload         5
     116: instanceof    #60                 // class java/io/IOException
     119: ifeq          140
     122: aload_0
     123: getfield      #61                 // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
     126: aload_2
     127: aload         5
     129: checkcast     #60                 // class java/io/IOException
     132: aload_1
     133: invokevirtual #62                 // Method org/asynchttpclient/netty/request/NettyRequestSender.applyIoExceptionFiltersAndReplayRequest:(Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/io/IOException;Lio/netty/channel/Channel;)Z
     136: ifeq          140
     139: return
     140: aload_0
     141: aload_1
     142: aload_2
     143: aload         5
     145: invokespecial #53                 // Method readFailed:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
     148: aload         5
     150: athrow
     151: return
    Exception table:
       from    to  target type
          22    60   105   Class java/lang/Exception
          61   102   105   Class java/lang/Exception

  private void readFailed(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #61                 // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #63                 // Method org/asynchttpclient/netty/request/NettyRequestSender.abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
      10: aload_0
      11: aload_2
      12: aload_1
      13: iconst_1
      14: invokevirtual #37                 // Method finishUpdate:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;Z)V
      17: goto          57
      20: astore        4
      22: aload_0
      23: getfield      #18                 // Field logger:Lorg/slf4j/Logger;
      26: ldc           #64                 // String Abort failed
      28: aload         4
      30: invokeinterface #65,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      35: aload_0
      36: aload_2
      37: aload_1
      38: iconst_1
      39: invokevirtual #37                 // Method finishUpdate:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;Z)V
      42: goto          57
      45: astore        5
      47: aload_0
      48: aload_2
      49: aload_1
      50: iconst_1
      51: invokevirtual #37                 // Method finishUpdate:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;Z)V
      54: aload         5
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    10    20   Class java/lang/Exception
           0    10    45   any
          20    35    45   any
          45    47    45   any

  public void handleException(org.asynchttpclient.netty.NettyResponseFuture<?>, java.lang.Throwable);
    Code:
       0: return

  public void handleChannelInactive(org.asynchttpclient.netty.NettyResponseFuture<?>);
    Code:
       0: return
}
