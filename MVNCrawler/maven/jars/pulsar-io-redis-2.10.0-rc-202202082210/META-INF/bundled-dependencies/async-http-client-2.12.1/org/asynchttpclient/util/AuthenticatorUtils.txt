Compiled from "AuthenticatorUtils.java"
public final class org.asynchttpclient.util.AuthenticatorUtils {
  public static final java.lang.String NEGOTIATE;

  public org.asynchttpclient.util.AuthenticatorUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String getHeaderWithPrefix(java.util.List<java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        50
       4: aload_0
       5: invokeinterface #2,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          50
      20: aload_2
      21: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #5                  // class java/lang/String
      29: astore_3
      30: aload_3
      31: iconst_1
      32: iconst_0
      33: aload_1
      34: iconst_0
      35: aload_1
      36: invokevirtual #6                  // Method java/lang/String.length:()I
      39: invokevirtual #7                  // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      42: ifeq          47
      45: aload_3
      46: areturn
      47: goto          11
      50: aconst_null
      51: areturn

  private static java.lang.String computeBasicAuthentication(org.asynchttpclient.Realm);
    Code:
       0: aload_0
       1: ifnull        22
       4: aload_0
       5: invokevirtual #8                  // Method org/asynchttpclient/Realm.getPrincipal:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #9                  // Method org/asynchttpclient/Realm.getPassword:()Ljava/lang/String;
      12: aload_0
      13: invokevirtual #10                 // Method org/asynchttpclient/Realm.getCharset:()Ljava/nio/charset/Charset;
      16: invokestatic  #11                 // Method computeBasicAuthentication:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
      19: goto          23
      22: aconst_null
      23: areturn

  private static java.lang.String computeBasicAuthentication(java.lang.String, java.lang.String, java.nio.charset.Charset);
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #15                 // String :
      13: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: astore_3
      24: new           #12                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #17                 // String Basic
      33: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokestatic  #18                 // Method java/util/Base64.getEncoder:()Ljava/util/Base64$Encoder;
      39: aload_3
      40: aload_2
      41: invokevirtual #19                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      44: invokevirtual #20                 // Method java/util/Base64$Encoder.encodeToString:([B)Ljava/lang/String;
      47: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: areturn

  public static java.lang.String computeRealmURI(org.asynchttpclient.uri.Uri, boolean, boolean);
    Code:
       0: iload_1
       1: ifeq          34
       4: iload_2
       5: ifeq          29
       8: aload_0
       9: invokevirtual #21                 // Method org/asynchttpclient/uri/Uri.getQuery:()Ljava/lang/String;
      12: invokestatic  #22                 // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/lang/String;)Z
      15: ifeq          29
      18: aload_0
      19: aconst_null
      20: invokevirtual #23                 // Method org/asynchttpclient/uri/Uri.withNewQuery:(Ljava/lang/String;)Lorg/asynchttpclient/uri/Uri;
      23: invokevirtual #24                 // Method org/asynchttpclient/uri/Uri.toUrl:()Ljava/lang/String;
      26: goto          33
      29: aload_0
      30: invokevirtual #24                 // Method org/asynchttpclient/uri/Uri.toUrl:()Ljava/lang/String;
      33: areturn
      34: aload_0
      35: invokevirtual #25                 // Method org/asynchttpclient/uri/Uri.getNonEmptyPath:()Ljava/lang/String;
      38: astore_3
      39: iload_2
      40: ifne          53
      43: aload_0
      44: invokevirtual #21                 // Method org/asynchttpclient/uri/Uri.getQuery:()Ljava/lang/String;
      47: invokestatic  #22                 // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/lang/String;)Z
      50: ifne          57
      53: aload_3
      54: goto          83
      57: new           #12                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      64: aload_3
      65: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #26                 // String ?
      70: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: invokevirtual #21                 // Method org/asynchttpclient/uri/Uri.getQuery:()Ljava/lang/String;
      77: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: areturn

  private static java.lang.String computeDigestAuthentication(org.asynchttpclient.Realm);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method org/asynchttpclient/Realm.getUri:()Lorg/asynchttpclient/uri/Uri;
       4: aload_0
       5: invokevirtual #28                 // Method org/asynchttpclient/Realm.isUseAbsoluteURI:()Z
       8: aload_0
       9: invokevirtual #29                 // Method org/asynchttpclient/Realm.isOmitQuery:()Z
      12: invokestatic  #30                 // Method computeRealmURI:(Lorg/asynchttpclient/uri/Uri;ZZ)Ljava/lang/String;
      15: astore_1
      16: new           #12                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #31                 // String Digest
      25: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: astore_2
      29: aload_2
      30: ldc           #32                 // String username
      32: aload_0
      33: invokevirtual #8                  // Method org/asynchttpclient/Realm.getPrincipal:()Ljava/lang/String;
      36: iconst_1
      37: invokestatic  #33                 // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Z)V
      40: aload_2
      41: ldc           #34                 // String realm
      43: aload_0
      44: invokevirtual #35                 // Method org/asynchttpclient/Realm.getRealmName:()Ljava/lang/String;
      47: iconst_1
      48: invokestatic  #33                 // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Z)V
      51: aload_2
      52: ldc           #36                 // String nonce
      54: aload_0
      55: invokevirtual #37                 // Method org/asynchttpclient/Realm.getNonce:()Ljava/lang/String;
      58: iconst_1
      59: invokestatic  #33                 // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Z)V
      62: aload_2
      63: ldc           #38                 // String uri
      65: aload_1
      66: iconst_1
      67: invokestatic  #33                 // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Z)V
      70: aload_0
      71: invokevirtual #39                 // Method org/asynchttpclient/Realm.getAlgorithm:()Ljava/lang/String;
      74: invokestatic  #22                 // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/lang/String;)Z
      77: ifeq          91
      80: aload_2
      81: ldc           #40                 // String algorithm
      83: aload_0
      84: invokevirtual #39                 // Method org/asynchttpclient/Realm.getAlgorithm:()Ljava/lang/String;
      87: iconst_0
      88: invokestatic  #33                 // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Z)V
      91: aload_2
      92: ldc           #41                 // String response
      94: aload_0
      95: invokevirtual #42                 // Method org/asynchttpclient/Realm.getResponse:()Ljava/lang/String;
      98: iconst_1
      99: invokestatic  #33                 // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Z)V
     102: aload_0
     103: invokevirtual #43                 // Method org/asynchttpclient/Realm.getOpaque:()Ljava/lang/String;
     106: ifnull        120
     109: aload_2
     110: ldc           #44                 // String opaque
     112: aload_0
     113: invokevirtual #43                 // Method org/asynchttpclient/Realm.getOpaque:()Ljava/lang/String;
     116: iconst_1
     117: invokestatic  #33                 // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Z)V
     120: aload_0
     121: invokevirtual #45                 // Method org/asynchttpclient/Realm.getQop:()Ljava/lang/String;
     124: ifnull        160
     127: aload_2
     128: ldc           #46                 // String qop
     130: aload_0
     131: invokevirtual #45                 // Method org/asynchttpclient/Realm.getQop:()Ljava/lang/String;
     134: iconst_0
     135: invokestatic  #33                 // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Z)V
     138: aload_2
     139: ldc           #47                 // String nc
     141: aload_0
     142: invokevirtual #48                 // Method org/asynchttpclient/Realm.getNc:()Ljava/lang/String;
     145: iconst_0
     146: invokestatic  #33                 // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Z)V
     149: aload_2
     150: ldc           #49                 // String cnonce
     152: aload_0
     153: invokevirtual #50                 // Method org/asynchttpclient/Realm.getCnonce:()Ljava/lang/String;
     156: iconst_1
     157: invokestatic  #33                 // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Z)V
     160: aload_2
     161: aload_2
     162: invokevirtual #51                 // Method java/lang/StringBuilder.length:()I
     165: iconst_2
     166: isub
     167: invokevirtual #52                 // Method java/lang/StringBuilder.setLength:(I)V
     170: new           #5                  // class java/lang/String
     173: dup
     174: aload_2
     175: getstatic     #53                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
     178: invokestatic  #54                 // Method org/asynchttpclient/util/StringUtils.charSequence2Bytes:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)[B
     181: invokespecial #55                 // Method java/lang/String."<init>":([B)V
     184: areturn

  private static void append(java.lang.StringBuilder, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       5: bipush        61
       7: invokevirtual #56                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      10: pop
      11: iload_3
      12: ifeq          34
      15: aload_0
      16: bipush        34
      18: invokevirtual #56                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      21: aload_2
      22: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: bipush        34
      27: invokevirtual #56                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      30: pop
      31: goto          40
      34: aload_0
      35: aload_2
      36: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_0
      41: ldc           #57                 // String ,
      43: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: return

  public static java.lang.String perConnectionProxyAuthorizationHeader(org.asynchttpclient.Request, org.asynchttpclient.Realm);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: ifnull        106
       6: aload_1
       7: invokevirtual #58                 // Method org/asynchttpclient/Realm.isUsePreemptiveAuth:()Z
      10: ifeq          106
      13: getstatic     #59                 // Field org/asynchttpclient/util/AuthenticatorUtils$1.$SwitchMap$org$asynchttpclient$Realm$AuthScheme:[I
      16: aload_1
      17: invokevirtual #60                 // Method org/asynchttpclient/Realm.getScheme:()Lorg/asynchttpclient/Realm$AuthScheme;
      20: invokevirtual #61                 // Method org/asynchttpclient/Realm$AuthScheme.ordinal:()I
      23: iaload
      24: tableswitch   { // 1 to 3
                     1: 52
                     2: 52
                     3: 52
               default: 106
          }
      52: aload_0
      53: invokeinterface #62,  1           // InterfaceMethod org/asynchttpclient/Request.getHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
      58: getstatic     #63                 // Field io/netty/handler/codec/http/HttpHeaderNames.PROXY_AUTHORIZATION:Lio/netty/util/AsciiString;
      61: invokevirtual #64                 // Method io/netty/handler/codec/http/HttpHeaders.getAll:(Ljava/lang/CharSequence;)Ljava/util/List;
      64: astore_3
      65: aload_3
      66: ldc           #65                 // String NTLM
      68: invokestatic  #66                 // Method getHeaderWithPrefix:(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;
      71: ifnonnull     106
      74: getstatic     #67                 // Field org/asynchttpclient/ntlm/NtlmEngine.INSTANCE:Lorg/asynchttpclient/ntlm/NtlmEngine;
      77: invokevirtual #68                 // Method org/asynchttpclient/ntlm/NtlmEngine.generateType1Msg:()Ljava/lang/String;
      80: astore        4
      82: new           #12                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #69                 // String NTLM
      91: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload         4
      96: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: astore_2
     103: goto          106
     106: aload_2
     107: areturn

  public static java.lang.String perRequestProxyAuthorizationHeader(org.asynchttpclient.Request, org.asynchttpclient.Realm);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: ifnull        145
       6: aload_1
       7: invokevirtual #58                 // Method org/asynchttpclient/Realm.isUsePreemptiveAuth:()Z
      10: ifeq          145
      13: getstatic     #59                 // Field org/asynchttpclient/util/AuthenticatorUtils$1.$SwitchMap$org$asynchttpclient$Realm$AuthScheme:[I
      16: aload_1
      17: invokevirtual #60                 // Method org/asynchttpclient/Realm.getScheme:()Lorg/asynchttpclient/Realm$AuthScheme;
      20: invokevirtual #61                 // Method org/asynchttpclient/Realm$AuthScheme.ordinal:()I
      23: iaload
      24: tableswitch   { // 1 to 5
                     1: 112
                     2: 112
                     3: 112
                     4: 60
                     5: 68
               default: 115
          }
      60: aload_1
      61: invokestatic  #70                 // Method computeBasicAuthentication:(Lorg/asynchttpclient/Realm;)Ljava/lang/String;
      64: astore_2
      65: goto          145
      68: aload_1
      69: invokevirtual #37                 // Method org/asynchttpclient/Realm.getNonce:()Ljava/lang/String;
      72: invokestatic  #22                 // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/lang/String;)Z
      75: ifeq          145
      78: aload_1
      79: invokestatic  #71                 // Method org/asynchttpclient/Dsl.realm:(Lorg/asynchttpclient/Realm;)Lorg/asynchttpclient/Realm$Builder;
      82: aload_0
      83: invokeinterface #72,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
      88: invokevirtual #73                 // Method org/asynchttpclient/Realm$Builder.setUri:(Lorg/asynchttpclient/uri/Uri;)Lorg/asynchttpclient/Realm$Builder;
      91: aload_0
      92: invokeinterface #74,  1           // InterfaceMethod org/asynchttpclient/Request.getMethod:()Ljava/lang/String;
      97: invokevirtual #75                 // Method org/asynchttpclient/Realm$Builder.setMethodName:(Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
     100: invokevirtual #76                 // Method org/asynchttpclient/Realm$Builder.build:()Lorg/asynchttpclient/Realm;
     103: astore_1
     104: aload_1
     105: invokestatic  #77                 // Method computeDigestAuthentication:(Lorg/asynchttpclient/Realm;)Ljava/lang/String;
     108: astore_2
     109: goto          145
     112: goto          145
     115: new           #78                 // class java/lang/IllegalStateException
     118: dup
     119: new           #12                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     126: ldc           #79                 // String Invalid Authentication scheme
     128: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_1
     132: invokevirtual #60                 // Method org/asynchttpclient/Realm.getScheme:()Lorg/asynchttpclient/Realm$AuthScheme;
     135: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokespecial #81                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     144: athrow
     145: aload_2
     146: areturn

  public static java.lang.String perConnectionAuthorizationHeader(org.asynchttpclient.Request, org.asynchttpclient.proxy.ProxyServer, org.asynchttpclient.Realm);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: ifnull        198
       6: aload_2
       7: invokevirtual #58                 // Method org/asynchttpclient/Realm.isUsePreemptiveAuth:()Z
      10: ifeq          198
      13: getstatic     #59                 // Field org/asynchttpclient/util/AuthenticatorUtils$1.$SwitchMap$org$asynchttpclient$Realm$AuthScheme:[I
      16: aload_2
      17: invokevirtual #60                 // Method org/asynchttpclient/Realm.getScheme:()Lorg/asynchttpclient/Realm$AuthScheme;
      20: invokevirtual #61                 // Method org/asynchttpclient/Realm$AuthScheme.ordinal:()I
      23: iaload
      24: tableswitch   { // 1 to 3
                     1: 52
                     2: 84
                     3: 84
               default: 198
          }
      52: getstatic     #67                 // Field org/asynchttpclient/ntlm/NtlmEngine.INSTANCE:Lorg/asynchttpclient/ntlm/NtlmEngine;
      55: invokevirtual #68                 // Method org/asynchttpclient/ntlm/NtlmEngine.generateType1Msg:()Ljava/lang/String;
      58: astore        4
      60: new           #12                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #69                 // String NTLM
      69: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload         4
      74: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: astore_3
      81: goto          198
      84: aload_1
      85: ifnull        97
      88: aload_1
      89: invokevirtual #82                 // Method org/asynchttpclient/proxy/ProxyServer.getHost:()Ljava/lang/String;
      92: astore        5
      94: goto          128
      97: aload_0
      98: invokeinterface #83,  1           // InterfaceMethod org/asynchttpclient/Request.getVirtualHost:()Ljava/lang/String;
     103: ifnull        117
     106: aload_0
     107: invokeinterface #83,  1           // InterfaceMethod org/asynchttpclient/Request.getVirtualHost:()Ljava/lang/String;
     112: astore        5
     114: goto          128
     117: aload_0
     118: invokeinterface #72,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
     123: invokevirtual #84                 // Method org/asynchttpclient/uri/Uri.getHost:()Ljava/lang/String;
     126: astore        5
     128: new           #12                 // class java/lang/StringBuilder
     131: dup
     132: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #86                 // String Negotiate
     137: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_2
     141: invokevirtual #8                  // Method org/asynchttpclient/Realm.getPrincipal:()Ljava/lang/String;
     144: aload_2
     145: invokevirtual #9                  // Method org/asynchttpclient/Realm.getPassword:()Ljava/lang/String;
     148: aload_2
     149: invokevirtual #87                 // Method org/asynchttpclient/Realm.getServicePrincipalName:()Ljava/lang/String;
     152: aload_2
     153: invokevirtual #35                 // Method org/asynchttpclient/Realm.getRealmName:()Ljava/lang/String;
     156: aload_2
     157: invokevirtual #88                 // Method org/asynchttpclient/Realm.isUseCanonicalHostname:()Z
     160: aload_2
     161: invokevirtual #89                 // Method org/asynchttpclient/Realm.getCustomLoginConfig:()Ljava/util/Map;
     164: aload_2
     165: invokevirtual #90                 // Method org/asynchttpclient/Realm.getLoginContextName:()Ljava/lang/String;
     168: invokestatic  #91                 // Method org/asynchttpclient/spnego/SpnegoEngine.instance:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;Ljava/lang/String;)Lorg/asynchttpclient/spnego/SpnegoEngine;
     171: aload         5
     173: invokevirtual #92                 // Method org/asynchttpclient/spnego/SpnegoEngine.generateToken:(Ljava/lang/String;)Ljava/lang/String;
     176: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: astore_3
     183: goto          198
     186: astore        6
     188: new           #94                 // class java/lang/RuntimeException
     191: dup
     192: aload         6
     194: invokespecial #95                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     197: athrow
     198: aload_3
     199: areturn
    Exception table:
       from    to  target type
         128   183   186   Class org/asynchttpclient/spnego/SpnegoEngineException

  public static java.lang.String perRequestAuthorizationHeader(org.asynchttpclient.Request, org.asynchttpclient.Realm);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: ifnull        142
       6: aload_1
       7: invokevirtual #58                 // Method org/asynchttpclient/Realm.isUsePreemptiveAuth:()Z
      10: ifeq          142
      13: getstatic     #59                 // Field org/asynchttpclient/util/AuthenticatorUtils$1.$SwitchMap$org$asynchttpclient$Realm$AuthScheme:[I
      16: aload_1
      17: invokevirtual #60                 // Method org/asynchttpclient/Realm.getScheme:()Lorg/asynchttpclient/Realm$AuthScheme;
      20: invokevirtual #61                 // Method org/asynchttpclient/Realm$AuthScheme.ordinal:()I
      23: iaload
      24: tableswitch   { // 1 to 5
                     1: 112
                     2: 112
                     3: 112
                     4: 60
                     5: 68
               default: 115
          }
      60: aload_1
      61: invokestatic  #70                 // Method computeBasicAuthentication:(Lorg/asynchttpclient/Realm;)Ljava/lang/String;
      64: astore_2
      65: goto          142
      68: aload_1
      69: invokevirtual #37                 // Method org/asynchttpclient/Realm.getNonce:()Ljava/lang/String;
      72: invokestatic  #22                 // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/lang/String;)Z
      75: ifeq          142
      78: aload_1
      79: invokestatic  #71                 // Method org/asynchttpclient/Dsl.realm:(Lorg/asynchttpclient/Realm;)Lorg/asynchttpclient/Realm$Builder;
      82: aload_0
      83: invokeinterface #72,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
      88: invokevirtual #73                 // Method org/asynchttpclient/Realm$Builder.setUri:(Lorg/asynchttpclient/uri/Uri;)Lorg/asynchttpclient/Realm$Builder;
      91: aload_0
      92: invokeinterface #74,  1           // InterfaceMethod org/asynchttpclient/Request.getMethod:()Ljava/lang/String;
      97: invokevirtual #75                 // Method org/asynchttpclient/Realm$Builder.setMethodName:(Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
     100: invokevirtual #76                 // Method org/asynchttpclient/Realm$Builder.build:()Lorg/asynchttpclient/Realm;
     103: astore_1
     104: aload_1
     105: invokestatic  #77                 // Method computeDigestAuthentication:(Lorg/asynchttpclient/Realm;)Ljava/lang/String;
     108: astore_2
     109: goto          142
     112: goto          142
     115: new           #78                 // class java/lang/IllegalStateException
     118: dup
     119: new           #12                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     126: ldc           #96                 // String Invalid Authentication
     128: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_1
     132: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     135: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokespecial #81                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     141: athrow
     142: aload_2
     143: areturn
}
