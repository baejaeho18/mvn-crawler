Compiled from "NettyWebSocket.java"
public final class org.asynchttpclient.netty.ws.NettyWebSocket implements org.asynchttpclient.ws.WebSocket {
  private static final org.slf4j.Logger LOGGER;

  protected final io.netty.channel.Channel channel;

  private final io.netty.handler.codec.http.HttpHeaders upgradeHeaders;

  private final java.util.Collection<org.asynchttpclient.ws.WebSocketListener> listeners;

  private org.asynchttpclient.netty.ws.NettyWebSocket$FragmentedFrameType expectedFragmentedFrameType;

  private boolean ready;

  private java.util.List<io.netty.handler.codec.http.websocketx.WebSocketFrame> bufferedFrames;

  public org.asynchttpclient.netty.ws.NettyWebSocket(io.netty.channel.Channel, io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #1                  // class java/util/concurrent/ConcurrentLinkedQueue
       6: dup
       7: invokespecial #2                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      10: invokespecial #3                  // Method "<init>":(Lio/netty/channel/Channel;Lio/netty/handler/codec/http/HttpHeaders;Ljava/util/Collection;)V
      13: return

  private org.asynchttpclient.netty.ws.NettyWebSocket(io.netty.channel.Channel, io.netty.handler.codec.http.HttpHeaders, java.util.Collection<org.asynchttpclient.ws.WebSocketListener>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field channel:Lio/netty/channel/Channel;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field upgradeHeaders:Lio/netty/handler/codec/http/HttpHeaders;
      14: aload_0
      15: aload_3
      16: putfield      #7                  // Field listeners:Ljava/util/Collection;
      19: return

  public io.netty.handler.codec.http.HttpHeaders getUpgradeHeaders();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upgradeHeaders:Lio/netty/handler/codec/http/HttpHeaders;
       4: areturn

  public java.net.SocketAddress getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
       9: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #9,  1            // InterfaceMethod io/netty/channel/Channel.localAddress:()Ljava/net/SocketAddress;
       9: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendTextFrame(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_0
       4: invokevirtual #10                 // Method sendTextFrame:(Ljava/lang/String;ZI)Lio/netty/util/concurrent/Future;
       7: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendTextFrame(java.lang.String, boolean, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: new           #11                 // class io/netty/handler/codec/http/websocketx/TextWebSocketFrame
       7: dup
       8: iload_2
       9: iload_3
      10: aload_1
      11: invokespecial #12                 // Method io/netty/handler/codec/http/websocketx/TextWebSocketFrame."<init>":(ZILjava/lang/String;)V
      14: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      19: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendTextFrame(io.netty.buffer.ByteBuf, boolean, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: new           #11                 // class io/netty/handler/codec/http/websocketx/TextWebSocketFrame
       7: dup
       8: iload_2
       9: iload_3
      10: aload_1
      11: invokespecial #14                 // Method io/netty/handler/codec/http/websocketx/TextWebSocketFrame."<init>":(ZILio/netty/buffer/ByteBuf;)V
      14: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      19: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendBinaryFrame(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_0
       4: invokevirtual #15                 // Method sendBinaryFrame:([BZI)Lio/netty/util/concurrent/Future;
       7: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendBinaryFrame(byte[], boolean, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #16                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
       5: iload_2
       6: iload_3
       7: invokevirtual #17                 // Method sendBinaryFrame:(Lio/netty/buffer/ByteBuf;ZI)Lio/netty/util/concurrent/Future;
      10: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendBinaryFrame(io.netty.buffer.ByteBuf, boolean, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: new           #18                 // class io/netty/handler/codec/http/websocketx/BinaryWebSocketFrame
       7: dup
       8: iload_2
       9: iload_3
      10: aload_1
      11: invokespecial #19                 // Method io/netty/handler/codec/http/websocketx/BinaryWebSocketFrame."<init>":(ZILio/netty/buffer/ByteBuf;)V
      14: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      19: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendContinuationFrame(java.lang.String, boolean, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: new           #20                 // class io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame
       7: dup
       8: iload_2
       9: iload_3
      10: aload_1
      11: invokespecial #21                 // Method io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame."<init>":(ZILjava/lang/String;)V
      14: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      19: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendContinuationFrame(byte[], boolean, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #16                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
       5: iload_2
       6: iload_3
       7: invokevirtual #22                 // Method sendContinuationFrame:(Lio/netty/buffer/ByteBuf;ZI)Lio/netty/util/concurrent/Future;
      10: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendContinuationFrame(io.netty.buffer.ByteBuf, boolean, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: new           #20                 // class io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame
       7: dup
       8: iload_2
       9: iload_3
      10: aload_1
      11: invokespecial #23                 // Method io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame."<init>":(ZILio/netty/buffer/ByteBuf;)V
      14: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      19: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendPingFrame();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: new           #24                 // class io/netty/handler/codec/http/websocketx/PingWebSocketFrame
       7: dup
       8: invokespecial #25                 // Method io/netty/handler/codec/http/websocketx/PingWebSocketFrame."<init>":()V
      11: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      16: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendPingFrame(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #16                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
       5: invokevirtual #26                 // Method sendPingFrame:(Lio/netty/buffer/ByteBuf;)Lio/netty/util/concurrent/Future;
       8: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendPingFrame(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: new           #24                 // class io/netty/handler/codec/http/websocketx/PingWebSocketFrame
       7: dup
       8: aload_1
       9: invokespecial #27                 // Method io/netty/handler/codec/http/websocketx/PingWebSocketFrame."<init>":(Lio/netty/buffer/ByteBuf;)V
      12: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      17: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendPongFrame();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: new           #28                 // class io/netty/handler/codec/http/websocketx/PongWebSocketFrame
       7: dup
       8: invokespecial #29                 // Method io/netty/handler/codec/http/websocketx/PongWebSocketFrame."<init>":()V
      11: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      16: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendPongFrame(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #16                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
       5: invokevirtual #30                 // Method sendPongFrame:(Lio/netty/buffer/ByteBuf;)Lio/netty/util/concurrent/Future;
       8: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendPongFrame(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: new           #28                 // class io/netty/handler/codec/http/websocketx/PongWebSocketFrame
       7: dup
       8: aload_1
       9: invokestatic  #31                 // Method io/netty/buffer/Unpooled.wrappedBuffer:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      12: invokespecial #32                 // Method io/netty/handler/codec/http/websocketx/PongWebSocketFrame."<init>":(Lio/netty/buffer/ByteBuf;)V
      15: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      20: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendCloseFrame();
    Code:
       0: aload_0
       1: sipush        1000
       4: ldc           #33                 // String normal closure
       6: invokevirtual #34                 // Method sendCloseFrame:(ILjava/lang/String;)Lio/netty/util/concurrent/Future;
       9: areturn

  public io.netty.util.concurrent.Future<java.lang.Void> sendCloseFrame(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
       9: ifeq          31
      12: aload_0
      13: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
      16: new           #36                 // class io/netty/handler/codec/http/websocketx/CloseWebSocketFrame
      19: dup
      20: iload_1
      21: aload_2
      22: invokespecial #37                 // Method io/netty/handler/codec/http/websocketx/CloseWebSocketFrame."<init>":(ILjava/lang/String;)V
      25: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      30: areturn
      31: getstatic     #38                 // Field io/netty/util/concurrent/ImmediateEventExecutor.INSTANCE:Lio/netty/util/concurrent/ImmediateEventExecutor;
      34: aconst_null
      35: invokevirtual #39                 // Method io/netty/util/concurrent/ImmediateEventExecutor.newSucceededFuture:(Ljava/lang/Object;)Lio/netty/util/concurrent/Future;
      38: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
       9: ireturn

  public org.asynchttpclient.ws.WebSocket addWebSocketListener(org.asynchttpclient.ws.WebSocketListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.asynchttpclient.ws.WebSocket removeWebSocketListener(org.asynchttpclient.ws.WebSocketListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public boolean isReady();
    Code:
       0: aload_0
       1: getfield      #42                 // Field ready:Z
       4: ireturn

  public void bufferFrame(io.netty.handler.codec.http.websocketx.WebSocketFrame);
    Code:
       0: aload_0
       1: getfield      #43                 // Field bufferedFrames:Ljava/util/List;
       4: ifnonnull     19
       7: aload_0
       8: new           #44                 // class java/util/ArrayList
      11: dup
      12: iconst_1
      13: invokespecial #45                 // Method java/util/ArrayList."<init>":(I)V
      16: putfield      #43                 // Field bufferedFrames:Ljava/util/List;
      19: aload_1
      20: invokevirtual #46                 // Method io/netty/handler/codec/http/websocketx/WebSocketFrame.retain:()Lio/netty/handler/codec/http/websocketx/WebSocketFrame;
      23: pop
      24: aload_0
      25: getfield      #43                 // Field bufferedFrames:Ljava/util/List;
      28: aload_1
      29: invokeinterface #47,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      34: pop
      35: return

  private void releaseBufferedFrames();
    Code:
       0: aload_0
       1: getfield      #43                 // Field bufferedFrames:Ljava/util/List;
       4: ifnull        49
       7: aload_0
       8: getfield      #43                 // Field bufferedFrames:Ljava/util/List;
      11: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          44
      26: aload_1
      27: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #51                 // class io/netty/handler/codec/http/websocketx/WebSocketFrame
      35: astore_2
      36: aload_2
      37: invokevirtual #52                 // Method io/netty/handler/codec/http/websocketx/WebSocketFrame.release:()Z
      40: pop
      41: goto          17
      44: aload_0
      45: aconst_null
      46: putfield      #43                 // Field bufferedFrames:Ljava/util/List;
      49: return

  public void processBufferedFrames();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #42                 // Field ready:Z
       5: aload_0
       6: getfield      #43                 // Field bufferedFrames:Ljava/util/List;
       9: ifnull        68
      12: aload_0
      13: getfield      #43                 // Field bufferedFrames:Ljava/util/List;
      16: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore_1
      22: aload_1
      23: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          49
      31: aload_1
      32: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #51                 // class io/netty/handler/codec/http/websocketx/WebSocketFrame
      40: astore_2
      41: aload_0
      42: aload_2
      43: invokevirtual #53                 // Method handleFrame:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;)V
      46: goto          22
      49: aload_0
      50: invokespecial #54                 // Method releaseBufferedFrames:()V
      53: goto          63
      56: astore_3
      57: aload_0
      58: invokespecial #54                 // Method releaseBufferedFrames:()V
      61: aload_3
      62: athrow
      63: aload_0
      64: aconst_null
      65: putfield      #43                 // Field bufferedFrames:Ljava/util/List;
      68: return
    Exception table:
       from    to  target type
          12    49    56   any

  public void handleFrame(io.netty.handler.codec.http.websocketx.WebSocketFrame);
    Code:
       0: aload_1
       1: instanceof    #11                 // class io/netty/handler/codec/http/websocketx/TextWebSocketFrame
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #11                 // class io/netty/handler/codec/http/websocketx/TextWebSocketFrame
      12: invokespecial #55                 // Method onTextFrame:(Lio/netty/handler/codec/http/websocketx/TextWebSocketFrame;)V
      15: goto          128
      18: aload_1
      19: instanceof    #18                 // class io/netty/handler/codec/http/websocketx/BinaryWebSocketFrame
      22: ifeq          36
      25: aload_0
      26: aload_1
      27: checkcast     #18                 // class io/netty/handler/codec/http/websocketx/BinaryWebSocketFrame
      30: invokespecial #56                 // Method onBinaryFrame:(Lio/netty/handler/codec/http/websocketx/BinaryWebSocketFrame;)V
      33: goto          128
      36: aload_1
      37: instanceof    #36                 // class io/netty/handler/codec/http/websocketx/CloseWebSocketFrame
      40: ifeq          77
      43: aload_0
      44: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
      47: invokestatic  #57                 // Method org/asynchttpclient/netty/channel/Channels.setDiscard:(Lio/netty/channel/Channel;)V
      50: aload_1
      51: checkcast     #36                 // class io/netty/handler/codec/http/websocketx/CloseWebSocketFrame
      54: astore_2
      55: aload_0
      56: aload_2
      57: invokevirtual #58                 // Method io/netty/handler/codec/http/websocketx/CloseWebSocketFrame.statusCode:()I
      60: aload_2
      61: invokevirtual #59                 // Method io/netty/handler/codec/http/websocketx/CloseWebSocketFrame.reasonText:()Ljava/lang/String;
      64: invokevirtual #60                 // Method onClose:(ILjava/lang/String;)V
      67: aload_0
      68: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
      71: invokestatic  #61                 // Method org/asynchttpclient/netty/channel/Channels.silentlyCloseChannel:(Lio/netty/channel/Channel;)V
      74: goto          128
      77: aload_1
      78: instanceof    #24                 // class io/netty/handler/codec/http/websocketx/PingWebSocketFrame
      81: ifeq          95
      84: aload_0
      85: aload_1
      86: checkcast     #24                 // class io/netty/handler/codec/http/websocketx/PingWebSocketFrame
      89: invokespecial #62                 // Method onPingFrame:(Lio/netty/handler/codec/http/websocketx/PingWebSocketFrame;)V
      92: goto          128
      95: aload_1
      96: instanceof    #28                 // class io/netty/handler/codec/http/websocketx/PongWebSocketFrame
      99: ifeq          113
     102: aload_0
     103: aload_1
     104: checkcast     #28                 // class io/netty/handler/codec/http/websocketx/PongWebSocketFrame
     107: invokespecial #63                 // Method onPongFrame:(Lio/netty/handler/codec/http/websocketx/PongWebSocketFrame;)V
     110: goto          128
     113: aload_1
     114: instanceof    #20                 // class io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame
     117: ifeq          128
     120: aload_0
     121: aload_1
     122: checkcast     #20                 // class io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame
     125: invokespecial #64                 // Method onContinuationFrame:(Lio/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame;)V
     128: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Collection;
       4: invokeinterface #65,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          56
      19: aload_2
      20: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #66                 // class org/asynchttpclient/ws/WebSocketListener
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #67,  2           // InterfaceMethod org/asynchttpclient/ws/WebSocketListener.onError:(Ljava/lang/Throwable;)V
      36: goto          53
      39: astore        4
      41: getstatic     #69                 // Field LOGGER:Lorg/slf4j/Logger;
      44: ldc           #70                 // String WebSocketListener.onError crash
      46: aload         4
      48: invokeinterface #71,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: goto          10
      56: aload_0
      57: invokespecial #54                 // Method releaseBufferedFrames:()V
      60: goto          72
      63: astore        5
      65: aload_0
      66: invokespecial #54                 // Method releaseBufferedFrames:()V
      69: aload         5
      71: athrow
      72: return
    Exception table:
       from    to  target type
          29    36    39   Class java/lang/Throwable
           0    56    63   any
          63    65    63   any

  public void onClose(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Collection;
       4: invokeinterface #65,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          57
      19: aload_3
      20: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #66                 // class org/asynchttpclient/ws/WebSocketListener
      28: astore        4
      30: aload         4
      32: aload_0
      33: iload_1
      34: aload_2
      35: invokeinterface #72,  4           // InterfaceMethod org/asynchttpclient/ws/WebSocketListener.onClose:(Lorg/asynchttpclient/ws/WebSocket;ILjava/lang/String;)V
      40: goto          54
      43: astore        5
      45: aload         4
      47: aload         5
      49: invokeinterface #67,  2           // InterfaceMethod org/asynchttpclient/ws/WebSocketListener.onError:(Ljava/lang/Throwable;)V
      54: goto          10
      57: aload_0
      58: getfield      #7                  // Field listeners:Ljava/util/Collection;
      61: invokeinterface #73,  1           // InterfaceMethod java/util/Collection.clear:()V
      66: aload_0
      67: invokespecial #54                 // Method releaseBufferedFrames:()V
      70: goto          82
      73: astore        6
      75: aload_0
      76: invokespecial #54                 // Method releaseBufferedFrames:()V
      79: aload         6
      81: athrow
      82: return
    Exception table:
       from    to  target type
          30    40    43   Class java/lang/Throwable
           0    66    73   any
          73    75    73   any

  public java.lang.String toString();
    Code:
       0: new           #74                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #75                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #76                 // String NettyWebSocket{channel=
       9: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field channel:Lio/netty/channel/Channel;
      16: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: bipush        125
      21: invokevirtual #79                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  private void onBinaryFrame(io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame);
    Code:
       0: aload_0
       1: getfield      #81                 // Field expectedFragmentedFrameType:Lorg/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType;
       4: ifnonnull     21
       7: aload_1
       8: invokevirtual #82                 // Method io/netty/handler/codec/http/websocketx/BinaryWebSocketFrame.isFinalFragment:()Z
      11: ifne          21
      14: aload_0
      15: getstatic     #83                 // Field org/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType.BINARY:Lorg/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType;
      18: putfield      #81                 // Field expectedFragmentedFrameType:Lorg/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType;
      21: aload_0
      22: aload_1
      23: invokespecial #84                 // Method onBinaryFrame0:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;)V
      26: return

  private void onBinaryFrame0(io.netty.handler.codec.http.websocketx.WebSocketFrame);
    Code:
       0: aload_1
       1: invokevirtual #85                 // Method io/netty/handler/codec/http/websocketx/WebSocketFrame.content:()Lio/netty/buffer/ByteBuf;
       4: invokestatic  #86                 // Method org/asynchttpclient/netty/util/ByteBufUtils.byteBuf2Bytes:(Lio/netty/buffer/ByteBuf;)[B
       7: astore_2
       8: aload_0
       9: getfield      #7                  // Field listeners:Ljava/util/Collection;
      12: invokeinterface #65,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          57
      27: aload_3
      28: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #66                 // class org/asynchttpclient/ws/WebSocketListener
      36: astore        4
      38: aload         4
      40: aload_2
      41: aload_1
      42: invokevirtual #87                 // Method io/netty/handler/codec/http/websocketx/WebSocketFrame.isFinalFragment:()Z
      45: aload_1
      46: invokevirtual #88                 // Method io/netty/handler/codec/http/websocketx/WebSocketFrame.rsv:()I
      49: invokeinterface #89,  4           // InterfaceMethod org/asynchttpclient/ws/WebSocketListener.onBinaryFrame:([BZI)V
      54: goto          18
      57: return

  private void onTextFrame(io.netty.handler.codec.http.websocketx.TextWebSocketFrame);
    Code:
       0: aload_0
       1: getfield      #81                 // Field expectedFragmentedFrameType:Lorg/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType;
       4: ifnonnull     21
       7: aload_1
       8: invokevirtual #90                 // Method io/netty/handler/codec/http/websocketx/TextWebSocketFrame.isFinalFragment:()Z
      11: ifne          21
      14: aload_0
      15: getstatic     #91                 // Field org/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType.TEXT:Lorg/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType;
      18: putfield      #81                 // Field expectedFragmentedFrameType:Lorg/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType;
      21: aload_0
      22: aload_1
      23: invokespecial #92                 // Method onTextFrame0:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;)V
      26: return

  private void onTextFrame0(io.netty.handler.codec.http.websocketx.WebSocketFrame);
    Code:
       0: aload_1
       1: invokevirtual #85                 // Method io/netty/handler/codec/http/websocketx/WebSocketFrame.content:()Lio/netty/buffer/ByteBuf;
       4: invokestatic  #93                 // Method org/asynchttpclient/netty/util/Utf8ByteBufCharsetDecoder.decodeUtf8:(Lio/netty/buffer/ByteBuf;)Ljava/lang/String;
       7: astore_2
       8: aload_1
       9: invokevirtual #87                 // Method io/netty/handler/codec/http/websocketx/WebSocketFrame.isFinalFragment:()Z
      12: pop
      13: aload_1
      14: invokevirtual #88                 // Method io/netty/handler/codec/http/websocketx/WebSocketFrame.rsv:()I
      17: pop
      18: aload_0
      19: getfield      #7                  // Field listeners:Ljava/util/Collection;
      22: invokeinterface #65,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          67
      37: aload_3
      38: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #66                 // class org/asynchttpclient/ws/WebSocketListener
      46: astore        4
      48: aload         4
      50: aload_2
      51: aload_1
      52: invokevirtual #87                 // Method io/netty/handler/codec/http/websocketx/WebSocketFrame.isFinalFragment:()Z
      55: aload_1
      56: invokevirtual #88                 // Method io/netty/handler/codec/http/websocketx/WebSocketFrame.rsv:()I
      59: invokeinterface #94,  4           // InterfaceMethod org/asynchttpclient/ws/WebSocketListener.onTextFrame:(Ljava/lang/String;ZI)V
      64: goto          28
      67: return

  private void onContinuationFrame(io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame);
    Code:
       0: aload_0
       1: getfield      #81                 // Field expectedFragmentedFrameType:Lorg/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType;
       4: ifnonnull     18
       7: getstatic     #69                 // Field LOGGER:Lorg/slf4j/Logger;
      10: ldc           #95                 // String Received continuation frame without an original text or binary frame, ignoring
      12: invokeinterface #96,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      17: return
      18: getstatic     #97                 // Field org/asynchttpclient/netty/ws/NettyWebSocket$1.$SwitchMap$org$asynchttpclient$netty$ws$NettyWebSocket$FragmentedFrameType:[I
      21: aload_0
      22: getfield      #81                 // Field expectedFragmentedFrameType:Lorg/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType;
      25: invokevirtual #98                 // Method org/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType.ordinal:()I
      28: iaload
      29: lookupswitch  { // 2
                     1: 56
                     2: 64
               default: 72
          }
      56: aload_0
      57: aload_1
      58: invokespecial #84                 // Method onBinaryFrame0:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;)V
      61: goto          102
      64: aload_0
      65: aload_1
      66: invokespecial #92                 // Method onTextFrame0:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;)V
      69: goto          102
      72: new           #99                 // class java/lang/IllegalArgumentException
      75: dup
      76: new           #74                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #75                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #100                // String Unknown FragmentedFrameType
      85: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_0
      89: getfield      #81                 // Field expectedFragmentedFrameType:Lorg/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType;
      92: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokespecial #101                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload_1
     103: invokevirtual #102                // Method io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame.isFinalFragment:()Z
     106: ifeq          132
     109: aload_0
     110: aconst_null
     111: putfield      #81                 // Field expectedFragmentedFrameType:Lorg/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType;
     114: goto          132
     117: astore_2
     118: aload_1
     119: invokevirtual #102                // Method io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame.isFinalFragment:()Z
     122: ifeq          130
     125: aload_0
     126: aconst_null
     127: putfield      #81                 // Field expectedFragmentedFrameType:Lorg/asynchttpclient/netty/ws/NettyWebSocket$FragmentedFrameType;
     130: aload_2
     131: athrow
     132: return
    Exception table:
       from    to  target type
          18   102   117   any

  private void onPingFrame(io.netty.handler.codec.http.websocketx.PingWebSocketFrame);
    Code:
       0: aload_1
       1: invokevirtual #103                // Method io/netty/handler/codec/http/websocketx/PingWebSocketFrame.content:()Lio/netty/buffer/ByteBuf;
       4: invokestatic  #86                 // Method org/asynchttpclient/netty/util/ByteBufUtils.byteBuf2Bytes:(Lio/netty/buffer/ByteBuf;)[B
       7: astore_2
       8: aload_0
       9: getfield      #7                  // Field listeners:Ljava/util/Collection;
      12: invokeinterface #65,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          49
      27: aload_3
      28: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #66                 // class org/asynchttpclient/ws/WebSocketListener
      36: astore        4
      38: aload         4
      40: aload_2
      41: invokeinterface #104,  2          // InterfaceMethod org/asynchttpclient/ws/WebSocketListener.onPingFrame:([B)V
      46: goto          18
      49: return

  private void onPongFrame(io.netty.handler.codec.http.websocketx.PongWebSocketFrame);
    Code:
       0: aload_1
       1: invokevirtual #105                // Method io/netty/handler/codec/http/websocketx/PongWebSocketFrame.content:()Lio/netty/buffer/ByteBuf;
       4: invokestatic  #86                 // Method org/asynchttpclient/netty/util/ByteBufUtils.byteBuf2Bytes:(Lio/netty/buffer/ByteBuf;)[B
       7: astore_2
       8: aload_0
       9: getfield      #7                  // Field listeners:Ljava/util/Collection;
      12: invokeinterface #65,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          49
      27: aload_3
      28: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #66                 // class org/asynchttpclient/ws/WebSocketListener
      36: astore        4
      38: aload         4
      40: aload_2
      41: invokeinterface #106,  2          // InterfaceMethod org/asynchttpclient/ws/WebSocketListener.onPongFrame:([B)V
      46: goto          18
      49: return

  static {};
    Code:
       0: ldc           #107                // class org/asynchttpclient/netty/ws/NettyWebSocket
       2: invokestatic  #108                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #69                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
