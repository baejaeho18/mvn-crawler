Compiled from "DefaultAsyncHttpClientConfig.java"
public class org.asynchttpclient.DefaultAsyncHttpClientConfig implements org.asynchttpclient.AsyncHttpClientConfig {
  private final boolean followRedirect;

  private final int maxRedirects;

  private final boolean strict302Handling;

  private final boolean compressionEnforced;

  private final java.lang.String userAgent;

  private final org.asynchttpclient.Realm realm;

  private final int maxRequestRetry;

  private final boolean disableUrlEncodingForBoundRequests;

  private final boolean useLaxCookieEncoder;

  private final boolean disableZeroCopy;

  private final boolean keepEncodingHeader;

  private final org.asynchttpclient.proxy.ProxyServerSelector proxyServerSelector;

  private final boolean validateResponseHeaders;

  private final boolean aggregateWebSocketFrameFragments;

  private final boolean enablewebSocketCompression;

  private final int webSocketMaxBufferSize;

  private final int webSocketMaxFrameSize;

  private final int connectTimeout;

  private final int requestTimeout;

  private final int readTimeout;

  private final int shutdownQuietPeriod;

  private final int shutdownTimeout;

  private final boolean keepAlive;

  private final int pooledConnectionIdleTimeout;

  private final int connectionPoolCleanerPeriod;

  private final int connectionTtl;

  private final int maxConnections;

  private final int maxConnectionsPerHost;

  private final int acquireFreeChannelTimeout;

  private final org.asynchttpclient.channel.ChannelPool channelPool;

  private final org.asynchttpclient.netty.channel.ConnectionSemaphoreFactory connectionSemaphoreFactory;

  private final org.asynchttpclient.channel.KeepAliveStrategy keepAliveStrategy;

  private final boolean useOpenSsl;

  private final boolean useInsecureTrustManager;

  private final boolean disableHttpsEndpointIdentificationAlgorithm;

  private final int handshakeTimeout;

  private final java.lang.String[] enabledProtocols;

  private final java.lang.String[] enabledCipherSuites;

  private final boolean filterInsecureCipherSuites;

  private final int sslSessionCacheSize;

  private final int sslSessionTimeout;

  private final io.netty.handler.ssl.SslContext sslContext;

  private final org.asynchttpclient.SslEngineFactory sslEngineFactory;

  private final java.util.List<org.asynchttpclient.filter.RequestFilter> requestFilters;

  private final java.util.List<org.asynchttpclient.filter.ResponseFilter> responseFilters;

  private final java.util.List<org.asynchttpclient.filter.IOExceptionFilter> ioExceptionFilters;

  private final org.asynchttpclient.cookie.CookieStore cookieStore;

  private final int expiredCookieEvictionDelay;

  private final java.lang.String threadPoolName;

  private final int httpClientCodecMaxInitialLineLength;

  private final int httpClientCodecMaxHeaderSize;

  private final int httpClientCodecMaxChunkSize;

  private final int httpClientCodecInitialBufferSize;

  private final int chunkedFileChunkSize;

  private final java.util.Map<io.netty.channel.ChannelOption<java.lang.Object>, java.lang.Object> channelOptions;

  private final io.netty.channel.EventLoopGroup eventLoopGroup;

  private final boolean useNativeTransport;

  private final io.netty.buffer.ByteBufAllocator allocator;

  private final boolean tcpNoDelay;

  private final boolean soReuseAddress;

  private final boolean soKeepAlive;

  private final int soLinger;

  private final int soSndBuf;

  private final int soRcvBuf;

  private final io.netty.util.Timer nettyTimer;

  private final java.util.concurrent.ThreadFactory threadFactory;

  private final java.util.function.Consumer<io.netty.channel.Channel> httpAdditionalChannelInitializer;

  private final java.util.function.Consumer<io.netty.channel.Channel> wsAdditionalChannelInitializer;

  private final org.asynchttpclient.AsyncHttpClientConfig$ResponseBodyPartFactory responseBodyPartFactory;

  private final int ioThreadsCount;

  private final long hashedWheelTimerTickDuration;

  private final int hashedWheelTimerSize;

  private org.asynchttpclient.DefaultAsyncHttpClientConfig(boolean, int, boolean, boolean, java.lang.String, org.asynchttpclient.Realm, int, boolean, boolean, boolean, boolean, org.asynchttpclient.proxy.ProxyServerSelector, boolean, boolean, boolean, int, int, int, int, int, boolean, int, int, int, int, int, int, org.asynchttpclient.channel.ChannelPool, org.asynchttpclient.netty.channel.ConnectionSemaphoreFactory, org.asynchttpclient.channel.KeepAliveStrategy, boolean, boolean, boolean, int, java.lang.String[], java.lang.String[], boolean, int, int, io.netty.handler.ssl.SslContext, org.asynchttpclient.SslEngineFactory, java.util.List<org.asynchttpclient.filter.RequestFilter>, java.util.List<org.asynchttpclient.filter.ResponseFilter>, java.util.List<org.asynchttpclient.filter.IOExceptionFilter>, org.asynchttpclient.cookie.CookieStore, int, boolean, boolean, boolean, int, int, int, java.lang.String, int, int, int, int, int, int, int, java.util.Map<io.netty.channel.ChannelOption<java.lang.Object>, java.lang.Object>, io.netty.channel.EventLoopGroup, boolean, io.netty.buffer.ByteBufAllocator, io.netty.util.Timer, java.util.concurrent.ThreadFactory, java.util.function.Consumer<io.netty.channel.Channel>, java.util.function.Consumer<io.netty.channel.Channel>, org.asynchttpclient.AsyncHttpClientConfig$ResponseBodyPartFactory, int, long, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field followRedirect:Z
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field maxRedirects:I
      14: aload_0
      15: iload_3
      16: putfield      #5                  // Field strict302Handling:Z
      19: aload_0
      20: iload         4
      22: putfield      #6                  // Field compressionEnforced:Z
      25: aload_0
      26: aload         5
      28: putfield      #7                  // Field userAgent:Ljava/lang/String;
      31: aload_0
      32: aload         6
      34: putfield      #8                  // Field realm:Lorg/asynchttpclient/Realm;
      37: aload_0
      38: iload         7
      40: putfield      #9                  // Field maxRequestRetry:I
      43: aload_0
      44: iload         8
      46: putfield      #10                 // Field disableUrlEncodingForBoundRequests:Z
      49: aload_0
      50: iload         9
      52: putfield      #11                 // Field useLaxCookieEncoder:Z
      55: aload_0
      56: iload         10
      58: putfield      #12                 // Field disableZeroCopy:Z
      61: aload_0
      62: iload         11
      64: putfield      #13                 // Field keepEncodingHeader:Z
      67: aload_0
      68: aload         12
      70: putfield      #14                 // Field proxyServerSelector:Lorg/asynchttpclient/proxy/ProxyServerSelector;
      73: aload_0
      74: iload         13
      76: putfield      #15                 // Field validateResponseHeaders:Z
      79: aload_0
      80: iload         14
      82: putfield      #16                 // Field aggregateWebSocketFrameFragments:Z
      85: aload_0
      86: iload         15
      88: putfield      #17                 // Field enablewebSocketCompression:Z
      91: aload_0
      92: iload         59
      94: putfield      #18                 // Field webSocketMaxBufferSize:I
      97: aload_0
      98: iload         60
     100: putfield      #19                 // Field webSocketMaxFrameSize:I
     103: aload_0
     104: iload         16
     106: putfield      #20                 // Field connectTimeout:I
     109: aload_0
     110: iload         17
     112: putfield      #21                 // Field requestTimeout:I
     115: aload_0
     116: iload         18
     118: putfield      #22                 // Field readTimeout:I
     121: aload_0
     122: iload         19
     124: putfield      #23                 // Field shutdownQuietPeriod:I
     127: aload_0
     128: iload         20
     130: putfield      #24                 // Field shutdownTimeout:I
     133: aload_0
     134: iload         21
     136: putfield      #25                 // Field keepAlive:Z
     139: aload_0
     140: iload         22
     142: putfield      #26                 // Field pooledConnectionIdleTimeout:I
     145: aload_0
     146: iload         23
     148: putfield      #27                 // Field connectionPoolCleanerPeriod:I
     151: aload_0
     152: iload         24
     154: putfield      #28                 // Field connectionTtl:I
     157: aload_0
     158: iload         25
     160: putfield      #29                 // Field maxConnections:I
     163: aload_0
     164: iload         26
     166: putfield      #30                 // Field maxConnectionsPerHost:I
     169: aload_0
     170: iload         27
     172: putfield      #31                 // Field acquireFreeChannelTimeout:I
     175: aload_0
     176: aload         28
     178: putfield      #32                 // Field channelPool:Lorg/asynchttpclient/channel/ChannelPool;
     181: aload_0
     182: aload         29
     184: putfield      #33                 // Field connectionSemaphoreFactory:Lorg/asynchttpclient/netty/channel/ConnectionSemaphoreFactory;
     187: aload_0
     188: aload         30
     190: putfield      #34                 // Field keepAliveStrategy:Lorg/asynchttpclient/channel/KeepAliveStrategy;
     193: aload_0
     194: iload         31
     196: putfield      #35                 // Field useOpenSsl:Z
     199: aload_0
     200: iload         32
     202: putfield      #36                 // Field useInsecureTrustManager:Z
     205: aload_0
     206: iload         33
     208: putfield      #37                 // Field disableHttpsEndpointIdentificationAlgorithm:Z
     211: aload_0
     212: iload         34
     214: putfield      #38                 // Field handshakeTimeout:I
     217: aload_0
     218: aload         35
     220: putfield      #39                 // Field enabledProtocols:[Ljava/lang/String;
     223: aload_0
     224: aload         36
     226: putfield      #40                 // Field enabledCipherSuites:[Ljava/lang/String;
     229: aload_0
     230: iload         37
     232: putfield      #41                 // Field filterInsecureCipherSuites:Z
     235: aload_0
     236: iload         38
     238: putfield      #42                 // Field sslSessionCacheSize:I
     241: aload_0
     242: iload         39
     244: putfield      #43                 // Field sslSessionTimeout:I
     247: aload_0
     248: aload         40
     250: putfield      #44                 // Field sslContext:Lio/netty/handler/ssl/SslContext;
     253: aload_0
     254: aload         41
     256: putfield      #45                 // Field sslEngineFactory:Lorg/asynchttpclient/SslEngineFactory;
     259: aload_0
     260: aload         42
     262: putfield      #46                 // Field requestFilters:Ljava/util/List;
     265: aload_0
     266: aload         43
     268: putfield      #47                 // Field responseFilters:Ljava/util/List;
     271: aload_0
     272: aload         44
     274: putfield      #48                 // Field ioExceptionFilters:Ljava/util/List;
     277: aload_0
     278: aload         45
     280: putfield      #49                 // Field cookieStore:Lorg/asynchttpclient/cookie/CookieStore;
     283: aload_0
     284: iload         46
     286: putfield      #50                 // Field expiredCookieEvictionDelay:I
     289: aload_0
     290: iload         47
     292: putfield      #51                 // Field tcpNoDelay:Z
     295: aload_0
     296: iload         48
     298: putfield      #52                 // Field soReuseAddress:Z
     301: aload_0
     302: iload         49
     304: putfield      #53                 // Field soKeepAlive:Z
     307: aload_0
     308: iload         50
     310: putfield      #54                 // Field soLinger:I
     313: aload_0
     314: iload         51
     316: putfield      #55                 // Field soSndBuf:I
     319: aload_0
     320: iload         52
     322: putfield      #56                 // Field soRcvBuf:I
     325: aload_0
     326: aload         53
     328: putfield      #57                 // Field threadPoolName:Ljava/lang/String;
     331: aload_0
     332: iload         54
     334: putfield      #58                 // Field httpClientCodecMaxInitialLineLength:I
     337: aload_0
     338: iload         55
     340: putfield      #59                 // Field httpClientCodecMaxHeaderSize:I
     343: aload_0
     344: iload         56
     346: putfield      #60                 // Field httpClientCodecMaxChunkSize:I
     349: aload_0
     350: iload         57
     352: putfield      #61                 // Field httpClientCodecInitialBufferSize:I
     355: aload_0
     356: iload         58
     358: putfield      #62                 // Field chunkedFileChunkSize:I
     361: aload_0
     362: aload         61
     364: putfield      #63                 // Field channelOptions:Ljava/util/Map;
     367: aload_0
     368: aload         62
     370: putfield      #64                 // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
     373: aload_0
     374: iload         63
     376: putfield      #65                 // Field useNativeTransport:Z
     379: aload_0
     380: aload         64
     382: putfield      #66                 // Field allocator:Lio/netty/buffer/ByteBufAllocator;
     385: aload_0
     386: aload         65
     388: putfield      #67                 // Field nettyTimer:Lio/netty/util/Timer;
     391: aload_0
     392: aload         66
     394: putfield      #68                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
     397: aload_0
     398: aload         67
     400: putfield      #69                 // Field httpAdditionalChannelInitializer:Ljava/util/function/Consumer;
     403: aload_0
     404: aload         68
     406: putfield      #70                 // Field wsAdditionalChannelInitializer:Ljava/util/function/Consumer;
     409: aload_0
     410: aload         69
     412: putfield      #71                 // Field responseBodyPartFactory:Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;
     415: aload_0
     416: iload         70
     418: putfield      #72                 // Field ioThreadsCount:I
     421: aload_0
     422: lload         71
     424: putfield      #73                 // Field hashedWheelTimerTickDuration:J
     427: aload_0
     428: iload         73
     430: putfield      #74                 // Field hashedWheelTimerSize:I
     433: return

  public java.lang.String getAhcVersion();
    Code:
       0: getstatic     #75                 // Field org/asynchttpclient/config/AsyncHttpClientConfigDefaults.AHC_VERSION:Ljava/lang/String;
       3: areturn

  public boolean isFollowRedirect();
    Code:
       0: aload_0
       1: getfield      #3                  // Field followRedirect:Z
       4: ireturn

  public int getMaxRedirects();
    Code:
       0: aload_0
       1: getfield      #4                  // Field maxRedirects:I
       4: ireturn

  public boolean isStrict302Handling();
    Code:
       0: aload_0
       1: getfield      #5                  // Field strict302Handling:Z
       4: ireturn

  public boolean isCompressionEnforced();
    Code:
       0: aload_0
       1: getfield      #6                  // Field compressionEnforced:Z
       4: ireturn

  public java.lang.String getUserAgent();
    Code:
       0: aload_0
       1: getfield      #7                  // Field userAgent:Ljava/lang/String;
       4: areturn

  public org.asynchttpclient.Realm getRealm();
    Code:
       0: aload_0
       1: getfield      #8                  // Field realm:Lorg/asynchttpclient/Realm;
       4: areturn

  public int getMaxRequestRetry();
    Code:
       0: aload_0
       1: getfield      #9                  // Field maxRequestRetry:I
       4: ireturn

  public boolean isDisableUrlEncodingForBoundRequests();
    Code:
       0: aload_0
       1: getfield      #10                 // Field disableUrlEncodingForBoundRequests:Z
       4: ireturn

  public boolean isUseLaxCookieEncoder();
    Code:
       0: aload_0
       1: getfield      #11                 // Field useLaxCookieEncoder:Z
       4: ireturn

  public boolean isDisableZeroCopy();
    Code:
       0: aload_0
       1: getfield      #12                 // Field disableZeroCopy:Z
       4: ireturn

  public boolean isKeepEncodingHeader();
    Code:
       0: aload_0
       1: getfield      #13                 // Field keepEncodingHeader:Z
       4: ireturn

  public org.asynchttpclient.proxy.ProxyServerSelector getProxyServerSelector();
    Code:
       0: aload_0
       1: getfield      #14                 // Field proxyServerSelector:Lorg/asynchttpclient/proxy/ProxyServerSelector;
       4: areturn

  public boolean isAggregateWebSocketFrameFragments();
    Code:
       0: aload_0
       1: getfield      #16                 // Field aggregateWebSocketFrameFragments:Z
       4: ireturn

  public boolean isEnableWebSocketCompression();
    Code:
       0: aload_0
       1: getfield      #17                 // Field enablewebSocketCompression:Z
       4: ireturn

  public int getWebSocketMaxBufferSize();
    Code:
       0: aload_0
       1: getfield      #18                 // Field webSocketMaxBufferSize:I
       4: ireturn

  public int getWebSocketMaxFrameSize();
    Code:
       0: aload_0
       1: getfield      #19                 // Field webSocketMaxFrameSize:I
       4: ireturn

  public int getConnectTimeout();
    Code:
       0: aload_0
       1: getfield      #20                 // Field connectTimeout:I
       4: ireturn

  public int getRequestTimeout();
    Code:
       0: aload_0
       1: getfield      #21                 // Field requestTimeout:I
       4: ireturn

  public int getReadTimeout();
    Code:
       0: aload_0
       1: getfield      #22                 // Field readTimeout:I
       4: ireturn

  public int getShutdownQuietPeriod();
    Code:
       0: aload_0
       1: getfield      #23                 // Field shutdownQuietPeriod:I
       4: ireturn

  public int getShutdownTimeout();
    Code:
       0: aload_0
       1: getfield      #24                 // Field shutdownTimeout:I
       4: ireturn

  public boolean isKeepAlive();
    Code:
       0: aload_0
       1: getfield      #25                 // Field keepAlive:Z
       4: ireturn

  public int getPooledConnectionIdleTimeout();
    Code:
       0: aload_0
       1: getfield      #26                 // Field pooledConnectionIdleTimeout:I
       4: ireturn

  public int getConnectionPoolCleanerPeriod();
    Code:
       0: aload_0
       1: getfield      #27                 // Field connectionPoolCleanerPeriod:I
       4: ireturn

  public int getConnectionTtl();
    Code:
       0: aload_0
       1: getfield      #28                 // Field connectionTtl:I
       4: ireturn

  public int getMaxConnections();
    Code:
       0: aload_0
       1: getfield      #29                 // Field maxConnections:I
       4: ireturn

  public int getMaxConnectionsPerHost();
    Code:
       0: aload_0
       1: getfield      #30                 // Field maxConnectionsPerHost:I
       4: ireturn

  public int getAcquireFreeChannelTimeout();
    Code:
       0: aload_0
       1: getfield      #31                 // Field acquireFreeChannelTimeout:I
       4: ireturn

  public org.asynchttpclient.channel.ChannelPool getChannelPool();
    Code:
       0: aload_0
       1: getfield      #32                 // Field channelPool:Lorg/asynchttpclient/channel/ChannelPool;
       4: areturn

  public org.asynchttpclient.netty.channel.ConnectionSemaphoreFactory getConnectionSemaphoreFactory();
    Code:
       0: aload_0
       1: getfield      #33                 // Field connectionSemaphoreFactory:Lorg/asynchttpclient/netty/channel/ConnectionSemaphoreFactory;
       4: areturn

  public org.asynchttpclient.channel.KeepAliveStrategy getKeepAliveStrategy();
    Code:
       0: aload_0
       1: getfield      #34                 // Field keepAliveStrategy:Lorg/asynchttpclient/channel/KeepAliveStrategy;
       4: areturn

  public boolean isValidateResponseHeaders();
    Code:
       0: aload_0
       1: getfield      #15                 // Field validateResponseHeaders:Z
       4: ireturn

  public boolean isUseOpenSsl();
    Code:
       0: aload_0
       1: getfield      #35                 // Field useOpenSsl:Z
       4: ireturn

  public boolean isUseInsecureTrustManager();
    Code:
       0: aload_0
       1: getfield      #36                 // Field useInsecureTrustManager:Z
       4: ireturn

  public boolean isDisableHttpsEndpointIdentificationAlgorithm();
    Code:
       0: aload_0
       1: getfield      #37                 // Field disableHttpsEndpointIdentificationAlgorithm:Z
       4: ireturn

  public int getHandshakeTimeout();
    Code:
       0: aload_0
       1: getfield      #38                 // Field handshakeTimeout:I
       4: ireturn

  public java.lang.String[] getEnabledProtocols();
    Code:
       0: aload_0
       1: getfield      #39                 // Field enabledProtocols:[Ljava/lang/String;
       4: areturn

  public java.lang.String[] getEnabledCipherSuites();
    Code:
       0: aload_0
       1: getfield      #40                 // Field enabledCipherSuites:[Ljava/lang/String;
       4: areturn

  public boolean isFilterInsecureCipherSuites();
    Code:
       0: aload_0
       1: getfield      #41                 // Field filterInsecureCipherSuites:Z
       4: ireturn

  public int getSslSessionCacheSize();
    Code:
       0: aload_0
       1: getfield      #42                 // Field sslSessionCacheSize:I
       4: ireturn

  public int getSslSessionTimeout();
    Code:
       0: aload_0
       1: getfield      #43                 // Field sslSessionTimeout:I
       4: ireturn

  public io.netty.handler.ssl.SslContext getSslContext();
    Code:
       0: aload_0
       1: getfield      #44                 // Field sslContext:Lio/netty/handler/ssl/SslContext;
       4: areturn

  public org.asynchttpclient.SslEngineFactory getSslEngineFactory();
    Code:
       0: aload_0
       1: getfield      #45                 // Field sslEngineFactory:Lorg/asynchttpclient/SslEngineFactory;
       4: areturn

  public java.util.List<org.asynchttpclient.filter.RequestFilter> getRequestFilters();
    Code:
       0: aload_0
       1: getfield      #46                 // Field requestFilters:Ljava/util/List;
       4: areturn

  public java.util.List<org.asynchttpclient.filter.ResponseFilter> getResponseFilters();
    Code:
       0: aload_0
       1: getfield      #47                 // Field responseFilters:Ljava/util/List;
       4: areturn

  public java.util.List<org.asynchttpclient.filter.IOExceptionFilter> getIoExceptionFilters();
    Code:
       0: aload_0
       1: getfield      #48                 // Field ioExceptionFilters:Ljava/util/List;
       4: areturn

  public org.asynchttpclient.cookie.CookieStore getCookieStore();
    Code:
       0: aload_0
       1: getfield      #49                 // Field cookieStore:Lorg/asynchttpclient/cookie/CookieStore;
       4: areturn

  public int expiredCookieEvictionDelay();
    Code:
       0: aload_0
       1: getfield      #50                 // Field expiredCookieEvictionDelay:I
       4: ireturn

  public boolean isTcpNoDelay();
    Code:
       0: aload_0
       1: getfield      #51                 // Field tcpNoDelay:Z
       4: ireturn

  public boolean isSoReuseAddress();
    Code:
       0: aload_0
       1: getfield      #52                 // Field soReuseAddress:Z
       4: ireturn

  public boolean isSoKeepAlive();
    Code:
       0: aload_0
       1: getfield      #53                 // Field soKeepAlive:Z
       4: ireturn

  public int getSoLinger();
    Code:
       0: aload_0
       1: getfield      #54                 // Field soLinger:I
       4: ireturn

  public int getSoSndBuf();
    Code:
       0: aload_0
       1: getfield      #55                 // Field soSndBuf:I
       4: ireturn

  public int getSoRcvBuf();
    Code:
       0: aload_0
       1: getfield      #56                 // Field soRcvBuf:I
       4: ireturn

  public java.lang.String getThreadPoolName();
    Code:
       0: aload_0
       1: getfield      #57                 // Field threadPoolName:Ljava/lang/String;
       4: areturn

  public int getHttpClientCodecMaxInitialLineLength();
    Code:
       0: aload_0
       1: getfield      #58                 // Field httpClientCodecMaxInitialLineLength:I
       4: ireturn

  public int getHttpClientCodecMaxHeaderSize();
    Code:
       0: aload_0
       1: getfield      #59                 // Field httpClientCodecMaxHeaderSize:I
       4: ireturn

  public int getHttpClientCodecMaxChunkSize();
    Code:
       0: aload_0
       1: getfield      #60                 // Field httpClientCodecMaxChunkSize:I
       4: ireturn

  public int getHttpClientCodecInitialBufferSize();
    Code:
       0: aload_0
       1: getfield      #61                 // Field httpClientCodecInitialBufferSize:I
       4: ireturn

  public int getChunkedFileChunkSize();
    Code:
       0: aload_0
       1: getfield      #62                 // Field chunkedFileChunkSize:I
       4: ireturn

  public java.util.Map<io.netty.channel.ChannelOption<java.lang.Object>, java.lang.Object> getChannelOptions();
    Code:
       0: aload_0
       1: getfield      #63                 // Field channelOptions:Ljava/util/Map;
       4: areturn

  public io.netty.channel.EventLoopGroup getEventLoopGroup();
    Code:
       0: aload_0
       1: getfield      #64                 // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
       4: areturn

  public boolean isUseNativeTransport();
    Code:
       0: aload_0
       1: getfield      #65                 // Field useNativeTransport:Z
       4: ireturn

  public io.netty.buffer.ByteBufAllocator getAllocator();
    Code:
       0: aload_0
       1: getfield      #66                 // Field allocator:Lio/netty/buffer/ByteBufAllocator;
       4: areturn

  public io.netty.util.Timer getNettyTimer();
    Code:
       0: aload_0
       1: getfield      #67                 // Field nettyTimer:Lio/netty/util/Timer;
       4: areturn

  public long getHashedWheelTimerTickDuration();
    Code:
       0: aload_0
       1: getfield      #73                 // Field hashedWheelTimerTickDuration:J
       4: lreturn

  public int getHashedWheelTimerSize();
    Code:
       0: aload_0
       1: getfield      #74                 // Field hashedWheelTimerSize:I
       4: ireturn

  public java.util.concurrent.ThreadFactory getThreadFactory();
    Code:
       0: aload_0
       1: getfield      #68                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  public java.util.function.Consumer<io.netty.channel.Channel> getHttpAdditionalChannelInitializer();
    Code:
       0: aload_0
       1: getfield      #69                 // Field httpAdditionalChannelInitializer:Ljava/util/function/Consumer;
       4: areturn

  public java.util.function.Consumer<io.netty.channel.Channel> getWsAdditionalChannelInitializer();
    Code:
       0: aload_0
       1: getfield      #70                 // Field wsAdditionalChannelInitializer:Ljava/util/function/Consumer;
       4: areturn

  public org.asynchttpclient.AsyncHttpClientConfig$ResponseBodyPartFactory getResponseBodyPartFactory();
    Code:
       0: aload_0
       1: getfield      #71                 // Field responseBodyPartFactory:Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;
       4: areturn

  public int getIoThreadsCount();
    Code:
       0: aload_0
       1: getfield      #72                 // Field ioThreadsCount:I
       4: ireturn

  org.asynchttpclient.DefaultAsyncHttpClientConfig(boolean, int, boolean, boolean, java.lang.String, org.asynchttpclient.Realm, int, boolean, boolean, boolean, boolean, org.asynchttpclient.proxy.ProxyServerSelector, boolean, boolean, boolean, int, int, int, int, int, boolean, int, int, int, int, int, int, org.asynchttpclient.channel.ChannelPool, org.asynchttpclient.netty.channel.ConnectionSemaphoreFactory, org.asynchttpclient.channel.KeepAliveStrategy, boolean, boolean, boolean, int, java.lang.String[], java.lang.String[], boolean, int, int, io.netty.handler.ssl.SslContext, org.asynchttpclient.SslEngineFactory, java.util.List, java.util.List, java.util.List, org.asynchttpclient.cookie.CookieStore, int, boolean, boolean, boolean, int, int, int, java.lang.String, int, int, int, int, int, int, int, java.util.Map, io.netty.channel.EventLoopGroup, boolean, io.netty.buffer.ByteBufAllocator, io.netty.util.Timer, java.util.concurrent.ThreadFactory, java.util.function.Consumer, java.util.function.Consumer, org.asynchttpclient.AsyncHttpClientConfig$ResponseBodyPartFactory, int, long, int, org.asynchttpclient.DefaultAsyncHttpClientConfig$1);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: aload         6
      10: iload         7
      12: iload         8
      14: iload         9
      16: iload         10
      18: iload         11
      20: aload         12
      22: iload         13
      24: iload         14
      26: iload         15
      28: iload         16
      30: iload         17
      32: iload         18
      34: iload         19
      36: iload         20
      38: iload         21
      40: iload         22
      42: iload         23
      44: iload         24
      46: iload         25
      48: iload         26
      50: iload         27
      52: aload         28
      54: aload         29
      56: aload         30
      58: iload         31
      60: iload         32
      62: iload         33
      64: iload         34
      66: aload         35
      68: aload         36
      70: iload         37
      72: iload         38
      74: iload         39
      76: aload         40
      78: aload         41
      80: aload         42
      82: aload         43
      84: aload         44
      86: aload         45
      88: iload         46
      90: iload         47
      92: iload         48
      94: iload         49
      96: iload         50
      98: iload         51
     100: iload         52
     102: aload         53
     104: iload         54
     106: iload         55
     108: iload         56
     110: iload         57
     112: iload         58
     114: iload         59
     116: iload         60
     118: aload         61
     120: aload         62
     122: iload         63
     124: aload         64
     126: aload         65
     128: aload         66
     130: aload         67
     132: aload         68
     134: aload         69
     136: iload         70
     138: lload         71
     140: iload         73
     142: invokespecial #1                  // Method "<init>":(ZIZZLjava/lang/String;Lorg/asynchttpclient/Realm;IZZZZLorg/asynchttpclient/proxy/ProxyServerSelector;ZZZIIIIIZIIIIIILorg/asynchttpclient/channel/ChannelPool;Lorg/asynchttpclient/netty/channel/ConnectionSemaphoreFactory;Lorg/asynchttpclient/channel/KeepAliveStrategy;ZZZI[Ljava/lang/String;[Ljava/lang/String;ZIILio/netty/handler/ssl/SslContext;Lorg/asynchttpclient/SslEngineFactory;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/asynchttpclient/cookie/CookieStore;IZZZIIILjava/lang/String;IIIIIIILjava/util/Map;Lio/netty/channel/EventLoopGroup;ZLio/netty/buffer/ByteBufAllocator;Lio/netty/util/Timer;Ljava/util/concurrent/ThreadFactory;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Lorg/asynchttpclient/AsyncHttpClientConfig$ResponseBodyPartFactory;IJI)V
     145: return
}
