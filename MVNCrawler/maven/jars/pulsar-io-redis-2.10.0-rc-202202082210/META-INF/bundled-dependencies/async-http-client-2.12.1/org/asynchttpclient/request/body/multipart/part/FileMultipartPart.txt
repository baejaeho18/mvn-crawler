Compiled from "FileMultipartPart.java"
public class org.asynchttpclient.request.body.multipart.part.FileMultipartPart extends org.asynchttpclient.request.body.multipart.part.FileLikeMultipartPart<org.asynchttpclient.request.body.multipart.FilePart> {
  private final long length;

  private java.nio.channels.FileChannel channel;

  private long position;

  public org.asynchttpclient.request.body.multipart.part.FileMultipartPart(org.asynchttpclient.request.body.multipart.FilePart, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/asynchttpclient/request/body/multipart/part/FileLikeMultipartPart."<init>":(Lorg/asynchttpclient/request/body/multipart/FileLikePart;[B)V
       6: aload_0
       7: lconst_0
       8: putfield      #2                  // Field position:J
      11: aload_1
      12: invokevirtual #3                  // Method org/asynchttpclient/request/body/multipart/FilePart.getFile:()Ljava/io/File;
      15: astore_3
      16: aload_3
      17: invokevirtual #4                  // Method java/io/File.exists:()Z
      20: ifne          53
      23: new           #5                  // class java/lang/IllegalArgumentException
      26: dup
      27: new           #6                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #8                  // String File part doesn\'t exist:
      36: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_3
      40: invokevirtual #10                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      43: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_3
      54: invokevirtual #13                 // Method java/io/File.canRead:()Z
      57: ifne          90
      60: new           #5                  // class java/lang/IllegalArgumentException
      63: dup
      64: new           #6                  // class java/lang/StringBuilder
      67: dup
      68: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #14                 // String File part can\'t be read:
      73: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_3
      77: invokevirtual #10                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      80: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: aload_0
      91: aload_3
      92: invokevirtual #15                 // Method java/io/File.length:()J
      95: putfield      #16                 // Field length:J
      98: return

  private java.nio.channels.FileChannel getChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field channel:Ljava/nio/channels/FileChannel;
       4: ifnonnull     33
       7: aload_0
       8: new           #18                 // class java/io/RandomAccessFile
      11: dup
      12: aload_0
      13: getfield      #19                 // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
      16: checkcast     #20                 // class org/asynchttpclient/request/body/multipart/FilePart
      19: invokevirtual #3                  // Method org/asynchttpclient/request/body/multipart/FilePart.getFile:()Ljava/io/File;
      22: ldc           #21                 // String r
      24: invokespecial #22                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      27: invokevirtual #23                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      30: putfield      #17                 // Field channel:Ljava/nio/channels/FileChannel;
      33: aload_0
      34: getfield      #17                 // Field channel:Ljava/nio/channels/FileChannel;
      37: areturn

  protected long getContentLength();
    Code:
       0: aload_0
       1: getfield      #16                 // Field length:J
       4: lreturn

  protected long transferContentTo(io.netty.buffer.ByteBuf) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #24                 // Method getChannel:()Ljava/nio/channels/FileChannel;
       5: aload_1
       6: invokevirtual #25                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
       9: invokevirtual #26                 // Method io/netty/buffer/ByteBuf.writeBytes:(Ljava/nio/channels/ScatteringByteChannel;I)I
      12: istore_2
      13: iload_2
      14: ifle          28
      17: aload_0
      18: dup
      19: getfield      #2                  // Field position:J
      22: iload_2
      23: i2l
      24: ladd
      25: putfield      #2                  // Field position:J
      28: aload_0
      29: getfield      #2                  // Field position:J
      32: aload_0
      33: getfield      #16                 // Field length:J
      36: lcmp
      37: ifeq          44
      40: iload_2
      41: ifge          68
      44: aload_0
      45: getstatic     #27                 // Field org/asynchttpclient/request/body/multipart/part/MultipartState.POST_CONTENT:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      48: putfield      #28                 // Field state:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      51: aload_0
      52: getfield      #17                 // Field channel:Ljava/nio/channels/FileChannel;
      55: invokevirtual #29                 // Method java/nio/channels/FileChannel.isOpen:()Z
      58: ifeq          68
      61: aload_0
      62: getfield      #17                 // Field channel:Ljava/nio/channels/FileChannel;
      65: invokevirtual #30                 // Method java/nio/channels/FileChannel.close:()V
      68: iload_2
      69: i2l
      70: lreturn

  protected long transferContentTo(java.nio.channels.WritableByteChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method getChannel:()Ljava/nio/channels/FileChannel;
       4: aload_0
       5: getfield      #2                  // Field position:J
       8: ldc2_w        #32                 // long 8192l
      11: aload_1
      12: invokevirtual #34                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      15: lstore_2
      16: lload_2
      17: lconst_0
      18: lcmp
      19: ifle          32
      22: aload_0
      23: dup
      24: getfield      #2                  // Field position:J
      27: lload_2
      28: ladd
      29: putfield      #2                  // Field position:J
      32: aload_0
      33: getfield      #2                  // Field position:J
      36: aload_0
      37: getfield      #16                 // Field length:J
      40: lcmp
      41: ifeq          50
      44: lload_2
      45: lconst_0
      46: lcmp
      47: ifge          77
      50: aload_0
      51: getstatic     #27                 // Field org/asynchttpclient/request/body/multipart/part/MultipartState.POST_CONTENT:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      54: putfield      #28                 // Field state:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      57: aload_0
      58: getfield      #17                 // Field channel:Ljava/nio/channels/FileChannel;
      61: invokevirtual #29                 // Method java/nio/channels/FileChannel.isOpen:()Z
      64: ifeq          82
      67: aload_0
      68: getfield      #17                 // Field channel:Ljava/nio/channels/FileChannel;
      71: invokevirtual #30                 // Method java/nio/channels/FileChannel.close:()V
      74: goto          82
      77: aload_0
      78: iconst_1
      79: putfield      #35                 // Field slowTarget:Z
      82: lload_2
      83: lreturn

  public void close();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method org/asynchttpclient/request/body/multipart/part/FileLikeMultipartPart.close:()V
       4: aload_0
       5: getfield      #17                 // Field channel:Ljava/nio/channels/FileChannel;
       8: invokestatic  #37                 // Method org/asynchttpclient/util/MiscUtils.closeSilently:(Ljava/io/Closeable;)V
      11: return
}
