Compiled from "Continue100Interceptor.java"
class org.asynchttpclient.netty.handler.intercept.Continue100Interceptor {
  private final org.asynchttpclient.netty.request.NettyRequestSender requestSender;

  org.asynchttpclient.netty.handler.intercept.Continue100Interceptor(org.asynchttpclient.netty.request.NettyRequestSender);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
       9: return

  public boolean exitAfterHandling100(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>);
    Code:
       0: aload_2
       1: iconst_1
       2: invokevirtual #3                  // Method org/asynchttpclient/netty/NettyResponseFuture.setHeadersAlreadyWrittenOnContinue:(Z)V
       5: aload_2
       6: iconst_0
       7: invokevirtual #4                  // Method org/asynchttpclient/netty/NettyResponseFuture.setDontWriteBodyBecauseExpectContinue:(Z)V
      10: aload_1
      11: new           #5                  // class org/asynchttpclient/netty/handler/intercept/Continue100Interceptor$1
      14: dup
      15: aload_0
      16: aload_2
      17: aload_1
      18: invokespecial #6                  // Method org/asynchttpclient/netty/handler/intercept/Continue100Interceptor$1."<init>":(Lorg/asynchttpclient/netty/handler/intercept/Continue100Interceptor;Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;)V
      21: invokestatic  #7                  // Method org/asynchttpclient/netty/channel/Channels.setAttribute:(Lio/netty/channel/Channel;Ljava/lang/Object;)V
      24: iconst_1
      25: ireturn

  static org.asynchttpclient.netty.request.NettyRequestSender access$000(org.asynchttpclient.netty.handler.intercept.Continue100Interceptor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
       4: areturn
}
