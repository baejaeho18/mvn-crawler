Compiled from "NettyConnectListener.java"
public final class org.asynchttpclient.netty.channel.NettyConnectListener<T> {
  private static final org.slf4j.Logger LOGGER;

  private final org.asynchttpclient.netty.request.NettyRequestSender requestSender;

  private final org.asynchttpclient.netty.NettyResponseFuture<T> future;

  private final org.asynchttpclient.netty.channel.ChannelManager channelManager;

  private final org.asynchttpclient.netty.channel.ConnectionSemaphore connectionSemaphore;

  public org.asynchttpclient.netty.channel.NettyConnectListener(org.asynchttpclient.netty.NettyResponseFuture<T>, org.asynchttpclient.netty.request.NettyRequestSender, org.asynchttpclient.netty.channel.ChannelManager, org.asynchttpclient.netty.channel.ConnectionSemaphore);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
      14: aload_0
      15: aload_3
      16: putfield      #6                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      19: aload_0
      20: aload         4
      22: putfield      #7                  // Field connectionSemaphore:Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
      25: return

  private boolean futureIsAlreadyCancelled(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
       4: invokevirtual #8                  // Method org/asynchttpclient/netty/NettyResponseFuture.isDone:()Z
       7: ifeq          16
      10: aload_1
      11: invokestatic  #9                  // Method org/asynchttpclient/netty/channel/Channels.silentlyCloseChannel:(Lio/netty/channel/Channel;)V
      14: iconst_1
      15: ireturn
      16: iconst_0
      17: ireturn

  private void writeRequest(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method futureIsAlreadyCancelled:(Lio/netty/channel/Channel;)Z
       5: ifeq          9
       8: return
       9: getstatic     #2                  // Field LOGGER:Lorg/slf4j/Logger;
      12: invokeinterface #11,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      17: ifeq          67
      20: aload_0
      21: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
      24: invokevirtual #12                 // Method org/asynchttpclient/netty/NettyResponseFuture.getNettyRequest:()Lorg/asynchttpclient/netty/request/NettyRequest;
      27: invokevirtual #13                 // Method org/asynchttpclient/netty/request/NettyRequest.getHttpRequest:()Lio/netty/handler/codec/http/HttpRequest;
      30: astore_2
      31: getstatic     #2                  // Field LOGGER:Lorg/slf4j/Logger;
      34: ldc           #14                 // String Using new Channel \'{}\' for \'{}\' to \'{}\'
      36: iconst_3
      37: anewarray     #15                 // class java/lang/Object
      40: dup
      41: iconst_0
      42: aload_1
      43: aastore
      44: dup
      45: iconst_1
      46: aload_2
      47: invokeinterface #16,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.method:()Lio/netty/handler/codec/http/HttpMethod;
      52: aastore
      53: dup
      54: iconst_2
      55: aload_2
      56: invokeinterface #17,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.uri:()Ljava/lang/String;
      61: aastore
      62: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      67: aload_1
      68: aload_0
      69: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
      72: invokestatic  #19                 // Method org/asynchttpclient/netty/channel/Channels.setAttribute:(Lio/netty/channel/Channel;Ljava/lang/Object;)V
      75: aload_0
      76: getfield      #6                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      79: aload_1
      80: invokevirtual #20                 // Method org/asynchttpclient/netty/channel/ChannelManager.registerOpenChannel:(Lio/netty/channel/Channel;)V
      83: aload_0
      84: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
      87: aload_1
      88: iconst_0
      89: invokevirtual #21                 // Method org/asynchttpclient/netty/NettyResponseFuture.attachChannel:(Lio/netty/channel/Channel;Z)V
      92: aload_0
      93: getfield      #5                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
      96: aload_0
      97: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
     100: aload_1
     101: invokevirtual #22                 // Method org/asynchttpclient/netty/request/NettyRequestSender.writeRequest:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;)V
     104: return

  public void onSuccess(io.netty.channel.Channel, java.net.InetSocketAddress);
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectionSemaphore:Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
       4: ifnull        38
       7: aload_0
       8: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
      11: invokevirtual #23                 // Method org/asynchttpclient/netty/NettyResponseFuture.takePartitionKeyLock:()Ljava/lang/Object;
      14: astore_3
      15: aload_3
      16: ifnull        38
      19: aload_1
      20: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/Channel.closeFuture:()Lio/netty/channel/ChannelFuture;
      25: aload_0
      26: aload_3
      27: invokedynamic #25,  0             // InvokeDynamic #0:operationComplete:(Lorg/asynchttpclient/netty/channel/NettyConnectListener;Ljava/lang/Object;)Lio/netty/util/concurrent/GenericFutureListener;
      32: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      37: pop
      38: aload_1
      39: invokestatic  #27                 // Method org/asynchttpclient/netty/channel/Channels.setActiveToken:(Lio/netty/channel/Channel;)V
      42: aload_0
      43: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
      46: invokevirtual #28                 // Method org/asynchttpclient/netty/NettyResponseFuture.getTimeoutsHolder:()Lorg/asynchttpclient/netty/timeout/TimeoutsHolder;
      49: astore_3
      50: aload_0
      51: aload_1
      52: invokespecial #10                 // Method futureIsAlreadyCancelled:(Lio/netty/channel/Channel;)Z
      55: ifeq          59
      58: return
      59: aload_0
      60: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
      63: invokevirtual #29                 // Method org/asynchttpclient/netty/NettyResponseFuture.getTargetRequest:()Lorg/asynchttpclient/Request;
      66: astore        4
      68: aload         4
      70: invokeinterface #30,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
      75: astore        5
      77: aload_3
      78: aload_2
      79: invokevirtual #31                 // Method org/asynchttpclient/netty/timeout/TimeoutsHolder.setResolvedRemoteAddress:(Ljava/net/InetSocketAddress;)V
      82: aload_0
      83: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
      86: invokevirtual #32                 // Method org/asynchttpclient/netty/NettyResponseFuture.getProxyServer:()Lorg/asynchttpclient/proxy/ProxyServer;
      89: astore        6
      91: aload         6
      93: ifnull        107
      96: aload         6
      98: invokevirtual #33                 // Method org/asynchttpclient/proxy/ProxyServer.getProxyType:()Lorg/asynchttpclient/proxy/ProxyType;
     101: invokevirtual #34                 // Method org/asynchttpclient/proxy/ProxyType.isSocks:()Z
     104: ifeq          230
     107: aload         5
     109: invokevirtual #35                 // Method org/asynchttpclient/uri/Uri.isSecured:()Z
     112: ifeq          230
     115: aload_0
     116: getfield      #6                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
     119: aload_1
     120: invokeinterface #36,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
     125: aload         5
     127: aload         4
     129: invokeinterface #37,  1           // InterfaceMethod org/asynchttpclient/Request.getVirtualHost:()Ljava/lang/String;
     134: aload         6
     136: ifnull        143
     139: iconst_1
     140: goto          144
     143: iconst_0
     144: invokevirtual #38                 // Method org/asynchttpclient/netty/channel/ChannelManager.addSslHandler:(Lio/netty/channel/ChannelPipeline;Lorg/asynchttpclient/uri/Uri;Ljava/lang/String;Z)Lio/netty/handler/ssl/SslHandler;
     147: astore        7
     149: goto          162
     152: astore        8
     154: aload_0
     155: aload_1
     156: aload         8
     158: invokevirtual #40                 // Method onFailure:(Lio/netty/channel/Channel;Ljava/lang/Throwable;)V
     161: return
     162: aload_0
     163: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
     166: invokevirtual #41                 // Method org/asynchttpclient/netty/NettyResponseFuture.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
     169: astore        8
     171: aload         8
     173: invokeinterface #42,  1           // InterfaceMethod org/asynchttpclient/AsyncHandler.onTlsHandshakeAttempt:()V
     178: goto          203
     181: astore        9
     183: getstatic     #2                  // Field LOGGER:Lorg/slf4j/Logger;
     186: ldc           #43                 // String onTlsHandshakeAttempt crashed
     188: aload         9
     190: invokeinterface #44,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     195: aload_0
     196: aload_1
     197: aload         9
     199: invokevirtual #40                 // Method onFailure:(Lio/netty/channel/Channel;Ljava/lang/Throwable;)V
     202: return
     203: aload         7
     205: invokevirtual #45                 // Method io/netty/handler/ssl/SslHandler.handshakeFuture:()Lio/netty/util/concurrent/Future;
     208: new           #46                 // class org/asynchttpclient/netty/channel/NettyConnectListener$1
     211: dup
     212: aload_0
     213: aload         8
     215: aload         7
     217: aload_1
     218: invokespecial #47                 // Method org/asynchttpclient/netty/channel/NettyConnectListener$1."<init>":(Lorg/asynchttpclient/netty/channel/NettyConnectListener;Lorg/asynchttpclient/AsyncHandler;Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/Channel;)V
     221: invokeinterface #48,  2           // InterfaceMethod io/netty/util/concurrent/Future.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
     226: pop
     227: goto          235
     230: aload_0
     231: aload_1
     232: invokespecial #1                  // Method writeRequest:(Lio/netty/channel/Channel;)V
     235: return
    Exception table:
       from    to  target type
         115   149   152   Class java/lang/Exception
         171   178   181   Class java/lang/Exception

  public void onFailure(io.netty.channel.Channel, java.lang.Throwable);
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method org/asynchttpclient/netty/channel/Channels.silentlyCloseChannel:(Lio/netty/channel/Channel;)V
       4: aload_0
       5: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
       8: invokevirtual #49                 // Method org/asynchttpclient/netty/NettyResponseFuture.incrementRetryAndCheck:()Z
      11: istore_3
      12: getstatic     #2                  // Field LOGGER:Lorg/slf4j/Logger;
      15: ldc           #50                 // String Trying to recover from failing to connect channel {} with a retry value of {}
      17: aload_1
      18: iload_3
      19: invokestatic  #51                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      22: invokeinterface #52,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: iload_3
      28: ifeq          70
      31: aload_2
      32: ifnull        70
      35: aload_0
      36: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
      39: invokevirtual #53                 // Method org/asynchttpclient/netty/NettyResponseFuture.getChannelState:()Lorg/asynchttpclient/netty/channel/ChannelState;
      42: getstatic     #54                 // Field org/asynchttpclient/netty/channel/ChannelState.NEW:Lorg/asynchttpclient/netty/channel/ChannelState;
      45: if_acmpne     55
      48: aload_2
      49: invokestatic  #55                 // Method org/asynchttpclient/netty/future/StackTraceInspector.recoverOnNettyDisconnectException:(Ljava/lang/Throwable;)Z
      52: ifeq          70
      55: aload_0
      56: getfield      #5                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
      59: aload_0
      60: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
      63: invokevirtual #56                 // Method org/asynchttpclient/netty/request/NettyRequestSender.retry:(Lorg/asynchttpclient/netty/NettyResponseFuture;)Z
      66: ifeq          70
      69: return
      70: getstatic     #2                  // Field LOGGER:Lorg/slf4j/Logger;
      73: ldc           #57                 // String Failed to recover from connect exception: {} with channel {}
      75: aload_2
      76: aload_1
      77: invokeinterface #52,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      82: aload_2
      83: invokevirtual #58                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      86: ifnull        96
      89: aload_2
      90: invokevirtual #58                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      93: goto          106
      96: aload_0
      97: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
     100: invokevirtual #59                 // Method org/asynchttpclient/netty/NettyResponseFuture.getUri:()Lorg/asynchttpclient/uri/Uri;
     103: invokevirtual #60                 // Method org/asynchttpclient/uri/Uri.getBaseUrl:()Ljava/lang/String;
     106: astore        4
     108: new           #61                 // class java/net/ConnectException
     111: dup
     112: aload         4
     114: invokespecial #62                 // Method java/net/ConnectException."<init>":(Ljava/lang/String;)V
     117: astore        5
     119: aload         5
     121: aload_2
     122: invokevirtual #63                 // Method java/net/ConnectException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     125: pop
     126: aload_0
     127: getfield      #4                  // Field future:Lorg/asynchttpclient/netty/NettyResponseFuture;
     130: aload         5
     132: invokevirtual #64                 // Method org/asynchttpclient/netty/NettyResponseFuture.abort:(Ljava/lang/Throwable;)V
     135: return

  private void lambda$onSuccess$0(java.lang.Object, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectionSemaphore:Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
       4: aload_1
       5: invokeinterface #65,  2           // InterfaceMethod org/asynchttpclient/netty/channel/ConnectionSemaphore.releaseChannelLock:(Ljava/lang/Object;)V
      10: return

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field LOGGER:Lorg/slf4j/Logger;
       3: areturn

  static void access$100(org.asynchttpclient.netty.channel.NettyConnectListener, io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method writeRequest:(Lio/netty/channel/Channel;)V
       5: return

  static {};
    Code:
       0: ldc           #66                 // class org/asynchttpclient/netty/channel/NettyConnectListener
       2: invokestatic  #67                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
