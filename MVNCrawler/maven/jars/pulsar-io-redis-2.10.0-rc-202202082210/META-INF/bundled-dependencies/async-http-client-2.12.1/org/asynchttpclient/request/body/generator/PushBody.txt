Compiled from "PushBody.java"
public final class org.asynchttpclient.request.body.generator.PushBody implements org.asynchttpclient.request.body.Body {
  private final java.util.Queue<org.asynchttpclient.request.body.generator.BodyChunk> queue;

  private org.asynchttpclient.request.body.Body$BodyState state;

  public org.asynchttpclient.request.body.generator.PushBody(java.util.Queue<org.asynchttpclient.request.body.generator.BodyChunk>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/asynchttpclient/request/body/Body$BodyState.CONTINUE:Lorg/asynchttpclient/request/body/Body$BodyState;
       8: putfield      #3                  // Field state:Lorg/asynchttpclient/request/body/Body$BodyState;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field queue:Ljava/util/Queue;
      16: return

  public long getContentLength();
    Code:
       0: ldc2_w        #5                  // long -1l
       3: lreturn

  public org.asynchttpclient.request.body.Body$BodyState transferTo(io.netty.buffer.ByteBuf);
    Code:
       0: getstatic     #7                  // Field org/asynchttpclient/request/body/generator/PushBody$1.$SwitchMap$org$asynchttpclient$request$body$Body$BodyState:[I
       3: aload_0
       4: getfield      #3                  // Field state:Lorg/asynchttpclient/request/body/Body$BodyState;
       7: invokevirtual #8                  // Method org/asynchttpclient/request/body/Body$BodyState.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 36
                     2: 42
               default: 46
          }
      36: aload_0
      37: aload_1
      38: invokespecial #9                  // Method readNextChunk:(Lio/netty/buffer/ByteBuf;)Lorg/asynchttpclient/request/body/Body$BodyState;
      41: areturn
      42: getstatic     #10                 // Field org/asynchttpclient/request/body/Body$BodyState.STOP:Lorg/asynchttpclient/request/body/Body$BodyState;
      45: areturn
      46: new           #11                 // class java/lang/IllegalStateException
      49: dup
      50: ldc           #12                 // String Illegal process state.
      52: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      55: athrow

  private org.asynchttpclient.request.body.Body$BodyState readNextChunk(io.netty.buffer.ByteBuf);
    Code:
       0: getstatic     #14                 // Field org/asynchttpclient/request/body/Body$BodyState.SUSPEND:Lorg/asynchttpclient/request/body/Body$BodyState;
       3: astore_2
       4: aload_1
       5: invokevirtual #15                 // Method io/netty/buffer/ByteBuf.isWritable:()Z
       8: ifeq          83
      11: aload_0
      12: getfield      #3                  // Field state:Lorg/asynchttpclient/request/body/Body$BodyState;
      15: getstatic     #10                 // Field org/asynchttpclient/request/body/Body$BodyState.STOP:Lorg/asynchttpclient/request/body/Body$BodyState;
      18: if_acmpeq     83
      21: aload_0
      22: getfield      #4                  // Field queue:Ljava/util/Queue;
      25: invokeinterface #16,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      30: checkcast     #17                 // class org/asynchttpclient/request/body/generator/BodyChunk
      33: astore_3
      34: aload_3
      35: ifnonnull     40
      38: aload_2
      39: areturn
      40: aload_3
      41: getfield      #18                 // Field org/asynchttpclient/request/body/generator/BodyChunk.buffer:Lio/netty/buffer/ByteBuf;
      44: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      47: ifne          70
      50: aload_3
      51: getfield      #20                 // Field org/asynchttpclient/request/body/generator/BodyChunk.last:Z
      54: ifne          70
      57: aload_0
      58: getfield      #4                  // Field queue:Ljava/util/Queue;
      61: invokeinterface #21,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
      66: pop
      67: goto          80
      70: getstatic     #2                  // Field org/asynchttpclient/request/body/Body$BodyState.CONTINUE:Lorg/asynchttpclient/request/body/Body$BodyState;
      73: astore_2
      74: aload_0
      75: aload_1
      76: aload_3
      77: invokespecial #22                 // Method readChunk:(Lio/netty/buffer/ByteBuf;Lorg/asynchttpclient/request/body/generator/BodyChunk;)V
      80: goto          4
      83: aload_2
      84: areturn

  private void readChunk(io.netty.buffer.ByteBuf, org.asynchttpclient.request.body.generator.BodyChunk);
    Code:
       0: aload_1
       1: aload_2
       2: getfield      #18                 // Field org/asynchttpclient/request/body/generator/BodyChunk.buffer:Lio/netty/buffer/ByteBuf;
       5: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
       8: pop
       9: aload_2
      10: getfield      #18                 // Field org/asynchttpclient/request/body/generator/BodyChunk.buffer:Lio/netty/buffer/ByteBuf;
      13: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      16: ifne          43
      19: aload_2
      20: getfield      #20                 // Field org/asynchttpclient/request/body/generator/BodyChunk.last:Z
      23: ifeq          33
      26: aload_0
      27: getstatic     #10                 // Field org/asynchttpclient/request/body/Body$BodyState.STOP:Lorg/asynchttpclient/request/body/Body$BodyState;
      30: putfield      #3                  // Field state:Lorg/asynchttpclient/request/body/Body$BodyState;
      33: aload_0
      34: getfield      #4                  // Field queue:Ljava/util/Queue;
      37: invokeinterface #21,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
      42: pop
      43: return

  public void close();
    Code:
       0: return
}
