Compiled from "MultipartPart.java"
public abstract class org.asynchttpclient.request.body.multipart.part.MultipartPart<T extends org.asynchttpclient.request.body.multipart.PartBase> implements java.io.Closeable {
  static final byte QUOTE_BYTE;

  protected static final byte[] CRLF_BYTES;

  protected static final byte[] EXTRA_BYTES;

  private static final byte[] CONTENT_DISPOSITION_BYTES;

  private static final byte[] FORM_DATA_DISPOSITION_TYPE_BYTES;

  private static final byte[] NAME_BYTES;

  private static final byte[] CONTENT_TYPE_BYTES;

  private static final byte[] CHARSET_BYTES;

  private static final byte[] CONTENT_TRANSFER_ENCODING_BYTES;

  private static final byte[] HEADER_NAME_VALUE_SEPARATOR_BYTES;

  private static final byte[] CONTENT_ID_BYTES;

  protected final T part;

  protected final byte[] boundary;

  private final int preContentLength;

  private final int postContentLength;

  protected org.asynchttpclient.request.body.multipart.part.MultipartState state;

  boolean slowTarget;

  private io.netty.buffer.ByteBuf preContentBuffer;

  private io.netty.buffer.ByteBuf postContentBuffer;

  org.asynchttpclient.request.body.multipart.part.MultipartPart(T, byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field boundary:[B
      14: aload_0
      15: aload_0
      16: invokevirtual #4                  // Method computePreContentLength:()I
      19: putfield      #5                  // Field preContentLength:I
      22: aload_0
      23: aload_0
      24: invokevirtual #6                  // Method computePostContentLength:()I
      27: putfield      #7                  // Field postContentLength:I
      30: aload_0
      31: getstatic     #8                  // Field org/asynchttpclient/request/body/multipart/part/MultipartState.PRE_CONTENT:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      34: putfield      #9                  // Field state:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      37: return

  public long length();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getContentLength:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifge          13
      11: lload_1
      12: lreturn
      13: aload_0
      14: getfield      #5                  // Field preContentLength:I
      17: aload_0
      18: getfield      #7                  // Field postContentLength:I
      21: iadd
      22: i2l
      23: aload_0
      24: invokevirtual #10                 // Method getContentLength:()J
      27: ladd
      28: lreturn

  public org.asynchttpclient.request.body.multipart.part.MultipartState getState();
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
       4: areturn

  public boolean isTargetSlow();
    Code:
       0: aload_0
       1: getfield      #11                 // Field slowTarget:Z
       4: ireturn

  public long transferTo(io.netty.buffer.ByteBuf) throws java.io.IOException;
    Code:
       0: getstatic     #12                 // Field org/asynchttpclient/request/body/multipart/part/MultipartPart$1.$SwitchMap$org$asynchttpclient$request$body$multipart$part$MultipartState:[I
       3: aload_0
       4: getfield      #9                  // Field state:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
       7: invokevirtual #13                 // Method org/asynchttpclient/request/body/multipart/part/MultipartState.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 4
                     1: 40
                     2: 42
                     3: 55
                     4: 61
               default: 74
          }
      40: lconst_0
      41: lreturn
      42: aload_0
      43: aload_0
      44: invokespecial #14                 // Method lazyLoadPreContentBuffer:()Lio/netty/buffer/ByteBuf;
      47: aload_1
      48: getstatic     #15                 // Field org/asynchttpclient/request/body/multipart/part/MultipartState.CONTENT:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      51: invokevirtual #16                 // Method transfer:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lorg/asynchttpclient/request/body/multipart/part/MultipartState;)J
      54: lreturn
      55: aload_0
      56: aload_1
      57: invokevirtual #17                 // Method transferContentTo:(Lio/netty/buffer/ByteBuf;)J
      60: lreturn
      61: aload_0
      62: aload_0
      63: invokespecial #18                 // Method lazyLoadPostContentBuffer:()Lio/netty/buffer/ByteBuf;
      66: aload_1
      67: getstatic     #19                 // Field org/asynchttpclient/request/body/multipart/part/MultipartState.DONE:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      70: invokevirtual #16                 // Method transfer:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lorg/asynchttpclient/request/body/multipart/part/MultipartState;)J
      73: lreturn
      74: new           #20                 // class java/lang/IllegalStateException
      77: dup
      78: new           #21                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #23                 // String Unknown state
      87: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: getfield      #9                  // Field state:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      94: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     103: athrow

  public long transferTo(java.nio.channels.WritableByteChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #11                 // Field slowTarget:Z
       5: getstatic     #12                 // Field org/asynchttpclient/request/body/multipart/part/MultipartPart$1.$SwitchMap$org$asynchttpclient$request$body$multipart$part$MultipartState:[I
       8: aload_0
       9: getfield      #9                  // Field state:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      12: invokevirtual #13                 // Method org/asynchttpclient/request/body/multipart/part/MultipartState.ordinal:()I
      15: iaload
      16: tableswitch   { // 1 to 4
                     1: 48
                     2: 50
                     3: 63
                     4: 69
               default: 82
          }
      48: lconst_0
      49: lreturn
      50: aload_0
      51: aload_0
      52: invokespecial #14                 // Method lazyLoadPreContentBuffer:()Lio/netty/buffer/ByteBuf;
      55: aload_1
      56: getstatic     #15                 // Field org/asynchttpclient/request/body/multipart/part/MultipartState.CONTENT:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      59: invokevirtual #28                 // Method transfer:(Lio/netty/buffer/ByteBuf;Ljava/nio/channels/WritableByteChannel;Lorg/asynchttpclient/request/body/multipart/part/MultipartState;)J
      62: lreturn
      63: aload_0
      64: aload_1
      65: invokevirtual #29                 // Method transferContentTo:(Ljava/nio/channels/WritableByteChannel;)J
      68: lreturn
      69: aload_0
      70: aload_0
      71: invokespecial #18                 // Method lazyLoadPostContentBuffer:()Lio/netty/buffer/ByteBuf;
      74: aload_1
      75: getstatic     #19                 // Field org/asynchttpclient/request/body/multipart/part/MultipartState.DONE:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      78: invokevirtual #28                 // Method transfer:(Lio/netty/buffer/ByteBuf;Ljava/nio/channels/WritableByteChannel;Lorg/asynchttpclient/request/body/multipart/part/MultipartState;)J
      81: lreturn
      82: new           #20                 // class java/lang/IllegalStateException
      85: dup
      86: new           #21                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #23                 // String Unknown state
      95: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #9                  // Field state:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
     102: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     111: athrow

  private io.netty.buffer.ByteBuf lazyLoadPreContentBuffer();
    Code:
       0: aload_0
       1: getfield      #30                 // Field preContentBuffer:Lio/netty/buffer/ByteBuf;
       4: ifnonnull     19
       7: aload_0
       8: aload_0
       9: aload_0
      10: getfield      #5                  // Field preContentLength:I
      13: invokevirtual #31                 // Method computePreContentBytes:(I)Lio/netty/buffer/ByteBuf;
      16: putfield      #30                 // Field preContentBuffer:Lio/netty/buffer/ByteBuf;
      19: aload_0
      20: getfield      #30                 // Field preContentBuffer:Lio/netty/buffer/ByteBuf;
      23: areturn

  private io.netty.buffer.ByteBuf lazyLoadPostContentBuffer();
    Code:
       0: aload_0
       1: getfield      #32                 // Field postContentBuffer:Lio/netty/buffer/ByteBuf;
       4: ifnonnull     19
       7: aload_0
       8: aload_0
       9: aload_0
      10: getfield      #7                  // Field postContentLength:I
      13: invokevirtual #33                 // Method computePostContentBytes:(I)Lio/netty/buffer/ByteBuf;
      16: putfield      #32                 // Field postContentBuffer:Lio/netty/buffer/ByteBuf;
      19: aload_0
      20: getfield      #32                 // Field postContentBuffer:Lio/netty/buffer/ByteBuf;
      23: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #30                 // Field preContentBuffer:Lio/netty/buffer/ByteBuf;
       4: ifnull        15
       7: aload_0
       8: getfield      #30                 // Field preContentBuffer:Lio/netty/buffer/ByteBuf;
      11: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.release:()Z
      14: pop
      15: aload_0
      16: getfield      #32                 // Field postContentBuffer:Lio/netty/buffer/ByteBuf;
      19: ifnull        30
      22: aload_0
      23: getfield      #32                 // Field postContentBuffer:Lio/netty/buffer/ByteBuf;
      26: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.release:()Z
      29: pop
      30: return

  protected abstract long getContentLength();

  protected abstract long transferContentTo(io.netty.buffer.ByteBuf) throws java.io.IOException;

  protected abstract long transferContentTo(java.nio.channels.WritableByteChannel) throws java.io.IOException;

  protected long transfer(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, org.asynchttpclient.request.body.multipart.part.MultipartState);
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: istore        4
       6: aload_2
       7: invokevirtual #36                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
      10: istore        5
      12: iload         4
      14: iload         5
      16: if_icmpgt     34
      19: aload_2
      20: aload_1
      21: invokevirtual #37                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      24: pop
      25: aload_0
      26: aload_3
      27: putfield      #9                  // Field state:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
      30: iload         4
      32: i2l
      33: lreturn
      34: aload_2
      35: aload_1
      36: iload         5
      38: invokevirtual #38                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
      41: pop
      42: iload         5
      44: i2l
      45: lreturn

  protected long transfer(io.netty.buffer.ByteBuf, java.nio.channels.WritableByteChannel, org.asynchttpclient.request.body.multipart.part.MultipartState) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_2
       4: instanceof    #39                 // class java/nio/channels/GatheringByteChannel
       7: ifeq          27
      10: aload_1
      11: aload_2
      12: checkcast     #39                 // class java/nio/channels/GatheringByteChannel
      15: aload_1
      16: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      19: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.readBytes:(Ljava/nio/channels/GatheringByteChannel;I)I
      22: istore        4
      24: goto          107
      27: aload_1
      28: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.nioBuffers:()[Ljava/nio/ByteBuffer;
      31: astore        5
      33: aload         5
      35: arraylength
      36: istore        6
      38: iconst_0
      39: istore        7
      41: iload         7
      43: iload         6
      45: if_icmpge     95
      48: aload         5
      50: iload         7
      52: aaload
      53: astore        8
      55: aload         8
      57: invokevirtual #42                 // Method java/nio/ByteBuffer.remaining:()I
      60: istore        9
      62: aload_2
      63: aload         8
      65: invokeinterface #43,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      70: istore        10
      72: iload         4
      74: iload         10
      76: iadd
      77: istore        4
      79: iload         10
      81: iload         9
      83: if_icmpeq     89
      86: goto          95
      89: iinc          7, 1
      92: goto          41
      95: aload_1
      96: aload_1
      97: invokevirtual #44                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     100: iload         4
     102: iadd
     103: invokevirtual #45                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
     106: pop
     107: aload_1
     108: invokevirtual #46                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
     111: ifeq          122
     114: aload_0
     115: iconst_1
     116: putfield      #11                 // Field slowTarget:Z
     119: goto          127
     122: aload_0
     123: aload_3
     124: putfield      #9                  // Field state:Lorg/asynchttpclient/request/body/multipart/part/MultipartState;
     127: iload         4
     129: i2l
     130: lreturn

  protected int computePreContentLength();
    Code:
       0: new           #47                 // class org/asynchttpclient/request/body/multipart/part/PartVisitor$CounterPartVisitor
       3: dup
       4: invokespecial #48                 // Method org/asynchttpclient/request/body/multipart/part/PartVisitor$CounterPartVisitor."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #49                 // Method visitPreContent:(Lorg/asynchttpclient/request/body/multipart/part/PartVisitor;)V
      13: aload_1
      14: invokevirtual #50                 // Method org/asynchttpclient/request/body/multipart/part/PartVisitor$CounterPartVisitor.getCount:()I
      17: ireturn

  protected io.netty.buffer.ByteBuf computePreContentBytes(int);
    Code:
       0: getstatic     #51                 // Field io/netty/buffer/ByteBufAllocator.DEFAULT:Lio/netty/buffer/ByteBufAllocator;
       3: iload_1
       4: invokeinterface #52,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
       9: astore_2
      10: new           #53                 // class org/asynchttpclient/request/body/multipart/part/PartVisitor$ByteBufVisitor
      13: dup
      14: aload_2
      15: invokespecial #54                 // Method org/asynchttpclient/request/body/multipart/part/PartVisitor$ByteBufVisitor."<init>":(Lio/netty/buffer/ByteBuf;)V
      18: astore_3
      19: aload_0
      20: aload_3
      21: invokevirtual #49                 // Method visitPreContent:(Lorg/asynchttpclient/request/body/multipart/part/PartVisitor;)V
      24: aload_2
      25: areturn

  protected int computePostContentLength();
    Code:
       0: new           #47                 // class org/asynchttpclient/request/body/multipart/part/PartVisitor$CounterPartVisitor
       3: dup
       4: invokespecial #48                 // Method org/asynchttpclient/request/body/multipart/part/PartVisitor$CounterPartVisitor."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #55                 // Method visitPostContent:(Lorg/asynchttpclient/request/body/multipart/part/PartVisitor;)V
      13: aload_1
      14: invokevirtual #50                 // Method org/asynchttpclient/request/body/multipart/part/PartVisitor$CounterPartVisitor.getCount:()I
      17: ireturn

  protected io.netty.buffer.ByteBuf computePostContentBytes(int);
    Code:
       0: getstatic     #51                 // Field io/netty/buffer/ByteBufAllocator.DEFAULT:Lio/netty/buffer/ByteBufAllocator;
       3: iload_1
       4: invokeinterface #52,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
       9: astore_2
      10: new           #53                 // class org/asynchttpclient/request/body/multipart/part/PartVisitor$ByteBufVisitor
      13: dup
      14: aload_2
      15: invokespecial #54                 // Method org/asynchttpclient/request/body/multipart/part/PartVisitor$ByteBufVisitor."<init>":(Lio/netty/buffer/ByteBuf;)V
      18: astore_3
      19: aload_0
      20: aload_3
      21: invokevirtual #55                 // Method visitPostContent:(Lorg/asynchttpclient/request/body/multipart/part/PartVisitor;)V
      24: aload_2
      25: areturn

  protected void visitStart(org.asynchttpclient.request.body.multipart.part.PartVisitor);
    Code:
       0: aload_1
       1: getstatic     #56                 // Field EXTRA_BYTES:[B
       4: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
       9: aload_1
      10: aload_0
      11: getfield      #3                  // Field boundary:[B
      14: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      19: return

  protected void visitDispositionHeader(org.asynchttpclient.request.body.multipart.part.PartVisitor);
    Code:
       0: aload_1
       1: getstatic     #58                 // Field CRLF_BYTES:[B
       4: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
       9: aload_1
      10: getstatic     #59                 // Field CONTENT_DISPOSITION_BYTES:[B
      13: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      18: aload_1
      19: aload_0
      20: getfield      #2                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
      23: invokevirtual #60                 // Method org/asynchttpclient/request/body/multipart/PartBase.getDispositionType:()Ljava/lang/String;
      26: ifnull        45
      29: aload_0
      30: getfield      #2                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
      33: invokevirtual #60                 // Method org/asynchttpclient/request/body/multipart/PartBase.getDispositionType:()Ljava/lang/String;
      36: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      39: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      42: goto          48
      45: getstatic     #63                 // Field FORM_DATA_DISPOSITION_TYPE_BYTES:[B
      48: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      53: aload_0
      54: getfield      #2                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
      57: invokevirtual #64                 // Method org/asynchttpclient/request/body/multipart/PartBase.getName:()Ljava/lang/String;
      60: ifnull        107
      63: aload_1
      64: getstatic     #65                 // Field NAME_BYTES:[B
      67: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      72: aload_1
      73: bipush        34
      75: invokeinterface #67,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withByte:(B)V
      80: aload_1
      81: aload_0
      82: getfield      #2                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
      85: invokevirtual #64                 // Method org/asynchttpclient/request/body/multipart/PartBase.getName:()Ljava/lang/String;
      88: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      91: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      94: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      99: aload_1
     100: bipush        34
     102: invokeinterface #67,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withByte:(B)V
     107: return

  protected void visitContentTypeHeader(org.asynchttpclient.request.body.multipart.part.PartVisitor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
       4: invokevirtual #68                 // Method org/asynchttpclient/request/body/multipart/PartBase.getContentType:()Ljava/lang/String;
       7: astore_2
       8: aload_2
       9: ifnull        86
      12: aload_1
      13: getstatic     #58                 // Field CRLF_BYTES:[B
      16: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      21: aload_1
      22: getstatic     #69                 // Field CONTENT_TYPE_BYTES:[B
      25: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      30: aload_1
      31: aload_2
      32: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      35: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      38: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      43: aload_0
      44: getfield      #2                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
      47: invokevirtual #70                 // Method org/asynchttpclient/request/body/multipart/PartBase.getCharset:()Ljava/nio/charset/Charset;
      50: astore_3
      51: aload_3
      52: ifnull        86
      55: aload_1
      56: getstatic     #71                 // Field CHARSET_BYTES:[B
      59: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      64: aload_1
      65: aload_0
      66: getfield      #2                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
      69: invokevirtual #70                 // Method org/asynchttpclient/request/body/multipart/PartBase.getCharset:()Ljava/nio/charset/Charset;
      72: invokevirtual #72                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      75: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      78: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      81: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      86: return

  protected void visitTransferEncodingHeader(org.asynchttpclient.request.body.multipart.part.PartVisitor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
       4: invokevirtual #73                 // Method org/asynchttpclient/request/body/multipart/PartBase.getTransferEncoding:()Ljava/lang/String;
       7: astore_2
       8: aload_2
       9: ifnull        43
      12: aload_1
      13: getstatic     #58                 // Field CRLF_BYTES:[B
      16: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      21: aload_1
      22: getstatic     #74                 // Field CONTENT_TRANSFER_ENCODING_BYTES:[B
      25: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      30: aload_1
      31: aload_2
      32: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      35: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      38: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      43: return

  protected void visitContentIdHeader(org.asynchttpclient.request.body.multipart.part.PartVisitor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
       4: invokevirtual #75                 // Method org/asynchttpclient/request/body/multipart/PartBase.getContentId:()Ljava/lang/String;
       7: astore_2
       8: aload_2
       9: ifnull        43
      12: aload_1
      13: getstatic     #58                 // Field CRLF_BYTES:[B
      16: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      21: aload_1
      22: getstatic     #76                 // Field CONTENT_ID_BYTES:[B
      25: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      30: aload_1
      31: aload_2
      32: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      35: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      38: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      43: return

  protected void visitCustomHeaders(org.asynchttpclient.request.body.multipart.part.PartVisitor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
       4: invokevirtual #77                 // Method org/asynchttpclient/request/body/multipart/PartBase.getCustomHeaders:()Ljava/util/List;
       7: invokestatic  #78                 // Method org/asynchttpclient/util/MiscUtils.isNonEmpty:(Ljava/util/Collection;)Z
      10: ifeq          98
      13: aload_0
      14: getfield      #2                  // Field part:Lorg/asynchttpclient/request/body/multipart/PartBase;
      17: invokevirtual #77                 // Method org/asynchttpclient/request/body/multipart/PartBase.getCustomHeaders:()Ljava/util/List;
      20: invokeinterface #79,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore_2
      26: aload_2
      27: invokeinterface #80,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          98
      35: aload_2
      36: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #82                 // class org/asynchttpclient/Param
      44: astore_3
      45: aload_1
      46: getstatic     #58                 // Field CRLF_BYTES:[B
      49: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      54: aload_1
      55: aload_3
      56: invokevirtual #83                 // Method org/asynchttpclient/Param.getName:()Ljava/lang/String;
      59: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      62: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      65: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      70: aload_1
      71: getstatic     #84                 // Field HEADER_NAME_VALUE_SEPARATOR_BYTES:[B
      74: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      79: aload_1
      80: aload_3
      81: invokevirtual #85                 // Method org/asynchttpclient/Param.getValue:()Ljava/lang/String;
      84: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      87: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      90: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      95: goto          26
      98: return

  protected void visitEndOfHeaders(org.asynchttpclient.request.body.multipart.part.PartVisitor);
    Code:
       0: aload_1
       1: getstatic     #58                 // Field CRLF_BYTES:[B
       4: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
       9: aload_1
      10: getstatic     #58                 // Field CRLF_BYTES:[B
      13: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
      18: return

  protected void visitPreContent(org.asynchttpclient.request.body.multipart.part.PartVisitor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #86                 // Method visitStart:(Lorg/asynchttpclient/request/body/multipart/part/PartVisitor;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #87                 // Method visitDispositionHeader:(Lorg/asynchttpclient/request/body/multipart/part/PartVisitor;)V
      10: aload_0
      11: aload_1
      12: invokevirtual #88                 // Method visitContentTypeHeader:(Lorg/asynchttpclient/request/body/multipart/part/PartVisitor;)V
      15: aload_0
      16: aload_1
      17: invokevirtual #89                 // Method visitTransferEncodingHeader:(Lorg/asynchttpclient/request/body/multipart/part/PartVisitor;)V
      20: aload_0
      21: aload_1
      22: invokevirtual #90                 // Method visitContentIdHeader:(Lorg/asynchttpclient/request/body/multipart/part/PartVisitor;)V
      25: aload_0
      26: aload_1
      27: invokevirtual #91                 // Method visitCustomHeaders:(Lorg/asynchttpclient/request/body/multipart/part/PartVisitor;)V
      30: aload_0
      31: aload_1
      32: invokevirtual #92                 // Method visitEndOfHeaders:(Lorg/asynchttpclient/request/body/multipart/part/PartVisitor;)V
      35: return

  protected void visitPostContent(org.asynchttpclient.request.body.multipart.part.PartVisitor);
    Code:
       0: aload_1
       1: getstatic     #58                 // Field CRLF_BYTES:[B
       4: invokeinterface #57,  2           // InterfaceMethod org/asynchttpclient/request/body/multipart/part/PartVisitor.withBytes:([B)V
       9: return

  static {};
    Code:
       0: ldc           #93                 // String \r\n
       2: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
       5: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: putstatic     #58                 // Field CRLF_BYTES:[B
      11: ldc           #94                 // String --
      13: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      16: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      19: putstatic     #56                 // Field EXTRA_BYTES:[B
      22: ldc           #95                 // String Content-Disposition:
      24: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      27: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      30: putstatic     #59                 // Field CONTENT_DISPOSITION_BYTES:[B
      33: ldc           #96                 // String form-data
      35: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      38: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      41: putstatic     #63                 // Field FORM_DATA_DISPOSITION_TYPE_BYTES:[B
      44: ldc           #97                 // String ; name=
      46: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      49: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      52: putstatic     #65                 // Field NAME_BYTES:[B
      55: ldc           #98                 // String Content-Type:
      57: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      60: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      63: putstatic     #69                 // Field CONTENT_TYPE_BYTES:[B
      66: ldc           #99                 // String ; charset=
      68: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      71: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      74: putstatic     #71                 // Field CHARSET_BYTES:[B
      77: ldc           #100                // String Content-Transfer-Encoding:
      79: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      82: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      85: putstatic     #74                 // Field CONTENT_TRANSFER_ENCODING_BYTES:[B
      88: ldc           #101                // String :
      90: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      93: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      96: putstatic     #84                 // Field HEADER_NAME_VALUE_SEPARATOR_BYTES:[B
      99: ldc           #102                // String Content-ID:
     101: getstatic     #61                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
     104: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     107: putstatic     #76                 // Field CONTENT_ID_BYTES:[B
     110: return
}
