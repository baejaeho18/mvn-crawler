Compiled from "DefaultAsyncHttpClient.java"
public class org.asynchttpclient.DefaultAsyncHttpClient implements org.asynchttpclient.AsyncHttpClient {
  private static final org.slf4j.Logger LOGGER;

  private final org.asynchttpclient.AsyncHttpClientConfig config;

  private final boolean noRequestFilters;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private final org.asynchttpclient.netty.channel.ChannelManager channelManager;

  private final org.asynchttpclient.netty.request.NettyRequestSender requestSender;

  private final boolean allowStopNettyTimer;

  private final io.netty.util.Timer nettyTimer;

  private org.asynchttpclient.SignatureCalculator signatureCalculator;

  public org.asynchttpclient.DefaultAsyncHttpClient();
    Code:
       0: aload_0
       1: new           #1                  // class org/asynchttpclient/DefaultAsyncHttpClientConfig$Builder
       4: dup
       5: invokespecial #2                  // Method org/asynchttpclient/DefaultAsyncHttpClientConfig$Builder."<init>":()V
       8: invokevirtual #3                  // Method org/asynchttpclient/DefaultAsyncHttpClientConfig$Builder.build:()Lorg/asynchttpclient/DefaultAsyncHttpClientConfig;
      11: invokespecial #4                  // Method "<init>":(Lorg/asynchttpclient/AsyncHttpClientConfig;)V
      14: return

  public org.asynchttpclient.DefaultAsyncHttpClient(org.asynchttpclient.AsyncHttpClientConfig);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #8                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: aload_1
      18: putfield      #9                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      21: aload_0
      22: aload_1
      23: invokeinterface #10,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getRequestFilters:()Ljava/util/List;
      28: invokeinterface #11,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      33: putfield      #12                 // Field noRequestFilters:Z
      36: aload_0
      37: aload_1
      38: invokeinterface #13,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getNettyTimer:()Lio/netty/util/Timer;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: putfield      #14                 // Field allowStopNettyTimer:Z
      54: aload_0
      55: aload_0
      56: getfield      #14                 // Field allowStopNettyTimer:Z
      59: ifeq          70
      62: aload_0
      63: aload_1
      64: invokespecial #15                 // Method newNettyTimer:(Lorg/asynchttpclient/AsyncHttpClientConfig;)Lio/netty/util/Timer;
      67: goto          76
      70: aload_1
      71: invokeinterface #13,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getNettyTimer:()Lio/netty/util/Timer;
      76: putfield      #16                 // Field nettyTimer:Lio/netty/util/Timer;
      79: aload_0
      80: new           #17                 // class org/asynchttpclient/netty/channel/ChannelManager
      83: dup
      84: aload_1
      85: aload_0
      86: getfield      #16                 // Field nettyTimer:Lio/netty/util/Timer;
      89: invokespecial #18                 // Method org/asynchttpclient/netty/channel/ChannelManager."<init>":(Lorg/asynchttpclient/AsyncHttpClientConfig;Lio/netty/util/Timer;)V
      92: putfield      #19                 // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      95: aload_0
      96: new           #20                 // class org/asynchttpclient/netty/request/NettyRequestSender
      99: dup
     100: aload_1
     101: aload_0
     102: getfield      #19                 // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
     105: aload_0
     106: getfield      #16                 // Field nettyTimer:Lio/netty/util/Timer;
     109: new           #21                 // class org/asynchttpclient/AsyncHttpClientState
     112: dup
     113: aload_0
     114: getfield      #8                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
     117: invokespecial #22                 // Method org/asynchttpclient/AsyncHttpClientState."<init>":(Ljava/util/concurrent/atomic/AtomicBoolean;)V
     120: invokespecial #23                 // Method org/asynchttpclient/netty/request/NettyRequestSender."<init>":(Lorg/asynchttpclient/AsyncHttpClientConfig;Lorg/asynchttpclient/netty/channel/ChannelManager;Lio/netty/util/Timer;Lorg/asynchttpclient/AsyncHttpClientState;)V
     123: putfield      #24                 // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
     126: aload_0
     127: getfield      #19                 // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
     130: aload_0
     131: getfield      #24                 // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
     134: invokevirtual #25                 // Method org/asynchttpclient/netty/channel/ChannelManager.configureBootstraps:(Lorg/asynchttpclient/netty/request/NettyRequestSender;)V
     137: aload_1
     138: invokeinterface #26,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getCookieStore:()Lorg/asynchttpclient/cookie/CookieStore;
     143: astore_2
     144: aload_2
     145: ifnull        207
     148: aload_1
     149: invokeinterface #26,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getCookieStore:()Lorg/asynchttpclient/cookie/CookieStore;
     154: invokeinterface #27,  1           // InterfaceMethod org/asynchttpclient/cookie/CookieStore.incrementAndGet:()I
     159: istore_3
     160: aload_0
     161: getfield      #14                 // Field allowStopNettyTimer:Z
     164: ifne          172
     167: iload_3
     168: iconst_1
     169: if_icmpne     207
     172: aload_0
     173: getfield      #16                 // Field nettyTimer:Lio/netty/util/Timer;
     176: new           #28                 // class org/asynchttpclient/cookie/CookieEvictionTask
     179: dup
     180: aload_1
     181: invokeinterface #29,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.expiredCookieEvictionDelay:()I
     186: i2l
     187: aload_2
     188: invokespecial #30                 // Method org/asynchttpclient/cookie/CookieEvictionTask."<init>":(JLorg/asynchttpclient/cookie/CookieStore;)V
     191: aload_1
     192: invokeinterface #29,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.expiredCookieEvictionDelay:()I
     197: i2l
     198: getstatic     #31                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     201: invokeinterface #32,  5           // InterfaceMethod io/netty/util/Timer.newTimeout:(Lio/netty/util/TimerTask;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/Timeout;
     206: pop
     207: return

  private io.netty.util.Timer newNettyTimer(org.asynchttpclient.AsyncHttpClientConfig);
    Code:
       0: aload_1
       1: invokeinterface #33,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       6: ifnull        18
       9: aload_1
      10: invokeinterface #33,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getThreadFactory:()Ljava/util/concurrent/ThreadFactory;
      15: goto          49
      18: new           #34                 // class io/netty/util/concurrent/DefaultThreadFactory
      21: dup
      22: new           #35                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_1
      30: invokeinterface #37,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getThreadPoolName:()Ljava/lang/String;
      35: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #39                 // String -timer
      40: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #41                 // Method io/netty/util/concurrent/DefaultThreadFactory."<init>":(Ljava/lang/String;)V
      49: astore_2
      50: new           #42                 // class io/netty/util/HashedWheelTimer
      53: dup
      54: aload_2
      55: aload_1
      56: invokeinterface #43,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getHashedWheelTimerTickDuration:()J
      61: getstatic     #31                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      64: aload_1
      65: invokeinterface #44,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getHashedWheelTimerSize:()I
      70: invokespecial #45                 // Method io/netty/util/HashedWheelTimer."<init>":(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;I)V
      73: astore_3
      74: aload_3
      75: invokevirtual #46                 // Method io/netty/util/HashedWheelTimer.start:()V
      78: aload_3
      79: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #8                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          87
      12: aload_0
      13: getfield      #19                 // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      16: invokevirtual #48                 // Method org/asynchttpclient/netty/channel/ChannelManager.close:()V
      19: goto          34
      22: astore_1
      23: getstatic     #50                 // Field LOGGER:Lorg/slf4j/Logger;
      26: ldc           #51                 // String Unexpected error on ChannelManager close
      28: aload_1
      29: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      34: aload_0
      35: getfield      #9                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      38: invokeinterface #26,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getCookieStore:()Lorg/asynchttpclient/cookie/CookieStore;
      43: astore_1
      44: aload_1
      45: ifnull        55
      48: aload_1
      49: invokeinterface #53,  1           // InterfaceMethod org/asynchttpclient/cookie/CookieStore.decrementAndGet:()I
      54: pop
      55: aload_0
      56: getfield      #14                 // Field allowStopNettyTimer:Z
      59: ifeq          87
      62: aload_0
      63: getfield      #16                 // Field nettyTimer:Lio/netty/util/Timer;
      66: invokeinterface #54,  1           // InterfaceMethod io/netty/util/Timer.stop:()Ljava/util/Set;
      71: pop
      72: goto          87
      75: astore_2
      76: getstatic     #50                 // Field LOGGER:Lorg/slf4j/Logger;
      79: ldc           #55                 // String Unexpected error on HashedWheelTimer close
      81: aload_2
      82: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      87: return
    Exception table:
       from    to  target type
          12    19    22   Class java/lang/Throwable
          62    72    75   Class java/lang/Throwable

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public org.asynchttpclient.DefaultAsyncHttpClient setSignatureCalculator(org.asynchttpclient.SignatureCalculator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field signatureCalculator:Lorg/asynchttpclient/SignatureCalculator;
       5: aload_0
       6: areturn

  public org.asynchttpclient.BoundRequestBuilder prepare(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #58                 // Method requestBuilder:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/BoundRequestBuilder;
       6: areturn

  public org.asynchttpclient.BoundRequestBuilder prepareGet(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #59                 // String GET
       3: aload_1
       4: invokevirtual #58                 // Method requestBuilder:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/BoundRequestBuilder;
       7: areturn

  public org.asynchttpclient.BoundRequestBuilder prepareConnect(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #60                 // String CONNECT
       3: aload_1
       4: invokevirtual #58                 // Method requestBuilder:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/BoundRequestBuilder;
       7: areturn

  public org.asynchttpclient.BoundRequestBuilder prepareOptions(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #61                 // String OPTIONS
       3: aload_1
       4: invokevirtual #58                 // Method requestBuilder:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/BoundRequestBuilder;
       7: areturn

  public org.asynchttpclient.BoundRequestBuilder prepareHead(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #62                 // String HEAD
       3: aload_1
       4: invokevirtual #58                 // Method requestBuilder:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/BoundRequestBuilder;
       7: areturn

  public org.asynchttpclient.BoundRequestBuilder preparePost(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #63                 // String POST
       3: aload_1
       4: invokevirtual #58                 // Method requestBuilder:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/BoundRequestBuilder;
       7: areturn

  public org.asynchttpclient.BoundRequestBuilder preparePut(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #64                 // String PUT
       3: aload_1
       4: invokevirtual #58                 // Method requestBuilder:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/BoundRequestBuilder;
       7: areturn

  public org.asynchttpclient.BoundRequestBuilder prepareDelete(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #65                 // String DELETE
       3: aload_1
       4: invokevirtual #58                 // Method requestBuilder:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/BoundRequestBuilder;
       7: areturn

  public org.asynchttpclient.BoundRequestBuilder preparePatch(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #66                 // String PATCH
       3: aload_1
       4: invokevirtual #58                 // Method requestBuilder:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/BoundRequestBuilder;
       7: areturn

  public org.asynchttpclient.BoundRequestBuilder prepareTrace(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #67                 // String TRACE
       3: aload_1
       4: invokevirtual #58                 // Method requestBuilder:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/BoundRequestBuilder;
       7: areturn

  public org.asynchttpclient.BoundRequestBuilder prepareRequest(org.asynchttpclient.Request);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method requestBuilder:(Lorg/asynchttpclient/Request;)Lorg/asynchttpclient/BoundRequestBuilder;
       5: areturn

  public org.asynchttpclient.BoundRequestBuilder prepareRequest(org.asynchttpclient.RequestBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method org/asynchttpclient/RequestBuilder.build:()Lorg/asynchttpclient/Request;
       5: invokevirtual #70                 // Method prepareRequest:(Lorg/asynchttpclient/Request;)Lorg/asynchttpclient/BoundRequestBuilder;
       8: areturn

  public <T> org.asynchttpclient.ListenableFuture<T> executeRequest(org.asynchttpclient.Request, org.asynchttpclient.AsyncHandler<T>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
       4: invokeinterface #26,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getCookieStore:()Lorg/asynchttpclient/cookie/CookieStore;
       9: ifnull        119
      12: aload_0
      13: getfield      #9                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      16: invokeinterface #26,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getCookieStore:()Lorg/asynchttpclient/cookie/CookieStore;
      21: aload_1
      22: invokeinterface #71,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
      27: invokeinterface #72,  2           // InterfaceMethod org/asynchttpclient/cookie/CookieStore.get:(Lorg/asynchttpclient/uri/Uri;)Ljava/util/List;
      32: astore_3
      33: aload_3
      34: invokeinterface #11,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      39: ifne          97
      42: aload_1
      43: invokeinterface #73,  1           // InterfaceMethod org/asynchttpclient/Request.toBuilder:()Lorg/asynchttpclient/RequestBuilder;
      48: astore        4
      50: aload_3
      51: invokeinterface #74,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      56: astore        5
      58: aload         5
      60: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          91
      68: aload         5
      70: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #77                 // class io/netty/handler/codec/http/cookie/Cookie
      78: astore        6
      80: aload         4
      82: aload         6
      84: invokevirtual #78                 // Method org/asynchttpclient/RequestBuilder.addOrReplaceCookie:(Lio/netty/handler/codec/http/cookie/Cookie;)Lorg/asynchttpclient/RequestBuilderBase;
      87: pop
      88: goto          58
      91: aload         4
      93: invokevirtual #69                 // Method org/asynchttpclient/RequestBuilder.build:()Lorg/asynchttpclient/Request;
      96: astore_1
      97: goto          119
     100: astore_3
     101: aload_2
     102: aload_3
     103: invokeinterface #80,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onThrowable:(Ljava/lang/Throwable;)V
     108: new           #81                 // class org/asynchttpclient/ListenableFuture$CompletedFailure
     111: dup
     112: ldc           #82                 // String Failed to set cookies of request
     114: aload_3
     115: invokespecial #83                 // Method org/asynchttpclient/ListenableFuture$CompletedFailure."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     118: areturn
     119: aload_0
     120: getfield      #12                 // Field noRequestFilters:Z
     123: ifeq          133
     126: aload_0
     127: aload_1
     128: aload_2
     129: invokespecial #84                 // Method execute:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;)Lorg/asynchttpclient/ListenableFuture;
     132: areturn
     133: new           #85                 // class org/asynchttpclient/filter/FilterContext$FilterContextBuilder
     136: dup
     137: invokespecial #86                 // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder."<init>":()V
     140: aload_2
     141: invokevirtual #87                 // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.asyncHandler:(Lorg/asynchttpclient/AsyncHandler;)Lorg/asynchttpclient/filter/FilterContext$FilterContextBuilder;
     144: aload_1
     145: invokevirtual #88                 // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.request:(Lorg/asynchttpclient/Request;)Lorg/asynchttpclient/filter/FilterContext$FilterContextBuilder;
     148: invokevirtual #89                 // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.build:()Lorg/asynchttpclient/filter/FilterContext;
     151: astore_3
     152: aload_0
     153: aload_3
     154: invokespecial #90                 // Method preProcessRequest:(Lorg/asynchttpclient/filter/FilterContext;)Lorg/asynchttpclient/filter/FilterContext;
     157: astore_3
     158: goto          183
     161: astore        4
     163: aload_2
     164: aload         4
     166: invokeinterface #80,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onThrowable:(Ljava/lang/Throwable;)V
     171: new           #81                 // class org/asynchttpclient/ListenableFuture$CompletedFailure
     174: dup
     175: ldc           #91                 // String preProcessRequest failed
     177: aload         4
     179: invokespecial #83                 // Method org/asynchttpclient/ListenableFuture$CompletedFailure."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     182: areturn
     183: aload_0
     184: aload_3
     185: invokevirtual #92                 // Method org/asynchttpclient/filter/FilterContext.getRequest:()Lorg/asynchttpclient/Request;
     188: aload_3
     189: invokevirtual #93                 // Method org/asynchttpclient/filter/FilterContext.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
     192: invokespecial #84                 // Method execute:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;)Lorg/asynchttpclient/ListenableFuture;
     195: areturn
    Exception table:
       from    to  target type
          12    97   100   Class java/lang/Exception
         152   158   161   Class java/lang/Exception

  public <T> org.asynchttpclient.ListenableFuture<T> executeRequest(org.asynchttpclient.RequestBuilder, org.asynchttpclient.AsyncHandler<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method org/asynchttpclient/RequestBuilder.build:()Lorg/asynchttpclient/Request;
       5: aload_2
       6: invokevirtual #94                 // Method executeRequest:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;)Lorg/asynchttpclient/ListenableFuture;
       9: areturn

  public org.asynchttpclient.ListenableFuture<org.asynchttpclient.Response> executeRequest(org.asynchttpclient.Request);
    Code:
       0: aload_0
       1: aload_1
       2: new           #95                 // class org/asynchttpclient/AsyncCompletionHandlerBase
       5: dup
       6: invokespecial #96                 // Method org/asynchttpclient/AsyncCompletionHandlerBase."<init>":()V
       9: invokevirtual #94                 // Method executeRequest:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;)Lorg/asynchttpclient/ListenableFuture;
      12: areturn

  public org.asynchttpclient.ListenableFuture<org.asynchttpclient.Response> executeRequest(org.asynchttpclient.RequestBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method org/asynchttpclient/RequestBuilder.build:()Lorg/asynchttpclient/Request;
       5: invokevirtual #97                 // Method executeRequest:(Lorg/asynchttpclient/Request;)Lorg/asynchttpclient/ListenableFuture;
       8: areturn

  private <T> org.asynchttpclient.ListenableFuture<T> execute(org.asynchttpclient.Request, org.asynchttpclient.AsyncHandler<T>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
       4: aload_1
       5: aload_2
       6: aconst_null
       7: invokevirtual #98                 // Method org/asynchttpclient/netty/request/NettyRequestSender.sendRequest:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;Lorg/asynchttpclient/netty/NettyResponseFuture;)Lorg/asynchttpclient/ListenableFuture;
      10: areturn
      11: astore_3
      12: aload_2
      13: aload_3
      14: invokeinterface #80,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onThrowable:(Ljava/lang/Throwable;)V
      19: new           #81                 // class org/asynchttpclient/ListenableFuture$CompletedFailure
      22: dup
      23: aload_3
      24: invokespecial #99                 // Method org/asynchttpclient/ListenableFuture$CompletedFailure."<init>":(Ljava/lang/Throwable;)V
      27: areturn
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/Exception

  private <T> org.asynchttpclient.filter.FilterContext<T> preProcessRequest(org.asynchttpclient.filter.FilterContext<T>) throws org.asynchttpclient.filter.FilterException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
       4: invokeinterface #10,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getRequestFilters:()Ljava/util/List;
       9: invokeinterface #74,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          52
      24: aload_2
      25: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #100                // class org/asynchttpclient/filter/RequestFilter
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokeinterface #101,  2          // InterfaceMethod org/asynchttpclient/filter/RequestFilter.filter:(Lorg/asynchttpclient/filter/FilterContext;)Lorg/asynchttpclient/filter/FilterContext;
      41: astore_1
      42: aload_1
      43: ldc           #102                // String filterContext
      45: invokestatic  #103                // Method org/asynchttpclient/util/Assertions.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      48: pop
      49: goto          15
      52: aload_1
      53: invokevirtual #92                 // Method org/asynchttpclient/filter/FilterContext.getRequest:()Lorg/asynchttpclient/Request;
      56: astore_2
      57: aload_1
      58: invokevirtual #93                 // Method org/asynchttpclient/filter/FilterContext.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
      61: instanceof    #104                // class org/asynchttpclient/handler/resumable/ResumableAsyncHandler
      64: ifeq          84
      67: ldc           #104                // class org/asynchttpclient/handler/resumable/ResumableAsyncHandler
      69: aload_1
      70: invokevirtual #93                 // Method org/asynchttpclient/filter/FilterContext.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
      73: invokevirtual #105                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      76: checkcast     #104                // class org/asynchttpclient/handler/resumable/ResumableAsyncHandler
      79: aload_2
      80: invokevirtual #106                // Method org/asynchttpclient/handler/resumable/ResumableAsyncHandler.adjustRequestRange:(Lorg/asynchttpclient/Request;)Lorg/asynchttpclient/Request;
      83: astore_2
      84: aload_2
      85: invokeinterface #107,  1          // InterfaceMethod org/asynchttpclient/Request.getRangeOffset:()J
      90: lconst_0
      91: lcmp
      92: ifeq          143
      95: aload_2
      96: invokeinterface #73,  1           // InterfaceMethod org/asynchttpclient/Request.toBuilder:()Lorg/asynchttpclient/RequestBuilder;
     101: astore_3
     102: aload_3
     103: ldc           #108                // String Range
     105: new           #35                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     112: ldc           #109                // String bytes=
     114: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_2
     118: invokeinterface #107,  1          // InterfaceMethod org/asynchttpclient/Request.getRangeOffset:()J
     123: invokevirtual #110                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     126: ldc           #111                // String -
     128: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokevirtual #112                // Method org/asynchttpclient/RequestBuilder.setHeader:(Ljava/lang/CharSequence;Ljava/lang/String;)Lorg/asynchttpclient/RequestBuilderBase;
     137: pop
     138: aload_3
     139: invokevirtual #69                 // Method org/asynchttpclient/RequestBuilder.build:()Lorg/asynchttpclient/Request;
     142: astore_2
     143: new           #85                 // class org/asynchttpclient/filter/FilterContext$FilterContextBuilder
     146: dup
     147: aload_1
     148: invokespecial #113                // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder."<init>":(Lorg/asynchttpclient/filter/FilterContext;)V
     151: aload_2
     152: invokevirtual #88                 // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.request:(Lorg/asynchttpclient/Request;)Lorg/asynchttpclient/filter/FilterContext$FilterContextBuilder;
     155: invokevirtual #89                 // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.build:()Lorg/asynchttpclient/filter/FilterContext;
     158: astore_1
     159: aload_1
     160: areturn

  public org.asynchttpclient.channel.ChannelPool getChannelPool();
    Code:
       0: aload_0
       1: getfield      #19                 // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
       4: invokevirtual #114                // Method org/asynchttpclient/netty/channel/ChannelManager.getChannelPool:()Lorg/asynchttpclient/channel/ChannelPool;
       7: areturn

  public io.netty.channel.EventLoopGroup getEventLoopGroup();
    Code:
       0: aload_0
       1: getfield      #19                 // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
       4: invokevirtual #115                // Method org/asynchttpclient/netty/channel/ChannelManager.getEventLoopGroup:()Lio/netty/channel/EventLoopGroup;
       7: areturn

  public org.asynchttpclient.ClientStats getClientStats();
    Code:
       0: aload_0
       1: getfield      #19                 // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
       4: invokevirtual #116                // Method org/asynchttpclient/netty/channel/ChannelManager.getClientStats:()Lorg/asynchttpclient/ClientStats;
       7: areturn

  public void flushChannelPoolPartitions(java.util.function.Predicate<java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #117                // Method getChannelPool:()Lorg/asynchttpclient/channel/ChannelPool;
       4: aload_1
       5: invokeinterface #118,  2          // InterfaceMethod org/asynchttpclient/channel/ChannelPool.flushPartitions:(Ljava/util/function/Predicate;)V
      10: return

  protected org.asynchttpclient.BoundRequestBuilder requestBuilder(java.lang.String, java.lang.String);
    Code:
       0: new           #119                // class org/asynchttpclient/BoundRequestBuilder
       3: dup
       4: aload_0
       5: aload_1
       6: aload_0
       7: getfield      #9                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      10: invokeinterface #120,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.isDisableUrlEncodingForBoundRequests:()Z
      15: invokespecial #121                // Method org/asynchttpclient/BoundRequestBuilder."<init>":(Lorg/asynchttpclient/AsyncHttpClient;Ljava/lang/String;Z)V
      18: aload_2
      19: invokevirtual #122                // Method org/asynchttpclient/BoundRequestBuilder.setUrl:(Ljava/lang/String;)Lorg/asynchttpclient/RequestBuilderBase;
      22: checkcast     #119                // class org/asynchttpclient/BoundRequestBuilder
      25: aload_0
      26: getfield      #57                 // Field signatureCalculator:Lorg/asynchttpclient/SignatureCalculator;
      29: invokevirtual #123                // Method org/asynchttpclient/BoundRequestBuilder.setSignatureCalculator:(Lorg/asynchttpclient/SignatureCalculator;)Lorg/asynchttpclient/RequestBuilderBase;
      32: checkcast     #119                // class org/asynchttpclient/BoundRequestBuilder
      35: areturn

  protected org.asynchttpclient.BoundRequestBuilder requestBuilder(org.asynchttpclient.Request);
    Code:
       0: new           #119                // class org/asynchttpclient/BoundRequestBuilder
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #124                // Method org/asynchttpclient/BoundRequestBuilder."<init>":(Lorg/asynchttpclient/AsyncHttpClient;Lorg/asynchttpclient/Request;)V
       9: aload_0
      10: getfield      #57                 // Field signatureCalculator:Lorg/asynchttpclient/SignatureCalculator;
      13: invokevirtual #123                // Method org/asynchttpclient/BoundRequestBuilder.setSignatureCalculator:(Lorg/asynchttpclient/SignatureCalculator;)Lorg/asynchttpclient/RequestBuilderBase;
      16: checkcast     #119                // class org/asynchttpclient/BoundRequestBuilder
      19: areturn

  public org.asynchttpclient.AsyncHttpClientConfig getConfig();
    Code:
       0: aload_0
       1: getfield      #9                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
       4: areturn

  public org.asynchttpclient.AsyncHttpClient setSignatureCalculator(org.asynchttpclient.SignatureCalculator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #125                // Method setSignatureCalculator:(Lorg/asynchttpclient/SignatureCalculator;)Lorg/asynchttpclient/DefaultAsyncHttpClient;
       5: areturn

  static {};
    Code:
       0: ldc           #126                // class org/asynchttpclient/DefaultAsyncHttpClient
       2: invokestatic  #127                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #50                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
