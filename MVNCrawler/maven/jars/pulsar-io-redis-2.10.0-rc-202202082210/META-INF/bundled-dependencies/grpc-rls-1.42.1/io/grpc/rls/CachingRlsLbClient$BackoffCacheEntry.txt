Compiled from "CachingRlsLbClient.java"
final class io.grpc.rls.CachingRlsLbClient$BackoffCacheEntry extends io.grpc.rls.CachingRlsLbClient$CacheEntry {
  private final io.grpc.Status status;

  private final io.grpc.SynchronizationContext$ScheduledHandle scheduledHandle;

  private final io.grpc.internal.BackoffPolicy backoffPolicy;

  private final long expireNanos;

  private boolean shutdown;

  final io.grpc.rls.CachingRlsLbClient this$0;

  io.grpc.rls.CachingRlsLbClient$BackoffCacheEntry(io.grpc.rls.CachingRlsLbClient, io.grpc.rls.RlsProtoData$RouteLookupRequest, io.grpc.Status, io.grpc.internal.BackoffPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/grpc/rls/CachingRlsLbClient;
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #3                  // Method io/grpc/rls/CachingRlsLbClient$CacheEntry."<init>":(Lio/grpc/rls/CachingRlsLbClient;Lio/grpc/rls/RlsProtoData$RouteLookupRequest;)V
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field shutdown:Z
      16: aload_0
      17: aload_3
      18: ldc           #5                  // String status
      20: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #7                  // class io/grpc/Status
      26: putfield      #8                  // Field status:Lio/grpc/Status;
      29: aload_0
      30: aload         4
      32: ldc           #9                  // String backoffPolicy
      34: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #10                 // class io/grpc/internal/BackoffPolicy
      40: putfield      #11                 // Field backoffPolicy:Lio/grpc/internal/BackoffPolicy;
      43: aload         4
      45: invokeinterface #12,  1           // InterfaceMethod io/grpc/internal/BackoffPolicy.nextBackoffNanos:()J
      50: lstore        5
      52: aload_0
      53: aload_1
      54: invokestatic  #13                 // Method io/grpc/rls/CachingRlsLbClient.access$2000:(Lio/grpc/rls/CachingRlsLbClient;)Lio/grpc/internal/TimeProvider;
      57: invokeinterface #14,  1           // InterfaceMethod io/grpc/internal/TimeProvider.currentTimeNanos:()J
      62: lload         5
      64: ladd
      65: putfield      #15                 // Field expireNanos:J
      68: aload_0
      69: aload_1
      70: invokestatic  #16                 // Method io/grpc/rls/CachingRlsLbClient.access$1600:(Lio/grpc/rls/CachingRlsLbClient;)Lio/grpc/SynchronizationContext;
      73: new           #17                 // class io/grpc/rls/CachingRlsLbClient$BackoffCacheEntry$1
      76: dup
      77: aload_0
      78: aload_1
      79: invokespecial #18                 // Method io/grpc/rls/CachingRlsLbClient$BackoffCacheEntry$1."<init>":(Lio/grpc/rls/CachingRlsLbClient$BackoffCacheEntry;Lio/grpc/rls/CachingRlsLbClient;)V
      82: lload         5
      84: getstatic     #19                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      87: aload_1
      88: invokestatic  #20                 // Method io/grpc/rls/CachingRlsLbClient.access$2800:(Lio/grpc/rls/CachingRlsLbClient;)Ljava/util/concurrent/ScheduledExecutorService;
      91: invokevirtual #21                 // Method io/grpc/SynchronizationContext.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)Lio/grpc/SynchronizationContext$ScheduledHandle;
      94: putfield      #22                 // Field scheduledHandle:Lio/grpc/SynchronizationContext$ScheduledHandle;
      97: return

  void forceRefresh();
    Code:
       0: aload_0
       1: getfield      #22                 // Field scheduledHandle:Lio/grpc/SynchronizationContext$ScheduledHandle;
       4: invokevirtual #23                 // Method io/grpc/SynchronizationContext$ScheduledHandle.isPending:()Z
       7: ifeq          21
      10: aload_0
      11: getfield      #22                 // Field scheduledHandle:Lio/grpc/SynchronizationContext$ScheduledHandle;
      14: invokevirtual #24                 // Method io/grpc/SynchronizationContext$ScheduledHandle.cancel:()V
      17: aload_0
      18: invokespecial #1                  // Method transitionToPending:()V
      21: return

  private void transitionToPending();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/grpc/rls/CachingRlsLbClient;
       4: invokestatic  #25                 // Method io/grpc/rls/CachingRlsLbClient.access$1700:(Lio/grpc/rls/CachingRlsLbClient;)Ljava/lang/Object;
       7: dup
       8: astore_1
       9: monitorenter
      10: aload_0
      11: getfield      #4                  // Field shutdown:Z
      14: ifeq          20
      17: aload_1
      18: monitorexit
      19: return
      20: aload_0
      21: getfield      #2                  // Field this$0:Lio/grpc/rls/CachingRlsLbClient;
      24: aload_0
      25: getfield      #26                 // Field request:Lio/grpc/rls/RlsProtoData$RouteLookupRequest;
      28: invokestatic  #27                 // Method io/grpc/rls/CachingRlsLbClient.access$2600:(Lio/grpc/rls/CachingRlsLbClient;Lio/grpc/rls/RlsProtoData$RouteLookupRequest;)Lcom/google/common/util/concurrent/ListenableFuture;
      31: astore_2
      32: aload_2
      33: invokeinterface #28,  1           // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.isDone:()Z
      38: ifne          98
      41: new           #29                 // class io/grpc/rls/CachingRlsLbClient$PendingCacheEntry
      44: dup
      45: aload_0
      46: getfield      #2                  // Field this$0:Lio/grpc/rls/CachingRlsLbClient;
      49: aload_0
      50: getfield      #26                 // Field request:Lio/grpc/rls/RlsProtoData$RouteLookupRequest;
      53: aload_2
      54: aload_0
      55: getfield      #11                 // Field backoffPolicy:Lio/grpc/internal/BackoffPolicy;
      58: invokespecial #30                 // Method io/grpc/rls/CachingRlsLbClient$PendingCacheEntry."<init>":(Lio/grpc/rls/CachingRlsLbClient;Lio/grpc/rls/RlsProtoData$RouteLookupRequest;Lcom/google/common/util/concurrent/ListenableFuture;Lio/grpc/internal/BackoffPolicy;)V
      61: astore_3
      62: aload_0
      63: getfield      #2                  // Field this$0:Lio/grpc/rls/CachingRlsLbClient;
      66: invokestatic  #31                 // Method io/grpc/rls/CachingRlsLbClient.access$1800:(Lio/grpc/rls/CachingRlsLbClient;)Ljava/util/Map;
      69: aload_0
      70: getfield      #26                 // Field request:Lio/grpc/rls/RlsProtoData$RouteLookupRequest;
      73: aload_3
      74: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: aload_0
      81: getfield      #2                  // Field this$0:Lio/grpc/rls/CachingRlsLbClient;
      84: invokestatic  #33                 // Method io/grpc/rls/CachingRlsLbClient.access$1900:(Lio/grpc/rls/CachingRlsLbClient;)Lio/grpc/rls/LinkedHashLruCache;
      87: aload_0
      88: getfield      #26                 // Field request:Lio/grpc/rls/RlsProtoData$RouteLookupRequest;
      91: invokevirtual #34                 // Method io/grpc/rls/LinkedHashLruCache.invalidate:(Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: goto          191
      98: aload_2
      99: invokeinterface #35,  1           // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.get:()Ljava/lang/Object;
     104: checkcast     #36                 // class io/grpc/rls/RlsProtoData$RouteLookupResponse
     107: astore_3
     108: aload_0
     109: getfield      #2                  // Field this$0:Lio/grpc/rls/CachingRlsLbClient;
     112: invokestatic  #33                 // Method io/grpc/rls/CachingRlsLbClient.access$1900:(Lio/grpc/rls/CachingRlsLbClient;)Lio/grpc/rls/LinkedHashLruCache;
     115: aload_0
     116: getfield      #26                 // Field request:Lio/grpc/rls/RlsProtoData$RouteLookupRequest;
     119: new           #37                 // class io/grpc/rls/CachingRlsLbClient$DataCacheEntry
     122: dup
     123: aload_0
     124: getfield      #2                  // Field this$0:Lio/grpc/rls/CachingRlsLbClient;
     127: aload_0
     128: getfield      #26                 // Field request:Lio/grpc/rls/RlsProtoData$RouteLookupRequest;
     131: aload_3
     132: invokespecial #38                 // Method io/grpc/rls/CachingRlsLbClient$DataCacheEntry."<init>":(Lio/grpc/rls/CachingRlsLbClient;Lio/grpc/rls/RlsProtoData$RouteLookupRequest;Lio/grpc/rls/RlsProtoData$RouteLookupResponse;)V
     135: invokevirtual #39                 // Method io/grpc/rls/LinkedHashLruCache.cache:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     138: pop
     139: goto          191
     142: astore_3
     143: invokestatic  #41                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     146: invokevirtual #42                 // Method java/lang/Thread.interrupt:()V
     149: goto          191
     152: astore_3
     153: aload_0
     154: getfield      #2                  // Field this$0:Lio/grpc/rls/CachingRlsLbClient;
     157: invokestatic  #33                 // Method io/grpc/rls/CachingRlsLbClient.access$1900:(Lio/grpc/rls/CachingRlsLbClient;)Lio/grpc/rls/LinkedHashLruCache;
     160: aload_0
     161: getfield      #26                 // Field request:Lio/grpc/rls/RlsProtoData$RouteLookupRequest;
     164: new           #44                 // class io/grpc/rls/CachingRlsLbClient$BackoffCacheEntry
     167: dup
     168: aload_0
     169: getfield      #2                  // Field this$0:Lio/grpc/rls/CachingRlsLbClient;
     172: aload_0
     173: getfield      #26                 // Field request:Lio/grpc/rls/RlsProtoData$RouteLookupRequest;
     176: aload_3
     177: invokestatic  #45                 // Method io/grpc/Status.fromThrowable:(Ljava/lang/Throwable;)Lio/grpc/Status;
     180: aload_0
     181: getfield      #11                 // Field backoffPolicy:Lio/grpc/internal/BackoffPolicy;
     184: invokespecial #46                 // Method "<init>":(Lio/grpc/rls/CachingRlsLbClient;Lio/grpc/rls/RlsProtoData$RouteLookupRequest;Lio/grpc/Status;Lio/grpc/internal/BackoffPolicy;)V
     187: invokevirtual #39                 // Method io/grpc/rls/LinkedHashLruCache.cache:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     190: pop
     191: aload_1
     192: monitorexit
     193: goto          203
     196: astore        4
     198: aload_1
     199: monitorexit
     200: aload         4
     202: athrow
     203: return
    Exception table:
       from    to  target type
          98   139   142   Class java/lang/InterruptedException
          98   139   152   Class java/lang/Exception
          10    19   196   any
          20   193   196   any
         196   200   196   any

  io.grpc.Status getStatus();
    Code:
       0: aload_0
       1: getfield      #8                  // Field status:Lio/grpc/Status;
       4: areturn

  int getSizeBytes();
    Code:
       0: iconst_0
       1: ireturn

  boolean isExpired(long);
    Code:
       0: aload_0
       1: getfield      #15                 // Field expireNanos:J
       4: lload_1
       5: lcmp
       6: ifgt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  void cleanup();
    Code:
       0: aload_0
       1: getfield      #4                  // Field shutdown:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #4                  // Field shutdown:Z
      13: aload_0
      14: getfield      #22                 // Field scheduledHandle:Lio/grpc/SynchronizationContext$ScheduledHandle;
      17: invokevirtual #23                 // Method io/grpc/SynchronizationContext$ScheduledHandle.isPending:()Z
      20: ifne          30
      23: aload_0
      24: getfield      #22                 // Field scheduledHandle:Lio/grpc/SynchronizationContext$ScheduledHandle;
      27: invokevirtual #24                 // Method io/grpc/SynchronizationContext$ScheduledHandle.cancel:()V
      30: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       4: ldc           #48                 // String request
       6: aload_0
       7: getfield      #26                 // Field request:Lio/grpc/rls/RlsProtoData$RouteLookupRequest;
      10: invokevirtual #49                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      13: ldc           #5                  // String status
      15: aload_0
      16: getfield      #8                  // Field status:Lio/grpc/Status;
      19: invokevirtual #49                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      22: invokevirtual #50                 // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      25: areturn

  static void access$2700(io.grpc.rls.CachingRlsLbClient$BackoffCacheEntry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method transitionToPending:()V
       4: return
}
