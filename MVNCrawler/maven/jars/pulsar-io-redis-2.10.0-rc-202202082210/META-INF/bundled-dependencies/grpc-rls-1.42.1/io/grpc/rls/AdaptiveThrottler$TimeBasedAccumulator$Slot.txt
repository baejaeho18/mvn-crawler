Compiled from "AdaptiveThrottler.java"
final class io.grpc.rls.AdaptiveThrottler$TimeBasedAccumulator$Slot {
  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<io.grpc.rls.AdaptiveThrottler$TimeBasedAccumulator$Slot> ATOMIC_COUNT;

  volatile long count;

  final long endNanos;

  io.grpc.rls.AdaptiveThrottler$TimeBasedAccumulator$Slot(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #2                  // Field endNanos:J
       9: aload_0
      10: lconst_0
      11: putfield      #3                  // Field count:J
      14: return

  void increment();
    Code:
       0: getstatic     #4                  // Field ATOMIC_COUNT:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: aload_0
       4: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.incrementAndGet:(Ljava/lang/Object;)J
       7: pop2
       8: return

  static {};
    Code:
       0: ldc           #6                  // class io/grpc/rls/AdaptiveThrottler$TimeBasedAccumulator$Slot
       2: ldc           #7                  // String count
       4: invokestatic  #8                  // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #4                  // Field ATOMIC_COUNT:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: return
}
