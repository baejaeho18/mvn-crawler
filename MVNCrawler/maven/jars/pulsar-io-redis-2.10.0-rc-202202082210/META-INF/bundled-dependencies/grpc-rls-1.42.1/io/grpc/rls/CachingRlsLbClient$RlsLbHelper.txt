Compiled from "CachingRlsLbClient.java"
final class io.grpc.rls.CachingRlsLbClient$RlsLbHelper extends io.grpc.util.ForwardingLoadBalancerHelper {
  final io.grpc.LoadBalancer$Helper helper;

  private io.grpc.ConnectivityState state;

  private io.grpc.LoadBalancer$SubchannelPicker picker;

  io.grpc.rls.CachingRlsLbClient$RlsLbHelper(io.grpc.LoadBalancer$Helper);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method io/grpc/util/ForwardingLoadBalancerHelper."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field helper:Lio/grpc/LoadBalancer$Helper;
       9: return

  protected io.grpc.LoadBalancer$Helper delegate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field helper:Lio/grpc/LoadBalancer$Helper;
       4: areturn

  public void updateBalancingState(io.grpc.ConnectivityState, io.grpc.LoadBalancer$SubchannelPicker);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field state:Lio/grpc/ConnectivityState;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field picker:Lio/grpc/LoadBalancer$SubchannelPicker;
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokespecial #5                  // Method io/grpc/util/ForwardingLoadBalancerHelper.updateBalancingState:(Lio/grpc/ConnectivityState;Lio/grpc/LoadBalancer$SubchannelPicker;)V
      16: return

  void propagateRlsError();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getSynchronizationContext:()Lio/grpc/SynchronizationContext;
       4: new           #7                  // class io/grpc/rls/CachingRlsLbClient$RlsLbHelper$1
       7: dup
       8: aload_0
       9: invokespecial #8                  // Method io/grpc/rls/CachingRlsLbClient$RlsLbHelper$1."<init>":(Lio/grpc/rls/CachingRlsLbClient$RlsLbHelper;)V
      12: invokevirtual #9                  // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
      15: return

  static io.grpc.LoadBalancer$SubchannelPicker access$1200(io.grpc.rls.CachingRlsLbClient$RlsLbHelper);
    Code:
       0: aload_0
       1: getfield      #2                  // Field picker:Lio/grpc/LoadBalancer$SubchannelPicker;
       4: areturn

  static io.grpc.ConnectivityState access$1300(io.grpc.rls.CachingRlsLbClient$RlsLbHelper);
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:Lio/grpc/ConnectivityState;
       4: areturn
}
