Compiled from "CachingRlsLbClient.java"
abstract class io.grpc.rls.CachingRlsLbClient$CacheEntry {
  protected final io.grpc.rls.RlsProtoData$RouteLookupRequest request;

  final io.grpc.rls.CachingRlsLbClient this$0;

  io.grpc.rls.CachingRlsLbClient$CacheEntry(io.grpc.rls.CachingRlsLbClient, io.grpc.rls.RlsProtoData$RouteLookupRequest);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/grpc/rls/CachingRlsLbClient;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: ldc           #3                  // String request
      13: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #5                  // class io/grpc/rls/RlsProtoData$RouteLookupRequest
      19: putfield      #6                  // Field request:Lio/grpc/rls/RlsProtoData$RouteLookupRequest;
      22: return

  abstract int getSizeBytes();

  final boolean isExpired();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #1                  // Field this$0:Lio/grpc/rls/CachingRlsLbClient;
       5: invokestatic  #7                  // Method io/grpc/rls/CachingRlsLbClient.access$2000:(Lio/grpc/rls/CachingRlsLbClient;)Lio/grpc/internal/TimeProvider;
       8: invokeinterface #8,  1            // InterfaceMethod io/grpc/internal/TimeProvider.currentTimeNanos:()J
      13: invokevirtual #9                  // Method isExpired:(J)Z
      16: ireturn

  abstract boolean isExpired(long);

  abstract void cleanup();
}
