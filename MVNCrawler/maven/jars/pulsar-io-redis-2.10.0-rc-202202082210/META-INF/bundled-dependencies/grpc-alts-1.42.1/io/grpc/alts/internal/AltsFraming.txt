Compiled from "AltsFraming.java"
public final class io.grpc.alts.internal.AltsFraming {
  private static final int FRAME_LENGTH_HEADER_SIZE;

  private static final int FRAME_MESSAGE_TYPE_HEADER_SIZE;

  private static final int MAX_DATA_LENGTH;

  private static final int INITIAL_BUFFER_CAPACITY;

  private static final int MESSAGE_TYPE;

  private io.grpc.alts.internal.AltsFraming();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: return

  static int getFrameLengthHeaderSize();
    Code:
       0: iconst_4
       1: ireturn

  static int getFrameMessageTypeHeaderSize();
    Code:
       0: iconst_4
       1: ireturn

  static int getMaxDataLength();
    Code:
       0: ldc           #17                 // int 1048576
       2: ireturn

  static int getFramingOverhead();
    Code:
       0: bipush        8
       2: ireturn

  static java.nio.ByteBuffer toFrame(java.nio.ByteBuffer, int) throws java.security.GeneralSecurityException;
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: aload_0
       7: invokevirtual #47                 // Method java/nio/ByteBuffer.remaining:()I
      10: if_icmple     18
      13: aload_0
      14: invokevirtual #47                 // Method java/nio/ByteBuffer.remaining:()I
      17: istore_1
      18: new           #10                 // class io/grpc/alts/internal/AltsFraming$Producer
      21: dup
      22: invokespecial #48                 // Method io/grpc/alts/internal/AltsFraming$Producer."<init>":()V
      25: astore_2
      26: aload_0
      27: invokevirtual #52                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      30: astore_3
      31: aload_3
      32: aload_0
      33: invokevirtual #55                 // Method java/nio/ByteBuffer.position:()I
      36: iload_1
      37: iadd
      38: invokevirtual #61                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      41: pop
      42: aload_2
      43: aload_3
      44: invokevirtual #65                 // Method io/grpc/alts/internal/AltsFraming$Producer.readBytes:(Ljava/nio/ByteBuffer;)Z
      47: pop
      48: aload_2
      49: invokevirtual #68                 // Method io/grpc/alts/internal/AltsFraming$Producer.flush:()V
      52: aload_0
      53: aload_3
      54: invokevirtual #55                 // Method java/nio/ByteBuffer.position:()I
      57: invokevirtual #70                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      60: pop
      61: aload_2
      62: invokevirtual #73                 // Method io/grpc/alts/internal/AltsFraming$Producer.getRawFrame:()Ljava/nio/ByteBuffer;
      65: astore        4
      67: aload         4
      69: areturn

  private static void copy(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          74
       7: aload_1
       8: invokevirtual #86                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      11: ifeq          74
      14: aload_0
      15: invokevirtual #47                 // Method java/nio/ByteBuffer.remaining:()I
      18: aload_1
      19: invokevirtual #47                 // Method java/nio/ByteBuffer.remaining:()I
      22: if_icmplt     34
      25: aload_0
      26: aload_1
      27: invokevirtual #90                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      30: pop
      31: goto          74
      34: aload_0
      35: invokevirtual #47                 // Method java/nio/ByteBuffer.remaining:()I
      38: aload_1
      39: invokevirtual #47                 // Method java/nio/ByteBuffer.remaining:()I
      42: invokestatic  #96                 // Method java/lang/Math.min:(II)I
      45: istore_2
      46: aload_1
      47: invokevirtual #99                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      50: astore_3
      51: aload_3
      52: iload_2
      53: invokevirtual #61                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      56: pop
      57: aload_0
      58: aload_3
      59: invokevirtual #90                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      62: pop
      63: aload_1
      64: aload_1
      65: invokevirtual #55                 // Method java/nio/ByteBuffer.position:()I
      68: iload_2
      69: iadd
      70: invokevirtual #70                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      73: pop
      74: return

  static void access$000(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // Method copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
       5: return
}
