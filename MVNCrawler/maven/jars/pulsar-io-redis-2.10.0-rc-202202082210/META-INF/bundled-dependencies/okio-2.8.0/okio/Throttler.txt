Compiled from "Throttler.kt"
public final class okio.Throttler {
  private long bytesPerSecond;

  private long waitByteCount;

  private long maxByteCount;

  private long allocatedUntil;

  public final void bytesPerSecond(long, long, long);
    Code:
       0: aload_0
       1: astore        7
       3: iconst_0
       4: istore        8
       6: iconst_0
       7: istore        9
       9: iconst_0
      10: istore        10
      12: aload         7
      14: monitorenter
      15: nop
      16: iconst_0
      17: istore        11
      19: lload_1
      20: lconst_0
      21: lcmp
      22: iflt          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: istore        12
      32: iconst_0
      33: istore        13
      35: iconst_0
      36: istore        14
      38: iconst_0
      39: istore        14
      41: iconst_0
      42: istore        15
      44: iload         12
      46: ifne          72
      49: iconst_0
      50: istore        16
      52: ldc           #12                 // String Failed requirement.
      54: astore        15
      56: new           #14                 // class java/lang/IllegalArgumentException
      59: dup
      60: aload         15
      62: invokevirtual #18                 // Method java/lang/Object.toString:()Ljava/lang/String;
      65: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: checkcast     #24                 // class java/lang/Throwable
      71: athrow
      72: lload_3
      73: lconst_0
      74: lcmp
      75: ifle          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: istore        12
      85: iconst_0
      86: istore        13
      88: iconst_0
      89: istore        14
      91: iconst_0
      92: istore        14
      94: iconst_0
      95: istore        15
      97: iload         12
      99: ifne          125
     102: iconst_0
     103: istore        16
     105: ldc           #12                 // String Failed requirement.
     107: astore        15
     109: new           #14                 // class java/lang/IllegalArgumentException
     112: dup
     113: aload         15
     115: invokevirtual #18                 // Method java/lang/Object.toString:()Ljava/lang/String;
     118: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     121: checkcast     #24                 // class java/lang/Throwable
     124: athrow
     125: lload         5
     127: lload_3
     128: lcmp
     129: iflt          136
     132: iconst_1
     133: goto          137
     136: iconst_0
     137: istore        12
     139: iconst_0
     140: istore        13
     142: iconst_0
     143: istore        14
     145: iconst_0
     146: istore        14
     148: iconst_0
     149: istore        15
     151: iload         12
     153: ifne          179
     156: iconst_0
     157: istore        16
     159: ldc           #12                 // String Failed requirement.
     161: astore        15
     163: new           #14                 // class java/lang/IllegalArgumentException
     166: dup
     167: aload         15
     169: invokevirtual #18                 // Method java/lang/Object.toString:()Ljava/lang/String;
     172: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     175: checkcast     #24                 // class java/lang/Throwable
     178: athrow
     179: aload_0
     180: lload_1
     181: putfield      #26                 // Field bytesPerSecond:J
     184: aload_0
     185: lload_3
     186: putfield      #28                 // Field waitByteCount:J
     189: aload_0
     190: lload         5
     192: putfield      #30                 // Field maxByteCount:J
     195: aload_0
     196: dup
     197: ifnonnull     210
     200: new           #32                 // class java/lang/NullPointerException
     203: dup
     204: ldc           #34                 // String null cannot be cast to non-null type java.lang.Object
     206: invokespecial #35                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     209: athrow
     210: checkcast     #4                  // class java/lang/Object
     213: invokevirtual #39                 // Method java/lang/Object.notifyAll:()V
     216: getstatic     #45                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     219: astore        10
     221: aload         7
     223: monitorexit
     224: goto          235
     227: astore        10
     229: aload         7
     231: monitorexit
     232: aload         10
     234: athrow
     235: nop
     236: return
    Exception table:
       from    to  target type
          15   221   227   any
         227   229   227   any

  public static void bytesPerSecond$default(okio.Throttler, long, long, long, int, java.lang.Object);
    Code:
       0: iload         7
       2: iconst_2
       3: iand
       4: ifeq          12
       7: aload_0
       8: getfield      #28                 // Field waitByteCount:J
      11: lstore_3
      12: iload         7
      14: iconst_4
      15: iand
      16: ifeq          25
      19: aload_0
      20: getfield      #30                 // Field maxByteCount:J
      23: lstore        5
      25: aload_0
      26: lload_1
      27: lload_3
      28: lload         5
      30: invokevirtual #56                 // Method bytesPerSecond:(JJJ)V
      33: return

  public final void bytesPerSecond(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: lconst_0
       4: iconst_4
       5: aconst_null
       6: invokestatic  #59                 // Method bytesPerSecond$default:(Lokio/Throttler;JJJILjava/lang/Object;)V
       9: return

  public final void bytesPerSecond(long);
    Code:
       0: aload_0
       1: lload_1
       2: lconst_0
       3: lconst_0
       4: bipush        6
       6: aconst_null
       7: invokestatic  #59                 // Method bytesPerSecond$default:(Lokio/Throttler;JJJILjava/lang/Object;)V
      10: return

  public final long take$okio(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iconst_0
      16: istore        5
      18: iconst_0
      19: istore        5
      21: iconst_0
      22: istore        6
      24: iload_3
      25: ifne          51
      28: iconst_0
      29: istore        7
      31: ldc           #12                 // String Failed requirement.
      33: astore        6
      35: new           #14                 // class java/lang/IllegalArgumentException
      38: dup
      39: aload         6
      41: invokevirtual #18                 // Method java/lang/Object.toString:()Ljava/lang/String;
      44: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: checkcast     #24                 // class java/lang/Throwable
      50: athrow
      51: aload_0
      52: astore_3
      53: iconst_0
      54: istore        4
      56: iconst_0
      57: istore        5
      59: iconst_0
      60: istore        6
      62: aload_3
      63: monitorenter
      64: nop
      65: iconst_0
      66: istore        7
      68: nop
      69: invokestatic  #68                 // Method java/lang/System.nanoTime:()J
      72: lstore        8
      74: aload_0
      75: lload         8
      77: lload_1
      78: invokevirtual #72                 // Method byteCountOrWaitNanos$okio:(JJ)J
      81: lstore        10
      83: lload         10
      85: lconst_0
      86: lcmp
      87: iflt          99
      90: lload         10
      92: lstore        12
      94: aload_3
      95: monitorexit
      96: lload         12
      98: lreturn
      99: aload_0
     100: lload         10
     102: lneg
     103: invokespecial #75                 // Method waitNanos:(J)V
     106: goto          68
     109: astore        6
     111: aload_3
     112: monitorexit
     113: aload         6
     115: athrow
    Exception table:
       from    to  target type
          64    94   109   any
          99   109   109   any
         109   111   109   any

  public final long byteCountOrWaitNanos$okio(long, long);
    Code:
       0: aload_0
       1: getfield      #26                 // Field bytesPerSecond:J
       4: lconst_0
       5: lcmp
       6: ifne          11
       9: lload_3
      10: lreturn
      11: aload_0
      12: getfield      #82                 // Field allocatedUntil:J
      15: lload_1
      16: lsub
      17: lstore        7
      19: lconst_0
      20: lstore        9
      22: iconst_0
      23: istore        11
      25: lload         7
      27: lload         9
      29: invokestatic  #87                 // Method java/lang/Math.max:(JJ)J
      32: lstore        5
      34: aload_0
      35: getfield      #30                 // Field maxByteCount:J
      38: aload_0
      39: lload         5
      41: invokespecial #90                 // Method nanosToBytes:(J)J
      44: lsub
      45: lstore        7
      47: lload         7
      49: lload_3
      50: lcmp
      51: iflt          70
      54: aload_0
      55: lload_1
      56: lload         5
      58: ladd
      59: aload_0
      60: lload_3
      61: invokespecial #93                 // Method bytesToNanos:(J)J
      64: ladd
      65: putfield      #82                 // Field allocatedUntil:J
      68: lload_3
      69: lreturn
      70: lload         7
      72: aload_0
      73: getfield      #28                 // Field waitByteCount:J
      76: lcmp
      77: iflt          97
      80: aload_0
      81: lload_1
      82: aload_0
      83: aload_0
      84: getfield      #30                 // Field maxByteCount:J
      87: invokespecial #93                 // Method bytesToNanos:(J)J
      90: ladd
      91: putfield      #82                 // Field allocatedUntil:J
      94: lload         7
      96: lreturn
      97: aload_0
      98: getfield      #28                 // Field waitByteCount:J
     101: lstore        11
     103: iconst_0
     104: istore        13
     106: lload         11
     108: lload_3
     109: invokestatic  #96                 // Method java/lang/Math.min:(JJ)J
     112: lstore        9
     114: lload         5
     116: aload_0
     117: lload         9
     119: aload_0
     120: getfield      #30                 // Field maxByteCount:J
     123: lsub
     124: invokespecial #93                 // Method bytesToNanos:(J)J
     127: ladd
     128: lstore        11
     130: lload         11
     132: lconst_0
     133: lcmp
     134: ifne          154
     137: aload_0
     138: lload_1
     139: aload_0
     140: aload_0
     141: getfield      #30                 // Field maxByteCount:J
     144: invokespecial #93                 // Method bytesToNanos:(J)J
     147: ladd
     148: putfield      #82                 // Field allocatedUntil:J
     151: lload         9
     153: lreturn
     154: lload         11
     156: lneg
     157: lreturn

  private final long nanosToBytes(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #26                 // Field bytesPerSecond:J
       5: lmul
       6: ldc2_w        #101                // long 1000000000l
       9: ldiv
      10: lreturn

  private final long bytesToNanos(long);
    Code:
       0: lload_1
       1: ldc2_w        #101                // long 1000000000l
       4: lmul
       5: aload_0
       6: getfield      #26                 // Field bytesPerSecond:J
       9: ldiv
      10: lreturn

  private final void waitNanos(long);
    Code:
       0: lload_1
       1: ldc2_w        #105                // long 1000000l
       4: ldiv
       5: lstore_3
       6: lload_1
       7: lload_3
       8: ldc2_w        #105                // long 1000000l
      11: lmul
      12: lsub
      13: lstore        5
      15: aload_0
      16: dup
      17: ifnonnull     30
      20: new           #32                 // class java/lang/NullPointerException
      23: dup
      24: ldc           #34                 // String null cannot be cast to non-null type java.lang.Object
      26: invokespecial #35                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: checkcast     #4                  // class java/lang/Object
      33: lload_3
      34: lload         5
      36: l2i
      37: invokevirtual #110                // Method java/lang/Object.wait:(JI)V
      40: return

  public final okio.Source source(okio.Source);
    Code:
       0: aload_1
       1: ldc           #117                // String source
       3: invokestatic  #123                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #125                // class okio/Throttler$source$1
       9: dup
      10: aload_0
      11: aload_1
      12: aload_1
      13: invokespecial #128                // Method okio/Throttler$source$1."<init>":(Lokio/Throttler;Lokio/Source;Lokio/Source;)V
      16: checkcast     #130                // class okio/Source
      19: areturn

  public final okio.Sink sink(okio.Sink);
    Code:
       0: aload_1
       1: ldc           #134                // String sink
       3: invokestatic  #123                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #136                // class okio/Throttler$sink$1
       9: dup
      10: aload_0
      11: aload_1
      12: aload_1
      13: invokespecial #139                // Method okio/Throttler$sink$1."<init>":(Lokio/Throttler;Lokio/Sink;Lokio/Sink;)V
      16: checkcast     #141                // class okio/Sink
      19: areturn

  public okio.Throttler(long);
    Code:
       0: aload_0
       1: invokespecial #144                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #82                 // Field allocatedUntil:J
       9: aload_0
      10: ldc2_w        #145                // long 8192l
      13: putfield      #28                 // Field waitByteCount:J
      16: aload_0
      17: ldc2_w        #147                // long 262144l
      20: putfield      #30                 // Field maxByteCount:J
      23: return

  public okio.Throttler();
    Code:
       0: aload_0
       1: invokestatic  #68                 // Method java/lang/System.nanoTime:()J
       4: invokespecial #150                // Method "<init>":(J)V
       7: return
}
