public final class okio.Okio {
  public static final boolean isAndroidGetsocknameError(java.lang.AssertionError);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method okio/Okio__JvmOkioKt.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z
       4: ireturn

  public static final okio.Sink blackhole();
    Code:
       0: invokestatic  #21                 // Method okio/Okio__OkioKt.blackhole:()Lokio/Sink;
       3: areturn

  public static final okio.Sink appendingSink(java.io.File) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method okio/Okio__JvmOkioKt.appendingSink:(Ljava/io/File;)Lokio/Sink;
       4: areturn

  public static final okio.BufferedSink buffer(okio.Sink);
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method okio/Okio__OkioKt.buffer:(Lokio/Sink;)Lokio/BufferedSink;
       4: areturn

  public static final okio.BufferedSource buffer(okio.Source);
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method okio/Okio__OkioKt.buffer:(Lokio/Source;)Lokio/BufferedSource;
       4: areturn

  public static final okio.Sink sink(java.io.File, boolean) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #44                 // Method okio/Okio__JvmOkioKt.sink:(Ljava/io/File;Z)Lokio/Sink;
       5: areturn

  public static okio.Sink sink$default(java.io.File, boolean, int, java.lang.Object) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: invokestatic  #51                 // Method okio/Okio__JvmOkioKt.sink$default:(Ljava/io/File;ZILjava/lang/Object;)Lokio/Sink;
       7: areturn

  public static final okio.Sink sink(java.io.File) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: aconst_null
       4: invokestatic  #52                 // Method sink$default:(Ljava/io/File;ZILjava/lang/Object;)Lokio/Sink;
       7: areturn

  public static final okio.Sink sink(java.io.OutputStream);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method okio/Okio__JvmOkioKt.sink:(Ljava/io/OutputStream;)Lokio/Sink;
       4: areturn

  public static final okio.Sink sink(java.net.Socket) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method okio/Okio__JvmOkioKt.sink:(Ljava/net/Socket;)Lokio/Sink;
       4: areturn

  public static final okio.Sink sink(java.nio.file.Path, java.nio.file.OpenOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // Method okio/Okio__JvmOkioKt.sink:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lokio/Sink;
       5: areturn

  public static final okio.Source source(java.io.File) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: invokestatic  #73                 // Method okio/Okio__JvmOkioKt.source:(Ljava/io/File;)Lokio/Source;
       4: areturn

  public static final okio.Source source(java.io.InputStream);
    Code:
       0: aload_0
       1: invokestatic  #77                 // Method okio/Okio__JvmOkioKt.source:(Ljava/io/InputStream;)Lokio/Source;
       4: areturn

  public static final okio.Source source(java.net.Socket) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #81                 // Method okio/Okio__JvmOkioKt.source:(Ljava/net/Socket;)Lokio/Source;
       4: areturn

  public static final okio.Source source(java.nio.file.Path, java.nio.file.OpenOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method okio/Okio__JvmOkioKt.source:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lokio/Source;
       5: areturn
}
