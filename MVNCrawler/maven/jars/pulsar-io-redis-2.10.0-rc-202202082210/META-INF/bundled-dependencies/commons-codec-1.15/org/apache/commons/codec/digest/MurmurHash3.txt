Compiled from "MurmurHash3.java"
public final class org.apache.commons.codec.digest.MurmurHash3 {
  public static final long NULL_HASHCODE;

  public static final int DEFAULT_SEED;

  static final int LONG_BYTES;

  static final int INTEGER_BYTES;

  static final int SHORT_BYTES;

  private static final int C1_32;

  private static final int C2_32;

  private static final int R1_32;

  private static final int R2_32;

  private static final int M_32;

  private static final int N_32;

  private static final long C1;

  private static final long C2;

  private static final int R1;

  private static final int R2;

  private static final int R3;

  private static final int M;

  private static final int N1;

  private static final int N2;

  private org.apache.commons.codec.digest.MurmurHash3();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: return

  public static int hash32(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: ldc           #10                 // int 104729
       4: invokestatic  #11                 // Method hash32:(JJI)I
       7: ireturn

  public static int hash32(long, long, int);
    Code:
       0: iload         4
       2: istore        5
       4: lload_0
       5: invokestatic  #12                 // Method java/lang/Long.reverseBytes:(J)J
       8: lstore        6
      10: lload_2
      11: invokestatic  #12                 // Method java/lang/Long.reverseBytes:(J)J
      14: lstore        8
      16: lload         6
      18: l2i
      19: iload         5
      21: invokestatic  #7                  // Method mix32:(II)I
      24: istore        5
      26: lload         6
      28: bipush        32
      30: lushr
      31: l2i
      32: iload         5
      34: invokestatic  #7                  // Method mix32:(II)I
      37: istore        5
      39: lload         8
      41: l2i
      42: iload         5
      44: invokestatic  #7                  // Method mix32:(II)I
      47: istore        5
      49: lload         8
      51: bipush        32
      53: lushr
      54: l2i
      55: iload         5
      57: invokestatic  #7                  // Method mix32:(II)I
      60: istore        5
      62: iload         5
      64: bipush        16
      66: ixor
      67: istore        5
      69: iload         5
      71: invokestatic  #5                  // Method fmix32:(I)I
      74: ireturn

  public static int hash32(long);
    Code:
       0: lload_0
       1: ldc           #10                 // int 104729
       3: invokestatic  #13                 // Method hash32:(JI)I
       6: ireturn

  public static int hash32(long, int);
    Code:
       0: iload_2
       1: istore_3
       2: lload_0
       3: invokestatic  #12                 // Method java/lang/Long.reverseBytes:(J)J
       6: lstore        4
       8: lload         4
      10: l2i
      11: iload_3
      12: invokestatic  #7                  // Method mix32:(II)I
      15: istore_3
      16: lload         4
      18: bipush        32
      20: lushr
      21: l2i
      22: iload_3
      23: invokestatic  #7                  // Method mix32:(II)I
      26: istore_3
      27: iload_3
      28: bipush        8
      30: ixor
      31: istore_3
      32: iload_3
      33: invokestatic  #5                  // Method fmix32:(I)I
      36: ireturn

  public static int hash32(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: ldc           #10                 // int 104729
       6: invokestatic  #14                 // Method hash32:([BIII)I
       9: ireturn

  public static int hash32(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       4: astore_1
       5: aload_1
       6: iconst_0
       7: aload_1
       8: arraylength
       9: ldc           #10                 // int 104729
      11: invokestatic  #14                 // Method hash32:([BIII)I
      14: ireturn

  public static int hash32(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #10                 // int 104729
       4: invokestatic  #16                 // Method hash32:([BII)I
       7: ireturn

  public static int hash32(byte[], int, int);
    Code:
       0: aload_0
       1: iconst_0
       2: iload_1
       3: iload_2
       4: invokestatic  #14                 // Method hash32:([BIII)I
       7: ireturn

  public static int hash32(byte[], int, int, int);
    Code:
       0: iload_3
       1: istore        4
       3: iload_2
       4: iconst_2
       5: ishr
       6: istore        5
       8: iconst_0
       9: istore        6
      11: iload         6
      13: iload         5
      15: if_icmpge     49
      18: iload_1
      19: iload         6
      21: iconst_2
      22: ishl
      23: iadd
      24: istore        7
      26: aload_0
      27: iload         7
      29: invokestatic  #6                  // Method getLittleEndianInt:([BI)I
      32: istore        8
      34: iload         8
      36: iload         4
      38: invokestatic  #7                  // Method mix32:(II)I
      41: istore        4
      43: iinc          6, 1
      46: goto          11
      49: iload_1
      50: iload         5
      52: iconst_2
      53: ishl
      54: iadd
      55: istore        6
      57: iconst_0
      58: istore        7
      60: iload_1
      61: iload_2
      62: iadd
      63: iload         6
      65: isub
      66: tableswitch   { // 1 to 3
                     1: 120
                     2: 106
                     3: 92
               default: 159
          }
      92: iload         7
      94: aload_0
      95: iload         6
      97: iconst_2
      98: iadd
      99: baload
     100: bipush        16
     102: ishl
     103: ixor
     104: istore        7
     106: iload         7
     108: aload_0
     109: iload         6
     111: iconst_1
     112: iadd
     113: baload
     114: bipush        8
     116: ishl
     117: ixor
     118: istore        7
     120: iload         7
     122: aload_0
     123: iload         6
     125: baload
     126: ixor
     127: istore        7
     129: iload         7
     131: ldc           #17                 // int -862048943
     133: imul
     134: istore        7
     136: iload         7
     138: bipush        15
     140: invokestatic  #18                 // Method java/lang/Integer.rotateLeft:(II)I
     143: istore        7
     145: iload         7
     147: ldc           #19                 // int 461845907
     149: imul
     150: istore        7
     152: iload         4
     154: iload         7
     156: ixor
     157: istore        4
     159: iload         4
     161: iload_2
     162: ixor
     163: istore        4
     165: iload         4
     167: invokestatic  #5                  // Method fmix32:(I)I
     170: ireturn

  public static int hash32x86(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: iconst_0
       5: invokestatic  #20                 // Method hash32x86:([BIII)I
       8: ireturn

  public static int hash32x86(byte[], int, int, int);
    Code:
       0: iload_3
       1: istore        4
       3: iload_2
       4: iconst_2
       5: ishr
       6: istore        5
       8: iconst_0
       9: istore        6
      11: iload         6
      13: iload         5
      15: if_icmpge     49
      18: iload_1
      19: iload         6
      21: iconst_2
      22: ishl
      23: iadd
      24: istore        7
      26: aload_0
      27: iload         7
      29: invokestatic  #6                  // Method getLittleEndianInt:([BI)I
      32: istore        8
      34: iload         8
      36: iload         4
      38: invokestatic  #7                  // Method mix32:(II)I
      41: istore        4
      43: iinc          6, 1
      46: goto          11
      49: iload_1
      50: iload         5
      52: iconst_2
      53: ishl
      54: iadd
      55: istore        6
      57: iconst_0
      58: istore        7
      60: iload_1
      61: iload_2
      62: iadd
      63: iload         6
      65: isub
      66: tableswitch   { // 1 to 3
                     1: 128
                     2: 110
                     3: 92
               default: 171
          }
      92: iload         7
      94: aload_0
      95: iload         6
      97: iconst_2
      98: iadd
      99: baload
     100: sipush        255
     103: iand
     104: bipush        16
     106: ishl
     107: ixor
     108: istore        7
     110: iload         7
     112: aload_0
     113: iload         6
     115: iconst_1
     116: iadd
     117: baload
     118: sipush        255
     121: iand
     122: bipush        8
     124: ishl
     125: ixor
     126: istore        7
     128: iload         7
     130: aload_0
     131: iload         6
     133: baload
     134: sipush        255
     137: iand
     138: ixor
     139: istore        7
     141: iload         7
     143: ldc           #17                 // int -862048943
     145: imul
     146: istore        7
     148: iload         7
     150: bipush        15
     152: invokestatic  #18                 // Method java/lang/Integer.rotateLeft:(II)I
     155: istore        7
     157: iload         7
     159: ldc           #19                 // int 461845907
     161: imul
     162: istore        7
     164: iload         4
     166: iload         7
     168: ixor
     169: istore        4
     171: iload         4
     173: iload_2
     174: ixor
     175: istore        4
     177: iload         4
     179: invokestatic  #5                  // Method fmix32:(I)I
     182: ireturn

  public static long hash64(long);
    Code:
       0: ldc2_w        #21                 // long 104729l
       3: lstore_2
       4: lload_0
       5: invokestatic  #12                 // Method java/lang/Long.reverseBytes:(J)J
       8: lstore        4
      10: bipush        8
      12: istore        6
      14: lload         4
      16: ldc2_w        #23                 // long -8663945395140668459l
      19: lmul
      20: lstore        4
      22: lload         4
      24: bipush        31
      26: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
      29: lstore        4
      31: lload         4
      33: ldc2_w        #26                 // long 5545529020109919103l
      36: lmul
      37: lstore        4
      39: lload_2
      40: lload         4
      42: lxor
      43: lstore_2
      44: lload_2
      45: bipush        27
      47: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
      50: ldc2_w        #28                 // long 5l
      53: lmul
      54: ldc2_w        #30                 // long 1390208809l
      57: ladd
      58: lstore_2
      59: lload_2
      60: ldc2_w        #32                 // long 8l
      63: lxor
      64: lstore_2
      65: lload_2
      66: invokestatic  #34                 // Method fmix64:(J)J
      69: lstore_2
      70: lload_2
      71: lreturn

  public static long hash64(int);
    Code:
       0: iload_0
       1: invokestatic  #35                 // Method java/lang/Integer.reverseBytes:(I)I
       4: i2l
       5: ldc2_w        #36                 // long 4294967295l
       8: land
       9: lstore_1
      10: iconst_4
      11: istore_3
      12: ldc2_w        #21                 // long 104729l
      15: lstore        4
      17: lload_1
      18: ldc2_w        #23                 // long -8663945395140668459l
      21: lmul
      22: lstore_1
      23: lload_1
      24: bipush        31
      26: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
      29: lstore_1
      30: lload_1
      31: ldc2_w        #26                 // long 5545529020109919103l
      34: lmul
      35: lstore_1
      36: lload         4
      38: lload_1
      39: lxor
      40: lstore        4
      42: lload         4
      44: ldc2_w        #38                 // long 4l
      47: lxor
      48: lstore        4
      50: lload         4
      52: invokestatic  #34                 // Method fmix64:(J)J
      55: lstore        4
      57: lload         4
      59: lreturn

  public static long hash64(short);
    Code:
       0: ldc2_w        #21                 // long 104729l
       3: lstore_1
       4: lconst_0
       5: lstore_3
       6: lload_3
       7: iload_0
       8: i2l
       9: ldc2_w        #40                 // long 255l
      12: land
      13: bipush        8
      15: lshl
      16: lxor
      17: lstore_3
      18: lload_3
      19: iload_0
      20: ldc           #42                 // int 65280
      22: iand
      23: bipush        8
      25: ishr
      26: i2l
      27: ldc2_w        #40                 // long 255l
      30: land
      31: lxor
      32: lstore_3
      33: lload_3
      34: ldc2_w        #23                 // long -8663945395140668459l
      37: lmul
      38: lstore_3
      39: lload_3
      40: bipush        31
      42: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
      45: lstore_3
      46: lload_3
      47: ldc2_w        #26                 // long 5545529020109919103l
      50: lmul
      51: lstore_3
      52: lload_1
      53: lload_3
      54: lxor
      55: lstore_1
      56: lload_1
      57: ldc2_w        #43                 // long 2l
      60: lxor
      61: lstore_1
      62: lload_1
      63: invokestatic  #34                 // Method fmix64:(J)J
      66: lstore_1
      67: lload_1
      68: lreturn

  public static long hash64(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: ldc           #10                 // int 104729
       6: invokestatic  #45                 // Method hash64:([BIII)J
       9: lreturn

  public static long hash64(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: ldc           #10                 // int 104729
       5: invokestatic  #45                 // Method hash64:([BIII)J
       8: lreturn

  public static long hash64(byte[], int, int, int);
    Code:
       0: iload_3
       1: i2l
       2: lstore        4
       4: iload_2
       5: iconst_3
       6: ishr
       7: istore        6
       9: iconst_0
      10: istore        7
      12: iload         7
      14: iload         6
      16: if_icmpge     90
      19: iload_1
      20: iload         7
      22: iconst_3
      23: ishl
      24: iadd
      25: istore        8
      27: aload_0
      28: iload         8
      30: invokestatic  #46                 // Method getLittleEndianLong:([BI)J
      33: lstore        9
      35: lload         9
      37: ldc2_w        #23                 // long -8663945395140668459l
      40: lmul
      41: lstore        9
      43: lload         9
      45: bipush        31
      47: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
      50: lstore        9
      52: lload         9
      54: ldc2_w        #26                 // long 5545529020109919103l
      57: lmul
      58: lstore        9
      60: lload         4
      62: lload         9
      64: lxor
      65: lstore        4
      67: lload         4
      69: bipush        27
      71: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
      74: ldc2_w        #28                 // long 5l
      77: lmul
      78: ldc2_w        #30                 // long 1390208809l
      81: ladd
      82: lstore        4
      84: iinc          7, 1
      87: goto          12
      90: lconst_0
      91: lstore        7
      93: iload_1
      94: iload         6
      96: iconst_3
      97: ishl
      98: iadd
      99: istore        9
     101: iload_1
     102: iload_2
     103: iadd
     104: iload         9
     106: isub
     107: tableswitch   { // 1 to 7
                     1: 263
                     2: 244
                     3: 225
                     4: 206
                     5: 187
                     6: 168
                     7: 148
               default: 309
          }
     148: lload         7
     150: aload_0
     151: iload         9
     153: bipush        6
     155: iadd
     156: baload
     157: i2l
     158: ldc2_w        #40                 // long 255l
     161: land
     162: bipush        48
     164: lshl
     165: lxor
     166: lstore        7
     168: lload         7
     170: aload_0
     171: iload         9
     173: iconst_5
     174: iadd
     175: baload
     176: i2l
     177: ldc2_w        #40                 // long 255l
     180: land
     181: bipush        40
     183: lshl
     184: lxor
     185: lstore        7
     187: lload         7
     189: aload_0
     190: iload         9
     192: iconst_4
     193: iadd
     194: baload
     195: i2l
     196: ldc2_w        #40                 // long 255l
     199: land
     200: bipush        32
     202: lshl
     203: lxor
     204: lstore        7
     206: lload         7
     208: aload_0
     209: iload         9
     211: iconst_3
     212: iadd
     213: baload
     214: i2l
     215: ldc2_w        #40                 // long 255l
     218: land
     219: bipush        24
     221: lshl
     222: lxor
     223: lstore        7
     225: lload         7
     227: aload_0
     228: iload         9
     230: iconst_2
     231: iadd
     232: baload
     233: i2l
     234: ldc2_w        #40                 // long 255l
     237: land
     238: bipush        16
     240: lshl
     241: lxor
     242: lstore        7
     244: lload         7
     246: aload_0
     247: iload         9
     249: iconst_1
     250: iadd
     251: baload
     252: i2l
     253: ldc2_w        #40                 // long 255l
     256: land
     257: bipush        8
     259: lshl
     260: lxor
     261: lstore        7
     263: lload         7
     265: aload_0
     266: iload         9
     268: baload
     269: i2l
     270: ldc2_w        #40                 // long 255l
     273: land
     274: lxor
     275: lstore        7
     277: lload         7
     279: ldc2_w        #23                 // long -8663945395140668459l
     282: lmul
     283: lstore        7
     285: lload         7
     287: bipush        31
     289: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
     292: lstore        7
     294: lload         7
     296: ldc2_w        #26                 // long 5545529020109919103l
     299: lmul
     300: lstore        7
     302: lload         4
     304: lload         7
     306: lxor
     307: lstore        4
     309: lload         4
     311: iload_2
     312: i2l
     313: lxor
     314: lstore        4
     316: lload         4
     318: invokestatic  #34                 // Method fmix64:(J)J
     321: lstore        4
     323: lload         4
     325: lreturn

  public static long[] hash128(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: ldc           #10                 // int 104729
       6: invokestatic  #47                 // Method hash128:([BIII)[J
       9: areturn

  public static long[] hash128x64(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: iconst_0
       5: invokestatic  #48                 // Method hash128x64:([BIII)[J
       8: areturn

  public static long[] hash128(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       4: astore_1
       5: aload_1
       6: iconst_0
       7: aload_1
       8: arraylength
       9: ldc           #10                 // int 104729
      11: invokestatic  #47                 // Method hash128:([BIII)[J
      14: areturn

  public static long[] hash128(byte[], int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: i2l
       5: invokestatic  #49                 // Method hash128x64Internal:([BIIJ)[J
       8: areturn

  public static long[] hash128x64(byte[], int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: i2l
       5: ldc2_w        #36                 // long 4294967295l
       8: land
       9: invokestatic  #49                 // Method hash128x64Internal:([BIIJ)[J
      12: areturn

  private static long[] hash128x64Internal(byte[], int, int, long);
    Code:
       0: lload_3
       1: lstore        5
       3: lload_3
       4: lstore        7
       6: iload_2
       7: iconst_4
       8: ishr
       9: istore        9
      11: iconst_0
      12: istore        10
      14: iload         10
      16: iload         9
      18: if_icmpge     174
      21: iload_1
      22: iload         10
      24: iconst_4
      25: ishl
      26: iadd
      27: istore        11
      29: aload_0
      30: iload         11
      32: invokestatic  #46                 // Method getLittleEndianLong:([BI)J
      35: lstore        12
      37: aload_0
      38: iload         11
      40: bipush        8
      42: iadd
      43: invokestatic  #46                 // Method getLittleEndianLong:([BI)J
      46: lstore        14
      48: lload         12
      50: ldc2_w        #23                 // long -8663945395140668459l
      53: lmul
      54: lstore        12
      56: lload         12
      58: bipush        31
      60: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
      63: lstore        12
      65: lload         12
      67: ldc2_w        #26                 // long 5545529020109919103l
      70: lmul
      71: lstore        12
      73: lload         5
      75: lload         12
      77: lxor
      78: lstore        5
      80: lload         5
      82: bipush        27
      84: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
      87: lstore        5
      89: lload         5
      91: lload         7
      93: ladd
      94: lstore        5
      96: lload         5
      98: ldc2_w        #28                 // long 5l
     101: lmul
     102: ldc2_w        #30                 // long 1390208809l
     105: ladd
     106: lstore        5
     108: lload         14
     110: ldc2_w        #26                 // long 5545529020109919103l
     113: lmul
     114: lstore        14
     116: lload         14
     118: bipush        33
     120: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
     123: lstore        14
     125: lload         14
     127: ldc2_w        #23                 // long -8663945395140668459l
     130: lmul
     131: lstore        14
     133: lload         7
     135: lload         14
     137: lxor
     138: lstore        7
     140: lload         7
     142: bipush        31
     144: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
     147: lstore        7
     149: lload         7
     151: lload         5
     153: ladd
     154: lstore        7
     156: lload         7
     158: ldc2_w        #28                 // long 5l
     161: lmul
     162: ldc2_w        #50                 // long 944331445l
     165: ladd
     166: lstore        7
     168: iinc          10, 1
     171: goto          14
     174: lconst_0
     175: lstore        10
     177: lconst_0
     178: lstore        12
     180: iload_1
     181: iload         9
     183: iconst_4
     184: ishl
     185: iadd
     186: istore        14
     188: iload_1
     189: iload_2
     190: iadd
     191: iload         14
     193: isub
     194: tableswitch   { // 1 to 15
                     1: 572
                     2: 553
                     3: 534
                     4: 515
                     5: 496
                     6: 477
                     7: 457
                     8: 437
                     9: 388
                    10: 368
                    11: 348
                    12: 328
                    13: 308
                    14: 288
                    15: 268
               default: 618
          }
     268: lload         12
     270: aload_0
     271: iload         14
     273: bipush        14
     275: iadd
     276: baload
     277: i2l
     278: ldc2_w        #40                 // long 255l
     281: land
     282: bipush        48
     284: lshl
     285: lxor
     286: lstore        12
     288: lload         12
     290: aload_0
     291: iload         14
     293: bipush        13
     295: iadd
     296: baload
     297: i2l
     298: ldc2_w        #40                 // long 255l
     301: land
     302: bipush        40
     304: lshl
     305: lxor
     306: lstore        12
     308: lload         12
     310: aload_0
     311: iload         14
     313: bipush        12
     315: iadd
     316: baload
     317: i2l
     318: ldc2_w        #40                 // long 255l
     321: land
     322: bipush        32
     324: lshl
     325: lxor
     326: lstore        12
     328: lload         12
     330: aload_0
     331: iload         14
     333: bipush        11
     335: iadd
     336: baload
     337: i2l
     338: ldc2_w        #40                 // long 255l
     341: land
     342: bipush        24
     344: lshl
     345: lxor
     346: lstore        12
     348: lload         12
     350: aload_0
     351: iload         14
     353: bipush        10
     355: iadd
     356: baload
     357: i2l
     358: ldc2_w        #40                 // long 255l
     361: land
     362: bipush        16
     364: lshl
     365: lxor
     366: lstore        12
     368: lload         12
     370: aload_0
     371: iload         14
     373: bipush        9
     375: iadd
     376: baload
     377: i2l
     378: ldc2_w        #40                 // long 255l
     381: land
     382: bipush        8
     384: lshl
     385: lxor
     386: lstore        12
     388: lload         12
     390: aload_0
     391: iload         14
     393: bipush        8
     395: iadd
     396: baload
     397: sipush        255
     400: iand
     401: i2l
     402: lxor
     403: lstore        12
     405: lload         12
     407: ldc2_w        #26                 // long 5545529020109919103l
     410: lmul
     411: lstore        12
     413: lload         12
     415: bipush        33
     417: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
     420: lstore        12
     422: lload         12
     424: ldc2_w        #23                 // long -8663945395140668459l
     427: lmul
     428: lstore        12
     430: lload         7
     432: lload         12
     434: lxor
     435: lstore        7
     437: lload         10
     439: aload_0
     440: iload         14
     442: bipush        7
     444: iadd
     445: baload
     446: i2l
     447: ldc2_w        #40                 // long 255l
     450: land
     451: bipush        56
     453: lshl
     454: lxor
     455: lstore        10
     457: lload         10
     459: aload_0
     460: iload         14
     462: bipush        6
     464: iadd
     465: baload
     466: i2l
     467: ldc2_w        #40                 // long 255l
     470: land
     471: bipush        48
     473: lshl
     474: lxor
     475: lstore        10
     477: lload         10
     479: aload_0
     480: iload         14
     482: iconst_5
     483: iadd
     484: baload
     485: i2l
     486: ldc2_w        #40                 // long 255l
     489: land
     490: bipush        40
     492: lshl
     493: lxor
     494: lstore        10
     496: lload         10
     498: aload_0
     499: iload         14
     501: iconst_4
     502: iadd
     503: baload
     504: i2l
     505: ldc2_w        #40                 // long 255l
     508: land
     509: bipush        32
     511: lshl
     512: lxor
     513: lstore        10
     515: lload         10
     517: aload_0
     518: iload         14
     520: iconst_3
     521: iadd
     522: baload
     523: i2l
     524: ldc2_w        #40                 // long 255l
     527: land
     528: bipush        24
     530: lshl
     531: lxor
     532: lstore        10
     534: lload         10
     536: aload_0
     537: iload         14
     539: iconst_2
     540: iadd
     541: baload
     542: i2l
     543: ldc2_w        #40                 // long 255l
     546: land
     547: bipush        16
     549: lshl
     550: lxor
     551: lstore        10
     553: lload         10
     555: aload_0
     556: iload         14
     558: iconst_1
     559: iadd
     560: baload
     561: i2l
     562: ldc2_w        #40                 // long 255l
     565: land
     566: bipush        8
     568: lshl
     569: lxor
     570: lstore        10
     572: lload         10
     574: aload_0
     575: iload         14
     577: baload
     578: sipush        255
     581: iand
     582: i2l
     583: lxor
     584: lstore        10
     586: lload         10
     588: ldc2_w        #23                 // long -8663945395140668459l
     591: lmul
     592: lstore        10
     594: lload         10
     596: bipush        31
     598: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J
     601: lstore        10
     603: lload         10
     605: ldc2_w        #26                 // long 5545529020109919103l
     608: lmul
     609: lstore        10
     611: lload         5
     613: lload         10
     615: lxor
     616: lstore        5
     618: lload         5
     620: iload_2
     621: i2l
     622: lxor
     623: lstore        5
     625: lload         7
     627: iload_2
     628: i2l
     629: lxor
     630: lstore        7
     632: lload         5
     634: lload         7
     636: ladd
     637: lstore        5
     639: lload         7
     641: lload         5
     643: ladd
     644: lstore        7
     646: lload         5
     648: invokestatic  #34                 // Method fmix64:(J)J
     651: lstore        5
     653: lload         7
     655: invokestatic  #34                 // Method fmix64:(J)J
     658: lstore        7
     660: lload         5
     662: lload         7
     664: ladd
     665: lstore        5
     667: lload         7
     669: lload         5
     671: ladd
     672: lstore        7
     674: iconst_2
     675: newarray       long
     677: dup
     678: iconst_0
     679: lload         5
     681: lastore
     682: dup
     683: iconst_1
     684: lload         7
     686: lastore
     687: areturn

  private static long getLittleEndianLong(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: i2l
       4: ldc2_w        #40                 // long 255l
       7: land
       8: aload_0
       9: iload_1
      10: iconst_1
      11: iadd
      12: baload
      13: i2l
      14: ldc2_w        #40                 // long 255l
      17: land
      18: bipush        8
      20: lshl
      21: lor
      22: aload_0
      23: iload_1
      24: iconst_2
      25: iadd
      26: baload
      27: i2l
      28: ldc2_w        #40                 // long 255l
      31: land
      32: bipush        16
      34: lshl
      35: lor
      36: aload_0
      37: iload_1
      38: iconst_3
      39: iadd
      40: baload
      41: i2l
      42: ldc2_w        #40                 // long 255l
      45: land
      46: bipush        24
      48: lshl
      49: lor
      50: aload_0
      51: iload_1
      52: iconst_4
      53: iadd
      54: baload
      55: i2l
      56: ldc2_w        #40                 // long 255l
      59: land
      60: bipush        32
      62: lshl
      63: lor
      64: aload_0
      65: iload_1
      66: iconst_5
      67: iadd
      68: baload
      69: i2l
      70: ldc2_w        #40                 // long 255l
      73: land
      74: bipush        40
      76: lshl
      77: lor
      78: aload_0
      79: iload_1
      80: bipush        6
      82: iadd
      83: baload
      84: i2l
      85: ldc2_w        #40                 // long 255l
      88: land
      89: bipush        48
      91: lshl
      92: lor
      93: aload_0
      94: iload_1
      95: bipush        7
      97: iadd
      98: baload
      99: i2l
     100: ldc2_w        #40                 // long 255l
     103: land
     104: bipush        56
     106: lshl
     107: lor
     108: lreturn

  private static int getLittleEndianInt(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: aload_0
       8: iload_1
       9: iconst_1
      10: iadd
      11: baload
      12: sipush        255
      15: iand
      16: bipush        8
      18: ishl
      19: ior
      20: aload_0
      21: iload_1
      22: iconst_2
      23: iadd
      24: baload
      25: sipush        255
      28: iand
      29: bipush        16
      31: ishl
      32: ior
      33: aload_0
      34: iload_1
      35: iconst_3
      36: iadd
      37: baload
      38: sipush        255
      41: iand
      42: bipush        24
      44: ishl
      45: ior
      46: ireturn

  private static int mix32(int, int);
    Code:
       0: iload_0
       1: ldc           #17                 // int -862048943
       3: imul
       4: istore_0
       5: iload_0
       6: bipush        15
       8: invokestatic  #18                 // Method java/lang/Integer.rotateLeft:(II)I
      11: istore_0
      12: iload_0
      13: ldc           #19                 // int 461845907
      15: imul
      16: istore_0
      17: iload_1
      18: iload_0
      19: ixor
      20: istore_1
      21: iload_1
      22: bipush        13
      24: invokestatic  #18                 // Method java/lang/Integer.rotateLeft:(II)I
      27: iconst_5
      28: imul
      29: ldc           #52                 // int -430675100
      31: iadd
      32: ireturn

  private static int fmix32(int);
    Code:
       0: iload_0
       1: iload_0
       2: bipush        16
       4: iushr
       5: ixor
       6: istore_0
       7: iload_0
       8: ldc           #53                 // int -2048144789
      10: imul
      11: istore_0
      12: iload_0
      13: iload_0
      14: bipush        13
      16: iushr
      17: ixor
      18: istore_0
      19: iload_0
      20: ldc           #54                 // int -1028477387
      22: imul
      23: istore_0
      24: iload_0
      25: iload_0
      26: bipush        16
      28: iushr
      29: ixor
      30: istore_0
      31: iload_0
      32: ireturn

  private static long fmix64(long);
    Code:
       0: lload_0
       1: lload_0
       2: bipush        33
       4: lushr
       5: lxor
       6: lstore_0
       7: lload_0
       8: ldc2_w        #55                 // long -49064778989728563l
      11: lmul
      12: lstore_0
      13: lload_0
      14: lload_0
      15: bipush        33
      17: lushr
      18: lxor
      19: lstore_0
      20: lload_0
      21: ldc2_w        #57                 // long -4265267296055464877l
      24: lmul
      25: lstore_0
      26: lload_0
      27: lload_0
      28: bipush        33
      30: lushr
      31: lxor
      32: lstore_0
      33: lload_0
      34: lreturn

  static int access$000(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #7                  // Method mix32:(II)I
       5: ireturn

  static int access$100(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #6                  // Method getLittleEndianInt:([BI)I
       5: ireturn

  static int access$200(int);
    Code:
       0: iload_0
       1: invokestatic  #5                  // Method fmix32:(I)I
       4: ireturn
}
