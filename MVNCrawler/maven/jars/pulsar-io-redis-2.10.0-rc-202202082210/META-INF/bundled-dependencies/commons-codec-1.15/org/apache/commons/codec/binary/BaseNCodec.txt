Compiled from "BaseNCodec.java"
public abstract class org.apache.commons.codec.binary.BaseNCodec implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder {
  static final int EOF;

  public static final int MIME_CHUNK_SIZE;

  public static final int PEM_CHUNK_SIZE;

  private static final int DEFAULT_BUFFER_RESIZE_FACTOR;

  private static final int DEFAULT_BUFFER_SIZE;

  private static final int MAX_BUFFER_SIZE;

  protected static final int MASK_8BITS;

  protected static final byte PAD_DEFAULT;

  protected static final org.apache.commons.codec.CodecPolicy DECODING_POLICY_DEFAULT;

  static final byte[] CHUNK_SEPARATOR;

  protected final byte PAD;

  protected final byte pad;

  private final int unencodedBlockSize;

  private final int encodedBlockSize;

  protected final int lineLength;

  private final int chunkSeparatorLength;

  private final org.apache.commons.codec.CodecPolicy decodingPolicy;

  private static int compareUnsigned(int, int);
    Code:
       0: iload_0
       1: ldc           #2                  // int -2147483648
       3: iadd
       4: iload_1
       5: ldc           #2                  // int -2147483648
       7: iadd
       8: invokestatic  #3                  // Method java/lang/Integer.compare:(II)I
      11: ireturn

  private static int createPositiveCapacity(int);
    Code:
       0: iload_0
       1: ifge          36
       4: new           #4                  // class java/lang/OutOfMemoryError
       7: dup
       8: new           #5                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #7                  // String Unable to allocate array size:
      17: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_0
      21: i2l
      22: ldc2_w        #9                  // long 4294967295l
      25: land
      26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      29: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #13                 // Method java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload_0
      37: ldc           #15                 // int 2147483639
      39: if_icmple     46
      42: iload_0
      43: goto          48
      46: ldc           #15                 // int 2147483639
      48: ireturn

  public static byte[] getChunkSeparator();
    Code:
       0: getstatic     #16                 // Field CHUNK_SEPARATOR:[B
       3: invokevirtual #17                 // Method "[B".clone:()Ljava/lang/Object;
       6: checkcast     #18                 // class "[B"
       9: areturn

  protected static boolean isWhiteSpace(byte);
    Code:
       0: iload_0
       1: lookupswitch  { // 4
                     9: 44
                    10: 44
                    13: 44
                    32: 44
               default: 46
          }
      44: iconst_1
      45: ireturn
      46: iconst_0
      47: ireturn

  private static byte[] resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context, int);
    Code:
       0: aload_0
       1: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
       4: arraylength
       5: istore_2
       6: iload_2
       7: iconst_2
       8: imul
       9: istore_3
      10: iload_3
      11: iload_1
      12: invokestatic  #20                 // Method compareUnsigned:(II)I
      15: ifge          20
      18: iload_1
      19: istore_3
      20: iload_3
      21: ldc           #15                 // int 2147483639
      23: invokestatic  #20                 // Method compareUnsigned:(II)I
      26: ifle          34
      29: iload_1
      30: invokestatic  #21                 // Method createPositiveCapacity:(I)I
      33: istore_3
      34: iload_3
      35: newarray       byte
      37: astore        4
      39: aload_0
      40: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      43: iconst_0
      44: aload         4
      46: iconst_0
      47: aload_0
      48: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      51: arraylength
      52: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      55: aload_0
      56: aload         4
      58: putfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      61: aload         4
      63: areturn

  protected org.apache.commons.codec.binary.BaseNCodec(int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: bipush        61
       8: invokespecial #23                 // Method "<init>":(IIIIB)V
      11: return

  protected org.apache.commons.codec.binary.BaseNCodec(int, int, int, int, byte);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: getstatic     #24                 // Field DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;
      11: invokespecial #25                 // Method "<init>":(IIIIBLorg/apache/commons/codec/CodecPolicy;)V
      14: return

  protected org.apache.commons.codec.binary.BaseNCodec(int, int, int, int, byte, org.apache.commons.codec.CodecPolicy);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        61
       7: putfield      #27                 // Field PAD:B
      10: aload_0
      11: iload_1
      12: putfield      #28                 // Field unencodedBlockSize:I
      15: aload_0
      16: iload_2
      17: putfield      #29                 // Field encodedBlockSize:I
      20: iload_3
      21: ifle          33
      24: iload         4
      26: ifle          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: istore        7
      36: aload_0
      37: iload         7
      39: ifeq          50
      42: iload_3
      43: iload_2
      44: idiv
      45: iload_2
      46: imul
      47: goto          51
      50: iconst_0
      51: putfield      #30                 // Field lineLength:I
      54: aload_0
      55: iload         4
      57: putfield      #31                 // Field chunkSeparatorLength:I
      60: aload_0
      61: iload         5
      63: putfield      #32                 // Field pad:B
      66: aload_0
      67: aload         6
      69: ldc           #33                 // String codecPolicy
      71: invokestatic  #34                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      74: checkcast     #35                 // class org/apache/commons/codec/CodecPolicy
      77: putfield      #36                 // Field decodingPolicy:Lorg/apache/commons/codec/CodecPolicy;
      80: return

  int available(org.apache.commons.codec.binary.BaseNCodec$Context);
    Code:
       0: aload_1
       1: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
       4: ifnull        19
       7: aload_1
       8: getfield      #37                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      11: aload_1
      12: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      15: isub
      16: goto          20
      19: iconst_0
      20: ireturn

  protected boolean containsAlphabetOrPad(byte[]);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: astore_2
       8: aload_2
       9: arraylength
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     52
      20: aload_2
      21: iload         4
      23: baload
      24: istore        5
      26: aload_0
      27: getfield      #32                 // Field pad:B
      30: iload         5
      32: if_icmpeq     44
      35: aload_0
      36: iload         5
      38: invokevirtual #39                 // Method isInAlphabet:(B)Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: iinc          4, 1
      49: goto          14
      52: iconst_0
      53: ireturn

  public byte[] decode(byte[]);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          11
       9: aload_1
      10: areturn
      11: new           #40                 // class org/apache/commons/codec/binary/BaseNCodec$Context
      14: dup
      15: invokespecial #41                 // Method org/apache/commons/codec/binary/BaseNCodec$Context."<init>":()V
      18: astore_2
      19: aload_0
      20: aload_1
      21: iconst_0
      22: aload_1
      23: arraylength
      24: aload_2
      25: invokevirtual #42                 // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
      28: aload_0
      29: aload_1
      30: iconst_0
      31: iconst_m1
      32: aload_2
      33: invokevirtual #42                 // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
      36: aload_2
      37: getfield      #37                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      40: newarray       byte
      42: astore_3
      43: aload_0
      44: aload_3
      45: iconst_0
      46: aload_3
      47: arraylength
      48: aload_2
      49: invokevirtual #43                 // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I
      52: pop
      53: aload_3
      54: areturn

  abstract void decode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);

  public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException;
    Code:
       0: aload_1
       1: instanceof    #18                 // class "[B"
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: checkcast     #18                 // class "[B"
      12: checkcast     #18                 // class "[B"
      15: invokevirtual #44                 // Method decode:([B)[B
      18: areturn
      19: aload_1
      20: instanceof    #45                 // class java/lang/String
      23: ifeq          35
      26: aload_0
      27: aload_1
      28: checkcast     #45                 // class java/lang/String
      31: invokevirtual #46                 // Method decode:(Ljava/lang/String;)[B
      34: areturn
      35: new           #47                 // class org/apache/commons/codec/DecoderException
      38: dup
      39: ldc           #48                 // String Parameter supplied to Base-N decode is not a byte[] or a String
      41: invokespecial #49                 // Method org/apache/commons/codec/DecoderException."<init>":(Ljava/lang/String;)V
      44: athrow

  public byte[] decode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       5: invokevirtual #44                 // Method decode:([B)[B
       8: areturn

  public byte[] encode(byte[]);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          11
       9: aload_1
      10: areturn
      11: aload_0
      12: aload_1
      13: iconst_0
      14: aload_1
      15: arraylength
      16: invokevirtual #51                 // Method encode:([BII)[B
      19: areturn

  public byte[] encode(byte[], int, int);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          11
       9: aload_1
      10: areturn
      11: new           #40                 // class org/apache/commons/codec/binary/BaseNCodec$Context
      14: dup
      15: invokespecial #41                 // Method org/apache/commons/codec/binary/BaseNCodec$Context."<init>":()V
      18: astore        4
      20: aload_0
      21: aload_1
      22: iload_2
      23: iload_3
      24: aload         4
      26: invokevirtual #52                 // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
      29: aload_0
      30: aload_1
      31: iload_2
      32: iconst_m1
      33: aload         4
      35: invokevirtual #52                 // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
      38: aload         4
      40: getfield      #37                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      43: aload         4
      45: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      48: isub
      49: newarray       byte
      51: astore        5
      53: aload_0
      54: aload         5
      56: iconst_0
      57: aload         5
      59: arraylength
      60: aload         4
      62: invokevirtual #43                 // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I
      65: pop
      66: aload         5
      68: areturn

  abstract void encode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);

  public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException;
    Code:
       0: aload_1
       1: instanceof    #18                 // class "[B"
       4: ifne          17
       7: new           #53                 // class org/apache/commons/codec/EncoderException
      10: dup
      11: ldc           #54                 // String Parameter supplied to Base-N encode is not a byte[]
      13: invokespecial #55                 // Method org/apache/commons/codec/EncoderException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: checkcast     #18                 // class "[B"
      22: checkcast     #18                 // class "[B"
      25: invokevirtual #56                 // Method encode:([B)[B
      28: areturn

  public java.lang.String encodeAsString(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method encode:([B)[B
       5: invokestatic  #57                 // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;
       8: areturn

  public java.lang.String encodeToString(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method encode:([B)[B
       5: invokestatic  #57                 // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;
       8: areturn

  protected byte[] ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec$Context);
    Code:
       0: aload_2
       1: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
       4: ifnonnull     34
       7: aload_2
       8: iload_1
       9: aload_0
      10: invokevirtual #58                 // Method getDefaultBufferSize:()I
      13: invokestatic  #59                 // Method java/lang/Math.max:(II)I
      16: newarray       byte
      18: putfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      21: aload_2
      22: iconst_0
      23: putfield      #37                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      26: aload_2
      27: iconst_0
      28: putfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      31: goto          60
      34: aload_2
      35: getfield      #37                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      38: iload_1
      39: iadd
      40: aload_2
      41: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      44: arraylength
      45: isub
      46: ifle          60
      49: aload_2
      50: aload_2
      51: getfield      #37                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      54: iload_1
      55: iadd
      56: invokestatic  #60                 // Method resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B
      59: areturn
      60: aload_2
      61: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      64: areturn

  public org.apache.commons.codec.CodecPolicy getCodecPolicy();
    Code:
       0: aload_0
       1: getfield      #36                 // Field decodingPolicy:Lorg/apache/commons/codec/CodecPolicy;
       4: areturn

  protected int getDefaultBufferSize();
    Code:
       0: sipush        8192
       3: ireturn

  public long getEncodedLength(byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: getfield      #28                 // Field unencodedBlockSize:I
       6: iadd
       7: iconst_1
       8: isub
       9: aload_0
      10: getfield      #28                 // Field unencodedBlockSize:I
      13: idiv
      14: i2l
      15: aload_0
      16: getfield      #29                 // Field encodedBlockSize:I
      19: i2l
      20: lmul
      21: lstore_2
      22: aload_0
      23: getfield      #30                 // Field lineLength:I
      26: ifle          53
      29: lload_2
      30: lload_2
      31: aload_0
      32: getfield      #30                 // Field lineLength:I
      35: i2l
      36: ladd
      37: lconst_1
      38: lsub
      39: aload_0
      40: getfield      #30                 // Field lineLength:I
      43: i2l
      44: ldiv
      45: aload_0
      46: getfield      #31                 // Field chunkSeparatorLength:I
      49: i2l
      50: lmul
      51: ladd
      52: lstore_2
      53: lload_2
      54: lreturn

  boolean hasData(org.apache.commons.codec.binary.BaseNCodec$Context);
    Code:
       0: aload_1
       1: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected abstract boolean isInAlphabet(byte);

  public boolean isInAlphabet(byte[], boolean);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     60
      16: aload_3
      17: iload         5
      19: baload
      20: istore        6
      22: aload_0
      23: iload         6
      25: invokevirtual #39                 // Method isInAlphabet:(B)Z
      28: ifne          54
      31: iload_2
      32: ifeq          52
      35: iload         6
      37: aload_0
      38: getfield      #32                 // Field pad:B
      41: if_icmpeq     54
      44: iload         6
      46: invokestatic  #61                 // Method isWhiteSpace:(B)Z
      49: ifne          54
      52: iconst_0
      53: ireturn
      54: iinc          5, 1
      57: goto          9
      60: iconst_1
      61: ireturn

  public boolean isInAlphabet(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       5: iconst_1
       6: invokevirtual #62                 // Method isInAlphabet:([BZ)Z
       9: ireturn

  public boolean isStrictDecoding();
    Code:
       0: aload_0
       1: getfield      #36                 // Field decodingPolicy:Lorg/apache/commons/codec/CodecPolicy;
       4: getstatic     #63                 // Field org/apache/commons/codec/CodecPolicy.STRICT:Lorg/apache/commons/codec/CodecPolicy;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  int readResults(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);
    Code:
       0: aload         4
       2: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
       5: ifnull        71
       8: aload_0
       9: aload         4
      11: invokevirtual #64                 // Method available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I
      14: iload_3
      15: invokestatic  #65                 // Method java/lang/Math.min:(II)I
      18: istore        5
      20: aload         4
      22: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      25: aload         4
      27: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      30: aload_1
      31: iload_2
      32: iload         5
      34: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      37: aload         4
      39: dup
      40: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      43: iload         5
      45: iadd
      46: putfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      49: aload         4
      51: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      54: aload         4
      56: getfield      #37                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      59: if_icmplt     68
      62: aload         4
      64: aconst_null
      65: putfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      68: iload         5
      70: ireturn
      71: aload         4
      73: getfield      #66                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z
      76: ifeq          83
      79: iconst_m1
      80: goto          84
      83: iconst_0
      84: ireturn

  static {};
    Code:
       0: getstatic     #67                 // Field org/apache/commons/codec/CodecPolicy.LENIENT:Lorg/apache/commons/codec/CodecPolicy;
       3: putstatic     #24                 // Field DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;
       6: iconst_2
       7: newarray       byte
       9: dup
      10: iconst_0
      11: bipush        13
      13: bastore
      14: dup
      15: iconst_1
      16: bipush        10
      18: bastore
      19: putstatic     #16                 // Field CHUNK_SEPARATOR:[B
      22: return
}
