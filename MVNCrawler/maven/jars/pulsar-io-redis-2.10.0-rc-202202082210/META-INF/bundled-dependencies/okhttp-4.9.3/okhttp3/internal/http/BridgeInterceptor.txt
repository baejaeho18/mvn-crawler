Compiled from "BridgeInterceptor.kt"
public final class okhttp3.internal.http.BridgeInterceptor implements okhttp3.Interceptor {
  private final okhttp3.CookieJar cookieJar;

  public okhttp3.Response intercept(okhttp3.Interceptor$Chain) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #13                 // String chain
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #25,  1           // InterfaceMethod okhttp3/Interceptor$Chain.request:()Lokhttp3/Request;
      12: astore_2
      13: aload_2
      14: invokevirtual #31                 // Method okhttp3/Request.newBuilder:()Lokhttp3/Request$Builder;
      17: astore_3
      18: aload_2
      19: invokevirtual #35                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
      22: astore        4
      24: aload         4
      26: ifnull        107
      29: aload         4
      31: invokevirtual #41                 // Method okhttp3/RequestBody.contentType:()Lokhttp3/MediaType;
      34: astore        5
      36: aload         5
      38: ifnull        53
      41: aload_3
      42: ldc           #43                 // String Content-Type
      44: aload         5
      46: invokevirtual #49                 // Method okhttp3/MediaType.toString:()Ljava/lang/String;
      49: invokevirtual #55                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      52: pop
      53: aload         4
      55: invokevirtual #59                 // Method okhttp3/RequestBody.contentLength:()J
      58: lstore        6
      60: lload         6
      62: ldc2_w        #60                 // long -1l
      65: lcmp
      66: ifeq          91
      69: aload_3
      70: ldc           #63                 // String Content-Length
      72: lload         6
      74: invokestatic  #69                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;
      77: invokevirtual #55                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      80: pop
      81: aload_3
      82: ldc           #71                 // String Transfer-Encoding
      84: invokevirtual #75                 // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
      87: pop
      88: goto          107
      91: aload_3
      92: ldc           #71                 // String Transfer-Encoding
      94: ldc           #77                 // String chunked
      96: invokevirtual #55                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      99: pop
     100: aload_3
     101: ldc           #63                 // String Content-Length
     103: invokevirtual #75                 // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     106: pop
     107: aload_2
     108: ldc           #79                 // String Host
     110: invokevirtual #82                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
     113: ifnonnull     133
     116: aload_3
     117: ldc           #79                 // String Host
     119: aload_2
     120: invokevirtual #86                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     123: iconst_0
     124: iconst_1
     125: aconst_null
     126: invokestatic  #92                 // Method okhttp3/internal/Util.toHostHeader$default:(Lokhttp3/HttpUrl;ZILjava/lang/Object;)Ljava/lang/String;
     129: invokevirtual #55                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
     132: pop
     133: aload_2
     134: ldc           #94                 // String Connection
     136: invokevirtual #82                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
     139: ifnonnull     151
     142: aload_3
     143: ldc           #94                 // String Connection
     145: ldc           #96                 // String Keep-Alive
     147: invokevirtual #55                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
     150: pop
     151: iconst_0
     152: istore        5
     154: aload_2
     155: ldc           #98                 // String Accept-Encoding
     157: invokevirtual #82                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
     160: ifnonnull     184
     163: aload_2
     164: ldc           #100                // String Range
     166: invokevirtual #82                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
     169: ifnonnull     184
     172: iconst_1
     173: istore        5
     175: aload_3
     176: ldc           #98                 // String Accept-Encoding
     178: ldc           #102                // String gzip
     180: invokevirtual #55                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
     183: pop
     184: aload_0
     185: getfield      #106                // Field cookieJar:Lokhttp3/CookieJar;
     188: aload_2
     189: invokevirtual #86                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     192: invokeinterface #112,  2          // InterfaceMethod okhttp3/CookieJar.loadForRequest:(Lokhttp3/HttpUrl;)Ljava/util/List;
     197: astore        6
     199: aload         6
     201: checkcast     #114                // class java/util/Collection
     204: astore        7
     206: iconst_0
     207: istore        8
     209: aload         7
     211: invokeinterface #118,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
     216: ifne          223
     219: iconst_1
     220: goto          224
     223: iconst_0
     224: ifeq          240
     227: aload_3
     228: ldc           #120                // String Cookie
     230: aload_0
     231: aload         6
     233: invokespecial #124                // Method cookieHeader:(Ljava/util/List;)Ljava/lang/String;
     236: invokevirtual #55                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
     239: pop
     240: aload_2
     241: ldc           #126                // String User-Agent
     243: invokevirtual #82                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
     246: ifnonnull     258
     249: aload_3
     250: ldc           #126                // String User-Agent
     252: ldc           #128                // String okhttp/4.9.3
     254: invokevirtual #55                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
     257: pop
     258: aload_1
     259: aload_3
     260: invokevirtual #131                // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
     263: invokeinterface #135,  2          // InterfaceMethod okhttp3/Interceptor$Chain.proceed:(Lokhttp3/Request;)Lokhttp3/Response;
     268: astore        7
     270: aload_0
     271: getfield      #106                // Field cookieJar:Lokhttp3/CookieJar;
     274: aload_2
     275: invokevirtual #86                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     278: aload         7
     280: invokevirtual #141                // Method okhttp3/Response.headers:()Lokhttp3/Headers;
     283: invokestatic  #147                // Method okhttp3/internal/http/HttpHeaders.receiveHeaders:(Lokhttp3/CookieJar;Lokhttp3/HttpUrl;Lokhttp3/Headers;)V
     286: aload         7
     288: invokevirtual #150                // Method okhttp3/Response.newBuilder:()Lokhttp3/Response$Builder;
     291: aload_2
     292: invokevirtual #155                // Method okhttp3/Response$Builder.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;
     295: astore        8
     297: iload         5
     299: ifeq          430
     302: ldc           #102                // String gzip
     304: aload         7
     306: ldc           #157                // String Content-Encoding
     308: aconst_null
     309: iconst_2
     310: aconst_null
     311: invokestatic  #161                // Method okhttp3/Response.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
     314: iconst_1
     315: invokestatic  #167                // Method kotlin/text/StringsKt.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z
     318: ifeq          430
     321: aload         7
     323: invokestatic  #171                // Method okhttp3/internal/http/HttpHeaders.promisesBody:(Lokhttp3/Response;)Z
     326: ifeq          430
     329: aload         7
     331: invokevirtual #174                // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
     334: astore        9
     336: aload         9
     338: ifnull        430
     341: new           #176                // class okio/GzipSource
     344: dup
     345: aload         9
     347: invokevirtual #182                // Method okhttp3/ResponseBody.source:()Lokio/BufferedSource;
     350: checkcast     #184                // class okio/Source
     353: invokespecial #188                // Method okio/GzipSource."<init>":(Lokio/Source;)V
     356: astore        10
     358: aload         7
     360: invokevirtual #141                // Method okhttp3/Response.headers:()Lokhttp3/Headers;
     363: invokevirtual #193                // Method okhttp3/Headers.newBuilder:()Lokhttp3/Headers$Builder;
     366: ldc           #157                // String Content-Encoding
     368: invokevirtual #199                // Method okhttp3/Headers$Builder.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;
     371: ldc           #63                 // String Content-Length
     373: invokevirtual #199                // Method okhttp3/Headers$Builder.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;
     376: invokevirtual #201                // Method okhttp3/Headers$Builder.build:()Lokhttp3/Headers;
     379: astore        11
     381: aload         8
     383: aload         11
     385: invokevirtual #204                // Method okhttp3/Response$Builder.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;
     388: pop
     389: aload         7
     391: ldc           #43                 // String Content-Type
     393: aconst_null
     394: iconst_2
     395: aconst_null
     396: invokestatic  #161                // Method okhttp3/Response.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
     399: astore        12
     401: aload         8
     403: new           #206                // class okhttp3/internal/http/RealResponseBody
     406: dup
     407: aload         12
     409: ldc2_w        #60                 // long -1l
     412: aload         10
     414: checkcast     #184                // class okio/Source
     417: invokestatic  #212                // Method okio/Okio.buffer:(Lokio/Source;)Lokio/BufferedSource;
     420: invokespecial #215                // Method okhttp3/internal/http/RealResponseBody."<init>":(Ljava/lang/String;JLokio/BufferedSource;)V
     423: checkcast     #178                // class okhttp3/ResponseBody
     426: invokevirtual #218                // Method okhttp3/Response$Builder.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;
     429: pop
     430: aload         8
     432: invokevirtual #221                // Method okhttp3/Response$Builder.build:()Lokhttp3/Response;
     435: areturn

  private final java.lang.String cookieHeader(java.util.List<okhttp3.Cookie>);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: new           #251                // class java/lang/StringBuilder
       7: dup
       8: invokespecial #254                // Method java/lang/StringBuilder."<init>":()V
      11: astore_3
      12: iconst_0
      13: istore        4
      15: iconst_0
      16: istore        5
      18: aload_3
      19: astore        6
      21: iconst_0
      22: istore        7
      24: aload_1
      25: checkcast     #256                // class java/lang/Iterable
      28: astore        8
      30: iconst_0
      31: istore        9
      33: iconst_0
      34: istore        10
      36: aload         8
      38: invokeinterface #260,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      43: astore        11
      45: aload         11
      47: invokeinterface #265,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          138
      55: aload         11
      57: invokeinterface #269,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: astore        12
      64: iload         10
      66: iinc          10, 1
      69: istore        13
      71: iconst_0
      72: istore        14
      74: iload         13
      76: ifge          82
      79: invokestatic  #274                // Method kotlin/collections/CollectionsKt.throwIndexOverflow:()V
      82: iload         13
      84: aload         12
      86: checkcast     #276                // class okhttp3/Cookie
      89: astore        15
      91: istore        16
      93: iconst_0
      94: istore        17
      96: iload         16
      98: ifle          110
     101: aload         6
     103: ldc_w         #278                // String ;
     106: invokevirtual #282                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: pop
     110: aload         6
     112: aload         15
     114: invokevirtual #285                // Method okhttp3/Cookie.name:()Ljava/lang/String;
     117: invokevirtual #282                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: bipush        61
     122: invokevirtual #288                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     125: aload         15
     127: invokevirtual #291                // Method okhttp3/Cookie.value:()Ljava/lang/String;
     130: invokevirtual #282                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: pop
     134: nop
     135: goto          45
     138: nop
     139: nop
     140: aload_3
     141: invokevirtual #292                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: dup
     145: ldc_w         #294                // String StringBuilder().apply(builderAction).toString()
     148: invokestatic  #297                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     151: areturn

  public okhttp3.internal.http.BridgeInterceptor(okhttp3.CookieJar);
    Code:
       0: aload_1
       1: ldc_w         #313                // String cookieJar
       4: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: invokespecial #314                // Method java/lang/Object."<init>":()V
      11: aload_0
      12: aload_1
      13: putfield      #106                // Field cookieJar:Lokhttp3/CookieJar;
      16: return
}
