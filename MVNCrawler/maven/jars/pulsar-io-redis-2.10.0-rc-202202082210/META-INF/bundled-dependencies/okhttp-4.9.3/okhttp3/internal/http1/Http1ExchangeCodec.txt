Compiled from "Http1ExchangeCodec.kt"
public final class okhttp3.internal.http1.Http1ExchangeCodec implements okhttp3.internal.http.ExchangeCodec {
  private int state;

  private final okhttp3.internal.http1.HeadersReader headersReader;

  private okhttp3.Headers trailers;

  private final okhttp3.OkHttpClient client;

  private final okhttp3.internal.connection.RealConnection connection;

  private final okio.BufferedSource source;

  private final okio.BufferedSink sink;

  private static final long NO_CHUNK_YET;

  private static final int STATE_IDLE;

  private static final int STATE_OPEN_REQUEST_BODY;

  private static final int STATE_WRITING_REQUEST_BODY;

  private static final int STATE_READ_RESPONSE_HEADERS;

  private static final int STATE_OPEN_RESPONSE_BODY;

  private static final int STATE_READING_RESPONSE_BODY;

  private static final int STATE_CLOSED;

  public static final okhttp3.internal.http1.Http1ExchangeCodec$Companion Companion;

  private final boolean isChunked(okhttp3.Response);
    Code:
       0: ldc           #14                 // String chunked
       2: aload_1
       3: ldc           #16                 // String Transfer-Encoding
       5: aconst_null
       6: iconst_2
       7: aconst_null
       8: invokestatic  #22                 // Method okhttp3/Response.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
      11: iconst_1
      12: invokestatic  #28                 // Method kotlin/text/StringsKt.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z
      15: ireturn

  private final boolean isChunked(okhttp3.Request);
    Code:
       0: ldc           #14                 // String chunked
       2: aload_1
       3: ldc           #16                 // String Transfer-Encoding
       5: invokevirtual #39                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
       8: iconst_1
       9: invokestatic  #28                 // Method kotlin/text/StringsKt.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z
      12: ireturn

  public final boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #46                 // Field state:I
       4: bipush        6
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public okio.Sink createRequestBody(okhttp3.Request, long);
    Code:
       0: aload_1
       1: ldc           #51                 // String request
       3: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: nop
       7: aload_1
       8: invokevirtual #61                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
      11: ifnull        37
      14: aload_1
      15: invokevirtual #61                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
      18: invokevirtual #66                 // Method okhttp3/RequestBody.isDuplex:()Z
      21: ifeq          37
      24: new           #68                 // class java/net/ProtocolException
      27: dup
      28: ldc           #70                 // String Duplex connections are not supported for HTTP/1
      30: invokespecial #74                 // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
      33: checkcast     #76                 // class java/lang/Throwable
      36: athrow
      37: aload_0
      38: aload_1
      39: invokespecial #78                 // Method isChunked:(Lokhttp3/Request;)Z
      42: ifeq          52
      45: aload_0
      46: invokespecial #82                 // Method newChunkedSink:()Lokio/Sink;
      49: goto          80
      52: lload_2
      53: ldc2_w        #83                 // long -1l
      56: lcmp
      57: ifeq          67
      60: aload_0
      61: invokespecial #87                 // Method newKnownLengthSink:()Lokio/Sink;
      64: goto          80
      67: new           #89                 // class java/lang/IllegalStateException
      70: dup
      71: ldc           #91                 // String Cannot stream a request body without chunked encoding or a known content length!
      73: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      76: checkcast     #76                 // class java/lang/Throwable
      79: athrow
      80: areturn

  public void cancel();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method getConnection:()Lokhttp3/internal/connection/RealConnection;
       4: invokevirtual #106                // Method okhttp3/internal/connection/RealConnection.cancel:()V
       7: return

  public void writeRequestHeaders(okhttp3.Request);
    Code:
       0: aload_1
       1: ldc           #51                 // String request
       3: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #114                // Field okhttp3/internal/http/RequestLine.INSTANCE:Lokhttp3/internal/http/RequestLine;
       9: aload_1
      10: aload_0
      11: invokevirtual #102                // Method getConnection:()Lokhttp3/internal/connection/RealConnection;
      14: invokevirtual #118                // Method okhttp3/internal/connection/RealConnection.route:()Lokhttp3/Route;
      17: invokevirtual #124                // Method okhttp3/Route.proxy:()Ljava/net/Proxy;
      20: invokevirtual #130                // Method java/net/Proxy.type:()Ljava/net/Proxy$Type;
      23: dup
      24: ldc           #132                // String connection.route().proxy.type()
      26: invokestatic  #135                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      29: invokevirtual #139                // Method okhttp3/internal/http/RequestLine.get:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Ljava/lang/String;
      32: astore_2
      33: aload_0
      34: aload_1
      35: invokevirtual #143                // Method okhttp3/Request.headers:()Lokhttp3/Headers;
      38: aload_2
      39: invokevirtual #147                // Method writeRequest:(Lokhttp3/Headers;Ljava/lang/String;)V
      42: return

  public long reportedContentLength(okhttp3.Response);
    Code:
       0: aload_1
       1: ldc           #153                // String response
       3: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: nop
       7: aload_1
       8: invokestatic  #158                // Method okhttp3/internal/http/HttpHeaders.promisesBody:(Lokhttp3/Response;)Z
      11: ifne          18
      14: lconst_0
      15: goto          36
      18: aload_0
      19: aload_1
      20: invokespecial #160                // Method isChunked:(Lokhttp3/Response;)Z
      23: ifeq          32
      26: ldc2_w        #83                 // long -1l
      29: goto          36
      32: aload_1
      33: invokestatic  #165                // Method okhttp3/internal/Util.headersContentLength:(Lokhttp3/Response;)J
      36: lreturn

  public okio.Source openResponseBodySource(okhttp3.Response);
    Code:
       0: aload_1
       1: ldc           #153                // String response
       3: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: nop
       7: aload_1
       8: invokestatic  #158                // Method okhttp3/internal/http/HttpHeaders.promisesBody:(Lokhttp3/Response;)Z
      11: ifne          22
      14: aload_0
      15: lconst_0
      16: invokespecial #171                // Method newFixedLengthSource:(J)Lokio/Source;
      19: goto          69
      22: aload_0
      23: aload_1
      24: invokespecial #160                // Method isChunked:(Lokhttp3/Response;)Z
      27: ifeq          44
      30: aload_0
      31: aload_1
      32: invokevirtual #174                // Method okhttp3/Response.request:()Lokhttp3/Request;
      35: invokevirtual #178                // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      38: invokespecial #182                // Method newChunkedSource:(Lokhttp3/HttpUrl;)Lokio/Source;
      41: goto          69
      44: aload_1
      45: invokestatic  #165                // Method okhttp3/internal/Util.headersContentLength:(Lokhttp3/Response;)J
      48: lstore_2
      49: lload_2
      50: ldc2_w        #83                 // long -1l
      53: lcmp
      54: ifeq          65
      57: aload_0
      58: lload_2
      59: invokespecial #171                // Method newFixedLengthSource:(J)Lokio/Source;
      62: goto          69
      65: aload_0
      66: invokespecial #186                // Method newUnknownLengthSource:()Lokio/Source;
      69: areturn

  public okhttp3.Headers trailers();
    Code:
       0: aload_0
       1: getfield      #46                 // Field state:I
       4: bipush        6
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: istore_1
      15: iconst_0
      16: istore_2
      17: iconst_0
      18: istore_3
      19: iload_1
      20: ifne          44
      23: iconst_0
      24: istore        4
      26: ldc           #190                // String too early; can\'t read the trailers yet
      28: astore_3
      29: new           #89                 // class java/lang/IllegalStateException
      32: dup
      33: aload_3
      34: invokevirtual #194                // Method java/lang/Object.toString:()Ljava/lang/String;
      37: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      40: checkcast     #76                 // class java/lang/Throwable
      43: athrow
      44: aload_0
      45: getfield      #196                // Field trailers:Lokhttp3/Headers;
      48: dup
      49: ifnull        55
      52: goto          59
      55: pop
      56: getstatic     #199                // Field okhttp3/internal/Util.EMPTY_HEADERS:Lokhttp3/Headers;
      59: areturn

  public void flushRequest();
    Code:
       0: aload_0
       1: getfield      #207                // Field sink:Lokio/BufferedSink;
       4: invokeinterface #212,  1          // InterfaceMethod okio/BufferedSink.flush:()V
       9: return

  public void finishRequest();
    Code:
       0: aload_0
       1: getfield      #207                // Field sink:Lokio/BufferedSink;
       4: invokeinterface #212,  1          // InterfaceMethod okio/BufferedSink.flush:()V
       9: return

  public final void writeRequest(okhttp3.Headers, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #214                // String headers
       3: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #215                // String requestLine
       9: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #46                 // Field state:I
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iconst_0
      29: istore        5
      31: iload_3
      32: ifne          78
      35: iconst_0
      36: istore        6
      38: new           #217                // class java/lang/StringBuilder
      41: dup
      42: invokespecial #219                // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #221                // String state:
      47: invokevirtual #225                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #46                 // Field state:I
      54: invokevirtual #228                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: invokevirtual #229                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: astore        5
      62: new           #89                 // class java/lang/IllegalStateException
      65: dup
      66: aload         5
      68: invokevirtual #194                // Method java/lang/Object.toString:()Ljava/lang/String;
      71: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      74: checkcast     #76                 // class java/lang/Throwable
      77: athrow
      78: aload_0
      79: getfield      #207                // Field sink:Lokio/BufferedSink;
      82: aload_2
      83: invokeinterface #233,  2          // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
      88: ldc           #235                // String \r\n
      90: invokeinterface #233,  2          // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
      95: pop
      96: iconst_0
      97: istore_3
      98: aload_1
      99: invokevirtual #239                // Method okhttp3/Headers.size:()I
     102: istore        4
     104: iload_3
     105: iload         4
     107: if_icmpge     155
     110: aload_0
     111: getfield      #207                // Field sink:Lokio/BufferedSink;
     114: aload_1
     115: iload_3
     116: invokevirtual #243                // Method okhttp3/Headers.name:(I)Ljava/lang/String;
     119: invokeinterface #233,  2          // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
     124: ldc           #245                // String :
     126: invokeinterface #233,  2          // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
     131: aload_1
     132: iload_3
     133: invokevirtual #248                // Method okhttp3/Headers.value:(I)Ljava/lang/String;
     136: invokeinterface #233,  2          // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
     141: ldc           #235                // String \r\n
     143: invokeinterface #233,  2          // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
     148: pop
     149: iinc          3, 1
     152: goto          104
     155: aload_0
     156: getfield      #207                // Field sink:Lokio/BufferedSink;
     159: ldc           #235                // String \r\n
     161: invokeinterface #233,  2          // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
     166: pop
     167: aload_0
     168: iconst_1
     169: putfield      #46                 // Field state:I
     172: return

  public okhttp3.Response$Builder readResponseHeaders(boolean);
    Code:
       0: aload_0
       1: getfield      #46                 // Field state:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #46                 // Field state:I
      12: iconst_3
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: istore_2
      22: iconst_0
      23: istore_3
      24: iconst_0
      25: istore        4
      27: iload_2
      28: ifne          74
      31: iconst_0
      32: istore        5
      34: new           #217                // class java/lang/StringBuilder
      37: dup
      38: invokespecial #219                // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #221                // String state:
      43: invokevirtual #225                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #46                 // Field state:I
      50: invokevirtual #228                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: invokevirtual #229                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: astore        4
      58: new           #89                 // class java/lang/IllegalStateException
      61: dup
      62: aload         4
      64: invokevirtual #194                // Method java/lang/Object.toString:()Ljava/lang/String;
      67: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      70: checkcast     #76                 // class java/lang/Throwable
      73: athrow
      74: nop
      75: getstatic     #261                // Field okhttp3/internal/http/StatusLine.Companion:Lokhttp3/internal/http/StatusLine$Companion;
      78: aload_0
      79: getfield      #263                // Field headersReader:Lokhttp3/internal/http1/HeadersReader;
      82: invokevirtual #268                // Method okhttp3/internal/http1/HeadersReader.readLine:()Ljava/lang/String;
      85: invokevirtual #274                // Method okhttp3/internal/http/StatusLine$Companion.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;
      88: astore_2
      89: new           #276                // class okhttp3/Response$Builder
      92: dup
      93: invokespecial #277                // Method okhttp3/Response$Builder."<init>":()V
      96: aload_2
      97: getfield      #281                // Field okhttp3/internal/http/StatusLine.protocol:Lokhttp3/Protocol;
     100: invokevirtual #284                // Method okhttp3/Response$Builder.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
     103: aload_2
     104: getfield      #287                // Field okhttp3/internal/http/StatusLine.code:I
     107: invokevirtual #290                // Method okhttp3/Response$Builder.code:(I)Lokhttp3/Response$Builder;
     110: aload_2
     111: getfield      #293                // Field okhttp3/internal/http/StatusLine.message:Ljava/lang/String;
     114: invokevirtual #296                // Method okhttp3/Response$Builder.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;
     117: aload_0
     118: getfield      #263                // Field headersReader:Lokhttp3/internal/http1/HeadersReader;
     121: invokevirtual #299                // Method okhttp3/internal/http1/HeadersReader.readHeaders:()Lokhttp3/Headers;
     124: invokevirtual #302                // Method okhttp3/Response$Builder.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;
     127: astore_3
     128: nop
     129: iload_1
     130: ifeq          146
     133: aload_2
     134: getfield      #287                // Field okhttp3/internal/http/StatusLine.code:I
     137: bipush        100
     139: if_icmpne     146
     142: aconst_null
     143: goto          170
     146: aload_2
     147: getfield      #287                // Field okhttp3/internal/http/StatusLine.code:I
     150: bipush        100
     152: if_icmpne     164
     155: aload_0
     156: iconst_3
     157: putfield      #46                 // Field state:I
     160: aload_3
     161: goto          170
     164: aload_0
     165: iconst_4
     166: putfield      #46                 // Field state:I
     169: aload_3
     170: areturn
     171: astore_2
     172: aload_0
     173: invokevirtual #102                // Method getConnection:()Lokhttp3/internal/connection/RealConnection;
     176: invokevirtual #118                // Method okhttp3/internal/connection/RealConnection.route:()Lokhttp3/Route;
     179: invokevirtual #306                // Method okhttp3/Route.address:()Lokhttp3/Address;
     182: invokevirtual #309                // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
     185: invokevirtual #314                // Method okhttp3/HttpUrl.redact:()Ljava/lang/String;
     188: astore_3
     189: new           #316                // class java/io/IOException
     192: dup
     193: new           #217                // class java/lang/StringBuilder
     196: dup
     197: invokespecial #219                // Method java/lang/StringBuilder."<init>":()V
     200: ldc_w         #318                // String unexpected end of stream on
     203: invokevirtual #225                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload_3
     207: invokevirtual #225                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: invokevirtual #229                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: aload_2
     214: checkcast     #76                 // class java/lang/Throwable
     217: invokespecial #321                // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     220: checkcast     #76                 // class java/lang/Throwable
     223: athrow
    Exception table:
       from    to  target type
          74   171   171   Class java/io/EOFException

  private final okio.Sink newChunkedSink();
    Code:
       0: aload_0
       1: getfield      #46                 // Field state:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore_1
      14: iconst_0
      15: istore_2
      16: iconst_0
      17: istore_3
      18: iload_1
      19: ifne          63
      22: iconst_0
      23: istore        4
      25: new           #217                // class java/lang/StringBuilder
      28: dup
      29: invokespecial #219                // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #221                // String state:
      34: invokevirtual #225                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #46                 // Field state:I
      41: invokevirtual #228                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: invokevirtual #229                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: astore_3
      48: new           #89                 // class java/lang/IllegalStateException
      51: dup
      52: aload_3
      53: invokevirtual #194                // Method java/lang/Object.toString:()Ljava/lang/String;
      56: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      59: checkcast     #76                 // class java/lang/Throwable
      62: athrow
      63: aload_0
      64: iconst_2
      65: putfield      #46                 // Field state:I
      68: new           #332                // class okhttp3/internal/http1/Http1ExchangeCodec$ChunkedSink
      71: dup
      72: aload_0
      73: invokespecial #335                // Method okhttp3/internal/http1/Http1ExchangeCodec$ChunkedSink."<init>":(Lokhttp3/internal/http1/Http1ExchangeCodec;)V
      76: checkcast     #96                 // class okio/Sink
      79: areturn

  private final okio.Sink newKnownLengthSink();
    Code:
       0: aload_0
       1: getfield      #46                 // Field state:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore_1
      14: iconst_0
      15: istore_2
      16: iconst_0
      17: istore_3
      18: iload_1
      19: ifne          63
      22: iconst_0
      23: istore        4
      25: new           #217                // class java/lang/StringBuilder
      28: dup
      29: invokespecial #219                // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #221                // String state:
      34: invokevirtual #225                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #46                 // Field state:I
      41: invokevirtual #228                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: invokevirtual #229                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: astore_3
      48: new           #89                 // class java/lang/IllegalStateException
      51: dup
      52: aload_3
      53: invokevirtual #194                // Method java/lang/Object.toString:()Ljava/lang/String;
      56: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      59: checkcast     #76                 // class java/lang/Throwable
      62: athrow
      63: aload_0
      64: iconst_2
      65: putfield      #46                 // Field state:I
      68: new           #338                // class okhttp3/internal/http1/Http1ExchangeCodec$KnownLengthSink
      71: dup
      72: aload_0
      73: invokespecial #339                // Method okhttp3/internal/http1/Http1ExchangeCodec$KnownLengthSink."<init>":(Lokhttp3/internal/http1/Http1ExchangeCodec;)V
      76: checkcast     #96                 // class okio/Sink
      79: areturn

  private final okio.Source newFixedLengthSource(long);
    Code:
       0: aload_0
       1: getfield      #46                 // Field state:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore_3
      14: iconst_0
      15: istore        4
      17: iconst_0
      18: istore        5
      20: iload_3
      21: ifne          67
      24: iconst_0
      25: istore        6
      27: new           #217                // class java/lang/StringBuilder
      30: dup
      31: invokespecial #219                // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #221                // String state:
      36: invokevirtual #225                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #46                 // Field state:I
      43: invokevirtual #228                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: invokevirtual #229                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: astore        5
      51: new           #89                 // class java/lang/IllegalStateException
      54: dup
      55: aload         5
      57: invokevirtual #194                // Method java/lang/Object.toString:()Ljava/lang/String;
      60: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      63: checkcast     #76                 // class java/lang/Throwable
      66: athrow
      67: aload_0
      68: iconst_5
      69: putfield      #46                 // Field state:I
      72: new           #342                // class okhttp3/internal/http1/Http1ExchangeCodec$FixedLengthSource
      75: dup
      76: aload_0
      77: lload_1
      78: invokespecial #345                // Method okhttp3/internal/http1/Http1ExchangeCodec$FixedLengthSource."<init>":(Lokhttp3/internal/http1/Http1ExchangeCodec;J)V
      81: checkcast     #188                // class okio/Source
      84: areturn

  private final okio.Source newChunkedSource(okhttp3.HttpUrl);
    Code:
       0: aload_0
       1: getfield      #46                 // Field state:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore_2
      14: iconst_0
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload_2
      20: ifne          66
      23: iconst_0
      24: istore        5
      26: new           #217                // class java/lang/StringBuilder
      29: dup
      30: invokespecial #219                // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #221                // String state:
      35: invokevirtual #225                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #46                 // Field state:I
      42: invokevirtual #228                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: invokevirtual #229                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: astore        4
      50: new           #89                 // class java/lang/IllegalStateException
      53: dup
      54: aload         4
      56: invokevirtual #194                // Method java/lang/Object.toString:()Ljava/lang/String;
      59: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      62: checkcast     #76                 // class java/lang/Throwable
      65: athrow
      66: aload_0
      67: iconst_5
      68: putfield      #46                 // Field state:I
      71: new           #349                // class okhttp3/internal/http1/Http1ExchangeCodec$ChunkedSource
      74: dup
      75: aload_0
      76: aload_1
      77: invokespecial #352                // Method okhttp3/internal/http1/Http1ExchangeCodec$ChunkedSource."<init>":(Lokhttp3/internal/http1/Http1ExchangeCodec;Lokhttp3/HttpUrl;)V
      80: checkcast     #188                // class okio/Source
      83: areturn

  private final okio.Source newUnknownLengthSource();
    Code:
       0: aload_0
       1: getfield      #46                 // Field state:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore_1
      14: iconst_0
      15: istore_2
      16: iconst_0
      17: istore_3
      18: iload_1
      19: ifne          63
      22: iconst_0
      23: istore        4
      25: new           #217                // class java/lang/StringBuilder
      28: dup
      29: invokespecial #219                // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #221                // String state:
      34: invokevirtual #225                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #46                 // Field state:I
      41: invokevirtual #228                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: invokevirtual #229                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: astore_3
      48: new           #89                 // class java/lang/IllegalStateException
      51: dup
      52: aload_3
      53: invokevirtual #194                // Method java/lang/Object.toString:()Ljava/lang/String;
      56: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      59: checkcast     #76                 // class java/lang/Throwable
      62: athrow
      63: aload_0
      64: iconst_5
      65: putfield      #46                 // Field state:I
      68: aload_0
      69: invokevirtual #102                // Method getConnection:()Lokhttp3/internal/connection/RealConnection;
      72: invokevirtual #357                // Method okhttp3/internal/connection/RealConnection.noNewExchanges$okhttp:()V
      75: new           #359                // class okhttp3/internal/http1/Http1ExchangeCodec$UnknownLengthSource
      78: dup
      79: aload_0
      80: invokespecial #360                // Method okhttp3/internal/http1/Http1ExchangeCodec$UnknownLengthSource."<init>":(Lokhttp3/internal/http1/Http1ExchangeCodec;)V
      83: checkcast     #188                // class okio/Source
      86: areturn

  private final void detachTimeout(okio.ForwardingTimeout);
    Code:
       0: aload_1
       1: invokevirtual #369                // Method okio/ForwardingTimeout.delegate:()Lokio/Timeout;
       4: astore_2
       5: aload_1
       6: getstatic     #375                // Field okio/Timeout.NONE:Lokio/Timeout;
       9: invokevirtual #379                // Method okio/ForwardingTimeout.setDelegate:(Lokio/Timeout;)Lokio/ForwardingTimeout;
      12: pop
      13: aload_2
      14: invokevirtual #382                // Method okio/Timeout.clearDeadline:()Lokio/Timeout;
      17: pop
      18: aload_2
      19: invokevirtual #385                // Method okio/Timeout.clearTimeout:()Lokio/Timeout;
      22: pop
      23: return

  public final void skipConnectBody(okhttp3.Response);
    Code:
       0: aload_1
       1: ldc           #153                // String response
       3: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokestatic  #165                // Method okhttp3/internal/Util.headersContentLength:(Lokhttp3/Response;)J
      10: lstore_2
      11: lload_2
      12: ldc2_w        #83                 // long -1l
      15: lcmp
      16: ifne          20
      19: return
      20: aload_0
      21: lload_2
      22: invokespecial #171                // Method newFixedLengthSource:(J)Lokio/Source;
      25: astore        4
      27: aload         4
      29: ldc_w         #391                // int 2147483647
      32: getstatic     #397                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      35: invokestatic  #401                // Method okhttp3/internal/Util.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z
      38: pop
      39: aload         4
      41: invokeinterface #404,  1          // InterfaceMethod okio/Source.close:()V
      46: return

  public okhttp3.internal.connection.RealConnection getConnection();
    Code:
       0: aload_0
       1: getfield      #411                // Field connection:Lokhttp3/internal/connection/RealConnection;
       4: areturn

  public okhttp3.internal.http1.Http1ExchangeCodec(okhttp3.OkHttpClient, okhttp3.internal.connection.RealConnection, okio.BufferedSource, okio.BufferedSink);
    Code:
       0: aload_2
       1: ldc_w         #415                // String connection
       4: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_3
       8: ldc_w         #416                // String source
      11: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload         4
      16: ldc_w         #417                // String sink
      19: invokestatic  #57                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: invokespecial #418                // Method java/lang/Object."<init>":()V
      26: aload_0
      27: aload_1
      28: putfield      #420                // Field client:Lokhttp3/OkHttpClient;
      31: aload_0
      32: aload_2
      33: putfield      #411                // Field connection:Lokhttp3/internal/connection/RealConnection;
      36: aload_0
      37: aload_3
      38: putfield      #422                // Field source:Lokio/BufferedSource;
      41: aload_0
      42: aload         4
      44: putfield      #207                // Field sink:Lokio/BufferedSink;
      47: aload_0
      48: new           #265                // class okhttp3/internal/http1/HeadersReader
      51: dup
      52: aload_0
      53: getfield      #422                // Field source:Lokio/BufferedSource;
      56: invokespecial #425                // Method okhttp3/internal/http1/HeadersReader."<init>":(Lokio/BufferedSource;)V
      59: putfield      #263                // Field headersReader:Lokhttp3/internal/http1/HeadersReader;
      62: return

  static {};
    Code:
       0: new           #483                // class okhttp3/internal/http1/Http1ExchangeCodec$Companion
       3: dup
       4: aconst_null
       5: invokespecial #486                // Method okhttp3/internal/http1/Http1ExchangeCodec$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #488                // Field Companion:Lokhttp3/internal/http1/Http1ExchangeCodec$Companion;
      11: return

  public static final okio.BufferedSink access$getSink$p(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: getfield      #207                // Field sink:Lokio/BufferedSink;
       4: areturn

  public static final void access$detachTimeout(okhttp3.internal.http1.Http1ExchangeCodec, okio.ForwardingTimeout);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #449                // Method detachTimeout:(Lokio/ForwardingTimeout;)V
       5: return

  public static final int access$getState$p(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: getfield      #46                 // Field state:I
       4: ireturn

  public static final void access$setState$p(okhttp3.internal.http1.Http1ExchangeCodec, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #46                 // Field state:I
       5: return

  public static final okio.BufferedSource access$getSource$p(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: getfield      #422                // Field source:Lokio/BufferedSource;
       4: areturn

  public static final okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: getfield      #196                // Field trailers:Lokhttp3/Headers;
       4: areturn

  public static final void access$setTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec, okhttp3.Headers);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #196                // Field trailers:Lokhttp3/Headers;
       5: return

  public static final okhttp3.internal.http1.HeadersReader access$getHeadersReader$p(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: getfield      #263                // Field headersReader:Lokhttp3/internal/http1/HeadersReader;
       4: areturn

  public static final okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec);
    Code:
       0: aload_0
       1: getfield      #420                // Field client:Lokhttp3/OkHttpClient;
       4: areturn
}
