Compiled from "OkHttpClient.kt"
public class okhttp3.OkHttpClient implements java.lang.Cloneable,okhttp3.Call$Factory,okhttp3.WebSocket$Factory {
  private final okhttp3.Dispatcher dispatcher;

  private final okhttp3.ConnectionPool connectionPool;

  private final java.util.List<okhttp3.Interceptor> interceptors;

  private final java.util.List<okhttp3.Interceptor> networkInterceptors;

  private final okhttp3.EventListener$Factory eventListenerFactory;

  private final boolean retryOnConnectionFailure;

  private final okhttp3.Authenticator authenticator;

  private final boolean followRedirects;

  private final boolean followSslRedirects;

  private final okhttp3.CookieJar cookieJar;

  private final okhttp3.Cache cache;

  private final okhttp3.Dns dns;

  private final java.net.Proxy proxy;

  private final java.net.ProxySelector proxySelector;

  private final okhttp3.Authenticator proxyAuthenticator;

  private final javax.net.SocketFactory socketFactory;

  private final javax.net.ssl.SSLSocketFactory sslSocketFactoryOrNull;

  private final javax.net.ssl.X509TrustManager x509TrustManager;

  private final java.util.List<okhttp3.ConnectionSpec> connectionSpecs;

  private final java.util.List<okhttp3.Protocol> protocols;

  private final javax.net.ssl.HostnameVerifier hostnameVerifier;

  private final okhttp3.CertificatePinner certificatePinner;

  private final okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner;

  private final int callTimeoutMillis;

  private final int connectTimeoutMillis;

  private final int readTimeoutMillis;

  private final int writeTimeoutMillis;

  private final int pingIntervalMillis;

  private final long minWebSocketMessageToCompress;

  private final okhttp3.internal.connection.RouteDatabase routeDatabase;

  private static final java.util.List<okhttp3.Protocol> DEFAULT_PROTOCOLS;

  private static final java.util.List<okhttp3.ConnectionSpec> DEFAULT_CONNECTION_SPECS;

  public static final okhttp3.OkHttpClient$Companion Companion;

  public final okhttp3.Dispatcher dispatcher();
    Code:
       0: aload_0
       1: getfield      #18                 // Field dispatcher:Lokhttp3/Dispatcher;
       4: areturn

  public final okhttp3.ConnectionPool connectionPool();
    Code:
       0: aload_0
       1: getfield      #25                 // Field connectionPool:Lokhttp3/ConnectionPool;
       4: areturn

  public final java.util.List<okhttp3.Interceptor> interceptors();
    Code:
       0: aload_0
       1: getfield      #32                 // Field interceptors:Ljava/util/List;
       4: areturn

  public final java.util.List<okhttp3.Interceptor> networkInterceptors();
    Code:
       0: aload_0
       1: getfield      #35                 // Field networkInterceptors:Ljava/util/List;
       4: areturn

  public final okhttp3.EventListener$Factory eventListenerFactory();
    Code:
       0: aload_0
       1: getfield      #40                 // Field eventListenerFactory:Lokhttp3/EventListener$Factory;
       4: areturn

  public final boolean retryOnConnectionFailure();
    Code:
       0: aload_0
       1: getfield      #45                 // Field retryOnConnectionFailure:Z
       4: ireturn

  public final okhttp3.Authenticator authenticator();
    Code:
       0: aload_0
       1: getfield      #50                 // Field authenticator:Lokhttp3/Authenticator;
       4: areturn

  public final boolean followRedirects();
    Code:
       0: aload_0
       1: getfield      #53                 // Field followRedirects:Z
       4: ireturn

  public final boolean followSslRedirects();
    Code:
       0: aload_0
       1: getfield      #56                 // Field followSslRedirects:Z
       4: ireturn

  public final okhttp3.CookieJar cookieJar();
    Code:
       0: aload_0
       1: getfield      #61                 // Field cookieJar:Lokhttp3/CookieJar;
       4: areturn

  public final okhttp3.Cache cache();
    Code:
       0: aload_0
       1: getfield      #67                 // Field cache:Lokhttp3/Cache;
       4: areturn

  public final okhttp3.Dns dns();
    Code:
       0: aload_0
       1: getfield      #72                 // Field dns:Lokhttp3/Dns;
       4: areturn

  public final java.net.Proxy proxy();
    Code:
       0: aload_0
       1: getfield      #77                 // Field proxy:Ljava/net/Proxy;
       4: areturn

  public final java.net.ProxySelector proxySelector();
    Code:
       0: aload_0
       1: getfield      #82                 // Field proxySelector:Ljava/net/ProxySelector;
       4: areturn

  public final okhttp3.Authenticator proxyAuthenticator();
    Code:
       0: aload_0
       1: getfield      #85                 // Field proxyAuthenticator:Lokhttp3/Authenticator;
       4: areturn

  public final javax.net.SocketFactory socketFactory();
    Code:
       0: aload_0
       1: getfield      #90                 // Field socketFactory:Ljavax/net/SocketFactory;
       4: areturn

  public final javax.net.ssl.SSLSocketFactory sslSocketFactory();
    Code:
       0: aload_0
       1: getfield      #96                 // Field sslSocketFactoryOrNull:Ljavax/net/ssl/SSLSocketFactory;
       4: dup
       5: ifnull        11
       8: goto          25
      11: pop
      12: new           #98                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #100                // String CLEARTEXT-only client
      18: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: checkcast     #106                // class java/lang/Throwable
      24: athrow
      25: areturn

  public final javax.net.ssl.X509TrustManager x509TrustManager();
    Code:
       0: aload_0
       1: getfield      #113                // Field x509TrustManager:Ljavax/net/ssl/X509TrustManager;
       4: areturn

  public final java.util.List<okhttp3.ConnectionSpec> connectionSpecs();
    Code:
       0: aload_0
       1: getfield      #118                // Field connectionSpecs:Ljava/util/List;
       4: areturn

  public final java.util.List<okhttp3.Protocol> protocols();
    Code:
       0: aload_0
       1: getfield      #123                // Field protocols:Ljava/util/List;
       4: areturn

  public final javax.net.ssl.HostnameVerifier hostnameVerifier();
    Code:
       0: aload_0
       1: getfield      #128                // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
       4: areturn

  public final okhttp3.CertificatePinner certificatePinner();
    Code:
       0: aload_0
       1: getfield      #133                // Field certificatePinner:Lokhttp3/CertificatePinner;
       4: areturn

  public final okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner();
    Code:
       0: aload_0
       1: getfield      #138                // Field certificateChainCleaner:Lokhttp3/internal/tls/CertificateChainCleaner;
       4: areturn

  public final int callTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #143                // Field callTimeoutMillis:I
       4: ireturn

  public final int connectTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #146                // Field connectTimeoutMillis:I
       4: ireturn

  public final int readTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #149                // Field readTimeoutMillis:I
       4: ireturn

  public final int writeTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #152                // Field writeTimeoutMillis:I
       4: ireturn

  public final int pingIntervalMillis();
    Code:
       0: aload_0
       1: getfield      #155                // Field pingIntervalMillis:I
       4: ireturn

  public final long minWebSocketMessageToCompress();
    Code:
       0: aload_0
       1: getfield      #160                // Field minWebSocketMessageToCompress:J
       4: lreturn

  public final okhttp3.internal.connection.RouteDatabase getRouteDatabase();
    Code:
       0: aload_0
       1: getfield      #166                // Field routeDatabase:Lokhttp3/internal/connection/RouteDatabase;
       4: areturn

  private final void verifyClientState();
    Code:
       0: aload_0
       1: getfield      #32                 // Field interceptors:Ljava/util/List;
       4: dup
       5: ifnonnull     18
       8: new           #170                // class java/lang/NullPointerException
      11: dup
      12: ldc           #172                // String null cannot be cast to non-null type kotlin.collections.List<okhttp3.Interceptor?>
      14: invokespecial #173                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aconst_null
      19: invokeinterface #179,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: istore_1
      33: iconst_0
      34: istore_2
      35: iconst_0
      36: istore_3
      37: iload_1
      38: ifne          82
      41: iconst_0
      42: istore        4
      44: new           #181                // class java/lang/StringBuilder
      47: dup
      48: invokespecial #183                // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #185                // String Null interceptor:
      53: invokevirtual #189                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: getfield      #32                 // Field interceptors:Ljava/util/List;
      60: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #196                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: astore_3
      67: new           #98                 // class java/lang/IllegalStateException
      70: dup
      71: aload_3
      72: invokevirtual #197                // Method java/lang/Object.toString:()Ljava/lang/String;
      75: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      78: checkcast     #106                // class java/lang/Throwable
      81: athrow
      82: aload_0
      83: getfield      #35                 // Field networkInterceptors:Ljava/util/List;
      86: dup
      87: ifnonnull     100
      90: new           #170                // class java/lang/NullPointerException
      93: dup
      94: ldc           #172                // String null cannot be cast to non-null type kotlin.collections.List<okhttp3.Interceptor?>
      96: invokespecial #173                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aconst_null
     101: invokeinterface #179,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     106: ifne          113
     109: iconst_1
     110: goto          114
     113: iconst_0
     114: istore_1
     115: iconst_0
     116: istore_2
     117: iconst_0
     118: istore_3
     119: iload_1
     120: ifne          164
     123: iconst_0
     124: istore        4
     126: new           #181                // class java/lang/StringBuilder
     129: dup
     130: invokespecial #183                // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #199                // String Null network interceptor:
     135: invokevirtual #189                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: getfield      #35                 // Field networkInterceptors:Ljava/util/List;
     142: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     145: invokevirtual #196                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: astore_3
     149: new           #98                 // class java/lang/IllegalStateException
     152: dup
     153: aload_3
     154: invokevirtual #197                // Method java/lang/Object.toString:()Ljava/lang/String;
     157: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     160: checkcast     #106                // class java/lang/Throwable
     163: athrow
     164: aload_0
     165: getfield      #118                // Field connectionSpecs:Ljava/util/List;
     168: checkcast     #201                // class java/lang/Iterable
     171: astore_1
     172: iconst_0
     173: istore_2
     174: aload_1
     175: instanceof    #203                // class java/util/Collection
     178: ifeq          197
     181: aload_1
     182: checkcast     #203                // class java/util/Collection
     185: invokeinterface #206,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
     190: ifeq          197
     193: iconst_1
     194: goto          244
     197: aload_1
     198: invokeinterface #210,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     203: astore_3
     204: aload_3
     205: invokeinterface #215,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     210: ifeq          243
     213: aload_3
     214: invokeinterface #219,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     219: astore        4
     221: aload         4
     223: checkcast     #221                // class okhttp3/ConnectionSpec
     226: astore        5
     228: iconst_0
     229: istore        6
     231: aload         5
     233: invokevirtual #224                // Method okhttp3/ConnectionSpec.isTls:()Z
     236: ifeq          204
     239: iconst_0
     240: goto          244
     243: iconst_1
     244: ifeq          441
     247: aload_0
     248: getfield      #96                 // Field sslSocketFactoryOrNull:Ljavax/net/ssl/SSLSocketFactory;
     251: ifnonnull     258
     254: iconst_1
     255: goto          259
     258: iconst_0
     259: istore_1
     260: iconst_0
     261: istore_2
     262: iconst_0
     263: istore_3
     264: iconst_0
     265: istore_3
     266: iconst_0
     267: istore        4
     269: iload_1
     270: ifne          296
     273: iconst_0
     274: istore        5
     276: ldc           #226                // String Check failed.
     278: astore        4
     280: new           #98                 // class java/lang/IllegalStateException
     283: dup
     284: aload         4
     286: invokevirtual #197                // Method java/lang/Object.toString:()Ljava/lang/String;
     289: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     292: checkcast     #106                // class java/lang/Throwable
     295: athrow
     296: aload_0
     297: getfield      #138                // Field certificateChainCleaner:Lokhttp3/internal/tls/CertificateChainCleaner;
     300: ifnonnull     307
     303: iconst_1
     304: goto          308
     307: iconst_0
     308: istore_1
     309: iconst_0
     310: istore_2
     311: iconst_0
     312: istore_3
     313: iconst_0
     314: istore_3
     315: iconst_0
     316: istore        4
     318: iload_1
     319: ifne          345
     322: iconst_0
     323: istore        5
     325: ldc           #226                // String Check failed.
     327: astore        4
     329: new           #98                 // class java/lang/IllegalStateException
     332: dup
     333: aload         4
     335: invokevirtual #197                // Method java/lang/Object.toString:()Ljava/lang/String;
     338: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     341: checkcast     #106                // class java/lang/Throwable
     344: athrow
     345: aload_0
     346: getfield      #113                // Field x509TrustManager:Ljavax/net/ssl/X509TrustManager;
     349: ifnonnull     356
     352: iconst_1
     353: goto          357
     356: iconst_0
     357: istore_1
     358: iconst_0
     359: istore_2
     360: iconst_0
     361: istore_3
     362: iconst_0
     363: istore_3
     364: iconst_0
     365: istore        4
     367: iload_1
     368: ifne          394
     371: iconst_0
     372: istore        5
     374: ldc           #226                // String Check failed.
     376: astore        4
     378: new           #98                 // class java/lang/IllegalStateException
     381: dup
     382: aload         4
     384: invokevirtual #197                // Method java/lang/Object.toString:()Ljava/lang/String;
     387: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     390: checkcast     #106                // class java/lang/Throwable
     393: athrow
     394: aload_0
     395: getfield      #133                // Field certificatePinner:Lokhttp3/CertificatePinner;
     398: getstatic     #231                // Field okhttp3/CertificatePinner.DEFAULT:Lokhttp3/CertificatePinner;
     401: invokestatic  #237                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     404: istore_1
     405: iconst_0
     406: istore_2
     407: iconst_0
     408: istore_3
     409: iconst_0
     410: istore_3
     411: iconst_0
     412: istore        4
     414: iload_1
     415: ifne          543
     418: iconst_0
     419: istore        5
     421: ldc           #226                // String Check failed.
     423: astore        4
     425: new           #98                 // class java/lang/IllegalStateException
     428: dup
     429: aload         4
     431: invokevirtual #197                // Method java/lang/Object.toString:()Ljava/lang/String;
     434: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     437: checkcast     #106                // class java/lang/Throwable
     440: athrow
     441: aload_0
     442: getfield      #96                 // Field sslSocketFactoryOrNull:Ljavax/net/ssl/SSLSocketFactory;
     445: astore_1
     446: iconst_0
     447: istore_2
     448: iconst_0
     449: istore_3
     450: aload_1
     451: ifnonnull     475
     454: iconst_0
     455: istore        4
     457: ldc           #239                // String sslSocketFactory == null
     459: astore_3
     460: new           #98                 // class java/lang/IllegalStateException
     463: dup
     464: aload_3
     465: invokevirtual #197                // Method java/lang/Object.toString:()Ljava/lang/String;
     468: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     471: checkcast     #106                // class java/lang/Throwable
     474: athrow
     475: aload_0
     476: getfield      #138                // Field certificateChainCleaner:Lokhttp3/internal/tls/CertificateChainCleaner;
     479: astore_1
     480: iconst_0
     481: istore_2
     482: iconst_0
     483: istore_3
     484: aload_1
     485: ifnonnull     509
     488: iconst_0
     489: istore        4
     491: ldc           #241                // String certificateChainCleaner == null
     493: astore_3
     494: new           #98                 // class java/lang/IllegalStateException
     497: dup
     498: aload_3
     499: invokevirtual #197                // Method java/lang/Object.toString:()Ljava/lang/String;
     502: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     505: checkcast     #106                // class java/lang/Throwable
     508: athrow
     509: aload_0
     510: getfield      #113                // Field x509TrustManager:Ljavax/net/ssl/X509TrustManager;
     513: astore_1
     514: iconst_0
     515: istore_2
     516: iconst_0
     517: istore_3
     518: aload_1
     519: ifnonnull     543
     522: iconst_0
     523: istore        4
     525: ldc           #243                // String x509TrustManager == null
     527: astore_3
     528: new           #98                 // class java/lang/IllegalStateException
     531: dup
     532: aload_3
     533: invokevirtual #197                // Method java/lang/Object.toString:()Ljava/lang/String;
     536: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     539: checkcast     #106                // class java/lang/Throwable
     542: athrow
     543: return

  public okhttp3.Call newCall(okhttp3.Request);
    Code:
       0: aload_1
       1: ldc_w         #262                // String request
       4: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: new           #268                // class okhttp3/internal/connection/RealCall
      10: dup
      11: aload_0
      12: aload_1
      13: iconst_0
      14: invokespecial #271                // Method okhttp3/internal/connection/RealCall."<init>":(Lokhttp3/OkHttpClient;Lokhttp3/Request;Z)V
      17: checkcast     #273                // class okhttp3/Call
      20: areturn

  public okhttp3.WebSocket newWebSocket(okhttp3.Request, okhttp3.WebSocketListener);
    Code:
       0: aload_1
       1: ldc_w         #262                // String request
       4: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_2
       8: ldc_w         #278                // String listener
      11: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: new           #280                // class okhttp3/internal/ws/RealWebSocket
      17: dup
      18: getstatic     #286                // Field okhttp3/internal/concurrent/TaskRunner.INSTANCE:Lokhttp3/internal/concurrent/TaskRunner;
      21: aload_1
      22: aload_2
      23: new           #288                // class java/util/Random
      26: dup
      27: invokespecial #289                // Method java/util/Random."<init>":()V
      30: aload_0
      31: getfield      #155                // Field pingIntervalMillis:I
      34: i2l
      35: aconst_null
      36: aload_0
      37: getfield      #160                // Field minWebSocketMessageToCompress:J
      40: invokespecial #292                // Method okhttp3/internal/ws/RealWebSocket."<init>":(Lokhttp3/internal/concurrent/TaskRunner;Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;JLokhttp3/internal/ws/WebSocketExtensions;J)V
      43: astore_3
      44: aload_3
      45: aload_0
      46: invokevirtual #296                // Method okhttp3/internal/ws/RealWebSocket.connect:(Lokhttp3/OkHttpClient;)V
      49: aload_3
      50: checkcast     #298                // class okhttp3/WebSocket
      53: areturn

  public okhttp3.OkHttpClient$Builder newBuilder();
    Code:
       0: new           #305                // class okhttp3/OkHttpClient$Builder
       3: dup
       4: aload_0
       5: invokespecial #307                // Method okhttp3/OkHttpClient$Builder."<init>":(Lokhttp3/OkHttpClient;)V
       8: areturn

  public final okhttp3.Dispatcher -deprecated_dispatcher();
    Code:
       0: aload_0
       1: getfield      #18                 // Field dispatcher:Lokhttp3/Dispatcher;
       4: areturn

  public final okhttp3.ConnectionPool -deprecated_connectionPool();
    Code:
       0: aload_0
       1: getfield      #25                 // Field connectionPool:Lokhttp3/ConnectionPool;
       4: areturn

  public final java.util.List<okhttp3.Interceptor> -deprecated_interceptors();
    Code:
       0: aload_0
       1: getfield      #32                 // Field interceptors:Ljava/util/List;
       4: areturn

  public final java.util.List<okhttp3.Interceptor> -deprecated_networkInterceptors();
    Code:
       0: aload_0
       1: getfield      #35                 // Field networkInterceptors:Ljava/util/List;
       4: areturn

  public final okhttp3.EventListener$Factory -deprecated_eventListenerFactory();
    Code:
       0: aload_0
       1: getfield      #40                 // Field eventListenerFactory:Lokhttp3/EventListener$Factory;
       4: areturn

  public final boolean -deprecated_retryOnConnectionFailure();
    Code:
       0: aload_0
       1: getfield      #45                 // Field retryOnConnectionFailure:Z
       4: ireturn

  public final okhttp3.Authenticator -deprecated_authenticator();
    Code:
       0: aload_0
       1: getfield      #50                 // Field authenticator:Lokhttp3/Authenticator;
       4: areturn

  public final boolean -deprecated_followRedirects();
    Code:
       0: aload_0
       1: getfield      #53                 // Field followRedirects:Z
       4: ireturn

  public final boolean -deprecated_followSslRedirects();
    Code:
       0: aload_0
       1: getfield      #56                 // Field followSslRedirects:Z
       4: ireturn

  public final okhttp3.CookieJar -deprecated_cookieJar();
    Code:
       0: aload_0
       1: getfield      #61                 // Field cookieJar:Lokhttp3/CookieJar;
       4: areturn

  public final okhttp3.Cache -deprecated_cache();
    Code:
       0: aload_0
       1: getfield      #67                 // Field cache:Lokhttp3/Cache;
       4: areturn

  public final okhttp3.Dns -deprecated_dns();
    Code:
       0: aload_0
       1: getfield      #72                 // Field dns:Lokhttp3/Dns;
       4: areturn

  public final java.net.Proxy -deprecated_proxy();
    Code:
       0: aload_0
       1: getfield      #77                 // Field proxy:Ljava/net/Proxy;
       4: areturn

  public final java.net.ProxySelector -deprecated_proxySelector();
    Code:
       0: aload_0
       1: getfield      #82                 // Field proxySelector:Ljava/net/ProxySelector;
       4: areturn

  public final okhttp3.Authenticator -deprecated_proxyAuthenticator();
    Code:
       0: aload_0
       1: getfield      #85                 // Field proxyAuthenticator:Lokhttp3/Authenticator;
       4: areturn

  public final javax.net.SocketFactory -deprecated_socketFactory();
    Code:
       0: aload_0
       1: getfield      #90                 // Field socketFactory:Ljavax/net/SocketFactory;
       4: areturn

  public final javax.net.ssl.SSLSocketFactory -deprecated_sslSocketFactory();
    Code:
       0: aload_0
       1: invokevirtual #336                // Method sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
       4: areturn

  public final java.util.List<okhttp3.ConnectionSpec> -deprecated_connectionSpecs();
    Code:
       0: aload_0
       1: getfield      #118                // Field connectionSpecs:Ljava/util/List;
       4: areturn

  public final java.util.List<okhttp3.Protocol> -deprecated_protocols();
    Code:
       0: aload_0
       1: getfield      #123                // Field protocols:Ljava/util/List;
       4: areturn

  public final javax.net.ssl.HostnameVerifier -deprecated_hostnameVerifier();
    Code:
       0: aload_0
       1: getfield      #128                // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
       4: areturn

  public final okhttp3.CertificatePinner -deprecated_certificatePinner();
    Code:
       0: aload_0
       1: getfield      #133                // Field certificatePinner:Lokhttp3/CertificatePinner;
       4: areturn

  public final int -deprecated_callTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #143                // Field callTimeoutMillis:I
       4: ireturn

  public final int -deprecated_connectTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #146                // Field connectTimeoutMillis:I
       4: ireturn

  public final int -deprecated_readTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #149                // Field readTimeoutMillis:I
       4: ireturn

  public final int -deprecated_writeTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #152                // Field writeTimeoutMillis:I
       4: ireturn

  public final int -deprecated_pingIntervalMillis();
    Code:
       0: aload_0
       1: getfield      #155                // Field pingIntervalMillis:I
       4: ireturn

  public okhttp3.OkHttpClient(okhttp3.OkHttpClient$Builder);
    Code:
       0: aload_1
       1: ldc_w         #348                // String builder
       4: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: invokespecial #349                // Method java/lang/Object."<init>":()V
      11: aload_0
      12: aload_1
      13: invokevirtual #352                // Method okhttp3/OkHttpClient$Builder.getDispatcher$okhttp:()Lokhttp3/Dispatcher;
      16: putfield      #18                 // Field dispatcher:Lokhttp3/Dispatcher;
      19: aload_0
      20: aload_1
      21: invokevirtual #355                // Method okhttp3/OkHttpClient$Builder.getConnectionPool$okhttp:()Lokhttp3/ConnectionPool;
      24: putfield      #25                 // Field connectionPool:Lokhttp3/ConnectionPool;
      27: aload_0
      28: aload_1
      29: invokevirtual #358                // Method okhttp3/OkHttpClient$Builder.getInterceptors$okhttp:()Ljava/util/List;
      32: invokestatic  #364                // Method okhttp3/internal/Util.toImmutableList:(Ljava/util/List;)Ljava/util/List;
      35: putfield      #32                 // Field interceptors:Ljava/util/List;
      38: aload_0
      39: aload_1
      40: invokevirtual #367                // Method okhttp3/OkHttpClient$Builder.getNetworkInterceptors$okhttp:()Ljava/util/List;
      43: invokestatic  #364                // Method okhttp3/internal/Util.toImmutableList:(Ljava/util/List;)Ljava/util/List;
      46: putfield      #35                 // Field networkInterceptors:Ljava/util/List;
      49: aload_0
      50: aload_1
      51: invokevirtual #370                // Method okhttp3/OkHttpClient$Builder.getEventListenerFactory$okhttp:()Lokhttp3/EventListener$Factory;
      54: putfield      #40                 // Field eventListenerFactory:Lokhttp3/EventListener$Factory;
      57: aload_0
      58: aload_1
      59: invokevirtual #373                // Method okhttp3/OkHttpClient$Builder.getRetryOnConnectionFailure$okhttp:()Z
      62: putfield      #45                 // Field retryOnConnectionFailure:Z
      65: aload_0
      66: aload_1
      67: invokevirtual #376                // Method okhttp3/OkHttpClient$Builder.getAuthenticator$okhttp:()Lokhttp3/Authenticator;
      70: putfield      #50                 // Field authenticator:Lokhttp3/Authenticator;
      73: aload_0
      74: aload_1
      75: invokevirtual #379                // Method okhttp3/OkHttpClient$Builder.getFollowRedirects$okhttp:()Z
      78: putfield      #53                 // Field followRedirects:Z
      81: aload_0
      82: aload_1
      83: invokevirtual #382                // Method okhttp3/OkHttpClient$Builder.getFollowSslRedirects$okhttp:()Z
      86: putfield      #56                 // Field followSslRedirects:Z
      89: aload_0
      90: aload_1
      91: invokevirtual #385                // Method okhttp3/OkHttpClient$Builder.getCookieJar$okhttp:()Lokhttp3/CookieJar;
      94: putfield      #61                 // Field cookieJar:Lokhttp3/CookieJar;
      97: aload_0
      98: aload_1
      99: invokevirtual #388                // Method okhttp3/OkHttpClient$Builder.getCache$okhttp:()Lokhttp3/Cache;
     102: putfield      #67                 // Field cache:Lokhttp3/Cache;
     105: aload_0
     106: aload_1
     107: invokevirtual #391                // Method okhttp3/OkHttpClient$Builder.getDns$okhttp:()Lokhttp3/Dns;
     110: putfield      #72                 // Field dns:Lokhttp3/Dns;
     113: aload_0
     114: aload_1
     115: invokevirtual #394                // Method okhttp3/OkHttpClient$Builder.getProxy$okhttp:()Ljava/net/Proxy;
     118: putfield      #77                 // Field proxy:Ljava/net/Proxy;
     121: aload_0
     122: aload_1
     123: invokevirtual #394                // Method okhttp3/OkHttpClient$Builder.getProxy$okhttp:()Ljava/net/Proxy;
     126: ifnull        138
     129: getstatic     #399                // Field okhttp3/internal/proxy/NullProxySelector.INSTANCE:Lokhttp3/internal/proxy/NullProxySelector;
     132: checkcast     #401                // class java/net/ProxySelector
     135: goto          167
     138: aload_1
     139: invokevirtual #404                // Method okhttp3/OkHttpClient$Builder.getProxySelector$okhttp:()Ljava/net/ProxySelector;
     142: dup
     143: ifnull        149
     146: goto          153
     149: pop
     150: invokestatic  #407                // Method java/net/ProxySelector.getDefault:()Ljava/net/ProxySelector;
     153: dup
     154: ifnull        160
     157: goto          167
     160: pop
     161: getstatic     #399                // Field okhttp3/internal/proxy/NullProxySelector.INSTANCE:Lokhttp3/internal/proxy/NullProxySelector;
     164: checkcast     #401                // class java/net/ProxySelector
     167: putfield      #82                 // Field proxySelector:Ljava/net/ProxySelector;
     170: aload_0
     171: aload_1
     172: invokevirtual #410                // Method okhttp3/OkHttpClient$Builder.getProxyAuthenticator$okhttp:()Lokhttp3/Authenticator;
     175: putfield      #85                 // Field proxyAuthenticator:Lokhttp3/Authenticator;
     178: aload_0
     179: aload_1
     180: invokevirtual #413                // Method okhttp3/OkHttpClient$Builder.getSocketFactory$okhttp:()Ljavax/net/SocketFactory;
     183: putfield      #90                 // Field socketFactory:Ljavax/net/SocketFactory;
     186: aload_0
     187: aload_1
     188: invokevirtual #416                // Method okhttp3/OkHttpClient$Builder.getConnectionSpecs$okhttp:()Ljava/util/List;
     191: putfield      #118                // Field connectionSpecs:Ljava/util/List;
     194: aload_0
     195: aload_1
     196: invokevirtual #419                // Method okhttp3/OkHttpClient$Builder.getProtocols$okhttp:()Ljava/util/List;
     199: putfield      #123                // Field protocols:Ljava/util/List;
     202: aload_0
     203: aload_1
     204: invokevirtual #422                // Method okhttp3/OkHttpClient$Builder.getHostnameVerifier$okhttp:()Ljavax/net/ssl/HostnameVerifier;
     207: putfield      #128                // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
     210: aload_0
     211: aload_1
     212: invokevirtual #425                // Method okhttp3/OkHttpClient$Builder.getCallTimeout$okhttp:()I
     215: putfield      #143                // Field callTimeoutMillis:I
     218: aload_0
     219: aload_1
     220: invokevirtual #428                // Method okhttp3/OkHttpClient$Builder.getConnectTimeout$okhttp:()I
     223: putfield      #146                // Field connectTimeoutMillis:I
     226: aload_0
     227: aload_1
     228: invokevirtual #431                // Method okhttp3/OkHttpClient$Builder.getReadTimeout$okhttp:()I
     231: putfield      #149                // Field readTimeoutMillis:I
     234: aload_0
     235: aload_1
     236: invokevirtual #434                // Method okhttp3/OkHttpClient$Builder.getWriteTimeout$okhttp:()I
     239: putfield      #152                // Field writeTimeoutMillis:I
     242: aload_0
     243: aload_1
     244: invokevirtual #437                // Method okhttp3/OkHttpClient$Builder.getPingInterval$okhttp:()I
     247: putfield      #155                // Field pingIntervalMillis:I
     250: aload_0
     251: aload_1
     252: invokevirtual #440                // Method okhttp3/OkHttpClient$Builder.getMinWebSocketMessageToCompress$okhttp:()J
     255: putfield      #160                // Field minWebSocketMessageToCompress:J
     258: aload_0
     259: aload_1
     260: invokevirtual #443                // Method okhttp3/OkHttpClient$Builder.getRouteDatabase$okhttp:()Lokhttp3/internal/connection/RouteDatabase;
     263: dup
     264: ifnull        270
     267: goto          278
     270: pop
     271: new           #445                // class okhttp3/internal/connection/RouteDatabase
     274: dup
     275: invokespecial #446                // Method okhttp3/internal/connection/RouteDatabase."<init>":()V
     278: putfield      #166                // Field routeDatabase:Lokhttp3/internal/connection/RouteDatabase;
     281: nop
     282: aload_0
     283: getfield      #118                // Field connectionSpecs:Ljava/util/List;
     286: checkcast     #201                // class java/lang/Iterable
     289: astore_2
     290: iconst_0
     291: istore_3
     292: aload_2
     293: instanceof    #203                // class java/util/Collection
     296: ifeq          315
     299: aload_2
     300: checkcast     #203                // class java/util/Collection
     303: invokeinterface #206,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
     308: ifeq          315
     311: iconst_1
     312: goto          365
     315: aload_2
     316: invokeinterface #210,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     321: astore        4
     323: aload         4
     325: invokeinterface #215,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     330: ifeq          364
     333: aload         4
     335: invokeinterface #219,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     340: astore        5
     342: aload         5
     344: checkcast     #221                // class okhttp3/ConnectionSpec
     347: astore        6
     349: iconst_0
     350: istore        7
     352: aload         6
     354: invokevirtual #224                // Method okhttp3/ConnectionSpec.isTls:()Z
     357: ifeq          323
     360: iconst_0
     361: goto          365
     364: iconst_1
     365: ifeq          402
     368: aload_0
     369: aconst_null
     370: checkcast     #108                // class javax/net/ssl/SSLSocketFactory
     373: putfield      #96                 // Field sslSocketFactoryOrNull:Ljavax/net/ssl/SSLSocketFactory;
     376: aload_0
     377: aconst_null
     378: checkcast     #258                // class okhttp3/internal/tls/CertificateChainCleaner
     381: putfield      #138                // Field certificateChainCleaner:Lokhttp3/internal/tls/CertificateChainCleaner;
     384: aload_0
     385: aconst_null
     386: checkcast     #448                // class javax/net/ssl/X509TrustManager
     389: putfield      #113                // Field x509TrustManager:Ljavax/net/ssl/X509TrustManager;
     392: aload_0
     393: getstatic     #231                // Field okhttp3/CertificatePinner.DEFAULT:Lokhttp3/CertificatePinner;
     396: putfield      #133                // Field certificatePinner:Lokhttp3/CertificatePinner;
     399: goto          534
     402: aload_1
     403: invokevirtual #451                // Method okhttp3/OkHttpClient$Builder.getSslSocketFactoryOrNull$okhttp:()Ljavax/net/ssl/SSLSocketFactory;
     406: ifnull        463
     409: aload_0
     410: aload_1
     411: invokevirtual #451                // Method okhttp3/OkHttpClient$Builder.getSslSocketFactoryOrNull$okhttp:()Ljavax/net/ssl/SSLSocketFactory;
     414: putfield      #96                 // Field sslSocketFactoryOrNull:Ljavax/net/ssl/SSLSocketFactory;
     417: aload_0
     418: aload_1
     419: invokevirtual #454                // Method okhttp3/OkHttpClient$Builder.getCertificateChainCleaner$okhttp:()Lokhttp3/internal/tls/CertificateChainCleaner;
     422: dup
     423: invokestatic  #458                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     426: putfield      #138                // Field certificateChainCleaner:Lokhttp3/internal/tls/CertificateChainCleaner;
     429: aload_0
     430: aload_1
     431: invokevirtual #461                // Method okhttp3/OkHttpClient$Builder.getX509TrustManagerOrNull$okhttp:()Ljavax/net/ssl/X509TrustManager;
     434: dup
     435: invokestatic  #458                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     438: putfield      #113                // Field x509TrustManager:Ljavax/net/ssl/X509TrustManager;
     441: aload_0
     442: aload_1
     443: invokevirtual #464                // Method okhttp3/OkHttpClient$Builder.getCertificatePinner$okhttp:()Lokhttp3/CertificatePinner;
     446: aload_0
     447: getfield      #138                // Field certificateChainCleaner:Lokhttp3/internal/tls/CertificateChainCleaner;
     450: dup
     451: invokestatic  #458                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     454: invokevirtual #468                // Method okhttp3/CertificatePinner.withCertificateChainCleaner$okhttp:(Lokhttp3/internal/tls/CertificateChainCleaner;)Lokhttp3/CertificatePinner;
     457: putfield      #133                // Field certificatePinner:Lokhttp3/CertificatePinner;
     460: goto          534
     463: aload_0
     464: getstatic     #474                // Field okhttp3/internal/platform/Platform.Companion:Lokhttp3/internal/platform/Platform$Companion;
     467: invokevirtual #480                // Method okhttp3/internal/platform/Platform$Companion.get:()Lokhttp3/internal/platform/Platform;
     470: invokevirtual #483                // Method okhttp3/internal/platform/Platform.platformTrustManager:()Ljavax/net/ssl/X509TrustManager;
     473: putfield      #113                // Field x509TrustManager:Ljavax/net/ssl/X509TrustManager;
     476: aload_0
     477: getstatic     #474                // Field okhttp3/internal/platform/Platform.Companion:Lokhttp3/internal/platform/Platform$Companion;
     480: invokevirtual #480                // Method okhttp3/internal/platform/Platform$Companion.get:()Lokhttp3/internal/platform/Platform;
     483: aload_0
     484: getfield      #113                // Field x509TrustManager:Ljavax/net/ssl/X509TrustManager;
     487: dup
     488: invokestatic  #458                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     491: invokevirtual #487                // Method okhttp3/internal/platform/Platform.newSslSocketFactory:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;
     494: putfield      #96                 // Field sslSocketFactoryOrNull:Ljavax/net/ssl/SSLSocketFactory;
     497: aload_0
     498: getstatic     #490                // Field okhttp3/internal/tls/CertificateChainCleaner.Companion:Lokhttp3/internal/tls/CertificateChainCleaner$Companion;
     501: aload_0
     502: getfield      #113                // Field x509TrustManager:Ljavax/net/ssl/X509TrustManager;
     505: dup
     506: invokestatic  #458                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     509: invokevirtual #495                // Method okhttp3/internal/tls/CertificateChainCleaner$Companion.get:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;
     512: putfield      #138                // Field certificateChainCleaner:Lokhttp3/internal/tls/CertificateChainCleaner;
     515: aload_0
     516: aload_1
     517: invokevirtual #464                // Method okhttp3/OkHttpClient$Builder.getCertificatePinner$okhttp:()Lokhttp3/CertificatePinner;
     520: aload_0
     521: getfield      #138                // Field certificateChainCleaner:Lokhttp3/internal/tls/CertificateChainCleaner;
     524: dup
     525: invokestatic  #458                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     528: invokevirtual #468                // Method okhttp3/CertificatePinner.withCertificateChainCleaner$okhttp:(Lokhttp3/internal/tls/CertificateChainCleaner;)Lokhttp3/CertificatePinner;
     531: putfield      #133                // Field certificatePinner:Lokhttp3/CertificatePinner;
     534: aload_0
     535: invokespecial #497                // Method verifyClientState:()V
     538: return

  public okhttp3.OkHttpClient();
    Code:
       0: aload_0
       1: new           #305                // class okhttp3/OkHttpClient$Builder
       4: dup
       5: invokespecial #500                // Method okhttp3/OkHttpClient$Builder."<init>":()V
       8: invokespecial #502                // Method "<init>":(Lokhttp3/OkHttpClient$Builder;)V
      11: return

  static {};
    Code:
       0: new           #541                // class okhttp3/OkHttpClient$Companion
       3: dup
       4: aconst_null
       5: invokespecial #544                // Method okhttp3/OkHttpClient$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #546                // Field Companion:Lokhttp3/OkHttpClient$Companion;
      11: iconst_2
      12: anewarray     #548                // class okhttp3/Protocol
      15: dup
      16: iconst_0
      17: getstatic     #551                // Field okhttp3/Protocol.HTTP_2:Lokhttp3/Protocol;
      20: aastore
      21: dup
      22: iconst_1
      23: getstatic     #554                // Field okhttp3/Protocol.HTTP_1_1:Lokhttp3/Protocol;
      26: aastore
      27: invokestatic  #558                // Method okhttp3/internal/Util.immutableListOf:([Ljava/lang/Object;)Ljava/util/List;
      30: putstatic     #516                // Field DEFAULT_PROTOCOLS:Ljava/util/List;
      33: iconst_2
      34: anewarray     #221                // class okhttp3/ConnectionSpec
      37: dup
      38: iconst_0
      39: getstatic     #561                // Field okhttp3/ConnectionSpec.MODERN_TLS:Lokhttp3/ConnectionSpec;
      42: aastore
      43: dup
      44: iconst_1
      45: getstatic     #564                // Field okhttp3/ConnectionSpec.CLEARTEXT:Lokhttp3/ConnectionSpec;
      48: aastore
      49: invokestatic  #558                // Method okhttp3/internal/Util.immutableListOf:([Ljava/lang/Object;)Ljava/util/List;
      52: putstatic     #519                // Field DEFAULT_CONNECTION_SPECS:Ljava/util/List;
      55: return

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #509                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public static final javax.net.ssl.SSLSocketFactory access$getSslSocketFactoryOrNull$p(okhttp3.OkHttpClient);
    Code:
       0: aload_0
       1: getfield      #96                 // Field sslSocketFactoryOrNull:Ljavax/net/ssl/SSLSocketFactory;
       4: areturn

  public static final java.util.List access$getDEFAULT_PROTOCOLS$cp();
    Code:
       0: getstatic     #516                // Field DEFAULT_PROTOCOLS:Ljava/util/List;
       3: areturn

  public static final java.util.List access$getDEFAULT_CONNECTION_SPECS$cp();
    Code:
       0: getstatic     #519                // Field DEFAULT_CONNECTION_SPECS:Ljava/util/List;
       3: areturn
}
