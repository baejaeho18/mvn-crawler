Compiled from "HeadersReader.kt"
public final class okhttp3.internal.http1.HeadersReader {
  private long headerLimit;

  private final okio.BufferedSource source;

  private static final int HEADER_LIMIT;

  public static final okhttp3.internal.http1.HeadersReader$Companion Companion;

  public final java.lang.String readLine();
    Code:
       0: aload_0
       1: getfield      #13                 // Field source:Lokio/BufferedSource;
       4: aload_0
       5: getfield      #15                 // Field headerLimit:J
       8: invokeinterface #21,  3           // InterfaceMethod okio/BufferedSource.readUtf8LineStrict:(J)Ljava/lang/String;
      13: astore_1
      14: aload_0
      15: dup
      16: getfield      #15                 // Field headerLimit:J
      19: aload_1
      20: invokevirtual #27                 // Method java/lang/String.length:()I
      23: i2l
      24: lsub
      25: putfield      #15                 // Field headerLimit:J
      28: aload_1
      29: areturn

  public final okhttp3.Headers readHeaders();
    Code:
       0: new           #35                 // class okhttp3/Headers$Builder
       3: dup
       4: invokespecial #39                 // Method okhttp3/Headers$Builder."<init>":()V
       7: astore_1
       8: nop
       9: aload_0
      10: invokevirtual #41                 // Method readLine:()Ljava/lang/String;
      13: astore_2
      14: aload_2
      15: checkcast     #43                 // class java/lang/CharSequence
      18: astore_3
      19: iconst_0
      20: istore        4
      22: aload_3
      23: invokeinterface #44,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ifeq          42
      39: goto          51
      42: aload_1
      43: aload_2
      44: invokevirtual #48                 // Method okhttp3/Headers$Builder.addLenient$okhttp:(Ljava/lang/String;)Lokhttp3/Headers$Builder;
      47: pop
      48: goto          8
      51: aload_1
      52: invokevirtual #51                 // Method okhttp3/Headers$Builder.build:()Lokhttp3/Headers;
      55: areturn

  public final okio.BufferedSource getSource();
    Code:
       0: aload_0
       1: getfield      #13                 // Field source:Lokio/BufferedSource;
       4: areturn

  public okhttp3.internal.http1.HeadersReader(okio.BufferedSource);
    Code:
       0: aload_1
       1: ldc           #57                 // String source
       3: invokestatic  #63                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #64                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #13                 // Field source:Lokio/BufferedSource;
      15: aload_0
      16: ldc           #65                 // int 262144
      18: i2l
      19: putfield      #15                 // Field headerLimit:J
      22: return

  static {};
    Code:
       0: new           #86                 // class okhttp3/internal/http1/HeadersReader$Companion
       3: dup
       4: aconst_null
       5: invokespecial #89                 // Method okhttp3/internal/http1/HeadersReader$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #91                 // Field Companion:Lokhttp3/internal/http1/HeadersReader$Companion;
      11: return
}
