Compiled from "Http2Connection.kt"
public final class okhttp3.internal.http2.Http2Connection$ReaderRunnable implements okhttp3.internal.http2.Http2Reader$Handler, kotlin.jvm.functions.Function0<kotlin.Unit> {
  private final okhttp3.internal.http2.Http2Reader reader;

  final okhttp3.internal.http2.Http2Connection this$0;

  public void invoke();
    Code:
       0: getstatic     #28                 // Field okhttp3/internal/http2/ErrorCode.INTERNAL_ERROR:Lokhttp3/internal/http2/ErrorCode;
       3: astore_1
       4: getstatic     #28                 // Field okhttp3/internal/http2/ErrorCode.INTERNAL_ERROR:Lokhttp3/internal/http2/ErrorCode;
       7: astore_2
       8: aconst_null
       9: checkcast     #22                 // class java/io/IOException
      12: astore_3
      13: nop
      14: aload_0
      15: getfield      #32                 // Field reader:Lokhttp3/internal/http2/Http2Reader;
      18: aload_0
      19: checkcast     #7                  // class okhttp3/internal/http2/Http2Reader$Handler
      22: invokevirtual #38                 // Method okhttp3/internal/http2/Http2Reader.readConnectionPreface:(Lokhttp3/internal/http2/Http2Reader$Handler;)V
      25: aload_0
      26: getfield      #32                 // Field reader:Lokhttp3/internal/http2/Http2Reader;
      29: iconst_0
      30: aload_0
      31: checkcast     #7                  // class okhttp3/internal/http2/Http2Reader$Handler
      34: invokevirtual #42                 // Method okhttp3/internal/http2/Http2Reader.nextFrame:(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z
      37: ifeq          43
      40: goto          25
      43: getstatic     #45                 // Field okhttp3/internal/http2/ErrorCode.NO_ERROR:Lokhttp3/internal/http2/ErrorCode;
      46: astore_1
      47: getstatic     #48                 // Field okhttp3/internal/http2/ErrorCode.CANCEL:Lokhttp3/internal/http2/ErrorCode;
      50: astore_2
      51: aload_0
      52: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      55: aload_1
      56: aload_2
      57: aload_3
      58: invokevirtual #58                 // Method okhttp3/internal/http2/Http2Connection.close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
      61: aload_0
      62: getfield      #32                 // Field reader:Lokhttp3/internal/http2/Http2Reader;
      65: checkcast     #60                 // class java/io/Closeable
      68: invokestatic  #66                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
      71: goto          135
      74: astore        4
      76: aload         4
      78: astore_3
      79: getstatic     #69                 // Field okhttp3/internal/http2/ErrorCode.PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
      82: astore_1
      83: getstatic     #69                 // Field okhttp3/internal/http2/ErrorCode.PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
      86: astore_2
      87: aload_0
      88: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      91: aload_1
      92: aload_2
      93: aload_3
      94: invokevirtual #58                 // Method okhttp3/internal/http2/Http2Connection.close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
      97: aload_0
      98: getfield      #32                 // Field reader:Lokhttp3/internal/http2/Http2Reader;
     101: checkcast     #60                 // class java/io/Closeable
     104: invokestatic  #66                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
     107: goto          135
     110: astore        4
     112: aload_0
     113: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     116: aload_1
     117: aload_2
     118: aload_3
     119: invokevirtual #58                 // Method okhttp3/internal/http2/Http2Connection.close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
     122: aload_0
     123: getfield      #32                 // Field reader:Lokhttp3/internal/http2/Http2Reader;
     126: checkcast     #60                 // class java/io/Closeable
     129: invokestatic  #66                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
     132: aload         4
     134: athrow
     135: return
    Exception table:
       from    to  target type
          13    51    74   Class java/io/IOException
          13    51   110   any
          74    87   110   any
         110   112   110   any

  public java.lang.Object invoke();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method invoke:()V
       4: getstatic     #20                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
       7: areturn

  public void data(boolean, int, okio.BufferedSource, int) throws java.io.IOException;
    Code:
       0: aload_3
       1: ldc           #83                 // String source
       3: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      10: iload_2
      11: invokevirtual #93                 // Method okhttp3/internal/http2/Http2Connection.pushedStream$okhttp:(I)Z
      14: ifeq          30
      17: aload_0
      18: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      21: iload_2
      22: aload_3
      23: iload         4
      25: iload_1
      26: invokevirtual #97                 // Method okhttp3/internal/http2/Http2Connection.pushDataLater$okhttp:(ILokio/BufferedSource;IZ)V
      29: return
      30: aload_0
      31: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      34: iload_2
      35: invokevirtual #101                // Method okhttp3/internal/http2/Http2Connection.getStream:(I)Lokhttp3/internal/http2/Http2Stream;
      38: astore        5
      40: aload         5
      42: ifnonnull     76
      45: aload_0
      46: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      49: iload_2
      50: getstatic     #69                 // Field okhttp3/internal/http2/ErrorCode.PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
      53: invokevirtual #105                // Method okhttp3/internal/http2/Http2Connection.writeSynResetLater$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V
      56: aload_0
      57: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      60: iload         4
      62: i2l
      63: invokevirtual #109                // Method okhttp3/internal/http2/Http2Connection.updateConnectionFlowControl$okhttp:(J)V
      66: aload_3
      67: iload         4
      69: i2l
      70: invokeinterface #114,  3          // InterfaceMethod okio/BufferedSource.skip:(J)V
      75: return
      76: aload         5
      78: aload_3
      79: iload         4
      81: invokevirtual #120                // Method okhttp3/internal/http2/Http2Stream.receiveData:(Lokio/BufferedSource;I)V
      84: iload_1
      85: ifeq          97
      88: aload         5
      90: getstatic     #124                // Field okhttp3/internal/Util.EMPTY_HEADERS:Lokhttp3/Headers;
      93: iconst_1
      94: invokevirtual #128                // Method okhttp3/internal/http2/Http2Stream.receiveHeaders:(Lokhttp3/Headers;Z)V
      97: return

  public void headers(boolean, int, int, java.util.List<okhttp3.internal.http2.Header>);
    Code:
       0: aload         4
       2: ldc           #141                // String headerBlock
       4: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      11: iload_2
      12: invokevirtual #93                 // Method okhttp3/internal/http2/Http2Connection.pushedStream$okhttp:(I)Z
      15: ifeq          30
      18: aload_0
      19: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      22: iload_2
      23: aload         4
      25: iload_1
      26: invokevirtual #145                // Method okhttp3/internal/http2/Http2Connection.pushHeadersLater$okhttp:(ILjava/util/List;Z)V
      29: return
      30: aconst_null
      31: astore        5
      33: aload_0
      34: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      37: astore        6
      39: iconst_0
      40: istore        7
      42: iconst_0
      43: istore        8
      45: aload         6
      47: monitorenter
      48: nop
      49: iconst_0
      50: istore        9
      52: aload_0
      53: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      56: iload_2
      57: invokevirtual #101                // Method okhttp3/internal/http2/Http2Connection.getStream:(I)Lokhttp3/internal/http2/Http2Stream;
      60: astore        5
      62: aload         5
      64: ifnonnull     263
      67: aload_0
      68: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      71: invokestatic  #149                // Method okhttp3/internal/http2/Http2Connection.access$isShutdown$p:(Lokhttp3/internal/http2/Http2Connection;)Z
      74: ifeq          81
      77: aload         6
      79: monitorexit
      80: return
      81: iload_2
      82: aload_0
      83: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      86: invokevirtual #153                // Method okhttp3/internal/http2/Http2Connection.getLastGoodStreamId$okhttp:()I
      89: if_icmpgt     96
      92: aload         6
      94: monitorexit
      95: return
      96: iload_2
      97: iconst_2
      98: irem
      99: aload_0
     100: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     103: invokevirtual #156                // Method okhttp3/internal/http2/Http2Connection.getNextStreamId$okhttp:()I
     106: iconst_2
     107: irem
     108: if_icmpne     115
     111: aload         6
     113: monitorexit
     114: return
     115: aload         4
     117: invokestatic  #160                // Method okhttp3/internal/Util.toHeaders:(Ljava/util/List;)Lokhttp3/Headers;
     120: astore        10
     122: new           #116                // class okhttp3/internal/http2/Http2Stream
     125: dup
     126: iload_2
     127: aload_0
     128: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     131: iconst_0
     132: iload_1
     133: aload         10
     135: invokespecial #164                // Method okhttp3/internal/http2/Http2Stream."<init>":(ILokhttp3/internal/http2/Http2Connection;ZZLokhttp3/Headers;)V
     138: astore        11
     140: aload_0
     141: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     144: iload_2
     145: invokevirtual #168                // Method okhttp3/internal/http2/Http2Connection.setLastGoodStreamId$okhttp:(I)V
     148: aload_0
     149: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     152: invokevirtual #172                // Method okhttp3/internal/http2/Http2Connection.getStreams$okhttp:()Ljava/util/Map;
     155: iload_2
     156: invokestatic  #178                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     159: aload         11
     161: invokeinterface #184,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     166: pop
     167: aload_0
     168: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     171: invokestatic  #188                // Method okhttp3/internal/http2/Http2Connection.access$getTaskRunner$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskRunner;
     174: invokevirtual #194                // Method okhttp3/internal/concurrent/TaskRunner.newQueue:()Lokhttp3/internal/concurrent/TaskQueue;
     177: astore        12
     179: new           #196                // class java/lang/StringBuilder
     182: dup
     183: invokespecial #198                // Method java/lang/StringBuilder."<init>":()V
     186: aload_0
     187: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     190: invokevirtual #202                // Method okhttp3/internal/http2/Http2Connection.getConnectionName$okhttp:()Ljava/lang/String;
     193: invokevirtual #206                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: bipush        91
     198: invokevirtual #209                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     201: iload_2
     202: invokevirtual #212                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     205: ldc           #214                // String ] onStream
     207: invokevirtual #206                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: invokevirtual #217                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: astore        13
     215: lconst_0
     216: lstore        14
     218: iconst_1
     219: istore        16
     221: iconst_0
     222: istore        17
     224: aload         12
     226: new           #219                // class okhttp3/internal/http2/Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1
     229: dup
     230: aload         13
     232: iload         16
     234: aload         13
     236: iload         16
     238: aload         11
     240: aload_0
     241: aload         5
     243: iload_2
     244: aload         4
     246: iload_1
     247: invokespecial #222                // Method okhttp3/internal/http2/Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1."<init>":(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Stream;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lokhttp3/internal/http2/Http2Stream;ILjava/util/List;Z)V
     250: checkcast     #224                // class okhttp3/internal/concurrent/Task
     253: lload         14
     255: invokevirtual #230                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
     258: nop
     259: aload         6
     261: monitorexit
     262: return
     263: nop
     264: getstatic     #20                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     267: astore        8
     269: aload         6
     271: monitorexit
     272: goto          283
     275: astore        8
     277: aload         6
     279: monitorexit
     280: aload         8
     282: athrow
     283: aload         5
     285: aload         4
     287: invokestatic  #160                // Method okhttp3/internal/Util.toHeaders:(Ljava/util/List;)Lokhttp3/Headers;
     290: iload_1
     291: invokevirtual #128                // Method okhttp3/internal/http2/Http2Stream.receiveHeaders:(Lokhttp3/Headers;Z)V
     294: return
    Exception table:
       from    to  target type
          48    77   275   any
          81    92   275   any
          96   111   275   any
         115   259   275   any
         263   269   275   any
         275   277   275   any

  public void rstStream(int, okhttp3.internal.http2.ErrorCode);
    Code:
       0: aload_2
       1: ldc           #248                // String errorCode
       3: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      10: iload_1
      11: invokevirtual #93                 // Method okhttp3/internal/http2/Http2Connection.pushedStream$okhttp:(I)Z
      14: ifeq          27
      17: aload_0
      18: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      21: iload_1
      22: aload_2
      23: invokevirtual #251                // Method okhttp3/internal/http2/Http2Connection.pushResetLater$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V
      26: return
      27: aload_0
      28: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      31: iload_1
      32: invokevirtual #254                // Method okhttp3/internal/http2/Http2Connection.removeStream$okhttp:(I)Lokhttp3/internal/http2/Http2Stream;
      35: astore_3
      36: aload_3
      37: dup
      38: ifnull        48
      41: aload_2
      42: invokevirtual #258                // Method okhttp3/internal/http2/Http2Stream.receiveRstStream:(Lokhttp3/internal/http2/ErrorCode;)V
      45: goto          49
      48: pop
      49: return

  public void settings(boolean, okhttp3.internal.http2.Settings);
    Code:
       0: aload_2
       1: ldc_w         #261                // String settings
       4: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      11: invokestatic  #265                // Method okhttp3/internal/http2/Http2Connection.access$getWriterQueue$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;
      14: astore_3
      15: new           #196                // class java/lang/StringBuilder
      18: dup
      19: invokespecial #198                // Method java/lang/StringBuilder."<init>":()V
      22: aload_0
      23: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      26: invokevirtual #202                // Method okhttp3/internal/http2/Http2Connection.getConnectionName$okhttp:()Ljava/lang/String;
      29: invokevirtual #206                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc_w         #267                // String  applyAndAckSettings
      35: invokevirtual #206                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #217                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: astore        4
      43: lconst_0
      44: lstore        5
      46: iconst_1
      47: istore        7
      49: iconst_0
      50: istore        8
      52: aload_3
      53: new           #269                // class okhttp3/internal/http2/Http2Connection$ReaderRunnable$settings$$inlined$execute$1
      56: dup
      57: aload         4
      59: iload         7
      61: aload         4
      63: iload         7
      65: aload_0
      66: iload_1
      67: aload_2
      68: invokespecial #272                // Method okhttp3/internal/http2/Http2Connection$ReaderRunnable$settings$$inlined$execute$1."<init>":(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;ZLokhttp3/internal/http2/Settings;)V
      71: checkcast     #224                // class okhttp3/internal/concurrent/Task
      74: lload         5
      76: invokevirtual #230                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
      79: nop
      80: return

  public final void applyAndAckSettings(boolean, okhttp3.internal.http2.Settings);
    Code:
       0: aload_2
       1: ldc_w         #261                // String settings
       4: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: new           #277                // class kotlin/jvm/internal/Ref$LongRef
      10: dup
      11: invokespecial #278                // Method kotlin/jvm/internal/Ref$LongRef."<init>":()V
      14: astore_3
      15: new           #280                // class kotlin/jvm/internal/Ref$ObjectRef
      18: dup
      19: invokespecial #281                // Method kotlin/jvm/internal/Ref$ObjectRef."<init>":()V
      22: astore        4
      24: new           #280                // class kotlin/jvm/internal/Ref$ObjectRef
      27: dup
      28: invokespecial #281                // Method kotlin/jvm/internal/Ref$ObjectRef."<init>":()V
      31: astore        5
      33: aload_0
      34: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      37: invokevirtual #285                // Method okhttp3/internal/http2/Http2Connection.getWriter:()Lokhttp3/internal/http2/Http2Writer;
      40: astore        6
      42: iconst_0
      43: istore        7
      45: iconst_0
      46: istore        8
      48: aload         6
      50: monitorenter
      51: nop
      52: iconst_0
      53: istore        9
      55: aload_0
      56: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      59: astore        10
      61: iconst_0
      62: istore        11
      64: iconst_0
      65: istore        12
      67: aload         10
      69: monitorenter
      70: nop
      71: iconst_0
      72: istore        13
      74: aload_0
      75: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      78: invokevirtual #289                // Method okhttp3/internal/http2/Http2Connection.getPeerSettings:()Lokhttp3/internal/http2/Settings;
      81: astore        14
      83: aload         5
      85: iload_1
      86: ifeq          93
      89: aload_2
      90: goto          139
      93: new           #291                // class okhttp3/internal/http2/Settings
      96: dup
      97: invokespecial #292                // Method okhttp3/internal/http2/Settings."<init>":()V
     100: astore        15
     102: iconst_0
     103: istore        16
     105: iconst_0
     106: istore        17
     108: aload         15
     110: astore        18
     112: astore        19
     114: iconst_0
     115: istore        20
     117: aload         18
     119: aload         14
     121: invokevirtual #296                // Method okhttp3/internal/http2/Settings.merge:(Lokhttp3/internal/http2/Settings;)V
     124: aload         18
     126: aload_2
     127: invokevirtual #296                // Method okhttp3/internal/http2/Settings.merge:(Lokhttp3/internal/http2/Settings;)V
     130: getstatic     #20                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     133: astore        21
     135: aload         19
     137: aload         15
     139: putfield      #300                // Field kotlin/jvm/internal/Ref$ObjectRef.element:Ljava/lang/Object;
     142: aload         5
     144: getfield      #300                // Field kotlin/jvm/internal/Ref$ObjectRef.element:Ljava/lang/Object;
     147: checkcast     #291                // class okhttp3/internal/http2/Settings
     150: invokevirtual #303                // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
     153: i2l
     154: lstore        22
     156: aload_3
     157: lload         22
     159: aload         14
     161: invokevirtual #303                // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
     164: i2l
     165: lsub
     166: putfield      #305                // Field kotlin/jvm/internal/Ref$LongRef.element:J
     169: aload         4
     171: aload_3
     172: getfield      #305                // Field kotlin/jvm/internal/Ref$LongRef.element:J
     175: lconst_0
     176: lcmp
     177: ifeq          195
     180: aload_0
     181: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     184: invokevirtual #172                // Method okhttp3/internal/http2/Http2Connection.getStreams$okhttp:()Ljava/util/Map;
     187: invokeinterface #309,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     192: ifeq          199
     195: aconst_null
     196: goto          249
     199: aload_0
     200: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     203: invokevirtual #172                // Method okhttp3/internal/http2/Http2Connection.getStreams$okhttp:()Ljava/util/Map;
     206: invokeinterface #313,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     211: astore        17
     213: iconst_0
     214: istore        18
     216: aload         17
     218: astore        20
     220: aload         20
     222: iconst_0
     223: anewarray     #116                // class okhttp3/internal/http2/Http2Stream
     226: invokeinterface #319,  2          // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     231: dup
     232: ifnonnull     246
     235: new           #321                // class java/lang/NullPointerException
     238: dup
     239: ldc_w         #323                // String null cannot be cast to non-null type kotlin.Array<T>
     242: invokespecial #326                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     245: athrow
     246: checkcast     #328                // class "[Lokhttp3/internal/http2/Http2Stream;"
     249: putfield      #300                // Field kotlin/jvm/internal/Ref$ObjectRef.element:Ljava/lang/Object;
     252: aload_0
     253: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     256: aload         5
     258: getfield      #300                // Field kotlin/jvm/internal/Ref$ObjectRef.element:Ljava/lang/Object;
     261: checkcast     #291                // class okhttp3/internal/http2/Settings
     264: invokevirtual #331                // Method okhttp3/internal/http2/Http2Connection.setPeerSettings:(Lokhttp3/internal/http2/Settings;)V
     267: aload_0
     268: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     271: invokestatic  #334                // Method okhttp3/internal/http2/Http2Connection.access$getSettingsListenerQueue$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;
     274: astore        17
     276: new           #196                // class java/lang/StringBuilder
     279: dup
     280: invokespecial #198                // Method java/lang/StringBuilder."<init>":()V
     283: aload_0
     284: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     287: invokevirtual #202                // Method okhttp3/internal/http2/Http2Connection.getConnectionName$okhttp:()Ljava/lang/String;
     290: invokevirtual #206                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     293: ldc_w         #336                // String  onSettings
     296: invokevirtual #206                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: invokevirtual #217                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     302: astore        18
     304: lconst_0
     305: lstore        24
     307: iconst_1
     308: istore        26
     310: iconst_0
     311: istore        27
     313: aload         17
     315: new           #338                // class okhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1
     318: dup
     319: aload         18
     321: iload         26
     323: aload         18
     325: iload         26
     327: aload_0
     328: aload         5
     330: iload_1
     331: aload_2
     332: aload_3
     333: aload         4
     335: invokespecial #341                // Method okhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1."<init>":(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lkotlin/jvm/internal/Ref$ObjectRef;ZLokhttp3/internal/http2/Settings;Lkotlin/jvm/internal/Ref$LongRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V
     338: checkcast     #224                // class okhttp3/internal/concurrent/Task
     341: lload         24
     343: invokevirtual #230                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
     346: nop
     347: nop
     348: getstatic     #20                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     351: astore        12
     353: aload         10
     355: monitorexit
     356: goto          367
     359: astore        12
     361: aload         10
     363: monitorexit
     364: aload         12
     366: athrow
     367: nop
     368: aload_0
     369: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     372: invokevirtual #285                // Method okhttp3/internal/http2/Http2Connection.getWriter:()Lokhttp3/internal/http2/Http2Writer;
     375: aload         5
     377: getfield      #300                // Field kotlin/jvm/internal/Ref$ObjectRef.element:Ljava/lang/Object;
     380: checkcast     #291                // class okhttp3/internal/http2/Settings
     383: invokevirtual #345                // Method okhttp3/internal/http2/Http2Writer.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V
     386: goto          400
     389: astore        10
     391: aload_0
     392: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     395: aload         10
     397: invokestatic  #349                // Method okhttp3/internal/http2/Http2Connection.access$failConnection:(Lokhttp3/internal/http2/Http2Connection;Ljava/io/IOException;)V
     400: nop
     401: getstatic     #20                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     404: astore        8
     406: aload         6
     408: monitorexit
     409: goto          420
     412: astore        8
     414: aload         6
     416: monitorexit
     417: aload         8
     419: athrow
     420: aload         4
     422: getfield      #300                // Field kotlin/jvm/internal/Ref$ObjectRef.element:Ljava/lang/Object;
     425: checkcast     #328                // class "[Lokhttp3/internal/http2/Http2Stream;"
     428: ifnull        514
     431: aload         4
     433: getfield      #300                // Field kotlin/jvm/internal/Ref$ObjectRef.element:Ljava/lang/Object;
     436: checkcast     #328                // class "[Lokhttp3/internal/http2/Http2Stream;"
     439: dup
     440: invokestatic  #353                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     443: astore        8
     445: aload         8
     447: arraylength
     448: istore        9
     450: iconst_0
     451: istore        7
     453: iload         7
     455: iload         9
     457: if_icmpge     514
     460: aload         8
     462: iload         7
     464: aaload
     465: astore        6
     467: iconst_0
     468: istore        10
     470: iconst_0
     471: istore        11
     473: aload         6
     475: monitorenter
     476: nop
     477: iconst_0
     478: istore        12
     480: aload         6
     482: aload_3
     483: getfield      #305                // Field kotlin/jvm/internal/Ref$LongRef.element:J
     486: invokevirtual #356                // Method okhttp3/internal/http2/Http2Stream.addBytesToWriteWindow:(J)V
     489: getstatic     #20                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     492: astore        11
     494: aload         6
     496: monitorexit
     497: goto          508
     500: astore        11
     502: aload         6
     504: monitorexit
     505: aload         11
     507: athrow
     508: iinc          7, 1
     511: goto          453
     514: return
    Exception table:
       from    to  target type
          70   353   359   any
         359   361   359   any
         367   386   389   Class java/io/IOException
          51   406   412   any
         412   414   412   any
         476   494   500   any
         500   502   500   any

  public void ackSettings();
    Code:
       0: return

  public void ping(boolean, int, int);
    Code:
       0: iload_1
       1: ifeq          174
       4: aload_0
       5: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
       8: astore        4
      10: iconst_0
      11: istore        5
      13: iconst_0
      14: istore        6
      16: aload         4
      18: monitorenter
      19: nop
      20: iconst_0
      21: istore        7
      23: iload_2
      24: tableswitch   { // 1 to 3
                     1: 52
                     2: 76
                     3: 100
               default: 154
          }
      52: aload_0
      53: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      56: dup
      57: invokestatic  #383                // Method okhttp3/internal/http2/Http2Connection.access$getIntervalPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;)J
      60: dup2
      61: lstore        8
      63: lconst_1
      64: ladd
      65: invokestatic  #387                // Method okhttp3/internal/http2/Http2Connection.access$setIntervalPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;J)V
      68: lload         8
      70: invokestatic  #392                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      73: goto          158
      76: aload_0
      77: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      80: dup
      81: invokestatic  #395                // Method okhttp3/internal/http2/Http2Connection.access$getDegradedPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;)J
      84: dup2
      85: lstore        8
      87: lconst_1
      88: ladd
      89: invokestatic  #398                // Method okhttp3/internal/http2/Http2Connection.access$setDegradedPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;J)V
      92: lload         8
      94: invokestatic  #392                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      97: goto          158
     100: aload_0
     101: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     104: dup
     105: invokestatic  #401                // Method okhttp3/internal/http2/Http2Connection.access$getAwaitPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;)J
     108: dup2
     109: lstore        8
     111: lconst_1
     112: ladd
     113: invokestatic  #404                // Method okhttp3/internal/http2/Http2Connection.access$setAwaitPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;J)V
     116: aload_0
     117: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     120: astore        10
     122: iconst_0
     123: istore        11
     125: aload         10
     127: dup
     128: ifnonnull     142
     131: new           #321                // class java/lang/NullPointerException
     134: dup
     135: ldc_w         #406                // String null cannot be cast to non-null type java.lang.Object
     138: invokespecial #326                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     141: athrow
     142: checkcast     #5                  // class java/lang/Object
     145: invokevirtual #409                // Method java/lang/Object.notifyAll:()V
     148: getstatic     #20                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     151: goto          158
     154: getstatic     #20                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     157: nop
     158: astore        6
     160: aload         4
     162: monitorexit
     163: goto          249
     166: astore        6
     168: aload         4
     170: monitorexit
     171: aload         6
     173: athrow
     174: aload_0
     175: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     178: invokestatic  #265                // Method okhttp3/internal/http2/Http2Connection.access$getWriterQueue$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;
     181: astore        4
     183: new           #196                // class java/lang/StringBuilder
     186: dup
     187: invokespecial #198                // Method java/lang/StringBuilder."<init>":()V
     190: aload_0
     191: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     194: invokevirtual #202                // Method okhttp3/internal/http2/Http2Connection.getConnectionName$okhttp:()Ljava/lang/String;
     197: invokevirtual #206                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: ldc_w         #411                // String  ping
     203: invokevirtual #206                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: invokevirtual #217                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     209: astore        5
     211: lconst_0
     212: lstore        6
     214: iconst_1
     215: istore        8
     217: iconst_0
     218: istore        9
     220: aload         4
     222: new           #413                // class okhttp3/internal/http2/Http2Connection$ReaderRunnable$ping$$inlined$execute$1
     225: dup
     226: aload         5
     228: iload         8
     230: aload         5
     232: iload         8
     234: aload_0
     235: iload_2
     236: iload_3
     237: invokespecial #416                // Method okhttp3/internal/http2/Http2Connection$ReaderRunnable$ping$$inlined$execute$1."<init>":(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;II)V
     240: checkcast     #224                // class okhttp3/internal/concurrent/Task
     243: lload         6
     245: invokevirtual #230                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
     248: nop
     249: return
    Exception table:
       from    to  target type
          19   160   166   any
         166   168   166   any

  public void goAway(int, okhttp3.internal.http2.ErrorCode, okio.ByteString);
    Code:
       0: aload_2
       1: ldc           #248                // String errorCode
       3: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_3
       7: ldc_w         #426                // String debugData
      10: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      13: aload_3
      14: invokevirtual #431                // Method okio/ByteString.size:()I
      17: ifle          20
      20: aconst_null
      21: astore        4
      23: aload_0
      24: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      27: astore        5
      29: iconst_0
      30: istore        6
      32: iconst_0
      33: istore        7
      35: aload         5
      37: monitorenter
      38: nop
      39: iconst_0
      40: istore        8
      42: aload_0
      43: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      46: invokevirtual #172                // Method okhttp3/internal/http2/Http2Connection.getStreams$okhttp:()Ljava/util/Map;
      49: invokeinterface #313,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      54: astore        9
      56: iconst_0
      57: istore        10
      59: aload         9
      61: astore        11
      63: aload         11
      65: iconst_0
      66: anewarray     #116                // class okhttp3/internal/http2/Http2Stream
      69: invokeinterface #319,  2          // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      74: dup
      75: ifnonnull     89
      78: new           #321                // class java/lang/NullPointerException
      81: dup
      82: ldc_w         #323                // String null cannot be cast to non-null type kotlin.Array<T>
      85: invokespecial #326                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: checkcast     #328                // class "[Lokhttp3/internal/http2/Http2Stream;"
      92: astore        4
      94: aload_0
      95: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      98: iconst_1
      99: invokestatic  #435                // Method okhttp3/internal/http2/Http2Connection.access$setShutdown$p:(Lokhttp3/internal/http2/Http2Connection;Z)V
     102: getstatic     #20                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     105: astore        7
     107: aload         5
     109: monitorexit
     110: goto          121
     113: astore        7
     115: aload         5
     117: monitorexit
     118: aload         7
     120: athrow
     121: aload         4
     123: astore        7
     125: aload         7
     127: arraylength
     128: istore        8
     130: iconst_0
     131: istore        6
     133: iload         6
     135: iload         8
     137: if_icmpge     191
     140: aload         7
     142: iload         6
     144: aaload
     145: astore        5
     147: aload         5
     149: invokevirtual #438                // Method okhttp3/internal/http2/Http2Stream.getId:()I
     152: iload_1
     153: if_icmple     185
     156: aload         5
     158: invokevirtual #441                // Method okhttp3/internal/http2/Http2Stream.isLocallyInitiated:()Z
     161: ifeq          185
     164: aload         5
     166: getstatic     #444                // Field okhttp3/internal/http2/ErrorCode.REFUSED_STREAM:Lokhttp3/internal/http2/ErrorCode;
     169: invokevirtual #258                // Method okhttp3/internal/http2/Http2Stream.receiveRstStream:(Lokhttp3/internal/http2/ErrorCode;)V
     172: aload_0
     173: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
     176: aload         5
     178: invokevirtual #438                // Method okhttp3/internal/http2/Http2Stream.getId:()I
     181: invokevirtual #254                // Method okhttp3/internal/http2/Http2Connection.removeStream$okhttp:(I)Lokhttp3/internal/http2/Http2Stream;
     184: pop
     185: iinc          6, 1
     188: goto          133
     191: return
    Exception table:
       from    to  target type
          38   107   113   any
         113   115   113   any

  public void windowUpdate(int, long);
    Code:
       0: iload_1
       1: ifne          88
       4: aload_0
       5: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
       8: astore        4
      10: iconst_0
      11: istore        5
      13: iconst_0
      14: istore        6
      16: aload         4
      18: monitorenter
      19: nop
      20: iconst_0
      21: istore        7
      23: aload_0
      24: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      27: dup
      28: invokevirtual #455                // Method okhttp3/internal/http2/Http2Connection.getWriteBytesMaximum:()J
      31: lload_2
      32: ladd
      33: invokestatic  #458                // Method okhttp3/internal/http2/Http2Connection.access$setWriteBytesMaximum$p:(Lokhttp3/internal/http2/Http2Connection;J)V
      36: aload_0
      37: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      40: astore        8
      42: iconst_0
      43: istore        9
      45: aload         8
      47: dup
      48: ifnonnull     62
      51: new           #321                // class java/lang/NullPointerException
      54: dup
      55: ldc_w         #406                // String null cannot be cast to non-null type java.lang.Object
      58: invokespecial #326                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: checkcast     #5                  // class java/lang/Object
      65: invokevirtual #409                // Method java/lang/Object.notifyAll:()V
      68: nop
      69: getstatic     #20                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      72: astore        6
      74: aload         4
      76: monitorexit
      77: goto          141
      80: astore        6
      82: aload         4
      84: monitorexit
      85: aload         6
      87: athrow
      88: aload_0
      89: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      92: iload_1
      93: invokevirtual #101                // Method okhttp3/internal/http2/Http2Connection.getStream:(I)Lokhttp3/internal/http2/Http2Stream;
      96: astore        4
      98: aload         4
     100: ifnull        141
     103: iconst_0
     104: istore        5
     106: iconst_0
     107: istore        6
     109: aload         4
     111: monitorenter
     112: nop
     113: iconst_0
     114: istore        7
     116: aload         4
     118: lload_2
     119: invokevirtual #356                // Method okhttp3/internal/http2/Http2Stream.addBytesToWriteWindow:(J)V
     122: getstatic     #20                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     125: astore        6
     127: aload         4
     129: monitorexit
     130: goto          141
     133: astore        6
     135: aload         4
     137: monitorexit
     138: aload         6
     140: athrow
     141: return
    Exception table:
       from    to  target type
          19    74    80   any
          80    82    80   any
         112   127   133   any
         133   135   133   any

  public void priority(int, int, int, boolean);
    Code:
       0: return

  public void pushPromise(int, int, java.util.List<okhttp3.internal.http2.Header>);
    Code:
       0: aload_3
       1: ldc_w         #471                // String requestHeaders
       4: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      11: iload_2
      12: aload_3
      13: invokevirtual #475                // Method okhttp3/internal/http2/Http2Connection.pushRequestLater$okhttp:(ILjava/util/List;)V
      16: return

  public void alternateService(int, java.lang.String, okio.ByteString, java.lang.String, int, long);
    Code:
       0: aload_2
       1: ldc_w         #480                // String origin
       4: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_3
       8: ldc_w         #482                // String protocol
      11: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload         4
      16: ldc_w         #484                // String host
      19: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      22: return

  public final okhttp3.internal.http2.Http2Reader getReader$okhttp();
    Code:
       0: aload_0
       1: getfield      #32                 // Field reader:Lokhttp3/internal/http2/Http2Reader;
       4: areturn

  public okhttp3.internal.http2.Http2Connection$ReaderRunnable(okhttp3.internal.http2.Http2Reader);
    Code:
       0: aload_2
       1: ldc_w         #491                // String reader
       4: invokestatic  #89                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: putfield      #52                 // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      12: aload_0
      13: invokespecial #492                // Method java/lang/Object."<init>":()V
      16: aload_0
      17: aload_2
      18: putfield      #32                 // Field reader:Lokhttp3/internal/http2/Http2Reader;
      21: return
}
