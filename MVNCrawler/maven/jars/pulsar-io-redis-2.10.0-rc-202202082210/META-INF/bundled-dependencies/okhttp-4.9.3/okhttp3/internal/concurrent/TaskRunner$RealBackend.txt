Compiled from "TaskRunner.kt"
public final class okhttp3.internal.concurrent.TaskRunner$RealBackend implements okhttp3.internal.concurrent.TaskRunner$Backend {
  private final java.util.concurrent.ThreadPoolExecutor executor;

  public void beforeTask(okhttp3.internal.concurrent.TaskRunner);
    Code:
       0: aload_1
       1: ldc           #13                 // String taskRunner
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: return

  public long nanoTime();
    Code:
       0: invokestatic  #28                 // Method java/lang/System.nanoTime:()J
       3: lreturn

  public void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner);
    Code:
       0: aload_1
       1: ldc           #13                 // String taskRunner
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: astore_2
       8: iconst_0
       9: istore_3
      10: aload_2
      11: checkcast     #4                  // class java/lang/Object
      14: invokevirtual #33                 // Method java/lang/Object.notify:()V
      17: return

  public void coordinatorWait(okhttp3.internal.concurrent.TaskRunner, long) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: ldc           #13                 // String taskRunner
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: lload_2
       7: ldc2_w        #42                 // long 1000000l
      10: ldiv
      11: lstore        4
      13: lload_2
      14: lload         4
      16: ldc2_w        #42                 // long 1000000l
      19: lmul
      20: lsub
      21: lstore        6
      23: lload         4
      25: lconst_0
      26: lcmp
      27: ifgt          36
      30: lload_2
      31: lconst_0
      32: lcmp
      33: ifle          48
      36: aload_1
      37: checkcast     #4                  // class java/lang/Object
      40: lload         4
      42: lload         6
      44: l2i
      45: invokevirtual #47                 // Method java/lang/Object.wait:(JI)V
      48: return

  public void execute(java.lang.Runnable);
    Code:
       0: aload_1
       1: ldc           #55                 // String runnable
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #57                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      10: aload_1
      11: invokevirtual #61                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
      14: return

  public final void shutdown();
    Code:
       0: aload_0
       1: getfield      #57                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #65                 // Method java/util/concurrent/ThreadPoolExecutor.shutdown:()V
       7: return

  public okhttp3.internal.concurrent.TaskRunner$RealBackend(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_1
       1: ldc           #69                 // String threadFactory
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #71                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: new           #59                 // class java/util/concurrent/ThreadPoolExecutor
      14: dup
      15: iconst_0
      16: ldc           #72                 // int 2147483647
      18: ldc2_w        #73                 // long 60l
      21: getstatic     #80                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      24: new           #82                 // class java/util/concurrent/SynchronousQueue
      27: dup
      28: invokespecial #83                 // Method java/util/concurrent/SynchronousQueue."<init>":()V
      31: checkcast     #85                 // class java/util/concurrent/BlockingQueue
      34: aload_1
      35: invokespecial #88                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      38: putfield      #57                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      41: return
}
