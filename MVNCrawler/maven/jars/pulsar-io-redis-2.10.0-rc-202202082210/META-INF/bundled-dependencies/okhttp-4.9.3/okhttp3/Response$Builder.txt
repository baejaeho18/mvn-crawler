Compiled from "Response.kt"
public class okhttp3.Response$Builder {
  private okhttp3.Request request;

  private okhttp3.Protocol protocol;

  private int code;

  private java.lang.String message;

  private okhttp3.Handshake handshake;

  private okhttp3.Headers$Builder headers;

  private okhttp3.ResponseBody body;

  private okhttp3.Response networkResponse;

  private okhttp3.Response cacheResponse;

  private okhttp3.Response priorResponse;

  private long sentRequestAtMillis;

  private long receivedResponseAtMillis;

  private okhttp3.internal.connection.Exchange exchange;

  public final okhttp3.Request getRequest$okhttp();
    Code:
       0: aload_0
       1: getfield      #11                 // Field request:Lokhttp3/Request;
       4: areturn

  public final void setRequest$okhttp(okhttp3.Request);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field request:Lokhttp3/Request;
       5: return

  public final okhttp3.Protocol getProtocol$okhttp();
    Code:
       0: aload_0
       1: getfield      #22                 // Field protocol:Lokhttp3/Protocol;
       4: areturn

  public final void setProtocol$okhttp(okhttp3.Protocol);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field protocol:Lokhttp3/Protocol;
       5: return

  public final int getCode$okhttp();
    Code:
       0: aload_0
       1: getfield      #30                 // Field code:I
       4: ireturn

  public final void setCode$okhttp(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field code:I
       5: return

  public final java.lang.String getMessage$okhttp();
    Code:
       0: aload_0
       1: getfield      #38                 // Field message:Ljava/lang/String;
       4: areturn

  public final void setMessage$okhttp(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field message:Ljava/lang/String;
       5: return

  public final okhttp3.Handshake getHandshake$okhttp();
    Code:
       0: aload_0
       1: getfield      #46                 // Field handshake:Lokhttp3/Handshake;
       4: areturn

  public final void setHandshake$okhttp(okhttp3.Handshake);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field handshake:Lokhttp3/Handshake;
       5: return

  public final okhttp3.Headers$Builder getHeaders$okhttp();
    Code:
       0: aload_0
       1: getfield      #55                 // Field headers:Lokhttp3/Headers$Builder;
       4: areturn

  public final void setHeaders$okhttp(okhttp3.Headers$Builder);
    Code:
       0: aload_1
       1: ldc           #58                 // String <set-?>
       3: invokestatic  #64                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #55                 // Field headers:Lokhttp3/Headers$Builder;
      11: return

  public final okhttp3.ResponseBody getBody$okhttp();
    Code:
       0: aload_0
       1: getfield      #70                 // Field body:Lokhttp3/ResponseBody;
       4: areturn

  public final void setBody$okhttp(okhttp3.ResponseBody);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #70                 // Field body:Lokhttp3/ResponseBody;
       5: return

  public final okhttp3.Response getNetworkResponse$okhttp();
    Code:
       0: aload_0
       1: getfield      #78                 // Field networkResponse:Lokhttp3/Response;
       4: areturn

  public final void setNetworkResponse$okhttp(okhttp3.Response);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #78                 // Field networkResponse:Lokhttp3/Response;
       5: return

  public final okhttp3.Response getCacheResponse$okhttp();
    Code:
       0: aload_0
       1: getfield      #84                 // Field cacheResponse:Lokhttp3/Response;
       4: areturn

  public final void setCacheResponse$okhttp(okhttp3.Response);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #84                 // Field cacheResponse:Lokhttp3/Response;
       5: return

  public final okhttp3.Response getPriorResponse$okhttp();
    Code:
       0: aload_0
       1: getfield      #89                 // Field priorResponse:Lokhttp3/Response;
       4: areturn

  public final void setPriorResponse$okhttp(okhttp3.Response);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field priorResponse:Lokhttp3/Response;
       5: return

  public final long getSentRequestAtMillis$okhttp();
    Code:
       0: aload_0
       1: getfield      #96                 // Field sentRequestAtMillis:J
       4: lreturn

  public final void setSentRequestAtMillis$okhttp(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #96                 // Field sentRequestAtMillis:J
       5: return

  public final long getReceivedResponseAtMillis$okhttp();
    Code:
       0: aload_0
       1: getfield      #102                // Field receivedResponseAtMillis:J
       4: lreturn

  public final void setReceivedResponseAtMillis$okhttp(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #102                // Field receivedResponseAtMillis:J
       5: return

  public final okhttp3.internal.connection.Exchange getExchange$okhttp();
    Code:
       0: aload_0
       1: getfield      #109                // Field exchange:Lokhttp3/internal/connection/Exchange;
       4: areturn

  public final void setExchange$okhttp(okhttp3.internal.connection.Exchange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #109                // Field exchange:Lokhttp3/internal/connection/Exchange;
       5: return

  public okhttp3.Response$Builder request(okhttp3.Request);
    Code:
       0: aload_1
       1: ldc           #113                // String request
       3: invokestatic  #64                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iconst_0
      11: istore        4
      13: aload_2
      14: checkcast     #2                  // class okhttp3/Response$Builder
      17: astore        5
      19: iconst_0
      20: istore        6
      22: aload         5
      24: aload_1
      25: putfield      #11                 // Field request:Lokhttp3/Request;
      28: nop
      29: aload_2
      30: checkcast     #2                  // class okhttp3/Response$Builder
      33: areturn

  public okhttp3.Response$Builder protocol(okhttp3.Protocol);
    Code:
       0: aload_1
       1: ldc           #117                // String protocol
       3: invokestatic  #64                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iconst_0
      11: istore        4
      13: aload_2
      14: checkcast     #2                  // class okhttp3/Response$Builder
      17: astore        5
      19: iconst_0
      20: istore        6
      22: aload         5
      24: aload_1
      25: putfield      #22                 // Field protocol:Lokhttp3/Protocol;
      28: nop
      29: aload_2
      30: checkcast     #2                  // class okhttp3/Response$Builder
      33: areturn

  public okhttp3.Response$Builder code(int);
    Code:
       0: aload_0
       1: astore_2
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        4
       7: aload_2
       8: checkcast     #2                  // class okhttp3/Response$Builder
      11: astore        5
      13: iconst_0
      14: istore        6
      16: aload         5
      18: iload_1
      19: putfield      #30                 // Field code:I
      22: nop
      23: aload_2
      24: checkcast     #2                  // class okhttp3/Response$Builder
      27: areturn

  public okhttp3.Response$Builder message(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #122                // String message
       3: invokestatic  #64                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iconst_0
      11: istore        4
      13: aload_2
      14: checkcast     #2                  // class okhttp3/Response$Builder
      17: astore        5
      19: iconst_0
      20: istore        6
      22: aload         5
      24: aload_1
      25: putfield      #38                 // Field message:Ljava/lang/String;
      28: nop
      29: aload_2
      30: checkcast     #2                  // class okhttp3/Response$Builder
      33: areturn

  public okhttp3.Response$Builder handshake(okhttp3.Handshake);
    Code:
       0: aload_0
       1: astore_2
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        4
       7: aload_2
       8: checkcast     #2                  // class okhttp3/Response$Builder
      11: astore        5
      13: iconst_0
      14: istore        6
      16: aload         5
      18: aload_1
      19: putfield      #46                 // Field handshake:Lokhttp3/Handshake;
      22: nop
      23: aload_2
      24: checkcast     #2                  // class okhttp3/Response$Builder
      27: areturn

  public okhttp3.Response$Builder header(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #129                // String name
       3: invokestatic  #64                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #131                // String value
       9: invokestatic  #64                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: astore_3
      14: iconst_0
      15: istore        4
      17: iconst_0
      18: istore        5
      20: aload_3
      21: checkcast     #2                  // class okhttp3/Response$Builder
      24: astore        6
      26: iconst_0
      27: istore        7
      29: aload         6
      31: getfield      #55                 // Field headers:Lokhttp3/Headers$Builder;
      34: aload_1
      35: aload_2
      36: invokevirtual #137                // Method okhttp3/Headers$Builder.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
      39: pop
      40: nop
      41: aload_3
      42: checkcast     #2                  // class okhttp3/Response$Builder
      45: areturn

  public okhttp3.Response$Builder addHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #129                // String name
       3: invokestatic  #64                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #131                // String value
       9: invokestatic  #64                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: astore_3
      14: iconst_0
      15: istore        4
      17: iconst_0
      18: istore        5
      20: aload_3
      21: checkcast     #2                  // class okhttp3/Response$Builder
      24: astore        6
      26: iconst_0
      27: istore        7
      29: aload         6
      31: getfield      #55                 // Field headers:Lokhttp3/Headers$Builder;
      34: aload_1
      35: aload_2
      36: invokevirtual #142                // Method okhttp3/Headers$Builder.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
      39: pop
      40: nop
      41: aload_3
      42: checkcast     #2                  // class okhttp3/Response$Builder
      45: areturn

  public okhttp3.Response$Builder removeHeader(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #129                // String name
       3: invokestatic  #64                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iconst_0
      11: istore        4
      13: aload_2
      14: checkcast     #2                  // class okhttp3/Response$Builder
      17: astore        5
      19: iconst_0
      20: istore        6
      22: aload         5
      24: getfield      #55                 // Field headers:Lokhttp3/Headers$Builder;
      27: aload_1
      28: invokevirtual #148                // Method okhttp3/Headers$Builder.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;
      31: pop
      32: nop
      33: aload_2
      34: checkcast     #2                  // class okhttp3/Response$Builder
      37: areturn

  public okhttp3.Response$Builder headers(okhttp3.Headers);
    Code:
       0: aload_1
       1: ldc           #151                // String headers
       3: invokestatic  #64                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iconst_0
      11: istore        4
      13: aload_2
      14: checkcast     #2                  // class okhttp3/Response$Builder
      17: astore        5
      19: iconst_0
      20: istore        6
      22: aload         5
      24: aload_1
      25: invokevirtual #156                // Method okhttp3/Headers.newBuilder:()Lokhttp3/Headers$Builder;
      28: putfield      #55                 // Field headers:Lokhttp3/Headers$Builder;
      31: nop
      32: aload_2
      33: checkcast     #2                  // class okhttp3/Response$Builder
      36: areturn

  public okhttp3.Response$Builder body(okhttp3.ResponseBody);
    Code:
       0: aload_0
       1: astore_2
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        4
       7: aload_2
       8: checkcast     #2                  // class okhttp3/Response$Builder
      11: astore        5
      13: iconst_0
      14: istore        6
      16: aload         5
      18: aload_1
      19: putfield      #70                 // Field body:Lokhttp3/ResponseBody;
      22: nop
      23: aload_2
      24: checkcast     #2                  // class okhttp3/Response$Builder
      27: areturn

  public okhttp3.Response$Builder networkResponse(okhttp3.Response);
    Code:
       0: aload_0
       1: astore_2
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        4
       7: aload_2
       8: checkcast     #2                  // class okhttp3/Response$Builder
      11: astore        5
      13: iconst_0
      14: istore        6
      16: aload         5
      18: ldc           #162                // String networkResponse
      20: aload_1
      21: invokespecial #166                // Method checkSupportResponse:(Ljava/lang/String;Lokhttp3/Response;)V
      24: aload         5
      26: aload_1
      27: putfield      #78                 // Field networkResponse:Lokhttp3/Response;
      30: nop
      31: aload_2
      32: checkcast     #2                  // class okhttp3/Response$Builder
      35: areturn

  public okhttp3.Response$Builder cacheResponse(okhttp3.Response);
    Code:
       0: aload_0
       1: astore_2
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        4
       7: aload_2
       8: checkcast     #2                  // class okhttp3/Response$Builder
      11: astore        5
      13: iconst_0
      14: istore        6
      16: aload         5
      18: ldc           #168                // String cacheResponse
      20: aload_1
      21: invokespecial #166                // Method checkSupportResponse:(Ljava/lang/String;Lokhttp3/Response;)V
      24: aload         5
      26: aload_1
      27: putfield      #84                 // Field cacheResponse:Lokhttp3/Response;
      30: nop
      31: aload_2
      32: checkcast     #2                  // class okhttp3/Response$Builder
      35: areturn

  private final void checkSupportResponse(java.lang.String, okhttp3.Response);
    Code:
       0: aload_2
       1: dup
       2: ifnull        286
       5: astore_3
       6: iconst_0
       7: istore        4
       9: iconst_0
      10: istore        5
      12: aload_3
      13: astore        6
      15: iconst_0
      16: istore        7
      18: aload         6
      20: invokevirtual #173                // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
      23: ifnonnull     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: istore        8
      33: iconst_0
      34: istore        9
      36: iconst_0
      37: istore        10
      39: iload         8
      41: ifne          84
      44: iconst_0
      45: istore        11
      47: new           #175                // class java/lang/StringBuilder
      50: dup
      51: invokespecial #179                // Method java/lang/StringBuilder."<init>":()V
      54: aload_1
      55: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #185                // String .body != null
      60: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #188                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: astore        10
      68: new           #190                // class java/lang/IllegalArgumentException
      71: dup
      72: aload         10
      74: invokevirtual #191                // Method java/lang/Object.toString:()Ljava/lang/String;
      77: invokespecial #193                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: checkcast     #195                // class java/lang/Throwable
      83: athrow
      84: aload         6
      86: invokevirtual #197                // Method okhttp3/Response.networkResponse:()Lokhttp3/Response;
      89: ifnonnull     96
      92: iconst_1
      93: goto          97
      96: iconst_0
      97: istore        8
      99: iconst_0
     100: istore        9
     102: iconst_0
     103: istore        10
     105: iload         8
     107: ifne          150
     110: iconst_0
     111: istore        11
     113: new           #175                // class java/lang/StringBuilder
     116: dup
     117: invokespecial #179                // Method java/lang/StringBuilder."<init>":()V
     120: aload_1
     121: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: ldc           #199                // String .networkResponse != null
     126: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #188                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: astore        10
     134: new           #190                // class java/lang/IllegalArgumentException
     137: dup
     138: aload         10
     140: invokevirtual #191                // Method java/lang/Object.toString:()Ljava/lang/String;
     143: invokespecial #193                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     146: checkcast     #195                // class java/lang/Throwable
     149: athrow
     150: aload         6
     152: invokevirtual #201                // Method okhttp3/Response.cacheResponse:()Lokhttp3/Response;
     155: ifnonnull     162
     158: iconst_1
     159: goto          163
     162: iconst_0
     163: istore        8
     165: iconst_0
     166: istore        9
     168: iconst_0
     169: istore        10
     171: iload         8
     173: ifne          216
     176: iconst_0
     177: istore        11
     179: new           #175                // class java/lang/StringBuilder
     182: dup
     183: invokespecial #179                // Method java/lang/StringBuilder."<init>":()V
     186: aload_1
     187: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: ldc           #203                // String .cacheResponse != null
     192: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: invokevirtual #188                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     198: astore        10
     200: new           #190                // class java/lang/IllegalArgumentException
     203: dup
     204: aload         10
     206: invokevirtual #191                // Method java/lang/Object.toString:()Ljava/lang/String;
     209: invokespecial #193                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     212: checkcast     #195                // class java/lang/Throwable
     215: athrow
     216: aload         6
     218: invokevirtual #205                // Method okhttp3/Response.priorResponse:()Lokhttp3/Response;
     221: ifnonnull     228
     224: iconst_1
     225: goto          229
     228: iconst_0
     229: istore        8
     231: iconst_0
     232: istore        9
     234: iconst_0
     235: istore        10
     237: iload         8
     239: ifne          282
     242: iconst_0
     243: istore        11
     245: new           #175                // class java/lang/StringBuilder
     248: dup
     249: invokespecial #179                // Method java/lang/StringBuilder."<init>":()V
     252: aload_1
     253: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     256: ldc           #207                // String .priorResponse != null
     258: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: invokevirtual #188                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     264: astore        10
     266: new           #190                // class java/lang/IllegalArgumentException
     269: dup
     270: aload         10
     272: invokevirtual #191                // Method java/lang/Object.toString:()Ljava/lang/String;
     275: invokespecial #193                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     278: checkcast     #195                // class java/lang/Throwable
     281: athrow
     282: nop
     283: goto          287
     286: pop
     287: return

  public okhttp3.Response$Builder priorResponse(okhttp3.Response);
    Code:
       0: aload_0
       1: astore_2
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        4
       7: aload_2
       8: checkcast     #2                  // class okhttp3/Response$Builder
      11: astore        5
      13: iconst_0
      14: istore        6
      16: aload         5
      18: aload_1
      19: invokespecial #218                // Method checkPriorResponse:(Lokhttp3/Response;)V
      22: aload         5
      24: aload_1
      25: putfield      #89                 // Field priorResponse:Lokhttp3/Response;
      28: nop
      29: aload_2
      30: checkcast     #2                  // class okhttp3/Response$Builder
      33: areturn

  private final void checkPriorResponse(okhttp3.Response);
    Code:
       0: aload_1
       1: dup
       2: ifnull        70
       5: astore_2
       6: iconst_0
       7: istore_3
       8: iconst_0
       9: istore        4
      11: aload_2
      12: astore        5
      14: iconst_0
      15: istore        6
      17: aload         5
      19: invokevirtual #173                // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
      22: ifnonnull     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: istore        7
      32: iconst_0
      33: istore        8
      35: iconst_0
      36: istore        9
      38: iload         7
      40: ifne          66
      43: iconst_0
      44: istore        10
      46: ldc           #221                // String priorResponse.body != null
      48: astore        9
      50: new           #190                // class java/lang/IllegalArgumentException
      53: dup
      54: aload         9
      56: invokevirtual #191                // Method java/lang/Object.toString:()Ljava/lang/String;
      59: invokespecial #193                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: checkcast     #195                // class java/lang/Throwable
      65: athrow
      66: nop
      67: goto          71
      70: pop
      71: return

  public okhttp3.Response$Builder sentRequestAtMillis(long);
    Code:
       0: aload_0
       1: astore_3
       2: iconst_0
       3: istore        4
       5: iconst_0
       6: istore        5
       8: aload_3
       9: checkcast     #2                  // class okhttp3/Response$Builder
      12: astore        6
      14: iconst_0
      15: istore        7
      17: aload         6
      19: lload_1
      20: putfield      #96                 // Field sentRequestAtMillis:J
      23: nop
      24: aload_3
      25: checkcast     #2                  // class okhttp3/Response$Builder
      28: areturn

  public okhttp3.Response$Builder receivedResponseAtMillis(long);
    Code:
       0: aload_0
       1: astore_3
       2: iconst_0
       3: istore        4
       5: iconst_0
       6: istore        5
       8: aload_3
       9: checkcast     #2                  // class okhttp3/Response$Builder
      12: astore        6
      14: iconst_0
      15: istore        7
      17: aload         6
      19: lload_1
      20: putfield      #102                // Field receivedResponseAtMillis:J
      23: nop
      24: aload_3
      25: checkcast     #2                  // class okhttp3/Response$Builder
      28: areturn

  public final void initExchange$okhttp(okhttp3.internal.connection.Exchange);
    Code:
       0: aload_1
       1: ldc           #229                // String deferredTrailers
       3: invokestatic  #64                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #109                // Field exchange:Lokhttp3/internal/connection/Exchange;
      11: return

  public okhttp3.Response build();
    Code:
       0: aload_0
       1: getfield      #30                 // Field code:I
       4: iflt          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_1
      13: iconst_0
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_1
      18: ifne          62
      21: iconst_0
      22: istore        4
      24: new           #175                // class java/lang/StringBuilder
      27: dup
      28: invokespecial #179                // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #232                // String code < 0:
      33: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #30                 // Field code:I
      40: invokevirtual #235                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #188                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: astore_3
      47: new           #237                // class java/lang/IllegalStateException
      50: dup
      51: aload_3
      52: invokevirtual #191                // Method java/lang/Object.toString:()Ljava/lang/String;
      55: invokespecial #238                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      58: checkcast     #195                // class java/lang/Throwable
      61: athrow
      62: aload_0
      63: getfield      #11                 // Field request:Lokhttp3/Request;
      66: astore_1
      67: iconst_0
      68: istore_2
      69: iconst_0
      70: istore_3
      71: aload_1
      72: ifnonnull     100
      75: iconst_0
      76: istore        4
      78: ldc           #240                // String request == null
      80: astore        7
      82: aload         7
      84: astore_3
      85: new           #237                // class java/lang/IllegalStateException
      88: dup
      89: aload_3
      90: invokevirtual #191                // Method java/lang/Object.toString:()Ljava/lang/String;
      93: invokespecial #238                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      96: checkcast     #195                // class java/lang/Throwable
      99: athrow
     100: aload_1
     101: aload_0
     102: getfield      #22                 // Field protocol:Lokhttp3/Protocol;
     105: astore_1
     106: iconst_0
     107: istore_2
     108: iconst_0
     109: istore_3
     110: aload_1
     111: ifnonnull     143
     114: astore        7
     116: iconst_0
     117: istore        4
     119: ldc           #242                // String protocol == null
     121: astore        8
     123: aload         7
     125: aload         8
     127: astore_3
     128: new           #237                // class java/lang/IllegalStateException
     131: dup
     132: aload_3
     133: invokevirtual #191                // Method java/lang/Object.toString:()Ljava/lang/String;
     136: invokespecial #238                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     139: checkcast     #195                // class java/lang/Throwable
     142: athrow
     143: aload_1
     144: aload_0
     145: getfield      #38                 // Field message:Ljava/lang/String;
     148: astore_1
     149: iconst_0
     150: istore_2
     151: iconst_0
     152: istore_3
     153: aload_1
     154: ifnonnull     190
     157: astore        8
     159: astore        7
     161: iconst_0
     162: istore        4
     164: ldc           #244                // String message == null
     166: astore        9
     168: aload         7
     170: aload         8
     172: aload         9
     174: astore_3
     175: new           #237                // class java/lang/IllegalStateException
     178: dup
     179: aload_3
     180: invokevirtual #191                // Method java/lang/Object.toString:()Ljava/lang/String;
     183: invokespecial #238                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     186: checkcast     #195                // class java/lang/Throwable
     189: athrow
     190: aload_1
     191: aload_0
     192: getfield      #30                 // Field code:I
     195: aload_0
     196: getfield      #46                 // Field handshake:Lokhttp3/Handshake;
     199: aload_0
     200: getfield      #55                 // Field headers:Lokhttp3/Headers$Builder;
     203: invokevirtual #247                // Method okhttp3/Headers$Builder.build:()Lokhttp3/Headers;
     206: aload_0
     207: getfield      #70                 // Field body:Lokhttp3/ResponseBody;
     210: aload_0
     211: getfield      #78                 // Field networkResponse:Lokhttp3/Response;
     214: aload_0
     215: getfield      #84                 // Field cacheResponse:Lokhttp3/Response;
     218: aload_0
     219: getfield      #89                 // Field priorResponse:Lokhttp3/Response;
     222: aload_0
     223: getfield      #96                 // Field sentRequestAtMillis:J
     226: aload_0
     227: getfield      #102                // Field receivedResponseAtMillis:J
     230: aload_0
     231: getfield      #109                // Field exchange:Lokhttp3/internal/connection/Exchange;
     234: astore        10
     236: lstore        11
     238: lstore        13
     240: astore        15
     242: astore        16
     244: astore        17
     246: astore        18
     248: astore        19
     250: astore        20
     252: istore        21
     254: astore        22
     256: astore        23
     258: astore        24
     260: new           #171                // class okhttp3/Response
     263: dup
     264: aload         24
     266: aload         23
     268: aload         22
     270: iload         21
     272: aload         20
     274: aload         19
     276: aload         18
     278: aload         17
     280: aload         16
     282: aload         15
     284: lload         13
     286: lload         11
     288: aload         10
     290: invokespecial #250                // Method okhttp3/Response."<init>":(Lokhttp3/Request;Lokhttp3/Protocol;Ljava/lang/String;ILokhttp3/Handshake;Lokhttp3/Headers;Lokhttp3/ResponseBody;Lokhttp3/Response;Lokhttp3/Response;Lokhttp3/Response;JJLokhttp3/internal/connection/Exchange;)V
     293: areturn

  public okhttp3.Response$Builder();
    Code:
       0: aload_0
       1: invokespecial #259                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #30                 // Field code:I
       9: aload_0
      10: new           #133                // class okhttp3/Headers$Builder
      13: dup
      14: invokespecial #260                // Method okhttp3/Headers$Builder."<init>":()V
      17: putfield      #55                 // Field headers:Lokhttp3/Headers$Builder;
      20: return

  public okhttp3.Response$Builder(okhttp3.Response);
    Code:
       0: aload_1
       1: ldc_w         #261                // String response
       4: invokestatic  #64                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: invokespecial #259                // Method java/lang/Object."<init>":()V
      11: aload_0
      12: iconst_m1
      13: putfield      #30                 // Field code:I
      16: aload_0
      17: aload_1
      18: invokevirtual #263                // Method okhttp3/Response.request:()Lokhttp3/Request;
      21: putfield      #11                 // Field request:Lokhttp3/Request;
      24: aload_0
      25: aload_1
      26: invokevirtual #265                // Method okhttp3/Response.protocol:()Lokhttp3/Protocol;
      29: putfield      #22                 // Field protocol:Lokhttp3/Protocol;
      32: aload_0
      33: aload_1
      34: invokevirtual #267                // Method okhttp3/Response.code:()I
      37: putfield      #30                 // Field code:I
      40: aload_0
      41: aload_1
      42: invokevirtual #269                // Method okhttp3/Response.message:()Ljava/lang/String;
      45: putfield      #38                 // Field message:Ljava/lang/String;
      48: aload_0
      49: aload_1
      50: invokevirtual #271                // Method okhttp3/Response.handshake:()Lokhttp3/Handshake;
      53: putfield      #46                 // Field handshake:Lokhttp3/Handshake;
      56: aload_0
      57: aload_1
      58: invokevirtual #273                // Method okhttp3/Response.headers:()Lokhttp3/Headers;
      61: invokevirtual #156                // Method okhttp3/Headers.newBuilder:()Lokhttp3/Headers$Builder;
      64: putfield      #55                 // Field headers:Lokhttp3/Headers$Builder;
      67: aload_0
      68: aload_1
      69: invokevirtual #173                // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
      72: putfield      #70                 // Field body:Lokhttp3/ResponseBody;
      75: aload_0
      76: aload_1
      77: invokevirtual #197                // Method okhttp3/Response.networkResponse:()Lokhttp3/Response;
      80: putfield      #78                 // Field networkResponse:Lokhttp3/Response;
      83: aload_0
      84: aload_1
      85: invokevirtual #201                // Method okhttp3/Response.cacheResponse:()Lokhttp3/Response;
      88: putfield      #84                 // Field cacheResponse:Lokhttp3/Response;
      91: aload_0
      92: aload_1
      93: invokevirtual #205                // Method okhttp3/Response.priorResponse:()Lokhttp3/Response;
      96: putfield      #89                 // Field priorResponse:Lokhttp3/Response;
      99: aload_0
     100: aload_1
     101: invokevirtual #275                // Method okhttp3/Response.sentRequestAtMillis:()J
     104: putfield      #96                 // Field sentRequestAtMillis:J
     107: aload_0
     108: aload_1
     109: invokevirtual #277                // Method okhttp3/Response.receivedResponseAtMillis:()J
     112: putfield      #102                // Field receivedResponseAtMillis:J
     115: aload_0
     116: aload_1
     117: invokevirtual #279                // Method okhttp3/Response.exchange:()Lokhttp3/internal/connection/Exchange;
     120: putfield      #109                // Field exchange:Lokhttp3/internal/connection/Exchange;
     123: return
}
