Compiled from "ConnectionSpec.kt"
public final class okhttp3.ConnectionSpec {
  private final boolean isTls;

  private final boolean supportsTlsExtensions;

  private final java.lang.String[] cipherSuitesAsString;

  private final java.lang.String[] tlsVersionsAsString;

  private static final okhttp3.CipherSuite[] RESTRICTED_CIPHER_SUITES;

  private static final okhttp3.CipherSuite[] APPROVED_CIPHER_SUITES;

  public static final okhttp3.ConnectionSpec RESTRICTED_TLS;

  public static final okhttp3.ConnectionSpec MODERN_TLS;

  public static final okhttp3.ConnectionSpec COMPATIBLE_TLS;

  public static final okhttp3.ConnectionSpec CLEARTEXT;

  public static final okhttp3.ConnectionSpec$Companion Companion;

  public final java.util.List<okhttp3.CipherSuite> cipherSuites();
    Code:
       0: aload_0
       1: getfield      #14                 // Field cipherSuitesAsString:[Ljava/lang/String;
       4: dup
       5: ifnull        106
       8: astore_1
       9: iconst_0
      10: istore_2
      11: aload_1
      12: astore_3
      13: new           #16                 // class java/util/ArrayList
      16: dup
      17: aload_1
      18: arraylength
      19: invokespecial #20                 // Method java/util/ArrayList."<init>":(I)V
      22: checkcast     #22                 // class java/util/Collection
      25: astore        4
      27: iconst_0
      28: istore        5
      30: aload_3
      31: astore        6
      33: aload         6
      35: arraylength
      36: istore        7
      38: iconst_0
      39: istore        8
      41: iload         8
      43: iload         7
      45: if_icmpge     92
      48: aload         6
      50: iload         8
      52: aaload
      53: astore        9
      55: aload         4
      57: aload         9
      59: astore        10
      61: astore        12
      63: iconst_0
      64: istore        11
      66: getstatic     #28                 // Field okhttp3/CipherSuite.Companion:Lokhttp3/CipherSuite$Companion;
      69: aload         10
      71: invokevirtual #34                 // Method okhttp3/CipherSuite$Companion.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;
      74: astore        13
      76: aload         12
      78: aload         13
      80: invokeinterface #38,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      85: pop
      86: iinc          8, 1
      89: goto          41
      92: aload         4
      94: checkcast     #40                 // class java/util/List
      97: checkcast     #42                 // class java/lang/Iterable
     100: invokestatic  #48                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
     103: goto          108
     106: pop
     107: aconst_null
     108: areturn

  public final java.util.List<okhttp3.CipherSuite> -deprecated_cipherSuites();
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method cipherSuites:()Ljava/util/List;
       4: areturn

  public final java.util.List<okhttp3.TlsVersion> tlsVersions();
    Code:
       0: aload_0
       1: getfield      #82                 // Field tlsVersionsAsString:[Ljava/lang/String;
       4: dup
       5: ifnull        106
       8: astore_1
       9: iconst_0
      10: istore_2
      11: aload_1
      12: astore_3
      13: new           #16                 // class java/util/ArrayList
      16: dup
      17: aload_1
      18: arraylength
      19: invokespecial #20                 // Method java/util/ArrayList."<init>":(I)V
      22: checkcast     #22                 // class java/util/Collection
      25: astore        4
      27: iconst_0
      28: istore        5
      30: aload_3
      31: astore        6
      33: aload         6
      35: arraylength
      36: istore        7
      38: iconst_0
      39: istore        8
      41: iload         8
      43: iload         7
      45: if_icmpge     92
      48: aload         6
      50: iload         8
      52: aaload
      53: astore        9
      55: aload         4
      57: aload         9
      59: astore        10
      61: astore        12
      63: iconst_0
      64: istore        11
      66: getstatic     #87                 // Field okhttp3/TlsVersion.Companion:Lokhttp3/TlsVersion$Companion;
      69: aload         10
      71: invokevirtual #92                 // Method okhttp3/TlsVersion$Companion.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;
      74: astore        13
      76: aload         12
      78: aload         13
      80: invokeinterface #38,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      85: pop
      86: iinc          8, 1
      89: goto          41
      92: aload         4
      94: checkcast     #40                 // class java/util/List
      97: checkcast     #42                 // class java/lang/Iterable
     100: invokestatic  #48                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
     103: goto          108
     106: pop
     107: aconst_null
     108: areturn

  public final java.util.List<okhttp3.TlsVersion> -deprecated_tlsVersions();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method tlsVersions:()Ljava/util/List;
       4: areturn

  public final boolean -deprecated_supportsTlsExtensions();
    Code:
       0: aload_0
       1: getfield      #102                // Field supportsTlsExtensions:Z
       4: ireturn

  public final void apply$okhttp(javax.net.ssl.SSLSocket, boolean);
    Code:
       0: aload_1
       1: ldc           #107                // String sslSocket
       3: invokestatic  #113                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: iload_2
       9: invokespecial #117                // Method supportedSpec:(Ljavax/net/ssl/SSLSocket;Z)Lokhttp3/ConnectionSpec;
      12: astore_3
      13: aload_3
      14: invokevirtual #96                 // Method tlsVersions:()Ljava/util/List;
      17: ifnull        28
      20: aload_1
      21: aload_3
      22: getfield      #82                 // Field tlsVersionsAsString:[Ljava/lang/String;
      25: invokevirtual #123                // Method javax/net/ssl/SSLSocket.setEnabledProtocols:([Ljava/lang/String;)V
      28: aload_3
      29: invokevirtual #77                 // Method cipherSuites:()Ljava/util/List;
      32: ifnull        43
      35: aload_1
      36: aload_3
      37: getfield      #14                 // Field cipherSuitesAsString:[Ljava/lang/String;
      40: invokevirtual #126                // Method javax/net/ssl/SSLSocket.setEnabledCipherSuites:([Ljava/lang/String;)V
      43: return

  private final okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket, boolean);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cipherSuitesAsString:[Ljava/lang/String;
       4: ifnull        33
       7: aload_1
       8: invokevirtual #133                // Method javax/net/ssl/SSLSocket.getEnabledCipherSuites:()[Ljava/lang/String;
      11: dup
      12: ldc           #135                // String sslSocket.enabledCipherSuites
      14: invokestatic  #138                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_0
      18: getfield      #14                 // Field cipherSuitesAsString:[Ljava/lang/String;
      21: getstatic     #28                 // Field okhttp3/CipherSuite.Companion:Lokhttp3/CipherSuite$Companion;
      24: invokevirtual #142                // Method okhttp3/CipherSuite$Companion.getORDER_BY_NAME$okhttp:()Ljava/util/Comparator;
      27: invokestatic  #148                // Method okhttp3/internal/Util.intersect:([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)[Ljava/lang/String;
      30: goto          37
      33: aload_1
      34: invokevirtual #133                // Method javax/net/ssl/SSLSocket.getEnabledCipherSuites:()[Ljava/lang/String;
      37: astore_3
      38: aload_0
      39: getfield      #82                 // Field tlsVersionsAsString:[Ljava/lang/String;
      42: ifnull        68
      45: aload_1
      46: invokevirtual #151                // Method javax/net/ssl/SSLSocket.getEnabledProtocols:()[Ljava/lang/String;
      49: dup
      50: ldc           #153                // String sslSocket.enabledProtocols
      52: invokestatic  #138                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      55: aload_0
      56: getfield      #82                 // Field tlsVersionsAsString:[Ljava/lang/String;
      59: invokestatic  #158                // Method kotlin/comparisons/ComparisonsKt.naturalOrder:()Ljava/util/Comparator;
      62: invokestatic  #148                // Method okhttp3/internal/Util.intersect:([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)[Ljava/lang/String;
      65: goto          72
      68: aload_1
      69: invokevirtual #151                // Method javax/net/ssl/SSLSocket.getEnabledProtocols:()[Ljava/lang/String;
      72: astore        4
      74: aload_1
      75: invokevirtual #161                // Method javax/net/ssl/SSLSocket.getSupportedCipherSuites:()[Ljava/lang/String;
      78: astore        5
      80: aload         5
      82: dup
      83: ldc           #163                // String supportedCipherSuites
      85: invokestatic  #138                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      88: ldc           #165                // String TLS_FALLBACK_SCSV
      90: getstatic     #28                 // Field okhttp3/CipherSuite.Companion:Lokhttp3/CipherSuite$Companion;
      93: invokevirtual #142                // Method okhttp3/CipherSuite$Companion.getORDER_BY_NAME$okhttp:()Ljava/util/Comparator;
      96: invokestatic  #169                // Method okhttp3/internal/Util.indexOf:([Ljava/lang/String;Ljava/lang/String;Ljava/util/Comparator;)I
      99: istore        6
     101: iload_2
     102: ifeq          133
     105: iload         6
     107: iconst_m1
     108: if_icmpeq     133
     111: aload_3
     112: dup
     113: ldc           #171                // String cipherSuitesIntersection
     115: invokestatic  #138                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     118: aload         5
     120: iload         6
     122: aaload
     123: dup
     124: ldc           #173                // String supportedCipherSuites[indexOfFallbackScsv]
     126: invokestatic  #138                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     129: invokestatic  #177                // Method okhttp3/internal/Util.concat:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
     132: astore_3
     133: new           #179                // class okhttp3/ConnectionSpec$Builder
     136: dup
     137: aload_0
     138: invokespecial #182                // Method okhttp3/ConnectionSpec$Builder."<init>":(Lokhttp3/ConnectionSpec;)V
     141: aload_3
     142: dup
     143: ldc           #171                // String cipherSuitesIntersection
     145: invokestatic  #138                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     148: dup
     149: arraylength
     150: invokestatic  #188                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     153: checkcast     #64                 // class "[Ljava/lang/String;"
     156: invokevirtual #191                // Method okhttp3/ConnectionSpec$Builder.cipherSuites:([Ljava/lang/String;)Lokhttp3/ConnectionSpec$Builder;
     159: aload         4
     161: dup
     162: ldc           #193                // String tlsVersionsIntersection
     164: invokestatic  #138                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     167: dup
     168: arraylength
     169: invokestatic  #188                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     172: checkcast     #64                 // class "[Ljava/lang/String;"
     175: invokevirtual #195                // Method okhttp3/ConnectionSpec$Builder.tlsVersions:([Ljava/lang/String;)Lokhttp3/ConnectionSpec$Builder;
     178: invokevirtual #199                // Method okhttp3/ConnectionSpec$Builder.build:()Lokhttp3/ConnectionSpec;
     181: areturn

  public final boolean isCompatible(javax.net.ssl.SSLSocket);
    Code:
       0: aload_1
       1: ldc           #204                // String socket
       3: invokestatic  #113                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #207                // Field isTls:Z
      10: ifne          15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: getfield      #82                 // Field tlsVersionsAsString:[Ljava/lang/String;
      19: ifnull        41
      22: aload_0
      23: getfield      #82                 // Field tlsVersionsAsString:[Ljava/lang/String;
      26: aload_1
      27: invokevirtual #151                // Method javax/net/ssl/SSLSocket.getEnabledProtocols:()[Ljava/lang/String;
      30: invokestatic  #158                // Method kotlin/comparisons/ComparisonsKt.naturalOrder:()Ljava/util/Comparator;
      33: invokestatic  #211                // Method okhttp3/internal/Util.hasIntersection:([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)Z
      36: ifne          41
      39: iconst_0
      40: ireturn
      41: aload_0
      42: getfield      #14                 // Field cipherSuitesAsString:[Ljava/lang/String;
      45: ifnull        70
      48: aload_0
      49: getfield      #14                 // Field cipherSuitesAsString:[Ljava/lang/String;
      52: aload_1
      53: invokevirtual #133                // Method javax/net/ssl/SSLSocket.getEnabledCipherSuites:()[Ljava/lang/String;
      56: getstatic     #28                 // Field okhttp3/CipherSuite.Companion:Lokhttp3/CipherSuite$Companion;
      59: invokevirtual #142                // Method okhttp3/CipherSuite$Companion.getORDER_BY_NAME$okhttp:()Ljava/util/Comparator;
      62: invokestatic  #211                // Method okhttp3/internal/Util.hasIntersection:([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)Z
      65: ifne          70
      68: iconst_0
      69: ireturn
      70: iconst_1
      71: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class okhttp3/ConnectionSpec
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: aload_0
      11: checkcast     #2                  // class okhttp3/ConnectionSpec
      14: if_acmpne     19
      17: iconst_1
      18: ireturn
      19: aload_0
      20: getfield      #207                // Field isTls:Z
      23: aload_1
      24: checkcast     #2                  // class okhttp3/ConnectionSpec
      27: getfield      #207                // Field isTls:Z
      30: if_icmpeq     35
      33: iconst_0
      34: ireturn
      35: aload_0
      36: getfield      #207                // Field isTls:Z
      39: ifeq          96
      42: aload_0
      43: getfield      #14                 // Field cipherSuitesAsString:[Ljava/lang/String;
      46: aload_1
      47: checkcast     #2                  // class okhttp3/ConnectionSpec
      50: getfield      #14                 // Field cipherSuitesAsString:[Ljava/lang/String;
      53: invokestatic  #215                // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      56: ifne          61
      59: iconst_0
      60: ireturn
      61: aload_0
      62: getfield      #82                 // Field tlsVersionsAsString:[Ljava/lang/String;
      65: aload_1
      66: checkcast     #2                  // class okhttp3/ConnectionSpec
      69: getfield      #82                 // Field tlsVersionsAsString:[Ljava/lang/String;
      72: invokestatic  #215                // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_0
      81: getfield      #102                // Field supportsTlsExtensions:Z
      84: aload_1
      85: checkcast     #2                  // class okhttp3/ConnectionSpec
      88: getfield      #102                // Field supportsTlsExtensions:Z
      91: if_icmpeq     96
      94: iconst_0
      95: ireturn
      96: iconst_1
      97: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: aload_0
       4: getfield      #207                // Field isTls:Z
       7: ifeq          80
      10: bipush        31
      12: iload_1
      13: imul
      14: aload_0
      15: getfield      #14                 // Field cipherSuitesAsString:[Ljava/lang/String;
      18: dup
      19: ifnull        32
      22: astore_2
      23: iconst_0
      24: istore_3
      25: aload_2
      26: invokestatic  #221                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I
      29: goto          34
      32: pop
      33: iconst_0
      34: iadd
      35: istore_1
      36: bipush        31
      38: iload_1
      39: imul
      40: aload_0
      41: getfield      #82                 // Field tlsVersionsAsString:[Ljava/lang/String;
      44: dup
      45: ifnull        58
      48: astore_2
      49: iconst_0
      50: istore_3
      51: aload_2
      52: invokestatic  #221                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I
      55: goto          60
      58: pop
      59: iconst_0
      60: iadd
      61: istore_1
      62: bipush        31
      64: iload_1
      65: imul
      66: aload_0
      67: getfield      #102                // Field supportsTlsExtensions:Z
      70: ifeq          77
      73: iconst_0
      74: goto          78
      77: iconst_1
      78: iadd
      79: istore_1
      80: iload_1
      81: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #207                // Field isTls:Z
       4: ifne          10
       7: ldc           #226                // String ConnectionSpec()
       9: areturn
      10: new           #228                // class java/lang/StringBuilder
      13: dup
      14: invokespecial #231                // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #233                // String ConnectionSpec(
      19: invokevirtual #237                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #239                // String cipherSuites=
      24: invokevirtual #237                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #77                 // Method cipherSuites:()Ljava/util/List;
      31: ldc           #241                // String [all enabled]
      33: invokestatic  #246                // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
      36: invokevirtual #237                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #248                // String ,
      41: invokevirtual #237                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #250                // String tlsVersions=
      46: invokevirtual #237                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: invokevirtual #96                 // Method tlsVersions:()Ljava/util/List;
      53: ldc           #241                // String [all enabled]
      55: invokestatic  #246                // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
      58: invokevirtual #237                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc           #248                // String ,
      63: invokevirtual #237                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #252                // String supportsTlsExtensions=
      68: invokevirtual #237                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: getfield      #102                // Field supportsTlsExtensions:Z
      75: invokevirtual #255                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      78: bipush        41
      80: invokevirtual #258                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      83: invokevirtual #260                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: areturn

  public final boolean isTls();
    Code:
       0: aload_0
       1: getfield      #207                // Field isTls:Z
       4: ireturn

  public final boolean supportsTlsExtensions();
    Code:
       0: aload_0
       1: getfield      #102                // Field supportsTlsExtensions:Z
       4: ireturn

  public okhttp3.ConnectionSpec(boolean, boolean, java.lang.String[], java.lang.String[]);
    Code:
       0: aload_0
       1: invokespecial #262                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #207                // Field isTls:Z
       9: aload_0
      10: iload_2
      11: putfield      #102                // Field supportsTlsExtensions:Z
      14: aload_0
      15: aload_3
      16: putfield      #14                 // Field cipherSuitesAsString:[Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #82                 // Field tlsVersionsAsString:[Ljava/lang/String;
      25: return

  static {};
    Code:
       0: new           #295                // class okhttp3/ConnectionSpec$Companion
       3: dup
       4: aconst_null
       5: invokespecial #298                // Method okhttp3/ConnectionSpec$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #300                // Field Companion:Lokhttp3/ConnectionSpec$Companion;
      11: bipush        9
      13: anewarray     #24                 // class okhttp3/CipherSuite
      16: dup
      17: iconst_0
      18: getstatic     #303                // Field okhttp3/CipherSuite.TLS_AES_128_GCM_SHA256:Lokhttp3/CipherSuite;
      21: aastore
      22: dup
      23: iconst_1
      24: getstatic     #306                // Field okhttp3/CipherSuite.TLS_AES_256_GCM_SHA384:Lokhttp3/CipherSuite;
      27: aastore
      28: dup
      29: iconst_2
      30: getstatic     #309                // Field okhttp3/CipherSuite.TLS_CHACHA20_POLY1305_SHA256:Lokhttp3/CipherSuite;
      33: aastore
      34: dup
      35: iconst_3
      36: getstatic     #312                // Field okhttp3/CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256:Lokhttp3/CipherSuite;
      39: aastore
      40: dup
      41: iconst_4
      42: getstatic     #315                // Field okhttp3/CipherSuite.TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:Lokhttp3/CipherSuite;
      45: aastore
      46: dup
      47: iconst_5
      48: getstatic     #318                // Field okhttp3/CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384:Lokhttp3/CipherSuite;
      51: aastore
      52: dup
      53: bipush        6
      55: getstatic     #321                // Field okhttp3/CipherSuite.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384:Lokhttp3/CipherSuite;
      58: aastore
      59: dup
      60: bipush        7
      62: getstatic     #324                // Field okhttp3/CipherSuite.TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256:Lokhttp3/CipherSuite;
      65: aastore
      66: dup
      67: bipush        8
      69: getstatic     #327                // Field okhttp3/CipherSuite.TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256:Lokhttp3/CipherSuite;
      72: aastore
      73: putstatic     #329                // Field RESTRICTED_CIPHER_SUITES:[Lokhttp3/CipherSuite;
      76: bipush        16
      78: anewarray     #24                 // class okhttp3/CipherSuite
      81: dup
      82: iconst_0
      83: getstatic     #303                // Field okhttp3/CipherSuite.TLS_AES_128_GCM_SHA256:Lokhttp3/CipherSuite;
      86: aastore
      87: dup
      88: iconst_1
      89: getstatic     #306                // Field okhttp3/CipherSuite.TLS_AES_256_GCM_SHA384:Lokhttp3/CipherSuite;
      92: aastore
      93: dup
      94: iconst_2
      95: getstatic     #309                // Field okhttp3/CipherSuite.TLS_CHACHA20_POLY1305_SHA256:Lokhttp3/CipherSuite;
      98: aastore
      99: dup
     100: iconst_3
     101: getstatic     #312                // Field okhttp3/CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256:Lokhttp3/CipherSuite;
     104: aastore
     105: dup
     106: iconst_4
     107: getstatic     #315                // Field okhttp3/CipherSuite.TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:Lokhttp3/CipherSuite;
     110: aastore
     111: dup
     112: iconst_5
     113: getstatic     #318                // Field okhttp3/CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384:Lokhttp3/CipherSuite;
     116: aastore
     117: dup
     118: bipush        6
     120: getstatic     #321                // Field okhttp3/CipherSuite.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384:Lokhttp3/CipherSuite;
     123: aastore
     124: dup
     125: bipush        7
     127: getstatic     #324                // Field okhttp3/CipherSuite.TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256:Lokhttp3/CipherSuite;
     130: aastore
     131: dup
     132: bipush        8
     134: getstatic     #327                // Field okhttp3/CipherSuite.TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256:Lokhttp3/CipherSuite;
     137: aastore
     138: dup
     139: bipush        9
     141: getstatic     #332                // Field okhttp3/CipherSuite.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA:Lokhttp3/CipherSuite;
     144: aastore
     145: dup
     146: bipush        10
     148: getstatic     #335                // Field okhttp3/CipherSuite.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA:Lokhttp3/CipherSuite;
     151: aastore
     152: dup
     153: bipush        11
     155: getstatic     #338                // Field okhttp3/CipherSuite.TLS_RSA_WITH_AES_128_GCM_SHA256:Lokhttp3/CipherSuite;
     158: aastore
     159: dup
     160: bipush        12
     162: getstatic     #341                // Field okhttp3/CipherSuite.TLS_RSA_WITH_AES_256_GCM_SHA384:Lokhttp3/CipherSuite;
     165: aastore
     166: dup
     167: bipush        13
     169: getstatic     #344                // Field okhttp3/CipherSuite.TLS_RSA_WITH_AES_128_CBC_SHA:Lokhttp3/CipherSuite;
     172: aastore
     173: dup
     174: bipush        14
     176: getstatic     #347                // Field okhttp3/CipherSuite.TLS_RSA_WITH_AES_256_CBC_SHA:Lokhttp3/CipherSuite;
     179: aastore
     180: dup
     181: bipush        15
     183: getstatic     #350                // Field okhttp3/CipherSuite.TLS_RSA_WITH_3DES_EDE_CBC_SHA:Lokhttp3/CipherSuite;
     186: aastore
     187: putstatic     #352                // Field APPROVED_CIPHER_SUITES:[Lokhttp3/CipherSuite;
     190: new           #179                // class okhttp3/ConnectionSpec$Builder
     193: dup
     194: iconst_1
     195: invokespecial #355                // Method okhttp3/ConnectionSpec$Builder."<init>":(Z)V
     198: getstatic     #329                // Field RESTRICTED_CIPHER_SUITES:[Lokhttp3/CipherSuite;
     201: dup
     202: arraylength
     203: invokestatic  #188                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     206: checkcast     #356                // class "[Lokhttp3/CipherSuite;"
     209: invokevirtual #359                // Method okhttp3/ConnectionSpec$Builder.cipherSuites:([Lokhttp3/CipherSuite;)Lokhttp3/ConnectionSpec$Builder;
     212: iconst_2
     213: anewarray     #84                 // class okhttp3/TlsVersion
     216: dup
     217: iconst_0
     218: getstatic     #362                // Field okhttp3/TlsVersion.TLS_1_3:Lokhttp3/TlsVersion;
     221: aastore
     222: dup
     223: iconst_1
     224: getstatic     #365                // Field okhttp3/TlsVersion.TLS_1_2:Lokhttp3/TlsVersion;
     227: aastore
     228: invokevirtual #368                // Method okhttp3/ConnectionSpec$Builder.tlsVersions:([Lokhttp3/TlsVersion;)Lokhttp3/ConnectionSpec$Builder;
     231: iconst_1
     232: invokevirtual #371                // Method okhttp3/ConnectionSpec$Builder.supportsTlsExtensions:(Z)Lokhttp3/ConnectionSpec$Builder;
     235: invokevirtual #199                // Method okhttp3/ConnectionSpec$Builder.build:()Lokhttp3/ConnectionSpec;
     238: putstatic     #373                // Field RESTRICTED_TLS:Lokhttp3/ConnectionSpec;
     241: new           #179                // class okhttp3/ConnectionSpec$Builder
     244: dup
     245: iconst_1
     246: invokespecial #355                // Method okhttp3/ConnectionSpec$Builder."<init>":(Z)V
     249: getstatic     #352                // Field APPROVED_CIPHER_SUITES:[Lokhttp3/CipherSuite;
     252: dup
     253: arraylength
     254: invokestatic  #188                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     257: checkcast     #356                // class "[Lokhttp3/CipherSuite;"
     260: invokevirtual #359                // Method okhttp3/ConnectionSpec$Builder.cipherSuites:([Lokhttp3/CipherSuite;)Lokhttp3/ConnectionSpec$Builder;
     263: iconst_2
     264: anewarray     #84                 // class okhttp3/TlsVersion
     267: dup
     268: iconst_0
     269: getstatic     #362                // Field okhttp3/TlsVersion.TLS_1_3:Lokhttp3/TlsVersion;
     272: aastore
     273: dup
     274: iconst_1
     275: getstatic     #365                // Field okhttp3/TlsVersion.TLS_1_2:Lokhttp3/TlsVersion;
     278: aastore
     279: invokevirtual #368                // Method okhttp3/ConnectionSpec$Builder.tlsVersions:([Lokhttp3/TlsVersion;)Lokhttp3/ConnectionSpec$Builder;
     282: iconst_1
     283: invokevirtual #371                // Method okhttp3/ConnectionSpec$Builder.supportsTlsExtensions:(Z)Lokhttp3/ConnectionSpec$Builder;
     286: invokevirtual #199                // Method okhttp3/ConnectionSpec$Builder.build:()Lokhttp3/ConnectionSpec;
     289: putstatic     #375                // Field MODERN_TLS:Lokhttp3/ConnectionSpec;
     292: new           #179                // class okhttp3/ConnectionSpec$Builder
     295: dup
     296: iconst_1
     297: invokespecial #355                // Method okhttp3/ConnectionSpec$Builder."<init>":(Z)V
     300: getstatic     #352                // Field APPROVED_CIPHER_SUITES:[Lokhttp3/CipherSuite;
     303: dup
     304: arraylength
     305: invokestatic  #188                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     308: checkcast     #356                // class "[Lokhttp3/CipherSuite;"
     311: invokevirtual #359                // Method okhttp3/ConnectionSpec$Builder.cipherSuites:([Lokhttp3/CipherSuite;)Lokhttp3/ConnectionSpec$Builder;
     314: iconst_4
     315: anewarray     #84                 // class okhttp3/TlsVersion
     318: dup
     319: iconst_0
     320: getstatic     #362                // Field okhttp3/TlsVersion.TLS_1_3:Lokhttp3/TlsVersion;
     323: aastore
     324: dup
     325: iconst_1
     326: getstatic     #365                // Field okhttp3/TlsVersion.TLS_1_2:Lokhttp3/TlsVersion;
     329: aastore
     330: dup
     331: iconst_2
     332: getstatic     #378                // Field okhttp3/TlsVersion.TLS_1_1:Lokhttp3/TlsVersion;
     335: aastore
     336: dup
     337: iconst_3
     338: getstatic     #381                // Field okhttp3/TlsVersion.TLS_1_0:Lokhttp3/TlsVersion;
     341: aastore
     342: invokevirtual #368                // Method okhttp3/ConnectionSpec$Builder.tlsVersions:([Lokhttp3/TlsVersion;)Lokhttp3/ConnectionSpec$Builder;
     345: iconst_1
     346: invokevirtual #371                // Method okhttp3/ConnectionSpec$Builder.supportsTlsExtensions:(Z)Lokhttp3/ConnectionSpec$Builder;
     349: invokevirtual #199                // Method okhttp3/ConnectionSpec$Builder.build:()Lokhttp3/ConnectionSpec;
     352: putstatic     #383                // Field COMPATIBLE_TLS:Lokhttp3/ConnectionSpec;
     355: new           #179                // class okhttp3/ConnectionSpec$Builder
     358: dup
     359: iconst_0
     360: invokespecial #355                // Method okhttp3/ConnectionSpec$Builder."<init>":(Z)V
     363: invokevirtual #199                // Method okhttp3/ConnectionSpec$Builder.build:()Lokhttp3/ConnectionSpec;
     366: putstatic     #385                // Field CLEARTEXT:Lokhttp3/ConnectionSpec;
     369: return

  public static final java.lang.String[] access$getCipherSuitesAsString$p(okhttp3.ConnectionSpec);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cipherSuitesAsString:[Ljava/lang/String;
       4: areturn

  public static final java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec);
    Code:
       0: aload_0
       1: getfield      #82                 // Field tlsVersionsAsString:[Ljava/lang/String;
       4: areturn
}
