Compiled from "ConnectionSpecSelector.kt"
public final class okhttp3.internal.connection.ConnectionSpecSelector {
  private int nextModeIndex;

  private boolean isFallbackPossible;

  private boolean isFallback;

  private final java.util.List<okhttp3.ConnectionSpec> connectionSpecs;

  public final okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #16                 // String sslSocket
       3: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aconst_null
       7: checkcast     #24                 // class okhttp3/ConnectionSpec
      10: astore_2
      11: aload_0
      12: getfield      #26                 // Field nextModeIndex:I
      15: istore_3
      16: aload_0
      17: getfield      #30                 // Field connectionSpecs:Ljava/util/List;
      20: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
      25: istore        4
      27: iload_3
      28: iload         4
      30: if_icmpge     76
      33: aload_0
      34: getfield      #30                 // Field connectionSpecs:Ljava/util/List;
      37: iload_3
      38: invokeinterface #40,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: checkcast     #24                 // class okhttp3/ConnectionSpec
      46: astore        5
      48: aload         5
      50: aload_1
      51: invokevirtual #44                 // Method okhttp3/ConnectionSpec.isCompatible:(Ljavax/net/ssl/SSLSocket;)Z
      54: ifeq          70
      57: aload         5
      59: astore_2
      60: aload_0
      61: iload_3
      62: iconst_1
      63: iadd
      64: putfield      #26                 // Field nextModeIndex:I
      67: goto          76
      70: iinc          3, 1
      73: goto          27
      76: aload_2
      77: ifnonnull     165
      80: new           #46                 // class java/net/UnknownServiceException
      83: dup
      84: new           #48                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #54                 // String Unable to find acceptable protocols. isFallback=
      93: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #60                 // Field isFallback:Z
     100: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     103: bipush        44
     105: invokevirtual #66                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     108: ldc           #68                 // String  modes=
     110: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: getfield      #30                 // Field connectionSpecs:Ljava/util/List;
     117: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: bipush        44
     122: invokevirtual #66                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     125: ldc           #73                 // String  supported protocols=
     127: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_1
     131: invokevirtual #79                 // Method javax/net/ssl/SSLSocket.getEnabledProtocols:()[Ljava/lang/String;
     134: dup
     135: invokestatic  #83                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     138: astore_3
     139: iconst_0
     140: istore        4
     142: aload_3
     143: invokestatic  #89                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     146: dup
     147: ldc           #91                 // String java.util.Arrays.toString(this)
     149: invokestatic  #94                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     152: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: invokespecial #100                // Method java/net/UnknownServiceException."<init>":(Ljava/lang/String;)V
     161: checkcast     #102                // class java/lang/Throwable
     164: athrow
     165: aload_0
     166: aload_0
     167: aload_1
     168: invokespecial #104                // Method isFallbackPossible:(Ljavax/net/ssl/SSLSocket;)Z
     171: putfield      #106                // Field isFallbackPossible:Z
     174: aload_2
     175: aload_1
     176: aload_0
     177: getfield      #60                 // Field isFallback:Z
     180: invokevirtual #110                // Method okhttp3/ConnectionSpec.apply$okhttp:(Ljavax/net/ssl/SSLSocket;Z)V
     183: aload_2
     184: areturn

  public final boolean connectionFailed(java.io.IOException);
    Code:
       0: aload_1
       1: ldc           #121                // String e
       3: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: iconst_1
       8: putfield      #60                 // Field isFallback:Z
      11: nop
      12: aload_0
      13: getfield      #106                // Field isFallbackPossible:Z
      16: ifne          23
      19: iconst_0
      20: goto          89
      23: aload_1
      24: instanceof    #123                // class java/net/ProtocolException
      27: ifeq          34
      30: iconst_0
      31: goto          89
      34: aload_1
      35: instanceof    #125                // class java/io/InterruptedIOException
      38: ifeq          45
      41: iconst_0
      42: goto          89
      45: aload_1
      46: instanceof    #127                // class javax/net/ssl/SSLHandshakeException
      49: ifeq          66
      52: aload_1
      53: invokevirtual #131                // Method java/io/IOException.getCause:()Ljava/lang/Throwable;
      56: instanceof    #133                // class java/security/cert/CertificateException
      59: ifeq          66
      62: iconst_0
      63: goto          89
      66: aload_1
      67: instanceof    #135                // class javax/net/ssl/SSLPeerUnverifiedException
      70: ifeq          77
      73: iconst_0
      74: goto          89
      77: aload_1
      78: instanceof    #137                // class javax/net/ssl/SSLException
      81: ifeq          88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ireturn

  private final boolean isFallbackPossible(javax.net.ssl.SSLSocket);
    Code:
       0: aload_0
       1: getfield      #26                 // Field nextModeIndex:I
       4: istore_2
       5: aload_0
       6: getfield      #30                 // Field connectionSpecs:Ljava/util/List;
       9: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
      14: istore_3
      15: iload_2
      16: iload_3
      17: if_icmpge     48
      20: aload_0
      21: getfield      #30                 // Field connectionSpecs:Ljava/util/List;
      24: iload_2
      25: invokeinterface #40,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      30: checkcast     #24                 // class okhttp3/ConnectionSpec
      33: aload_1
      34: invokevirtual #44                 // Method okhttp3/ConnectionSpec.isCompatible:(Ljavax/net/ssl/SSLSocket;)Z
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: iinc          2, 1
      45: goto          15
      48: iconst_0
      49: ireturn

  public okhttp3.internal.connection.ConnectionSpecSelector(java.util.List<okhttp3.ConnectionSpec>);
    Code:
       0: aload_1
       1: ldc           #143                // String connectionSpecs
       3: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #144                // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #30                 // Field connectionSpecs:Ljava/util/List;
      15: return
}
