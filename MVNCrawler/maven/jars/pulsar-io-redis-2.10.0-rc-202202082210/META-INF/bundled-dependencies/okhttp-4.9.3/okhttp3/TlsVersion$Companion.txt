Compiled from "TlsVersion.kt"
public final class okhttp3.TlsVersion$Companion {
  public final okhttp3.TlsVersion forJavaName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #10                 // String javaName
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: astore_2
       8: aload_2
       9: invokevirtual #22                 // Method java/lang/String.hashCode:()I
      12: lookupswitch  { // 5
            -503070503: 112
            -503070502: 100
            -503070501: 88
              79201641: 64
              79923350: 76
               default: 154
          }
      64: aload_2
      65: ldc           #24                 // String SSLv3
      67: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      70: ifeq          154
      73: goto          148
      76: aload_2
      77: ldc           #30                 // String TLSv1
      79: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      82: ifeq          154
      85: goto          142
      88: aload_2
      89: ldc           #32                 // String TLSv1.3
      91: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      94: ifeq          154
      97: goto          124
     100: aload_2
     101: ldc           #34                 // String TLSv1.2
     103: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     106: ifeq          154
     109: goto          130
     112: aload_2
     113: ldc           #36                 // String TLSv1.1
     115: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     118: ifeq          154
     121: goto          136
     124: getstatic     #42                 // Field okhttp3/TlsVersion.TLS_1_3:Lokhttp3/TlsVersion;
     127: goto          184
     130: getstatic     #45                 // Field okhttp3/TlsVersion.TLS_1_2:Lokhttp3/TlsVersion;
     133: goto          184
     136: getstatic     #48                 // Field okhttp3/TlsVersion.TLS_1_1:Lokhttp3/TlsVersion;
     139: goto          184
     142: getstatic     #51                 // Field okhttp3/TlsVersion.TLS_1_0:Lokhttp3/TlsVersion;
     145: goto          184
     148: getstatic     #54                 // Field okhttp3/TlsVersion.SSL_3_0:Lokhttp3/TlsVersion;
     151: goto          184
     154: new           #56                 // class java/lang/IllegalArgumentException
     157: dup
     158: new           #58                 // class java/lang/StringBuilder
     161: dup
     162: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
     165: ldc           #64                 // String Unexpected TLS version:
     167: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_1
     171: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: invokespecial #75                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     180: checkcast     #77                 // class java/lang/Throwable
     183: athrow
     184: areturn

  private okhttp3.TlsVersion$Companion();
    Code:
       0: aload_0
       1: invokespecial #81                 // Method java/lang/Object."<init>":()V
       4: return

  public okhttp3.TlsVersion$Companion(kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: aload_0
       1: invokespecial #83                 // Method "<init>":()V
       4: return
}
