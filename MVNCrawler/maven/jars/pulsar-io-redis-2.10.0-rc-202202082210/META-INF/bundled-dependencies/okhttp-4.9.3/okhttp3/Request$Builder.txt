Compiled from "Request.kt"
public class okhttp3.Request$Builder {
  private okhttp3.HttpUrl url;

  private java.lang.String method;

  private okhttp3.Headers$Builder headers;

  private okhttp3.RequestBody body;

  private java.util.Map<java.lang.Class<?>, java.lang.Object> tags;

  public final okhttp3.HttpUrl getUrl$okhttp();
    Code:
       0: aload_0
       1: getfield      #11                 // Field url:Lokhttp3/HttpUrl;
       4: areturn

  public final void setUrl$okhttp(okhttp3.HttpUrl);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field url:Lokhttp3/HttpUrl;
       5: return

  public final java.lang.String getMethod$okhttp();
    Code:
       0: aload_0
       1: getfield      #23                 // Field method:Ljava/lang/String;
       4: areturn

  public final void setMethod$okhttp(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #26                 // String <set-?>
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field method:Ljava/lang/String;
      11: return

  public final okhttp3.Headers$Builder getHeaders$okhttp();
    Code:
       0: aload_0
       1: getfield      #38                 // Field headers:Lokhttp3/Headers$Builder;
       4: areturn

  public final void setHeaders$okhttp(okhttp3.Headers$Builder);
    Code:
       0: aload_1
       1: ldc           #26                 // String <set-?>
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #38                 // Field headers:Lokhttp3/Headers$Builder;
      11: return

  public final okhttp3.RequestBody getBody$okhttp();
    Code:
       0: aload_0
       1: getfield      #46                 // Field body:Lokhttp3/RequestBody;
       4: areturn

  public final void setBody$okhttp(okhttp3.RequestBody);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field body:Lokhttp3/RequestBody;
       5: return

  public final java.util.Map<java.lang.Class<?>, java.lang.Object> getTags$okhttp();
    Code:
       0: aload_0
       1: getfield      #56                 // Field tags:Ljava/util/Map;
       4: areturn

  public final void setTags$okhttp(java.util.Map<java.lang.Class<?>, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #26                 // String <set-?>
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #56                 // Field tags:Ljava/util/Map;
      11: return

  public okhttp3.Request$Builder url(okhttp3.HttpUrl);
    Code:
       0: aload_1
       1: ldc           #61                 // String url
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iconst_0
      11: istore        4
      13: aload_2
      14: checkcast     #2                  // class okhttp3/Request$Builder
      17: astore        5
      19: iconst_0
      20: istore        6
      22: aload         5
      24: aload_1
      25: putfield      #11                 // Field url:Lokhttp3/HttpUrl;
      28: nop
      29: aload_2
      30: checkcast     #2                  // class okhttp3/Request$Builder
      33: areturn

  public okhttp3.Request$Builder url(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #61                 // String url
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: nop
       7: aload_1
       8: ldc           #67                 // String ws:
      10: iconst_1
      11: invokestatic  #73                 // Method kotlin/text/StringsKt.startsWith:(Ljava/lang/String;Ljava/lang/String;Z)Z
      14: ifeq          58
      17: new           #75                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #81                 // String http:
      26: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: astore_3
      31: iconst_3
      32: istore        4
      34: iconst_0
      35: istore        5
      37: aload_3
      38: iload         4
      40: invokevirtual #91                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      43: dup
      44: ldc           #93                 // String (this as java.lang.String).substring(startIndex)
      46: invokestatic  #96                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      49: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: goto          110
      58: aload_1
      59: ldc           #101                // String wss:
      61: iconst_1
      62: invokestatic  #73                 // Method kotlin/text/StringsKt.startsWith:(Ljava/lang/String;Ljava/lang/String;Z)Z
      65: ifeq          109
      68: new           #75                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #103                // String https:
      77: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_1
      81: astore_3
      82: iconst_4
      83: istore        4
      85: iconst_0
      86: istore        5
      88: aload_3
      89: iload         4
      91: invokevirtual #91                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      94: dup
      95: ldc           #93                 // String (this as java.lang.String).substring(startIndex)
      97: invokestatic  #96                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     100: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: goto          110
     109: aload_1
     110: astore_2
     111: aload_0
     112: getstatic     #109                // Field okhttp3/HttpUrl.Companion:Lokhttp3/HttpUrl$Companion;
     115: aload_2
     116: invokevirtual #115                // Method okhttp3/HttpUrl$Companion.get:(Ljava/lang/String;)Lokhttp3/HttpUrl;
     119: invokevirtual #117                // Method url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;
     122: areturn

  public okhttp3.Request$Builder url(java.net.URL);
    Code:
       0: aload_1
       1: ldc           #61                 // String url
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getstatic     #109                // Field okhttp3/HttpUrl.Companion:Lokhttp3/HttpUrl$Companion;
      10: aload_1
      11: invokevirtual #122                // Method java/net/URL.toString:()Ljava/lang/String;
      14: dup
      15: ldc           #124                // String url.toString()
      17: invokestatic  #96                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      20: invokevirtual #115                // Method okhttp3/HttpUrl$Companion.get:(Ljava/lang/String;)Lokhttp3/HttpUrl;
      23: invokevirtual #117                // Method url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;
      26: areturn

  public okhttp3.Request$Builder header(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #129                // String name
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #131                // String value
       9: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: astore_3
      14: iconst_0
      15: istore        4
      17: iconst_0
      18: istore        5
      20: aload_3
      21: checkcast     #2                  // class okhttp3/Request$Builder
      24: astore        6
      26: iconst_0
      27: istore        7
      29: aload         6
      31: getfield      #38                 // Field headers:Lokhttp3/Headers$Builder;
      34: aload_1
      35: aload_2
      36: invokevirtual #137                // Method okhttp3/Headers$Builder.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
      39: pop
      40: nop
      41: aload_3
      42: checkcast     #2                  // class okhttp3/Request$Builder
      45: areturn

  public okhttp3.Request$Builder addHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #129                // String name
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #131                // String value
       9: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: astore_3
      14: iconst_0
      15: istore        4
      17: iconst_0
      18: istore        5
      20: aload_3
      21: checkcast     #2                  // class okhttp3/Request$Builder
      24: astore        6
      26: iconst_0
      27: istore        7
      29: aload         6
      31: getfield      #38                 // Field headers:Lokhttp3/Headers$Builder;
      34: aload_1
      35: aload_2
      36: invokevirtual #142                // Method okhttp3/Headers$Builder.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
      39: pop
      40: nop
      41: aload_3
      42: checkcast     #2                  // class okhttp3/Request$Builder
      45: areturn

  public okhttp3.Request$Builder removeHeader(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #129                // String name
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iconst_0
      11: istore        4
      13: aload_2
      14: checkcast     #2                  // class okhttp3/Request$Builder
      17: astore        5
      19: iconst_0
      20: istore        6
      22: aload         5
      24: getfield      #38                 // Field headers:Lokhttp3/Headers$Builder;
      27: aload_1
      28: invokevirtual #148                // Method okhttp3/Headers$Builder.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;
      31: pop
      32: nop
      33: aload_2
      34: checkcast     #2                  // class okhttp3/Request$Builder
      37: areturn

  public okhttp3.Request$Builder headers(okhttp3.Headers);
    Code:
       0: aload_1
       1: ldc           #151                // String headers
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iconst_0
      11: istore        4
      13: aload_2
      14: checkcast     #2                  // class okhttp3/Request$Builder
      17: astore        5
      19: iconst_0
      20: istore        6
      22: aload         5
      24: aload_1
      25: invokevirtual #156                // Method okhttp3/Headers.newBuilder:()Lokhttp3/Headers$Builder;
      28: putfield      #38                 // Field headers:Lokhttp3/Headers$Builder;
      31: nop
      32: aload_2
      33: checkcast     #2                  // class okhttp3/Request$Builder
      36: areturn

  public okhttp3.Request$Builder cacheControl(okhttp3.CacheControl);
    Code:
       0: aload_1
       1: ldc           #161                // String cacheControl
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #164                // Method okhttp3/CacheControl.toString:()Ljava/lang/String;
      10: astore_2
      11: nop
      12: aload_2
      13: checkcast     #166                // class java/lang/CharSequence
      16: astore_3
      17: iconst_0
      18: istore        4
      20: aload_3
      21: invokeinterface #170,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ifeq          46
      37: aload_0
      38: ldc           #172                // String Cache-Control
      40: invokevirtual #174                // Method removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
      43: goto          53
      46: aload_0
      47: ldc           #172                // String Cache-Control
      49: aload_2
      50: invokevirtual #176                // Method header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      53: areturn

  public okhttp3.Request$Builder get();
    Code:
       0: aload_0
       1: ldc           #180                // String GET
       3: aconst_null
       4: invokevirtual #183                // Method method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
       7: areturn

  public okhttp3.Request$Builder head();
    Code:
       0: aload_0
       1: ldc           #186                // String HEAD
       3: aconst_null
       4: invokevirtual #183                // Method method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
       7: areturn

  public okhttp3.Request$Builder post(okhttp3.RequestBody);
    Code:
       0: aload_1
       1: ldc           #189                // String body
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: ldc           #191                // String POST
       9: aload_1
      10: invokevirtual #183                // Method method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
      13: areturn

  public okhttp3.Request$Builder delete(okhttp3.RequestBody);
    Code:
       0: aload_0
       1: ldc           #195                // String DELETE
       3: aload_1
       4: invokevirtual #183                // Method method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
       7: areturn

  public static okhttp3.Request$Builder delete$default(okhttp3.Request$Builder, okhttp3.RequestBody, int, java.lang.Object);
    Code:
       0: aload_3
       1: ifnull        14
       4: new           #199                // class java/lang/UnsupportedOperationException
       7: dup
       8: ldc           #201                // String Super calls with default arguments not supported in this target, function: delete
      10: invokespecial #203                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: iconst_1
      16: iand
      17: ifeq          24
      20: getstatic     #208                // Field okhttp3/internal/Util.EMPTY_REQUEST:Lokhttp3/RequestBody;
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokevirtual #210                // Method delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
      29: areturn

  public final okhttp3.Request$Builder delete();
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_1
       3: aconst_null
       4: invokestatic  #212                // Method delete$default:(Lokhttp3/Request$Builder;Lokhttp3/RequestBody;ILjava/lang/Object;)Lokhttp3/Request$Builder;
       7: areturn

  public okhttp3.Request$Builder put(okhttp3.RequestBody);
    Code:
       0: aload_1
       1: ldc           #189                // String body
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: ldc           #215                // String PUT
       9: aload_1
      10: invokevirtual #183                // Method method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
      13: areturn

  public okhttp3.Request$Builder patch(okhttp3.RequestBody);
    Code:
       0: aload_1
       1: ldc           #189                // String body
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: ldc           #218                // String PATCH
       9: aload_1
      10: invokevirtual #183                // Method method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
      13: areturn

  public okhttp3.Request$Builder method(java.lang.String, okhttp3.RequestBody);
    Code:
       0: aload_1
       1: ldc           #219                // String method
       3: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_3
       8: iconst_0
       9: istore        4
      11: iconst_0
      12: istore        5
      14: aload_3
      15: checkcast     #2                  // class okhttp3/Request$Builder
      18: astore        6
      20: iconst_0
      21: istore        7
      23: aload_1
      24: checkcast     #166                // class java/lang/CharSequence
      27: astore        8
      29: iconst_0
      30: istore        9
      32: aload         8
      34: invokeinterface #170,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      39: ifle          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: istore        8
      49: iconst_0
      50: istore        9
      52: iconst_0
      53: istore        10
      55: iload         8
      57: ifne          83
      60: iconst_0
      61: istore        11
      63: ldc           #221                // String method.isEmpty() == true
      65: astore        10
      67: new           #223                // class java/lang/IllegalArgumentException
      70: dup
      71: aload         10
      73: invokevirtual #224                // Method java/lang/Object.toString:()Ljava/lang/String;
      76: invokespecial #225                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      79: checkcast     #227                // class java/lang/Throwable
      82: athrow
      83: aload_2
      84: ifnonnull     157
      87: aload_1
      88: invokestatic  #233                // Method okhttp3/internal/http/HttpMethod.requiresRequestBody:(Ljava/lang/String;)Z
      91: ifne          98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: istore        8
     101: iconst_0
     102: istore        9
     104: iconst_0
     105: istore        10
     107: iload         8
     109: ifne          219
     112: iconst_0
     113: istore        11
     115: new           #75                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #235                // String method
     124: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_1
     128: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #237                // String  must have a request body.
     133: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: astore        10
     141: new           #223                // class java/lang/IllegalArgumentException
     144: dup
     145: aload         10
     147: invokevirtual #224                // Method java/lang/Object.toString:()Ljava/lang/String;
     150: invokespecial #225                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     153: checkcast     #227                // class java/lang/Throwable
     156: athrow
     157: aload_1
     158: invokestatic  #240                // Method okhttp3/internal/http/HttpMethod.permitsRequestBody:(Ljava/lang/String;)Z
     161: istore        8
     163: iconst_0
     164: istore        9
     166: iconst_0
     167: istore        10
     169: iload         8
     171: ifne          219
     174: iconst_0
     175: istore        11
     177: new           #75                 // class java/lang/StringBuilder
     180: dup
     181: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
     184: ldc           #235                // String method
     186: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: aload_1
     190: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: ldc           #242                // String  must not have a request body.
     195: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: astore        10
     203: new           #223                // class java/lang/IllegalArgumentException
     206: dup
     207: aload         10
     209: invokevirtual #224                // Method java/lang/Object.toString:()Ljava/lang/String;
     212: invokespecial #225                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     215: checkcast     #227                // class java/lang/Throwable
     218: athrow
     219: aload         6
     221: aload_1
     222: putfield      #23                 // Field method:Ljava/lang/String;
     225: aload         6
     227: aload_2
     228: putfield      #46                 // Field body:Lokhttp3/RequestBody;
     231: nop
     232: aload_3
     233: checkcast     #2                  // class okhttp3/Request$Builder
     236: areturn

  public okhttp3.Request$Builder tag(java.lang.Object);
    Code:
       0: aload_0
       1: ldc           #4                  // class java/lang/Object
       3: aload_1
       4: invokevirtual #253                // Method tag:(Ljava/lang/Class;Ljava/lang/Object;)Lokhttp3/Request$Builder;
       7: areturn

  public <T> okhttp3.Request$Builder tag(java.lang.Class<? super T>, T);
    Code:
       0: aload_1
       1: ldc_w         #257                // String type
       4: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: astore_3
       9: iconst_0
      10: istore        4
      12: iconst_0
      13: istore        5
      15: aload_3
      16: checkcast     #2                  // class okhttp3/Request$Builder
      19: astore        6
      21: iconst_0
      22: istore        7
      24: aload_2
      25: ifnonnull     43
      28: aload         6
      30: getfield      #56                 // Field tags:Ljava/util/Map;
      33: aload_1
      34: invokeinterface #263,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: goto          95
      43: aload         6
      45: getfield      #56                 // Field tags:Ljava/util/Map;
      48: invokeinterface #267,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      53: ifeq          74
      56: aload         6
      58: iconst_0
      59: istore        8
      61: new           #269                // class java/util/LinkedHashMap
      64: dup
      65: invokespecial #270                // Method java/util/LinkedHashMap."<init>":()V
      68: checkcast     #259                // class java/util/Map
      71: putfield      #56                 // Field tags:Ljava/util/Map;
      74: aload         6
      76: getfield      #56                 // Field tags:Ljava/util/Map;
      79: aload_1
      80: aload_1
      81: aload_2
      82: invokevirtual #275                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      85: dup
      86: invokestatic  #279                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      89: invokeinterface #282,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: nop
      96: aload_3
      97: checkcast     #2                  // class okhttp3/Request$Builder
     100: areturn

  public okhttp3.Request build();
    Code:
       0: aload_0
       1: getfield      #11                 // Field url:Lokhttp3/HttpUrl;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iconst_0
       8: istore_3
       9: aload_1
      10: ifnonnull     39
      13: iconst_0
      14: istore        4
      16: ldc_w         #288                // String url == null
      19: astore        7
      21: aload         7
      23: astore_3
      24: new           #290                // class java/lang/IllegalStateException
      27: dup
      28: aload_3
      29: invokevirtual #224                // Method java/lang/Object.toString:()Ljava/lang/String;
      32: invokespecial #291                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: checkcast     #227                // class java/lang/Throwable
      38: athrow
      39: aload_1
      40: aload_0
      41: getfield      #23                 // Field method:Ljava/lang/String;
      44: aload_0
      45: getfield      #38                 // Field headers:Lokhttp3/Headers$Builder;
      48: invokevirtual #294                // Method okhttp3/Headers$Builder.build:()Lokhttp3/Headers;
      51: aload_0
      52: getfield      #46                 // Field body:Lokhttp3/RequestBody;
      55: aload_0
      56: getfield      #56                 // Field tags:Ljava/util/Map;
      59: invokestatic  #298                // Method okhttp3/internal/Util.toImmutableMap:(Ljava/util/Map;)Ljava/util/Map;
      62: astore        8
      64: astore        9
      66: astore        10
      68: astore        11
      70: astore        12
      72: new           #300                // class okhttp3/Request
      75: dup
      76: aload         12
      78: aload         11
      80: aload         10
      82: aload         9
      84: aload         8
      86: invokespecial #303                // Method okhttp3/Request."<init>":(Lokhttp3/HttpUrl;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/RequestBody;Ljava/util/Map;)V
      89: areturn

  public okhttp3.Request$Builder();
    Code:
       0: aload_0
       1: invokespecial #305                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: istore_1
       7: new           #269                // class java/util/LinkedHashMap
      10: dup
      11: invokespecial #270                // Method java/util/LinkedHashMap."<init>":()V
      14: checkcast     #259                // class java/util/Map
      17: putfield      #56                 // Field tags:Ljava/util/Map;
      20: aload_0
      21: ldc           #180                // String GET
      23: putfield      #23                 // Field method:Ljava/lang/String;
      26: aload_0
      27: new           #133                // class okhttp3/Headers$Builder
      30: dup
      31: invokespecial #306                // Method okhttp3/Headers$Builder."<init>":()V
      34: putfield      #38                 // Field headers:Lokhttp3/Headers$Builder;
      37: return

  public okhttp3.Request$Builder(okhttp3.Request);
    Code:
       0: aload_1
       1: ldc_w         #309                // String request
       4: invokestatic  #32                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: invokespecial #305                // Method java/lang/Object."<init>":()V
      11: aload_0
      12: iconst_0
      13: istore_2
      14: new           #269                // class java/util/LinkedHashMap
      17: dup
      18: invokespecial #270                // Method java/util/LinkedHashMap."<init>":()V
      21: checkcast     #259                // class java/util/Map
      24: putfield      #56                 // Field tags:Ljava/util/Map;
      27: aload_0
      28: aload_1
      29: invokevirtual #311                // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      32: putfield      #11                 // Field url:Lokhttp3/HttpUrl;
      35: aload_0
      36: aload_1
      37: invokevirtual #313                // Method okhttp3/Request.method:()Ljava/lang/String;
      40: putfield      #23                 // Field method:Ljava/lang/String;
      43: aload_0
      44: aload_1
      45: invokevirtual #315                // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
      48: putfield      #46                 // Field body:Lokhttp3/RequestBody;
      51: aload_0
      52: aload_1
      53: invokevirtual #317                // Method okhttp3/Request.getTags$okhttp:()Ljava/util/Map;
      56: invokeinterface #267,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      61: ifeq          79
      64: iconst_0
      65: istore_2
      66: new           #269                // class java/util/LinkedHashMap
      69: dup
      70: invokespecial #270                // Method java/util/LinkedHashMap."<init>":()V
      73: checkcast     #259                // class java/util/Map
      76: goto          86
      79: aload_1
      80: invokevirtual #317                // Method okhttp3/Request.getTags$okhttp:()Ljava/util/Map;
      83: invokestatic  #322                // Method kotlin/collections/MapsKt.toMutableMap:(Ljava/util/Map;)Ljava/util/Map;
      86: putfield      #56                 // Field tags:Ljava/util/Map;
      89: aload_0
      90: aload_1
      91: invokevirtual #324                // Method okhttp3/Request.headers:()Lokhttp3/Headers;
      94: invokevirtual #156                // Method okhttp3/Headers.newBuilder:()Lokhttp3/Headers$Builder;
      97: putfield      #38                 // Field headers:Lokhttp3/Headers$Builder;
     100: return
}
