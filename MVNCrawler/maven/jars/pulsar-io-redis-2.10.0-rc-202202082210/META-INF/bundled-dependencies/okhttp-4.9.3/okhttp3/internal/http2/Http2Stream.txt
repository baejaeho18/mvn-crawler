Compiled from "Http2Stream.kt"
public final class okhttp3.internal.http2.Http2Stream {
  private long readBytesTotal;

  private long readBytesAcknowledged;

  private long writeBytesTotal;

  private long writeBytesMaximum;

  private final java.util.ArrayDeque<okhttp3.Headers> headersQueue;

  private boolean hasResponseHeaders;

  private final okhttp3.internal.http2.Http2Stream$FramingSource source;

  private final okhttp3.internal.http2.Http2Stream$FramingSink sink;

  private final okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout;

  private final okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout;

  private okhttp3.internal.http2.ErrorCode errorCode;

  private java.io.IOException errorException;

  private final int id;

  private final okhttp3.internal.http2.Http2Connection connection;

  public static final long EMIT_BUFFER_SIZE;

  public static final okhttp3.internal.http2.Http2Stream$Companion Companion;

  public final long getReadBytesTotal();
    Code:
       0: aload_0
       1: getfield      #10                 // Field readBytesTotal:J
       4: lreturn

  public final void setReadBytesTotal$okhttp(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field readBytesTotal:J
       5: return

  public final long getReadBytesAcknowledged();
    Code:
       0: aload_0
       1: getfield      #19                 // Field readBytesAcknowledged:J
       4: lreturn

  public final void setReadBytesAcknowledged$okhttp(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #19                 // Field readBytesAcknowledged:J
       5: return

  public final long getWriteBytesTotal();
    Code:
       0: aload_0
       1: getfield      #24                 // Field writeBytesTotal:J
       4: lreturn

  public final void setWriteBytesTotal$okhttp(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #24                 // Field writeBytesTotal:J
       5: return

  public final long getWriteBytesMaximum();
    Code:
       0: aload_0
       1: getfield      #29                 // Field writeBytesMaximum:J
       4: lreturn

  public final void setWriteBytesMaximum$okhttp(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #29                 // Field writeBytesMaximum:J
       5: return

  public final okhttp3.internal.http2.Http2Stream$FramingSource getSource$okhttp();
    Code:
       0: aload_0
       1: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
       4: areturn

  public final okhttp3.internal.http2.Http2Stream$FramingSink getSink$okhttp();
    Code:
       0: aload_0
       1: getfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
       4: areturn

  public final okhttp3.internal.http2.Http2Stream$StreamTimeout getReadTimeout$okhttp();
    Code:
       0: aload_0
       1: getfield      #54                 // Field readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
       4: areturn

  public final okhttp3.internal.http2.Http2Stream$StreamTimeout getWriteTimeout$okhttp();
    Code:
       0: aload_0
       1: getfield      #58                 // Field writeTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
       4: areturn

  public final synchronized okhttp3.internal.http2.ErrorCode getErrorCode$okhttp();
    Code:
       0: aload_0
       1: getfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
       4: areturn

  public final void setErrorCode$okhttp(okhttp3.internal.http2.ErrorCode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
       5: return

  public final java.io.IOException getErrorException$okhttp();
    Code:
       0: aload_0
       1: getfield      #73                 // Field errorException:Ljava/io/IOException;
       4: areturn

  public final void setErrorException$okhttp(java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field errorException:Ljava/io/IOException;
       5: return

  public final synchronized boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
       4: ifnull        9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
      13: invokevirtual #82                 // Method okhttp3/internal/http2/Http2Stream$FramingSource.getFinished$okhttp:()Z
      16: ifne          29
      19: aload_0
      20: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
      23: invokevirtual #85                 // Method okhttp3/internal/http2/Http2Stream$FramingSource.getClosed$okhttp:()Z
      26: ifeq          58
      29: aload_0
      30: getfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
      33: invokevirtual #90                 // Method okhttp3/internal/http2/Http2Stream$FramingSink.getFinished:()Z
      36: ifne          49
      39: aload_0
      40: getfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
      43: invokevirtual #93                 // Method okhttp3/internal/http2/Http2Stream$FramingSink.getClosed:()Z
      46: ifeq          58
      49: aload_0
      50: getfield      #95                 // Field hasResponseHeaders:Z
      53: ifeq          58
      56: iconst_0
      57: ireturn
      58: iconst_1
      59: ireturn

  public final boolean isLocallyInitiated();
    Code:
       0: aload_0
       1: getfield      #100                // Field id:I
       4: iconst_1
       5: iand
       6: iconst_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_1
      16: aload_0
      17: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
      20: invokevirtual #109                // Method okhttp3/internal/http2/Http2Connection.getClient$okhttp:()Z
      23: iload_1
      24: if_icmpne     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public final synchronized okhttp3.Headers takeHeaders() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #54                 // Field readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
       4: invokevirtual #120                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.enter:()V
       7: nop
       8: aload_0
       9: getfield      #122                // Field headersQueue:Ljava/util/ArrayDeque;
      12: invokevirtual #127                // Method java/util/ArrayDeque.isEmpty:()Z
      15: ifeq          32
      18: aload_0
      19: getfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
      22: ifnonnull     32
      25: aload_0
      26: invokevirtual #130                // Method waitForIo$okhttp:()V
      29: goto          8
      32: aload_0
      33: getfield      #54                 // Field readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
      36: invokevirtual #133                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
      39: goto          52
      42: astore_1
      43: aload_0
      44: getfield      #54                 // Field readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
      47: invokevirtual #133                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
      50: aload_1
      51: athrow
      52: aload_0
      53: getfield      #122                // Field headersQueue:Ljava/util/ArrayDeque;
      56: checkcast     #135                // class java/util/Collection
      59: astore_1
      60: iconst_0
      61: istore_2
      62: aload_1
      63: invokeinterface #136,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
      68: ifne          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ifeq          96
      79: aload_0
      80: getfield      #122                // Field headersQueue:Ljava/util/ArrayDeque;
      83: invokevirtual #140                // Method java/util/ArrayDeque.removeFirst:()Ljava/lang/Object;
      86: dup
      87: ldc           #142                // String headersQueue.removeFirst()
      89: invokestatic  #148                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      92: checkcast     #150                // class okhttp3/Headers
      95: areturn
      96: aload_0
      97: getfield      #73                 // Field errorException:Ljava/io/IOException;
     100: dup
     101: ifnull        110
     104: checkcast     #152                // class java/lang/Throwable
     107: goto          129
     110: pop
     111: new           #154                // class okhttp3/internal/http2/StreamResetException
     114: dup
     115: aload_0
     116: getfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
     119: dup
     120: invokestatic  #158                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     123: invokespecial #161                // Method okhttp3/internal/http2/StreamResetException."<init>":(Lokhttp3/internal/http2/ErrorCode;)V
     126: checkcast     #152                // class java/lang/Throwable
     129: athrow
    Exception table:
       from    to  target type
           7    32    42   any
          42    43    42   any

  public final synchronized okhttp3.Headers trailers() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
       4: invokevirtual #82                 // Method okhttp3/internal/http2/Http2Stream$FramingSource.getFinished$okhttp:()Z
       7: ifeq          55
      10: aload_0
      11: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
      14: invokevirtual #166                // Method okhttp3/internal/http2/Http2Stream$FramingSource.getReceiveBuffer:()Lokio/Buffer;
      17: invokevirtual #171                // Method okio/Buffer.exhausted:()Z
      20: ifeq          55
      23: aload_0
      24: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
      27: invokevirtual #174                // Method okhttp3/internal/http2/Http2Stream$FramingSource.getReadBuffer:()Lokio/Buffer;
      30: invokevirtual #171                // Method okio/Buffer.exhausted:()Z
      33: ifeq          55
      36: aload_0
      37: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
      40: invokevirtual #177                // Method okhttp3/internal/http2/Http2Stream$FramingSource.getTrailers:()Lokhttp3/Headers;
      43: dup
      44: ifnull        50
      47: goto          54
      50: pop
      51: getstatic     #183                // Field okhttp3/internal/Util.EMPTY_HEADERS:Lokhttp3/Headers;
      54: areturn
      55: aload_0
      56: getfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
      59: ifnull        96
      62: aload_0
      63: getfield      #73                 // Field errorException:Ljava/io/IOException;
      66: dup
      67: ifnull        76
      70: checkcast     #152                // class java/lang/Throwable
      73: goto          95
      76: pop
      77: new           #154                // class okhttp3/internal/http2/StreamResetException
      80: dup
      81: aload_0
      82: getfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
      85: dup
      86: invokestatic  #158                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      89: invokespecial #161                // Method okhttp3/internal/http2/StreamResetException."<init>":(Lokhttp3/internal/http2/ErrorCode;)V
      92: checkcast     #152                // class java/lang/Throwable
      95: athrow
      96: new           #185                // class java/lang/IllegalStateException
      99: dup
     100: ldc           #187                // String too early; can\'t read the trailers yet
     102: invokespecial #190                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     105: checkcast     #152                // class java/lang/Throwable
     108: athrow

  public final void writeHeaders(java.util.List<okhttp3.internal.http2.Header>, boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #195                // String responseHeaders
       3: invokestatic  #198                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore        4
       9: iconst_0
      10: istore        5
      12: getstatic     #201                // Field okhttp3/internal/Util.assertionsEnabled:Z
      15: ifeq          77
      18: aload         4
      20: invokestatic  #207                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      23: ifeq          77
      26: new           #209                // class java/lang/AssertionError
      29: dup
      30: new           #211                // class java/lang/StringBuilder
      33: dup
      34: invokespecial #213                // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #215                // String Thread
      39: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokestatic  #223                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      45: dup
      46: ldc           #225                // String Thread.currentThread()
      48: invokestatic  #148                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      51: invokevirtual #229                // Method java/lang/Thread.getName:()Ljava/lang/String;
      54: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #231                // String  MUST NOT hold lock on
      59: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload         4
      64: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #239                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      73: checkcast     #152                // class java/lang/Throwable
      76: athrow
      77: nop
      78: iload_3
      79: istore        4
      81: aload_0
      82: astore        5
      84: iconst_0
      85: istore        6
      87: iconst_0
      88: istore        7
      90: aload         5
      92: monitorenter
      93: nop
      94: iconst_0
      95: istore        8
      97: aload_0
      98: iconst_1
      99: putfield      #95                 // Field hasResponseHeaders:Z
     102: iload_2
     103: ifeq          114
     106: aload_0
     107: getfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
     110: iconst_1
     111: invokevirtual #243                // Method okhttp3/internal/http2/Http2Stream$FramingSink.setFinished:(Z)V
     114: getstatic     #249                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     117: astore        7
     119: aload         5
     121: monitorexit
     122: goto          133
     125: astore        7
     127: aload         5
     129: monitorexit
     130: aload         7
     132: athrow
     133: iload         4
     135: ifne          201
     138: aload_0
     139: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
     142: astore        5
     144: iconst_0
     145: istore        6
     147: iconst_0
     148: istore        7
     150: aload         5
     152: monitorenter
     153: nop
     154: iconst_0
     155: istore        8
     157: aload_0
     158: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
     161: invokevirtual #251                // Method okhttp3/internal/http2/Http2Connection.getWriteBytesTotal:()J
     164: aload_0
     165: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
     168: invokevirtual #253                // Method okhttp3/internal/http2/Http2Connection.getWriteBytesMaximum:()J
     171: lcmp
     172: iflt          179
     175: iconst_1
     176: goto          180
     179: iconst_0
     180: istore        4
     182: getstatic     #249                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     185: astore        7
     187: aload         5
     189: monitorexit
     190: goto          201
     193: astore        7
     195: aload         5
     197: monitorexit
     198: aload         7
     200: athrow
     201: aload_0
     202: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
     205: aload_0
     206: getfield      #100                // Field id:I
     209: iload_2
     210: aload_1
     211: invokevirtual #257                // Method okhttp3/internal/http2/Http2Connection.writeHeaders$okhttp:(IZLjava/util/List;)V
     214: iload         4
     216: ifeq          226
     219: aload_0
     220: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
     223: invokevirtual #260                // Method okhttp3/internal/http2/Http2Connection.flush:()V
     226: return
    Exception table:
       from    to  target type
          93   119   125   any
         125   127   125   any
         153   187   193   any
         193   195   193   any

  public final void enqueueTrailers(okhttp3.Headers);
    Code:
       0: aload_1
       1: ldc_w         #273                // String trailers
       4: invokestatic  #198                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: astore_2
       9: iconst_0
      10: istore_3
      11: iconst_0
      12: istore        4
      14: aload_2
      15: monitorenter
      16: nop
      17: iconst_0
      18: istore        5
      20: aload_0
      21: getfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
      24: invokevirtual #90                 // Method okhttp3/internal/http2/Http2Stream$FramingSink.getFinished:()Z
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: istore        6
      37: iconst_0
      38: istore        7
      40: iconst_0
      41: istore        8
      43: iload         6
      45: ifne          72
      48: iconst_0
      49: istore        9
      51: ldc_w         #275                // String already finished
      54: astore        8
      56: new           #185                // class java/lang/IllegalStateException
      59: dup
      60: aload         8
      62: invokevirtual #276                // Method java/lang/Object.toString:()Ljava/lang/String;
      65: invokespecial #190                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      68: checkcast     #152                // class java/lang/Throwable
      71: athrow
      72: aload_1
      73: invokevirtual #280                // Method okhttp3/Headers.size:()I
      76: ifeq          83
      79: iconst_1
      80: goto          84
      83: iconst_0
      84: istore        6
      86: iconst_0
      87: istore        7
      89: iconst_0
      90: istore        8
      92: iload         6
      94: ifne          121
      97: iconst_0
      98: istore        9
     100: ldc_w         #282                // String trailers.size() == 0
     103: astore        8
     105: new           #284                // class java/lang/IllegalArgumentException
     108: dup
     109: aload         8
     111: invokevirtual #276                // Method java/lang/Object.toString:()Ljava/lang/String;
     114: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     117: checkcast     #152                // class java/lang/Throwable
     120: athrow
     121: aload_0
     122: getfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
     125: aload_1
     126: invokevirtual #288                // Method okhttp3/internal/http2/Http2Stream$FramingSink.setTrailers:(Lokhttp3/Headers;)V
     129: getstatic     #249                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     132: astore        4
     134: aload_2
     135: monitorexit
     136: goto          146
     139: astore        4
     141: aload_2
     142: monitorexit
     143: aload         4
     145: athrow
     146: return
    Exception table:
       from    to  target type
          16   134   139   any
         139   141   139   any

  public final okio.Timeout readTimeout();
    Code:
       0: aload_0
       1: getfield      #54                 // Field readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
       4: checkcast     #294                // class okio/Timeout
       7: areturn

  public final okio.Timeout writeTimeout();
    Code:
       0: aload_0
       1: getfield      #58                 // Field writeTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
       4: checkcast     #294                // class okio/Timeout
       7: areturn

  public final okio.Source getSource();
    Code:
       0: aload_0
       1: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
       4: checkcast     #298                // class okio/Source
       7: areturn

  public final okio.Sink getSink();
    Code:
       0: aload_0
       1: astore_1
       2: iconst_0
       3: istore_2
       4: iconst_0
       5: istore_3
       6: aload_1
       7: monitorenter
       8: nop
       9: iconst_0
      10: istore        4
      12: aload_0
      13: getfield      #95                 // Field hasResponseHeaders:Z
      16: ifne          26
      19: aload_0
      20: invokevirtual #302                // Method isLocallyInitiated:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: istore        5
      33: iconst_0
      34: istore        6
      36: iconst_0
      37: istore        7
      39: iload         5
      41: ifne          68
      44: iconst_0
      45: istore        8
      47: ldc_w         #304                // String reply before requesting the sink
      50: astore        7
      52: new           #185                // class java/lang/IllegalStateException
      55: dup
      56: aload         7
      58: invokevirtual #276                // Method java/lang/Object.toString:()Ljava/lang/String;
      61: invokespecial #190                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      64: checkcast     #152                // class java/lang/Throwable
      67: athrow
      68: getstatic     #249                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      71: astore_3
      72: aload_1
      73: monitorexit
      74: goto          82
      77: astore_3
      78: aload_1
      79: monitorexit
      80: aload_3
      81: athrow
      82: aload_0
      83: getfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
      86: checkcast     #306                // class okio/Sink
      89: areturn
    Exception table:
       from    to  target type
           8    72    77   any
          77    78    77   any

  public final void close(okhttp3.internal.http2.ErrorCode, java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc_w         #312                // String rstStatusCode
       4: invokestatic  #198                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #316                // Method closeInternal:(Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)Z
      13: ifne          17
      16: return
      17: aload_0
      18: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
      21: aload_0
      22: getfield      #100                // Field id:I
      25: aload_1
      26: invokevirtual #320                // Method okhttp3/internal/http2/Http2Connection.writeSynReset$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V
      29: return

  public final void closeLater(okhttp3.internal.http2.ErrorCode);
    Code:
       0: aload_1
       1: ldc_w         #322                // String errorCode
       4: invokestatic  #198                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: aconst_null
      10: invokespecial #316                // Method closeInternal:(Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)Z
      13: ifne          17
      16: return
      17: aload_0
      18: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
      21: aload_0
      22: getfield      #100                // Field id:I
      25: aload_1
      26: invokevirtual #325                // Method okhttp3/internal/http2/Http2Connection.writeSynResetLater$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V
      29: return

  private final boolean closeInternal(okhttp3.internal.http2.ErrorCode, java.io.IOException);
    Code:
       0: aload_0
       1: astore_3
       2: iconst_0
       3: istore        4
       5: getstatic     #201                // Field okhttp3/internal/Util.assertionsEnabled:Z
       8: ifeq          68
      11: aload_3
      12: invokestatic  #207                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      15: ifeq          68
      18: new           #209                // class java/lang/AssertionError
      21: dup
      22: new           #211                // class java/lang/StringBuilder
      25: dup
      26: invokespecial #213                // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #215                // String Thread
      31: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokestatic  #223                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      37: dup
      38: ldc           #225                // String Thread.currentThread()
      40: invokestatic  #148                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      43: invokevirtual #229                // Method java/lang/Thread.getName:()Ljava/lang/String;
      46: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #231                // String  MUST NOT hold lock on
      51: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_3
      55: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #239                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      64: checkcast     #152                // class java/lang/Throwable
      67: athrow
      68: nop
      69: aload_0
      70: astore_3
      71: iconst_0
      72: istore        4
      74: iconst_0
      75: istore        5
      77: aload_3
      78: monitorenter
      79: nop
      80: iconst_0
      81: istore        6
      83: aload_0
      84: getfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
      87: ifnull        98
      90: iconst_0
      91: istore        10
      93: aload_3
      94: monitorexit
      95: iload         10
      97: ireturn
      98: aload_0
      99: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
     102: invokevirtual #82                 // Method okhttp3/internal/http2/Http2Stream$FramingSource.getFinished$okhttp:()Z
     105: ifeq          126
     108: aload_0
     109: getfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
     112: invokevirtual #90                 // Method okhttp3/internal/http2/Http2Stream$FramingSink.getFinished:()Z
     115: ifeq          126
     118: iconst_0
     119: istore        9
     121: aload_3
     122: monitorexit
     123: iload         9
     125: ireturn
     126: aload_0
     127: aload_1
     128: putfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
     131: aload_0
     132: aload_2
     133: putfield      #73                 // Field errorException:Ljava/io/IOException;
     136: aload_0
     137: astore        7
     139: iconst_0
     140: istore        8
     142: aload         7
     144: dup
     145: ifnonnull     159
     148: new           #327                // class java/lang/NullPointerException
     151: dup
     152: ldc_w         #329                // String null cannot be cast to non-null type java.lang.Object
     155: invokespecial #330                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: checkcast     #4                  // class java/lang/Object
     162: invokevirtual #333                // Method java/lang/Object.notifyAll:()V
     165: nop
     166: getstatic     #249                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     169: astore        5
     171: aload_3
     172: monitorexit
     173: goto          183
     176: astore        5
     178: aload_3
     179: monitorexit
     180: aload         5
     182: athrow
     183: aload_0
     184: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
     187: aload_0
     188: getfield      #100                // Field id:I
     191: invokevirtual #337                // Method okhttp3/internal/http2/Http2Connection.removeStream$okhttp:(I)Lokhttp3/internal/http2/Http2Stream;
     194: pop
     195: iconst_1
     196: ireturn
    Exception table:
       from    to  target type
          79    93   176   any
          98   121   176   any
         126   171   176   any
         176   178   176   any

  public final void receiveData(okio.BufferedSource, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc_w         #345                // String source
       4: invokestatic  #198                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: astore_3
       9: iconst_0
      10: istore        4
      12: getstatic     #201                // Field okhttp3/internal/Util.assertionsEnabled:Z
      15: ifeq          75
      18: aload_3
      19: invokestatic  #207                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      22: ifeq          75
      25: new           #209                // class java/lang/AssertionError
      28: dup
      29: new           #211                // class java/lang/StringBuilder
      32: dup
      33: invokespecial #213                // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #215                // String Thread
      38: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokestatic  #223                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      44: dup
      45: ldc           #225                // String Thread.currentThread()
      47: invokestatic  #148                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      50: invokevirtual #229                // Method java/lang/Thread.getName:()Ljava/lang/String;
      53: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #231                // String  MUST NOT hold lock on
      58: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_3
      62: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #239                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      71: checkcast     #152                // class java/lang/Throwable
      74: athrow
      75: nop
      76: aload_0
      77: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
      80: aload_1
      81: iload_2
      82: i2l
      83: invokevirtual #349                // Method okhttp3/internal/http2/Http2Stream$FramingSource.receive$okhttp:(Lokio/BufferedSource;J)V
      86: return

  public final void receiveHeaders(okhttp3.Headers, boolean);
    Code:
       0: aload_1
       1: ldc_w         #355                // String headers
       4: invokestatic  #198                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: astore_3
       9: iconst_0
      10: istore        4
      12: getstatic     #201                // Field okhttp3/internal/Util.assertionsEnabled:Z
      15: ifeq          75
      18: aload_3
      19: invokestatic  #207                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      22: ifeq          75
      25: new           #209                // class java/lang/AssertionError
      28: dup
      29: new           #211                // class java/lang/StringBuilder
      32: dup
      33: invokespecial #213                // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #215                // String Thread
      38: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokestatic  #223                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      44: dup
      45: ldc           #225                // String Thread.currentThread()
      47: invokestatic  #148                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      50: invokevirtual #229                // Method java/lang/Thread.getName:()Ljava/lang/String;
      53: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #231                // String  MUST NOT hold lock on
      58: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_3
      62: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #239                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      71: checkcast     #152                // class java/lang/Throwable
      74: athrow
      75: nop
      76: iconst_0
      77: istore_3
      78: aload_0
      79: astore        4
      81: iconst_0
      82: istore        5
      84: iconst_0
      85: istore        6
      87: aload         4
      89: monitorenter
      90: nop
      91: iconst_0
      92: istore        7
      94: aload_0
      95: getfield      #95                 // Field hasResponseHeaders:Z
      98: ifeq          105
     101: iload_2
     102: ifne          138
     105: aload_0
     106: iconst_1
     107: putfield      #95                 // Field hasResponseHeaders:Z
     110: aload_0
     111: getfield      #122                // Field headersQueue:Ljava/util/ArrayDeque;
     114: checkcast     #135                // class java/util/Collection
     117: astore        8
     119: aload_1
     120: astore        9
     122: iconst_0
     123: istore        10
     125: aload         8
     127: aload         9
     129: invokeinterface #358,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     134: pop
     135: goto          146
     138: aload_0
     139: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
     142: aload_1
     143: invokevirtual #359                // Method okhttp3/internal/http2/Http2Stream$FramingSource.setTrailers:(Lokhttp3/Headers;)V
     146: iload_2
     147: ifeq          158
     150: aload_0
     151: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
     154: iconst_1
     155: invokevirtual #362                // Method okhttp3/internal/http2/Http2Stream$FramingSource.setFinished$okhttp:(Z)V
     158: aload_0
     159: invokevirtual #364                // Method isOpen:()Z
     162: istore_3
     163: aload_0
     164: astore        8
     166: iconst_0
     167: istore        9
     169: aload         8
     171: dup
     172: ifnonnull     186
     175: new           #327                // class java/lang/NullPointerException
     178: dup
     179: ldc_w         #329                // String null cannot be cast to non-null type java.lang.Object
     182: invokespecial #330                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     185: athrow
     186: checkcast     #4                  // class java/lang/Object
     189: invokevirtual #333                // Method java/lang/Object.notifyAll:()V
     192: nop
     193: getstatic     #249                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     196: astore        6
     198: aload         4
     200: monitorexit
     201: goto          212
     204: astore        6
     206: aload         4
     208: monitorexit
     209: aload         6
     211: athrow
     212: iload_3
     213: ifne          228
     216: aload_0
     217: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
     220: aload_0
     221: getfield      #100                // Field id:I
     224: invokevirtual #337                // Method okhttp3/internal/http2/Http2Connection.removeStream$okhttp:(I)Lokhttp3/internal/http2/Http2Stream;
     227: pop
     228: return
    Exception table:
       from    to  target type
          90   198   204   any
         204   206   204   any

  public final synchronized void receiveRstStream(okhttp3.internal.http2.ErrorCode);
    Code:
       0: aload_1
       1: ldc_w         #322                // String errorCode
       4: invokestatic  #198                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
      11: ifnonnull     45
      14: aload_0
      15: aload_1
      16: putfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
      19: aload_0
      20: astore_2
      21: iconst_0
      22: istore_3
      23: aload_2
      24: dup
      25: ifnonnull     39
      28: new           #327                // class java/lang/NullPointerException
      31: dup
      32: ldc_w         #329                // String null cannot be cast to non-null type java.lang.Object
      35: invokespecial #330                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: checkcast     #4                  // class java/lang/Object
      42: invokevirtual #333                // Method java/lang/Object.notifyAll:()V
      45: return

  public final void cancelStreamIfNecessary$okhttp() throws java.io.IOException;
    Code:
       0: aload_0
       1: astore_1
       2: iconst_0
       3: istore_2
       4: getstatic     #201                // Field okhttp3/internal/Util.assertionsEnabled:Z
       7: ifeq          67
      10: aload_1
      11: invokestatic  #207                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      14: ifeq          67
      17: new           #209                // class java/lang/AssertionError
      20: dup
      21: new           #211                // class java/lang/StringBuilder
      24: dup
      25: invokespecial #213                // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #215                // String Thread
      30: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokestatic  #223                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      36: dup
      37: ldc           #225                // String Thread.currentThread()
      39: invokestatic  #148                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      42: invokevirtual #229                // Method java/lang/Thread.getName:()Ljava/lang/String;
      45: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #231                // String  MUST NOT hold lock on
      50: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #239                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      63: checkcast     #152                // class java/lang/Throwable
      66: athrow
      67: nop
      68: iconst_0
      69: istore_1
      70: iconst_0
      71: istore_2
      72: aload_0
      73: astore_3
      74: iconst_0
      75: istore        4
      77: iconst_0
      78: istore        5
      80: aload_3
      81: monitorenter
      82: nop
      83: iconst_0
      84: istore        6
      86: aload_0
      87: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
      90: invokevirtual #82                 // Method okhttp3/internal/http2/Http2Stream$FramingSource.getFinished$okhttp:()Z
      93: ifne          130
      96: aload_0
      97: getfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
     100: invokevirtual #85                 // Method okhttp3/internal/http2/Http2Stream$FramingSource.getClosed$okhttp:()Z
     103: ifeq          130
     106: aload_0
     107: getfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
     110: invokevirtual #90                 // Method okhttp3/internal/http2/Http2Stream$FramingSink.getFinished:()Z
     113: ifne          126
     116: aload_0
     117: getfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
     120: invokevirtual #93                 // Method okhttp3/internal/http2/Http2Stream$FramingSink.getClosed:()Z
     123: ifeq          130
     126: iconst_1
     127: goto          131
     130: iconst_0
     131: istore_2
     132: aload_0
     133: invokevirtual #364                // Method isOpen:()Z
     136: istore_1
     137: getstatic     #249                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     140: astore        5
     142: aload_3
     143: monitorexit
     144: goto          154
     147: astore        5
     149: aload_3
     150: monitorexit
     151: aload         5
     153: athrow
     154: iload_2
     155: ifeq          169
     158: aload_0
     159: getstatic     #372                // Field okhttp3/internal/http2/ErrorCode.CANCEL:Lokhttp3/internal/http2/ErrorCode;
     162: aconst_null
     163: invokevirtual #374                // Method close:(Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
     166: goto          185
     169: iload_1
     170: ifne          185
     173: aload_0
     174: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
     177: aload_0
     178: getfield      #100                // Field id:I
     181: invokevirtual #337                // Method okhttp3/internal/http2/Http2Connection.removeStream$okhttp:(I)Lokhttp3/internal/http2/Http2Stream;
     184: pop
     185: return
    Exception table:
       from    to  target type
          82   142   147   any
         147   149   147   any

  public final void addBytesToWriteWindow(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #29                 // Field writeBytesMaximum:J
       5: lload_1
       6: ladd
       7: putfield      #29                 // Field writeBytesMaximum:J
      10: lload_1
      11: lconst_0
      12: lcmp
      13: ifle          43
      16: aload_0
      17: astore_3
      18: iconst_0
      19: istore        4
      21: aload_3
      22: dup
      23: ifnonnull     37
      26: new           #327                // class java/lang/NullPointerException
      29: dup
      30: ldc_w         #329                // String null cannot be cast to non-null type java.lang.Object
      33: invokespecial #330                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: checkcast     #4                  // class java/lang/Object
      40: invokevirtual #333                // Method java/lang/Object.notifyAll:()V
      43: return

  public final void checkOutNotClosed$okhttp() throws java.io.IOException;
    Code:
       0: nop
       1: aload_0
       2: getfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
       5: invokevirtual #93                 // Method okhttp3/internal/http2/Http2Stream$FramingSink.getClosed:()Z
       8: ifeq          25
      11: new           #114                // class java/io/IOException
      14: dup
      15: ldc_w         #381                // String stream closed
      18: invokespecial #382                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      21: checkcast     #152                // class java/lang/Throwable
      24: athrow
      25: aload_0
      26: getfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
      29: invokevirtual #90                 // Method okhttp3/internal/http2/Http2Stream$FramingSink.getFinished:()Z
      32: ifeq          49
      35: new           #114                // class java/io/IOException
      38: dup
      39: ldc_w         #384                // String stream finished
      42: invokespecial #382                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      45: checkcast     #152                // class java/lang/Throwable
      48: athrow
      49: aload_0
      50: getfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
      53: ifnull        90
      56: aload_0
      57: getfield      #73                 // Field errorException:Ljava/io/IOException;
      60: dup
      61: ifnull        70
      64: checkcast     #152                // class java/lang/Throwable
      67: goto          89
      70: pop
      71: new           #154                // class okhttp3/internal/http2/StreamResetException
      74: dup
      75: aload_0
      76: getfield      #65                 // Field errorCode:Lokhttp3/internal/http2/ErrorCode;
      79: dup
      80: invokestatic  #158                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      83: invokespecial #161                // Method okhttp3/internal/http2/StreamResetException."<init>":(Lokhttp3/internal/http2/ErrorCode;)V
      86: checkcast     #152                // class java/lang/Throwable
      89: athrow
      90: return

  public final void waitForIo$okhttp() throws java.io.InterruptedIOException;
    Code:
       0: nop
       1: aload_0
       2: astore_1
       3: iconst_0
       4: istore_2
       5: aload_1
       6: dup
       7: ifnonnull     21
      10: new           #327                // class java/lang/NullPointerException
      13: dup
      14: ldc_w         #329                // String null cannot be cast to non-null type java.lang.Object
      17: invokespecial #330                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: checkcast     #4                  // class java/lang/Object
      24: invokevirtual #391                // Method java/lang/Object.wait:()V
      27: goto          48
      30: astore_1
      31: invokestatic  #223                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      34: invokevirtual #394                // Method java/lang/Thread.interrupt:()V
      37: new           #386                // class java/io/InterruptedIOException
      40: dup
      41: invokespecial #395                // Method java/io/InterruptedIOException."<init>":()V
      44: checkcast     #152                // class java/lang/Throwable
      47: athrow
      48: return
    Exception table:
       from    to  target type
           0    27    30   Class java/lang/InterruptedException

  public final int getId();
    Code:
       0: aload_0
       1: getfield      #100                // Field id:I
       4: ireturn

  public final okhttp3.internal.http2.Http2Connection getConnection();
    Code:
       0: aload_0
       1: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
       4: areturn

  public okhttp3.internal.http2.Http2Stream(int, okhttp3.internal.http2.Http2Connection, boolean, boolean, okhttp3.Headers);
    Code:
       0: aload_2
       1: ldc_w         #404                // String connection
       4: invokestatic  #198                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: invokespecial #405                // Method java/lang/Object."<init>":()V
      11: aload_0
      12: iload_1
      13: putfield      #100                // Field id:I
      16: aload_0
      17: aload_2
      18: putfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
      21: aload_0
      22: aload_0
      23: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
      26: invokevirtual #409                // Method okhttp3/internal/http2/Http2Connection.getPeerSettings:()Lokhttp3/internal/http2/Settings;
      29: invokevirtual #414                // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
      32: i2l
      33: putfield      #29                 // Field writeBytesMaximum:J
      36: aload_0
      37: new           #124                // class java/util/ArrayDeque
      40: dup
      41: invokespecial #415                // Method java/util/ArrayDeque."<init>":()V
      44: putfield      #122                // Field headersQueue:Ljava/util/ArrayDeque;
      47: aload_0
      48: new           #79                 // class okhttp3/internal/http2/Http2Stream$FramingSource
      51: dup
      52: aload_0
      53: aload_0
      54: getfield      #104                // Field connection:Lokhttp3/internal/http2/Http2Connection;
      57: invokevirtual #418                // Method okhttp3/internal/http2/Http2Connection.getOkHttpSettings:()Lokhttp3/internal/http2/Settings;
      60: invokevirtual #414                // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
      63: i2l
      64: iload         4
      66: invokespecial #421                // Method okhttp3/internal/http2/Http2Stream$FramingSource."<init>":(Lokhttp3/internal/http2/Http2Stream;JZ)V
      69: putfield      #42                 // Field source:Lokhttp3/internal/http2/Http2Stream$FramingSource;
      72: aload_0
      73: new           #87                 // class okhttp3/internal/http2/Http2Stream$FramingSink
      76: dup
      77: aload_0
      78: iload_3
      79: invokespecial #424                // Method okhttp3/internal/http2/Http2Stream$FramingSink."<init>":(Lokhttp3/internal/http2/Http2Stream;Z)V
      82: putfield      #48                 // Field sink:Lokhttp3/internal/http2/Http2Stream$FramingSink;
      85: aload_0
      86: new           #116                // class okhttp3/internal/http2/Http2Stream$StreamTimeout
      89: dup
      90: aload_0
      91: invokespecial #427                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout."<init>":(Lokhttp3/internal/http2/Http2Stream;)V
      94: putfield      #54                 // Field readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
      97: aload_0
      98: new           #116                // class okhttp3/internal/http2/Http2Stream$StreamTimeout
     101: dup
     102: aload_0
     103: invokespecial #427                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout."<init>":(Lokhttp3/internal/http2/Http2Stream;)V
     106: putfield      #58                 // Field writeTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     109: nop
     110: aload         5
     112: ifnull        189
     115: aload_0
     116: invokevirtual #302                // Method isLocallyInitiated:()Z
     119: ifne          126
     122: iconst_1
     123: goto          127
     126: iconst_0
     127: istore        6
     129: iconst_0
     130: istore        7
     132: iconst_0
     133: istore        8
     135: iload         6
     137: ifne          164
     140: iconst_0
     141: istore        9
     143: ldc_w         #429                // String locally-initiated streams shouldn\'t have headers yet
     146: astore        8
     148: new           #185                // class java/lang/IllegalStateException
     151: dup
     152: aload         8
     154: invokevirtual #276                // Method java/lang/Object.toString:()Ljava/lang/String;
     157: invokespecial #190                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     160: checkcast     #152                // class java/lang/Throwable
     163: athrow
     164: aload_0
     165: getfield      #122                // Field headersQueue:Ljava/util/ArrayDeque;
     168: checkcast     #135                // class java/util/Collection
     171: astore        6
     173: iconst_0
     174: istore        7
     176: aload         6
     178: aload         5
     180: invokeinterface #358,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     185: pop
     186: goto          230
     189: aload_0
     190: invokevirtual #302                // Method isLocallyInitiated:()Z
     193: istore        6
     195: iconst_0
     196: istore        7
     198: iconst_0
     199: istore        8
     201: iload         6
     203: ifne          230
     206: iconst_0
     207: istore        9
     209: ldc_w         #431                // String remotely-initiated streams should have headers
     212: astore        8
     214: new           #185                // class java/lang/IllegalStateException
     217: dup
     218: aload         8
     220: invokevirtual #276                // Method java/lang/Object.toString:()Ljava/lang/String;
     223: invokespecial #190                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     226: checkcast     #152                // class java/lang/Throwable
     229: athrow
     230: return

  static {};
    Code:
       0: new           #464                // class okhttp3/internal/http2/Http2Stream$Companion
       3: dup
       4: aconst_null
       5: invokespecial #467                // Method okhttp3/internal/http2/Http2Stream$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #469                // Field Companion:Lokhttp3/internal/http2/Http2Stream$Companion;
      11: return
}
