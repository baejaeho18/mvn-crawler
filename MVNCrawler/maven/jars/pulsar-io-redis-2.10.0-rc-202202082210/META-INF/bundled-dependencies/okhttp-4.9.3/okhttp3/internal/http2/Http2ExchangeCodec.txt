Compiled from "Http2ExchangeCodec.kt"
public final class okhttp3.internal.http2.Http2ExchangeCodec implements okhttp3.internal.http.ExchangeCodec {
  private volatile okhttp3.internal.http2.Http2Stream stream;

  private final okhttp3.Protocol protocol;

  private volatile boolean canceled;

  private final okhttp3.internal.connection.RealConnection connection;

  private final okhttp3.internal.http.RealInterceptorChain chain;

  private final okhttp3.internal.http2.Http2Connection http2Connection;

  private static final java.lang.String CONNECTION;

  private static final java.lang.String HOST;

  private static final java.lang.String KEEP_ALIVE;

  private static final java.lang.String PROXY_CONNECTION;

  private static final java.lang.String TRANSFER_ENCODING;

  private static final java.lang.String TE;

  private static final java.lang.String ENCODING;

  private static final java.lang.String UPGRADE;

  private static final java.util.List<java.lang.String> HTTP_2_SKIPPED_REQUEST_HEADERS;

  private static final java.util.List<java.lang.String> HTTP_2_SKIPPED_RESPONSE_HEADERS;

  public static final okhttp3.internal.http2.Http2ExchangeCodec$Companion Companion;

  public okio.Sink createRequestBody(okhttp3.Request, long);
    Code:
       0: aload_1
       1: ldc           #17                 // String request
       3: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #25                 // Field stream:Lokhttp3/internal/http2/Http2Stream;
      10: dup
      11: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      14: invokevirtual #35                 // Method okhttp3/internal/http2/Http2Stream.getSink:()Lokio/Sink;
      17: areturn

  public void writeRequestHeaders(okhttp3.Request);
    Code:
       0: aload_1
       1: ldc           #17                 // String request
       3: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #25                 // Field stream:Lokhttp3/internal/http2/Http2Stream;
      10: ifnull        14
      13: return
      14: aload_1
      15: invokevirtual #48                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
      18: ifnull        25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore_2
      27: getstatic     #52                 // Field Companion:Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;
      30: aload_1
      31: invokevirtual #58                 // Method okhttp3/internal/http2/Http2ExchangeCodec$Companion.http2HeadersList:(Lokhttp3/Request;)Ljava/util/List;
      34: astore_3
      35: aload_0
      36: aload_0
      37: getfield      #62                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
      40: aload_3
      41: iload_2
      42: invokevirtual #68                 // Method okhttp3/internal/http2/Http2Connection.newStream:(Ljava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;
      45: putfield      #25                 // Field stream:Lokhttp3/internal/http2/Http2Stream;
      48: aload_0
      49: getfield      #70                 // Field canceled:Z
      52: ifeq          82
      55: aload_0
      56: getfield      #25                 // Field stream:Lokhttp3/internal/http2/Http2Stream;
      59: dup
      60: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      63: getstatic     #76                 // Field okhttp3/internal/http2/ErrorCode.CANCEL:Lokhttp3/internal/http2/ErrorCode;
      66: invokevirtual #80                 // Method okhttp3/internal/http2/Http2Stream.closeLater:(Lokhttp3/internal/http2/ErrorCode;)V
      69: new           #82                 // class java/io/IOException
      72: dup
      73: ldc           #84                 // String Canceled
      75: invokespecial #88                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      78: checkcast     #90                 // class java/lang/Throwable
      81: athrow
      82: aload_0
      83: getfield      #25                 // Field stream:Lokhttp3/internal/http2/Http2Stream;
      86: dup
      87: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      90: invokevirtual #94                 // Method okhttp3/internal/http2/Http2Stream.readTimeout:()Lokio/Timeout;
      93: aload_0
      94: getfield      #98                 // Field chain:Lokhttp3/internal/http/RealInterceptorChain;
      97: invokevirtual #104                // Method okhttp3/internal/http/RealInterceptorChain.getReadTimeoutMillis$okhttp:()I
     100: i2l
     101: getstatic     #110                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     104: invokevirtual #116                // Method okio/Timeout.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;
     107: pop
     108: aload_0
     109: getfield      #25                 // Field stream:Lokhttp3/internal/http2/Http2Stream;
     112: dup
     113: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     116: invokevirtual #119                // Method okhttp3/internal/http2/Http2Stream.writeTimeout:()Lokio/Timeout;
     119: aload_0
     120: getfield      #98                 // Field chain:Lokhttp3/internal/http/RealInterceptorChain;
     123: invokevirtual #122                // Method okhttp3/internal/http/RealInterceptorChain.getWriteTimeoutMillis$okhttp:()I
     126: i2l
     127: getstatic     #110                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     130: invokevirtual #116                // Method okio/Timeout.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;
     133: pop
     134: return

  public void flushRequest();
    Code:
       0: aload_0
       1: getfield      #62                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
       4: invokevirtual #132                // Method okhttp3/internal/http2/Http2Connection.flush:()V
       7: return

  public void finishRequest();
    Code:
       0: aload_0
       1: getfield      #25                 // Field stream:Lokhttp3/internal/http2/Http2Stream;
       4: dup
       5: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
       8: invokevirtual #35                 // Method okhttp3/internal/http2/Http2Stream.getSink:()Lokio/Sink;
      11: invokeinterface #138,  1          // InterfaceMethod okio/Sink.close:()V
      16: return

  public okhttp3.Response$Builder readResponseHeaders(boolean);
    Code:
       0: aload_0
       1: getfield      #25                 // Field stream:Lokhttp3/internal/http2/Http2Stream;
       4: dup
       5: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
       8: invokevirtual #145                // Method okhttp3/internal/http2/Http2Stream.takeHeaders:()Lokhttp3/Headers;
      11: astore_2
      12: getstatic     #52                 // Field Companion:Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;
      15: aload_2
      16: aload_0
      17: getfield      #147                // Field protocol:Lokhttp3/Protocol;
      20: invokevirtual #151                // Method okhttp3/internal/http2/Http2ExchangeCodec$Companion.readHttp2HeadersList:(Lokhttp3/Headers;Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
      23: astore_3
      24: iload_1
      25: ifeq          41
      28: aload_3
      29: invokevirtual #156                // Method okhttp3/Response$Builder.getCode$okhttp:()I
      32: bipush        100
      34: if_icmpne     41
      37: aconst_null
      38: goto          42
      41: aload_3
      42: areturn

  public long reportedContentLength(okhttp3.Response);
    Code:
       0: aload_1
       1: ldc           #167                // String response
       3: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: nop
       7: aload_1
       8: invokestatic  #173                // Method okhttp3/internal/http/HttpHeaders.promisesBody:(Lokhttp3/Response;)Z
      11: ifne          18
      14: lconst_0
      15: goto          22
      18: aload_1
      19: invokestatic  #178                // Method okhttp3/internal/Util.headersContentLength:(Lokhttp3/Response;)J
      22: lreturn

  public okio.Source openResponseBodySource(okhttp3.Response);
    Code:
       0: aload_1
       1: ldc           #167                // String response
       3: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #25                 // Field stream:Lokhttp3/internal/http2/Http2Stream;
      10: dup
      11: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      14: invokevirtual #185                // Method okhttp3/internal/http2/Http2Stream.getSource$okhttp:()Lokhttp3/internal/http2/Http2Stream$FramingSource;
      17: checkcast     #187                // class okio/Source
      20: areturn

  public okhttp3.Headers trailers();
    Code:
       0: aload_0
       1: getfield      #25                 // Field stream:Lokhttp3/internal/http2/Http2Stream;
       4: dup
       5: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
       8: invokevirtual #190                // Method okhttp3/internal/http2/Http2Stream.trailers:()Lokhttp3/Headers;
      11: areturn

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #70                 // Field canceled:Z
       5: aload_0
       6: getfield      #25                 // Field stream:Lokhttp3/internal/http2/Http2Stream;
       9: dup
      10: ifnull        22
      13: getstatic     #76                 // Field okhttp3/internal/http2/ErrorCode.CANCEL:Lokhttp3/internal/http2/ErrorCode;
      16: invokevirtual #80                 // Method okhttp3/internal/http2/Http2Stream.closeLater:(Lokhttp3/internal/http2/ErrorCode;)V
      19: goto          23
      22: pop
      23: return

  public okhttp3.internal.connection.RealConnection getConnection();
    Code:
       0: aload_0
       1: getfield      #197                // Field connection:Lokhttp3/internal/connection/RealConnection;
       4: areturn

  public okhttp3.internal.http2.Http2ExchangeCodec(okhttp3.OkHttpClient, okhttp3.internal.connection.RealConnection, okhttp3.internal.http.RealInterceptorChain, okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_1
       1: ldc           #200                // String client
       3: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #201                // String connection
       9: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #202                // String chain
      15: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #203                // String http2Connection
      22: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload_0
      26: invokespecial #205                // Method java/lang/Object."<init>":()V
      29: aload_0
      30: aload_2
      31: putfield      #197                // Field connection:Lokhttp3/internal/connection/RealConnection;
      34: aload_0
      35: aload_3
      36: putfield      #98                 // Field chain:Lokhttp3/internal/http/RealInterceptorChain;
      39: aload_0
      40: aload         4
      42: putfield      #62                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
      45: aload_0
      46: aload_1
      47: invokevirtual #211                // Method okhttp3/OkHttpClient.protocols:()Ljava/util/List;
      50: getstatic     #216                // Field okhttp3/Protocol.H2_PRIOR_KNOWLEDGE:Lokhttp3/Protocol;
      53: invokeinterface #220,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      58: ifeq          67
      61: getstatic     #216                // Field okhttp3/Protocol.H2_PRIOR_KNOWLEDGE:Lokhttp3/Protocol;
      64: goto          70
      67: getstatic     #223                // Field okhttp3/Protocol.HTTP_2:Lokhttp3/Protocol;
      70: putfield      #147                // Field protocol:Lokhttp3/Protocol;
      73: return

  static {};
    Code:
       0: new           #54                 // class okhttp3/internal/http2/Http2ExchangeCodec$Companion
       3: dup
       4: aconst_null
       5: invokespecial #278                // Method okhttp3/internal/http2/Http2ExchangeCodec$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #52                 // Field Companion:Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;
      11: bipush        12
      13: anewarray     #280                // class java/lang/String
      16: dup
      17: iconst_0
      18: ldc           #201                // String connection
      20: aastore
      21: dup
      22: iconst_1
      23: ldc           #231                // String host
      25: aastore
      26: dup
      27: iconst_2
      28: ldc           #234                // String keep-alive
      30: aastore
      31: dup
      32: iconst_3
      33: ldc           #237                // String proxy-connection
      35: aastore
      36: dup
      37: iconst_4
      38: ldc           #243                // String te
      40: aastore
      41: dup
      42: iconst_5
      43: ldc           #240                // String transfer-encoding
      45: aastore
      46: dup
      47: bipush        6
      49: ldc           #246                // String encoding
      51: aastore
      52: dup
      53: bipush        7
      55: ldc           #249                // String upgrade
      57: aastore
      58: dup
      59: bipush        8
      61: ldc_w         #282                // String :method
      64: aastore
      65: dup
      66: bipush        9
      68: ldc_w         #284                // String :path
      71: aastore
      72: dup
      73: bipush        10
      75: ldc_w         #286                // String :scheme
      78: aastore
      79: dup
      80: bipush        11
      82: ldc_w         #288                // String :authority
      85: aastore
      86: invokestatic  #292                // Method okhttp3/internal/Util.immutableListOf:([Ljava/lang/Object;)Ljava/util/List;
      89: putstatic     #256                // Field HTTP_2_SKIPPED_REQUEST_HEADERS:Ljava/util/List;
      92: bipush        8
      94: anewarray     #280                // class java/lang/String
      97: dup
      98: iconst_0
      99: ldc           #201                // String connection
     101: aastore
     102: dup
     103: iconst_1
     104: ldc           #231                // String host
     106: aastore
     107: dup
     108: iconst_2
     109: ldc           #234                // String keep-alive
     111: aastore
     112: dup
     113: iconst_3
     114: ldc           #237                // String proxy-connection
     116: aastore
     117: dup
     118: iconst_4
     119: ldc           #243                // String te
     121: aastore
     122: dup
     123: iconst_5
     124: ldc           #240                // String transfer-encoding
     126: aastore
     127: dup
     128: bipush        6
     130: ldc           #246                // String encoding
     132: aastore
     133: dup
     134: bipush        7
     136: ldc           #249                // String upgrade
     138: aastore
     139: invokestatic  #292                // Method okhttp3/internal/Util.immutableListOf:([Ljava/lang/Object;)Ljava/util/List;
     142: putstatic     #259                // Field HTTP_2_SKIPPED_RESPONSE_HEADERS:Ljava/util/List;
     145: return

  public static final java.util.List access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp();
    Code:
       0: getstatic     #256                // Field HTTP_2_SKIPPED_REQUEST_HEADERS:Ljava/util/List;
       3: areturn

  public static final java.util.List access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp();
    Code:
       0: getstatic     #259                // Field HTTP_2_SKIPPED_RESPONSE_HEADERS:Ljava/util/List;
       3: areturn
}
