Compiled from "Http2Reader.kt"
public final class okhttp3.internal.http2.Http2Reader$ContinuationSource implements okio.Source {
  private int length;

  private int flags;

  private int streamId;

  private int left;

  private int padding;

  private final okio.BufferedSource source;

  public final int getLength();
    Code:
       0: aload_0
       1: getfield      #12                 // Field length:I
       4: ireturn

  public final void setLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field length:I
       5: return

  public final int getFlags();
    Code:
       0: aload_0
       1: getfield      #21                 // Field flags:I
       4: ireturn

  public final void setFlags(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field flags:I
       5: return

  public final int getStreamId();
    Code:
       0: aload_0
       1: getfield      #26                 // Field streamId:I
       4: ireturn

  public final void setStreamId(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field streamId:I
       5: return

  public final int getLeft();
    Code:
       0: aload_0
       1: getfield      #31                 // Field left:I
       4: ireturn

  public final void setLeft(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field left:I
       5: return

  public final int getPadding();
    Code:
       0: aload_0
       1: getfield      #36                 // Field padding:I
       4: ireturn

  public final void setPadding(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field padding:I
       5: return

  public long read(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #44                 // String sink
       3: invokestatic  #50                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #31                 // Field left:I
      10: ifne          52
      13: aload_0
      14: getfield      #54                 // Field source:Lokio/BufferedSource;
      17: aload_0
      18: getfield      #36                 // Field padding:I
      21: i2l
      22: invokeinterface #60,  3           // InterfaceMethod okio/BufferedSource.skip:(J)V
      27: aload_0
      28: iconst_0
      29: putfield      #36                 // Field padding:I
      32: aload_0
      33: getfield      #21                 // Field flags:I
      36: iconst_4
      37: iand
      38: ifeq          45
      41: ldc2_w        #61                 // long -1l
      44: lreturn
      45: aload_0
      46: invokespecial #66                 // Method readContinuationHeader:()V
      49: goto          6
      52: aload_0
      53: getfield      #54                 // Field source:Lokio/BufferedSource;
      56: aload_1
      57: aload_0
      58: getfield      #31                 // Field left:I
      61: i2l
      62: lstore        6
      64: iconst_0
      65: istore        8
      67: lload_2
      68: lload         6
      70: invokestatic  #72                 // Method java/lang/Math.min:(JJ)J
      73: invokeinterface #74,  4           // InterfaceMethod okio/BufferedSource.read:(Lokio/Buffer;J)J
      78: lstore        4
      80: lload         4
      82: ldc2_w        #61                 // long -1l
      85: lcmp
      86: ifne          93
      89: ldc2_w        #61                 // long -1l
      92: lreturn
      93: aload_0
      94: dup
      95: getfield      #31                 // Field left:I
      98: lload         4
     100: l2i
     101: isub
     102: putfield      #31                 // Field left:I
     105: lload         4
     107: lreturn

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #54                 // Field source:Lokio/BufferedSource;
       4: invokeinterface #81,  1           // InterfaceMethod okio/BufferedSource.timeout:()Lokio/Timeout;
       9: areturn

  public void close() throws java.io.IOException;
    Code:
       0: return

  private final void readContinuationHeader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field streamId:I
       4: istore_1
       5: aload_0
       6: aload_0
       7: getfield      #54                 // Field source:Lokio/BufferedSource;
      10: invokestatic  #88                 // Method okhttp3/internal/Util.readMedium:(Lokio/BufferedSource;)I
      13: putfield      #31                 // Field left:I
      16: aload_0
      17: aload_0
      18: getfield      #31                 // Field left:I
      21: putfield      #12                 // Field length:I
      24: aload_0
      25: getfield      #54                 // Field source:Lokio/BufferedSource;
      28: invokeinterface #92,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
      33: sipush        255
      36: invokestatic  #96                 // Method okhttp3/internal/Util.and:(BI)I
      39: istore_2
      40: aload_0
      41: aload_0
      42: getfield      #54                 // Field source:Lokio/BufferedSource;
      45: invokeinterface #92,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
      50: sipush        255
      53: invokestatic  #96                 // Method okhttp3/internal/Util.and:(BI)I
      56: putfield      #21                 // Field flags:I
      59: getstatic     #102                // Field okhttp3/internal/http2/Http2Reader.Companion:Lokhttp3/internal/http2/Http2Reader$Companion;
      62: invokevirtual #108                // Method okhttp3/internal/http2/Http2Reader$Companion.getLogger:()Ljava/util/logging/Logger;
      65: getstatic     #114                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      68: invokevirtual #120                // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      71: ifeq          103
      74: getstatic     #102                // Field okhttp3/internal/http2/Http2Reader.Companion:Lokhttp3/internal/http2/Http2Reader$Companion;
      77: invokevirtual #108                // Method okhttp3/internal/http2/Http2Reader$Companion.getLogger:()Ljava/util/logging/Logger;
      80: getstatic     #126                // Field okhttp3/internal/http2/Http2.INSTANCE:Lokhttp3/internal/http2/Http2;
      83: iconst_1
      84: aload_0
      85: getfield      #26                 // Field streamId:I
      88: aload_0
      89: getfield      #12                 // Field length:I
      92: iload_2
      93: aload_0
      94: getfield      #21                 // Field flags:I
      97: invokevirtual #130                // Method okhttp3/internal/http2/Http2.frameLog:(ZIIII)Ljava/lang/String;
     100: invokevirtual #134                // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
     103: aload_0
     104: aload_0
     105: getfield      #54                 // Field source:Lokio/BufferedSource;
     108: invokeinterface #137,  1          // InterfaceMethod okio/BufferedSource.readInt:()I
     113: ldc           #138                // int 2147483647
     115: iand
     116: putfield      #26                 // Field streamId:I
     119: iload_2
     120: bipush        9
     122: if_icmpeq     155
     125: new           #41                 // class java/io/IOException
     128: dup
     129: new           #140                // class java/lang/StringBuilder
     132: dup
     133: invokespecial #143                // Method java/lang/StringBuilder."<init>":()V
     136: iload_2
     137: invokevirtual #147                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     140: ldc           #149                // String  != TYPE_CONTINUATION
     142: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #156                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokespecial #158                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     151: checkcast     #160                // class java/lang/Throwable
     154: athrow
     155: aload_0
     156: getfield      #26                 // Field streamId:I
     159: iload_1
     160: if_icmpeq     176
     163: new           #41                 // class java/io/IOException
     166: dup
     167: ldc           #162                // String TYPE_CONTINUATION streamId changed
     169: invokespecial #158                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     172: checkcast     #160                // class java/lang/Throwable
     175: athrow
     176: return

  public okhttp3.internal.http2.Http2Reader$ContinuationSource(okio.BufferedSource);
    Code:
       0: aload_1
       1: ldc           #166                // String source
       3: invokestatic  #50                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #167                // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #54                 // Field source:Lokio/BufferedSource;
      15: return
}
