Compiled from "Http2Connection.kt"
public final class okhttp3.internal.http2.Http2Connection implements java.io.Closeable {
  private final boolean client;

  private final okhttp3.internal.http2.Http2Connection$Listener listener;

  private final java.util.Map<java.lang.Integer, okhttp3.internal.http2.Http2Stream> streams;

  private final java.lang.String connectionName;

  private int lastGoodStreamId;

  private int nextStreamId;

  private boolean isShutdown;

  private final okhttp3.internal.concurrent.TaskRunner taskRunner;

  private final okhttp3.internal.concurrent.TaskQueue writerQueue;

  private final okhttp3.internal.concurrent.TaskQueue pushQueue;

  private final okhttp3.internal.concurrent.TaskQueue settingsListenerQueue;

  private final okhttp3.internal.http2.PushObserver pushObserver;

  private long intervalPingsSent;

  private long intervalPongsReceived;

  private long degradedPingsSent;

  private long degradedPongsReceived;

  private long awaitPingsSent;

  private long awaitPongsReceived;

  private long degradedPongDeadlineNs;

  private final okhttp3.internal.http2.Settings okHttpSettings;

  private okhttp3.internal.http2.Settings peerSettings;

  private long readBytesTotal;

  private long readBytesAcknowledged;

  private long writeBytesTotal;

  private long writeBytesMaximum;

  private final java.net.Socket socket;

  private final okhttp3.internal.http2.Http2Writer writer;

  private final okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable;

  private final java.util.Set<java.lang.Integer> currentPushRequests;

  public static final int OKHTTP_CLIENT_WINDOW_SIZE;

  private static final okhttp3.internal.http2.Settings DEFAULT_SETTINGS;

  public static final int INTERVAL_PING;

  public static final int DEGRADED_PING;

  public static final int AWAIT_PING;

  public static final int DEGRADED_PONG_TIMEOUT_NS;

  public static final okhttp3.internal.http2.Http2Connection$Companion Companion;

  public final boolean getClient$okhttp();
    Code:
       0: aload_0
       1: getfield      #12                 // Field client:Z
       4: ireturn

  public final okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp();
    Code:
       0: aload_0
       1: getfield      #21                 // Field listener:Lokhttp3/internal/http2/Http2Connection$Listener;
       4: areturn

  public final java.util.Map<java.lang.Integer, okhttp3.internal.http2.Http2Stream> getStreams$okhttp();
    Code:
       0: aload_0
       1: getfield      #29                 // Field streams:Ljava/util/Map;
       4: areturn

  public final java.lang.String getConnectionName$okhttp();
    Code:
       0: aload_0
       1: getfield      #35                 // Field connectionName:Ljava/lang/String;
       4: areturn

  public final int getLastGoodStreamId$okhttp();
    Code:
       0: aload_0
       1: getfield      #41                 // Field lastGoodStreamId:I
       4: ireturn

  public final void setLastGoodStreamId$okhttp(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #41                 // Field lastGoodStreamId:I
       5: return

  public final int getNextStreamId$okhttp();
    Code:
       0: aload_0
       1: getfield      #48                 // Field nextStreamId:I
       4: ireturn

  public final void setNextStreamId$okhttp(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #48                 // Field nextStreamId:I
       5: return

  public final okhttp3.internal.http2.Settings getOkHttpSettings();
    Code:
       0: aload_0
       1: getfield      #72                 // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
       4: areturn

  public final okhttp3.internal.http2.Settings getPeerSettings();
    Code:
       0: aload_0
       1: getfield      #76                 // Field peerSettings:Lokhttp3/internal/http2/Settings;
       4: areturn

  public final void setPeerSettings(okhttp3.internal.http2.Settings);
    Code:
       0: aload_1
       1: ldc           #79                 // String <set-?>
       3: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #76                 // Field peerSettings:Lokhttp3/internal/http2/Settings;
      11: return

  public final long getReadBytesTotal();
    Code:
       0: aload_0
       1: getfield      #90                 // Field readBytesTotal:J
       4: lreturn

  public final long getReadBytesAcknowledged();
    Code:
       0: aload_0
       1: getfield      #94                 // Field readBytesAcknowledged:J
       4: lreturn

  public final long getWriteBytesTotal();
    Code:
       0: aload_0
       1: getfield      #98                 // Field writeBytesTotal:J
       4: lreturn

  public final long getWriteBytesMaximum();
    Code:
       0: aload_0
       1: getfield      #102                // Field writeBytesMaximum:J
       4: lreturn

  public final java.net.Socket getSocket$okhttp();
    Code:
       0: aload_0
       1: getfield      #108                // Field socket:Ljava/net/Socket;
       4: areturn

  public final okhttp3.internal.http2.Http2Writer getWriter();
    Code:
       0: aload_0
       1: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: areturn

  public final okhttp3.internal.http2.Http2Connection$ReaderRunnable getReaderRunnable();
    Code:
       0: aload_0
       1: getfield      #120                // Field readerRunnable:Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;
       4: areturn

  public final synchronized int openStreamCount();
    Code:
       0: aload_0
       1: getfield      #29                 // Field streams:Ljava/util/Map;
       4: invokeinterface #129,  1          // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public final synchronized okhttp3.internal.http2.Http2Stream getStream(int);
    Code:
       0: aload_0
       1: getfield      #29                 // Field streams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #142,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #144                // class okhttp3/internal/http2/Http2Stream
      16: areturn

  public final synchronized okhttp3.internal.http2.Http2Stream removeStream$okhttp(int);
    Code:
       0: aload_0
       1: getfield      #29                 // Field streams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #149,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #144                // class okhttp3/internal/http2/Http2Stream
      16: astore_2
      17: aload_0
      18: astore_3
      19: iconst_0
      20: istore        4
      22: aload_3
      23: dup
      24: ifnonnull     37
      27: new           #151                // class java/lang/NullPointerException
      30: dup
      31: ldc           #153                // String null cannot be cast to non-null type java.lang.Object
      33: invokespecial #157                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: checkcast     #4                  // class java/lang/Object
      40: invokevirtual #161                // Method java/lang/Object.notifyAll:()V
      43: aload_2
      44: areturn

  public final synchronized void updateConnectionFlowControl$okhttp(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #90                 // Field readBytesTotal:J
       5: lload_1
       6: ladd
       7: putfield      #90                 // Field readBytesTotal:J
      10: aload_0
      11: getfield      #90                 // Field readBytesTotal:J
      14: aload_0
      15: getfield      #94                 // Field readBytesAcknowledged:J
      18: lsub
      19: lstore_3
      20: lload_3
      21: aload_0
      22: getfield      #72                 // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      25: invokevirtual #174                // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
      28: iconst_2
      29: idiv
      30: i2l
      31: lcmp
      32: iflt          51
      35: aload_0
      36: iconst_0
      37: lload_3
      38: invokevirtual #178                // Method writeWindowUpdateLater$okhttp:(IJ)V
      41: aload_0
      42: dup
      43: getfield      #94                 // Field readBytesAcknowledged:J
      46: lload_3
      47: ladd
      48: putfield      #94                 // Field readBytesAcknowledged:J
      51: return

  public final okhttp3.internal.http2.Http2Stream pushStream(int, java.util.List<okhttp3.internal.http2.Header>, boolean) throws java.io.IOException;
    Code:
       0: aload_2
       1: ldc           #187                // String requestHeaders
       3: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #12                 // Field client:Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iconst_0
      24: istore        6
      26: iload         4
      28: ifne          54
      31: iconst_0
      32: istore        7
      34: ldc           #189                // String Client cannot push requests.
      36: astore        6
      38: new           #191                // class java/lang/IllegalStateException
      41: dup
      42: aload         6
      44: invokevirtual #194                // Method java/lang/Object.toString:()Ljava/lang/String;
      47: invokespecial #195                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      50: checkcast     #197                // class java/lang/Throwable
      53: athrow
      54: aload_0
      55: iload_1
      56: aload_2
      57: iload_3
      58: invokespecial #200                // Method newStream:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;
      61: areturn

  public final okhttp3.internal.http2.Http2Stream newStream(java.util.List<okhttp3.internal.http2.Header>, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #187                // String requestHeaders
       3: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: iconst_0
       8: aload_1
       9: iload_2
      10: invokespecial #200                // Method newStream:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;
      13: areturn

  private final okhttp3.internal.http2.Http2Stream newStream(int, java.util.List<okhttp3.internal.http2.Header>, boolean) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iconst_0
      15: istore        6
      17: aconst_null
      18: astore        7
      20: iconst_0
      21: istore        8
      23: aload_0
      24: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
      27: astore        9
      29: iconst_0
      30: istore        10
      32: iconst_0
      33: istore        11
      35: aload         9
      37: monitorenter
      38: nop
      39: iconst_0
      40: istore        12
      42: aload_0
      43: astore        13
      45: iconst_0
      46: istore        14
      48: iconst_0
      49: istore        15
      51: aload         13
      53: monitorenter
      54: nop
      55: iconst_0
      56: istore        16
      58: aload_0
      59: getfield      #48                 // Field nextStreamId:I
      62: ldc           #207                // int 1073741823
      64: if_icmple     74
      67: aload_0
      68: getstatic     #213                // Field okhttp3/internal/http2/ErrorCode.REFUSED_STREAM:Lokhttp3/internal/http2/ErrorCode;
      71: invokevirtual #217                // Method shutdown:(Lokhttp3/internal/http2/ErrorCode;)V
      74: aload_0
      75: getfield      #219                // Field isShutdown:Z
      78: ifeq          92
      81: new           #221                // class okhttp3/internal/http2/ConnectionShutdownException
      84: dup
      85: invokespecial #223                // Method okhttp3/internal/http2/ConnectionShutdownException."<init>":()V
      88: checkcast     #197                // class java/lang/Throwable
      91: athrow
      92: aload_0
      93: getfield      #48                 // Field nextStreamId:I
      96: istore        8
      98: aload_0
      99: dup
     100: getfield      #48                 // Field nextStreamId:I
     103: iconst_2
     104: iadd
     105: putfield      #48                 // Field nextStreamId:I
     108: new           #144                // class okhttp3/internal/http2/Http2Stream
     111: dup
     112: iload         8
     114: aload_0
     115: iload         4
     117: iload         5
     119: aconst_null
     120: invokespecial #226                // Method okhttp3/internal/http2/Http2Stream."<init>":(ILokhttp3/internal/http2/Http2Connection;ZZLokhttp3/Headers;)V
     123: astore        7
     125: iload_3
     126: ifeq          155
     129: aload_0
     130: getfield      #98                 // Field writeBytesTotal:J
     133: aload_0
     134: getfield      #102                // Field writeBytesMaximum:J
     137: lcmp
     138: ifge          155
     141: aload         7
     143: invokevirtual #228                // Method okhttp3/internal/http2/Http2Stream.getWriteBytesTotal:()J
     146: aload         7
     148: invokevirtual #230                // Method okhttp3/internal/http2/Http2Stream.getWriteBytesMaximum:()J
     151: lcmp
     152: iflt          159
     155: iconst_1
     156: goto          160
     159: iconst_0
     160: istore        6
     162: aload         7
     164: invokevirtual #233                // Method okhttp3/internal/http2/Http2Stream.isOpen:()Z
     167: ifeq          187
     170: aload_0
     171: getfield      #29                 // Field streams:Ljava/util/Map;
     174: iload         8
     176: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     179: aload         7
     181: invokeinterface #237,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     186: pop
     187: getstatic     #243                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     190: astore        15
     192: aload         13
     194: monitorexit
     195: goto          206
     198: astore        15
     200: aload         13
     202: monitorexit
     203: aload         15
     205: athrow
     206: iload_1
     207: ifne          225
     210: aload_0
     211: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
     214: iload         4
     216: iload         8
     218: aload_2
     219: invokevirtual #249                // Method okhttp3/internal/http2/Http2Writer.headers:(ZILjava/util/List;)V
     222: goto          284
     225: aload_0
     226: getfield      #12                 // Field client:Z
     229: ifne          236
     232: iconst_1
     233: goto          237
     236: iconst_0
     237: istore        13
     239: iconst_0
     240: istore        14
     242: iconst_0
     243: istore        15
     245: iload         13
     247: ifne          273
     250: iconst_0
     251: istore        16
     253: ldc           #251                // String client streams shouldn\'t have associated stream IDs
     255: astore        15
     257: new           #253                // class java/lang/IllegalArgumentException
     260: dup
     261: aload         15
     263: invokevirtual #194                // Method java/lang/Object.toString:()Ljava/lang/String;
     266: invokespecial #254                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     269: checkcast     #197                // class java/lang/Throwable
     272: athrow
     273: aload_0
     274: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
     277: iload_1
     278: iload         8
     280: aload_2
     281: invokevirtual #258                // Method okhttp3/internal/http2/Http2Writer.pushPromise:(IILjava/util/List;)V
     284: getstatic     #243                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     287: astore        11
     289: aload         9
     291: monitorexit
     292: goto          303
     295: astore        11
     297: aload         9
     299: monitorexit
     300: aload         11
     302: athrow
     303: iload         6
     305: ifeq          315
     308: aload_0
     309: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
     312: invokevirtual #261                // Method okhttp3/internal/http2/Http2Writer.flush:()V
     315: aload         7
     317: areturn
    Exception table:
       from    to  target type
          54   192   198   any
         198   200   198   any
          38   289   295   any
         295   297   295   any

  public final void writeHeaders$okhttp(int, boolean, java.util.List<okhttp3.internal.http2.Header>) throws java.io.IOException;
    Code:
       0: aload_3
       1: ldc_w         #274                // String alternating
       4: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
      11: iload_2
      12: iload_1
      13: aload_3
      14: invokevirtual #249                // Method okhttp3/internal/http2/Http2Writer.headers:(ZILjava/util/List;)V
      17: return

  public final void writeData(int, boolean, okio.Buffer, long) throws java.io.IOException;
    Code:
       0: lload         4
       2: lconst_0
       3: lcmp
       4: ifne          19
       7: aload_0
       8: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
      11: iload_2
      12: iload_1
      13: aload_3
      14: iconst_0
      15: invokevirtual #282                // Method okhttp3/internal/http2/Http2Writer.data:(ZILokio/Buffer;I)V
      18: return
      19: lload         4
      21: lstore        19
      23: lload         19
      25: lconst_0
      26: lcmp
      27: ifle          264
      30: iconst_0
      31: istore        6
      33: aload_0
      34: astore        7
      36: iconst_0
      37: istore        8
      39: iconst_0
      40: istore        9
      42: aload         7
      44: monitorenter
      45: nop
      46: iconst_0
      47: istore        10
      49: nop
      50: aload_0
      51: getfield      #98                 // Field writeBytesTotal:J
      54: aload_0
      55: getfield      #102                // Field writeBytesMaximum:J
      58: lcmp
      59: iflt          142
      62: aload_0
      63: getfield      #29                 // Field streams:Ljava/util/Map;
      66: iload_1
      67: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: invokeinterface #286,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      75: ifne          92
      78: new           #185                // class java/io/IOException
      81: dup
      82: ldc_w         #288                // String stream closed
      85: invokespecial #289                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      88: checkcast     #197                // class java/lang/Throwable
      91: athrow
      92: aload_0
      93: astore        11
      95: iconst_0
      96: istore        12
      98: aload         11
     100: dup
     101: ifnonnull     114
     104: new           #151                // class java/lang/NullPointerException
     107: dup
     108: ldc           #153                // String null cannot be cast to non-null type java.lang.Object
     110: invokespecial #157                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: checkcast     #4                  // class java/lang/Object
     117: invokevirtual #292                // Method java/lang/Object.wait:()V
     120: goto          50
     123: astore        11
     125: invokestatic  #298                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     128: invokevirtual #301                // Method java/lang/Thread.interrupt:()V
     131: new           #303                // class java/io/InterruptedIOException
     134: dup
     135: invokespecial #304                // Method java/io/InterruptedIOException."<init>":()V
     138: checkcast     #197                // class java/lang/Throwable
     141: athrow
     142: lload         19
     144: lstore        13
     146: aload_0
     147: getfield      #102                // Field writeBytesMaximum:J
     150: aload_0
     151: getfield      #98                 // Field writeBytesTotal:J
     154: lsub
     155: lstore        15
     157: iconst_0
     158: istore        17
     160: lload         13
     162: lload         15
     164: invokestatic  #310                // Method java/lang/Math.min:(JJ)J
     167: l2i
     168: istore        6
     170: iload         6
     172: istore        11
     174: aload_0
     175: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
     178: invokevirtual #313                // Method okhttp3/internal/http2/Http2Writer.maxDataLength:()I
     181: istore        12
     183: iconst_0
     184: istore        18
     186: iload         11
     188: iload         12
     190: invokestatic  #316                // Method java/lang/Math.min:(II)I
     193: istore        6
     195: aload_0
     196: dup
     197: getfield      #98                 // Field writeBytesTotal:J
     200: iload         6
     202: i2l
     203: ladd
     204: putfield      #98                 // Field writeBytesTotal:J
     207: getstatic     #243                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     210: astore        9
     212: aload         7
     214: monitorexit
     215: goto          226
     218: astore        9
     220: aload         7
     222: monitorexit
     223: aload         9
     225: athrow
     226: lload         19
     228: iload         6
     230: i2l
     231: lsub
     232: lstore        19
     234: aload_0
     235: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
     238: iload_2
     239: ifeq          253
     242: lload         19
     244: lconst_0
     245: lcmp
     246: ifne          253
     249: iconst_1
     250: goto          254
     253: iconst_0
     254: iload_1
     255: aload_3
     256: iload         6
     258: invokevirtual #282                // Method okhttp3/internal/http2/Http2Writer.data:(ZILokio/Buffer;I)V
     261: goto          23
     264: return
    Exception table:
       from    to  target type
          49   123   123   Class java/lang/InterruptedException
          45   212   218   any
         218   220   218   any

  public final void writeSynResetLater$okhttp(int, okhttp3.internal.http2.ErrorCode);
    Code:
       0: aload_2
       1: ldc_w         #331                // String errorCode
       4: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #333                // Field writerQueue:Lokhttp3/internal/concurrent/TaskQueue;
      11: astore_3
      12: new           #335                // class java/lang/StringBuilder
      15: dup
      16: invokespecial #336                // Method java/lang/StringBuilder."<init>":()V
      19: aload_0
      20: getfield      #35                 // Field connectionName:Ljava/lang/String;
      23: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: bipush        91
      28: invokevirtual #343                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: iload_1
      32: invokevirtual #346                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: ldc_w         #348                // String ] writeSynReset
      38: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #349                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore        4
      46: lconst_0
      47: lstore        5
      49: iconst_1
      50: istore        7
      52: iconst_0
      53: istore        8
      55: aload_3
      56: new           #351                // class okhttp3/internal/http2/Http2Connection$writeSynResetLater$$inlined$execute$1
      59: dup
      60: aload         4
      62: iload         7
      64: aload         4
      66: iload         7
      68: aload_0
      69: iload_1
      70: aload_2
      71: invokespecial #354                // Method okhttp3/internal/http2/Http2Connection$writeSynResetLater$$inlined$execute$1."<init>":(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
      74: checkcast     #356                // class okhttp3/internal/concurrent/Task
      77: lload         5
      79: invokevirtual #362                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
      82: nop
      83: return

  public final void writeSynReset$okhttp(int, okhttp3.internal.http2.ErrorCode) throws java.io.IOException;
    Code:
       0: aload_2
       1: ldc_w         #370                // String statusCode
       4: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
      11: iload_1
      12: aload_2
      13: invokevirtual #373                // Method okhttp3/internal/http2/Http2Writer.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V
      16: return

  public final void writeWindowUpdateLater$okhttp(int, long);
    Code:
       0: aload_0
       1: getfield      #333                // Field writerQueue:Lokhttp3/internal/concurrent/TaskQueue;
       4: astore        4
       6: new           #335                // class java/lang/StringBuilder
       9: dup
      10: invokespecial #336                // Method java/lang/StringBuilder."<init>":()V
      13: aload_0
      14: getfield      #35                 // Field connectionName:Ljava/lang/String;
      17: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: bipush        91
      22: invokevirtual #343                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #346                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc_w         #375                // String ] windowUpdate
      32: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #349                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: astore        5
      40: lconst_0
      41: lstore        6
      43: iconst_1
      44: istore        8
      46: iconst_0
      47: istore        9
      49: aload         4
      51: new           #377                // class okhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$execute$1
      54: dup
      55: aload         5
      57: iload         8
      59: aload         5
      61: iload         8
      63: aload_0
      64: iload_1
      65: lload_2
      66: invokespecial #380                // Method okhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$execute$1."<init>":(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;IJ)V
      69: checkcast     #356                // class okhttp3/internal/concurrent/Task
      72: lload         6
      74: invokevirtual #362                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
      77: nop
      78: return

  public final void writePing(boolean, int, int);
    Code:
       0: nop
       1: aload_0
       2: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
       5: iload_1
       6: iload_2
       7: iload_3
       8: invokevirtual #386                // Method okhttp3/internal/http2/Http2Writer.ping:(ZII)V
      11: goto          22
      14: astore        4
      16: aload_0
      17: aload         4
      19: invokespecial #390                // Method failConnection:(Ljava/io/IOException;)V
      22: return
    Exception table:
       from    to  target type
           0    11    14   Class java/io/IOException

  public final void writePingAndAwaitPong() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #397                // Method writePing:()V
       4: aload_0
       5: invokevirtual #400                // Method awaitPong:()V
       8: return

  public final void writePing() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: astore_1
       2: iconst_0
       3: istore_2
       4: iconst_0
       5: istore_3
       6: aload_1
       7: monitorenter
       8: nop
       9: iconst_0
      10: istore        5
      12: aload_0
      13: dup
      14: getfield      #402                // Field awaitPingsSent:J
      17: dup2
      18: lstore        6
      20: lconst_1
      21: ladd
      22: putfield      #402                // Field awaitPingsSent:J
      25: lload         6
      27: lstore_3
      28: aload_1
      29: monitorexit
      30: lload_3
      31: goto          39
      34: astore_3
      35: aload_1
      36: monitorexit
      37: aload_3
      38: athrow
      39: pop2
      40: aload_0
      41: iconst_0
      42: iconst_3
      43: ldc_w         #403                // int 1330343787
      46: invokevirtual #405                // Method writePing:(ZII)V
      49: return
    Exception table:
       from    to  target type
           8    28    34   any
          34    35    34   any

  public final synchronized void awaitPong() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #408                // Field awaitPongsReceived:J
       4: aload_0
       5: getfield      #402                // Field awaitPingsSent:J
       8: lcmp
       9: ifge          40
      12: aload_0
      13: astore_1
      14: iconst_0
      15: istore_2
      16: aload_1
      17: dup
      18: ifnonnull     31
      21: new           #151                // class java/lang/NullPointerException
      24: dup
      25: ldc           #153                // String null cannot be cast to non-null type java.lang.Object
      27: invokespecial #157                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: checkcast     #4                  // class java/lang/Object
      34: invokevirtual #292                // Method java/lang/Object.wait:()V
      37: goto          0
      40: return

  public final void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: invokevirtual #261                // Method okhttp3/internal/http2/Http2Writer.flush:()V
       7: return

  public final void shutdown(okhttp3.internal.http2.ErrorCode) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc_w         #370                // String statusCode
       4: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
      11: astore_2
      12: iconst_0
      13: istore_3
      14: iconst_0
      15: istore        4
      17: aload_2
      18: monitorenter
      19: nop
      20: iconst_0
      21: istore        5
      23: iconst_0
      24: istore        6
      26: aload_0
      27: astore        7
      29: iconst_0
      30: istore        8
      32: iconst_0
      33: istore        9
      35: aload         7
      37: monitorenter
      38: nop
      39: iconst_0
      40: istore        10
      42: aload_0
      43: getfield      #219                // Field isShutdown:Z
      46: ifeq          55
      49: aload         7
      51: monitorexit
      52: aload_2
      53: monitorexit
      54: return
      55: aload_0
      56: iconst_1
      57: putfield      #219                // Field isShutdown:Z
      60: aload_0
      61: getfield      #41                 // Field lastGoodStreamId:I
      64: istore        6
      66: getstatic     #243                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      69: astore        9
      71: aload         7
      73: monitorexit
      74: goto          85
      77: astore        9
      79: aload         7
      81: monitorexit
      82: aload         9
      84: athrow
      85: aload_0
      86: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
      89: iload         6
      91: aload_1
      92: getstatic     #414                // Field okhttp3/internal/Util.EMPTY_BYTE_ARRAY:[B
      95: invokevirtual #418                // Method okhttp3/internal/http2/Http2Writer.goAway:(ILokhttp3/internal/http2/ErrorCode;[B)V
      98: nop
      99: getstatic     #243                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     102: astore        4
     104: aload_2
     105: monitorexit
     106: goto          116
     109: astore        4
     111: aload_2
     112: monitorexit
     113: aload         4
     115: athrow
     116: return
    Exception table:
       from    to  target type
          38    49    77   any
          55    71    77   any
          77    79    77   any
          19    52   109   any
          55   104   109   any
         109   111   109   any

  public void close();
    Code:
       0: aload_0
       1: getstatic     #424                // Field okhttp3/internal/http2/ErrorCode.NO_ERROR:Lokhttp3/internal/http2/ErrorCode;
       4: getstatic     #427                // Field okhttp3/internal/http2/ErrorCode.CANCEL:Lokhttp3/internal/http2/ErrorCode;
       7: aconst_null
       8: invokevirtual #431                // Method close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
      11: return

  public final void close$okhttp(okhttp3.internal.http2.ErrorCode, okhttp3.internal.http2.ErrorCode, java.io.IOException);
    Code:
       0: aload_1
       1: ldc_w         #433                // String connectionCode
       4: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_2
       8: ldc_w         #435                // String streamCode
      11: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_0
      15: astore        4
      17: iconst_0
      18: istore        5
      20: getstatic     #438                // Field okhttp3/internal/Util.assertionsEnabled:Z
      23: ifeq          88
      26: aload         4
      28: invokestatic  #441                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      31: ifeq          88
      34: new           #443                // class java/lang/AssertionError
      37: dup
      38: new           #335                // class java/lang/StringBuilder
      41: dup
      42: invokespecial #336                // Method java/lang/StringBuilder."<init>":()V
      45: ldc_w         #445                // String Thread
      48: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokestatic  #298                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      54: dup
      55: ldc_w         #447                // String Thread.currentThread()
      58: invokestatic  #450                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      61: invokevirtual #453                // Method java/lang/Thread.getName:()Ljava/lang/String;
      64: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc_w         #455                // String  MUST NOT hold lock on
      70: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload         4
      75: invokevirtual #458                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      78: invokevirtual #349                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #461                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      84: checkcast     #197                // class java/lang/Throwable
      87: athrow
      88: nop
      89: iconst_0
      90: istore        4
      92: nop
      93: iconst_0
      94: istore        5
      96: aload_0
      97: aload_1
      98: invokevirtual #217                // Method shutdown:(Lokhttp3/internal/http2/ErrorCode;)V
     101: goto          106
     104: astore        6
     106: nop
     107: aconst_null
     108: checkcast     #463                // class "[Lokhttp3/internal/http2/Http2Stream;"
     111: astore        4
     113: aload_0
     114: astore        5
     116: iconst_0
     117: istore        6
     119: iconst_0
     120: istore        7
     122: aload         5
     124: monitorenter
     125: nop
     126: iconst_0
     127: istore        8
     129: aload_0
     130: getfield      #29                 // Field streams:Ljava/util/Map;
     133: astore        9
     135: iconst_0
     136: istore        10
     138: aload         9
     140: invokeinterface #466,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     145: ifne          152
     148: iconst_1
     149: goto          153
     152: iconst_0
     153: ifeq          214
     156: aload_0
     157: getfield      #29                 // Field streams:Ljava/util/Map;
     160: invokeinterface #470,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     165: astore        9
     167: iconst_0
     168: istore        10
     170: aload         9
     172: astore        11
     174: aload         11
     176: iconst_0
     177: anewarray     #144                // class okhttp3/internal/http2/Http2Stream
     180: invokeinterface #476,  2          // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     185: dup
     186: ifnonnull     200
     189: new           #151                // class java/lang/NullPointerException
     192: dup
     193: ldc_w         #478                // String null cannot be cast to non-null type kotlin.Array<T>
     196: invokespecial #157                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     199: athrow
     200: checkcast     #463                // class "[Lokhttp3/internal/http2/Http2Stream;"
     203: astore        4
     205: aload_0
     206: getfield      #29                 // Field streams:Ljava/util/Map;
     209: invokeinterface #481,  1          // InterfaceMethod java/util/Map.clear:()V
     214: getstatic     #243                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     217: astore        7
     219: aload         5
     221: monitorexit
     222: goto          233
     225: astore        7
     227: aload         5
     229: monitorexit
     230: aload         7
     232: athrow
     233: aload         4
     235: dup
     236: ifnull        307
     239: astore        5
     241: iconst_0
     242: istore        6
     244: aload         5
     246: astore        7
     248: aload         7
     250: arraylength
     251: istore        8
     253: iconst_0
     254: istore        9
     256: iload         9
     258: iload         8
     260: if_icmpge     304
     263: aload         7
     265: iload         9
     267: aaload
     268: astore        10
     270: aload         10
     272: astore        11
     274: iconst_0
     275: istore        12
     277: iconst_0
     278: istore        13
     280: nop
     281: iconst_0
     282: istore        14
     284: aload         11
     286: aload_2
     287: aload_3
     288: invokevirtual #484                // Method okhttp3/internal/http2/Http2Stream.close:(Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
     291: goto          296
     294: astore        15
     296: nop
     297: nop
     298: iinc          9, 1
     301: goto          256
     304: goto          308
     307: pop
     308: iconst_0
     309: istore        5
     311: nop
     312: iconst_0
     313: istore        6
     315: aload_0
     316: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
     319: invokevirtual #486                // Method okhttp3/internal/http2/Http2Writer.close:()V
     322: goto          327
     325: astore        7
     327: nop
     328: iconst_0
     329: istore        5
     331: nop
     332: iconst_0
     333: istore        6
     335: aload_0
     336: getfield      #108                // Field socket:Ljava/net/Socket;
     339: invokevirtual #489                // Method java/net/Socket.close:()V
     342: goto          347
     345: astore        7
     347: nop
     348: aload_0
     349: getfield      #333                // Field writerQueue:Lokhttp3/internal/concurrent/TaskQueue;
     352: invokevirtual #491                // Method okhttp3/internal/concurrent/TaskQueue.shutdown:()V
     355: aload_0
     356: getfield      #493                // Field pushQueue:Lokhttp3/internal/concurrent/TaskQueue;
     359: invokevirtual #491                // Method okhttp3/internal/concurrent/TaskQueue.shutdown:()V
     362: aload_0
     363: getfield      #495                // Field settingsListenerQueue:Lokhttp3/internal/concurrent/TaskQueue;
     366: invokevirtual #491                // Method okhttp3/internal/concurrent/TaskQueue.shutdown:()V
     369: return
    Exception table:
       from    to  target type
          92   101   104   Class java/io/IOException
         125   219   225   any
         225   227   225   any
         280   291   294   Class java/io/IOException
         311   322   325   Class java/io/IOException
         331   342   345   Class java/io/IOException

  private final void failConnection(java.io.IOException);
    Code:
       0: aload_0
       1: getstatic     #518                // Field okhttp3/internal/http2/ErrorCode.PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
       4: getstatic     #518                // Field okhttp3/internal/http2/ErrorCode.PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
       7: aload_1
       8: invokevirtual #431                // Method close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
      11: return

  public final void start(boolean, okhttp3.internal.concurrent.TaskRunner) throws java.io.IOException;
    Code:
       0: aload_2
       1: ldc_w         #522                // String taskRunner
       4: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: iload_1
       8: ifeq          58
      11: aload_0
      12: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
      15: invokevirtual #525                // Method okhttp3/internal/http2/Http2Writer.connectionPreface:()V
      18: aload_0
      19: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
      22: aload_0
      23: getfield      #72                 // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      26: invokevirtual #528                // Method okhttp3/internal/http2/Http2Writer.settings:(Lokhttp3/internal/http2/Settings;)V
      29: aload_0
      30: getfield      #72                 // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      33: invokevirtual #174                // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
      36: istore_3
      37: iload_3
      38: ldc_w         #529                // int 65535
      41: if_icmpeq     58
      44: aload_0
      45: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
      48: iconst_0
      49: iload_3
      50: ldc_w         #529                // int 65535
      53: isub
      54: i2l
      55: invokevirtual #532                // Method okhttp3/internal/http2/Http2Writer.windowUpdate:(IJ)V
      58: aload_2
      59: invokevirtual #538                // Method okhttp3/internal/concurrent/TaskRunner.newQueue:()Lokhttp3/internal/concurrent/TaskQueue;
      62: astore_3
      63: aload_0
      64: getfield      #35                 // Field connectionName:Ljava/lang/String;
      67: astore        4
      69: aload_0
      70: getfield      #120                // Field readerRunnable:Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;
      73: checkcast     #540                // class kotlin/jvm/functions/Function0
      76: astore        8
      78: lconst_0
      79: lstore        5
      81: iconst_1
      82: istore        7
      84: iconst_0
      85: istore        9
      87: aload_3
      88: new           #542                // class okhttp3/internal/concurrent/TaskQueue$execute$1
      91: dup
      92: aload         8
      94: aload         4
      96: iload         7
      98: aload         4
     100: iload         7
     102: invokespecial #545                // Method okhttp3/internal/concurrent/TaskQueue$execute$1."<init>":(Lkotlin/jvm/functions/Function0;Ljava/lang/String;ZLjava/lang/String;Z)V
     105: checkcast     #356                // class okhttp3/internal/concurrent/Task
     108: lload         5
     110: invokevirtual #362                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
     113: nop
     114: return

  public static void start$default(okhttp3.internal.http2.Http2Connection, boolean, okhttp3.internal.concurrent.TaskRunner, int, java.lang.Object) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          8
       6: iconst_1
       7: istore_1
       8: iload_3
       9: iconst_2
      10: iand
      11: ifeq          18
      14: getstatic     #553                // Field okhttp3/internal/concurrent/TaskRunner.INSTANCE:Lokhttp3/internal/concurrent/TaskRunner;
      17: astore_2
      18: aload_0
      19: iload_1
      20: aload_2
      21: invokevirtual #555                // Method start:(ZLokhttp3/internal/concurrent/TaskRunner;)V
      24: return

  public final void start(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: iconst_2
       4: aconst_null
       5: invokestatic  #558                // Method start$default:(Lokhttp3/internal/http2/Http2Connection;ZLokhttp3/internal/concurrent/TaskRunner;ILjava/lang/Object;)V
       8: return

  public final void start() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: aconst_null
       3: iconst_3
       4: aconst_null
       5: invokestatic  #558                // Method start$default:(Lokhttp3/internal/http2/Http2Connection;ZLokhttp3/internal/concurrent/TaskRunner;ILjava/lang/Object;)V
       8: return

  public final void setSettings(okhttp3.internal.http2.Settings) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc_w         #560                // String settings
       4: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
      11: astore_2
      12: iconst_0
      13: istore_3
      14: iconst_0
      15: istore        4
      17: aload_2
      18: monitorenter
      19: nop
      20: iconst_0
      21: istore        5
      23: aload_0
      24: astore        6
      26: iconst_0
      27: istore        7
      29: iconst_0
      30: istore        8
      32: aload         6
      34: monitorenter
      35: nop
      36: iconst_0
      37: istore        9
      39: aload_0
      40: getfield      #219                // Field isShutdown:Z
      43: ifeq          57
      46: new           #221                // class okhttp3/internal/http2/ConnectionShutdownException
      49: dup
      50: invokespecial #223                // Method okhttp3/internal/http2/ConnectionShutdownException."<init>":()V
      53: checkcast     #197                // class java/lang/Throwable
      56: athrow
      57: aload_0
      58: getfield      #72                 // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      61: aload_1
      62: invokevirtual #563                // Method okhttp3/internal/http2/Settings.merge:(Lokhttp3/internal/http2/Settings;)V
      65: getstatic     #243                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      68: astore        8
      70: aload         6
      72: monitorexit
      73: goto          84
      76: astore        8
      78: aload         6
      80: monitorexit
      81: aload         8
      83: athrow
      84: aload_0
      85: getfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
      88: aload_1
      89: invokevirtual #528                // Method okhttp3/internal/http2/Http2Writer.settings:(Lokhttp3/internal/http2/Settings;)V
      92: getstatic     #243                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      95: astore        4
      97: aload_2
      98: monitorexit
      99: goto          109
     102: astore        4
     104: aload_2
     105: monitorexit
     106: aload         4
     108: athrow
     109: return
    Exception table:
       from    to  target type
          35    70    76   any
          76    78    76   any
          19    97   102   any
         102   104   102   any

  public final synchronized boolean isHealthy(long);
    Code:
       0: aload_0
       1: getfield      #219                // Field isShutdown:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #569                // Field degradedPongsReceived:J
      13: aload_0
      14: getfield      #571                // Field degradedPingsSent:J
      17: lcmp
      18: ifge          32
      21: lload_1
      22: aload_0
      23: getfield      #573                // Field degradedPongDeadlineNs:J
      26: lcmp
      27: iflt          32
      30: iconst_0
      31: ireturn
      32: iconst_1
      33: ireturn

  public final void sendDegradedPingLater$okhttp();
    Code:
       0: aload_0
       1: astore_1
       2: iconst_0
       3: istore_2
       4: iconst_0
       5: istore_3
       6: aload_1
       7: monitorenter
       8: nop
       9: iconst_0
      10: istore        4
      12: aload_0
      13: getfield      #569                // Field degradedPongsReceived:J
      16: aload_0
      17: getfield      #571                // Field degradedPingsSent:J
      20: lcmp
      21: ifge          27
      24: aload_1
      25: monitorexit
      26: return
      27: aload_0
      28: dup
      29: getfield      #571                // Field degradedPingsSent:J
      32: dup2
      33: lstore        5
      35: lconst_1
      36: ladd
      37: putfield      #571                // Field degradedPingsSent:J
      40: aload_0
      41: invokestatic  #580                // Method java/lang/System.nanoTime:()J
      44: ldc_w         #581                // int 1000000000
      47: i2l
      48: ladd
      49: putfield      #573                // Field degradedPongDeadlineNs:J
      52: getstatic     #243                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      55: astore_3
      56: aload_1
      57: monitorexit
      58: goto          66
      61: astore_3
      62: aload_1
      63: monitorexit
      64: aload_3
      65: athrow
      66: aload_0
      67: getfield      #333                // Field writerQueue:Lokhttp3/internal/concurrent/TaskQueue;
      70: astore_1
      71: new           #335                // class java/lang/StringBuilder
      74: dup
      75: invokespecial #336                // Method java/lang/StringBuilder."<init>":()V
      78: aload_0
      79: getfield      #35                 // Field connectionName:Ljava/lang/String;
      82: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: ldc_w         #583                // String  ping
      88: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #349                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: astore_2
      95: lconst_0
      96: lstore_3
      97: iconst_1
      98: istore        5
     100: iconst_0
     101: istore        6
     103: aload_1
     104: new           #585                // class okhttp3/internal/http2/Http2Connection$sendDegradedPingLater$$inlined$execute$1
     107: dup
     108: aload_2
     109: iload         5
     111: aload_2
     112: iload         5
     114: aload_0
     115: invokespecial #588                // Method okhttp3/internal/http2/Http2Connection$sendDegradedPingLater$$inlined$execute$1."<init>":(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;)V
     118: checkcast     #356                // class okhttp3/internal/concurrent/Task
     121: lload_3
     122: invokevirtual #362                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
     125: nop
     126: return
    Exception table:
       from    to  target type
           8    24    61   any
          27    56    61   any
          61    62    61   any

  public final boolean pushedStream$okhttp(int);
    Code:
       0: iload_1
       1: ifeq          14
       4: iload_1
       5: iconst_1
       6: iand
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public final void pushRequestLater$okhttp(int, java.util.List<okhttp3.internal.http2.Header>);
    Code:
       0: aload_2
       1: ldc           #187                // String requestHeaders
       3: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_3
       8: iconst_0
       9: istore        4
      11: iconst_0
      12: istore        5
      14: aload_3
      15: monitorenter
      16: nop
      17: iconst_0
      18: istore        6
      20: aload_0
      21: getfield      #596                // Field currentPushRequests:Ljava/util/Set;
      24: iload_1
      25: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: invokeinterface #601,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      33: ifeq          47
      36: aload_0
      37: iload_1
      38: getstatic     #518                // Field okhttp3/internal/http2/ErrorCode.PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
      41: invokevirtual #603                // Method writeSynResetLater$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V
      44: aload_3
      45: monitorexit
      46: return
      47: aload_0
      48: getfield      #596                // Field currentPushRequests:Ljava/util/Set;
      51: iload_1
      52: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      55: invokeinterface #606,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      60: istore        5
      62: aload_3
      63: monitorexit
      64: goto          74
      67: astore        5
      69: aload_3
      70: monitorexit
      71: aload         5
      73: athrow
      74: aload_0
      75: getfield      #493                // Field pushQueue:Lokhttp3/internal/concurrent/TaskQueue;
      78: astore_3
      79: new           #335                // class java/lang/StringBuilder
      82: dup
      83: invokespecial #336                // Method java/lang/StringBuilder."<init>":()V
      86: aload_0
      87: getfield      #35                 // Field connectionName:Ljava/lang/String;
      90: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: bipush        91
      95: invokevirtual #343                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      98: iload_1
      99: invokevirtual #346                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     102: ldc_w         #608                // String ] onRequest
     105: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #349                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: astore        4
     113: lconst_0
     114: lstore        5
     116: iconst_1
     117: istore        7
     119: iconst_0
     120: istore        8
     122: aload_3
     123: new           #610                // class okhttp3/internal/http2/Http2Connection$pushRequestLater$$inlined$execute$1
     126: dup
     127: aload         4
     129: iload         7
     131: aload         4
     133: iload         7
     135: aload_0
     136: iload_1
     137: aload_2
     138: invokespecial #613                // Method okhttp3/internal/http2/Http2Connection$pushRequestLater$$inlined$execute$1."<init>":(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILjava/util/List;)V
     141: checkcast     #356                // class okhttp3/internal/concurrent/Task
     144: lload         5
     146: invokevirtual #362                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
     149: nop
     150: return
    Exception table:
       from    to  target type
          16    44    67   any
          47    62    67   any
          67    69    67   any

  public final void pushHeadersLater$okhttp(int, java.util.List<okhttp3.internal.http2.Header>, boolean);
    Code:
       0: aload_2
       1: ldc           #187                // String requestHeaders
       3: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #493                // Field pushQueue:Lokhttp3/internal/concurrent/TaskQueue;
      10: astore        4
      12: new           #335                // class java/lang/StringBuilder
      15: dup
      16: invokespecial #336                // Method java/lang/StringBuilder."<init>":()V
      19: aload_0
      20: getfield      #35                 // Field connectionName:Ljava/lang/String;
      23: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: bipush        91
      28: invokevirtual #343                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: iload_1
      32: invokevirtual #346                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: ldc_w         #619                // String ] onHeaders
      38: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #349                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore        5
      46: lconst_0
      47: lstore        6
      49: iconst_1
      50: istore        8
      52: iconst_0
      53: istore        9
      55: aload         4
      57: new           #621                // class okhttp3/internal/http2/Http2Connection$pushHeadersLater$$inlined$execute$1
      60: dup
      61: aload         5
      63: iload         8
      65: aload         5
      67: iload         8
      69: aload_0
      70: iload_1
      71: aload_2
      72: iload_3
      73: invokespecial #624                // Method okhttp3/internal/http2/Http2Connection$pushHeadersLater$$inlined$execute$1."<init>":(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILjava/util/List;Z)V
      76: checkcast     #356                // class okhttp3/internal/concurrent/Task
      79: lload         6
      81: invokevirtual #362                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
      84: nop
      85: return

  public final void pushDataLater$okhttp(int, okio.BufferedSource, int, boolean) throws java.io.IOException;
    Code:
       0: aload_2
       1: ldc_w         #628                // String source
       4: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: new           #327                // class okio/Buffer
      10: dup
      11: invokespecial #629                // Method okio/Buffer."<init>":()V
      14: astore        5
      16: aload_2
      17: iload_3
      18: i2l
      19: invokeinterface #634,  3          // InterfaceMethod okio/BufferedSource.require:(J)V
      24: aload_2
      25: aload         5
      27: iload_3
      28: i2l
      29: invokeinterface #637,  4          // InterfaceMethod okio/BufferedSource.read:(Lokio/Buffer;J)J
      34: pop2
      35: aload_0
      36: getfield      #493                // Field pushQueue:Lokhttp3/internal/concurrent/TaskQueue;
      39: astore        6
      41: new           #335                // class java/lang/StringBuilder
      44: dup
      45: invokespecial #336                // Method java/lang/StringBuilder."<init>":()V
      48: aload_0
      49: getfield      #35                 // Field connectionName:Ljava/lang/String;
      52: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: bipush        91
      57: invokevirtual #343                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      60: iload_1
      61: invokevirtual #346                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: ldc_w         #639                // String ] onData
      67: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #349                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: astore        7
      75: lconst_0
      76: lstore        8
      78: iconst_1
      79: istore        10
      81: iconst_0
      82: istore        11
      84: aload         6
      86: new           #641                // class okhttp3/internal/http2/Http2Connection$pushDataLater$$inlined$execute$1
      89: dup
      90: aload         7
      92: iload         10
      94: aload         7
      96: iload         10
      98: aload_0
      99: iload_1
     100: aload         5
     102: iload_3
     103: iload         4
     105: invokespecial #644                // Method okhttp3/internal/http2/Http2Connection$pushDataLater$$inlined$execute$1."<init>":(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokio/Buffer;IZ)V
     108: checkcast     #356                // class okhttp3/internal/concurrent/Task
     111: lload         8
     113: invokevirtual #362                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
     116: nop
     117: return

  public final void pushResetLater$okhttp(int, okhttp3.internal.http2.ErrorCode);
    Code:
       0: aload_2
       1: ldc_w         #331                // String errorCode
       4: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #493                // Field pushQueue:Lokhttp3/internal/concurrent/TaskQueue;
      11: astore_3
      12: new           #335                // class java/lang/StringBuilder
      15: dup
      16: invokespecial #336                // Method java/lang/StringBuilder."<init>":()V
      19: aload_0
      20: getfield      #35                 // Field connectionName:Ljava/lang/String;
      23: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: bipush        91
      28: invokevirtual #343                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: iload_1
      32: invokevirtual #346                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: ldc_w         #648                // String ] onReset
      38: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #349                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore        4
      46: lconst_0
      47: lstore        5
      49: iconst_1
      50: istore        7
      52: iconst_0
      53: istore        8
      55: aload_3
      56: new           #650                // class okhttp3/internal/http2/Http2Connection$pushResetLater$$inlined$execute$1
      59: dup
      60: aload         4
      62: iload         7
      64: aload         4
      66: iload         7
      68: aload_0
      69: iload_1
      70: aload_2
      71: invokespecial #651                // Method okhttp3/internal/http2/Http2Connection$pushResetLater$$inlined$execute$1."<init>":(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
      74: checkcast     #356                // class okhttp3/internal/concurrent/Task
      77: lload         5
      79: invokevirtual #362                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
      82: nop
      83: return

  public okhttp3.internal.http2.Http2Connection(okhttp3.internal.http2.Http2Connection$Builder);
    Code:
       0: aload_1
       1: ldc_w         #654                // String builder
       4: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: invokespecial #655                // Method java/lang/Object."<init>":()V
      11: aload_0
      12: aload_1
      13: invokevirtual #659                // Method okhttp3/internal/http2/Http2Connection$Builder.getClient$okhttp:()Z
      16: putfield      #12                 // Field client:Z
      19: aload_0
      20: aload_1
      21: invokevirtual #661                // Method okhttp3/internal/http2/Http2Connection$Builder.getListener$okhttp:()Lokhttp3/internal/http2/Http2Connection$Listener;
      24: putfield      #21                 // Field listener:Lokhttp3/internal/http2/Http2Connection$Listener;
      27: aload_0
      28: iconst_0
      29: istore_2
      30: new           #663                // class java/util/LinkedHashMap
      33: dup
      34: invokespecial #664                // Method java/util/LinkedHashMap."<init>":()V
      37: checkcast     #126                // class java/util/Map
      40: putfield      #29                 // Field streams:Ljava/util/Map;
      43: aload_0
      44: aload_1
      45: invokevirtual #666                // Method okhttp3/internal/http2/Http2Connection$Builder.getConnectionName$okhttp:()Ljava/lang/String;
      48: putfield      #35                 // Field connectionName:Ljava/lang/String;
      51: aload_0
      52: aload_1
      53: invokevirtual #659                // Method okhttp3/internal/http2/Http2Connection$Builder.getClient$okhttp:()Z
      56: ifeq          63
      59: iconst_3
      60: goto          64
      63: iconst_2
      64: putfield      #48                 // Field nextStreamId:I
      67: aload_0
      68: aload_1
      69: invokevirtual #670                // Method okhttp3/internal/http2/Http2Connection$Builder.getTaskRunner$okhttp:()Lokhttp3/internal/concurrent/TaskRunner;
      72: putfield      #672                // Field taskRunner:Lokhttp3/internal/concurrent/TaskRunner;
      75: aload_0
      76: aload_0
      77: getfield      #672                // Field taskRunner:Lokhttp3/internal/concurrent/TaskRunner;
      80: invokevirtual #538                // Method okhttp3/internal/concurrent/TaskRunner.newQueue:()Lokhttp3/internal/concurrent/TaskQueue;
      83: putfield      #333                // Field writerQueue:Lokhttp3/internal/concurrent/TaskQueue;
      86: aload_0
      87: aload_0
      88: getfield      #672                // Field taskRunner:Lokhttp3/internal/concurrent/TaskRunner;
      91: invokevirtual #538                // Method okhttp3/internal/concurrent/TaskRunner.newQueue:()Lokhttp3/internal/concurrent/TaskQueue;
      94: putfield      #493                // Field pushQueue:Lokhttp3/internal/concurrent/TaskQueue;
      97: aload_0
      98: aload_0
      99: getfield      #672                // Field taskRunner:Lokhttp3/internal/concurrent/TaskRunner;
     102: invokevirtual #538                // Method okhttp3/internal/concurrent/TaskRunner.newQueue:()Lokhttp3/internal/concurrent/TaskQueue;
     105: putfield      #495                // Field settingsListenerQueue:Lokhttp3/internal/concurrent/TaskQueue;
     108: aload_0
     109: aload_1
     110: invokevirtual #676                // Method okhttp3/internal/http2/Http2Connection$Builder.getPushObserver$okhttp:()Lokhttp3/internal/http2/PushObserver;
     113: putfield      #678                // Field pushObserver:Lokhttp3/internal/http2/PushObserver;
     116: aload_0
     117: new           #171                // class okhttp3/internal/http2/Settings
     120: dup
     121: invokespecial #679                // Method okhttp3/internal/http2/Settings."<init>":()V
     124: astore_2
     125: iconst_0
     126: istore_3
     127: iconst_0
     128: istore        4
     130: aload_2
     131: astore        5
     133: astore        7
     135: iconst_0
     136: istore        6
     138: aload_1
     139: invokevirtual #659                // Method okhttp3/internal/http2/Http2Connection$Builder.getClient$okhttp:()Z
     142: ifeq          156
     145: aload         5
     147: bipush        7
     149: ldc_w         #680                // int 16777216
     152: invokevirtual #684                // Method okhttp3/internal/http2/Settings.set:(II)Lokhttp3/internal/http2/Settings;
     155: pop
     156: getstatic     #243                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     159: astore        8
     161: aload         7
     163: aload_2
     164: putfield      #72                 // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
     167: aload_0
     168: getstatic     #687                // Field DEFAULT_SETTINGS:Lokhttp3/internal/http2/Settings;
     171: putfield      #76                 // Field peerSettings:Lokhttp3/internal/http2/Settings;
     174: aload_0
     175: aload_0
     176: getfield      #76                 // Field peerSettings:Lokhttp3/internal/http2/Settings;
     179: invokevirtual #174                // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
     182: i2l
     183: putfield      #102                // Field writeBytesMaximum:J
     186: aload_0
     187: aload_1
     188: invokevirtual #689                // Method okhttp3/internal/http2/Http2Connection$Builder.getSocket$okhttp:()Ljava/net/Socket;
     191: putfield      #108                // Field socket:Ljava/net/Socket;
     194: aload_0
     195: new           #245                // class okhttp3/internal/http2/Http2Writer
     198: dup
     199: aload_1
     200: invokevirtual #693                // Method okhttp3/internal/http2/Http2Connection$Builder.getSink$okhttp:()Lokio/BufferedSink;
     203: aload_0
     204: getfield      #12                 // Field client:Z
     207: invokespecial #696                // Method okhttp3/internal/http2/Http2Writer."<init>":(Lokio/BufferedSink;Z)V
     210: putfield      #114                // Field writer:Lokhttp3/internal/http2/Http2Writer;
     213: aload_0
     214: new           #698                // class okhttp3/internal/http2/Http2Connection$ReaderRunnable
     217: dup
     218: aload_0
     219: new           #700                // class okhttp3/internal/http2/Http2Reader
     222: dup
     223: aload_1
     224: invokevirtual #704                // Method okhttp3/internal/http2/Http2Connection$Builder.getSource$okhttp:()Lokio/BufferedSource;
     227: aload_0
     228: getfield      #12                 // Field client:Z
     231: invokespecial #707                // Method okhttp3/internal/http2/Http2Reader."<init>":(Lokio/BufferedSource;Z)V
     234: invokespecial #710                // Method okhttp3/internal/http2/Http2Connection$ReaderRunnable."<init>":(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Reader;)V
     237: putfield      #120                // Field readerRunnable:Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;
     240: aload_0
     241: iconst_0
     242: istore_2
     243: new           #712                // class java/util/LinkedHashSet
     246: dup
     247: invokespecial #713                // Method java/util/LinkedHashSet."<init>":()V
     250: checkcast     #598                // class java/util/Set
     253: putfield      #596                // Field currentPushRequests:Ljava/util/Set;
     256: nop
     257: aload_1
     258: invokevirtual #716                // Method okhttp3/internal/http2/Http2Connection$Builder.getPingIntervalMillis$okhttp:()I
     261: ifeq          333
     264: getstatic     #722                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     267: aload_1
     268: invokevirtual #716                // Method okhttp3/internal/http2/Http2Connection$Builder.getPingIntervalMillis$okhttp:()I
     271: i2l
     272: invokevirtual #726                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     275: lstore_2
     276: aload_0
     277: getfield      #333                // Field writerQueue:Lokhttp3/internal/concurrent/TaskQueue;
     280: astore        4
     282: new           #335                // class java/lang/StringBuilder
     285: dup
     286: invokespecial #336                // Method java/lang/StringBuilder."<init>":()V
     289: aload_0
     290: getfield      #35                 // Field connectionName:Ljava/lang/String;
     293: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     296: ldc_w         #583                // String  ping
     299: invokevirtual #340                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     302: invokevirtual #349                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     305: astore        5
     307: iconst_0
     308: istore        6
     310: aload         4
     312: new           #728                // class okhttp3/internal/http2/Http2Connection$$special$$inlined$schedule$1
     315: dup
     316: aload         5
     318: aload         5
     320: aload_0
     321: lload_2
     322: invokespecial #731                // Method okhttp3/internal/http2/Http2Connection$$special$$inlined$schedule$1."<init>":(Ljava/lang/String;Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection;J)V
     325: checkcast     #356                // class okhttp3/internal/concurrent/Task
     328: lload_2
     329: invokevirtual #362                // Method okhttp3/internal/concurrent/TaskQueue.schedule:(Lokhttp3/internal/concurrent/Task;J)V
     332: nop
     333: return

  static {};
    Code:
       0: new           #810                // class okhttp3/internal/http2/Http2Connection$Companion
       3: dup
       4: aconst_null
       5: invokespecial #813                // Method okhttp3/internal/http2/Http2Connection$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #815                // Field Companion:Lokhttp3/internal/http2/Http2Connection$Companion;
      11: new           #171                // class okhttp3/internal/http2/Settings
      14: dup
      15: invokespecial #679                // Method okhttp3/internal/http2/Settings."<init>":()V
      18: astore_0
      19: iconst_0
      20: istore_1
      21: iconst_0
      22: istore_2
      23: aload_0
      24: astore_3
      25: iconst_0
      26: istore        4
      28: aload_3
      29: bipush        7
      31: ldc_w         #529                // int 65535
      34: invokevirtual #684                // Method okhttp3/internal/http2/Settings.set:(II)Lokhttp3/internal/http2/Settings;
      37: pop
      38: aload_3
      39: iconst_5
      40: sipush        16384
      43: invokevirtual #684                // Method okhttp3/internal/http2/Settings.set:(II)Lokhttp3/internal/http2/Settings;
      46: pop
      47: nop
      48: aload_0
      49: putstatic     #687                // Field DEFAULT_SETTINGS:Lokhttp3/internal/http2/Settings;
      52: return

  public static final boolean access$isShutdown$p(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #219                // Field isShutdown:Z
       4: ireturn

  public static final void access$setShutdown$p(okhttp3.internal.http2.Http2Connection, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #219                // Field isShutdown:Z
       5: return

  public static final okhttp3.internal.concurrent.TaskRunner access$getTaskRunner$p(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #672                // Field taskRunner:Lokhttp3/internal/concurrent/TaskRunner;
       4: areturn

  public static final okhttp3.internal.concurrent.TaskQueue access$getWriterQueue$p(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #333                // Field writerQueue:Lokhttp3/internal/concurrent/TaskQueue;
       4: areturn

  public static final okhttp3.internal.concurrent.TaskQueue access$getSettingsListenerQueue$p(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #495                // Field settingsListenerQueue:Lokhttp3/internal/concurrent/TaskQueue;
       4: areturn

  public static final void access$failConnection(okhttp3.internal.http2.Http2Connection, java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #390                // Method failConnection:(Ljava/io/IOException;)V
       5: return

  public static final long access$getIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #763                // Field intervalPongsReceived:J
       4: lreturn

  public static final void access$setIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection, long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #763                // Field intervalPongsReceived:J
       5: return

  public static final long access$getDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #569                // Field degradedPongsReceived:J
       4: lreturn

  public static final void access$setDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection, long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #569                // Field degradedPongsReceived:J
       5: return

  public static final long access$getAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #408                // Field awaitPongsReceived:J
       4: lreturn

  public static final void access$setAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection, long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #408                // Field awaitPongsReceived:J
       5: return

  public static final long access$getWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #102                // Field writeBytesMaximum:J
       4: lreturn

  public static final void access$setWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection, long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #102                // Field writeBytesMaximum:J
       5: return

  public static final okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #678                // Field pushObserver:Lokhttp3/internal/http2/PushObserver;
       4: areturn

  public static final java.util.Set access$getCurrentPushRequests$p(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #596                // Field currentPushRequests:Ljava/util/Set;
       4: areturn

  public static final long access$getIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #778                // Field intervalPingsSent:J
       4: lreturn

  public static final void access$setIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection, long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #778                // Field intervalPingsSent:J
       5: return

  public static final okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp();
    Code:
       0: getstatic     #687                // Field DEFAULT_SETTINGS:Lokhttp3/internal/http2/Settings;
       3: areturn
}
