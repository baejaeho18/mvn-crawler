Compiled from "RetryAndFollowUpInterceptor.kt"
public final class okhttp3.internal.http.RetryAndFollowUpInterceptor implements okhttp3.Interceptor {
  private final okhttp3.OkHttpClient client;

  private static final int MAX_FOLLOW_UPS;

  public static final okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion Companion;

  public okhttp3.Response intercept(okhttp3.Interceptor$Chain) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #15                 // String chain
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: checkcast     #23                 // class okhttp3/internal/http/RealInterceptorChain
      10: astore_2
      11: aload_1
      12: checkcast     #23                 // class okhttp3/internal/http/RealInterceptorChain
      15: invokevirtual #27                 // Method okhttp3/internal/http/RealInterceptorChain.getRequest$okhttp:()Lokhttp3/Request;
      18: astore_3
      19: aload_2
      20: invokevirtual #31                 // Method okhttp3/internal/http/RealInterceptorChain.getCall$okhttp:()Lokhttp3/internal/connection/RealCall;
      23: astore        4
      25: iconst_0
      26: istore        5
      28: aconst_null
      29: checkcast     #33                 // class okhttp3/Response
      32: astore        6
      34: iconst_1
      35: istore        7
      37: iconst_0
      38: istore        9
      40: invokestatic  #39                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
      43: astore        8
      45: nop
      46: aload         4
      48: aload_3
      49: iload         7
      51: invokevirtual #45                 // Method okhttp3/internal/connection/RealCall.enterNetworkInterceptorExchange:(Lokhttp3/Request;Z)V
      54: aconst_null
      55: astore        9
      57: iconst_1
      58: istore        10
      60: nop
      61: aload         4
      63: invokevirtual #49                 // Method okhttp3/internal/connection/RealCall.isCanceled:()Z
      66: ifeq          82
      69: new           #10                 // class java/io/IOException
      72: dup
      73: ldc           #51                 // String Canceled
      75: invokespecial #55                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      78: checkcast     #57                 // class java/lang/Throwable
      81: athrow
      82: nop
      83: aload_2
      84: aload_3
      85: invokevirtual #61                 // Method okhttp3/internal/http/RealInterceptorChain.proceed:(Lokhttp3/Request;)Lokhttp3/Response;
      88: astore        9
      90: iconst_1
      91: istore        7
      93: goto          219
      96: astore        11
      98: aload_0
      99: aload         11
     101: invokevirtual #65                 // Method okhttp3/internal/connection/RouteException.getLastConnectException:()Ljava/io/IOException;
     104: aload         4
     106: aload_3
     107: iconst_0
     108: invokespecial #69                 // Method recover:(Ljava/io/IOException;Lokhttp3/internal/connection/RealCall;Lokhttp3/Request;Z)Z
     111: ifne          128
     114: aload         11
     116: invokevirtual #72                 // Method okhttp3/internal/connection/RouteException.getFirstConnectException:()Ljava/io/IOException;
     119: checkcast     #74                 // class java/lang/Exception
     122: aload         8
     124: invokestatic  #80                 // Method okhttp3/internal/Util.withSuppressed:(Ljava/lang/Exception;Ljava/util/List;)Ljava/lang/Throwable;
     127: athrow
     128: aload         8
     130: checkcast     #82                 // class java/util/Collection
     133: aload         11
     135: invokevirtual #72                 // Method okhttp3/internal/connection/RouteException.getFirstConnectException:()Ljava/io/IOException;
     138: invokestatic  #86                 // Method kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;
     141: astore        8
     143: iconst_0
     144: istore        7
     146: aload         4
     148: iload         10
     150: invokevirtual #90                 // Method okhttp3/internal/connection/RealCall.exitNetworkInterceptorExchange$okhttp:(Z)V
     153: goto          45
     156: astore        11
     158: aload_0
     159: aload         11
     161: aload         4
     163: aload_3
     164: aload         11
     166: instanceof    #92                 // class okhttp3/internal/http2/ConnectionShutdownException
     169: ifne          176
     172: iconst_1
     173: goto          177
     176: iconst_0
     177: invokespecial #69                 // Method recover:(Ljava/io/IOException;Lokhttp3/internal/connection/RealCall;Lokhttp3/Request;Z)Z
     180: ifne          194
     183: aload         11
     185: checkcast     #74                 // class java/lang/Exception
     188: aload         8
     190: invokestatic  #80                 // Method okhttp3/internal/Util.withSuppressed:(Ljava/lang/Exception;Ljava/util/List;)Ljava/lang/Throwable;
     193: athrow
     194: aload         8
     196: checkcast     #82                 // class java/util/Collection
     199: aload         11
     201: invokestatic  #86                 // Method kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;
     204: astore        8
     206: iconst_0
     207: istore        7
     209: aload         4
     211: iload         10
     213: invokevirtual #90                 // Method okhttp3/internal/connection/RealCall.exitNetworkInterceptorExchange$okhttp:(Z)V
     216: goto          45
     219: aload         6
     221: ifnull        249
     224: aload         9
     226: invokevirtual #96                 // Method okhttp3/Response.newBuilder:()Lokhttp3/Response$Builder;
     229: aload         6
     231: invokevirtual #96                 // Method okhttp3/Response.newBuilder:()Lokhttp3/Response$Builder;
     234: aconst_null
     235: invokevirtual #102                // Method okhttp3/Response$Builder.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;
     238: invokevirtual #106                // Method okhttp3/Response$Builder.build:()Lokhttp3/Response;
     241: invokevirtual #110                // Method okhttp3/Response$Builder.priorResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;
     244: invokevirtual #106                // Method okhttp3/Response$Builder.build:()Lokhttp3/Response;
     247: astore        9
     249: aload         4
     251: invokevirtual #114                // Method okhttp3/internal/connection/RealCall.getInterceptorScopedExchange$okhttp:()Lokhttp3/internal/connection/Exchange;
     254: astore        11
     256: aload_0
     257: aload         9
     259: aload         11
     261: invokespecial #118                // Method followUpRequest:(Lokhttp3/Response;Lokhttp3/internal/connection/Exchange;)Lokhttp3/Request;
     264: astore        12
     266: aload         12
     268: ifnonnull     306
     271: aload         11
     273: ifnull        289
     276: aload         11
     278: invokevirtual #123                // Method okhttp3/internal/connection/Exchange.isDuplex$okhttp:()Z
     281: ifeq          289
     284: aload         4
     286: invokevirtual #127                // Method okhttp3/internal/connection/RealCall.timeoutEarlyExit:()V
     289: iconst_0
     290: istore        10
     292: aload         9
     294: astore        13
     296: aload         4
     298: iload         10
     300: invokevirtual #90                 // Method okhttp3/internal/connection/RealCall.exitNetworkInterceptorExchange$okhttp:(Z)V
     303: aload         13
     305: areturn
     306: aload         12
     308: invokevirtual #132                // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
     311: astore        13
     313: aload         13
     315: ifnull        343
     318: aload         13
     320: invokevirtual #137                // Method okhttp3/RequestBody.isOneShot:()Z
     323: ifeq          343
     326: iconst_0
     327: istore        10
     329: aload         9
     331: astore        14
     333: aload         4
     335: iload         10
     337: invokevirtual #90                 // Method okhttp3/internal/connection/RealCall.exitNetworkInterceptorExchange$okhttp:(Z)V
     340: aload         14
     342: areturn
     343: aload         9
     345: invokevirtual #140                // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
     348: dup
     349: ifnull        361
     352: checkcast     #142                // class java/io/Closeable
     355: invokestatic  #146                // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
     358: goto          362
     361: pop
     362: iinc          5, 1
     365: iload         5
     367: bipush        20
     369: if_icmple     403
     372: new           #148                // class java/net/ProtocolException
     375: dup
     376: new           #150                // class java/lang/StringBuilder
     379: dup
     380: invokespecial #152                // Method java/lang/StringBuilder."<init>":()V
     383: ldc           #154                // String Too many follow-up requests:
     385: invokevirtual #158                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     388: iload         5
     390: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     393: invokevirtual #165                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     396: invokespecial #166                // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
     399: checkcast     #57                 // class java/lang/Throwable
     402: athrow
     403: aload         12
     405: astore_3
     406: aload         9
     408: astore        6
     410: aload         4
     412: iload         10
     414: invokevirtual #90                 // Method okhttp3/internal/connection/RealCall.exitNetworkInterceptorExchange$okhttp:(Z)V
     417: goto          432
     420: astore        11
     422: aload         4
     424: iload         10
     426: invokevirtual #90                 // Method okhttp3/internal/connection/RealCall.exitNetworkInterceptorExchange$okhttp:(Z)V
     429: aload         11
     431: athrow
     432: goto          45
    Exception table:
       from    to  target type
          82    93    96   Class okhttp3/internal/connection/RouteException
          82    93   156   Class java/io/IOException
          60   146   420   any
         156   209   420   any
         219   296   420   any
         306   333   420   any
         343   410   420   any
         420   422   420   any

  private final boolean recover(java.io.IOException, okhttp3.internal.connection.RealCall, okhttp3.Request, boolean);
    Code:
       0: aload_0
       1: getfield      #202                // Field client:Lokhttp3/OkHttpClient;
       4: invokevirtual #207                // Method okhttp3/OkHttpClient.retryOnConnectionFailure:()Z
       7: ifne          12
      10: iconst_0
      11: ireturn
      12: iload         4
      14: ifeq          28
      17: aload_0
      18: aload_1
      19: aload_3
      20: invokespecial #211                // Method requestIsOneShot:(Ljava/io/IOException;Lokhttp3/Request;)Z
      23: ifeq          28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: aload_1
      30: iload         4
      32: invokespecial #215                // Method isRecoverable:(Ljava/io/IOException;Z)Z
      35: ifne          40
      38: iconst_0
      39: ireturn
      40: aload_2
      41: invokevirtual #218                // Method okhttp3/internal/connection/RealCall.retryAfterFailure:()Z
      44: ifne          49
      47: iconst_0
      48: ireturn
      49: iconst_1
      50: ireturn

  private final boolean requestIsOneShot(java.io.IOException, okhttp3.Request);
    Code:
       0: aload_2
       1: invokevirtual #132                // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
       4: astore_3
       5: aload_3
       6: ifnull        16
       9: aload_3
      10: invokevirtual #137                // Method okhttp3/RequestBody.isOneShot:()Z
      13: ifne          23
      16: aload_1
      17: instanceof    #222                // class java/io/FileNotFoundException
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  private final boolean isRecoverable(java.io.IOException, boolean);
    Code:
       0: aload_1
       1: instanceof    #148                // class java/net/ProtocolException
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: instanceof    #225                // class java/io/InterruptedIOException
      13: ifeq          33
      16: aload_1
      17: instanceof    #227                // class java/net/SocketTimeoutException
      20: ifeq          31
      23: iload_2
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn
      33: aload_1
      34: instanceof    #229                // class javax/net/ssl/SSLHandshakeException
      37: ifeq          52
      40: aload_1
      41: invokevirtual #233                // Method java/io/IOException.getCause:()Ljava/lang/Throwable;
      44: instanceof    #235                // class java/security/cert/CertificateException
      47: ifeq          52
      50: iconst_0
      51: ireturn
      52: aload_1
      53: instanceof    #237                // class javax/net/ssl/SSLPeerUnverifiedException
      56: ifeq          61
      59: iconst_0
      60: ireturn
      61: iconst_1
      62: ireturn

  private final okhttp3.Request followUpRequest(okhttp3.Response, okhttp3.internal.connection.Exchange) throws java.io.IOException;
    Code:
       0: aload_2
       1: dup
       2: ifnull        18
       5: invokevirtual #241                // Method okhttp3/internal/connection/Exchange.getConnection$okhttp:()Lokhttp3/internal/connection/RealConnection;
       8: dup
       9: ifnull        18
      12: invokevirtual #247                // Method okhttp3/internal/connection/RealConnection.route:()Lokhttp3/Route;
      15: goto          20
      18: pop
      19: aconst_null
      20: astore_3
      21: aload_1
      22: invokevirtual #251                // Method okhttp3/Response.code:()I
      25: istore        4
      27: aload_1
      28: invokevirtual #253                // Method okhttp3/Response.request:()Lokhttp3/Request;
      31: invokevirtual #256                // Method okhttp3/Request.method:()Ljava/lang/String;
      34: astore        5
      36: iload         4
      38: lookupswitch  { // 11
                   300: 201
                   301: 201
                   302: 201
                   303: 201
                   307: 201
                   308: 201
                   401: 186
                   407: 136
                   408: 209
                   421: 327
                   503: 285
               default: 376
          }
     136: aload_3
     137: dup
     138: invokestatic  #260                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     141: invokevirtual #266                // Method okhttp3/Route.proxy:()Ljava/net/Proxy;
     144: astore        6
     146: aload         6
     148: invokevirtual #272                // Method java/net/Proxy.type:()Ljava/net/Proxy$Type;
     151: getstatic     #278                // Field java/net/Proxy$Type.HTTP:Ljava/net/Proxy$Type;
     154: if_acmpeq     171
     157: new           #148                // class java/net/ProtocolException
     160: dup
     161: ldc_w         #280                // String Received HTTP_PROXY_AUTH (407) code while not using proxy
     164: invokespecial #166                // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
     167: checkcast     #57                 // class java/lang/Throwable
     170: athrow
     171: aload_0
     172: getfield      #202                // Field client:Lokhttp3/OkHttpClient;
     175: invokevirtual #284                // Method okhttp3/OkHttpClient.proxyAuthenticator:()Lokhttp3/Authenticator;
     178: aload_3
     179: aload_1
     180: invokeinterface #290,  3          // InterfaceMethod okhttp3/Authenticator.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
     185: areturn
     186: aload_0
     187: getfield      #202                // Field client:Lokhttp3/OkHttpClient;
     190: invokevirtual #293                // Method okhttp3/OkHttpClient.authenticator:()Lokhttp3/Authenticator;
     193: aload_3
     194: aload_1
     195: invokeinterface #290,  3          // InterfaceMethod okhttp3/Authenticator.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
     200: areturn
     201: aload_0
     202: aload_1
     203: aload         5
     205: invokespecial #297                // Method buildRedirectRequest:(Lokhttp3/Response;Ljava/lang/String;)Lokhttp3/Request;
     208: areturn
     209: aload_0
     210: getfield      #202                // Field client:Lokhttp3/OkHttpClient;
     213: invokevirtual #207                // Method okhttp3/OkHttpClient.retryOnConnectionFailure:()Z
     216: ifne          221
     219: aconst_null
     220: areturn
     221: aload_1
     222: invokevirtual #253                // Method okhttp3/Response.request:()Lokhttp3/Request;
     225: invokevirtual #132                // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
     228: astore        6
     230: aload         6
     232: ifnull        245
     235: aload         6
     237: invokevirtual #137                // Method okhttp3/RequestBody.isOneShot:()Z
     240: ifeq          245
     243: aconst_null
     244: areturn
     245: aload_1
     246: invokevirtual #299                // Method okhttp3/Response.priorResponse:()Lokhttp3/Response;
     249: astore        7
     251: aload         7
     253: ifnull        269
     256: aload         7
     258: invokevirtual #251                // Method okhttp3/Response.code:()I
     261: sipush        408
     264: if_icmpne     269
     267: aconst_null
     268: areturn
     269: aload_0
     270: aload_1
     271: iconst_0
     272: invokespecial #303                // Method retryAfter:(Lokhttp3/Response;I)I
     275: ifle          280
     278: aconst_null
     279: areturn
     280: aload_1
     281: invokevirtual #253                // Method okhttp3/Response.request:()Lokhttp3/Request;
     284: areturn
     285: aload_1
     286: invokevirtual #299                // Method okhttp3/Response.priorResponse:()Lokhttp3/Response;
     289: astore        6
     291: aload         6
     293: ifnull        309
     296: aload         6
     298: invokevirtual #251                // Method okhttp3/Response.code:()I
     301: sipush        503
     304: if_icmpne     309
     307: aconst_null
     308: areturn
     309: aload_0
     310: aload_1
     311: ldc_w         #304                // int 2147483647
     314: invokespecial #303                // Method retryAfter:(Lokhttp3/Response;I)I
     317: ifne          325
     320: aload_1
     321: invokevirtual #253                // Method okhttp3/Response.request:()Lokhttp3/Request;
     324: areturn
     325: aconst_null
     326: areturn
     327: aload_1
     328: invokevirtual #253                // Method okhttp3/Response.request:()Lokhttp3/Request;
     331: invokevirtual #132                // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
     334: astore        6
     336: aload         6
     338: ifnull        351
     341: aload         6
     343: invokevirtual #137                // Method okhttp3/RequestBody.isOneShot:()Z
     346: ifeq          351
     349: aconst_null
     350: areturn
     351: aload_2
     352: ifnull        362
     355: aload_2
     356: invokevirtual #307                // Method okhttp3/internal/connection/Exchange.isCoalescedConnection$okhttp:()Z
     359: ifne          364
     362: aconst_null
     363: areturn
     364: aload_2
     365: invokevirtual #241                // Method okhttp3/internal/connection/Exchange.getConnection$okhttp:()Lokhttp3/internal/connection/RealConnection;
     368: invokevirtual #310                // Method okhttp3/internal/connection/RealConnection.noCoalescedConnections$okhttp:()V
     371: aload_1
     372: invokevirtual #253                // Method okhttp3/Response.request:()Lokhttp3/Request;
     375: areturn
     376: aconst_null
     377: areturn

  private final okhttp3.Request buildRedirectRequest(okhttp3.Response, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #202                // Field client:Lokhttp3/OkHttpClient;
       4: invokevirtual #321                // Method okhttp3/OkHttpClient.followRedirects:()Z
       7: ifne          12
      10: aconst_null
      11: areturn
      12: aload_1
      13: ldc_w         #323                // String Location
      16: aconst_null
      17: iconst_2
      18: aconst_null
      19: invokestatic  #327                // Method okhttp3/Response.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
      22: dup
      23: ifnull        29
      26: goto          32
      29: pop
      30: aconst_null
      31: areturn
      32: astore_3
      33: aload_1
      34: invokevirtual #253                // Method okhttp3/Response.request:()Lokhttp3/Request;
      37: invokevirtual #331                // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      40: aload_3
      41: invokevirtual #337                // Method okhttp3/HttpUrl.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;
      44: dup
      45: ifnull        51
      48: goto          54
      51: pop
      52: aconst_null
      53: areturn
      54: astore        4
      56: aload         4
      58: invokevirtual #340                // Method okhttp3/HttpUrl.scheme:()Ljava/lang/String;
      61: aload_1
      62: invokevirtual #253                // Method okhttp3/Response.request:()Lokhttp3/Request;
      65: invokevirtual #331                // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      68: invokevirtual #340                // Method okhttp3/HttpUrl.scheme:()Ljava/lang/String;
      71: invokestatic  #344                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      74: istore        5
      76: iload         5
      78: ifne          93
      81: aload_0
      82: getfield      #202                // Field client:Lokhttp3/OkHttpClient;
      85: invokevirtual #347                // Method okhttp3/OkHttpClient.followSslRedirects:()Z
      88: ifne          93
      91: aconst_null
      92: areturn
      93: aload_1
      94: invokevirtual #253                // Method okhttp3/Response.request:()Lokhttp3/Request;
      97: invokevirtual #350                // Method okhttp3/Request.newBuilder:()Lokhttp3/Request$Builder;
     100: astore        6
     102: aload_2
     103: invokestatic  #356                // Method okhttp3/internal/http/HttpMethod.permitsRequestBody:(Ljava/lang/String;)Z
     106: ifeq          246
     109: aload_1
     110: invokevirtual #251                // Method okhttp3/Response.code:()I
     113: istore        7
     115: getstatic     #360                // Field okhttp3/internal/http/HttpMethod.INSTANCE:Lokhttp3/internal/http/HttpMethod;
     118: aload_2
     119: invokevirtual #363                // Method okhttp3/internal/http/HttpMethod.redirectsWithBody:(Ljava/lang/String;)Z
     122: ifne          141
     125: iload         7
     127: sipush        308
     130: if_icmpeq     141
     133: iload         7
     135: sipush        307
     138: if_icmpne     145
     141: iconst_1
     142: goto          146
     145: iconst_0
     146: istore        8
     148: getstatic     #360                // Field okhttp3/internal/http/HttpMethod.INSTANCE:Lokhttp3/internal/http/HttpMethod;
     151: aload_2
     152: invokevirtual #366                // Method okhttp3/internal/http/HttpMethod.redirectsToGet:(Ljava/lang/String;)Z
     155: ifeq          187
     158: iload         7
     160: sipush        308
     163: if_icmpeq     187
     166: iload         7
     168: sipush        307
     171: if_icmpeq     187
     174: aload         6
     176: ldc_w         #368                // String GET
     179: aconst_null
     180: invokevirtual #373                // Method okhttp3/Request$Builder.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
     183: pop
     184: goto          214
     187: iload         8
     189: ifeq          202
     192: aload_1
     193: invokevirtual #253                // Method okhttp3/Response.request:()Lokhttp3/Request;
     196: invokevirtual #132                // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
     199: goto          203
     202: aconst_null
     203: astore        9
     205: aload         6
     207: aload_2
     208: aload         9
     210: invokevirtual #373                // Method okhttp3/Request$Builder.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
     213: pop
     214: iload         8
     216: ifne          246
     219: aload         6
     221: ldc_w         #375                // String Transfer-Encoding
     224: invokevirtual #379                // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     227: pop
     228: aload         6
     230: ldc_w         #381                // String Content-Length
     233: invokevirtual #379                // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     236: pop
     237: aload         6
     239: ldc_w         #383                // String Content-Type
     242: invokevirtual #379                // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     245: pop
     246: aload_1
     247: invokevirtual #253                // Method okhttp3/Response.request:()Lokhttp3/Request;
     250: invokevirtual #331                // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     253: aload         4
     255: invokestatic  #387                // Method okhttp3/internal/Util.canReuseConnectionFor:(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z
     258: ifne          270
     261: aload         6
     263: ldc_w         #389                // String Authorization
     266: invokevirtual #379                // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     269: pop
     270: aload         6
     272: aload         4
     274: invokevirtual #392                // Method okhttp3/Request$Builder.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;
     277: invokevirtual #394                // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
     280: areturn

  private final int retryAfter(okhttp3.Response, int);
    Code:
       0: aload_1
       1: ldc_w         #402                // String Retry-After
       4: aconst_null
       5: iconst_2
       6: aconst_null
       7: invokestatic  #327                // Method okhttp3/Response.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
      10: dup
      11: ifnull        17
      14: goto          20
      17: pop
      18: iload_2
      19: ireturn
      20: astore_3
      21: aload_3
      22: checkcast     #404                // class java/lang/CharSequence
      25: astore        4
      27: ldc_w         #406                // String \\d+
      30: astore        5
      32: iconst_0
      33: istore        6
      35: new           #408                // class kotlin/text/Regex
      38: dup
      39: aload         5
      41: invokespecial #409                // Method kotlin/text/Regex."<init>":(Ljava/lang/String;)V
      44: astore        5
      46: iconst_0
      47: istore        6
      49: aload         5
      51: aload         4
      53: invokevirtual #413                // Method kotlin/text/Regex.matches:(Ljava/lang/CharSequence;)Z
      56: ifeq          74
      59: aload_3
      60: invokestatic  #419                // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      63: dup
      64: ldc_w         #421                // String Integer.valueOf(header)
      67: invokestatic  #424                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      70: invokevirtual #427                // Method java/lang/Integer.intValue:()I
      73: ireturn
      74: ldc_w         #304                // int 2147483647
      77: ireturn

  public okhttp3.internal.http.RetryAndFollowUpInterceptor(okhttp3.OkHttpClient);
    Code:
       0: aload_1
       1: ldc_w         #431                // String client
       4: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: invokespecial #432                // Method java/lang/Object."<init>":()V
      11: aload_0
      12: aload_1
      13: putfield      #202                // Field client:Lokhttp3/OkHttpClient;
      16: return

  static {};
    Code:
       0: new           #453                // class okhttp3/internal/http/RetryAndFollowUpInterceptor$Companion
       3: dup
       4: aconst_null
       5: invokespecial #456                // Method okhttp3/internal/http/RetryAndFollowUpInterceptor$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #458                // Field Companion:Lokhttp3/internal/http/RetryAndFollowUpInterceptor$Companion;
      11: return
}
