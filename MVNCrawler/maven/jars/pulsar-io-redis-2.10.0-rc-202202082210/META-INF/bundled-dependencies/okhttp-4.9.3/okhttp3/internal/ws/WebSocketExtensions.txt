Compiled from "WebSocketExtensions.kt"
public final class okhttp3.internal.ws.WebSocketExtensions {
  public final boolean perMessageDeflate;

  public final java.lang.Integer clientMaxWindowBits;

  public final boolean clientNoContextTakeover;

  public final java.lang.Integer serverMaxWindowBits;

  public final boolean serverNoContextTakeover;

  public final boolean unknownValues;

  private static final java.lang.String HEADER_WEB_SOCKET_EXTENSION;

  public static final okhttp3.internal.ws.WebSocketExtensions$Companion Companion;

  public final boolean noContextTakeover(boolean);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_0
       5: getfield      #10                 // Field clientNoContextTakeover:Z
       8: goto          15
      11: aload_0
      12: getfield      #13                 // Field serverNoContextTakeover:Z
      15: ireturn

  public okhttp3.internal.ws.WebSocketExtensions(boolean, java.lang.Integer, boolean, java.lang.Integer, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #30                 // Field perMessageDeflate:Z
       9: aload_0
      10: aload_2
      11: putfield      #32                 // Field clientMaxWindowBits:Ljava/lang/Integer;
      14: aload_0
      15: iload_3
      16: putfield      #10                 // Field clientNoContextTakeover:Z
      19: aload_0
      20: aload         4
      22: putfield      #34                 // Field serverMaxWindowBits:Ljava/lang/Integer;
      25: aload_0
      26: iload         5
      28: putfield      #13                 // Field serverNoContextTakeover:Z
      31: aload_0
      32: iload         6
      34: putfield      #36                 // Field unknownValues:Z
      37: return

  public okhttp3.internal.ws.WebSocketExtensions(boolean, java.lang.Integer, boolean, java.lang.Integer, boolean, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         7
       2: iconst_1
       3: iand
       4: ifeq          9
       7: iconst_0
       8: istore_1
       9: iload         7
      11: iconst_2
      12: iand
      13: ifeq          21
      16: aconst_null
      17: checkcast     #39                 // class java/lang/Integer
      20: astore_2
      21: iload         7
      23: iconst_4
      24: iand
      25: ifeq          30
      28: iconst_0
      29: istore_3
      30: iload         7
      32: bipush        8
      34: iand
      35: ifeq          44
      38: aconst_null
      39: checkcast     #39                 // class java/lang/Integer
      42: astore        4
      44: iload         7
      46: bipush        16
      48: iand
      49: ifeq          55
      52: iconst_0
      53: istore        5
      55: iload         7
      57: bipush        32
      59: iand
      60: ifeq          66
      63: iconst_0
      64: istore        6
      66: aload_0
      67: iload_1
      68: aload_2
      69: iload_3
      70: aload         4
      72: iload         5
      74: iload         6
      76: invokespecial #41                 // Method "<init>":(ZLjava/lang/Integer;ZLjava/lang/Integer;ZZ)V
      79: return

  public okhttp3.internal.ws.WebSocketExtensions();
    Code:
       0: aload_0
       1: iconst_0
       2: aconst_null
       3: iconst_0
       4: aconst_null
       5: iconst_0
       6: iconst_0
       7: bipush        63
       9: aconst_null
      10: invokespecial #43                 // Method "<init>":(ZLjava/lang/Integer;ZLjava/lang/Integer;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
      13: return

  static {};
    Code:
       0: new           #124                // class okhttp3/internal/ws/WebSocketExtensions$Companion
       3: dup
       4: aconst_null
       5: invokespecial #127                // Method okhttp3/internal/ws/WebSocketExtensions$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #129                // Field Companion:Lokhttp3/internal/ws/WebSocketExtensions$Companion;
      11: return

  public final boolean component1();
    Code:
       0: aload_0
       1: getfield      #30                 // Field perMessageDeflate:Z
       4: ireturn

  public final java.lang.Integer component2();
    Code:
       0: aload_0
       1: getfield      #32                 // Field clientMaxWindowBits:Ljava/lang/Integer;
       4: areturn

  public final boolean component3();
    Code:
       0: aload_0
       1: getfield      #10                 // Field clientNoContextTakeover:Z
       4: ireturn

  public final java.lang.Integer component4();
    Code:
       0: aload_0
       1: getfield      #34                 // Field serverMaxWindowBits:Ljava/lang/Integer;
       4: areturn

  public final boolean component5();
    Code:
       0: aload_0
       1: getfield      #13                 // Field serverNoContextTakeover:Z
       4: ireturn

  public final boolean component6();
    Code:
       0: aload_0
       1: getfield      #36                 // Field unknownValues:Z
       4: ireturn

  public final okhttp3.internal.ws.WebSocketExtensions copy(boolean, java.lang.Integer, boolean, java.lang.Integer, boolean, boolean);
    Code:
       0: new           #2                  // class okhttp3/internal/ws/WebSocketExtensions
       3: dup
       4: iload_1
       5: aload_2
       6: iload_3
       7: aload         4
       9: iload         5
      11: iload         6
      13: invokespecial #41                 // Method "<init>":(ZLjava/lang/Integer;ZLjava/lang/Integer;ZZ)V
      16: areturn

  public static okhttp3.internal.ws.WebSocketExtensions copy$default(okhttp3.internal.ws.WebSocketExtensions, boolean, java.lang.Integer, boolean, java.lang.Integer, boolean, boolean, int, java.lang.Object);
    Code:
       0: iload         7
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: getfield      #30                 // Field perMessageDeflate:Z
      11: istore_1
      12: iload         7
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: getfield      #32                 // Field clientMaxWindowBits:Ljava/lang/Integer;
      23: astore_2
      24: iload         7
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: getfield      #10                 // Field clientNoContextTakeover:Z
      35: istore_3
      36: iload         7
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: getfield      #34                 // Field serverMaxWindowBits:Ljava/lang/Integer;
      48: astore        4
      50: iload         7
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: getfield      #13                 // Field serverNoContextTakeover:Z
      62: istore        5
      64: iload         7
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: getfield      #36                 // Field unknownValues:Z
      76: istore        6
      78: aload_0
      79: iload_1
      80: aload_2
      81: iload_3
      82: aload         4
      84: iload         5
      86: iload         6
      88: invokevirtual #65                 // Method copy:(ZLjava/lang/Integer;ZLjava/lang/Integer;ZZ)Lokhttp3/internal/ws/WebSocketExtensions;
      91: areturn

  public java.lang.String toString();
    Code:
       0: new           #69                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #72                 // String WebSocketExtensions(perMessageDeflate=
       9: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #30                 // Field perMessageDeflate:Z
      16: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      19: ldc           #81                 // String , clientMaxWindowBits=
      21: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #32                 // Field clientMaxWindowBits:Ljava/lang/Integer;
      28: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #86                 // String , clientNoContextTakeover=
      33: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #10                 // Field clientNoContextTakeover:Z
      40: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      43: ldc           #88                 // String , serverMaxWindowBits=
      45: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #34                 // Field serverMaxWindowBits:Ljava/lang/Integer;
      52: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #90                 // String , serverNoContextTakeover=
      57: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #13                 // Field serverNoContextTakeover:Z
      64: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      67: ldc           #92                 // String , unknownValues=
      69: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #36                 // Field unknownValues:Z
      76: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      79: ldc           #94                 // String )
      81: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #30                 // Field perMessageDeflate:Z
       4: dup
       5: ifeq          10
       8: pop
       9: iconst_1
      10: bipush        31
      12: imul
      13: aload_0
      14: getfield      #32                 // Field clientMaxWindowBits:Ljava/lang/Integer;
      17: dup
      18: ifnull        27
      21: invokevirtual #100                // Method java/lang/Object.hashCode:()I
      24: goto          29
      27: pop
      28: iconst_0
      29: iadd
      30: bipush        31
      32: imul
      33: aload_0
      34: getfield      #10                 // Field clientNoContextTakeover:Z
      37: dup
      38: ifeq          43
      41: pop
      42: iconst_1
      43: iadd
      44: bipush        31
      46: imul
      47: aload_0
      48: getfield      #34                 // Field serverMaxWindowBits:Ljava/lang/Integer;
      51: dup
      52: ifnull        61
      55: invokevirtual #100                // Method java/lang/Object.hashCode:()I
      58: goto          63
      61: pop
      62: iconst_0
      63: iadd
      64: bipush        31
      66: imul
      67: aload_0
      68: getfield      #13                 // Field serverNoContextTakeover:Z
      71: dup
      72: ifeq          77
      75: pop
      76: iconst_1
      77: iadd
      78: bipush        31
      80: imul
      81: aload_0
      82: getfield      #36                 // Field unknownValues:Z
      85: dup
      86: ifeq          91
      89: pop
      90: iconst_1
      91: iadd
      92: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     89
       5: aload_1
       6: instanceof    #2                  // class okhttp3/internal/ws/WebSocketExtensions
       9: ifeq          91
      12: aload_1
      13: checkcast     #2                  // class okhttp3/internal/ws/WebSocketExtensions
      16: astore_2
      17: aload_0
      18: getfield      #30                 // Field perMessageDeflate:Z
      21: aload_2
      22: getfield      #30                 // Field perMessageDeflate:Z
      25: if_icmpne     91
      28: aload_0
      29: getfield      #32                 // Field clientMaxWindowBits:Ljava/lang/Integer;
      32: aload_2
      33: getfield      #32                 // Field clientMaxWindowBits:Ljava/lang/Integer;
      36: invokestatic  #108                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          91
      42: aload_0
      43: getfield      #10                 // Field clientNoContextTakeover:Z
      46: aload_2
      47: getfield      #10                 // Field clientNoContextTakeover:Z
      50: if_icmpne     91
      53: aload_0
      54: getfield      #34                 // Field serverMaxWindowBits:Ljava/lang/Integer;
      57: aload_2
      58: getfield      #34                 // Field serverMaxWindowBits:Ljava/lang/Integer;
      61: invokestatic  #108                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifeq          91
      67: aload_0
      68: getfield      #13                 // Field serverNoContextTakeover:Z
      71: aload_2
      72: getfield      #13                 // Field serverNoContextTakeover:Z
      75: if_icmpne     91
      78: aload_0
      79: getfield      #36                 // Field unknownValues:Z
      82: aload_2
      83: getfield      #36                 // Field unknownValues:Z
      86: if_icmpne     91
      89: iconst_1
      90: ireturn
      91: iconst_0
      92: ireturn
}
