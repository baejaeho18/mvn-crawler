Compiled from "Http2Stream.kt"
public final class okhttp3.internal.http2.Http2Stream$FramingSink implements okio.Sink {
  private final okio.Buffer sendBuffer;

  private okhttp3.Headers trailers;

  private boolean closed;

  private boolean finished;

  final okhttp3.internal.http2.Http2Stream this$0;

  public final okhttp3.Headers getTrailers();
    Code:
       0: aload_0
       1: getfield      #15                 // Field trailers:Lokhttp3/Headers;
       4: areturn

  public final void setTrailers(okhttp3.Headers);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field trailers:Lokhttp3/Headers;
       5: return

  public final boolean getClosed();
    Code:
       0: aload_0
       1: getfield      #26                 // Field closed:Z
       4: ireturn

  public final void setClosed(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field closed:Z
       5: return

  public void write(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #35                 // String source
       3: invokestatic  #41                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      10: astore        4
      12: iconst_0
      13: istore        5
      15: getstatic     #50                 // Field okhttp3/internal/Util.assertionsEnabled:Z
      18: ifeq          80
      21: aload         4
      23: invokestatic  #56                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      26: ifeq          80
      29: new           #58                 // class java/lang/AssertionError
      32: dup
      33: new           #60                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #66                 // String Thread
      42: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokestatic  #74                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      48: dup
      49: ldc           #76                 // String Thread.currentThread()
      51: invokestatic  #79                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      54: invokevirtual #83                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      57: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #85                 // String  MUST NOT hold lock on
      62: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload         4
      67: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      70: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #94                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      76: checkcast     #96                 // class java/lang/Throwable
      79: athrow
      80: nop
      81: aload_0
      82: getfield      #98                 // Field sendBuffer:Lokio/Buffer;
      85: aload_1
      86: lload_2
      87: invokevirtual #102                // Method okio/Buffer.write:(Lokio/Buffer;J)V
      90: aload_0
      91: getfield      #98                 // Field sendBuffer:Lokio/Buffer;
      94: invokevirtual #106                // Method okio/Buffer.size:()J
      97: ldc2_w        #107                // long 16384l
     100: lcmp
     101: iflt          112
     104: aload_0
     105: iconst_0
     106: invokespecial #111                // Method emitFrame:(Z)V
     109: goto          90
     112: return

  private final void emitFrame(boolean) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_2
       2: iconst_0
       3: istore        4
       5: aload_0
       6: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       9: astore        5
      11: iconst_0
      12: istore        6
      14: iconst_0
      15: istore        7
      17: aload         5
      19: monitorenter
      20: nop
      21: iconst_0
      22: istore        8
      24: aload_0
      25: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      28: invokevirtual #123                // Method okhttp3/internal/http2/Http2Stream.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
      31: invokevirtual #128                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.enter:()V
      34: nop
      35: aload_0
      36: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      39: invokevirtual #131                // Method okhttp3/internal/http2/Http2Stream.getWriteBytesTotal:()J
      42: aload_0
      43: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      46: invokevirtual #134                // Method okhttp3/internal/http2/Http2Stream.getWriteBytesMaximum:()J
      49: lcmp
      50: iflt          87
      53: aload_0
      54: getfield      #137                // Field finished:Z
      57: ifne          87
      60: aload_0
      61: getfield      #26                 // Field closed:Z
      64: ifne          87
      67: aload_0
      68: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      71: invokevirtual #141                // Method okhttp3/internal/http2/Http2Stream.getErrorCode$okhttp:()Lokhttp3/internal/http2/ErrorCode;
      74: ifnonnull     87
      77: aload_0
      78: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      81: invokevirtual #144                // Method okhttp3/internal/http2/Http2Stream.waitForIo$okhttp:()V
      84: goto          35
      87: aload_0
      88: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      91: invokevirtual #123                // Method okhttp3/internal/http2/Http2Stream.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
      94: invokevirtual #147                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
      97: goto          115
     100: astore        9
     102: aload_0
     103: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     106: invokevirtual #123                // Method okhttp3/internal/http2/Http2Stream.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     109: invokevirtual #147                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
     112: aload         9
     114: athrow
     115: aload_0
     116: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     119: invokevirtual #150                // Method okhttp3/internal/http2/Http2Stream.checkOutNotClosed$okhttp:()V
     122: aload_0
     123: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     126: invokevirtual #134                // Method okhttp3/internal/http2/Http2Stream.getWriteBytesMaximum:()J
     129: aload_0
     130: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     133: invokevirtual #131                // Method okhttp3/internal/http2/Http2Stream.getWriteBytesTotal:()J
     136: lsub
     137: lstore        10
     139: aload_0
     140: getfield      #98                 // Field sendBuffer:Lokio/Buffer;
     143: invokevirtual #106                // Method okio/Buffer.size:()J
     146: lstore        12
     148: iconst_0
     149: istore        14
     151: lload         10
     153: lload         12
     155: invokestatic  #156                // Method java/lang/Math.min:(JJ)J
     158: lstore_2
     159: aload_0
     160: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     163: dup
     164: invokevirtual #131                // Method okhttp3/internal/http2/Http2Stream.getWriteBytesTotal:()J
     167: lload_2
     168: ladd
     169: invokevirtual #160                // Method okhttp3/internal/http2/Http2Stream.setWriteBytesTotal$okhttp:(J)V
     172: iload_1
     173: ifeq          192
     176: lload_2
     177: aload_0
     178: getfield      #98                 // Field sendBuffer:Lokio/Buffer;
     181: invokevirtual #106                // Method okio/Buffer.size:()J
     184: lcmp
     185: ifne          192
     188: iconst_1
     189: goto          193
     192: iconst_0
     193: istore        4
     195: getstatic     #166                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     198: astore        7
     200: aload         5
     202: monitorexit
     203: goto          214
     206: astore        7
     208: aload         5
     210: monitorexit
     211: aload         7
     213: athrow
     214: aload_0
     215: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     218: invokevirtual #123                // Method okhttp3/internal/http2/Http2Stream.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     221: invokevirtual #128                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.enter:()V
     224: nop
     225: aload_0
     226: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     229: invokevirtual #170                // Method okhttp3/internal/http2/Http2Stream.getConnection:()Lokhttp3/internal/http2/Http2Connection;
     232: aload_0
     233: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     236: invokevirtual #174                // Method okhttp3/internal/http2/Http2Stream.getId:()I
     239: iload         4
     241: aload_0
     242: getfield      #98                 // Field sendBuffer:Lokio/Buffer;
     245: lload_2
     246: invokevirtual #180                // Method okhttp3/internal/http2/Http2Connection.writeData:(IZLokio/Buffer;J)V
     249: aload_0
     250: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     253: invokevirtual #123                // Method okhttp3/internal/http2/Http2Stream.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     256: invokevirtual #147                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
     259: goto          277
     262: astore        5
     264: aload_0
     265: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     268: invokevirtual #123                // Method okhttp3/internal/http2/Http2Stream.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     271: invokevirtual #147                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
     274: aload         5
     276: athrow
     277: return
    Exception table:
       from    to  target type
          34    87   100   any
         100   102   100   any
          20   200   206   any
         206   208   206   any
         224   249   262   any
         262   264   262   any

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: getstatic     #50                 // Field okhttp3/internal/Util.assertionsEnabled:Z
      10: ifeq          70
      13: aload_1
      14: invokestatic  #56                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      17: ifeq          70
      20: new           #58                 // class java/lang/AssertionError
      23: dup
      24: new           #60                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #66                 // String Thread
      33: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokestatic  #74                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      39: dup
      40: ldc           #76                 // String Thread.currentThread()
      42: invokestatic  #79                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      45: invokevirtual #83                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      48: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #85                 // String  MUST NOT hold lock on
      53: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_1
      57: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #94                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      66: checkcast     #96                 // class java/lang/Throwable
      69: athrow
      70: nop
      71: aload_0
      72: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      75: astore_1
      76: iconst_0
      77: istore_2
      78: iconst_0
      79: istore_3
      80: aload_1
      81: monitorenter
      82: nop
      83: iconst_0
      84: istore        4
      86: aload_0
      87: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      90: invokevirtual #150                // Method okhttp3/internal/http2/Http2Stream.checkOutNotClosed$okhttp:()V
      93: getstatic     #166                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      96: astore_3
      97: aload_1
      98: monitorexit
      99: goto          107
     102: astore_3
     103: aload_1
     104: monitorexit
     105: aload_3
     106: athrow
     107: aload_0
     108: getfield      #98                 // Field sendBuffer:Lokio/Buffer;
     111: invokevirtual #106                // Method okio/Buffer.size:()J
     114: lconst_0
     115: lcmp
     116: ifle          137
     119: aload_0
     120: iconst_0
     121: invokespecial #111                // Method emitFrame:(Z)V
     124: aload_0
     125: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     128: invokevirtual #170                // Method okhttp3/internal/http2/Http2Stream.getConnection:()Lokhttp3/internal/http2/Http2Connection;
     131: invokevirtual #187                // Method okhttp3/internal/http2/Http2Connection.flush:()V
     134: goto          107
     137: return
    Exception table:
       from    to  target type
          82    97   102   any
         102   103   102   any

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       4: invokevirtual #123                // Method okhttp3/internal/http2/Http2Stream.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
       7: checkcast     #192                // class okio/Timeout
      10: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: getstatic     #50                 // Field okhttp3/internal/Util.assertionsEnabled:Z
      10: ifeq          70
      13: aload_1
      14: invokestatic  #56                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      17: ifeq          70
      20: new           #58                 // class java/lang/AssertionError
      23: dup
      24: new           #60                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #66                 // String Thread
      33: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokestatic  #74                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      39: dup
      40: ldc           #76                 // String Thread.currentThread()
      42: invokestatic  #79                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      45: invokevirtual #83                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      48: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #85                 // String  MUST NOT hold lock on
      53: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_1
      57: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #94                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      66: checkcast     #96                 // class java/lang/Throwable
      69: athrow
      70: nop
      71: iconst_0
      72: istore_1
      73: aload_0
      74: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      77: astore_2
      78: iconst_0
      79: istore_3
      80: iconst_0
      81: istore        4
      83: aload_2
      84: monitorenter
      85: nop
      86: iconst_0
      87: istore        5
      89: aload_0
      90: getfield      #26                 // Field closed:Z
      93: ifeq          99
      96: aload_2
      97: monitorexit
      98: return
      99: aload_0
     100: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     103: invokevirtual #141                // Method okhttp3/internal/http2/Http2Stream.getErrorCode$okhttp:()Lokhttp3/internal/http2/ErrorCode;
     106: ifnonnull     113
     109: iconst_1
     110: goto          114
     113: iconst_0
     114: istore_1
     115: getstatic     #166                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     118: astore        4
     120: aload_2
     121: monitorexit
     122: goto          132
     125: astore        4
     127: aload_2
     128: monitorexit
     129: aload         4
     131: athrow
     132: aload_0
     133: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     136: invokevirtual #197                // Method okhttp3/internal/http2/Http2Stream.getSink$okhttp:()Lokhttp3/internal/http2/Http2Stream$FramingSink;
     139: getfield      #137                // Field finished:Z
     142: ifne          284
     145: aload_0
     146: getfield      #98                 // Field sendBuffer:Lokio/Buffer;
     149: invokevirtual #106                // Method okio/Buffer.size:()J
     152: lconst_0
     153: lcmp
     154: ifle          161
     157: iconst_1
     158: goto          162
     161: iconst_0
     162: istore_2
     163: aload_0
     164: getfield      #15                 // Field trailers:Lokhttp3/Headers;
     167: ifnull        174
     170: iconst_1
     171: goto          175
     174: iconst_0
     175: istore_3
     176: nop
     177: iload_3
     178: ifeq          233
     181: aload_0
     182: getfield      #98                 // Field sendBuffer:Lokio/Buffer;
     185: invokevirtual #106                // Method okio/Buffer.size:()J
     188: lconst_0
     189: lcmp
     190: ifle          201
     193: aload_0
     194: iconst_0
     195: invokespecial #111                // Method emitFrame:(Z)V
     198: goto          181
     201: aload_0
     202: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     205: invokevirtual #170                // Method okhttp3/internal/http2/Http2Stream.getConnection:()Lokhttp3/internal/http2/Http2Connection;
     208: aload_0
     209: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     212: invokevirtual #174                // Method okhttp3/internal/http2/Http2Stream.getId:()I
     215: iload_1
     216: aload_0
     217: getfield      #15                 // Field trailers:Lokhttp3/Headers;
     220: dup
     221: invokestatic  #200                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     224: invokestatic  #204                // Method okhttp3/internal/Util.toHeaderList:(Lokhttp3/Headers;)Ljava/util/List;
     227: invokevirtual #208                // Method okhttp3/internal/http2/Http2Connection.writeHeaders$okhttp:(IZLjava/util/List;)V
     230: goto          284
     233: iload_2
     234: ifeq          257
     237: aload_0
     238: getfield      #98                 // Field sendBuffer:Lokio/Buffer;
     241: invokevirtual #106                // Method okio/Buffer.size:()J
     244: lconst_0
     245: lcmp
     246: ifle          284
     249: aload_0
     250: iconst_1
     251: invokespecial #111                // Method emitFrame:(Z)V
     254: goto          237
     257: iload_1
     258: ifeq          284
     261: aload_0
     262: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     265: invokevirtual #170                // Method okhttp3/internal/http2/Http2Stream.getConnection:()Lokhttp3/internal/http2/Http2Connection;
     268: aload_0
     269: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     272: invokevirtual #174                // Method okhttp3/internal/http2/Http2Stream.getId:()I
     275: iconst_1
     276: aconst_null
     277: lconst_0
     278: invokevirtual #180                // Method okhttp3/internal/http2/Http2Connection.writeData:(IZLokio/Buffer;J)V
     281: goto          284
     284: aload_0
     285: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     288: astore_2
     289: iconst_0
     290: istore_3
     291: iconst_0
     292: istore        4
     294: aload_2
     295: monitorenter
     296: nop
     297: iconst_0
     298: istore        5
     300: aload_0
     301: iconst_1
     302: putfield      #26                 // Field closed:Z
     305: getstatic     #166                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     308: astore        4
     310: aload_2
     311: monitorexit
     312: goto          322
     315: astore        4
     317: aload_2
     318: monitorexit
     319: aload         4
     321: athrow
     322: aload_0
     323: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     326: invokevirtual #170                // Method okhttp3/internal/http2/Http2Stream.getConnection:()Lokhttp3/internal/http2/Http2Connection;
     329: invokevirtual #187                // Method okhttp3/internal/http2/Http2Connection.flush:()V
     332: aload_0
     333: getfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     336: invokevirtual #211                // Method okhttp3/internal/http2/Http2Stream.cancelStreamIfNecessary$okhttp:()V
     339: return
    Exception table:
       from    to  target type
          85    96   125   any
          99   120   125   any
         125   127   125   any
         296   310   315   any
         315   317   315   any

  public final boolean getFinished();
    Code:
       0: aload_0
       1: getfield      #137                // Field finished:Z
       4: ireturn

  public final void setFinished(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #137                // Field finished:Z
       5: return

  public okhttp3.internal.http2.Http2Stream$FramingSink(boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       5: aload_0
       6: invokespecial #219                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iload_2
      11: putfield      #137                // Field finished:Z
      14: aload_0
      15: new           #100                // class okio/Buffer
      18: dup
      19: invokespecial #220                // Method okio/Buffer."<init>":()V
      22: putfield      #98                 // Field sendBuffer:Lokio/Buffer;
      25: return

  public okhttp3.internal.http2.Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          8
       6: iconst_0
       7: istore_2
       8: aload_0
       9: aload_1
      10: iload_2
      11: invokespecial #223                // Method "<init>":(Lokhttp3/internal/http2/Http2Stream;Z)V
      14: return
}
