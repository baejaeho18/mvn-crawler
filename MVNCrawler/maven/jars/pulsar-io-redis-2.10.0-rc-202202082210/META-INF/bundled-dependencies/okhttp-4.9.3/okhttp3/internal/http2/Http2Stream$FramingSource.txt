Compiled from "Http2Stream.kt"
public final class okhttp3.internal.http2.Http2Stream$FramingSource implements okio.Source {
  private final okio.Buffer receiveBuffer;

  private final okio.Buffer readBuffer;

  private okhttp3.Headers trailers;

  private boolean closed;

  private final long maxByteCount;

  private boolean finished;

  final okhttp3.internal.http2.Http2Stream this$0;

  public final okio.Buffer getReceiveBuffer();
    Code:
       0: aload_0
       1: getfield      #13                 // Field receiveBuffer:Lokio/Buffer;
       4: areturn

  public final okio.Buffer getReadBuffer();
    Code:
       0: aload_0
       1: getfield      #19                 // Field readBuffer:Lokio/Buffer;
       4: areturn

  public final okhttp3.Headers getTrailers();
    Code:
       0: aload_0
       1: getfield      #26                 // Field trailers:Lokhttp3/Headers;
       4: areturn

  public final void setTrailers(okhttp3.Headers);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field trailers:Lokhttp3/Headers;
       5: return

  public final boolean getClosed$okhttp();
    Code:
       0: aload_0
       1: getfield      #35                 // Field closed:Z
       4: ireturn

  public final void setClosed$okhttp(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field closed:Z
       5: return

  public long read(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #43                 // String sink
       3: invokestatic  #49                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: lload_2
       7: lconst_0
       8: lcmp
       9: iflt          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: istore        4
      19: iconst_0
      20: istore        5
      22: iconst_0
      23: istore        6
      25: iload         4
      27: ifne          70
      30: iconst_0
      31: istore        7
      33: new           #51                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #57                 // String byteCount < 0:
      42: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: lload_2
      46: invokevirtual #64                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      49: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: astore        6
      54: new           #70                 // class java/lang/IllegalArgumentException
      57: dup
      58: aload         6
      60: invokevirtual #71                 // Method java/lang/Object.toString:()Ljava/lang/String;
      63: invokespecial #74                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: checkcast     #76                 // class java/lang/Throwable
      69: athrow
      70: nop
      71: iconst_0
      72: istore        4
      74: ldc2_w        #77                 // long -1l
      77: lstore        17
      79: aconst_null
      80: checkcast     #41                 // class java/io/IOException
      83: astore        6
      85: aload_0
      86: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      89: astore        7
      91: iconst_0
      92: istore        8
      94: iconst_0
      95: istore        9
      97: aload         7
      99: monitorenter
     100: nop
     101: iconst_0
     102: istore        10
     104: aload_0
     105: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     108: invokevirtual #88                 // Method okhttp3/internal/http2/Http2Stream.getReadTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     111: invokevirtual #93                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.enter:()V
     114: nop
     115: aload_0
     116: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     119: invokevirtual #97                 // Method okhttp3/internal/http2/Http2Stream.getErrorCode$okhttp:()Lokhttp3/internal/http2/ErrorCode;
     122: ifnull        163
     125: aload_0
     126: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     129: invokevirtual #101                // Method okhttp3/internal/http2/Http2Stream.getErrorException$okhttp:()Ljava/io/IOException;
     132: dup
     133: ifnull        139
     136: goto          161
     139: pop
     140: new           #103                // class okhttp3/internal/http2/StreamResetException
     143: dup
     144: aload_0
     145: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     148: invokevirtual #97                 // Method okhttp3/internal/http2/Http2Stream.getErrorCode$okhttp:()Lokhttp3/internal/http2/ErrorCode;
     151: dup
     152: invokestatic  #107                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     155: invokespecial #110                // Method okhttp3/internal/http2/StreamResetException."<init>":(Lokhttp3/internal/http2/ErrorCode;)V
     158: checkcast     #41                 // class java/io/IOException
     161: astore        6
     163: aload_0
     164: getfield      #35                 // Field closed:Z
     167: ifeq          183
     170: new           #41                 // class java/io/IOException
     173: dup
     174: ldc           #112                // String stream closed
     176: invokespecial #113                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     179: checkcast     #76                 // class java/lang/Throwable
     182: athrow
     183: aload_0
     184: getfield      #19                 // Field readBuffer:Lokio/Buffer;
     187: invokevirtual #119                // Method okio/Buffer.size:()J
     190: lconst_0
     191: lcmp
     192: ifle          321
     195: aload_0
     196: getfield      #19                 // Field readBuffer:Lokio/Buffer;
     199: aload_1
     200: lload_2
     201: lstore        11
     203: aload_0
     204: getfield      #19                 // Field readBuffer:Lokio/Buffer;
     207: invokevirtual #119                // Method okio/Buffer.size:()J
     210: lstore        13
     212: iconst_0
     213: istore        15
     215: lload         11
     217: lload         13
     219: invokestatic  #125                // Method java/lang/Math.min:(JJ)J
     222: invokevirtual #127                // Method okio/Buffer.read:(Lokio/Buffer;J)J
     225: lstore        17
     227: aload_0
     228: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     231: dup
     232: invokevirtual #130                // Method okhttp3/internal/http2/Http2Stream.getReadBytesTotal:()J
     235: lload         17
     237: ladd
     238: invokevirtual #134                // Method okhttp3/internal/http2/Http2Stream.setReadBytesTotal$okhttp:(J)V
     241: aload_0
     242: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     245: invokevirtual #130                // Method okhttp3/internal/http2/Http2Stream.getReadBytesTotal:()J
     248: aload_0
     249: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     252: invokevirtual #137                // Method okhttp3/internal/http2/Http2Stream.getReadBytesAcknowledged:()J
     255: lsub
     256: lstore        11
     258: aload         6
     260: ifnonnull     343
     263: lload         11
     265: aload_0
     266: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     269: invokevirtual #141                // Method okhttp3/internal/http2/Http2Stream.getConnection:()Lokhttp3/internal/http2/Http2Connection;
     272: invokevirtual #147                // Method okhttp3/internal/http2/Http2Connection.getOkHttpSettings:()Lokhttp3/internal/http2/Settings;
     275: invokevirtual #153                // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
     278: iconst_2
     279: idiv
     280: i2l
     281: lcmp
     282: iflt          343
     285: aload_0
     286: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     289: invokevirtual #141                // Method okhttp3/internal/http2/Http2Stream.getConnection:()Lokhttp3/internal/http2/Http2Connection;
     292: aload_0
     293: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     296: invokevirtual #156                // Method okhttp3/internal/http2/Http2Stream.getId:()I
     299: lload         11
     301: invokevirtual #160                // Method okhttp3/internal/http2/Http2Connection.writeWindowUpdateLater$okhttp:(IJ)V
     304: aload_0
     305: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     308: aload_0
     309: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     312: invokevirtual #130                // Method okhttp3/internal/http2/Http2Stream.getReadBytesTotal:()J
     315: invokevirtual #163                // Method okhttp3/internal/http2/Http2Stream.setReadBytesAcknowledged$okhttp:(J)V
     318: goto          343
     321: aload_0
     322: getfield      #166                // Field finished:Z
     325: ifne          343
     328: aload         6
     330: ifnonnull     343
     333: aload_0
     334: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     337: invokevirtual #169                // Method okhttp3/internal/http2/Http2Stream.waitForIo$okhttp:()V
     340: iconst_1
     341: istore        4
     343: aload_0
     344: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     347: invokevirtual #88                 // Method okhttp3/internal/http2/Http2Stream.getReadTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     350: invokevirtual #172                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
     353: goto          371
     356: astore        16
     358: aload_0
     359: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     362: invokevirtual #88                 // Method okhttp3/internal/http2/Http2Stream.getReadTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
     365: invokevirtual #172                // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
     368: aload         16
     370: athrow
     371: getstatic     #178                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     374: astore        9
     376: aload         7
     378: monitorexit
     379: goto          390
     382: astore        9
     384: aload         7
     386: monitorexit
     387: aload         9
     389: athrow
     390: iload         4
     392: ifeq          398
     395: goto          70
     398: lload         17
     400: ldc2_w        #77                 // long -1l
     403: lcmp
     404: ifeq          416
     407: aload_0
     408: lload         17
     410: invokespecial #181                // Method updateConnectionFlowControl:(J)V
     413: lload         17
     415: lreturn
     416: aload         6
     418: ifnull        431
     421: aload         6
     423: dup
     424: invokestatic  #107                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     427: checkcast     #76                 // class java/lang/Throwable
     430: athrow
     431: ldc2_w        #77                 // long -1l
     434: lreturn
    Exception table:
       from    to  target type
         114   343   356   any
         356   358   356   any
         100   376   382   any
         382   384   382   any

  private final void updateConnectionFlowControl(long);
    Code:
       0: aload_0
       1: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       4: astore_3
       5: iconst_0
       6: istore        4
       8: getstatic     #196                // Field okhttp3/internal/Util.assertionsEnabled:Z
      11: ifeq          71
      14: aload_3
      15: invokestatic  #202                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      18: ifeq          71
      21: new           #204                // class java/lang/AssertionError
      24: dup
      25: new           #51                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #206                // String Thread
      34: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokestatic  #210                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      40: dup
      41: ldc           #212                // String Thread.currentThread()
      43: invokestatic  #215                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      46: invokevirtual #218                // Method java/lang/Thread.getName:()Ljava/lang/String;
      49: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #220                // String  MUST NOT hold lock on
      54: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_3
      58: invokevirtual #223                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #225                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      67: checkcast     #76                 // class java/lang/Throwable
      70: athrow
      71: nop
      72: aload_0
      73: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      76: invokevirtual #141                // Method okhttp3/internal/http2/Http2Stream.getConnection:()Lokhttp3/internal/http2/Http2Connection;
      79: lload_1
      80: invokevirtual #228                // Method okhttp3/internal/http2/Http2Connection.updateConnectionFlowControl$okhttp:(J)V
      83: return

  public final void receive$okhttp(okio.BufferedSource, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #234                // String source
       3: invokestatic  #49                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      10: astore        4
      12: iconst_0
      13: istore        5
      15: getstatic     #196                // Field okhttp3/internal/Util.assertionsEnabled:Z
      18: ifeq          80
      21: aload         4
      23: invokestatic  #202                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      26: ifeq          80
      29: new           #204                // class java/lang/AssertionError
      32: dup
      33: new           #51                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #206                // String Thread
      42: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokestatic  #210                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      48: dup
      49: ldc           #212                // String Thread.currentThread()
      51: invokestatic  #215                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      54: invokevirtual #218                // Method java/lang/Thread.getName:()Ljava/lang/String;
      57: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #220                // String  MUST NOT hold lock on
      62: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload         4
      67: invokevirtual #223                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      70: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #225                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      76: checkcast     #76                 // class java/lang/Throwable
      79: athrow
      80: nop
      81: lload_2
      82: lstore        17
      84: lload         17
      86: lconst_0
      87: lcmp
      88: ifle          400
      91: iconst_0
      92: istore        5
      94: iconst_0
      95: istore        6
      97: aload_0
      98: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     101: astore        7
     103: iconst_0
     104: istore        8
     106: iconst_0
     107: istore        9
     109: aload         7
     111: monitorenter
     112: nop
     113: iconst_0
     114: istore        10
     116: aload_0
     117: getfield      #166                // Field finished:Z
     120: istore        5
     122: lload         17
     124: aload_0
     125: getfield      #19                 // Field readBuffer:Lokio/Buffer;
     128: invokevirtual #119                // Method okio/Buffer.size:()J
     131: ladd
     132: aload_0
     133: getfield      #237                // Field maxByteCount:J
     136: lcmp
     137: ifle          144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: istore        6
     147: getstatic     #178                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     150: astore        9
     152: aload         7
     154: monitorexit
     155: goto          166
     158: astore        9
     160: aload         7
     162: monitorexit
     163: aload         9
     165: athrow
     166: iload         6
     168: ifeq          190
     171: aload_1
     172: lload         17
     174: invokeinterface #242,  3          // InterfaceMethod okio/BufferedSource.skip:(J)V
     179: aload_0
     180: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     183: getstatic     #248                // Field okhttp3/internal/http2/ErrorCode.FLOW_CONTROL_ERROR:Lokhttp3/internal/http2/ErrorCode;
     186: invokevirtual #251                // Method okhttp3/internal/http2/Http2Stream.closeLater:(Lokhttp3/internal/http2/ErrorCode;)V
     189: return
     190: iload         5
     192: ifeq          204
     195: aload_1
     196: lload         17
     198: invokeinterface #242,  3          // InterfaceMethod okio/BufferedSource.skip:(J)V
     203: return
     204: aload_1
     205: aload_0
     206: getfield      #13                 // Field receiveBuffer:Lokio/Buffer;
     209: lload         17
     211: invokeinterface #252,  4          // InterfaceMethod okio/BufferedSource.read:(Lokio/Buffer;J)J
     216: lstore        7
     218: lload         7
     220: ldc2_w        #77                 // long -1l
     223: lcmp
     224: ifne          238
     227: new           #254                // class java/io/EOFException
     230: dup
     231: invokespecial #255                // Method java/io/EOFException."<init>":()V
     234: checkcast     #76                 // class java/lang/Throwable
     237: athrow
     238: lload         17
     240: lload         7
     242: lsub
     243: lstore        17
     245: lconst_0
     246: lstore        19
     248: aload_0
     249: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     252: astore        10
     254: iconst_0
     255: istore        11
     257: iconst_0
     258: istore        12
     260: aload         10
     262: monitorenter
     263: nop
     264: iconst_0
     265: istore        13
     267: aload_0
     268: getfield      #35                 // Field closed:Z
     271: ifeq          293
     274: aload_0
     275: getfield      #13                 // Field receiveBuffer:Lokio/Buffer;
     278: invokevirtual #119                // Method okio/Buffer.size:()J
     281: lstore        19
     283: aload_0
     284: getfield      #13                 // Field receiveBuffer:Lokio/Buffer;
     287: invokevirtual #258                // Method okio/Buffer.clear:()V
     290: goto          364
     293: aload_0
     294: getfield      #19                 // Field readBuffer:Lokio/Buffer;
     297: invokevirtual #119                // Method okio/Buffer.size:()J
     300: lconst_0
     301: lcmp
     302: ifne          309
     305: iconst_1
     306: goto          310
     309: iconst_0
     310: istore        14
     312: aload_0
     313: getfield      #19                 // Field readBuffer:Lokio/Buffer;
     316: aload_0
     317: getfield      #13                 // Field receiveBuffer:Lokio/Buffer;
     320: checkcast     #6                  // class okio/Source
     323: invokevirtual #262                // Method okio/Buffer.writeAll:(Lokio/Source;)J
     326: pop2
     327: iload         14
     329: ifeq          364
     332: aload_0
     333: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     336: astore        15
     338: iconst_0
     339: istore        16
     341: aload         15
     343: dup
     344: ifnonnull     358
     347: new           #264                // class java/lang/NullPointerException
     350: dup
     351: ldc_w         #266                // String null cannot be cast to non-null type java.lang.Object
     354: invokespecial #267                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     357: athrow
     358: checkcast     #4                  // class java/lang/Object
     361: invokevirtual #270                // Method java/lang/Object.notifyAll:()V
     364: nop
     365: getstatic     #178                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     368: astore        12
     370: aload         10
     372: monitorexit
     373: goto          384
     376: astore        12
     378: aload         10
     380: monitorexit
     381: aload         12
     383: athrow
     384: lload         19
     386: lconst_0
     387: lcmp
     388: ifle          397
     391: aload_0
     392: lload         19
     394: invokespecial #181                // Method updateConnectionFlowControl:(J)V
     397: goto          84
     400: return
    Exception table:
       from    to  target type
         112   152   158   any
         158   160   158   any
         263   370   376   any
         376   378   376   any

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       4: invokevirtual #88                 // Method okhttp3/internal/http2/Http2Stream.getReadTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
       7: checkcast     #282                // class okio/Timeout
      10: areturn

  public void close() throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       6: astore_3
       7: iconst_0
       8: istore        4
      10: iconst_0
      11: istore        5
      13: aload_3
      14: monitorenter
      15: nop
      16: iconst_0
      17: istore        6
      19: aload_0
      20: iconst_1
      21: putfield      #35                 // Field closed:Z
      24: aload_0
      25: getfield      #19                 // Field readBuffer:Lokio/Buffer;
      28: invokevirtual #119                // Method okio/Buffer.size:()J
      31: lstore_1
      32: aload_0
      33: getfield      #19                 // Field readBuffer:Lokio/Buffer;
      36: invokevirtual #258                // Method okio/Buffer.clear:()V
      39: aload_0
      40: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      43: astore        7
      45: iconst_0
      46: istore        8
      48: aload         7
      50: dup
      51: ifnonnull     65
      54: new           #264                // class java/lang/NullPointerException
      57: dup
      58: ldc_w         #266                // String null cannot be cast to non-null type java.lang.Object
      61: invokespecial #267                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: checkcast     #4                  // class java/lang/Object
      68: invokevirtual #270                // Method java/lang/Object.notifyAll:()V
      71: nop
      72: getstatic     #178                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      75: astore        5
      77: aload_3
      78: monitorexit
      79: goto          89
      82: astore        5
      84: aload_3
      85: monitorexit
      86: aload         5
      88: athrow
      89: lload_1
      90: lconst_0
      91: lcmp
      92: ifle          100
      95: aload_0
      96: lload_1
      97: invokespecial #181                // Method updateConnectionFlowControl:(J)V
     100: aload_0
     101: getfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     104: invokevirtual #286                // Method okhttp3/internal/http2/Http2Stream.cancelStreamIfNecessary$okhttp:()V
     107: return
    Exception table:
       from    to  target type
          15    77    82   any
          82    84    82   any

  public final boolean getFinished$okhttp();
    Code:
       0: aload_0
       1: getfield      #166                // Field finished:Z
       4: ireturn

  public final void setFinished$okhttp(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #166                // Field finished:Z
       5: return

  public okhttp3.internal.http2.Http2Stream$FramingSource(long, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #82                 // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       5: aload_0
       6: invokespecial #292                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: lload_2
      11: putfield      #237                // Field maxByteCount:J
      14: aload_0
      15: iload         4
      17: putfield      #166                // Field finished:Z
      20: aload_0
      21: new           #115                // class okio/Buffer
      24: dup
      25: invokespecial #293                // Method okio/Buffer."<init>":()V
      28: putfield      #13                 // Field receiveBuffer:Lokio/Buffer;
      31: aload_0
      32: new           #115                // class okio/Buffer
      35: dup
      36: invokespecial #293                // Method okio/Buffer."<init>":()V
      39: putfield      #19                 // Field readBuffer:Lokio/Buffer;
      42: return
}
