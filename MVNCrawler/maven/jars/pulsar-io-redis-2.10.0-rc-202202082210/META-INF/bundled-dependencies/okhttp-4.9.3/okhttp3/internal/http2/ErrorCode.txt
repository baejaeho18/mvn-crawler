Compiled from "ErrorCode.kt"
public final class okhttp3.internal.http2.ErrorCode extends java.lang.Enum<okhttp3.internal.http2.ErrorCode> {
  public static final okhttp3.internal.http2.ErrorCode NO_ERROR;

  public static final okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR;

  public static final okhttp3.internal.http2.ErrorCode INTERNAL_ERROR;

  public static final okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR;

  public static final okhttp3.internal.http2.ErrorCode SETTINGS_TIMEOUT;

  public static final okhttp3.internal.http2.ErrorCode STREAM_CLOSED;

  public static final okhttp3.internal.http2.ErrorCode FRAME_SIZE_ERROR;

  public static final okhttp3.internal.http2.ErrorCode REFUSED_STREAM;

  public static final okhttp3.internal.http2.ErrorCode CANCEL;

  public static final okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR;

  public static final okhttp3.internal.http2.ErrorCode CONNECT_ERROR;

  public static final okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM;

  public static final okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY;

  public static final okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED;

  private static final okhttp3.internal.http2.ErrorCode[] $VALUES;

  private final int httpCode;

  public static final okhttp3.internal.http2.ErrorCode$Companion Companion;

  static {};
    Code:
       0: bipush        14
       2: anewarray     #2                  // class okhttp3/internal/http2/ErrorCode
       5: dup
       6: dup
       7: iconst_0
       8: new           #2                  // class okhttp3/internal/http2/ErrorCode
      11: dup
      12: ldc           #70                 // String NO_ERROR
      14: iconst_0
      15: iconst_0
      16: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
      19: dup
      20: putstatic     #74                 // Field NO_ERROR:Lokhttp3/internal/http2/ErrorCode;
      23: aastore
      24: dup
      25: iconst_1
      26: new           #2                  // class okhttp3/internal/http2/ErrorCode
      29: dup
      30: ldc           #75                 // String PROTOCOL_ERROR
      32: iconst_1
      33: iconst_1
      34: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
      37: dup
      38: putstatic     #77                 // Field PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
      41: aastore
      42: dup
      43: iconst_2
      44: new           #2                  // class okhttp3/internal/http2/ErrorCode
      47: dup
      48: ldc           #78                 // String INTERNAL_ERROR
      50: iconst_2
      51: iconst_2
      52: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
      55: dup
      56: putstatic     #80                 // Field INTERNAL_ERROR:Lokhttp3/internal/http2/ErrorCode;
      59: aastore
      60: dup
      61: iconst_3
      62: new           #2                  // class okhttp3/internal/http2/ErrorCode
      65: dup
      66: ldc           #81                 // String FLOW_CONTROL_ERROR
      68: iconst_3
      69: iconst_3
      70: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
      73: dup
      74: putstatic     #83                 // Field FLOW_CONTROL_ERROR:Lokhttp3/internal/http2/ErrorCode;
      77: aastore
      78: dup
      79: iconst_4
      80: new           #2                  // class okhttp3/internal/http2/ErrorCode
      83: dup
      84: ldc           #84                 // String SETTINGS_TIMEOUT
      86: iconst_4
      87: iconst_4
      88: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
      91: dup
      92: putstatic     #86                 // Field SETTINGS_TIMEOUT:Lokhttp3/internal/http2/ErrorCode;
      95: aastore
      96: dup
      97: iconst_5
      98: new           #2                  // class okhttp3/internal/http2/ErrorCode
     101: dup
     102: ldc           #87                 // String STREAM_CLOSED
     104: iconst_5
     105: iconst_5
     106: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
     109: dup
     110: putstatic     #89                 // Field STREAM_CLOSED:Lokhttp3/internal/http2/ErrorCode;
     113: aastore
     114: dup
     115: bipush        6
     117: new           #2                  // class okhttp3/internal/http2/ErrorCode
     120: dup
     121: ldc           #90                 // String FRAME_SIZE_ERROR
     123: bipush        6
     125: bipush        6
     127: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
     130: dup
     131: putstatic     #92                 // Field FRAME_SIZE_ERROR:Lokhttp3/internal/http2/ErrorCode;
     134: aastore
     135: dup
     136: bipush        7
     138: new           #2                  // class okhttp3/internal/http2/ErrorCode
     141: dup
     142: ldc           #93                 // String REFUSED_STREAM
     144: bipush        7
     146: bipush        7
     148: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
     151: dup
     152: putstatic     #95                 // Field REFUSED_STREAM:Lokhttp3/internal/http2/ErrorCode;
     155: aastore
     156: dup
     157: bipush        8
     159: new           #2                  // class okhttp3/internal/http2/ErrorCode
     162: dup
     163: ldc           #96                 // String CANCEL
     165: bipush        8
     167: bipush        8
     169: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
     172: dup
     173: putstatic     #98                 // Field CANCEL:Lokhttp3/internal/http2/ErrorCode;
     176: aastore
     177: dup
     178: bipush        9
     180: new           #2                  // class okhttp3/internal/http2/ErrorCode
     183: dup
     184: ldc           #99                 // String COMPRESSION_ERROR
     186: bipush        9
     188: bipush        9
     190: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
     193: dup
     194: putstatic     #101                // Field COMPRESSION_ERROR:Lokhttp3/internal/http2/ErrorCode;
     197: aastore
     198: dup
     199: bipush        10
     201: new           #2                  // class okhttp3/internal/http2/ErrorCode
     204: dup
     205: ldc           #102                // String CONNECT_ERROR
     207: bipush        10
     209: bipush        10
     211: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
     214: dup
     215: putstatic     #104                // Field CONNECT_ERROR:Lokhttp3/internal/http2/ErrorCode;
     218: aastore
     219: dup
     220: bipush        11
     222: new           #2                  // class okhttp3/internal/http2/ErrorCode
     225: dup
     226: ldc           #105                // String ENHANCE_YOUR_CALM
     228: bipush        11
     230: bipush        11
     232: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
     235: dup
     236: putstatic     #107                // Field ENHANCE_YOUR_CALM:Lokhttp3/internal/http2/ErrorCode;
     239: aastore
     240: dup
     241: bipush        12
     243: new           #2                  // class okhttp3/internal/http2/ErrorCode
     246: dup
     247: ldc           #108                // String INADEQUATE_SECURITY
     249: bipush        12
     251: bipush        12
     253: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
     256: dup
     257: putstatic     #110                // Field INADEQUATE_SECURITY:Lokhttp3/internal/http2/ErrorCode;
     260: aastore
     261: dup
     262: bipush        13
     264: new           #2                  // class okhttp3/internal/http2/ErrorCode
     267: dup
     268: ldc           #111                // String HTTP_1_1_REQUIRED
     270: bipush        13
     272: bipush        13
     274: invokespecial #72                 // Method "<init>":(Ljava/lang/String;II)V
     277: dup
     278: putstatic     #113                // Field HTTP_1_1_REQUIRED:Lokhttp3/internal/http2/ErrorCode;
     281: aastore
     282: putstatic     #46                 // Field $VALUES:[Lokhttp3/internal/http2/ErrorCode;
     285: new           #115                // class okhttp3/internal/http2/ErrorCode$Companion
     288: dup
     289: aconst_null
     290: invokespecial #118                // Method okhttp3/internal/http2/ErrorCode$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
     293: putstatic     #120                // Field Companion:Lokhttp3/internal/http2/ErrorCode$Companion;
     296: return

  public final int getHttpCode();
    Code:
       0: aload_0
       1: getfield      #30                 // Field httpCode:I
       4: ireturn

  private okhttp3.internal.http2.ErrorCode(int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #37                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: iload_3
       8: putfield      #30                 // Field httpCode:I
      11: return

  public static okhttp3.internal.http2.ErrorCode[] values();
    Code:
       0: getstatic     #46                 // Field $VALUES:[Lokhttp3/internal/http2/ErrorCode;
       3: invokevirtual #51                 // Method "[Lokhttp3/internal/http2/ErrorCode;".clone:()Ljava/lang/Object;
       6: checkcast     #47                 // class "[Lokhttp3/internal/http2/ErrorCode;"
       9: areturn

  public static okhttp3.internal.http2.ErrorCode valueOf(java.lang.String);
    Code:
       0: ldc           #2                  // class okhttp3/internal/http2/ErrorCode
       2: aload_0
       3: invokestatic  #56                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #2                  // class okhttp3/internal/http2/ErrorCode
       9: areturn
}
