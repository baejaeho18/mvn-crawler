Compiled from "MessageDeflater.kt"
public final class okhttp3.internal.ws.MessageDeflater implements java.io.Closeable {
  private final okio.Buffer deflatedBytes;

  private final java.util.zip.Deflater deflater;

  private final okio.DeflaterSink deflaterSink;

  private final boolean noContextTakeover;

  public final void deflate(okio.Buffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #21                 // String buffer
       3: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #29                 // Field deflatedBytes:Lokio/Buffer;
      10: invokevirtual #35                 // Method okio/Buffer.size:()J
      13: lconst_0
      14: lcmp
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: istore_2
      24: iconst_0
      25: istore_3
      26: iconst_0
      27: istore        4
      29: iconst_0
      30: istore        4
      32: iconst_0
      33: istore        5
      35: iload_2
      36: ifne          62
      39: iconst_0
      40: istore        6
      42: ldc           #37                 // String Failed requirement.
      44: astore        5
      46: new           #39                 // class java/lang/IllegalArgumentException
      49: dup
      50: aload         5
      52: invokevirtual #43                 // Method java/lang/Object.toString:()Ljava/lang/String;
      55: invokespecial #47                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      58: checkcast     #19                 // class java/lang/Throwable
      61: athrow
      62: aload_0
      63: getfield      #51                 // Field noContextTakeover:Z
      66: ifeq          76
      69: aload_0
      70: getfield      #53                 // Field deflater:Ljava/util/zip/Deflater;
      73: invokevirtual #59                 // Method java/util/zip/Deflater.reset:()V
      76: aload_0
      77: getfield      #61                 // Field deflaterSink:Lokio/DeflaterSink;
      80: aload_1
      81: aload_1
      82: invokevirtual #35                 // Method okio/Buffer.size:()J
      85: invokevirtual #67                 // Method okio/DeflaterSink.write:(Lokio/Buffer;J)V
      88: aload_0
      89: getfield      #61                 // Field deflaterSink:Lokio/DeflaterSink;
      92: invokevirtual #70                 // Method okio/DeflaterSink.flush:()V
      95: aload_0
      96: aload_0
      97: getfield      #29                 // Field deflatedBytes:Lokio/Buffer;
     100: invokestatic  #76                 // Method okhttp3/internal/ws/MessageDeflaterKt.access$getEMPTY_DEFLATE_BLOCK$p:()Lokio/ByteString;
     103: invokespecial #80                 // Method endsWith:(Lokio/Buffer;Lokio/ByteString;)Z
     106: ifeq          203
     109: aload_0
     110: getfield      #29                 // Field deflatedBytes:Lokio/Buffer;
     113: invokevirtual #35                 // Method okio/Buffer.size:()J
     116: iconst_4
     117: i2l
     118: lsub
     119: lstore_2
     120: aload_0
     121: getfield      #29                 // Field deflatedBytes:Lokio/Buffer;
     124: aconst_null
     125: iconst_1
     126: aconst_null
     127: invokestatic  #84                 // Method okio/Buffer.readAndWriteUnsafe$default:(Lokio/Buffer;Lokio/Buffer$UnsafeCursor;ILjava/lang/Object;)Lokio/Buffer$UnsafeCursor;
     130: checkcast     #6                  // class java/io/Closeable
     133: astore        4
     135: iconst_0
     136: istore        5
     138: iconst_0
     139: istore        6
     141: aconst_null
     142: checkcast     #19                 // class java/lang/Throwable
     145: astore        6
     147: nop
     148: aload         4
     150: checkcast     #86                 // class okio/Buffer$UnsafeCursor
     153: astore        7
     155: iconst_0
     156: istore        9
     158: aload         7
     160: lload_2
     161: invokevirtual #90                 // Method okio/Buffer$UnsafeCursor.resizeBuffer:(J)J
     164: lstore        7
     166: aload         4
     168: aload         6
     170: invokestatic  #96                 // Method kotlin/io/CloseableKt.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V
     173: lload         7
     175: goto          199
     178: astore        7
     180: aload         7
     182: astore        6
     184: aload         7
     186: athrow
     187: astore        7
     189: aload         4
     191: aload         6
     193: invokestatic  #96                 // Method kotlin/io/CloseableKt.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V
     196: aload         7
     198: athrow
     199: pop2
     200: goto          212
     203: aload_0
     204: getfield      #29                 // Field deflatedBytes:Lokio/Buffer;
     207: iconst_0
     208: invokevirtual #100                // Method okio/Buffer.writeByte:(I)Lokio/Buffer;
     211: pop
     212: aload_1
     213: aload_0
     214: getfield      #29                 // Field deflatedBytes:Lokio/Buffer;
     217: aload_0
     218: getfield      #29                 // Field deflatedBytes:Lokio/Buffer;
     221: invokevirtual #35                 // Method okio/Buffer.size:()J
     224: invokevirtual #101                // Method okio/Buffer.write:(Lokio/Buffer;J)V
     227: return
    Exception table:
       from    to  target type
         147   166   178   Class java/lang/Throwable
         147   166   187   any
         178   187   187   any
         187   189   187   any

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #61                 // Field deflaterSink:Lokio/DeflaterSink;
       4: invokevirtual #112                // Method okio/DeflaterSink.close:()V
       7: return

  private final boolean endsWith(okio.Buffer, okio.ByteString);
    Code:
       0: aload_1
       1: aload_1
       2: invokevirtual #35                 // Method okio/Buffer.size:()J
       5: aload_2
       6: invokevirtual #117                // Method okio/ByteString.size:()I
       9: i2l
      10: lsub
      11: aload_2
      12: invokevirtual #121                // Method okio/Buffer.rangeEquals:(JLokio/ByteString;)Z
      15: ireturn

  public okhttp3.internal.ws.MessageDeflater(boolean);
    Code:
       0: aload_0
       1: invokespecial #127                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #51                 // Field noContextTakeover:Z
       9: aload_0
      10: new           #31                 // class okio/Buffer
      13: dup
      14: invokespecial #128                // Method okio/Buffer."<init>":()V
      17: putfield      #29                 // Field deflatedBytes:Lokio/Buffer;
      20: aload_0
      21: new           #55                 // class java/util/zip/Deflater
      24: dup
      25: iconst_m1
      26: iconst_1
      27: invokespecial #131                // Method java/util/zip/Deflater."<init>":(IZ)V
      30: putfield      #53                 // Field deflater:Ljava/util/zip/Deflater;
      33: aload_0
      34: new           #63                 // class okio/DeflaterSink
      37: dup
      38: aload_0
      39: getfield      #29                 // Field deflatedBytes:Lokio/Buffer;
      42: checkcast     #133                // class okio/Sink
      45: aload_0
      46: getfield      #53                 // Field deflater:Ljava/util/zip/Deflater;
      49: invokespecial #136                // Method okio/DeflaterSink."<init>":(Lokio/Sink;Ljava/util/zip/Deflater;)V
      52: putfield      #61                 // Field deflaterSink:Lokio/DeflaterSink;
      55: return
}
