Compiled from "TaskRunner.kt"
public final class okhttp3.internal.concurrent.TaskRunner {
  private int nextQueueName;

  private boolean coordinatorWaiting;

  private long coordinatorWakeUpAt;

  private final java.util.List<okhttp3.internal.concurrent.TaskQueue> busyQueues;

  private final java.util.List<okhttp3.internal.concurrent.TaskQueue> readyQueues;

  private final java.lang.Runnable runnable;

  private final okhttp3.internal.concurrent.TaskRunner$Backend backend;

  public static final okhttp3.internal.concurrent.TaskRunner INSTANCE;

  private static final java.util.logging.Logger logger;

  public static final okhttp3.internal.concurrent.TaskRunner$Companion Companion;

  public final void kickCoordinator$okhttp(okhttp3.internal.concurrent.TaskQueue);
    Code:
       0: aload_1
       1: ldc           #21                 // String taskQueue
       3: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: iconst_0
       9: istore_3
      10: getstatic     #32                 // Field okhttp3/internal/Util.assertionsEnabled:Z
      13: ifeq          73
      16: aload_2
      17: invokestatic  #38                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      20: ifne          73
      23: new           #40                 // class java/lang/AssertionError
      26: dup
      27: new           #42                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #48                 // String Thread
      36: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokestatic  #56                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      42: dup
      43: ldc           #58                 // String Thread.currentThread()
      45: invokestatic  #61                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      48: invokevirtual #65                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      51: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #67                 // String  MUST hold lock on
      56: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_2
      60: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #76                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      69: checkcast     #78                 // class java/lang/Throwable
      72: athrow
      73: nop
      74: aload_1
      75: invokevirtual #84                 // Method okhttp3/internal/concurrent/TaskQueue.getActiveTask$okhttp:()Lokhttp3/internal/concurrent/Task;
      78: ifnonnull     130
      81: aload_1
      82: invokevirtual #88                 // Method okhttp3/internal/concurrent/TaskQueue.getFutureTasks$okhttp:()Ljava/util/List;
      85: checkcast     #90                 // class java/util/Collection
      88: astore_2
      89: iconst_0
      90: istore_3
      91: aload_2
      92: invokeinterface #94,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      97: ifne          104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: ifeq          119
     108: aload_0
     109: getfield      #96                 // Field readyQueues:Ljava/util/List;
     112: aload_1
     113: invokestatic  #100                // Method okhttp3/internal/Util.addIfAbsent:(Ljava/util/List;Ljava/lang/Object;)V
     116: goto          130
     119: aload_0
     120: getfield      #96                 // Field readyQueues:Ljava/util/List;
     123: aload_1
     124: invokeinterface #105,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     129: pop
     130: aload_0
     131: getfield      #107                // Field coordinatorWaiting:Z
     134: ifeq          150
     137: aload_0
     138: getfield      #111                // Field backend:Lokhttp3/internal/concurrent/TaskRunner$Backend;
     141: aload_0
     142: invokeinterface #117,  2          // InterfaceMethod okhttp3/internal/concurrent/TaskRunner$Backend.coordinatorNotify:(Lokhttp3/internal/concurrent/TaskRunner;)V
     147: goto          163
     150: aload_0
     151: getfield      #111                // Field backend:Lokhttp3/internal/concurrent/TaskRunner$Backend;
     154: aload_0
     155: getfield      #119                // Field runnable:Ljava/lang/Runnable;
     158: invokeinterface #123,  2          // InterfaceMethod okhttp3/internal/concurrent/TaskRunner$Backend.execute:(Ljava/lang/Runnable;)V
     163: return

  private final void beforeRun(okhttp3.internal.concurrent.Task);
    Code:
       0: aload_0
       1: astore_2
       2: iconst_0
       3: istore_3
       4: getstatic     #32                 // Field okhttp3/internal/Util.assertionsEnabled:Z
       7: ifeq          67
      10: aload_2
      11: invokestatic  #38                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      14: ifne          67
      17: new           #40                 // class java/lang/AssertionError
      20: dup
      21: new           #42                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #48                 // String Thread
      30: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokestatic  #56                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      36: dup
      37: ldc           #58                 // String Thread.currentThread()
      39: invokestatic  #61                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      42: invokevirtual #65                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      45: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #67                 // String  MUST hold lock on
      50: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_2
      54: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #76                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      63: checkcast     #78                 // class java/lang/Throwable
      66: athrow
      67: nop
      68: aload_1
      69: ldc2_w        #132                // long -1l
      72: invokevirtual #139                // Method okhttp3/internal/concurrent/Task.setNextExecuteNanoTime$okhttp:(J)V
      75: aload_1
      76: invokevirtual #143                // Method okhttp3/internal/concurrent/Task.getQueue$okhttp:()Lokhttp3/internal/concurrent/TaskQueue;
      79: dup
      80: invokestatic  #146                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      83: astore_2
      84: aload_2
      85: invokevirtual #88                 // Method okhttp3/internal/concurrent/TaskQueue.getFutureTasks$okhttp:()Ljava/util/List;
      88: aload_1
      89: invokeinterface #105,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      94: pop
      95: aload_0
      96: getfield      #96                 // Field readyQueues:Ljava/util/List;
      99: aload_2
     100: invokeinterface #105,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     105: pop
     106: aload_2
     107: aload_1
     108: invokevirtual #149                // Method okhttp3/internal/concurrent/TaskQueue.setActiveTask$okhttp:(Lokhttp3/internal/concurrent/Task;)V
     111: aload_0
     112: getfield      #151                // Field busyQueues:Ljava/util/List;
     115: aload_2
     116: invokeinterface #154,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     121: pop
     122: return

  private final void runTask(okhttp3.internal.concurrent.Task);
    Code:
       0: aload_0
       1: astore_2
       2: iconst_0
       3: istore_3
       4: getstatic     #32                 // Field okhttp3/internal/Util.assertionsEnabled:Z
       7: ifeq          67
      10: aload_2
      11: invokestatic  #38                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      14: ifeq          67
      17: new           #40                 // class java/lang/AssertionError
      20: dup
      21: new           #42                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #48                 // String Thread
      30: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokestatic  #56                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      36: dup
      37: ldc           #58                 // String Thread.currentThread()
      39: invokestatic  #61                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      42: invokevirtual #65                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      45: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #160                // String  MUST NOT hold lock on
      50: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_2
      54: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #76                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      63: checkcast     #78                 // class java/lang/Throwable
      66: athrow
      67: nop
      68: invokestatic  #56                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      71: astore_2
      72: aload_2
      73: dup
      74: ldc           #161                // String currentThread
      76: invokestatic  #61                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      79: invokevirtual #65                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      82: astore_3
      83: aload_2
      84: aload_1
      85: invokevirtual #162                // Method okhttp3/internal/concurrent/Task.getName:()Ljava/lang/String;
      88: invokevirtual #166                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      91: ldc2_w        #132                // long -1l
      94: lstore        9
      96: nop
      97: aload_1
      98: invokevirtual #170                // Method okhttp3/internal/concurrent/Task.runOnce:()J
     101: lstore        9
     103: aload_0
     104: astore        4
     106: iconst_0
     107: istore        5
     109: iconst_0
     110: istore        6
     112: aload         4
     114: monitorenter
     115: nop
     116: iconst_0
     117: istore        7
     119: aload_0
     120: aload_1
     121: lload         9
     123: invokespecial #174                // Method afterRun:(Lokhttp3/internal/concurrent/Task;J)V
     126: getstatic     #180                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     129: astore        6
     131: aload         4
     133: monitorexit
     134: goto          145
     137: astore        6
     139: aload         4
     141: monitorexit
     142: aload         6
     144: athrow
     145: aload_2
     146: aload_3
     147: invokevirtual #166                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
     150: goto          205
     153: astore        4
     155: aload_0
     156: astore        5
     158: iconst_0
     159: istore        6
     161: iconst_0
     162: istore        7
     164: aload         5
     166: monitorenter
     167: nop
     168: iconst_0
     169: istore        8
     171: aload_0
     172: aload_1
     173: lload         9
     175: invokespecial #174                // Method afterRun:(Lokhttp3/internal/concurrent/Task;J)V
     178: getstatic     #180                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     181: astore        7
     183: aload         5
     185: monitorexit
     186: goto          197
     189: astore        7
     191: aload         5
     193: monitorexit
     194: aload         7
     196: athrow
     197: aload_2
     198: aload_3
     199: invokevirtual #166                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
     202: aload         4
     204: athrow
     205: return
    Exception table:
       from    to  target type
         115   131   137   any
         137   139   137   any
         167   183   189   any
         189   191   189   any
          96   103   153   any
         153   155   153   any

  private final void afterRun(okhttp3.internal.concurrent.Task, long);
    Code:
       0: aload_0
       1: astore        4
       3: iconst_0
       4: istore        5
       6: getstatic     #32                 // Field okhttp3/internal/Util.assertionsEnabled:Z
       9: ifeq          71
      12: aload         4
      14: invokestatic  #38                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      17: ifne          71
      20: new           #40                 // class java/lang/AssertionError
      23: dup
      24: new           #42                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #48                 // String Thread
      33: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokestatic  #56                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      39: dup
      40: ldc           #58                 // String Thread.currentThread()
      42: invokestatic  #61                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      45: invokevirtual #65                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      48: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #67                 // String  MUST hold lock on
      53: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         4
      58: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #76                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      67: checkcast     #78                 // class java/lang/Throwable
      70: athrow
      71: nop
      72: aload_1
      73: invokevirtual #143                // Method okhttp3/internal/concurrent/Task.getQueue$okhttp:()Lokhttp3/internal/concurrent/TaskQueue;
      76: dup
      77: invokestatic  #146                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      80: astore        4
      82: aload         4
      84: invokevirtual #84                 // Method okhttp3/internal/concurrent/TaskQueue.getActiveTask$okhttp:()Lokhttp3/internal/concurrent/Task;
      87: aload_1
      88: if_acmpne     95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: istore        5
      98: iconst_0
      99: istore        6
     101: iconst_0
     102: istore        7
     104: iconst_0
     105: istore        7
     107: iconst_0
     108: istore        8
     110: iload         5
     112: ifne          138
     115: iconst_0
     116: istore        9
     118: ldc           #191                // String Check failed.
     120: astore        8
     122: new           #193                // class java/lang/IllegalStateException
     125: dup
     126: aload         8
     128: invokevirtual #194                // Method java/lang/Object.toString:()Ljava/lang/String;
     131: invokespecial #196                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     134: checkcast     #78                 // class java/lang/Throwable
     137: athrow
     138: aload         4
     140: invokevirtual #199                // Method okhttp3/internal/concurrent/TaskQueue.getCancelActiveTask$okhttp:()Z
     143: istore        5
     145: aload         4
     147: iconst_0
     148: invokevirtual #203                // Method okhttp3/internal/concurrent/TaskQueue.setCancelActiveTask$okhttp:(Z)V
     151: aload         4
     153: aconst_null
     154: checkcast     #135                // class okhttp3/internal/concurrent/Task
     157: invokevirtual #149                // Method okhttp3/internal/concurrent/TaskQueue.setActiveTask$okhttp:(Lokhttp3/internal/concurrent/Task;)V
     160: aload_0
     161: getfield      #151                // Field busyQueues:Ljava/util/List;
     164: aload         4
     166: invokeinterface #105,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     171: pop
     172: lload_2
     173: ldc2_w        #132                // long -1l
     176: lcmp
     177: ifeq          202
     180: iload         5
     182: ifne          202
     185: aload         4
     187: invokevirtual #206                // Method okhttp3/internal/concurrent/TaskQueue.getShutdown$okhttp:()Z
     190: ifne          202
     193: aload         4
     195: aload_1
     196: lload_2
     197: iconst_1
     198: invokevirtual #210                // Method okhttp3/internal/concurrent/TaskQueue.scheduleAndDecide$okhttp:(Lokhttp3/internal/concurrent/Task;JZ)Z
     201: pop
     202: aload         4
     204: invokevirtual #88                 // Method okhttp3/internal/concurrent/TaskQueue.getFutureTasks$okhttp:()Ljava/util/List;
     207: checkcast     #90                 // class java/util/Collection
     210: astore        6
     212: iconst_0
     213: istore        7
     215: aload         6
     217: invokeinterface #94,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
     222: ifne          229
     225: iconst_1
     226: goto          230
     229: iconst_0
     230: ifeq          245
     233: aload_0
     234: getfield      #96                 // Field readyQueues:Ljava/util/List;
     237: aload         4
     239: invokeinterface #154,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     244: pop
     245: return

  public final okhttp3.internal.concurrent.Task awaitTaskToRun();
    Code:
       0: aload_0
       1: astore_1
       2: iconst_0
       3: istore_2
       4: getstatic     #32                 // Field okhttp3/internal/Util.assertionsEnabled:Z
       7: ifeq          67
      10: aload_1
      11: invokestatic  #38                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      14: ifne          67
      17: new           #40                 // class java/lang/AssertionError
      20: dup
      21: new           #42                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #48                 // String Thread
      30: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokestatic  #56                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      36: dup
      37: ldc           #58                 // String Thread.currentThread()
      39: invokestatic  #61                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      42: invokevirtual #65                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      45: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #67                 // String  MUST hold lock on
      50: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #76                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      63: checkcast     #78                 // class java/lang/Throwable
      66: athrow
      67: nop
      68: nop
      69: aload_0
      70: getfield      #96                 // Field readyQueues:Ljava/util/List;
      73: invokeinterface #216,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      78: ifeq          83
      81: aconst_null
      82: areturn
      83: aload_0
      84: getfield      #111                // Field backend:Lokhttp3/internal/concurrent/TaskRunner$Backend;
      87: invokeinterface #219,  1          // InterfaceMethod okhttp3/internal/concurrent/TaskRunner$Backend.nanoTime:()J
      92: lstore_1
      93: ldc2_w        #220                // long 9223372036854775807l
      96: lstore_3
      97: aconst_null
      98: checkcast     #135                // class okhttp3/internal/concurrent/Task
     101: astore        5
     103: iconst_0
     104: istore        6
     106: aload_0
     107: getfield      #96                 // Field readyQueues:Ljava/util/List;
     110: invokeinterface #225,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     115: astore        8
     117: aload         8
     119: invokeinterface #230,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     124: ifeq          218
     127: aload         8
     129: invokeinterface #234,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     134: checkcast     #80                 // class okhttp3/internal/concurrent/TaskQueue
     137: astore        7
     139: aload         7
     141: invokevirtual #88                 // Method okhttp3/internal/concurrent/TaskQueue.getFutureTasks$okhttp:()Ljava/util/List;
     144: iconst_0
     145: invokeinterface #238,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     150: checkcast     #135                // class okhttp3/internal/concurrent/Task
     153: astore        9
     155: lconst_0
     156: lstore        12
     158: aload         9
     160: invokevirtual #241                // Method okhttp3/internal/concurrent/Task.getNextExecuteNanoTime$okhttp:()J
     163: lload_1
     164: lsub
     165: lstore        14
     167: iconst_0
     168: istore        16
     170: lload         12
     172: lload         14
     174: invokestatic  #247                // Method java/lang/Math.max:(JJ)J
     177: lstore        10
     179: nop
     180: lload         10
     182: lconst_0
     183: lcmp
     184: ifle          200
     187: iconst_0
     188: istore        12
     190: lload         10
     192: lload_3
     193: invokestatic  #250                // Method java/lang/Math.min:(JJ)J
     196: lstore_3
     197: goto          215
     200: aload         5
     202: ifnull        211
     205: iconst_1
     206: istore        6
     208: goto          218
     211: aload         9
     213: astore        5
     215: goto          117
     218: nop
     219: aload         5
     221: ifnull        288
     224: aload_0
     225: aload         5
     227: invokespecial #252                // Method beforeRun:(Lokhttp3/internal/concurrent/Task;)V
     230: iload         6
     232: ifne          272
     235: aload_0
     236: getfield      #107                // Field coordinatorWaiting:Z
     239: ifne          285
     242: aload_0
     243: getfield      #96                 // Field readyQueues:Ljava/util/List;
     246: checkcast     #90                 // class java/util/Collection
     249: astore        7
     251: iconst_0
     252: istore        8
     254: aload         7
     256: invokeinterface #94,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
     261: ifne          268
     264: iconst_1
     265: goto          269
     268: iconst_0
     269: ifeq          285
     272: aload_0
     273: getfield      #111                // Field backend:Lokhttp3/internal/concurrent/TaskRunner$Backend;
     276: aload_0
     277: getfield      #119                // Field runnable:Ljava/lang/Runnable;
     280: invokeinterface #123,  2          // InterfaceMethod okhttp3/internal/concurrent/TaskRunner$Backend.execute:(Ljava/lang/Runnable;)V
     285: aload         5
     287: areturn
     288: aload_0
     289: getfield      #107                // Field coordinatorWaiting:Z
     292: ifeq          318
     295: lload_3
     296: aload_0
     297: getfield      #254                // Field coordinatorWakeUpAt:J
     300: lload_1
     301: lsub
     302: lcmp
     303: ifge          316
     306: aload_0
     307: getfield      #111                // Field backend:Lokhttp3/internal/concurrent/TaskRunner$Backend;
     310: aload_0
     311: invokeinterface #117,  2          // InterfaceMethod okhttp3/internal/concurrent/TaskRunner$Backend.coordinatorNotify:(Lokhttp3/internal/concurrent/TaskRunner;)V
     316: aconst_null
     317: areturn
     318: aload_0
     319: iconst_1
     320: putfield      #107                // Field coordinatorWaiting:Z
     323: aload_0
     324: lload_1
     325: lload_3
     326: ladd
     327: putfield      #254                // Field coordinatorWakeUpAt:J
     330: nop
     331: aload_0
     332: getfield      #111                // Field backend:Lokhttp3/internal/concurrent/TaskRunner$Backend;
     335: aload_0
     336: lload_3
     337: invokeinterface #258,  4          // InterfaceMethod okhttp3/internal/concurrent/TaskRunner$Backend.coordinatorWait:(Lokhttp3/internal/concurrent/TaskRunner;J)V
     342: aload_0
     343: iconst_0
     344: putfield      #107                // Field coordinatorWaiting:Z
     347: goto          374
     350: astore        7
     352: aload_0
     353: invokevirtual #261                // Method cancelAll:()V
     356: aload_0
     357: iconst_0
     358: putfield      #107                // Field coordinatorWaiting:Z
     361: goto          374
     364: astore        7
     366: aload_0
     367: iconst_0
     368: putfield      #107                // Field coordinatorWaiting:Z
     371: aload         7
     373: athrow
     374: goto          68
    Exception table:
       from    to  target type
         330   342   350   Class java/lang/InterruptedException
         330   342   364   any
         350   356   364   any
         364   366   364   any

  public final okhttp3.internal.concurrent.TaskQueue newQueue();
    Code:
       0: aload_0
       1: astore_2
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        4
       7: aload_2
       8: monitorenter
       9: nop
      10: iconst_0
      11: istore        5
      13: aload_0
      14: dup
      15: getfield      #272                // Field nextQueueName:I
      18: dup
      19: istore        6
      21: iconst_1
      22: iadd
      23: putfield      #272                // Field nextQueueName:I
      26: iload         6
      28: istore        4
      30: aload_2
      31: monitorexit
      32: iload         4
      34: goto          44
      37: astore        4
      39: aload_2
      40: monitorexit
      41: aload         4
      43: athrow
      44: istore_1
      45: new           #80                 // class okhttp3/internal/concurrent/TaskQueue
      48: dup
      49: aload_0
      50: new           #42                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      57: bipush        81
      59: invokevirtual #275                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      62: iload_1
      63: invokevirtual #278                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #281                // Method okhttp3/internal/concurrent/TaskQueue."<init>":(Lokhttp3/internal/concurrent/TaskRunner;Ljava/lang/String;)V
      72: areturn
    Exception table:
       from    to  target type
           9    30    37   any
          37    39    37   any

  public final java.util.List<okhttp3.internal.concurrent.TaskQueue> activeQueues();
    Code:
       0: aload_0
       1: astore_1
       2: iconst_0
       3: istore_2
       4: iconst_0
       5: istore_3
       6: aload_1
       7: monitorenter
       8: nop
       9: iconst_0
      10: istore        4
      12: aload_0
      13: getfield      #151                // Field busyQueues:Ljava/util/List;
      16: checkcast     #90                 // class java/util/Collection
      19: aload_0
      20: getfield      #96                 // Field readyQueues:Ljava/util/List;
      23: checkcast     #287                // class java/lang/Iterable
      26: invokestatic  #293                // Method kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
      29: astore        5
      31: aload_1
      32: monitorexit
      33: aload         5
      35: areturn
      36: astore_3
      37: aload_1
      38: monitorexit
      39: aload_3
      40: athrow
    Exception table:
       from    to  target type
           8    31    36   any
          36    37    36   any

  public final void cancelAll();
    Code:
       0: aload_0
       1: getfield      #151                // Field busyQueues:Ljava/util/List;
       4: invokeinterface #298,  1          // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: isub
      11: istore_1
      12: iconst_0
      13: istore_2
      14: iload_1
      15: iflt          41
      18: aload_0
      19: getfield      #151                // Field busyQueues:Ljava/util/List;
      22: iload_1
      23: invokeinterface #238,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: checkcast     #80                 // class okhttp3/internal/concurrent/TaskQueue
      31: invokevirtual #301                // Method okhttp3/internal/concurrent/TaskQueue.cancelAllAndDecide$okhttp:()Z
      34: pop
      35: iinc          1, -1
      38: goto          14
      41: aload_0
      42: getfield      #96                 // Field readyQueues:Ljava/util/List;
      45: invokeinterface #298,  1          // InterfaceMethod java/util/List.size:()I
      50: iconst_1
      51: isub
      52: istore_1
      53: iconst_0
      54: istore_2
      55: iload_1
      56: iflt          107
      59: aload_0
      60: getfield      #96                 // Field readyQueues:Ljava/util/List;
      63: iload_1
      64: invokeinterface #238,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      69: checkcast     #80                 // class okhttp3/internal/concurrent/TaskQueue
      72: astore_3
      73: aload_3
      74: invokevirtual #301                // Method okhttp3/internal/concurrent/TaskQueue.cancelAllAndDecide$okhttp:()Z
      77: pop
      78: aload_3
      79: invokevirtual #88                 // Method okhttp3/internal/concurrent/TaskQueue.getFutureTasks$okhttp:()Ljava/util/List;
      82: invokeinterface #216,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      87: ifeq          101
      90: aload_0
      91: getfield      #96                 // Field readyQueues:Ljava/util/List;
      94: iload_1
      95: invokeinterface #303,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     100: pop
     101: iinc          1, -1
     104: goto          55
     107: return

  public final okhttp3.internal.concurrent.TaskRunner$Backend getBackend();
    Code:
       0: aload_0
       1: getfield      #111                // Field backend:Lokhttp3/internal/concurrent/TaskRunner$Backend;
       4: areturn

  public okhttp3.internal.concurrent.TaskRunner(okhttp3.internal.concurrent.TaskRunner$Backend);
    Code:
       0: aload_1
       1: ldc_w         #308                // String backend
       4: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: invokespecial #309                // Method java/lang/Object."<init>":()V
      11: aload_0
      12: aload_1
      13: putfield      #111                // Field backend:Lokhttp3/internal/concurrent/TaskRunner$Backend;
      16: aload_0
      17: sipush        10000
      20: putfield      #272                // Field nextQueueName:I
      23: aload_0
      24: iconst_0
      25: istore_2
      26: new           #311                // class java/util/ArrayList
      29: dup
      30: invokespecial #312                // Method java/util/ArrayList."<init>":()V
      33: checkcast     #102                // class java/util/List
      36: putfield      #151                // Field busyQueues:Ljava/util/List;
      39: aload_0
      40: iconst_0
      41: istore_2
      42: new           #311                // class java/util/ArrayList
      45: dup
      46: invokespecial #312                // Method java/util/ArrayList."<init>":()V
      49: checkcast     #102                // class java/util/List
      52: putfield      #96                 // Field readyQueues:Ljava/util/List;
      55: aload_0
      56: new           #314                // class okhttp3/internal/concurrent/TaskRunner$runnable$1
      59: dup
      60: aload_0
      61: invokespecial #316                // Method okhttp3/internal/concurrent/TaskRunner$runnable$1."<init>":(Lokhttp3/internal/concurrent/TaskRunner;)V
      64: checkcast     #318                // class java/lang/Runnable
      67: putfield      #119                // Field runnable:Ljava/lang/Runnable;
      70: return

  static {};
    Code:
       0: new           #351                // class okhttp3/internal/concurrent/TaskRunner$Companion
       3: dup
       4: aconst_null
       5: invokespecial #354                // Method okhttp3/internal/concurrent/TaskRunner$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #356                // Field Companion:Lokhttp3/internal/concurrent/TaskRunner$Companion;
      11: new           #2                  // class okhttp3/internal/concurrent/TaskRunner
      14: dup
      15: new           #358                // class okhttp3/internal/concurrent/TaskRunner$RealBackend
      18: dup
      19: new           #42                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      26: getstatic     #361                // Field okhttp3/internal/Util.okHttpName:Ljava/lang/String;
      29: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc_w         #363                // String  TaskRunner
      35: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: iconst_1
      42: invokestatic  #367                // Method okhttp3/internal/Util.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;
      45: invokespecial #370                // Method okhttp3/internal/concurrent/TaskRunner$RealBackend."<init>":(Ljava/util/concurrent/ThreadFactory;)V
      48: checkcast     #113                // class okhttp3/internal/concurrent/TaskRunner$Backend
      51: invokespecial #372                // Method "<init>":(Lokhttp3/internal/concurrent/TaskRunner$Backend;)V
      54: putstatic     #374                // Field INSTANCE:Lokhttp3/internal/concurrent/TaskRunner;
      57: ldc           #2                  // class okhttp3/internal/concurrent/TaskRunner
      59: invokevirtual #377                // Method java/lang/Class.getName:()Ljava/lang/String;
      62: invokestatic  #383                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      65: dup
      66: ldc_w         #385                // String Logger.getLogger(TaskRunner::class.java.name)
      69: invokestatic  #61                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      72: putstatic     #333                // Field logger:Ljava/util/logging/Logger;
      75: return

  public static final void access$runTask(okhttp3.internal.concurrent.TaskRunner, okhttp3.internal.concurrent.Task);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #328                // Method runTask:(Lokhttp3/internal/concurrent/Task;)V
       5: return

  public static final java.util.logging.Logger access$getLogger$cp();
    Code:
       0: getstatic     #333                // Field logger:Ljava/util/logging/Logger;
       3: areturn
}
