Compiled from "Http2ExchangeCodec.kt"
public final class okhttp3.internal.http2.Http2ExchangeCodec$Companion {
  public final java.util.List<okhttp3.internal.http2.Header> http2HeadersList(okhttp3.Request);
    Code:
       0: aload_1
       1: ldc           #10                 // String request
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #22                 // Method okhttp3/Request.headers:()Lokhttp3/Headers;
      10: astore_2
      11: new           #24                 // class java/util/ArrayList
      14: dup
      15: aload_2
      16: invokevirtual #30                 // Method okhttp3/Headers.size:()I
      19: iconst_4
      20: iadd
      21: invokespecial #34                 // Method java/util/ArrayList."<init>":(I)V
      24: astore_3
      25: aload_3
      26: new           #36                 // class okhttp3/internal/http2/Header
      29: dup
      30: getstatic     #40                 // Field okhttp3/internal/http2/Header.TARGET_METHOD:Lokio/ByteString;
      33: aload_1
      34: invokevirtual #44                 // Method okhttp3/Request.method:()Ljava/lang/String;
      37: invokespecial #47                 // Method okhttp3/internal/http2/Header."<init>":(Lokio/ByteString;Ljava/lang/String;)V
      40: invokevirtual #51                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_3
      45: new           #36                 // class okhttp3/internal/http2/Header
      48: dup
      49: getstatic     #54                 // Field okhttp3/internal/http2/Header.TARGET_PATH:Lokio/ByteString;
      52: getstatic     #60                 // Field okhttp3/internal/http/RequestLine.INSTANCE:Lokhttp3/internal/http/RequestLine;
      55: aload_1
      56: invokevirtual #64                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      59: invokevirtual #68                 // Method okhttp3/internal/http/RequestLine.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;
      62: invokespecial #47                 // Method okhttp3/internal/http2/Header."<init>":(Lokio/ByteString;Ljava/lang/String;)V
      65: invokevirtual #51                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      68: pop
      69: aload_1
      70: ldc           #70                 // String Host
      72: invokevirtual #74                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
      75: astore        4
      77: aload         4
      79: ifnull        99
      82: aload_3
      83: new           #36                 // class okhttp3/internal/http2/Header
      86: dup
      87: getstatic     #77                 // Field okhttp3/internal/http2/Header.TARGET_AUTHORITY:Lokio/ByteString;
      90: aload         4
      92: invokespecial #47                 // Method okhttp3/internal/http2/Header."<init>":(Lokio/ByteString;Ljava/lang/String;)V
      95: invokevirtual #51                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      98: pop
      99: aload_3
     100: new           #36                 // class okhttp3/internal/http2/Header
     103: dup
     104: getstatic     #80                 // Field okhttp3/internal/http2/Header.TARGET_SCHEME:Lokio/ByteString;
     107: aload_1
     108: invokevirtual #64                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     111: invokevirtual #85                 // Method okhttp3/HttpUrl.scheme:()Ljava/lang/String;
     114: invokespecial #47                 // Method okhttp3/internal/http2/Header."<init>":(Lokio/ByteString;Ljava/lang/String;)V
     117: invokevirtual #51                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     120: pop
     121: iconst_0
     122: istore        5
     124: aload_2
     125: invokevirtual #30                 // Method okhttp3/Headers.size:()I
     128: istore        6
     130: iload         5
     132: iload         6
     134: if_icmpge     251
     137: aload_2
     138: iload         5
     140: invokevirtual #89                 // Method okhttp3/Headers.name:(I)Ljava/lang/String;
     143: astore        8
     145: getstatic     #95                 // Field java/util/Locale.US:Ljava/util/Locale;
     148: dup
     149: ldc           #97                 // String Locale.US
     151: invokestatic  #100                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     154: astore        9
     156: iconst_0
     157: istore        10
     159: aload         8
     161: dup
     162: ifnonnull     175
     165: new           #102                // class java/lang/NullPointerException
     168: dup
     169: ldc           #104                // String null cannot be cast to non-null type java.lang.String
     171: invokespecial #107                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     174: athrow
     175: aload         9
     177: invokevirtual #113                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
     180: dup
     181: ldc           #115                // String (this as java.lang.String).toLowerCase(locale)
     183: invokestatic  #100                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     186: astore        7
     188: invokestatic  #121                // Method okhttp3/internal/http2/Http2ExchangeCodec.access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp:()Ljava/util/List;
     191: aload         7
     193: invokeinterface #126,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     198: ifeq          225
     201: aload         7
     203: ldc           #128                // String te
     205: invokestatic  #132                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     208: ifeq          245
     211: aload_2
     212: iload         5
     214: invokevirtual #135                // Method okhttp3/Headers.value:(I)Ljava/lang/String;
     217: ldc           #137                // String trailers
     219: invokestatic  #132                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     222: ifeq          245
     225: aload_3
     226: new           #36                 // class okhttp3/internal/http2/Header
     229: dup
     230: aload         7
     232: aload_2
     233: iload         5
     235: invokevirtual #135                // Method okhttp3/Headers.value:(I)Ljava/lang/String;
     238: invokespecial #140                // Method okhttp3/internal/http2/Header."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     241: invokevirtual #51                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     244: pop
     245: iinc          5, 1
     248: goto          130
     251: aload_3
     252: checkcast     #123                // class java/util/List
     255: areturn

  public final okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers, okhttp3.Protocol);
    Code:
       0: aload_1
       1: ldc           #154                // String headerBlock
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #156                // String protocol
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aconst_null
      13: checkcast     #158                // class okhttp3/internal/http/StatusLine
      16: astore_3
      17: new           #160                // class okhttp3/Headers$Builder
      20: dup
      21: invokespecial #163                // Method okhttp3/Headers$Builder."<init>":()V
      24: astore        4
      26: iconst_0
      27: istore        5
      29: aload_1
      30: invokevirtual #30                 // Method okhttp3/Headers.size:()I
      33: istore        6
      35: iload         5
      37: iload         6
      39: if_icmpge     127
      42: aload_1
      43: iload         5
      45: invokevirtual #89                 // Method okhttp3/Headers.name:(I)Ljava/lang/String;
      48: astore        7
      50: aload_1
      51: iload         5
      53: invokevirtual #135                // Method okhttp3/Headers.value:(I)Ljava/lang/String;
      56: astore        8
      58: aload         7
      60: ldc           #165                // String :status
      62: invokestatic  #132                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      65: ifeq          98
      68: getstatic     #169                // Field okhttp3/internal/http/StatusLine.Companion:Lokhttp3/internal/http/StatusLine$Companion;
      71: new           #171                // class java/lang/StringBuilder
      74: dup
      75: invokespecial #172                // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #174                // String HTTP/1.1
      80: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload         8
      85: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: invokevirtual #181                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokevirtual #187                // Method okhttp3/internal/http/StatusLine$Companion.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;
      94: astore_3
      95: goto          121
      98: invokestatic  #190                // Method okhttp3/internal/http2/Http2ExchangeCodec.access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp:()Ljava/util/List;
     101: aload         7
     103: invokeinterface #126,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     108: ifne          121
     111: aload         4
     113: aload         7
     115: aload         8
     117: invokevirtual #194                // Method okhttp3/Headers$Builder.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
     120: pop
     121: iinc          5, 1
     124: goto          35
     127: aload_3
     128: ifnonnull     144
     131: new           #196                // class java/net/ProtocolException
     134: dup
     135: ldc           #198                // String Expected \':status\' header not present
     137: invokespecial #199                // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
     140: checkcast     #201                // class java/lang/Throwable
     143: athrow
     144: new           #203                // class okhttp3/Response$Builder
     147: dup
     148: invokespecial #204                // Method okhttp3/Response$Builder."<init>":()V
     151: aload_2
     152: invokevirtual #207                // Method okhttp3/Response$Builder.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
     155: aload_3
     156: getfield      #210                // Field okhttp3/internal/http/StatusLine.code:I
     159: invokevirtual #213                // Method okhttp3/Response$Builder.code:(I)Lokhttp3/Response$Builder;
     162: aload_3
     163: getfield      #216                // Field okhttp3/internal/http/StatusLine.message:Ljava/lang/String;
     166: invokevirtual #219                // Method okhttp3/Response$Builder.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;
     169: aload         4
     171: invokevirtual #222                // Method okhttp3/Headers$Builder.build:()Lokhttp3/Headers;
     174: invokevirtual #225                // Method okhttp3/Response$Builder.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;
     177: areturn

  private okhttp3.internal.http2.Http2ExchangeCodec$Companion();
    Code:
       0: aload_0
       1: invokespecial #233                // Method java/lang/Object."<init>":()V
       4: return

  public okhttp3.internal.http2.Http2ExchangeCodec$Companion(kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: aload_0
       1: invokespecial #235                // Method "<init>":()V
       4: return
}
