Compiled from "RealCall.kt"
public final class okhttp3.internal.connection.RealCall implements okhttp3.Call {
  private final okhttp3.internal.connection.RealConnectionPool connectionPool;

  private final okhttp3.EventListener eventListener;

  private final okhttp3.internal.connection.RealCall$timeout$1 timeout;

  private final java.util.concurrent.atomic.AtomicBoolean executed;

  private java.lang.Object callStackTrace;

  private okhttp3.internal.connection.ExchangeFinder exchangeFinder;

  private okhttp3.internal.connection.RealConnection connection;

  private boolean timeoutEarlyExit;

  private okhttp3.internal.connection.Exchange interceptorScopedExchange;

  private boolean requestBodyOpen;

  private boolean responseBodyOpen;

  private boolean expectMoreExchanges;

  private volatile boolean canceled;

  private volatile okhttp3.internal.connection.Exchange exchange;

  private volatile okhttp3.internal.connection.RealConnection connectionToCancel;

  private final okhttp3.OkHttpClient client;

  private final okhttp3.Request originalRequest;

  private final boolean forWebSocket;

  public final okhttp3.EventListener getEventListener$okhttp();
    Code:
       0: aload_0
       1: getfield      #15                 // Field eventListener:Lokhttp3/EventListener;
       4: areturn

  public final okhttp3.internal.connection.RealConnection getConnection();
    Code:
       0: aload_0
       1: getfield      #32                 // Field connection:Lokhttp3/internal/connection/RealConnection;
       4: areturn

  public final okhttp3.internal.connection.Exchange getInterceptorScopedExchange$okhttp();
    Code:
       0: aload_0
       1: getfield      #40                 // Field interceptorScopedExchange:Lokhttp3/internal/connection/Exchange;
       4: areturn

  public final okhttp3.internal.connection.RealConnection getConnectionToCancel();
    Code:
       0: aload_0
       1: getfield      #49                 // Field connectionToCancel:Lokhttp3/internal/connection/RealConnection;
       4: areturn

  public final void setConnectionToCancel(okhttp3.internal.connection.RealConnection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field connectionToCancel:Lokhttp3/internal/connection/RealConnection;
       5: return

  public okio.AsyncTimeout timeout();
    Code:
       0: aload_0
       1: getfield      #60                 // Field timeout:Lokhttp3/internal/connection/RealCall$timeout$1;
       4: checkcast     #62                 // class okio/AsyncTimeout
       7: areturn

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method timeout:()Lokio/AsyncTimeout;
       4: checkcast     #58                 // class okio/Timeout
       7: areturn

  public okhttp3.internal.connection.RealCall clone();
    Code:
       0: new           #2                  // class okhttp3/internal/connection/RealCall
       3: dup
       4: aload_0
       5: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
       8: aload_0
       9: getfield      #76                 // Field originalRequest:Lokhttp3/Request;
      12: aload_0
      13: getfield      #79                 // Field forWebSocket:Z
      16: invokespecial #83                 // Method "<init>":(Lokhttp3/OkHttpClient;Lokhttp3/Request;Z)V
      19: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method clone:()Lokhttp3/internal/connection/RealCall;
       4: areturn

  public okhttp3.Call clone();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method clone:()Lokhttp3/internal/connection/RealCall;
       4: checkcast     #6                  // class okhttp3/Call
       7: areturn

  public okhttp3.Request request();
    Code:
       0: aload_0
       1: getfield      #76                 // Field originalRequest:Lokhttp3/Request;
       4: areturn

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #89                 // Field canceled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #89                 // Field canceled:Z
      13: aload_0
      14: getfield      #91                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      17: dup
      18: ifnull        27
      21: invokevirtual #95                 // Method okhttp3/internal/connection/Exchange.cancel:()V
      24: goto          28
      27: pop
      28: aload_0
      29: getfield      #49                 // Field connectionToCancel:Lokhttp3/internal/connection/RealConnection;
      32: dup
      33: ifnull        42
      36: invokevirtual #98                 // Method okhttp3/internal/connection/RealConnection.cancel:()V
      39: goto          43
      42: pop
      43: aload_0
      44: getfield      #15                 // Field eventListener:Lokhttp3/EventListener;
      47: aload_0
      48: checkcast     #6                  // class okhttp3/Call
      51: invokevirtual #103                // Method okhttp3/EventListener.canceled:(Lokhttp3/Call;)V
      54: return

  public boolean isCanceled();
    Code:
       0: aload_0
       1: getfield      #89                 // Field canceled:Z
       4: ireturn

  public okhttp3.Response execute();
    Code:
       0: aload_0
       1: getfield      #109                // Field executed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #115                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: istore_1
      10: iconst_0
      11: istore_2
      12: iconst_0
      13: istore_3
      14: iload_1
      15: ifne          39
      18: iconst_0
      19: istore        4
      21: ldc           #117                // String Already Executed
      23: astore_3
      24: new           #119                // class java/lang/IllegalStateException
      27: dup
      28: aload_3
      29: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
      32: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: checkcast     #128                // class java/lang/Throwable
      38: athrow
      39: aload_0
      40: getfield      #60                 // Field timeout:Lokhttp3/internal/connection/RealCall$timeout$1;
      43: invokevirtual #133                // Method okhttp3/internal/connection/RealCall$timeout$1.enter:()V
      46: aload_0
      47: invokespecial #136                // Method callStart:()V
      50: nop
      51: aload_0
      52: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      55: invokevirtual #142                // Method okhttp3/OkHttpClient.dispatcher:()Lokhttp3/Dispatcher;
      58: aload_0
      59: invokevirtual #148                // Method okhttp3/Dispatcher.executed$okhttp:(Lokhttp3/internal/connection/RealCall;)V
      62: aload_0
      63: invokevirtual #151                // Method getResponseWithInterceptorChain$okhttp:()Lokhttp3/Response;
      66: astore_1
      67: aload_0
      68: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      71: invokevirtual #142                // Method okhttp3/OkHttpClient.dispatcher:()Lokhttp3/Dispatcher;
      74: aload_0
      75: invokevirtual #154                // Method okhttp3/Dispatcher.finished$okhttp:(Lokhttp3/internal/connection/RealCall;)V
      78: aload_1
      79: areturn
      80: astore_1
      81: aload_0
      82: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      85: invokevirtual #142                // Method okhttp3/OkHttpClient.dispatcher:()Lokhttp3/Dispatcher;
      88: aload_0
      89: invokevirtual #154                // Method okhttp3/Dispatcher.finished$okhttp:(Lokhttp3/internal/connection/RealCall;)V
      92: aload_1
      93: athrow
    Exception table:
       from    to  target type
          50    67    80   any
          80    81    80   any

  public void enqueue(okhttp3.Callback);
    Code:
       0: aload_1
       1: ldc           #160                // String responseCallback
       3: invokestatic  #166                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #109                // Field executed:Ljava/util/concurrent/atomic/AtomicBoolean;
      10: iconst_0
      11: iconst_1
      12: invokevirtual #115                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      15: istore_2
      16: iconst_0
      17: istore_3
      18: iconst_0
      19: istore        4
      21: iload_2
      22: ifne          48
      25: iconst_0
      26: istore        5
      28: ldc           #117                // String Already Executed
      30: astore        4
      32: new           #119                // class java/lang/IllegalStateException
      35: dup
      36: aload         4
      38: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
      41: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      44: checkcast     #128                // class java/lang/Throwable
      47: athrow
      48: aload_0
      49: invokespecial #136                // Method callStart:()V
      52: aload_0
      53: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      56: invokevirtual #142                // Method okhttp3/OkHttpClient.dispatcher:()Lokhttp3/Dispatcher;
      59: new           #168                // class okhttp3/internal/connection/RealCall$AsyncCall
      62: dup
      63: aload_0
      64: aload_1
      65: invokespecial #171                // Method okhttp3/internal/connection/RealCall$AsyncCall."<init>":(Lokhttp3/internal/connection/RealCall;Lokhttp3/Callback;)V
      68: invokevirtual #175                // Method okhttp3/Dispatcher.enqueue$okhttp:(Lokhttp3/internal/connection/RealCall$AsyncCall;)V
      71: return

  public boolean isExecuted();
    Code:
       0: aload_0
       1: getfield      #109                // Field executed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #181                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  private final void callStart();
    Code:
       0: aload_0
       1: getstatic     #187                // Field okhttp3/internal/platform/Platform.Companion:Lokhttp3/internal/platform/Platform$Companion;
       4: invokevirtual #192                // Method okhttp3/internal/platform/Platform$Companion.get:()Lokhttp3/internal/platform/Platform;
       7: ldc           #194                // String response.body().close()
       9: invokevirtual #198                // Method okhttp3/internal/platform/Platform.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;
      12: putfield      #200                // Field callStackTrace:Ljava/lang/Object;
      15: aload_0
      16: getfield      #15                 // Field eventListener:Lokhttp3/EventListener;
      19: aload_0
      20: checkcast     #6                  // class okhttp3/Call
      23: invokevirtual #202                // Method okhttp3/EventListener.callStart:(Lokhttp3/Call;)V
      26: return

  public final okhttp3.Response getResponseWithInterceptorChain$okhttp() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: new           #206                // class java/util/ArrayList
       5: dup
       6: invokespecial #208                // Method java/util/ArrayList."<init>":()V
       9: checkcast     #210                // class java/util/List
      12: astore_1
      13: aload_1
      14: checkcast     #212                // class java/util/Collection
      17: astore_2
      18: aload_0
      19: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      22: invokevirtual #216                // Method okhttp3/OkHttpClient.interceptors:()Ljava/util/List;
      25: checkcast     #218                // class java/lang/Iterable
      28: astore_3
      29: iconst_0
      30: istore        4
      32: aload_2
      33: aload_3
      34: invokestatic  #224                // Method kotlin/collections/CollectionsKt.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z
      37: pop
      38: aload_1
      39: checkcast     #212                // class java/util/Collection
      42: astore_2
      43: new           #226                // class okhttp3/internal/http/RetryAndFollowUpInterceptor
      46: dup
      47: aload_0
      48: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      51: invokespecial #229                // Method okhttp3/internal/http/RetryAndFollowUpInterceptor."<init>":(Lokhttp3/OkHttpClient;)V
      54: astore_3
      55: iconst_0
      56: istore        4
      58: aload_2
      59: aload_3
      60: invokeinterface #233,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_1
      67: checkcast     #212                // class java/util/Collection
      70: astore_2
      71: new           #235                // class okhttp3/internal/http/BridgeInterceptor
      74: dup
      75: aload_0
      76: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      79: invokevirtual #239                // Method okhttp3/OkHttpClient.cookieJar:()Lokhttp3/CookieJar;
      82: invokespecial #242                // Method okhttp3/internal/http/BridgeInterceptor."<init>":(Lokhttp3/CookieJar;)V
      85: astore_3
      86: iconst_0
      87: istore        4
      89: aload_2
      90: aload_3
      91: invokeinterface #233,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      96: pop
      97: aload_1
      98: checkcast     #212                // class java/util/Collection
     101: astore_2
     102: new           #244                // class okhttp3/internal/cache/CacheInterceptor
     105: dup
     106: aload_0
     107: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
     110: invokevirtual #248                // Method okhttp3/OkHttpClient.cache:()Lokhttp3/Cache;
     113: invokespecial #251                // Method okhttp3/internal/cache/CacheInterceptor."<init>":(Lokhttp3/Cache;)V
     116: astore_3
     117: iconst_0
     118: istore        4
     120: aload_2
     121: aload_3
     122: invokeinterface #233,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     127: pop
     128: aload_1
     129: checkcast     #212                // class java/util/Collection
     132: astore_2
     133: getstatic     #257                // Field okhttp3/internal/connection/ConnectInterceptor.INSTANCE:Lokhttp3/internal/connection/ConnectInterceptor;
     136: astore_3
     137: iconst_0
     138: istore        4
     140: aload_2
     141: aload_3
     142: invokeinterface #233,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     147: pop
     148: aload_0
     149: getfield      #79                 // Field forWebSocket:Z
     152: ifne          180
     155: aload_1
     156: checkcast     #212                // class java/util/Collection
     159: astore_2
     160: aload_0
     161: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
     164: invokevirtual #260                // Method okhttp3/OkHttpClient.networkInterceptors:()Ljava/util/List;
     167: checkcast     #218                // class java/lang/Iterable
     170: astore_3
     171: iconst_0
     172: istore        4
     174: aload_2
     175: aload_3
     176: invokestatic  #224                // Method kotlin/collections/CollectionsKt.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z
     179: pop
     180: aload_1
     181: checkcast     #212                // class java/util/Collection
     184: astore_2
     185: new           #262                // class okhttp3/internal/http/CallServerInterceptor
     188: dup
     189: aload_0
     190: getfield      #79                 // Field forWebSocket:Z
     193: invokespecial #265                // Method okhttp3/internal/http/CallServerInterceptor."<init>":(Z)V
     196: astore_3
     197: iconst_0
     198: istore        4
     200: aload_2
     201: aload_3
     202: invokeinterface #233,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     207: pop
     208: new           #267                // class okhttp3/internal/http/RealInterceptorChain
     211: dup
     212: aload_0
     213: aload_1
     214: iconst_0
     215: aconst_null
     216: aload_0
     217: getfield      #76                 // Field originalRequest:Lokhttp3/Request;
     220: aload_0
     221: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
     224: invokevirtual #271                // Method okhttp3/OkHttpClient.connectTimeoutMillis:()I
     227: aload_0
     228: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
     231: invokevirtual #274                // Method okhttp3/OkHttpClient.readTimeoutMillis:()I
     234: aload_0
     235: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
     238: invokevirtual #277                // Method okhttp3/OkHttpClient.writeTimeoutMillis:()I
     241: invokespecial #280                // Method okhttp3/internal/http/RealInterceptorChain."<init>":(Lokhttp3/internal/connection/RealCall;Ljava/util/List;ILokhttp3/internal/connection/Exchange;Lokhttp3/Request;III)V
     244: astore_2
     245: iconst_0
     246: istore_3
     247: nop
     248: aload_2
     249: aload_0
     250: getfield      #76                 // Field originalRequest:Lokhttp3/Request;
     253: invokevirtual #284                // Method okhttp3/internal/http/RealInterceptorChain.proceed:(Lokhttp3/Request;)Lokhttp3/Response;
     256: astore        4
     258: aload_0
     259: invokevirtual #286                // Method isCanceled:()Z
     262: ifeq          287
     265: aload         4
     267: checkcast     #288                // class java/io/Closeable
     270: invokestatic  #294                // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
     273: new           #204                // class java/io/IOException
     276: dup
     277: ldc_w         #296                // String Canceled
     280: invokespecial #297                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     283: checkcast     #128                // class java/lang/Throwable
     286: athrow
     287: aload         4
     289: astore        5
     291: nop
     292: aload_0
     293: aconst_null
     294: invokevirtual #301                // Method noMoreExchanges$okhttp:(Ljava/io/IOException;)Ljava/io/IOException;
     297: pop
     298: aload         5
     300: areturn
     301: astore        4
     303: iconst_1
     304: istore_3
     305: aload_0
     306: aload         4
     308: invokevirtual #301                // Method noMoreExchanges$okhttp:(Ljava/io/IOException;)Ljava/io/IOException;
     311: dup
     312: ifnonnull     326
     315: new           #303                // class java/lang/NullPointerException
     318: dup
     319: ldc_w         #305                // String null cannot be cast to non-null type kotlin.Throwable
     322: invokespecial #306                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     325: athrow
     326: checkcast     #128                // class java/lang/Throwable
     329: athrow
     330: astore        4
     332: iload_3
     333: ifne          342
     336: aload_0
     337: aconst_null
     338: invokevirtual #301                // Method noMoreExchanges$okhttp:(Ljava/io/IOException;)Ljava/io/IOException;
     341: pop
     342: aload         4
     344: athrow
    Exception table:
       from    to  target type
         247   291   301   Class java/io/IOException
         247   291   330   any
         301   330   330   any
         330   332   330   any

  public final void enterNetworkInterceptorExchange(okhttp3.Request, boolean);
    Code:
       0: aload_1
       1: ldc_w         #319                // String request
       4: invokestatic  #166                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #40                 // Field interceptorScopedExchange:Lokhttp3/internal/connection/Exchange;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore_3
      20: iconst_0
      21: istore        4
      23: iconst_0
      24: istore        5
      26: iconst_0
      27: istore        5
      29: iconst_0
      30: istore        6
      32: iload_3
      33: ifne          60
      36: iconst_0
      37: istore        7
      39: ldc_w         #321                // String Check failed.
      42: astore        6
      44: new           #119                // class java/lang/IllegalStateException
      47: dup
      48: aload         6
      50: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
      53: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: checkcast     #128                // class java/lang/Throwable
      59: athrow
      60: aload_0
      61: astore_3
      62: iconst_0
      63: istore        4
      65: iconst_0
      66: istore        5
      68: aload_3
      69: monitorenter
      70: nop
      71: iconst_0
      72: istore        6
      74: aload_0
      75: getfield      #323                // Field responseBodyOpen:Z
      78: ifne          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: istore        7
      88: iconst_0
      89: istore        8
      91: iconst_0
      92: istore        9
      94: iload         7
      96: ifne          123
      99: iconst_0
     100: istore        10
     102: ldc_w         #325                // String cannot make a new request because the previous response is still open: please call response.close()
     105: astore        9
     107: new           #119                // class java/lang/IllegalStateException
     110: dup
     111: aload         9
     113: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
     116: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     119: checkcast     #128                // class java/lang/Throwable
     122: athrow
     123: aload_0
     124: getfield      #327                // Field requestBodyOpen:Z
     127: ifne          134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: istore        7
     137: iconst_0
     138: istore        8
     140: iconst_0
     141: istore        9
     143: iconst_0
     144: istore        9
     146: iconst_0
     147: istore        10
     149: iload         7
     151: ifne          178
     154: iconst_0
     155: istore        11
     157: ldc_w         #321                // String Check failed.
     160: astore        10
     162: new           #119                // class java/lang/IllegalStateException
     165: dup
     166: aload         10
     168: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
     171: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     174: checkcast     #128                // class java/lang/Throwable
     177: athrow
     178: getstatic     #332                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     181: astore        5
     183: aload_3
     184: monitorexit
     185: goto          195
     188: astore        5
     190: aload_3
     191: monitorexit
     192: aload         5
     194: athrow
     195: iload_2
     196: ifeq          227
     199: aload_0
     200: new           #334                // class okhttp3/internal/connection/ExchangeFinder
     203: dup
     204: aload_0
     205: getfield      #336                // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
     208: aload_0
     209: aload_1
     210: invokevirtual #342                // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     213: invokespecial #346                // Method createAddress:(Lokhttp3/HttpUrl;)Lokhttp3/Address;
     216: aload_0
     217: aload_0
     218: getfield      #15                 // Field eventListener:Lokhttp3/EventListener;
     221: invokespecial #349                // Method okhttp3/internal/connection/ExchangeFinder."<init>":(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Lokhttp3/EventListener;)V
     224: putfield      #351                // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
     227: return
    Exception table:
       from    to  target type
          70   183   188   any
         188   190   188   any

  public final okhttp3.internal.connection.Exchange initExchange$okhttp(okhttp3.internal.http.RealInterceptorChain);
    Code:
       0: aload_1
       1: ldc_w         #357                // String chain
       4: invokestatic  #166                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: astore_2
       9: iconst_0
      10: istore_3
      11: iconst_0
      12: istore        4
      14: aload_2
      15: monitorenter
      16: nop
      17: iconst_0
      18: istore        5
      20: aload_0
      21: getfield      #359                // Field expectMoreExchanges:Z
      24: istore        6
      26: iconst_0
      27: istore        7
      29: iconst_0
      30: istore        8
      32: iload         6
      34: ifne          61
      37: iconst_0
      38: istore        9
      40: ldc_w         #361                // String released
      43: astore        8
      45: new           #119                // class java/lang/IllegalStateException
      48: dup
      49: aload         8
      51: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
      54: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: checkcast     #128                // class java/lang/Throwable
      60: athrow
      61: aload_0
      62: getfield      #323                // Field responseBodyOpen:Z
      65: ifne          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: istore        6
      75: iconst_0
      76: istore        7
      78: iconst_0
      79: istore        8
      81: iconst_0
      82: istore        8
      84: iconst_0
      85: istore        9
      87: iload         6
      89: ifne          116
      92: iconst_0
      93: istore        10
      95: ldc_w         #321                // String Check failed.
      98: astore        9
     100: new           #119                // class java/lang/IllegalStateException
     103: dup
     104: aload         9
     106: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
     109: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     112: checkcast     #128                // class java/lang/Throwable
     115: athrow
     116: aload_0
     117: getfield      #327                // Field requestBodyOpen:Z
     120: ifne          127
     123: iconst_1
     124: goto          128
     127: iconst_0
     128: istore        6
     130: iconst_0
     131: istore        7
     133: iconst_0
     134: istore        8
     136: iconst_0
     137: istore        8
     139: iconst_0
     140: istore        9
     142: iload         6
     144: ifne          171
     147: iconst_0
     148: istore        10
     150: ldc_w         #321                // String Check failed.
     153: astore        9
     155: new           #119                // class java/lang/IllegalStateException
     158: dup
     159: aload         9
     161: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
     164: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     167: checkcast     #128                // class java/lang/Throwable
     170: athrow
     171: getstatic     #332                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     174: astore        4
     176: aload_2
     177: monitorexit
     178: goto          188
     181: astore        4
     183: aload_2
     184: monitorexit
     185: aload         4
     187: athrow
     188: aload_0
     189: getfield      #351                // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
     192: dup
     193: invokestatic  #365                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     196: astore_2
     197: aload_2
     198: aload_0
     199: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
     202: aload_1
     203: invokevirtual #369                // Method okhttp3/internal/connection/ExchangeFinder.find:(Lokhttp3/OkHttpClient;Lokhttp3/internal/http/RealInterceptorChain;)Lokhttp3/internal/http/ExchangeCodec;
     206: astore_3
     207: new           #93                 // class okhttp3/internal/connection/Exchange
     210: dup
     211: aload_0
     212: aload_0
     213: getfield      #15                 // Field eventListener:Lokhttp3/EventListener;
     216: aload_2
     217: aload_3
     218: invokespecial #372                // Method okhttp3/internal/connection/Exchange."<init>":(Lokhttp3/internal/connection/RealCall;Lokhttp3/EventListener;Lokhttp3/internal/connection/ExchangeFinder;Lokhttp3/internal/http/ExchangeCodec;)V
     221: astore        4
     223: aload_0
     224: aload         4
     226: putfield      #40                 // Field interceptorScopedExchange:Lokhttp3/internal/connection/Exchange;
     229: aload_0
     230: aload         4
     232: putfield      #91                 // Field exchange:Lokhttp3/internal/connection/Exchange;
     235: aload_0
     236: astore        5
     238: iconst_0
     239: istore        6
     241: iconst_0
     242: istore        7
     244: aload         5
     246: monitorenter
     247: nop
     248: iconst_0
     249: istore        8
     251: aload_0
     252: iconst_1
     253: putfield      #327                // Field requestBodyOpen:Z
     256: aload_0
     257: iconst_1
     258: putfield      #323                // Field responseBodyOpen:Z
     261: getstatic     #332                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     264: astore        7
     266: aload         5
     268: monitorexit
     269: goto          280
     272: astore        7
     274: aload         5
     276: monitorexit
     277: aload         7
     279: athrow
     280: aload_0
     281: getfield      #89                 // Field canceled:Z
     284: ifeq          301
     287: new           #204                // class java/io/IOException
     290: dup
     291: ldc_w         #296                // String Canceled
     294: invokespecial #297                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     297: checkcast     #128                // class java/lang/Throwable
     300: athrow
     301: aload         4
     303: areturn
    Exception table:
       from    to  target type
          16   176   181   any
         181   183   181   any
         247   266   272   any
         272   274   272   any

  public final void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection);
    Code:
       0: aload_1
       1: ldc_w         #382                // String connection
       4: invokestatic  #166                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_1
       8: astore_2
       9: iconst_0
      10: istore_3
      11: getstatic     #385                // Field okhttp3/internal/Util.assertionsEnabled:Z
      14: ifeq          77
      17: aload_2
      18: invokestatic  #390                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      21: ifne          77
      24: new           #392                // class java/lang/AssertionError
      27: dup
      28: new           #394                // class java/lang/StringBuilder
      31: dup
      32: invokespecial #395                // Method java/lang/StringBuilder."<init>":()V
      35: ldc_w         #397                // String Thread
      38: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokestatic  #405                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      44: dup
      45: ldc_w         #407                // String Thread.currentThread()
      48: invokestatic  #410                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      51: invokevirtual #413                // Method java/lang/Thread.getName:()Ljava/lang/String;
      54: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc_w         #415                // String  MUST hold lock on
      60: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_2
      64: invokevirtual #418                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #419                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #421                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      73: checkcast     #128                // class java/lang/Throwable
      76: athrow
      77: nop
      78: aload_0
      79: getfield      #32                 // Field connection:Lokhttp3/internal/connection/RealConnection;
      82: ifnonnull     89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: istore_2
      91: iconst_0
      92: istore_3
      93: iconst_0
      94: istore        4
      96: iconst_0
      97: istore        4
      99: iconst_0
     100: istore        5
     102: iload_2
     103: ifne          130
     106: iconst_0
     107: istore        6
     109: ldc_w         #321                // String Check failed.
     112: astore        5
     114: new           #119                // class java/lang/IllegalStateException
     117: dup
     118: aload         5
     120: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
     123: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     126: checkcast     #128                // class java/lang/Throwable
     129: athrow
     130: aload_0
     131: aload_1
     132: putfield      #32                 // Field connection:Lokhttp3/internal/connection/RealConnection;
     135: aload_1
     136: invokevirtual #424                // Method okhttp3/internal/connection/RealConnection.getCalls:()Ljava/util/List;
     139: new           #426                // class okhttp3/internal/connection/RealCall$CallReference
     142: dup
     143: aload_0
     144: aload_0
     145: getfield      #200                // Field callStackTrace:Ljava/lang/Object;
     148: invokespecial #429                // Method okhttp3/internal/connection/RealCall$CallReference."<init>":(Lokhttp3/internal/connection/RealCall;Ljava/lang/Object;)V
     151: invokeinterface #430,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     156: pop
     157: return

  public final <E extends java.io.IOException> E messageDone$okhttp(okhttp3.internal.connection.Exchange, boolean, boolean, E);
    Code:
       0: aload_1
       1: ldc_w         #436                // String exchange
       4: invokestatic  #166                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_1
       8: aload_0
       9: getfield      #91                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      12: invokestatic  #440                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      15: iconst_1
      16: ixor
      17: ifeq          23
      20: aload         4
      22: areturn
      23: iconst_0
      24: istore        5
      26: iconst_0
      27: istore        6
      29: aload_0
      30: astore        7
      32: iconst_0
      33: istore        8
      35: iconst_0
      36: istore        9
      38: aload         7
      40: monitorenter
      41: nop
      42: iconst_0
      43: istore        10
      45: iload_2
      46: ifeq          56
      49: aload_0
      50: getfield      #327                // Field requestBodyOpen:Z
      53: ifne          67
      56: iload_3
      57: ifeq          134
      60: aload_0
      61: getfield      #323                // Field responseBodyOpen:Z
      64: ifeq          134
      67: iload_2
      68: ifeq          76
      71: aload_0
      72: iconst_0
      73: putfield      #327                // Field requestBodyOpen:Z
      76: iload_3
      77: ifeq          85
      80: aload_0
      81: iconst_0
      82: putfield      #323                // Field responseBodyOpen:Z
      85: aload_0
      86: getfield      #327                // Field requestBodyOpen:Z
      89: ifne          103
      92: aload_0
      93: getfield      #323                // Field responseBodyOpen:Z
      96: ifne          103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: istore        5
     106: aload_0
     107: getfield      #327                // Field requestBodyOpen:Z
     110: ifne          131
     113: aload_0
     114: getfield      #323                // Field responseBodyOpen:Z
     117: ifne          131
     120: aload_0
     121: getfield      #359                // Field expectMoreExchanges:Z
     124: ifne          131
     127: iconst_1
     128: goto          132
     131: iconst_0
     132: istore        6
     134: getstatic     #332                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     137: astore        9
     139: aload         7
     141: monitorexit
     142: goto          153
     145: astore        9
     147: aload         7
     149: monitorexit
     150: aload         9
     152: athrow
     153: iload         5
     155: ifeq          181
     158: aload_0
     159: aconst_null
     160: checkcast     #93                 // class okhttp3/internal/connection/Exchange
     163: putfield      #91                 // Field exchange:Lokhttp3/internal/connection/Exchange;
     166: aload_0
     167: getfield      #32                 // Field connection:Lokhttp3/internal/connection/RealConnection;
     170: dup
     171: ifnull        180
     174: invokevirtual #443                // Method okhttp3/internal/connection/RealConnection.incrementSuccessCount$okhttp:()V
     177: goto          181
     180: pop
     181: iload         6
     183: ifeq          193
     186: aload_0
     187: aload         4
     189: invokespecial #446                // Method callDone:(Ljava/io/IOException;)Ljava/io/IOException;
     192: areturn
     193: aload         4
     195: areturn
    Exception table:
       from    to  target type
          41   139   145   any
         145   147   145   any

  public final java.io.IOException noMoreExchanges$okhttp(java.io.IOException);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: astore_3
       4: iconst_0
       5: istore        4
       7: iconst_0
       8: istore        5
      10: aload_3
      11: monitorenter
      12: nop
      13: iconst_0
      14: istore        6
      16: aload_0
      17: getfield      #359                // Field expectMoreExchanges:Z
      20: ifeq          48
      23: aload_0
      24: iconst_0
      25: putfield      #359                // Field expectMoreExchanges:Z
      28: aload_0
      29: getfield      #327                // Field requestBodyOpen:Z
      32: ifne          46
      35: aload_0
      36: getfield      #323                // Field responseBodyOpen:Z
      39: ifne          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: istore_2
      48: getstatic     #332                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      51: astore        5
      53: aload_3
      54: monitorexit
      55: goto          65
      58: astore        5
      60: aload_3
      61: monitorexit
      62: aload         5
      64: athrow
      65: iload_2
      66: ifeq          75
      69: aload_0
      70: aload_1
      71: invokespecial #446                // Method callDone:(Ljava/io/IOException;)Ljava/io/IOException;
      74: areturn
      75: aload_1
      76: areturn
    Exception table:
       from    to  target type
          12    53    58   any
          58    60    58   any

  private final <E extends java.io.IOException> E callDone(E);
    Code:
       0: aload_0
       1: astore_2
       2: iconst_0
       3: istore_3
       4: getstatic     #385                // Field okhttp3/internal/Util.assertionsEnabled:Z
       7: ifeq          70
      10: aload_2
      11: invokestatic  #390                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      14: ifeq          70
      17: new           #392                // class java/lang/AssertionError
      20: dup
      21: new           #394                // class java/lang/StringBuilder
      24: dup
      25: invokespecial #395                // Method java/lang/StringBuilder."<init>":()V
      28: ldc_w         #397                // String Thread
      31: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokestatic  #405                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      37: dup
      38: ldc_w         #407                // String Thread.currentThread()
      41: invokestatic  #410                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      44: invokevirtual #413                // Method java/lang/Thread.getName:()Ljava/lang/String;
      47: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc_w         #454                // String  MUST NOT hold lock on
      53: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_2
      57: invokevirtual #418                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: invokevirtual #419                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #421                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      66: checkcast     #128                // class java/lang/Throwable
      69: athrow
      70: nop
      71: aload_0
      72: getfield      #32                 // Field connection:Lokhttp3/internal/connection/RealConnection;
      75: astore_2
      76: aload_2
      77: ifnull        274
      80: aload_2
      81: astore_3
      82: iconst_0
      83: istore        4
      85: getstatic     #385                // Field okhttp3/internal/Util.assertionsEnabled:Z
      88: ifeq          151
      91: aload_3
      92: invokestatic  #390                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      95: ifeq          151
      98: new           #392                // class java/lang/AssertionError
     101: dup
     102: new           #394                // class java/lang/StringBuilder
     105: dup
     106: invokespecial #395                // Method java/lang/StringBuilder."<init>":()V
     109: ldc_w         #397                // String Thread
     112: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: invokestatic  #405                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     118: dup
     119: ldc_w         #407                // String Thread.currentThread()
     122: invokestatic  #410                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     125: invokevirtual #413                // Method java/lang/Thread.getName:()Ljava/lang/String;
     128: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc_w         #454                // String  MUST NOT hold lock on
     134: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload_3
     138: invokevirtual #418                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     141: invokevirtual #419                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokespecial #421                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     147: checkcast     #128                // class java/lang/Throwable
     150: athrow
     151: nop
     152: iconst_0
     153: istore        4
     155: iconst_0
     156: istore        5
     158: aload_2
     159: monitorenter
     160: nop
     161: iconst_0
     162: istore        6
     164: aload_0
     165: invokevirtual #458                // Method releaseConnectionNoEvents$okhttp:()Ljava/net/Socket;
     168: astore        5
     170: aload_2
     171: monitorexit
     172: aload         5
     174: goto          184
     177: astore        5
     179: aload_2
     180: monitorexit
     181: aload         5
     183: athrow
     184: astore_3
     185: aload_0
     186: getfield      #32                 // Field connection:Lokhttp3/internal/connection/RealConnection;
     189: ifnonnull     222
     192: aload_3
     193: dup
     194: ifnull        203
     197: invokestatic  #461                // Method okhttp3/internal/Util.closeQuietly:(Ljava/net/Socket;)V
     200: goto          204
     203: pop
     204: aload_0
     205: getfield      #15                 // Field eventListener:Lokhttp3/EventListener;
     208: aload_0
     209: checkcast     #6                  // class okhttp3/Call
     212: aload_2
     213: checkcast     #463                // class okhttp3/Connection
     216: invokevirtual #467                // Method okhttp3/EventListener.connectionReleased:(Lokhttp3/Call;Lokhttp3/Connection;)V
     219: goto          274
     222: aload_3
     223: ifnonnull     230
     226: iconst_1
     227: goto          231
     230: iconst_0
     231: istore        4
     233: iconst_0
     234: istore        5
     236: iconst_0
     237: istore        6
     239: iconst_0
     240: istore        6
     242: iconst_0
     243: istore        7
     245: iload         4
     247: ifne          274
     250: iconst_0
     251: istore        8
     253: ldc_w         #321                // String Check failed.
     256: astore        7
     258: new           #119                // class java/lang/IllegalStateException
     261: dup
     262: aload         7
     264: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
     267: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     270: checkcast     #128                // class java/lang/Throwable
     273: athrow
     274: aload_0
     275: aload_1
     276: invokespecial #470                // Method timeoutExit:(Ljava/io/IOException;)Ljava/io/IOException;
     279: astore_3
     280: aload_1
     281: ifnull        303
     284: aload_0
     285: getfield      #15                 // Field eventListener:Lokhttp3/EventListener;
     288: aload_0
     289: checkcast     #6                  // class okhttp3/Call
     292: aload_3
     293: dup
     294: invokestatic  #365                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
     297: invokevirtual #474                // Method okhttp3/EventListener.callFailed:(Lokhttp3/Call;Ljava/io/IOException;)V
     300: goto          314
     303: aload_0
     304: getfield      #15                 // Field eventListener:Lokhttp3/EventListener;
     307: aload_0
     308: checkcast     #6                  // class okhttp3/Call
     311: invokevirtual #477                // Method okhttp3/EventListener.callEnd:(Lokhttp3/Call;)V
     314: aload_3
     315: areturn
    Exception table:
       from    to  target type
         160   170   177   any
         177   179   177   any

  public final java.net.Socket releaseConnectionNoEvents$okhttp();
    Code:
       0: aload_0
       1: getfield      #32                 // Field connection:Lokhttp3/internal/connection/RealConnection;
       4: dup
       5: invokestatic  #365                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
       8: astore_1
       9: aload_1
      10: astore_2
      11: iconst_0
      12: istore_3
      13: getstatic     #385                // Field okhttp3/internal/Util.assertionsEnabled:Z
      16: ifeq          79
      19: aload_2
      20: invokestatic  #390                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      23: ifne          79
      26: new           #392                // class java/lang/AssertionError
      29: dup
      30: new           #394                // class java/lang/StringBuilder
      33: dup
      34: invokespecial #395                // Method java/lang/StringBuilder."<init>":()V
      37: ldc_w         #397                // String Thread
      40: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokestatic  #405                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      46: dup
      47: ldc_w         #407                // String Thread.currentThread()
      50: invokestatic  #410                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      53: invokevirtual #413                // Method java/lang/Thread.getName:()Ljava/lang/String;
      56: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc_w         #415                // String  MUST hold lock on
      62: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_2
      66: invokevirtual #418                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: invokevirtual #419                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #421                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      75: checkcast     #128                // class java/lang/Throwable
      78: athrow
      79: nop
      80: aload_1
      81: invokevirtual #424                // Method okhttp3/internal/connection/RealConnection.getCalls:()Ljava/util/List;
      84: astore_2
      85: aload_2
      86: astore        4
      88: iconst_0
      89: istore        5
      91: iconst_0
      92: istore        6
      94: aload         4
      96: invokeinterface #488,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     101: astore        7
     103: aload         7
     105: invokeinterface #493,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          161
     113: aload         7
     115: invokeinterface #496,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     120: astore        8
     122: aload         8
     124: checkcast     #498                // class java/lang/ref/Reference
     127: astore        9
     129: iconst_0
     130: istore        10
     132: aload         9
     134: invokevirtual #500                // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
     137: checkcast     #2                  // class okhttp3/internal/connection/RealCall
     140: aload_0
     141: checkcast     #2                  // class okhttp3/internal/connection/RealCall
     144: invokestatic  #440                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     147: ifeq          155
     150: iload         6
     152: goto          162
     155: iinc          6, 1
     158: goto          103
     161: iconst_m1
     162: istore_3
     163: iload_3
     164: iconst_m1
     165: if_icmpeq     172
     168: iconst_1
     169: goto          173
     172: iconst_0
     173: istore        4
     175: iconst_0
     176: istore        5
     178: iconst_0
     179: istore        6
     181: iconst_0
     182: istore        6
     184: iconst_0
     185: istore        7
     187: iload         4
     189: ifne          216
     192: iconst_0
     193: istore        8
     195: ldc_w         #321                // String Check failed.
     198: astore        7
     200: new           #119                // class java/lang/IllegalStateException
     203: dup
     204: aload         7
     206: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
     209: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     212: checkcast     #128                // class java/lang/Throwable
     215: athrow
     216: aload_2
     217: iload_3
     218: invokeinterface #504,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     223: pop
     224: aload_0
     225: aconst_null
     226: checkcast     #97                 // class okhttp3/internal/connection/RealConnection
     229: putfield      #32                 // Field connection:Lokhttp3/internal/connection/RealConnection;
     232: aload_2
     233: invokeinterface #507,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     238: ifeq          264
     241: aload_1
     242: invokestatic  #513                // Method java/lang/System.nanoTime:()J
     245: invokevirtual #517                // Method okhttp3/internal/connection/RealConnection.setIdleAtNs$okhttp:(J)V
     248: aload_0
     249: getfield      #336                // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
     252: aload_1
     253: invokevirtual #523                // Method okhttp3/internal/connection/RealConnectionPool.connectionBecameIdle:(Lokhttp3/internal/connection/RealConnection;)Z
     256: ifeq          264
     259: aload_1
     260: invokevirtual #525                // Method okhttp3/internal/connection/RealConnection.socket:()Ljava/net/Socket;
     263: areturn
     264: aconst_null
     265: areturn

  private final <E extends java.io.IOException> E timeoutExit(E);
    Code:
       0: aload_0
       1: getfield      #536                // Field timeoutEarlyExit:Z
       4: ifeq          9
       7: aload_1
       8: areturn
       9: aload_0
      10: getfield      #60                 // Field timeout:Lokhttp3/internal/connection/RealCall$timeout$1;
      13: invokevirtual #539                // Method okhttp3/internal/connection/RealCall$timeout$1.exit:()Z
      16: ifne          21
      19: aload_1
      20: areturn
      21: new           #541                // class java/io/InterruptedIOException
      24: dup
      25: ldc_w         #542                // String timeout
      28: invokespecial #543                // Method java/io/InterruptedIOException."<init>":(Ljava/lang/String;)V
      31: astore_2
      32: aload_1
      33: ifnull        45
      36: aload_2
      37: aload_1
      38: checkcast     #128                // class java/lang/Throwable
      41: invokevirtual #547                // Method java/io/InterruptedIOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      44: pop
      45: aload_2
      46: checkcast     #204                // class java/io/IOException
      49: areturn

  public final void timeoutEarlyExit();
    Code:
       0: aload_0
       1: getfield      #536                // Field timeoutEarlyExit:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_1
      13: iconst_0
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iconst_0
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload_1
      23: ifne          50
      26: iconst_0
      27: istore        5
      29: ldc_w         #321                // String Check failed.
      32: astore        4
      34: new           #119                // class java/lang/IllegalStateException
      37: dup
      38: aload         4
      40: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: checkcast     #128                // class java/lang/Throwable
      49: athrow
      50: aload_0
      51: iconst_1
      52: putfield      #536                // Field timeoutEarlyExit:Z
      55: aload_0
      56: getfield      #60                 // Field timeout:Lokhttp3/internal/connection/RealCall$timeout$1;
      59: invokevirtual #539                // Method okhttp3/internal/connection/RealCall$timeout$1.exit:()Z
      62: pop
      63: return

  public final void exitNetworkInterceptorExchange$okhttp(boolean);
    Code:
       0: aload_0
       1: astore_2
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        4
       7: aload_2
       8: monitorenter
       9: nop
      10: iconst_0
      11: istore        5
      13: aload_0
      14: getfield      #359                // Field expectMoreExchanges:Z
      17: istore        6
      19: iconst_0
      20: istore        7
      22: iconst_0
      23: istore        8
      25: iload         6
      27: ifne          54
      30: iconst_0
      31: istore        9
      33: ldc_w         #361                // String released
      36: astore        8
      38: new           #119                // class java/lang/IllegalStateException
      41: dup
      42: aload         8
      44: invokevirtual #123                // Method java/lang/Object.toString:()Ljava/lang/String;
      47: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      50: checkcast     #128                // class java/lang/Throwable
      53: athrow
      54: getstatic     #332                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      57: astore        4
      59: aload_2
      60: monitorexit
      61: goto          71
      64: astore        4
      66: aload_2
      67: monitorexit
      68: aload         4
      70: athrow
      71: iload_1
      72: ifeq          90
      75: aload_0
      76: getfield      #91                 // Field exchange:Lokhttp3/internal/connection/Exchange;
      79: dup
      80: ifnull        89
      83: invokevirtual #553                // Method okhttp3/internal/connection/Exchange.detachWithViolence:()V
      86: goto          90
      89: pop
      90: aload_0
      91: aconst_null
      92: checkcast     #93                 // class okhttp3/internal/connection/Exchange
      95: putfield      #40                 // Field interceptorScopedExchange:Lokhttp3/internal/connection/Exchange;
      98: return
    Exception table:
       from    to  target type
           9    59    64   any
          64    66    64   any

  private final okhttp3.Address createAddress(okhttp3.HttpUrl);
    Code:
       0: aconst_null
       1: checkcast     #558                // class javax/net/ssl/SSLSocketFactory
       4: astore_2
       5: aconst_null
       6: checkcast     #560                // class javax/net/ssl/HostnameVerifier
       9: astore_3
      10: aconst_null
      11: checkcast     #562                // class okhttp3/CertificatePinner
      14: astore        4
      16: aload_1
      17: invokevirtual #567                // Method okhttp3/HttpUrl.isHttps:()Z
      20: ifeq          48
      23: aload_0
      24: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      27: invokevirtual #571                // Method okhttp3/OkHttpClient.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
      30: astore_2
      31: aload_0
      32: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      35: invokevirtual #575                // Method okhttp3/OkHttpClient.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;
      38: astore_3
      39: aload_0
      40: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      43: invokevirtual #579                // Method okhttp3/OkHttpClient.certificatePinner:()Lokhttp3/CertificatePinner;
      46: astore        4
      48: new           #581                // class okhttp3/Address
      51: dup
      52: aload_1
      53: invokevirtual #584                // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      56: aload_1
      57: invokevirtual #587                // Method okhttp3/HttpUrl.port:()I
      60: aload_0
      61: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      64: invokevirtual #591                // Method okhttp3/OkHttpClient.dns:()Lokhttp3/Dns;
      67: aload_0
      68: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      71: invokevirtual #595                // Method okhttp3/OkHttpClient.socketFactory:()Ljavax/net/SocketFactory;
      74: aload_2
      75: aload_3
      76: aload         4
      78: aload_0
      79: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      82: invokevirtual #599                // Method okhttp3/OkHttpClient.proxyAuthenticator:()Lokhttp3/Authenticator;
      85: aload_0
      86: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      89: invokevirtual #603                // Method okhttp3/OkHttpClient.proxy:()Ljava/net/Proxy;
      92: aload_0
      93: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      96: invokevirtual #606                // Method okhttp3/OkHttpClient.protocols:()Ljava/util/List;
      99: aload_0
     100: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
     103: invokevirtual #609                // Method okhttp3/OkHttpClient.connectionSpecs:()Ljava/util/List;
     106: aload_0
     107: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
     110: invokevirtual #613                // Method okhttp3/OkHttpClient.proxySelector:()Ljava/net/ProxySelector;
     113: invokespecial #616                // Method okhttp3/Address."<init>":(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V
     116: areturn

  public final boolean retryAfterFailure();
    Code:
       0: aload_0
       1: getfield      #351                // Field exchangeFinder:Lokhttp3/internal/connection/ExchangeFinder;
       4: dup
       5: invokestatic  #365                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
       8: invokevirtual #623                // Method okhttp3/internal/connection/ExchangeFinder.retryAfterFailure:()Z
      11: ireturn

  private final java.lang.String toLoggableString();
    Code:
       0: new           #394                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #395                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #286                // Method isCanceled:()Z
      11: ifeq          20
      14: ldc_w         #626                // String canceled
      17: goto          23
      20: ldc_w         #628                // String
      23: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #79                 // Field forWebSocket:Z
      30: ifeq          39
      33: ldc_w         #630                // String web socket
      36: goto          42
      39: ldc_w         #632                // String call
      42: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc_w         #634                // String  to
      48: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: invokevirtual #637                // Method redactedUrl$okhttp:()Ljava/lang/String;
      55: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #419                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  public final java.lang.String redactedUrl$okhttp();
    Code:
       0: aload_0
       1: getfield      #76                 // Field originalRequest:Lokhttp3/Request;
       4: invokevirtual #342                // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
       7: invokevirtual #642                // Method okhttp3/HttpUrl.redact:()Ljava/lang/String;
      10: areturn

  public final okhttp3.OkHttpClient getClient();
    Code:
       0: aload_0
       1: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
       4: areturn

  public final okhttp3.Request getOriginalRequest();
    Code:
       0: aload_0
       1: getfield      #76                 // Field originalRequest:Lokhttp3/Request;
       4: areturn

  public final boolean getForWebSocket();
    Code:
       0: aload_0
       1: getfield      #79                 // Field forWebSocket:Z
       4: ireturn

  public okhttp3.internal.connection.RealCall(okhttp3.OkHttpClient, okhttp3.Request, boolean);
    Code:
       0: aload_1
       1: ldc_w         #647                // String client
       4: invokestatic  #166                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_2
       8: ldc_w         #648                // String originalRequest
      11: invokestatic  #166                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_0
      15: invokespecial #649                // Method java/lang/Object."<init>":()V
      18: aload_0
      19: aload_1
      20: putfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      23: aload_0
      24: aload_2
      25: putfield      #76                 // Field originalRequest:Lokhttp3/Request;
      28: aload_0
      29: iload_3
      30: putfield      #79                 // Field forWebSocket:Z
      33: aload_0
      34: aload_0
      35: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      38: invokevirtual #652                // Method okhttp3/OkHttpClient.connectionPool:()Lokhttp3/ConnectionPool;
      41: invokevirtual #658                // Method okhttp3/ConnectionPool.getDelegate$okhttp:()Lokhttp3/internal/connection/RealConnectionPool;
      44: putfield      #336                // Field connectionPool:Lokhttp3/internal/connection/RealConnectionPool;
      47: aload_0
      48: aload_0
      49: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      52: invokevirtual #662                // Method okhttp3/OkHttpClient.eventListenerFactory:()Lokhttp3/EventListener$Factory;
      55: aload_0
      56: checkcast     #6                  // class okhttp3/Call
      59: invokeinterface #668,  2          // InterfaceMethod okhttp3/EventListener$Factory.create:(Lokhttp3/Call;)Lokhttp3/EventListener;
      64: putfield      #15                 // Field eventListener:Lokhttp3/EventListener;
      67: aload_0
      68: new           #130                // class okhttp3/internal/connection/RealCall$timeout$1
      71: dup
      72: aload_0
      73: invokespecial #670                // Method okhttp3/internal/connection/RealCall$timeout$1."<init>":(Lokhttp3/internal/connection/RealCall;)V
      76: astore        4
      78: iconst_0
      79: istore        5
      81: iconst_0
      82: istore        6
      84: aload         4
      86: astore        7
      88: astore        9
      90: iconst_0
      91: istore        8
      93: aload         7
      95: aload_0
      96: getfield      #72                 // Field client:Lokhttp3/OkHttpClient;
      99: invokevirtual #673                // Method okhttp3/OkHttpClient.callTimeoutMillis:()I
     102: i2l
     103: getstatic     #679                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     106: invokevirtual #682                // Method okhttp3/internal/connection/RealCall$timeout$1.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;
     109: pop
     110: getstatic     #332                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     113: astore        10
     115: aload         9
     117: aload         4
     119: putfield      #60                 // Field timeout:Lokhttp3/internal/connection/RealCall$timeout$1;
     122: aload_0
     123: new           #111                // class java/util/concurrent/atomic/AtomicBoolean
     126: dup
     127: invokespecial #683                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
     130: putfield      #109                // Field executed:Ljava/util/concurrent/atomic/AtomicBoolean;
     133: aload_0
     134: iconst_1
     135: putfield      #359                // Field expectMoreExchanges:Z
     138: return

  public static final okhttp3.internal.connection.RealCall$timeout$1 access$getTimeout$p(okhttp3.internal.connection.RealCall);
    Code:
       0: aload_0
       1: getfield      #60                 // Field timeout:Lokhttp3/internal/connection/RealCall$timeout$1;
       4: areturn

  public static final java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall);
    Code:
       0: aload_0
       1: invokespecial #692                // Method toLoggableString:()Ljava/lang/String;
       4: areturn
}
