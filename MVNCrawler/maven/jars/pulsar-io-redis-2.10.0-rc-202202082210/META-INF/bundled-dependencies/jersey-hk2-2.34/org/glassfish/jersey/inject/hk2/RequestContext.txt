Compiled from "RequestContext.java"
public class org.glassfish.jersey.inject.hk2.RequestContext implements org.glassfish.hk2.api.Context<org.glassfish.jersey.process.internal.RequestScoped> {
  private final org.glassfish.jersey.process.internal.RequestScope requestScope;

  public org.glassfish.jersey.inject.hk2.RequestContext(org.glassfish.jersey.process.internal.RequestScope);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field requestScope:Lorg/glassfish/jersey/process/internal/RequestScope;
       9: return

  public java.lang.Class<? extends java.lang.annotation.Annotation> getScope();
    Code:
       0: ldc           #3                  // class org/glassfish/jersey/process/internal/RequestScoped
       2: areturn

  public <U> U findOrCreate(org.glassfish.hk2.api.ActiveDescriptor<U>, org.glassfish.hk2.api.ServiceHandle<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field requestScope:Lorg/glassfish/jersey/process/internal/RequestScope;
       4: invokevirtual #4                  // Method org/glassfish/jersey/process/internal/RequestScope.current:()Lorg/glassfish/jersey/process/internal/RequestContext;
       7: checkcast     #5                  // class org/glassfish/jersey/inject/hk2/Hk2RequestScope$Instance
      10: astore_3
      11: aload_3
      12: aload_1
      13: invokestatic  #6                  // InterfaceMethod org/glassfish/jersey/internal/inject/ForeignDescriptor.wrap:(Ljava/lang/Object;)Lorg/glassfish/jersey/internal/inject/ForeignDescriptor;
      16: invokevirtual #7                  // Method org/glassfish/jersey/inject/hk2/Hk2RequestScope$Instance.get:(Lorg/glassfish/jersey/internal/inject/ForeignDescriptor;)Ljava/lang/Object;
      19: astore        4
      21: aload         4
      23: ifnonnull     52
      26: aload_1
      27: aload_2
      28: invokeinterface #8,  2            // InterfaceMethod org/glassfish/hk2/api/ActiveDescriptor.create:(Lorg/glassfish/hk2/api/ServiceHandle;)Ljava/lang/Object;
      33: astore        4
      35: aload_3
      36: aload_1
      37: aload_1
      38: invokedynamic #9,  0              // InvokeDynamic #0:accept:(Lorg/glassfish/hk2/api/ActiveDescriptor;)Ljava/util/function/Consumer;
      43: invokestatic  #10                 // InterfaceMethod org/glassfish/jersey/internal/inject/ForeignDescriptor.wrap:(Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/glassfish/jersey/internal/inject/ForeignDescriptor;
      46: aload         4
      48: invokevirtual #11                 // Method org/glassfish/jersey/inject/hk2/Hk2RequestScope$Instance.put:(Lorg/glassfish/jersey/internal/inject/ForeignDescriptor;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: aload         4
      54: areturn

  public boolean containsKey(org.glassfish.hk2.api.ActiveDescriptor<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field requestScope:Lorg/glassfish/jersey/process/internal/RequestScope;
       4: invokevirtual #4                  // Method org/glassfish/jersey/process/internal/RequestScope.current:()Lorg/glassfish/jersey/process/internal/RequestContext;
       7: checkcast     #5                  // class org/glassfish/jersey/inject/hk2/Hk2RequestScope$Instance
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokestatic  #6                  // InterfaceMethod org/glassfish/jersey/internal/inject/ForeignDescriptor.wrap:(Ljava/lang/Object;)Lorg/glassfish/jersey/internal/inject/ForeignDescriptor;
      16: invokevirtual #12                 // Method org/glassfish/jersey/inject/hk2/Hk2RequestScope$Instance.contains:(Lorg/glassfish/jersey/internal/inject/ForeignDescriptor;)Z
      19: ireturn

  public boolean supportsNullCreation();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field requestScope:Lorg/glassfish/jersey/process/internal/RequestScope;
       4: invokevirtual #13                 // Method org/glassfish/jersey/process/internal/RequestScope.isActive:()Z
       7: ireturn

  public void destroyOne(org.glassfish.hk2.api.ActiveDescriptor<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field requestScope:Lorg/glassfish/jersey/process/internal/RequestScope;
       4: invokevirtual #4                  // Method org/glassfish/jersey/process/internal/RequestScope.current:()Lorg/glassfish/jersey/process/internal/RequestContext;
       7: checkcast     #5                  // class org/glassfish/jersey/inject/hk2/Hk2RequestScope$Instance
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokestatic  #6                  // InterfaceMethod org/glassfish/jersey/internal/inject/ForeignDescriptor.wrap:(Ljava/lang/Object;)Lorg/glassfish/jersey/internal/inject/ForeignDescriptor;
      16: invokevirtual #14                 // Method org/glassfish/jersey/inject/hk2/Hk2RequestScope$Instance.remove:(Lorg/glassfish/jersey/internal/inject/ForeignDescriptor;)V
      19: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field requestScope:Lorg/glassfish/jersey/process/internal/RequestScope;
       4: invokevirtual #15                 // Method org/glassfish/jersey/process/internal/RequestScope.shutdown:()V
       7: return

  private static void lambda$findOrCreate$0(org.glassfish.hk2.api.ActiveDescriptor, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #16,  2           // InterfaceMethod org/glassfish/hk2/api/ActiveDescriptor.dispose:(Ljava/lang/Object;)V
       7: return
}
