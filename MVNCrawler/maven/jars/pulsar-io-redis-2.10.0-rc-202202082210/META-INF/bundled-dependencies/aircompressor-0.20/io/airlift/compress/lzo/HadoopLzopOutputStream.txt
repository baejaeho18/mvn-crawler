Compiled from "HadoopLzopOutputStream.java"
class io.airlift.compress.lzo.HadoopLzopOutputStream extends org.apache.hadoop.io.compress.CompressionOutputStream {
  private static final int LZOP_FILE_VERSION;

  private static final int LZOP_FORMAT_VERSION;

  private static final int LZO_FORMAT_VERSION;

  private static final int LEVEL;

  private final io.airlift.compress.lzo.LzoCompressor compressor;

  private final byte[] inputBuffer;

  private final int inputMaxSize;

  private int inputOffset;

  private final byte[] outputBuffer;

  public io.airlift.compress.lzo.HadoopLzopOutputStream(java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/hadoop/io/compress/CompressionOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: aload_0
       6: new           #11                 // class io/airlift/compress/lzo/LzoCompressor
       9: dup
      10: invokespecial #13                 // Method io/airlift/compress/lzo/LzoCompressor."<init>":()V
      13: putfield      #16                 // Field compressor:Lio/airlift/compress/lzo/LzoCompressor;
      16: aload_0
      17: iload_2
      18: newarray       byte
      20: putfield      #22                 // Field inputBuffer:[B
      23: aload_0
      24: aload_0
      25: getfield      #22                 // Field inputBuffer:[B
      28: arraylength
      29: iload_2
      30: invokestatic  #26                 // Method compressionOverhead:(I)I
      33: isub
      34: putfield      #30                 // Field inputMaxSize:I
      37: aload_0
      38: aload_0
      39: getfield      #16                 // Field compressor:Lio/airlift/compress/lzo/LzoCompressor;
      42: aload_0
      43: getfield      #30                 // Field inputMaxSize:I
      46: invokevirtual #34                 // Method io/airlift/compress/lzo/LzoCompressor.maxCompressedLength:(I)I
      49: bipush        8
      51: iadd
      52: newarray       byte
      54: putfield      #37                 // Field outputBuffer:[B
      57: aload_1
      58: getstatic     #40                 // Field io/airlift/compress/lzo/LzopCodec.LZOP_MAGIC:[B
      61: invokevirtual #43                 // Method java/io/OutputStream.write:([B)V
      64: new           #49                 // class java/io/ByteArrayOutputStream
      67: dup
      68: bipush        25
      70: invokespecial #51                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
      73: astore_3
      74: new           #54                 // class java/io/DataOutputStream
      77: dup
      78: aload_3
      79: invokespecial #56                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      82: astore        4
      84: aload         4
      86: sipush        4112
      89: invokevirtual #57                 // Method java/io/DataOutputStream.writeShort:(I)V
      92: aload         4
      94: sipush        8272
      97: invokevirtual #57                 // Method java/io/DataOutputStream.writeShort:(I)V
     100: aload         4
     102: sipush        2368
     105: invokevirtual #57                 // Method java/io/DataOutputStream.writeShort:(I)V
     108: aload         4
     110: iconst_1
     111: invokevirtual #60                 // Method java/io/DataOutputStream.writeByte:(I)V
     114: aload         4
     116: iconst_5
     117: invokevirtual #60                 // Method java/io/DataOutputStream.writeByte:(I)V
     120: aload         4
     122: iconst_0
     123: invokevirtual #63                 // Method java/io/DataOutputStream.writeInt:(I)V
     126: aload         4
     128: ldc           #66                 // int 33188
     130: invokevirtual #63                 // Method java/io/DataOutputStream.writeInt:(I)V
     133: aload         4
     135: invokestatic  #67                 // Method java/lang/System.currentTimeMillis:()J
     138: ldc2_w        #73                 // long 1000l
     141: ldiv
     142: l2i
     143: invokevirtual #63                 // Method java/io/DataOutputStream.writeInt:(I)V
     146: aload         4
     148: iconst_0
     149: invokevirtual #63                 // Method java/io/DataOutputStream.writeInt:(I)V
     152: aload         4
     154: iconst_0
     155: invokevirtual #60                 // Method java/io/DataOutputStream.writeByte:(I)V
     158: aload_3
     159: invokevirtual #75                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     162: astore        5
     164: aload_1
     165: aload         5
     167: invokevirtual #43                 // Method java/io/OutputStream.write:([B)V
     170: new           #79                 // class java/util/zip/Adler32
     173: dup
     174: invokespecial #81                 // Method java/util/zip/Adler32."<init>":()V
     177: astore        6
     179: aload         6
     181: aload         5
     183: invokevirtual #82                 // Method java/util/zip/Adler32.update:([B)V
     186: aload_0
     187: aload         6
     189: invokevirtual #85                 // Method java/util/zip/Adler32.getValue:()J
     192: l2i
     193: invokespecial #88                 // Method writeBigEndianInt:(I)V
     196: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field inputBuffer:[B
       4: aload_0
       5: dup
       6: getfield      #91                 // Field inputOffset:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #91                 // Field inputOffset:I
      15: iload_1
      16: i2b
      17: bastore
      18: aload_0
      19: getfield      #91                 // Field inputOffset:I
      22: aload_0
      23: getfield      #30                 // Field inputMaxSize:I
      26: if_icmplt     42
      29: aload_0
      30: aload_0
      31: getfield      #22                 // Field inputBuffer:[B
      34: iconst_0
      35: aload_0
      36: getfield      #91                 // Field inputOffset:I
      39: invokespecial #94                 // Method writeNextChunk:([BII)V
      42: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          108
       4: iload_3
       5: aload_0
       6: getfield      #30                 // Field inputMaxSize:I
       9: aload_0
      10: getfield      #91                 // Field inputOffset:I
      13: isub
      14: invokestatic  #98                 // Method java/lang/Math.min:(II)I
      17: istore        4
      19: aload_0
      20: getfield      #91                 // Field inputOffset:I
      23: ifne          45
      26: iload_3
      27: aload_0
      28: getfield      #30                 // Field inputMaxSize:I
      31: if_icmple     45
      34: aload_0
      35: aload_1
      36: iload_2
      37: iload         4
      39: invokespecial #94                 // Method writeNextChunk:([BII)V
      42: goto          95
      45: aload_1
      46: iload_2
      47: aload_0
      48: getfield      #22                 // Field inputBuffer:[B
      51: aload_0
      52: getfield      #91                 // Field inputOffset:I
      55: iload         4
      57: invokestatic  #104                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      60: aload_0
      61: dup
      62: getfield      #91                 // Field inputOffset:I
      65: iload         4
      67: iadd
      68: putfield      #91                 // Field inputOffset:I
      71: aload_0
      72: getfield      #91                 // Field inputOffset:I
      75: aload_0
      76: getfield      #30                 // Field inputMaxSize:I
      79: if_icmplt     95
      82: aload_0
      83: aload_0
      84: getfield      #22                 // Field inputBuffer:[B
      87: iconst_0
      88: aload_0
      89: getfield      #91                 // Field inputOffset:I
      92: invokespecial #94                 // Method writeNextChunk:([BII)V
      95: iload_3
      96: iload         4
      98: isub
      99: istore_3
     100: iload_2
     101: iload         4
     103: iadd
     104: istore_2
     105: goto          0
     108: return

  public void finish() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #91                 // Field inputOffset:I
       4: ifle          20
       7: aload_0
       8: aload_0
       9: getfield      #22                 // Field inputBuffer:[B
      12: iconst_0
      13: aload_0
      14: getfield      #91                 // Field inputOffset:I
      17: invokespecial #94                 // Method writeNextChunk:([BII)V
      20: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #108                // Method finish:()V
       4: aload_0
       5: iconst_0
       6: invokespecial #88                 // Method writeBigEndianInt:(I)V
       9: aload_0
      10: invokespecial #111                // Method org/apache/hadoop/io/compress/CompressionOutputStream.close:()V
      13: return

  public void resetState() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #108                // Method finish:()V
       4: return

  private void writeNextChunk(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field compressor:Lio/airlift/compress/lzo/LzoCompressor;
       4: aload_1
       5: iload_2
       6: iload_3
       7: aload_0
       8: getfield      #37                 // Field outputBuffer:[B
      11: iconst_0
      12: aload_0
      13: getfield      #37                 // Field outputBuffer:[B
      16: arraylength
      17: invokevirtual #114                // Method io/airlift/compress/lzo/LzoCompressor.compress:([BII[BII)I
      20: istore        4
      22: aload_0
      23: iload_3
      24: invokespecial #88                 // Method writeBigEndianInt:(I)V
      27: iload         4
      29: iload_3
      30: if_icmpge     56
      33: aload_0
      34: iload         4
      36: invokespecial #88                 // Method writeBigEndianInt:(I)V
      39: aload_0
      40: getfield      #118                // Field out:Ljava/io/OutputStream;
      43: aload_0
      44: getfield      #37                 // Field outputBuffer:[B
      47: iconst_0
      48: iload         4
      50: invokevirtual #122                // Method java/io/OutputStream.write:([BII)V
      53: goto          71
      56: aload_0
      57: iload_3
      58: invokespecial #88                 // Method writeBigEndianInt:(I)V
      61: aload_0
      62: getfield      #118                // Field out:Ljava/io/OutputStream;
      65: aload_1
      66: iload_2
      67: iload_3
      68: invokevirtual #122                // Method java/io/OutputStream.write:([BII)V
      71: aload_0
      72: iconst_0
      73: putfield      #91                 // Field inputOffset:I
      76: return

  private void writeBigEndianInt(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #118                // Field out:Ljava/io/OutputStream;
       4: iload_1
       5: bipush        24
       7: iushr
       8: invokevirtual #124                // Method java/io/OutputStream.write:(I)V
      11: aload_0
      12: getfield      #118                // Field out:Ljava/io/OutputStream;
      15: iload_1
      16: bipush        16
      18: iushr
      19: invokevirtual #124                // Method java/io/OutputStream.write:(I)V
      22: aload_0
      23: getfield      #118                // Field out:Ljava/io/OutputStream;
      26: iload_1
      27: bipush        8
      29: iushr
      30: invokevirtual #124                // Method java/io/OutputStream.write:(I)V
      33: aload_0
      34: getfield      #118                // Field out:Ljava/io/OutputStream;
      37: iload_1
      38: invokevirtual #124                // Method java/io/OutputStream.write:(I)V
      41: return

  private static int compressionOverhead(int);
    Code:
       0: iload_0
       1: bipush        16
       3: idiv
       4: bipush        64
       6: iadd
       7: iconst_3
       8: iadd
       9: ireturn
}
