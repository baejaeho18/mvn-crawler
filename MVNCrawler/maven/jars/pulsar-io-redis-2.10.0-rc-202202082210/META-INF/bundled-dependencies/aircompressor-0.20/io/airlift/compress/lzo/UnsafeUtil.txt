Compiled from "UnsafeUtil.java"
final class io.airlift.compress.lzo.UnsafeUtil {
  public static final sun.misc.Unsafe UNSAFE;

  private static final long ADDRESS_OFFSET;

  private io.airlift.compress.lzo.UnsafeUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static long getAddress(java.nio.Buffer);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/Buffer.isDirect:()Z
       4: ifne          17
       7: new           #13                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #15                 // String buffer is not direct
      13: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: getstatic     #20                 // Field UNSAFE:Lsun/misc/Unsafe;
      20: aload_0
      21: getstatic     #26                 // Field ADDRESS_OFFSET:J
      24: invokevirtual #30                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      27: lreturn

  static {};
    Code:
       0: invokestatic  #36                 // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
       3: astore_0
       4: aload_0
       5: getstatic     #42                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       8: invokevirtual #46                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifne          35
      14: new           #50                 // class io/airlift/compress/IncompatibleJvmException
      17: dup
      18: ldc           #52                 // String LZO requires a little endian platform (found %s)
      20: iconst_1
      21: anewarray     #2                  // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_0
      27: aastore
      28: invokestatic  #54                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: invokespecial #60                 // Method io/airlift/compress/IncompatibleJvmException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: ldc           #31                 // class sun/misc/Unsafe
      37: ldc           #61                 // String theUnsafe
      39: invokevirtual #63                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      42: astore_1
      43: aload_1
      44: iconst_1
      45: invokevirtual #69                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      48: aload_1
      49: aconst_null
      50: invokevirtual #75                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #31                 // class sun/misc/Unsafe
      56: putstatic     #20                 // Field UNSAFE:Lsun/misc/Unsafe;
      59: goto          73
      62: astore_1
      63: new           #50                 // class io/airlift/compress/IncompatibleJvmException
      66: dup
      67: ldc           #81                 // String LZO requires access to sun.misc.Unsafe
      69: invokespecial #60                 // Method io/airlift/compress/IncompatibleJvmException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: getstatic     #20                 // Field UNSAFE:Lsun/misc/Unsafe;
      76: ldc           #8                  // class java/nio/Buffer
      78: ldc           #83                 // String address
      80: invokevirtual #63                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      83: invokevirtual #85                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      86: putstatic     #26                 // Field ADDRESS_OFFSET:J
      89: goto          103
      92: astore_1
      93: new           #50                 // class io/airlift/compress/IncompatibleJvmException
      96: dup
      97: ldc           #91                 // String LZO requires access to java.nio.Buffer raw address field
      99: invokespecial #60                 // Method io/airlift/compress/IncompatibleJvmException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: return
    Exception table:
       from    to  target type
          35    59    62   Class java/lang/Exception
          73    89    92   Class java/lang/NoSuchFieldException
}
