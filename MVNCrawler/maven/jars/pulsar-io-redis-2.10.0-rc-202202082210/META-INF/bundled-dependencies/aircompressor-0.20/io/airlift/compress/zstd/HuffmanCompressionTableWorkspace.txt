Compiled from "HuffmanCompressionTableWorkspace.java"
class io.airlift.compress.zstd.HuffmanCompressionTableWorkspace {
  public final io.airlift.compress.zstd.NodeTable nodeTable;

  public final short[] entriesPerRank;

  public final short[] valuesPerRank;

  public final int[] rankLast;

  io.airlift.compress.zstd.HuffmanCompressionTableWorkspace();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class io/airlift/compress/zstd/NodeTable
       8: dup
       9: sipush        511
      12: invokespecial #11                 // Method io/airlift/compress/zstd/NodeTable."<init>":(I)V
      15: putfield      #14                 // Field nodeTable:Lio/airlift/compress/zstd/NodeTable;
      18: aload_0
      19: bipush        13
      21: newarray       short
      23: putfield      #20                 // Field entriesPerRank:[S
      26: aload_0
      27: bipush        13
      29: newarray       short
      31: putfield      #24                 // Field valuesPerRank:[S
      34: aload_0
      35: bipush        14
      37: newarray       int
      39: putfield      #27                 // Field rankLast:[I
      42: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #20                 // Field entriesPerRank:[S
       4: iconst_0
       5: invokestatic  #31                 // Method java/util/Arrays.fill:([SS)V
       8: aload_0
       9: getfield      #24                 // Field valuesPerRank:[S
      12: iconst_0
      13: invokestatic  #31                 // Method java/util/Arrays.fill:([SS)V
      16: return
}
