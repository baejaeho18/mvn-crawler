Compiled from "HttpObjectDecoder.java"
class io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser implements io.netty.util.ByteProcessor {
  private final io.netty.util.internal.AppendableCharSequence seq;

  private final int maxLength;

  int size;

  io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser(io.netty.util.internal.AppendableCharSequence, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field seq:Lio/netty/util/internal/AppendableCharSequence;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field maxLength:I
      14: return

  public io.netty.util.internal.AppendableCharSequence parse(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: getfield      #4                  // Field size:I
       4: istore_2
       5: aload_0
       6: getfield      #2                  // Field seq:Lio/netty/util/internal/AppendableCharSequence;
       9: invokevirtual #5                  // Method io/netty/util/internal/AppendableCharSequence.reset:()V
      12: aload_1
      13: aload_0
      14: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.forEachByte:(Lio/netty/util/ByteProcessor;)I
      17: istore_3
      18: iload_3
      19: iconst_m1
      20: if_icmpne     30
      23: aload_0
      24: iload_2
      25: putfield      #4                  // Field size:I
      28: aconst_null
      29: areturn
      30: aload_1
      31: iload_3
      32: iconst_1
      33: iadd
      34: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
      37: pop
      38: aload_0
      39: getfield      #2                  // Field seq:Lio/netty/util/internal/AppendableCharSequence;
      42: areturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field size:I
       5: return

  public boolean process(byte) throws java.lang.Exception;
    Code:
       0: iload_1
       1: sipush        255
       4: iand
       5: i2c
       6: istore_2
       7: iload_2
       8: bipush        10
      10: if_icmpne     63
      13: aload_0
      14: getfield      #2                  // Field seq:Lio/netty/util/internal/AppendableCharSequence;
      17: invokevirtual #9                  // Method io/netty/util/internal/AppendableCharSequence.length:()I
      20: istore_3
      21: iload_3
      22: iconst_1
      23: if_icmplt     61
      26: aload_0
      27: getfield      #2                  // Field seq:Lio/netty/util/internal/AppendableCharSequence;
      30: iload_3
      31: iconst_1
      32: isub
      33: invokevirtual #10                 // Method io/netty/util/internal/AppendableCharSequence.charAtUnsafe:(I)C
      36: bipush        13
      38: if_icmpne     61
      41: aload_0
      42: dup
      43: getfield      #4                  // Field size:I
      46: iconst_1
      47: isub
      48: putfield      #4                  // Field size:I
      51: aload_0
      52: getfield      #2                  // Field seq:Lio/netty/util/internal/AppendableCharSequence;
      55: iload_3
      56: iconst_1
      57: isub
      58: invokevirtual #11                 // Method io/netty/util/internal/AppendableCharSequence.setLength:(I)V
      61: iconst_0
      62: ireturn
      63: aload_0
      64: invokevirtual #12                 // Method increaseCount:()V
      67: aload_0
      68: getfield      #2                  // Field seq:Lio/netty/util/internal/AppendableCharSequence;
      71: iload_2
      72: invokevirtual #13                 // Method io/netty/util/internal/AppendableCharSequence.append:(C)Lio/netty/util/internal/AppendableCharSequence;
      75: pop
      76: iconst_1
      77: ireturn

  protected final void increaseCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field size:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #4                  // Field size:I
      11: aload_0
      12: getfield      #3                  // Field maxLength:I
      15: if_icmple     27
      18: aload_0
      19: aload_0
      20: getfield      #3                  // Field maxLength:I
      23: invokevirtual #14                 // Method newException:(I)Lio/netty/handler/codec/TooLongFrameException;
      26: athrow
      27: return

  protected io.netty.handler.codec.TooLongFrameException newException(int);
    Code:
       0: new           #15                 // class io/netty/handler/codec/TooLongFrameException
       3: dup
       4: new           #16                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #18                 // String HTTP header is larger than
      13: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_1
      17: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: ldc           #21                 // String  bytes.
      22: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #23                 // Method io/netty/handler/codec/TooLongFrameException."<init>":(Ljava/lang/String;)V
      31: areturn
}
