Compiled from "ReadOnlyHttpHeaders.java"
public final class io.netty.handler.codec.http.ReadOnlyHttpHeaders extends io.netty.handler.codec.http.HttpHeaders {
  private final java.lang.CharSequence[] nameValuePairs;

  public io.netty.handler.codec.http.ReadOnlyHttpHeaders(boolean, java.lang.CharSequence...);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/netty/handler/codec/http/HttpHeaders."<init>":()V
       4: aload_2
       5: arraylength
       6: iconst_1
       7: iand
       8: ifeq          15
      11: invokestatic  #3                  // Method newInvalidArraySizeException:()Ljava/lang/IllegalArgumentException;
      14: athrow
      15: iload_1
      16: ifeq          23
      19: aload_2
      20: invokestatic  #4                  // Method validateHeaders:([Ljava/lang/CharSequence;)V
      23: aload_0
      24: aload_2
      25: putfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      28: return

  private static java.lang.IllegalArgumentException newInvalidArraySizeException();
    Code:
       0: new           #5                  // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #6                  // String nameValuePairs must be arrays of [name, value] pairs
       6: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: areturn

  private static void validateHeaders(java.lang.CharSequence...);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: arraylength
       5: if_icmpge     25
       8: getstatic     #8                  // Field io/netty/handler/codec/http/DefaultHttpHeaders.HttpNameValidator:Lio/netty/handler/codec/DefaultHeaders$NameValidator;
      11: aload_0
      12: iload_1
      13: aaload
      14: invokeinterface #9,  2            // InterfaceMethod io/netty/handler/codec/DefaultHeaders$NameValidator.validateName:(Ljava/lang/Object;)V
      19: iinc          1, 2
      22: goto          2
      25: return

  private java.lang.CharSequence get0(java.lang.CharSequence);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method io/netty/util/AsciiString.hashCode:(Ljava/lang/CharSequence;)I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: aload_0
       9: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      12: arraylength
      13: if_icmpge     57
      16: aload_0
      17: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      20: iload_3
      21: aaload
      22: astore        4
      24: aload         4
      26: invokestatic  #10                 // Method io/netty/util/AsciiString.hashCode:(Ljava/lang/CharSequence;)I
      29: iload_2
      30: if_icmpne     51
      33: aload         4
      35: aload_1
      36: invokestatic  #11                 // Method io/netty/util/AsciiString.contentEqualsIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
      39: ifeq          51
      42: aload_0
      43: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      46: iload_3
      47: iconst_1
      48: iadd
      49: aaload
      50: areturn
      51: iinc          3, 2
      54: goto          7
      57: aconst_null
      58: areturn

  public java.lang.String get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method get0:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: aconst_null
      11: goto          20
      14: aload_2
      15: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      20: areturn

  public java.lang.Integer getInt(java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method get0:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: aconst_null
      11: goto          24
      14: getstatic     #14                 // Field io/netty/handler/codec/CharSequenceValueConverter.INSTANCE:Lio/netty/handler/codec/CharSequenceValueConverter;
      17: aload_2
      18: invokevirtual #15                 // Method io/netty/handler/codec/CharSequenceValueConverter.convertToInt:(Ljava/lang/CharSequence;)I
      21: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: areturn

  public int getInt(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method get0:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
       5: astore_3
       6: aload_3
       7: ifnonnull     14
      10: iload_2
      11: goto          21
      14: getstatic     #14                 // Field io/netty/handler/codec/CharSequenceValueConverter.INSTANCE:Lio/netty/handler/codec/CharSequenceValueConverter;
      17: aload_3
      18: invokevirtual #15                 // Method io/netty/handler/codec/CharSequenceValueConverter.convertToInt:(Ljava/lang/CharSequence;)I
      21: ireturn

  public java.lang.Short getShort(java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method get0:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: aconst_null
      11: goto          24
      14: getstatic     #14                 // Field io/netty/handler/codec/CharSequenceValueConverter.INSTANCE:Lio/netty/handler/codec/CharSequenceValueConverter;
      17: aload_2
      18: invokevirtual #17                 // Method io/netty/handler/codec/CharSequenceValueConverter.convertToShort:(Ljava/lang/CharSequence;)S
      21: invokestatic  #18                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      24: areturn

  public short getShort(java.lang.CharSequence, short);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method get0:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
       5: astore_3
       6: aload_3
       7: ifnonnull     14
      10: iload_2
      11: goto          21
      14: getstatic     #14                 // Field io/netty/handler/codec/CharSequenceValueConverter.INSTANCE:Lio/netty/handler/codec/CharSequenceValueConverter;
      17: aload_3
      18: invokevirtual #17                 // Method io/netty/handler/codec/CharSequenceValueConverter.convertToShort:(Ljava/lang/CharSequence;)S
      21: ireturn

  public java.lang.Long getTimeMillis(java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method get0:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: aconst_null
      11: goto          24
      14: getstatic     #14                 // Field io/netty/handler/codec/CharSequenceValueConverter.INSTANCE:Lio/netty/handler/codec/CharSequenceValueConverter;
      17: aload_2
      18: invokevirtual #19                 // Method io/netty/handler/codec/CharSequenceValueConverter.convertToTimeMillis:(Ljava/lang/CharSequence;)J
      21: invokestatic  #20                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      24: areturn

  public long getTimeMillis(java.lang.CharSequence, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method get0:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
       5: astore        4
       7: aload         4
       9: ifnonnull     16
      12: lload_2
      13: goto          24
      16: getstatic     #14                 // Field io/netty/handler/codec/CharSequenceValueConverter.INSTANCE:Lio/netty/handler/codec/CharSequenceValueConverter;
      19: aload         4
      21: invokevirtual #19                 // Method io/netty/handler/codec/CharSequenceValueConverter.convertToTimeMillis:(Ljava/lang/CharSequence;)J
      24: lreturn

  public java.util.List<java.lang.String> getAll(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method isEmpty:()Z
       4: ifeq          11
       7: invokestatic  #22                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_1
      12: invokestatic  #10                 // Method io/netty/util/AsciiString.hashCode:(Ljava/lang/CharSequence;)I
      15: istore_2
      16: new           #23                 // class java/util/ArrayList
      19: dup
      20: iconst_4
      21: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
      24: astore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: aload_0
      31: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      34: arraylength
      35: if_icmpge     92
      38: aload_0
      39: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      42: iload         4
      44: aaload
      45: astore        5
      47: aload         5
      49: invokestatic  #10                 // Method io/netty/util/AsciiString.hashCode:(Ljava/lang/CharSequence;)I
      52: iload_2
      53: if_icmpne     86
      56: aload         5
      58: aload_1
      59: invokestatic  #11                 // Method io/netty/util/AsciiString.contentEqualsIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
      62: ifeq          86
      65: aload_3
      66: aload_0
      67: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      70: iload         4
      72: iconst_1
      73: iadd
      74: aaload
      75: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      80: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: iinc          4, 2
      89: goto          28
      92: aload_3
      93: areturn

  public java.util.List<java.util.Map$Entry<java.lang.String, java.lang.String>> entries();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method isEmpty:()Z
       4: ifeq          11
       7: invokestatic  #22                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: new           #23                 // class java/util/ArrayList
      14: dup
      15: aload_0
      16: invokevirtual #26                 // Method size:()I
      19: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
      22: astore_1
      23: iconst_0
      24: istore_2
      25: iload_2
      26: aload_0
      27: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      30: arraylength
      31: if_icmpge     78
      34: aload_1
      35: new           #27                 // class java/util/AbstractMap$SimpleImmutableEntry
      38: dup
      39: aload_0
      40: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      43: iload_2
      44: aaload
      45: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      50: aload_0
      51: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      54: iload_2
      55: iconst_1
      56: iadd
      57: aaload
      58: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      63: invokespecial #28                 // Method java/util/AbstractMap$SimpleImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      66: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: iinc          2, 2
      75: goto          25
      78: aload_1
      79: areturn

  public boolean contains(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method get0:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean contains(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokevirtual #29                 // Method containsValue:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Z)Z
       7: ireturn

  public boolean containsValue(java.lang.CharSequence, java.lang.CharSequence, boolean);
    Code:
       0: iload_3
       1: ifeq          58
       4: iconst_0
       5: istore        4
       7: iload         4
       9: aload_0
      10: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      13: arraylength
      14: if_icmpge     55
      17: aload_0
      18: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      21: iload         4
      23: aaload
      24: aload_1
      25: invokestatic  #11                 // Method io/netty/util/AsciiString.contentEqualsIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
      28: ifeq          49
      31: aload_0
      32: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      35: iload         4
      37: iconst_1
      38: iadd
      39: aaload
      40: aload_2
      41: invokestatic  #11                 // Method io/netty/util/AsciiString.contentEqualsIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
      44: ifeq          49
      47: iconst_1
      48: ireturn
      49: iinc          4, 2
      52: goto          7
      55: goto          109
      58: iconst_0
      59: istore        4
      61: iload         4
      63: aload_0
      64: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      67: arraylength
      68: if_icmpge     109
      71: aload_0
      72: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      75: iload         4
      77: aaload
      78: aload_1
      79: invokestatic  #11                 // Method io/netty/util/AsciiString.contentEqualsIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
      82: ifeq          103
      85: aload_0
      86: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      89: iload         4
      91: iconst_1
      92: iadd
      93: aaload
      94: aload_2
      95: invokestatic  #30                 // Method io/netty/util/AsciiString.contentEquals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
      98: ifeq          103
     101: iconst_1
     102: ireturn
     103: iinc          4, 2
     106: goto          61
     109: iconst_0
     110: ireturn

  public java.util.Iterator<java.lang.String> valueStringIterator(java.lang.CharSequence);
    Code:
       0: new           #31                 // class io/netty/handler/codec/http/ReadOnlyHttpHeaders$ReadOnlyStringValueIterator
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #32                 // Method io/netty/handler/codec/http/ReadOnlyHttpHeaders$ReadOnlyStringValueIterator."<init>":(Lio/netty/handler/codec/http/ReadOnlyHttpHeaders;Ljava/lang/CharSequence;)V
       9: areturn

  public java.util.Iterator<java.lang.CharSequence> valueCharSequenceIterator(java.lang.CharSequence);
    Code:
       0: new           #33                 // class io/netty/handler/codec/http/ReadOnlyHttpHeaders$ReadOnlyValueIterator
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #34                 // Method io/netty/handler/codec/http/ReadOnlyHttpHeaders$ReadOnlyValueIterator."<init>":(Lio/netty/handler/codec/http/ReadOnlyHttpHeaders;Ljava/lang/CharSequence;)V
       9: areturn

  public java.util.Iterator<java.util.Map$Entry<java.lang.String, java.lang.String>> iterator();
    Code:
       0: new           #35                 // class io/netty/handler/codec/http/ReadOnlyHttpHeaders$ReadOnlyStringIterator
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #36                 // Method io/netty/handler/codec/http/ReadOnlyHttpHeaders$ReadOnlyStringIterator."<init>":(Lio/netty/handler/codec/http/ReadOnlyHttpHeaders;Lio/netty/handler/codec/http/ReadOnlyHttpHeaders$1;)V
       9: areturn

  public java.util.Iterator<java.util.Map$Entry<java.lang.CharSequence, java.lang.CharSequence>> iteratorCharSequence();
    Code:
       0: new           #37                 // class io/netty/handler/codec/http/ReadOnlyHttpHeaders$ReadOnlyIterator
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #38                 // Method io/netty/handler/codec/http/ReadOnlyHttpHeaders$ReadOnlyIterator."<init>":(Lio/netty/handler/codec/http/ReadOnlyHttpHeaders;Lio/netty/handler/codec/http/ReadOnlyHttpHeaders$1;)V
       9: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
       4: arraylength
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
       4: arraylength
       5: iconst_1
       6: iushr
       7: ireturn

  public java.util.Set<java.lang.String> names();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method isEmpty:()Z
       4: ifeq          11
       7: invokestatic  #39                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: areturn
      11: new           #40                 // class java/util/LinkedHashSet
      14: dup
      15: aload_0
      16: invokevirtual #26                 // Method size:()I
      19: invokespecial #41                 // Method java/util/LinkedHashSet."<init>":(I)V
      22: astore_1
      23: iconst_0
      24: istore_2
      25: iload_2
      26: aload_0
      27: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      30: arraylength
      31: if_icmpge     58
      34: aload_1
      35: aload_0
      36: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
      39: iload_2
      40: aaload
      41: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      46: invokeinterface #42,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      51: pop
      52: iinc          2, 2
      55: goto          25
      58: aload_1
      59: areturn

  public io.netty.handler.codec.http.HttpHeaders add(java.lang.String, java.lang.Object);
    Code:
       0: new           #43                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #44                 // String read only
       6: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.netty.handler.codec.http.HttpHeaders add(java.lang.String, java.lang.Iterable<?>);
    Code:
       0: new           #43                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #44                 // String read only
       6: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.netty.handler.codec.http.HttpHeaders addInt(java.lang.CharSequence, int);
    Code:
       0: new           #43                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #44                 // String read only
       6: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.netty.handler.codec.http.HttpHeaders addShort(java.lang.CharSequence, short);
    Code:
       0: new           #43                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #44                 // String read only
       6: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.netty.handler.codec.http.HttpHeaders set(java.lang.String, java.lang.Object);
    Code:
       0: new           #43                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #44                 // String read only
       6: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.netty.handler.codec.http.HttpHeaders set(java.lang.String, java.lang.Iterable<?>);
    Code:
       0: new           #43                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #44                 // String read only
       6: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence, int);
    Code:
       0: new           #43                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #44                 // String read only
       6: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.netty.handler.codec.http.HttpHeaders setShort(java.lang.CharSequence, short);
    Code:
       0: new           #43                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #44                 // String read only
       6: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.netty.handler.codec.http.HttpHeaders remove(java.lang.String);
    Code:
       0: new           #43                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #44                 // String read only
       6: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.netty.handler.codec.http.HttpHeaders clear();
    Code:
       0: new           #43                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #44                 // String read only
       6: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  static java.lang.CharSequence[] access$200(io.netty.handler.codec.http.ReadOnlyHttpHeaders);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nameValuePairs:[Ljava/lang/CharSequence;
       4: areturn
}
