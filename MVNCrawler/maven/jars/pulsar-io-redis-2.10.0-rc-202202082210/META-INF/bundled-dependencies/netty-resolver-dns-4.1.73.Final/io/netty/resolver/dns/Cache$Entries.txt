Compiled from "Cache.java"
final class io.netty.resolver.dns.Cache$Entries extends java.util.concurrent.atomic.AtomicReference<java.util.List<E>> implements java.lang.Runnable {
  private final java.lang.String hostname;

  volatile java.util.concurrent.ScheduledFuture<?> expirationFuture;

  static final boolean $assertionsDisabled;

  final io.netty.resolver.dns.Cache this$0;

  io.netty.resolver.dns.Cache$Entries(io.netty.resolver.dns.Cache, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/resolver/dns/Cache;
       5: aload_0
       6: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      12: aload_0
      13: aload_2
      14: putfield      #4                  // Field hostname:Ljava/lang/String;
      17: return

  void add(E, int, io.netty.channel.EventLoop);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/resolver/dns/Cache;
       4: aload_1
       5: invokevirtual #5                  // Method io/netty/resolver/dns/Cache.shouldReplaceAll:(Ljava/lang/Object;)Z
       8: ifne          298
      11: aload_0
      12: invokevirtual #6                  // Method get:()Ljava/lang/Object;
      15: checkcast     #7                  // class java/util/List
      18: astore        4
      20: aload         4
      22: invokeinterface #8,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      27: ifne          275
      30: aload         4
      32: iconst_0
      33: invokeinterface #9,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      38: astore        5
      40: aload_0
      41: getfield      #1                  // Field this$0:Lio/netty/resolver/dns/Cache;
      44: aload         5
      46: invokevirtual #5                  // Method io/netty/resolver/dns/Cache.shouldReplaceAll:(Ljava/lang/Object;)Z
      49: ifeq          97
      52: getstatic     #10                 // Field $assertionsDisabled:Z
      55: ifne          77
      58: aload         4
      60: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
      65: iconst_1
      66: if_icmpeq     77
      69: new           #12                 // class java/lang/AssertionError
      72: dup
      73: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      76: athrow
      77: aload_0
      78: aload         4
      80: aload_1
      81: invokestatic  #14                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      84: invokevirtual #15                 // Method compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      87: ifeq          11
      90: aload_0
      91: iload_2
      92: aload_3
      93: invokespecial #16                 // Method scheduleCacheExpirationIfNeeded:(ILio/netty/channel/EventLoop;)V
      96: return
      97: new           #17                 // class java/util/ArrayList
     100: dup
     101: aload         4
     103: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
     108: iconst_1
     109: iadd
     110: invokespecial #18                 // Method java/util/ArrayList."<init>":(I)V
     113: astore        6
     115: iconst_0
     116: istore        7
     118: aconst_null
     119: astore        8
     121: aload         4
     123: iload         7
     125: invokeinterface #9,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     130: astore        9
     132: aload_0
     133: getfield      #1                  // Field this$0:Lio/netty/resolver/dns/Cache;
     136: aload_1
     137: aload         9
     139: invokevirtual #19                 // Method io/netty/resolver/dns/Cache.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     142: ifne          158
     145: aload         6
     147: aload         9
     149: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     154: pop
     155: goto          209
     158: aload         9
     160: astore        8
     162: aload         6
     164: aload_1
     165: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     170: pop
     171: iinc          7, 1
     174: iload         7
     176: aload         4
     178: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
     183: if_icmpge     224
     186: aload         6
     188: aload         4
     190: iload         7
     192: invokeinterface #9,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     197: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     202: pop
     203: iinc          7, 1
     206: goto          174
     209: iinc          7, 1
     212: iload         7
     214: aload         4
     216: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
     221: if_icmplt     121
     224: aload         8
     226: ifnonnull     238
     229: aload         6
     231: aload_1
     232: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     237: pop
     238: aload_0
     239: getfield      #1                  // Field this$0:Lio/netty/resolver/dns/Cache;
     242: aload_0
     243: getfield      #4                  // Field hostname:Ljava/lang/String;
     246: aload         6
     248: invokevirtual #21                 // Method io/netty/resolver/dns/Cache.sortEntries:(Ljava/lang/String;Ljava/util/List;)V
     251: aload_0
     252: aload         4
     254: aload         6
     256: invokestatic  #22                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     259: invokevirtual #15                 // Method compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     262: ifeq          272
     265: aload_0
     266: iload_2
     267: aload_3
     268: invokespecial #16                 // Method scheduleCacheExpirationIfNeeded:(ILio/netty/channel/EventLoop;)V
     271: return
     272: goto          295
     275: aload_0
     276: aload         4
     278: aload_1
     279: invokestatic  #14                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     282: invokevirtual #15                 // Method compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     285: ifeq          295
     288: aload_0
     289: iload_2
     290: aload_3
     291: invokespecial #16                 // Method scheduleCacheExpirationIfNeeded:(ILio/netty/channel/EventLoop;)V
     294: return
     295: goto          11
     298: aload_0
     299: aload_1
     300: invokestatic  #14                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     303: invokevirtual #23                 // Method set:(Ljava/lang/Object;)V
     306: aload_0
     307: iload_2
     308: aload_3
     309: invokespecial #16                 // Method scheduleCacheExpirationIfNeeded:(ILio/netty/channel/EventLoop;)V
     312: return

  private void scheduleCacheExpirationIfNeeded(int, io.netty.channel.EventLoop);
    Code:
       0: invokestatic  #24                 // Method io/netty/resolver/dns/Cache.access$000:()Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #26                 // class java/util/concurrent/ScheduledFuture
      10: astore_3
      11: aload_3
      12: ifnull        30
      15: aload_3
      16: getstatic     #27                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      19: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.getDelay:(Ljava/util/concurrent/TimeUnit;)J
      24: iload_1
      25: i2l
      26: lcmp
      27: ifle          84
      30: aload_2
      31: aload_0
      32: iload_1
      33: i2l
      34: getstatic     #27                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      37: invokeinterface #29,  5           // InterfaceMethod io/netty/channel/EventLoop.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      42: astore        4
      44: invokestatic  #24                 // Method io/netty/resolver/dns/Cache.access$000:()Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      47: aload_0
      48: aload_3
      49: aload         4
      51: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      54: ifeq          72
      57: aload_3
      58: ifnull        84
      61: aload_3
      62: iconst_1
      63: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      68: pop
      69: goto          84
      72: aload         4
      74: iconst_1
      75: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      80: pop
      81: goto          0
      84: return

  boolean clearAndCancel();
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       4: invokevirtual #32                 // Method getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #7                  // class java/util/List
      10: astore_1
      11: aload_1
      12: invokeinterface #8,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      17: ifeq          22
      20: iconst_0
      21: ireturn
      22: invokestatic  #24                 // Method io/netty/resolver/dns/Cache.access$000:()Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      25: aload_0
      26: invokestatic  #33                 // Method io/netty/resolver/dns/Cache.access$100:()Ljava/util/concurrent/ScheduledFuture;
      29: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #26                 // class java/util/concurrent/ScheduledFuture
      35: astore_2
      36: aload_2
      37: ifnull        48
      40: aload_2
      41: iconst_0
      42: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      47: pop
      48: iconst_1
      49: ireturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/resolver/dns/Cache;
       4: invokestatic  #35                 // Method io/netty/resolver/dns/Cache.access$200:(Lio/netty/resolver/dns/Cache;)Ljava/util/concurrent/ConcurrentMap;
       7: aload_0
       8: getfield      #4                  // Field hostname:Ljava/lang/String;
      11: aload_0
      12: invokeinterface #36,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: invokevirtual #37                 // Method clearAndCancel:()Z
      22: pop
      23: return

  static {};
    Code:
       0: ldc           #38                 // class io/netty/resolver/dns/Cache
       2: invokevirtual #39                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #10                 // Field $assertionsDisabled:Z
      16: return
}
