Compiled from "DnsQueryContext.java"
abstract class io.netty.resolver.dns.DnsQueryContext implements io.netty.util.concurrent.FutureListener<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final io.netty.resolver.dns.DnsNameResolver parent;

  private final io.netty.util.concurrent.Promise<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> promise;

  private final int id;

  private final io.netty.handler.codec.dns.DnsQuestion question;

  private final io.netty.handler.codec.dns.DnsRecord[] additionals;

  private final io.netty.handler.codec.dns.DnsRecord optResource;

  private final java.net.InetSocketAddress nameServerAddr;

  private final boolean recursionDesired;

  private volatile io.netty.util.concurrent.Future<?> timeoutFuture;

  io.netty.resolver.dns.DnsQueryContext(io.netty.resolver.dns.DnsNameResolver, java.net.InetSocketAddress, io.netty.handler.codec.dns.DnsQuestion, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #5                  // String parent
       8: invokestatic  #6                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #7                  // class io/netty/resolver/dns/DnsNameResolver
      14: putfield      #8                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      17: aload_0
      18: aload_2
      19: ldc           #9                  // String nameServerAddr
      21: invokestatic  #6                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #10                 // class java/net/InetSocketAddress
      27: putfield      #11                 // Field nameServerAddr:Ljava/net/InetSocketAddress;
      30: aload_0
      31: aload_3
      32: ldc           #12                 // String question
      34: invokestatic  #6                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      37: checkcast     #13                 // class io/netty/handler/codec/dns/DnsQuestion
      40: putfield      #14                 // Field question:Lio/netty/handler/codec/dns/DnsQuestion;
      43: aload_0
      44: aload         4
      46: ldc           #15                 // String additionals
      48: invokestatic  #6                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      51: checkcast     #16                 // class "[Lio/netty/handler/codec/dns/DnsRecord;"
      54: putfield      #17                 // Field additionals:[Lio/netty/handler/codec/dns/DnsRecord;
      57: aload_0
      58: aload         5
      60: ldc           #18                 // String promise
      62: invokestatic  #6                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      65: checkcast     #19                 // class io/netty/util/concurrent/Promise
      68: putfield      #2                  // Field promise:Lio/netty/util/concurrent/Promise;
      71: aload_0
      72: aload_1
      73: invokevirtual #20                 // Method io/netty/resolver/dns/DnsNameResolver.isRecursionDesired:()Z
      76: putfield      #21                 // Field recursionDesired:Z
      79: aload_0
      80: aload_1
      81: getfield      #22                 // Field io/netty/resolver/dns/DnsNameResolver.queryContextManager:Lio/netty/resolver/dns/DnsQueryContextManager;
      84: aload_0
      85: invokevirtual #23                 // Method io/netty/resolver/dns/DnsQueryContextManager.add:(Lio/netty/resolver/dns/DnsQueryContext;)I
      88: putfield      #24                 // Field id:I
      91: aload         5
      93: aload_0
      94: invokeinterface #25,  2           // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
      99: pop
     100: aload_1
     101: invokevirtual #26                 // Method io/netty/resolver/dns/DnsNameResolver.isOptResourceEnabled:()Z
     104: ifeq          128
     107: aload_0
     108: new           #27                 // class io/netty/resolver/dns/DnsQueryContext$1
     111: dup
     112: aload_0
     113: aload_1
     114: invokevirtual #28                 // Method io/netty/resolver/dns/DnsNameResolver.maxPayloadSize:()I
     117: iconst_0
     118: iconst_0
     119: invokespecial #29                 // Method io/netty/resolver/dns/DnsQueryContext$1."<init>":(Lio/netty/resolver/dns/DnsQueryContext;III)V
     122: putfield      #30                 // Field optResource:Lio/netty/handler/codec/dns/DnsRecord;
     125: goto          133
     128: aload_0
     129: aconst_null
     130: putfield      #30                 // Field optResource:Lio/netty/handler/codec/dns/DnsRecord;
     133: return

  java.net.InetSocketAddress nameServerAddr();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nameServerAddr:Ljava/net/InetSocketAddress;
       4: areturn

  io.netty.handler.codec.dns.DnsQuestion question();
    Code:
       0: aload_0
       1: getfield      #14                 // Field question:Lio/netty/handler/codec/dns/DnsQuestion;
       4: areturn

  io.netty.resolver.dns.DnsNameResolver parent();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
       4: areturn

  protected abstract io.netty.handler.codec.dns.DnsQuery newQuery(int);

  protected abstract io.netty.channel.Channel channel();

  protected abstract java.lang.String protocol();

  void query(boolean, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method question:()Lio/netty/handler/codec/dns/DnsQuestion;
       4: astore_3
       5: aload_0
       6: invokevirtual #32                 // Method nameServerAddr:()Ljava/net/InetSocketAddress;
       9: astore        4
      11: aload_0
      12: aload_0
      13: getfield      #24                 // Field id:I
      16: invokevirtual #33                 // Method newQuery:(I)Lio/netty/handler/codec/dns/DnsQuery;
      19: astore        5
      21: aload         5
      23: aload_0
      24: getfield      #21                 // Field recursionDesired:Z
      27: invokeinterface #34,  2           // InterfaceMethod io/netty/handler/codec/dns/DnsQuery.setRecursionDesired:(Z)Lio/netty/handler/codec/dns/DnsQuery;
      32: pop
      33: aload         5
      35: getstatic     #35                 // Field io/netty/handler/codec/dns/DnsSection.QUESTION:Lio/netty/handler/codec/dns/DnsSection;
      38: aload_3
      39: invokeinterface #36,  3           // InterfaceMethod io/netty/handler/codec/dns/DnsQuery.addRecord:(Lio/netty/handler/codec/dns/DnsSection;Lio/netty/handler/codec/dns/DnsRecord;)Lio/netty/handler/codec/dns/DnsQuery;
      44: pop
      45: aload_0
      46: getfield      #17                 // Field additionals:[Lio/netty/handler/codec/dns/DnsRecord;
      49: astore        6
      51: aload         6
      53: arraylength
      54: istore        7
      56: iconst_0
      57: istore        8
      59: iload         8
      61: iload         7
      63: if_icmpge     92
      66: aload         6
      68: iload         8
      70: aaload
      71: astore        9
      73: aload         5
      75: getstatic     #37                 // Field io/netty/handler/codec/dns/DnsSection.ADDITIONAL:Lio/netty/handler/codec/dns/DnsSection;
      78: aload         9
      80: invokeinterface #36,  3           // InterfaceMethod io/netty/handler/codec/dns/DnsQuery.addRecord:(Lio/netty/handler/codec/dns/DnsSection;Lio/netty/handler/codec/dns/DnsRecord;)Lio/netty/handler/codec/dns/DnsQuery;
      85: pop
      86: iinc          8, 1
      89: goto          59
      92: aload_0
      93: getfield      #30                 // Field optResource:Lio/netty/handler/codec/dns/DnsRecord;
      96: ifnull        114
      99: aload         5
     101: getstatic     #37                 // Field io/netty/handler/codec/dns/DnsSection.ADDITIONAL:Lio/netty/handler/codec/dns/DnsSection;
     104: aload_0
     105: getfield      #30                 // Field optResource:Lio/netty/handler/codec/dns/DnsRecord;
     108: invokeinterface #36,  3           // InterfaceMethod io/netty/handler/codec/dns/DnsQuery.addRecord:(Lio/netty/handler/codec/dns/DnsSection;Lio/netty/handler/codec/dns/DnsRecord;)Lio/netty/handler/codec/dns/DnsQuery;
     113: pop
     114: getstatic     #38                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     117: invokeinterface #39,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
     122: ifeq          172
     125: getstatic     #38                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     128: ldc           #40                 // String {} WRITE: {}, [{}: {}], {}
     130: iconst_5
     131: anewarray     #41                 // class java/lang/Object
     134: dup
     135: iconst_0
     136: aload_0
     137: invokevirtual #42                 // Method channel:()Lio/netty/channel/Channel;
     140: aastore
     141: dup
     142: iconst_1
     143: aload_0
     144: invokevirtual #43                 // Method protocol:()Ljava/lang/String;
     147: aastore
     148: dup
     149: iconst_2
     150: aload_0
     151: getfield      #24                 // Field id:I
     154: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     157: aastore
     158: dup
     159: iconst_3
     160: aload         4
     162: aastore
     163: dup
     164: iconst_4
     165: aload_3
     166: aastore
     167: invokeinterface #45,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     172: aload_0
     173: aload         5
     175: iload_1
     176: aload_2
     177: invokespecial #46                 // Method sendQuery:(Lio/netty/handler/codec/dns/DnsQuery;ZLio/netty/channel/ChannelPromise;)V
     180: return

  private void sendQuery(io.netty.handler.codec.dns.DnsQuery, boolean, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #8                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
       4: getfield      #47                 // Field io/netty/resolver/dns/DnsNameResolver.channelFuture:Lio/netty/util/concurrent/Future;
       7: invokeinterface #48,  1           // InterfaceMethod io/netty/util/concurrent/Future.isDone:()Z
      12: ifeq          25
      15: aload_0
      16: aload_1
      17: iload_2
      18: aload_3
      19: invokespecial #3                  // Method writeQuery:(Lio/netty/handler/codec/dns/DnsQuery;ZLio/netty/channel/ChannelPromise;)V
      22: goto          48
      25: aload_0
      26: getfield      #8                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      29: getfield      #47                 // Field io/netty/resolver/dns/DnsNameResolver.channelFuture:Lio/netty/util/concurrent/Future;
      32: new           #49                 // class io/netty/resolver/dns/DnsQueryContext$2
      35: dup
      36: aload_0
      37: aload_1
      38: aload_3
      39: invokespecial #50                 // Method io/netty/resolver/dns/DnsQueryContext$2."<init>":(Lio/netty/resolver/dns/DnsQueryContext;Lio/netty/handler/codec/dns/DnsQuery;Lio/netty/channel/ChannelPromise;)V
      42: invokeinterface #51,  2           // InterfaceMethod io/netty/util/concurrent/Future.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
      47: pop
      48: return

  private void writeQuery(io.netty.handler.codec.dns.DnsQuery, boolean, io.netty.channel.ChannelPromise);
    Code:
       0: iload_2
       1: ifeq          18
       4: aload_0
       5: invokevirtual #42                 // Method channel:()Lio/netty/channel/Channel;
       8: aload_1
       9: aload_3
      10: invokeinterface #52,  3           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      15: goto          29
      18: aload_0
      19: invokevirtual #42                 // Method channel:()Lio/netty/channel/Channel;
      22: aload_1
      23: aload_3
      24: invokeinterface #53,  3           // InterfaceMethod io/netty/channel/Channel.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      29: astore        4
      31: aload         4
      33: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      38: ifeq          50
      41: aload_0
      42: aload         4
      44: invokespecial #1                  // Method onQueryWriteCompletion:(Lio/netty/channel/ChannelFuture;)V
      47: goto          68
      50: aload         4
      52: new           #55                 // class io/netty/resolver/dns/DnsQueryContext$3
      55: dup
      56: aload_0
      57: aload         4
      59: invokespecial #56                 // Method io/netty/resolver/dns/DnsQueryContext$3."<init>":(Lio/netty/resolver/dns/DnsQueryContext;Lio/netty/channel/ChannelFuture;)V
      62: invokeinterface #57,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      67: pop
      68: return

  private void onQueryWriteCompletion(io.netty.channel.ChannelFuture);
    Code:
       0: aload_1
       1: invokeinterface #58,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
       6: ifne          44
       9: aload_0
      10: new           #59                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #61                 // String failed to send a query via
      19: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #43                 // Method protocol:()Ljava/lang/String;
      26: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: aload_1
      33: invokeinterface #64,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      38: iconst_0
      39: invokevirtual #65                 // Method tryFailure:(Ljava/lang/String;Ljava/lang/Throwable;Z)Z
      42: pop
      43: return
      44: aload_0
      45: getfield      #8                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      48: invokevirtual #66                 // Method io/netty/resolver/dns/DnsNameResolver.queryTimeoutMillis:()J
      51: lstore_2
      52: lload_2
      53: lconst_0
      54: lcmp
      55: ifle          92
      58: aload_0
      59: aload_0
      60: getfield      #8                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      63: getfield      #67                 // Field io/netty/resolver/dns/DnsNameResolver.ch:Lio/netty/channel/Channel;
      66: invokeinterface #68,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      71: new           #69                 // class io/netty/resolver/dns/DnsQueryContext$4
      74: dup
      75: aload_0
      76: lload_2
      77: invokespecial #70                 // Method io/netty/resolver/dns/DnsQueryContext$4."<init>":(Lio/netty/resolver/dns/DnsQueryContext;J)V
      80: lload_2
      81: getstatic     #71                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      84: invokeinterface #72,  5           // InterfaceMethod io/netty/channel/EventLoop.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      89: putfield      #73                 // Field timeoutFuture:Lio/netty/util/concurrent/Future;
      92: return

  void finish(io.netty.channel.AddressedEnvelope<? extends io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>);
    Code:
       0: aload_1
       1: invokeinterface #74,  1           // InterfaceMethod io/netty/channel/AddressedEnvelope.content:()Ljava/lang/Object;
       6: checkcast     #75                 // class io/netty/handler/codec/dns/DnsResponse
       9: astore_2
      10: aload_2
      11: getstatic     #35                 // Field io/netty/handler/codec/dns/DnsSection.QUESTION:Lio/netty/handler/codec/dns/DnsSection;
      14: invokeinterface #76,  2           // InterfaceMethod io/netty/handler/codec/dns/DnsResponse.count:(Lio/netty/handler/codec/dns/DnsSection;)I
      19: iconst_1
      20: if_icmpeq     37
      23: getstatic     #38                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      26: ldc           #77                 // String Received a DNS response with invalid number of questions: {}
      28: aload_1
      29: invokeinterface #78,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      34: goto          79
      37: aload_0
      38: invokevirtual #31                 // Method question:()Lio/netty/handler/codec/dns/DnsQuestion;
      41: aload_2
      42: getstatic     #35                 // Field io/netty/handler/codec/dns/DnsSection.QUESTION:Lio/netty/handler/codec/dns/DnsSection;
      45: invokeinterface #79,  2           // InterfaceMethod io/netty/handler/codec/dns/DnsResponse.recordAt:(Lio/netty/handler/codec/dns/DnsSection;)Lio/netty/handler/codec/dns/DnsRecord;
      50: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      53: ifne          70
      56: getstatic     #38                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      59: ldc           #81                 // String Received a mismatching DNS response: {}
      61: aload_1
      62: invokeinterface #78,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      67: goto          79
      70: aload_0
      71: aload_1
      72: invokespecial #82                 // Method trySuccess:(Lio/netty/channel/AddressedEnvelope;)Z
      75: ifeq          79
      78: return
      79: aload_1
      80: invokeinterface #83,  1           // InterfaceMethod io/netty/channel/AddressedEnvelope.release:()Z
      85: pop
      86: return

  private boolean trySuccess(io.netty.channel.AddressedEnvelope<? extends io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field promise:Lio/netty/util/concurrent/Promise;
       4: aload_1
       5: invokeinterface #84,  2           // InterfaceMethod io/netty/util/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      10: ireturn

  boolean tryFailure(java.lang.String, java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field promise:Lio/netty/util/concurrent/Promise;
       4: invokeinterface #85,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: invokevirtual #32                 // Method nameServerAddr:()Ljava/net/InetSocketAddress;
      18: astore        4
      20: new           #59                 // class java/lang/StringBuilder
      23: dup
      24: aload_1
      25: invokevirtual #86                 // Method java/lang/String.length:()I
      28: bipush        64
      30: iadd
      31: invokespecial #87                 // Method java/lang/StringBuilder."<init>":(I)V
      34: astore        5
      36: aload         5
      38: bipush        91
      40: invokevirtual #88                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      43: aload         4
      45: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: ldc           #90                 // String ]
      50: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #91                 // String  (no stack trace available)
      59: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: pop
      63: iload_3
      64: ifeq          90
      67: new           #92                 // class io/netty/resolver/dns/DnsNameResolverTimeoutException
      70: dup
      71: aload         4
      73: aload_0
      74: invokevirtual #31                 // Method question:()Lio/netty/handler/codec/dns/DnsQuestion;
      77: aload         5
      79: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokespecial #93                 // Method io/netty/resolver/dns/DnsNameResolverTimeoutException."<init>":(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;Ljava/lang/String;)V
      85: astore        6
      87: goto          111
      90: new           #94                 // class io/netty/resolver/dns/DnsNameResolverException
      93: dup
      94: aload         4
      96: aload_0
      97: invokevirtual #31                 // Method question:()Lio/netty/handler/codec/dns/DnsQuestion;
     100: aload         5
     102: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: aload_2
     106: invokespecial #95                 // Method io/netty/resolver/dns/DnsNameResolverException."<init>":(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;Ljava/lang/String;Ljava/lang/Throwable;)V
     109: astore        6
     111: aload_0
     112: getfield      #2                  // Field promise:Lio/netty/util/concurrent/Promise;
     115: aload         6
     117: invokeinterface #96,  2           // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
     122: ireturn

  public void operationComplete(io.netty.util.concurrent.Future<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>>);
    Code:
       0: aload_0
       1: getfield      #73                 // Field timeoutFuture:Lio/netty/util/concurrent/Future;
       4: astore_2
       5: aload_2
       6: ifnull        22
       9: aload_0
      10: aconst_null
      11: putfield      #73                 // Field timeoutFuture:Lio/netty/util/concurrent/Future;
      14: aload_2
      15: iconst_0
      16: invokeinterface #97,  2           // InterfaceMethod io/netty/util/concurrent/Future.cancel:(Z)Z
      21: pop
      22: aload_0
      23: getfield      #8                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      26: getfield      #22                 // Field io/netty/resolver/dns/DnsNameResolver.queryContextManager:Lio/netty/resolver/dns/DnsQueryContextManager;
      29: aload_0
      30: getfield      #11                 // Field nameServerAddr:Ljava/net/InetSocketAddress;
      33: aload_0
      34: getfield      #24                 // Field id:I
      37: invokevirtual #98                 // Method io/netty/resolver/dns/DnsQueryContextManager.remove:(Ljava/net/InetSocketAddress;I)Lio/netty/resolver/dns/DnsQueryContext;
      40: pop
      41: return

  static void access$000(io.netty.resolver.dns.DnsQueryContext, io.netty.handler.codec.dns.DnsQuery, boolean, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #3                  // Method writeQuery:(Lio/netty/handler/codec/dns/DnsQuery;ZLio/netty/channel/ChannelPromise;)V
       7: return

  static io.netty.util.concurrent.Promise access$100(io.netty.resolver.dns.DnsQueryContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field promise:Lio/netty/util/concurrent/Promise;
       4: areturn

  static void access$200(io.netty.resolver.dns.DnsQueryContext, io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method onQueryWriteCompletion:(Lio/netty/channel/ChannelFuture;)V
       5: return

  static {};
    Code:
       0: ldc           #99                 // class io/netty/resolver/dns/DnsQueryContext
       2: invokestatic  #100                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #38                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: return
}
