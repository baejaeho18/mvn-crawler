Compiled from "DnsNameResolver.java"
class io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2 implements io.netty.util.concurrent.FutureListener<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>> {
  final io.netty.channel.Channel val$channel;

  final io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1 this$2;

  io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2(io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1, io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$2:Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$channel:Lio/netty/channel/Channel;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void operationComplete(io.netty.util.concurrent.Future<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$channel:Lio/netty/channel/Channel;
       4: invokeinterface #4,  1            // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
       9: pop
      10: aload_1
      11: invokeinterface #5,  1            // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
      16: ifeq          52
      19: aload_0
      20: getfield      #1                  // Field this$2:Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1;
      23: getfield      #6                  // Field io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1.val$qCtx:Lio/netty/resolver/dns/DnsQueryContext;
      26: aload_1
      27: invokeinterface #7,  1            // InterfaceMethod io/netty/util/concurrent/Future.getNow:()Ljava/lang/Object;
      32: checkcast     #8                  // class io/netty/channel/AddressedEnvelope
      35: invokevirtual #9                  // Method io/netty/resolver/dns/DnsQueryContext.finish:(Lio/netty/channel/AddressedEnvelope;)V
      38: aload_0
      39: getfield      #1                  // Field this$2:Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1;
      42: getfield      #10                 // Field io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1.val$res:Lio/netty/handler/codec/dns/DatagramDnsResponse;
      45: invokevirtual #11                 // Method io/netty/handler/codec/dns/DatagramDnsResponse.release:()Z
      48: pop
      49: goto          69
      52: aload_0
      53: getfield      #1                  // Field this$2:Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1;
      56: getfield      #6                  // Field io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1.val$qCtx:Lio/netty/resolver/dns/DnsQueryContext;
      59: aload_0
      60: getfield      #1                  // Field this$2:Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1;
      63: getfield      #10                 // Field io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1.val$res:Lio/netty/handler/codec/dns/DatagramDnsResponse;
      66: invokevirtual #9                  // Method io/netty/resolver/dns/DnsQueryContext.finish:(Lio/netty/channel/AddressedEnvelope;)V
      69: return
}
