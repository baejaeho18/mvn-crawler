Compiled from "DnsAddressResolveContext.java"
final class io.netty.resolver.dns.DnsAddressResolveContext extends io.netty.resolver.dns.DnsResolveContext<java.net.InetAddress> {
  private final io.netty.resolver.dns.DnsCache resolveCache;

  private final io.netty.resolver.dns.AuthoritativeDnsServerCache authoritativeDnsServerCache;

  private final boolean completeEarlyIfPossible;

  io.netty.resolver.dns.DnsAddressResolveContext(io.netty.resolver.dns.DnsNameResolver, io.netty.util.concurrent.Promise<?>, java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.resolver.dns.DnsServerAddressStream, int, io.netty.resolver.dns.DnsCache, io.netty.resolver.dns.AuthoritativeDnsServerCache, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: aload_1
       6: invokevirtual #2                  // Method io/netty/resolver/dns/DnsNameResolver.resolveRecordTypes:()[Lio/netty/handler/codec/dns/DnsRecordType;
       9: aload         4
      11: aload         5
      13: iload         6
      15: invokespecial #3                  // Method io/netty/resolver/dns/DnsResolveContext."<init>":(Lio/netty/resolver/dns/DnsNameResolver;Lio/netty/util/concurrent/Promise;Ljava/lang/String;I[Lio/netty/handler/codec/dns/DnsRecordType;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/resolver/dns/DnsServerAddressStream;I)V
      18: aload_0
      19: aload         7
      21: putfield      #4                  // Field resolveCache:Lio/netty/resolver/dns/DnsCache;
      24: aload_0
      25: aload         8
      27: putfield      #5                  // Field authoritativeDnsServerCache:Lio/netty/resolver/dns/AuthoritativeDnsServerCache;
      30: aload_0
      31: iload         9
      33: putfield      #6                  // Field completeEarlyIfPossible:Z
      36: return

  io.netty.resolver.dns.DnsResolveContext<java.net.InetAddress> newResolverContext(io.netty.resolver.dns.DnsNameResolver, io.netty.util.concurrent.Promise<?>, java.lang.String, int, io.netty.handler.codec.dns.DnsRecordType[], io.netty.handler.codec.dns.DnsRecord[], io.netty.resolver.dns.DnsServerAddressStream, int);
    Code:
       0: new           #7                  // class io/netty/resolver/dns/DnsAddressResolveContext
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         6
       9: aload         7
      11: iload         8
      13: aload_0
      14: getfield      #4                  // Field resolveCache:Lio/netty/resolver/dns/DnsCache;
      17: aload_0
      18: getfield      #5                  // Field authoritativeDnsServerCache:Lio/netty/resolver/dns/AuthoritativeDnsServerCache;
      21: aload_0
      22: getfield      #6                  // Field completeEarlyIfPossible:Z
      25: invokespecial #8                  // Method "<init>":(Lio/netty/resolver/dns/DnsNameResolver;Lio/netty/util/concurrent/Promise;Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/resolver/dns/DnsServerAddressStream;ILio/netty/resolver/dns/DnsCache;Lio/netty/resolver/dns/AuthoritativeDnsServerCache;Z)V
      28: areturn

  java.net.InetAddress convertRecord(io.netty.handler.codec.dns.DnsRecord, java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
       6: invokevirtual #10                 // Method io/netty/resolver/dns/DnsNameResolver.isDecodeIdn:()Z
       9: invokestatic  #11                 // Method io/netty/resolver/dns/DnsAddressDecoder.decodeAddress:(Lio/netty/handler/codec/dns/DnsRecord;Ljava/lang/String;Z)Ljava/net/InetAddress;
      12: areturn

  java.util.List<java.net.InetAddress> filterResults(java.util.List<java.net.InetAddress>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
       5: invokevirtual #12                 // Method io/netty/resolver/dns/DnsNameResolver.preferredAddressType:()Lio/netty/channel/socket/InternetProtocolFamily;
       8: invokestatic  #13                 // Method io/netty/resolver/dns/PreferredAddressTypeComparator.comparator:(Lio/netty/channel/socket/InternetProtocolFamily;)Lio/netty/resolver/dns/PreferredAddressTypeComparator;
      11: invokestatic  #14                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      14: aload_1
      15: areturn

  boolean isCompleteEarly(java.net.InetAddress);
    Code:
       0: aload_0
       1: getfield      #6                  // Field completeEarlyIfPossible:Z
       4: ifeq          28
       7: aload_0
       8: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      11: invokevirtual #12                 // Method io/netty/resolver/dns/DnsNameResolver.preferredAddressType:()Lio/netty/channel/socket/InternetProtocolFamily;
      14: invokevirtual #15                 // Method io/netty/channel/socket/InternetProtocolFamily.addressType:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpne     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  boolean isDuplicateAllowed();
    Code:
       0: iconst_0
       1: ireturn

  void cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.handler.codec.dns.DnsRecord, java.net.InetAddress);
    Code:
       0: aload_0
       1: getfield      #4                  // Field resolveCache:Lio/netty/resolver/dns/DnsCache;
       4: aload_1
       5: aload_2
       6: aload         4
       8: aload_3
       9: invokeinterface #17,  1           // InterfaceMethod io/netty/handler/codec/dns/DnsRecord.timeToLive:()J
      14: aload_0
      15: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      18: getfield      #18                 // Field io/netty/resolver/dns/DnsNameResolver.ch:Lio/netty/channel/Channel;
      21: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      26: invokeinterface #20,  7           // InterfaceMethod io/netty/resolver/dns/DnsCache.cache:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Ljava/net/InetAddress;JLio/netty/channel/EventLoop;)Lio/netty/resolver/dns/DnsCacheEntry;
      31: pop
      32: return

  void cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], java.net.UnknownHostException);
    Code:
       0: aload_0
       1: getfield      #4                  // Field resolveCache:Lio/netty/resolver/dns/DnsCache;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload_0
       8: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      11: getfield      #18                 // Field io/netty/resolver/dns/DnsNameResolver.ch:Lio/netty/channel/Channel;
      14: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      19: invokeinterface #21,  5           // InterfaceMethod io/netty/resolver/dns/DnsCache.cache:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Ljava/lang/Throwable;Lio/netty/channel/EventLoop;)Lio/netty/resolver/dns/DnsCacheEntry;
      24: pop
      25: return

  void doSearchDomainQuery(java.lang.String, io.netty.util.concurrent.Promise<java.util.List<java.net.InetAddress>>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #22                 // Field additionals:[Lio/netty/handler/codec/dns/DnsRecord;
       5: aload_2
       6: aload_0
       7: getfield      #4                  // Field resolveCache:Lio/netty/resolver/dns/DnsCache;
      10: aload_0
      11: getfield      #9                  // Field parent:Lio/netty/resolver/dns/DnsNameResolver;
      14: invokevirtual #23                 // Method io/netty/resolver/dns/DnsNameResolver.resolvedInternetProtocolFamiliesUnsafe:()[Lio/netty/channel/socket/InternetProtocolFamily;
      17: invokestatic  #24                 // Method io/netty/resolver/dns/DnsNameResolver.doResolveAllCached:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;Lio/netty/resolver/dns/DnsCache;[Lio/netty/channel/socket/InternetProtocolFamily;)Z
      20: ifne          29
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokespecial #25                 // Method io/netty/resolver/dns/DnsResolveContext.doSearchDomainQuery:(Ljava/lang/String;Lio/netty/util/concurrent/Promise;)V
      29: return

  io.netty.resolver.dns.DnsCache resolveCache();
    Code:
       0: aload_0
       1: getfield      #4                  // Field resolveCache:Lio/netty/resolver/dns/DnsCache;
       4: areturn

  io.netty.resolver.dns.AuthoritativeDnsServerCache authoritativeDnsServerCache();
    Code:
       0: aload_0
       1: getfield      #5                  // Field authoritativeDnsServerCache:Lio/netty/resolver/dns/AuthoritativeDnsServerCache;
       4: areturn

  void cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.handler.codec.dns.DnsRecord, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: checkcast     #26                 // class java/net/InetAddress
       9: invokevirtual #27                 // Method cache:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/handler/codec/dns/DnsRecord;Ljava/net/InetAddress;)V
      12: return

  boolean isCompleteEarly(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class java/net/InetAddress
       5: invokevirtual #28                 // Method isCompleteEarly:(Ljava/net/InetAddress;)Z
       8: ireturn

  java.lang.Object convertRecord(io.netty.handler.codec.dns.DnsRecord, java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.channel.EventLoop);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #29                 // Method convertRecord:(Lio/netty/handler/codec/dns/DnsRecord;Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/channel/EventLoop;)Ljava/net/InetAddress;
       9: areturn
}
