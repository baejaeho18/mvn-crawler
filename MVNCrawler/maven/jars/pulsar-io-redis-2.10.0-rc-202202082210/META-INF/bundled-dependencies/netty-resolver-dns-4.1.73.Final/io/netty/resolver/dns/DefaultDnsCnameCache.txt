Compiled from "DefaultDnsCnameCache.java"
public final class io.netty.resolver.dns.DefaultDnsCnameCache implements io.netty.resolver.dns.DnsCnameCache {
  private final int minTtl;

  private final int maxTtl;

  private final io.netty.resolver.dns.Cache<java.lang.String> cache;

  public io.netty.resolver.dns.DefaultDnsCnameCache();
    Code:
       0: aload_0
       1: iconst_0
       2: getstatic     #1                  // Field io/netty/resolver/dns/Cache.MAX_SUPPORTED_TTL_SECS:I
       5: invokespecial #2                  // Method "<init>":(II)V
       8: return

  public io.netty.resolver.dns.DefaultDnsCnameCache(int, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class io/netty/resolver/dns/DefaultDnsCnameCache$1
       8: dup
       9: aload_0
      10: invokespecial #5                  // Method io/netty/resolver/dns/DefaultDnsCnameCache$1."<init>":(Lio/netty/resolver/dns/DefaultDnsCnameCache;)V
      13: putfield      #6                  // Field cache:Lio/netty/resolver/dns/Cache;
      16: aload_0
      17: getstatic     #1                  // Field io/netty/resolver/dns/Cache.MAX_SUPPORTED_TTL_SECS:I
      20: iload_1
      21: ldc           #7                  // String minTtl
      23: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
      26: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      29: putfield      #10                 // Field minTtl:I
      32: aload_0
      33: getstatic     #1                  // Field io/netty/resolver/dns/Cache.MAX_SUPPORTED_TTL_SECS:I
      36: iload_2
      37: ldc           #11                 // String maxTtl
      39: invokestatic  #12                 // Method io/netty/util/internal/ObjectUtil.checkPositive:(ILjava/lang/String;)I
      42: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      45: putfield      #13                 // Field maxTtl:I
      48: iload_1
      49: iload_2
      50: if_icmple     94
      53: new           #14                 // class java/lang/IllegalArgumentException
      56: dup
      57: new           #15                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #17                 // String minTtl:
      66: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: iload_1
      70: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      73: ldc           #20                 // String , maxTtl:
      75: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: iload_2
      79: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: ldc           #21                 // String  (expected: 0 <= minTtl <= maxTtl)
      84: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: return

  public java.lang.String get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field cache:Lio/netty/resolver/dns/Cache;
       4: aload_1
       5: ldc           #24                 // String hostname
       7: invokestatic  #25                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: checkcast     #26                 // class java/lang/String
      13: invokevirtual #27                 // Method io/netty/resolver/dns/Cache.get:(Ljava/lang/String;)Ljava/util/List;
      16: astore_2
      17: aload_2
      18: ifnull        30
      21: aload_2
      22: invokeinterface #28,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      27: ifeq          32
      30: aconst_null
      31: areturn
      32: aload_2
      33: iconst_0
      34: invokeinterface #29,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      39: checkcast     #26                 // class java/lang/String
      42: areturn

  public void cache(java.lang.String, java.lang.String, long, io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: ldc           #24                 // String hostname
       3: invokestatic  #25                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #30                 // String cname
      10: invokestatic  #25                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload         5
      16: ldc           #31                 // String loop
      18: invokestatic  #25                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: getfield      #6                  // Field cache:Lio/netty/resolver/dns/Cache;
      26: aload_1
      27: aload_2
      28: aload_0
      29: getfield      #10                 // Field minTtl:I
      32: aload_0
      33: getfield      #13                 // Field maxTtl:I
      36: i2l
      37: lload_3
      38: invokestatic  #32                 // Method java/lang/Math.min:(JJ)J
      41: l2i
      42: invokestatic  #33                 // Method java/lang/Math.max:(II)I
      45: aload         5
      47: invokevirtual #34                 // Method io/netty/resolver/dns/Cache.cache:(Ljava/lang/String;Ljava/lang/Object;ILio/netty/channel/EventLoop;)V
      50: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cache:Lio/netty/resolver/dns/Cache;
       4: invokevirtual #35                 // Method io/netty/resolver/dns/Cache.clear:()V
       7: return

  public boolean clear(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field cache:Lio/netty/resolver/dns/Cache;
       4: aload_1
       5: ldc           #24                 // String hostname
       7: invokestatic  #25                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: checkcast     #26                 // class java/lang/String
      13: invokevirtual #36                 // Method io/netty/resolver/dns/Cache.clear:(Ljava/lang/String;)Z
      16: ireturn
}
