Compiled from "NameServerComparator.java"
public final class io.netty.resolver.dns.NameServerComparator implements java.util.Comparator<java.net.InetSocketAddress>, java.io.Serializable {
  private static final long serialVersionUID;

  private final java.lang.Class<? extends java.net.InetAddress> preferredAddressType;

  public io.netty.resolver.dns.NameServerComparator(java.lang.Class<? extends java.net.InetAddress>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String preferredAddressType
       8: invokestatic  #3                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/lang/Class
      14: putfield      #5                  // Field preferredAddressType:Ljava/lang/Class;
      17: return

  public int compare(java.net.InetSocketAddress, java.net.InetSocketAddress);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #6                  // Method java/net/InetSocketAddress.equals:(Ljava/lang/Object;)Z
       5: ifeq          10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: invokevirtual #7                  // Method java/net/InetSocketAddress.isUnresolved:()Z
      14: ifne          66
      17: aload_2
      18: invokevirtual #7                  // Method java/net/InetSocketAddress.isUnresolved:()Z
      21: ifne          66
      24: aload_1
      25: invokevirtual #8                  // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      28: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: aload_2
      32: invokevirtual #8                  // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      35: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      38: if_acmpne     43
      41: iconst_0
      42: ireturn
      43: aload_0
      44: getfield      #5                  // Field preferredAddressType:Ljava/lang/Class;
      47: aload_1
      48: invokevirtual #8                  // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      51: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: invokevirtual #10                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      57: ifeq          64
      60: iconst_m1
      61: goto          65
      64: iconst_1
      65: ireturn
      66: aload_1
      67: invokevirtual #7                  // Method java/net/InetSocketAddress.isUnresolved:()Z
      70: ifeq          82
      73: aload_2
      74: invokevirtual #7                  // Method java/net/InetSocketAddress.isUnresolved:()Z
      77: ifeq          82
      80: iconst_0
      81: ireturn
      82: aload_1
      83: invokevirtual #7                  // Method java/net/InetSocketAddress.isUnresolved:()Z
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_m1
      94: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class java/net/InetSocketAddress
       5: aload_2
       6: checkcast     #11                 // class java/net/InetSocketAddress
       9: invokevirtual #12                 // Method compare:(Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)I
      12: ireturn
}
