Compiled from "TcpDnsQueryContext.java"
final class io.netty.resolver.dns.TcpDnsQueryContext extends io.netty.resolver.dns.DnsQueryContext {
  private final io.netty.channel.Channel channel;

  io.netty.resolver.dns.TcpDnsQueryContext(io.netty.resolver.dns.DnsNameResolver, io.netty.channel.Channel, java.net.InetSocketAddress, io.netty.handler.codec.dns.DnsQuestion, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise<io.netty.channel.AddressedEnvelope<io.netty.handler.codec.dns.DnsResponse, java.net.InetSocketAddress>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload         4
       5: aload         5
       7: aload         6
       9: invokespecial #1                  // Method io/netty/resolver/dns/DnsQueryContext."<init>":(Lio/netty/resolver/dns/DnsNameResolver;Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;)V
      12: aload_0
      13: aload_2
      14: putfield      #2                  // Field channel:Lio/netty/channel/Channel;
      17: return

  protected io.netty.handler.codec.dns.DnsQuery newQuery(int);
    Code:
       0: new           #3                  // class io/netty/handler/codec/dns/DefaultDnsQuery
       3: dup
       4: iload_1
       5: invokespecial #4                  // Method io/netty/handler/codec/dns/DefaultDnsQuery."<init>":(I)V
       8: areturn

  protected io.netty.channel.Channel channel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
       4: areturn

  protected java.lang.String protocol();
    Code:
       0: ldc           #5                  // String TCP
       2: areturn
}
