Compiled from "DnsResolveContext.java"
final class io.netty.resolver.dns.DnsResolveContext$AuthoritativeNameServerList {
  private final java.lang.String questionName;

  private io.netty.resolver.dns.DnsResolveContext$AuthoritativeNameServer head;

  private int nameServerCount;

  static final boolean $assertionsDisabled;

  io.netty.resolver.dns.DnsResolveContext$AuthoritativeNameServerList(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getstatic     #2                  // Field java/util/Locale.US:Ljava/util/Locale;
       9: invokevirtual #3                  // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      12: putfield      #4                  // Field questionName:Ljava/lang/String;
      15: return

  void add(io.netty.handler.codec.dns.DnsRecord);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod io/netty/handler/codec/dns/DnsRecord.type:()Lio/netty/handler/codec/dns/DnsRecordType;
       6: getstatic     #6                  // Field io/netty/handler/codec/dns/DnsRecordType.NS:Lio/netty/handler/codec/dns/DnsRecordType;
       9: if_acmpne     19
      12: aload_1
      13: instanceof    #7                  // class io/netty/handler/codec/dns/DnsRawRecord
      16: ifne          20
      19: return
      20: aload_0
      21: getfield      #4                  // Field questionName:Ljava/lang/String;
      24: invokevirtual #8                  // Method java/lang/String.length:()I
      27: aload_1
      28: invokeinterface #9,  1            // InterfaceMethod io/netty/handler/codec/dns/DnsRecord.name:()Ljava/lang/String;
      33: invokevirtual #8                  // Method java/lang/String.length:()I
      36: if_icmpge     40
      39: return
      40: aload_1
      41: invokeinterface #9,  1            // InterfaceMethod io/netty/handler/codec/dns/DnsRecord.name:()Ljava/lang/String;
      46: getstatic     #2                  // Field java/util/Locale.US:Ljava/util/Locale;
      49: invokevirtual #3                  // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      52: astore_2
      53: iconst_0
      54: istore_3
      55: aload_2
      56: invokevirtual #8                  // Method java/lang/String.length:()I
      59: iconst_1
      60: isub
      61: istore        4
      63: aload_0
      64: getfield      #4                  // Field questionName:Ljava/lang/String;
      67: invokevirtual #8                  // Method java/lang/String.length:()I
      70: iconst_1
      71: isub
      72: istore        5
      74: iload         4
      76: iflt          121
      79: aload_2
      80: iload         4
      82: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      85: istore        6
      87: aload_0
      88: getfield      #4                  // Field questionName:Ljava/lang/String;
      91: iload         5
      93: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      96: iload         6
      98: if_icmpeq     102
     101: return
     102: iload         6
     104: bipush        46
     106: if_icmpne     112
     109: iinc          3, 1
     112: iinc          4, -1
     115: iinc          5, -1
     118: goto          74
     121: aload_0
     122: getfield      #11                 // Field head:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     125: ifnull        140
     128: aload_0
     129: getfield      #11                 // Field head:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     132: invokestatic  #12                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.access$900:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;)I
     135: iload_3
     136: if_icmple     140
     139: return
     140: aload_1
     141: checkcast     #13                 // class io/netty/buffer/ByteBufHolder
     144: invokeinterface #14,  1           // InterfaceMethod io/netty/buffer/ByteBufHolder.content:()Lio/netty/buffer/ByteBuf;
     149: astore        4
     151: aload         4
     153: invokestatic  #15                 // Method io/netty/resolver/dns/DnsResolveContext.decodeDomainName:(Lio/netty/buffer/ByteBuf;)Ljava/lang/String;
     156: astore        5
     158: aload         5
     160: ifnonnull     164
     163: return
     164: aload_0
     165: getfield      #11                 // Field head:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     168: ifnull        182
     171: aload_0
     172: getfield      #11                 // Field head:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     175: invokestatic  #12                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.access$900:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;)I
     178: iload_3
     179: if_icmpge     211
     182: aload_0
     183: iconst_1
     184: putfield      #16                 // Field nameServerCount:I
     187: aload_0
     188: new           #17                 // class io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer
     191: dup
     192: iload_3
     193: aload_1
     194: invokeinterface #18,  1           // InterfaceMethod io/netty/handler/codec/dns/DnsRecord.timeToLive:()J
     199: aload_2
     200: aload         5
     202: invokespecial #19                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer."<init>":(IJLjava/lang/String;Ljava/lang/String;)V
     205: putfield      #11                 // Field head:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     208: goto          278
     211: aload_0
     212: getfield      #11                 // Field head:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     215: invokestatic  #12                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.access$900:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;)I
     218: iload_3
     219: if_icmpne     278
     222: aload_0
     223: getfield      #11                 // Field head:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     226: astore        6
     228: aload         6
     230: getfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     233: ifnull        246
     236: aload         6
     238: getfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     241: astore        6
     243: goto          228
     246: aload         6
     248: new           #17                 // class io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer
     251: dup
     252: iload_3
     253: aload_1
     254: invokeinterface #18,  1           // InterfaceMethod io/netty/handler/codec/dns/DnsRecord.timeToLive:()J
     259: aload_2
     260: aload         5
     262: invokespecial #19                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer."<init>":(IJLjava/lang/String;Ljava/lang/String;)V
     265: putfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     268: aload_0
     269: dup
     270: getfield      #16                 // Field nameServerCount:I
     273: iconst_1
     274: iadd
     275: putfield      #16                 // Field nameServerCount:I
     278: return

  void handleWithAdditional(io.netty.resolver.dns.DnsNameResolver, io.netty.handler.codec.dns.DnsRecord, io.netty.resolver.dns.AuthoritativeDnsServerCache);
    Code:
       0: aload_0
       1: getfield      #11                 // Field head:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
       4: astore        4
       6: aload_2
       7: invokeinterface #9,  1            // InterfaceMethod io/netty/handler/codec/dns/DnsRecord.name:()Ljava/lang/String;
      12: astore        5
      14: aload_2
      15: aload         5
      17: aload_1
      18: invokevirtual #21                 // Method io/netty/resolver/dns/DnsNameResolver.isDecodeIdn:()Z
      21: invokestatic  #22                 // Method io/netty/resolver/dns/DnsAddressDecoder.decodeAddress:(Lio/netty/handler/codec/dns/DnsRecord;Ljava/lang/String;Z)Ljava/net/InetAddress;
      24: astore        6
      26: aload         6
      28: ifnonnull     32
      31: return
      32: aload         4
      34: ifnull        167
      37: aload         4
      39: getfield      #23                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.nsName:Ljava/lang/String;
      42: aload         5
      44: invokevirtual #24                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      47: ifeq          157
      50: aload         4
      52: invokestatic  #25                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.access$1000:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;)Ljava/net/InetSocketAddress;
      55: ifnull        129
      58: aload         4
      60: getfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
      63: ifnull        87
      66: aload         4
      68: getfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
      71: getfield      #26                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.isCopy:Z
      74: ifeq          87
      77: aload         4
      79: getfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
      82: astore        4
      84: goto          58
      87: new           #17                 // class io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer
      90: dup
      91: aload         4
      93: invokespecial #27                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer."<init>":(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;)V
      96: astore        7
      98: aload         7
     100: aload         4
     102: getfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     105: putfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     108: aload         4
     110: aload         7
     112: putfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     115: aload         7
     117: astore        4
     119: aload_0
     120: dup
     121: getfield      #16                 // Field nameServerCount:I
     124: iconst_1
     125: iadd
     126: putfield      #16                 // Field nameServerCount:I
     129: aload         4
     131: aload_1
     132: aload         6
     134: invokevirtual #28                 // Method io/netty/resolver/dns/DnsNameResolver.newRedirectServerAddress:(Ljava/net/InetAddress;)Ljava/net/InetSocketAddress;
     137: aload_2
     138: invokeinterface #18,  1           // InterfaceMethod io/netty/handler/codec/dns/DnsRecord.timeToLive:()J
     143: invokevirtual #29                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.update:(Ljava/net/InetSocketAddress;J)V
     146: aload         4
     148: aload_3
     149: aload_1
     150: invokevirtual #30                 // Method io/netty/resolver/dns/DnsNameResolver.executor:()Lio/netty/channel/EventLoop;
     153: invokestatic  #31                 // Method cache:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;Lio/netty/resolver/dns/AuthoritativeDnsServerCache;Lio/netty/channel/EventLoop;)V
     156: return
     157: aload         4
     159: getfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     162: astore        4
     164: goto          32
     167: return

  void handleWithoutAdditionals(io.netty.resolver.dns.DnsNameResolver, io.netty.resolver.dns.DnsCache, io.netty.resolver.dns.AuthoritativeDnsServerCache);
    Code:
       0: aload_0
       1: getfield      #11                 // Field head:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
       4: astore        4
       6: aload         4
       8: ifnull        216
      11: aload         4
      13: invokestatic  #25                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.access$1000:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;)Ljava/net/InetSocketAddress;
      16: ifnonnull     206
      19: aload         4
      21: aload_3
      22: aload_1
      23: invokevirtual #30                 // Method io/netty/resolver/dns/DnsNameResolver.executor:()Lio/netty/channel/EventLoop;
      26: invokestatic  #32                 // Method cacheUnresolved:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;Lio/netty/resolver/dns/AuthoritativeDnsServerCache;Lio/netty/channel/EventLoop;)V
      29: aload_2
      30: aload         4
      32: getfield      #23                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.nsName:Ljava/lang/String;
      35: aconst_null
      36: invokeinterface #33,  3           // InterfaceMethod io/netty/resolver/dns/DnsCache.get:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;)Ljava/util/List;
      41: astore        5
      43: aload         5
      45: ifnull        206
      48: aload         5
      50: invokeinterface #34,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      55: ifne          206
      58: aload         5
      60: iconst_0
      61: invokeinterface #35,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      66: checkcast     #36                 // class io/netty/resolver/dns/DnsCacheEntry
      69: invokeinterface #37,  1           // InterfaceMethod io/netty/resolver/dns/DnsCacheEntry.address:()Ljava/net/InetAddress;
      74: astore        6
      76: aload         6
      78: ifnull        206
      81: aload         4
      83: aload_1
      84: aload         6
      86: invokevirtual #28                 // Method io/netty/resolver/dns/DnsNameResolver.newRedirectServerAddress:(Ljava/net/InetAddress;)Ljava/net/InetSocketAddress;
      89: invokevirtual #38                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.update:(Ljava/net/InetSocketAddress;)V
      92: iconst_1
      93: istore        7
      95: iload         7
      97: aload         5
      99: invokeinterface #39,  1           // InterfaceMethod java/util/List.size:()I
     104: if_icmpge     206
     107: aload         5
     109: iload         7
     111: invokeinterface #35,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     116: checkcast     #36                 // class io/netty/resolver/dns/DnsCacheEntry
     119: invokeinterface #37,  1           // InterfaceMethod io/netty/resolver/dns/DnsCacheEntry.address:()Ljava/net/InetAddress;
     124: astore        6
     126: getstatic     #40                 // Field $assertionsDisabled:Z
     129: ifne          147
     132: aload         6
     134: ifnonnull     147
     137: new           #41                 // class java/lang/AssertionError
     140: dup
     141: ldc           #42                 // String Cache returned a cached failure, should never return anything else
     143: invokespecial #43                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     146: athrow
     147: new           #17                 // class io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer
     150: dup
     151: aload         4
     153: invokespecial #27                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer."<init>":(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;)V
     156: astore        8
     158: aload         8
     160: aload         4
     162: getfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     165: putfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     168: aload         4
     170: aload         8
     172: putfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     175: aload         8
     177: astore        4
     179: aload         4
     181: aload_1
     182: aload         6
     184: invokevirtual #28                 // Method io/netty/resolver/dns/DnsNameResolver.newRedirectServerAddress:(Ljava/net/InetAddress;)Ljava/net/InetSocketAddress;
     187: invokevirtual #38                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.update:(Ljava/net/InetSocketAddress;)V
     190: aload_0
     191: dup
     192: getfield      #16                 // Field nameServerCount:I
     195: iconst_1
     196: iadd
     197: putfield      #16                 // Field nameServerCount:I
     200: iinc          7, 1
     203: goto          95
     206: aload         4
     208: getfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
     211: astore        4
     213: goto          6
     216: return

  private static void cacheUnresolved(io.netty.resolver.dns.DnsResolveContext$AuthoritativeNameServer, io.netty.resolver.dns.AuthoritativeDnsServerCache, io.netty.channel.EventLoop);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.nsName:Ljava/lang/String;
       5: bipush        53
       7: invokestatic  #45                 // Method java/net/InetSocketAddress.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
      10: invokestatic  #46                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.access$1002:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
      13: pop
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokestatic  #31                 // Method cache:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;Lio/netty/resolver/dns/AuthoritativeDnsServerCache;Lio/netty/channel/EventLoop;)V
      20: return

  private static void cache(io.netty.resolver.dns.DnsResolveContext$AuthoritativeNameServer, io.netty.resolver.dns.AuthoritativeDnsServerCache, io.netty.channel.EventLoop);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.isRootServer:()Z
       4: ifne          26
       7: aload_1
       8: aload_0
       9: invokestatic  #48                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.access$1100:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;)Ljava/lang/String;
      12: aload_0
      13: invokestatic  #25                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.access$1000:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;)Ljava/net/InetSocketAddress;
      16: aload_0
      17: invokestatic  #49                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.access$1200:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;)J
      20: aload_2
      21: invokeinterface #50,  6           // InterfaceMethod io/netty/resolver/dns/AuthoritativeDnsServerCache.cache:(Ljava/lang/String;Ljava/net/InetSocketAddress;JLio/netty/channel/EventLoop;)V
      26: return

  boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #16                 // Field nameServerCount:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  java.util.List<java.net.InetSocketAddress> addressList();
    Code:
       0: new           #51                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #16                 // Field nameServerCount:I
       8: invokespecial #52                 // Method java/util/ArrayList."<init>":(I)V
      11: astore_1
      12: aload_0
      13: getfield      #11                 // Field head:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
      16: astore_2
      17: aload_2
      18: ifnull        47
      21: aload_2
      22: invokestatic  #25                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.access$1000:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;)Ljava/net/InetSocketAddress;
      25: ifnull        39
      28: aload_1
      29: aload_2
      30: invokestatic  #25                 // Method io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.access$1000:(Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;)Ljava/net/InetSocketAddress;
      33: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      38: pop
      39: aload_2
      40: getfield      #20                 // Field io/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer.next:Lio/netty/resolver/dns/DnsResolveContext$AuthoritativeNameServer;
      43: astore_2
      44: goto          17
      47: aload_1
      48: areturn

  static {};
    Code:
       0: ldc           #54                 // class io/netty/resolver/dns/DnsResolveContext
       2: invokevirtual #55                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #40                 // Field $assertionsDisabled:Z
      16: return
}
