Compiled from "DnsNameResolver.java"
class io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1 implements io.netty.channel.ChannelFutureListener {
  final int val$queryId;

  final io.netty.resolver.dns.DnsQueryContext val$qCtx;

  final io.netty.handler.codec.dns.DatagramDnsResponse val$res;

  final io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler this$1;

  io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1(io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler, int, io.netty.resolver.dns.DnsQueryContext, io.netty.handler.codec.dns.DatagramDnsResponse);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field val$queryId:I
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$qCtx:Lio/netty/resolver/dns/DnsQueryContext;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$res:Lio/netty/handler/codec/dns/DatagramDnsResponse;
      21: aload_0
      22: invokespecial #5                  // Method java/lang/Object."<init>":()V
      25: return

  public void operationComplete(io.netty.channel.ChannelFuture);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
       6: ifne          55
       9: invokestatic  #7                  // Method io/netty/resolver/dns/DnsNameResolver.access$000:()Lio/netty/util/internal/logging/InternalLogger;
      12: invokeinterface #8,  1            // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      17: ifeq          43
      20: invokestatic  #7                  // Method io/netty/resolver/dns/DnsNameResolver.access$000:()Lio/netty/util/internal/logging/InternalLogger;
      23: ldc           #9                  // String Unable to fallback to TCP [{}]
      25: aload_0
      26: getfield      #2                  // Field val$queryId:I
      29: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aload_1
      33: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      38: invokeinterface #12,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      43: aload_0
      44: getfield      #3                  // Field val$qCtx:Lio/netty/resolver/dns/DnsQueryContext;
      47: aload_0
      48: getfield      #4                  // Field val$res:Lio/netty/handler/codec/dns/DatagramDnsResponse;
      51: invokevirtual #13                 // Method io/netty/resolver/dns/DnsQueryContext.finish:(Lio/netty/channel/AddressedEnvelope;)V
      54: return
      55: aload_1
      56: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      61: astore_2
      62: aload_2
      63: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      68: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/EventLoop.newPromise:()Lio/netty/util/concurrent/Promise;
      73: astore_3
      74: new           #17                 // class io/netty/resolver/dns/TcpDnsQueryContext
      77: dup
      78: aload_0
      79: getfield      #1                  // Field this$1:Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler;
      82: getfield      #18                 // Field io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler.this$0:Lio/netty/resolver/dns/DnsNameResolver;
      85: aload_2
      86: aload_2
      87: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
      92: checkcast     #20                 // class java/net/InetSocketAddress
      95: aload_0
      96: getfield      #3                  // Field val$qCtx:Lio/netty/resolver/dns/DnsQueryContext;
      99: invokevirtual #21                 // Method io/netty/resolver/dns/DnsQueryContext.question:()Lio/netty/handler/codec/dns/DnsQuestion;
     102: invokestatic  #22                 // Method io/netty/resolver/dns/DnsNameResolver.access$900:()[Lio/netty/handler/codec/dns/DnsRecord;
     105: aload_3
     106: invokespecial #23                 // Method io/netty/resolver/dns/TcpDnsQueryContext."<init>":(Lio/netty/resolver/dns/DnsNameResolver;Lio/netty/channel/Channel;Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsQuestion;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;)V
     109: astore        4
     111: aload_2
     112: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
     117: iconst_1
     118: anewarray     #25                 // class io/netty/channel/ChannelHandler
     121: dup
     122: iconst_0
     123: new           #26                 // class io/netty/handler/codec/dns/TcpDnsResponseDecoder
     126: dup
     127: invokespecial #27                 // Method io/netty/handler/codec/dns/TcpDnsResponseDecoder."<init>":()V
     130: aastore
     131: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     136: pop
     137: aload_2
     138: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
     143: iconst_1
     144: anewarray     #25                 // class io/netty/channel/ChannelHandler
     147: dup
     148: iconst_0
     149: new           #29                 // class io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1$1
     152: dup
     153: aload_0
     154: aload         4
     156: invokespecial #30                 // Method io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1$1."<init>":(Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1;Lio/netty/resolver/dns/TcpDnsQueryContext;)V
     159: aastore
     160: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     165: pop
     166: aload_3
     167: new           #31                 // class io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1$2
     170: dup
     171: aload_0
     172: aload_2
     173: invokespecial #32                 // Method io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1$2."<init>":(Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1;Lio/netty/channel/Channel;)V
     176: invokeinterface #33,  2           // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
     181: pop
     182: aload         4
     184: iconst_1
     185: aload_1
     186: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
     191: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/Channel.newPromise:()Lio/netty/channel/ChannelPromise;
     196: invokevirtual #35                 // Method io/netty/resolver/dns/TcpDnsQueryContext.query:(ZLio/netty/channel/ChannelPromise;)V
     199: return

  public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #36                 // class io/netty/channel/ChannelFuture
       5: invokevirtual #37                 // Method operationComplete:(Lio/netty/channel/ChannelFuture;)V
       8: return
}
