Compiled from "PreferredAddressTypeComparator.java"
final class io.netty.resolver.dns.PreferredAddressTypeComparator implements java.util.Comparator<java.net.InetAddress> {
  private static final io.netty.resolver.dns.PreferredAddressTypeComparator IPv4;

  private static final io.netty.resolver.dns.PreferredAddressTypeComparator IPv6;

  private final java.lang.Class<? extends java.net.InetAddress> preferredAddressType;

  static io.netty.resolver.dns.PreferredAddressTypeComparator comparator(io.netty.channel.socket.InternetProtocolFamily);
    Code:
       0: getstatic     #1                  // Field io/netty/resolver/dns/PreferredAddressTypeComparator$1.$SwitchMap$io$netty$channel$socket$InternetProtocolFamily:[I
       3: aload_0
       4: invokevirtual #2                  // Method io/netty/channel/socket/InternetProtocolFamily.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 40
               default: 44
          }
      36: getstatic     #3                  // Field IPv4:Lio/netty/resolver/dns/PreferredAddressTypeComparator;
      39: areturn
      40: getstatic     #4                  // Field IPv6:Lio/netty/resolver/dns/PreferredAddressTypeComparator;
      43: areturn
      44: new           #5                  // class java/lang/IllegalArgumentException
      47: dup
      48: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":()V
      51: athrow

  private io.netty.resolver.dns.PreferredAddressTypeComparator(java.lang.Class<? extends java.net.InetAddress>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #8                  // Field preferredAddressType:Ljava/lang/Class;
       9: return

  public int compare(java.net.InetAddress, java.net.InetAddress);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: aload_2
       5: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: if_acmpne     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #8                  // Field preferredAddressType:Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: invokevirtual #10                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      24: ifeq          31
      27: iconst_m1
      28: goto          32
      31: iconst_1
      32: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class java/net/InetAddress
       5: aload_2
       6: checkcast     #11                 // class java/net/InetAddress
       9: invokevirtual #12                 // Method compare:(Ljava/net/InetAddress;Ljava/net/InetAddress;)I
      12: ireturn

  static {};
    Code:
       0: new           #13                 // class io/netty/resolver/dns/PreferredAddressTypeComparator
       3: dup
       4: ldc           #14                 // class java/net/Inet4Address
       6: invokespecial #15                 // Method "<init>":(Ljava/lang/Class;)V
       9: putstatic     #3                  // Field IPv4:Lio/netty/resolver/dns/PreferredAddressTypeComparator;
      12: new           #13                 // class io/netty/resolver/dns/PreferredAddressTypeComparator
      15: dup
      16: ldc           #16                 // class java/net/Inet6Address
      18: invokespecial #15                 // Method "<init>":(Ljava/lang/Class;)V
      21: putstatic     #4                  // Field IPv6:Lio/netty/resolver/dns/PreferredAddressTypeComparator;
      24: return
}
