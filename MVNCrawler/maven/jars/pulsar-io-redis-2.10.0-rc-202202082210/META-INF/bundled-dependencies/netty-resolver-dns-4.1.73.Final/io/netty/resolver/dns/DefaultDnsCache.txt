Compiled from "DefaultDnsCache.java"
public class io.netty.resolver.dns.DefaultDnsCache implements io.netty.resolver.dns.DnsCache {
  private final io.netty.resolver.dns.Cache<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry> resolveCache;

  private final int minTtl;

  private final int maxTtl;

  private final int negativeTtl;

  public io.netty.resolver.dns.DefaultDnsCache();
    Code:
       0: aload_0
       1: iconst_0
       2: getstatic     #1                  // Field io/netty/resolver/dns/Cache.MAX_SUPPORTED_TTL_SECS:I
       5: iconst_0
       6: invokespecial #2                  // Method "<init>":(III)V
       9: return

  public io.netty.resolver.dns.DefaultDnsCache(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class io/netty/resolver/dns/DefaultDnsCache$1
       8: dup
       9: aload_0
      10: invokespecial #5                  // Method io/netty/resolver/dns/DefaultDnsCache$1."<init>":(Lio/netty/resolver/dns/DefaultDnsCache;)V
      13: putfield      #6                  // Field resolveCache:Lio/netty/resolver/dns/Cache;
      16: aload_0
      17: getstatic     #1                  // Field io/netty/resolver/dns/Cache.MAX_SUPPORTED_TTL_SECS:I
      20: iload_1
      21: ldc           #7                  // String minTtl
      23: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
      26: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      29: putfield      #10                 // Field minTtl:I
      32: aload_0
      33: getstatic     #1                  // Field io/netty/resolver/dns/Cache.MAX_SUPPORTED_TTL_SECS:I
      36: iload_2
      37: ldc           #11                 // String maxTtl
      39: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
      42: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      45: putfield      #12                 // Field maxTtl:I
      48: iload_1
      49: iload_2
      50: if_icmple     94
      53: new           #13                 // class java/lang/IllegalArgumentException
      56: dup
      57: new           #14                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #16                 // String minTtl:
      66: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: iload_1
      70: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      73: ldc           #19                 // String , maxTtl:
      75: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: iload_2
      79: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: ldc           #20                 // String  (expected: 0 <= minTtl <= maxTtl)
      84: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_0
      95: iload_3
      96: ldc           #23                 // String negativeTtl
      98: invokestatic  #8                  // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
     101: putfield      #24                 // Field negativeTtl:I
     104: return

  public int minTtl();
    Code:
       0: aload_0
       1: getfield      #10                 // Field minTtl:I
       4: ireturn

  public int maxTtl();
    Code:
       0: aload_0
       1: getfield      #12                 // Field maxTtl:I
       4: ireturn

  public int negativeTtl();
    Code:
       0: aload_0
       1: getfield      #24                 // Field negativeTtl:I
       4: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field resolveCache:Lio/netty/resolver/dns/Cache;
       4: invokevirtual #25                 // Method io/netty/resolver/dns/Cache.clear:()V
       7: return

  public boolean clear(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #26                 // String hostname
       3: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #6                  // Field resolveCache:Lio/netty/resolver/dns/Cache;
      11: aload_1
      12: invokestatic  #28                 // Method appendDot:(Ljava/lang/String;)Ljava/lang/String;
      15: invokevirtual #29                 // Method io/netty/resolver/dns/Cache.clear:(Ljava/lang/String;)Z
      18: ireturn

  private static boolean emptyAdditionals(io.netty.handler.codec.dns.DnsRecord[]);
    Code:
       0: aload_0
       1: ifnull        9
       4: aload_0
       5: arraylength
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public java.util.List<? extends io.netty.resolver.dns.DnsCacheEntry> get(java.lang.String, io.netty.handler.codec.dns.DnsRecord[]);
    Code:
       0: aload_1
       1: ldc           #26                 // String hostname
       3: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: invokestatic  #30                 // Method emptyAdditionals:([Lio/netty/handler/codec/dns/DnsRecord;)Z
      11: ifne          18
      14: invokestatic  #31                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      17: areturn
      18: aload_0
      19: getfield      #6                  // Field resolveCache:Lio/netty/resolver/dns/Cache;
      22: aload_1
      23: invokestatic  #28                 // Method appendDot:(Ljava/lang/String;)Ljava/lang/String;
      26: invokevirtual #32                 // Method io/netty/resolver/dns/Cache.get:(Ljava/lang/String;)Ljava/util/List;
      29: areturn

  public io.netty.resolver.dns.DnsCacheEntry cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], java.net.InetAddress, long, io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: ldc           #26                 // String hostname
       3: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: ldc           #33                 // String address
      10: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload         6
      16: ldc           #34                 // String loop
      18: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: new           #35                 // class io/netty/resolver/dns/DefaultDnsCache$DefaultDnsCacheEntry
      25: dup
      26: aload_1
      27: aload_3
      28: invokespecial #36                 // Method io/netty/resolver/dns/DefaultDnsCache$DefaultDnsCacheEntry."<init>":(Ljava/lang/String;Ljava/net/InetAddress;)V
      31: astore        7
      33: aload_0
      34: getfield      #12                 // Field maxTtl:I
      37: ifeq          47
      40: aload_2
      41: invokestatic  #30                 // Method emptyAdditionals:([Lio/netty/handler/codec/dns/DnsRecord;)Z
      44: ifne          50
      47: aload         7
      49: areturn
      50: aload_0
      51: getfield      #6                  // Field resolveCache:Lio/netty/resolver/dns/Cache;
      54: aload_1
      55: invokestatic  #28                 // Method appendDot:(Ljava/lang/String;)Ljava/lang/String;
      58: aload         7
      60: aload_0
      61: getfield      #10                 // Field minTtl:I
      64: aload_0
      65: getfield      #12                 // Field maxTtl:I
      68: i2l
      69: lload         4
      71: invokestatic  #37                 // Method java/lang/Math.min:(JJ)J
      74: l2i
      75: invokestatic  #38                 // Method java/lang/Math.max:(II)I
      78: aload         6
      80: invokevirtual #39                 // Method io/netty/resolver/dns/Cache.cache:(Ljava/lang/String;Ljava/lang/Object;ILio/netty/channel/EventLoop;)V
      83: aload         7
      85: areturn

  public io.netty.resolver.dns.DnsCacheEntry cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], java.lang.Throwable, io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: ldc           #26                 // String hostname
       3: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: ldc           #40                 // String cause
      10: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload         4
      16: ldc           #34                 // String loop
      18: invokestatic  #27                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: new           #35                 // class io/netty/resolver/dns/DefaultDnsCache$DefaultDnsCacheEntry
      25: dup
      26: aload_1
      27: aload_3
      28: invokespecial #41                 // Method io/netty/resolver/dns/DefaultDnsCache$DefaultDnsCacheEntry."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      31: astore        5
      33: aload_0
      34: getfield      #24                 // Field negativeTtl:I
      37: ifeq          47
      40: aload_2
      41: invokestatic  #30                 // Method emptyAdditionals:([Lio/netty/handler/codec/dns/DnsRecord;)Z
      44: ifne          50
      47: aload         5
      49: areturn
      50: aload_0
      51: getfield      #6                  // Field resolveCache:Lio/netty/resolver/dns/Cache;
      54: aload_1
      55: invokestatic  #28                 // Method appendDot:(Ljava/lang/String;)Ljava/lang/String;
      58: aload         5
      60: aload_0
      61: getfield      #24                 // Field negativeTtl:I
      64: aload         4
      66: invokevirtual #39                 // Method io/netty/resolver/dns/Cache.cache:(Ljava/lang/String;Ljava/lang/Object;ILio/netty/channel/EventLoop;)V
      69: aload         5
      71: areturn

  public java.lang.String toString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #42                 // String DefaultDnsCache(minTtl=
       9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #10                 // Field minTtl:I
      16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #43                 // String , maxTtl=
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #12                 // Field maxTtl:I
      28: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #44                 // String , negativeTtl=
      33: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #24                 // Field negativeTtl:I
      40: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #45                 // String , cached resolved hostname=
      45: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #6                  // Field resolveCache:Lio/netty/resolver/dns/Cache;
      52: invokevirtual #46                 // Method io/netty/resolver/dns/Cache.size:()I
      55: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: bipush        41
      60: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      63: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: areturn

  private static java.lang.String appendDot(java.lang.String);
    Code:
       0: aload_0
       1: bipush        46
       3: invokestatic  #48                 // Method io/netty/util/internal/StringUtil.endsWith:(Ljava/lang/CharSequence;C)Z
       6: ifeq          13
       9: aload_0
      10: goto          32
      13: new           #14                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      20: aload_0
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: bipush        46
      26: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      29: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn
}
