Compiled from "DefaultHttp2RemoteFlowController.java"
final class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState implements io.netty.handler.codec.http2.StreamByteDistributor$StreamState {
  private final io.netty.handler.codec.http2.Http2Stream stream;

  private final java.util.Deque<io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled> pendingWriteQueue;

  private int window;

  private long pendingBytes;

  private boolean markedWritable;

  private boolean writing;

  private boolean cancelled;

  static final boolean $assertionsDisabled;

  final io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0;

  io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController, io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #1                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      14: aload_0
      15: new           #4                  // class java/util/ArrayDeque
      18: dup
      19: iconst_2
      20: invokespecial #5                  // Method java/util/ArrayDeque."<init>":(I)V
      23: putfield      #6                  // Field pendingWriteQueue:Ljava/util/Deque;
      26: return

  boolean isWritable();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method windowSize:()I
       4: i2l
       5: aload_0
       6: invokevirtual #8                  // Method pendingBytes:()J
       9: lcmp
      10: ifle          24
      13: aload_0
      14: getfield      #9                  // Field cancelled:Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public io.netty.handler.codec.http2.Http2Stream stream();
    Code:
       0: aload_0
       1: getfield      #1                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
       4: areturn

  boolean markedWritability();
    Code:
       0: aload_0
       1: getfield      #10                 // Field markedWritable:Z
       4: ireturn

  void markedWritability(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field markedWritable:Z
       5: return

  public int windowSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field window:I
       4: ireturn

  void windowSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field window:I
       5: return

  int writeAllocatedBytes(int);
    Code:
       0: iload_1
       1: istore_2
       2: aconst_null
       3: astore        4
       5: getstatic     #12                 // Field $assertionsDisabled:Z
       8: ifne          26
      11: aload_0
      12: getfield      #13                 // Field writing:Z
      15: ifeq          26
      18: new           #14                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: iconst_1
      28: putfield      #13                 // Field writing:Z
      31: iconst_0
      32: istore        6
      34: aload_0
      35: getfield      #9                  // Field cancelled:Z
      38: ifne          175
      41: aload_0
      42: invokespecial #16                 // Method peek:()Lio/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled;
      45: dup
      46: astore        5
      48: ifnull        175
      51: iload_1
      52: aload_0
      53: invokespecial #17                 // Method writableWindow:()I
      56: invokestatic  #18                 // Method java/lang/Math.min:(II)I
      59: istore        7
      61: iload         7
      63: ifgt          79
      66: aload         5
      68: invokeinterface #19,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.size:()I
      73: ifle          79
      76: goto          175
      79: iconst_1
      80: istore        6
      82: aload         5
      84: invokeinterface #19,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.size:()I
      89: istore        8
      91: aload         5
      93: aload_0
      94: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      97: invokestatic  #20                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$500:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/channel/ChannelHandlerContext;
     100: iconst_0
     101: iload         7
     103: invokestatic  #21                 // Method java/lang/Math.max:(II)I
     106: invokeinterface #22,  3           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.write:(Lio/netty/channel/ChannelHandlerContext;I)V
     111: aload         5
     113: invokeinterface #19,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.size:()I
     118: ifne          138
     121: aload_0
     122: getfield      #6                  // Field pendingWriteQueue:Ljava/util/Deque;
     125: invokeinterface #23,  1           // InterfaceMethod java/util/Deque.remove:()Ljava/lang/Object;
     130: pop
     131: aload         5
     133: invokeinterface #24,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.writeComplete:()V
     138: iload_1
     139: iload         8
     141: aload         5
     143: invokeinterface #19,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.size:()I
     148: isub
     149: isub
     150: istore_1
     151: goto          172
     154: astore        9
     156: iload_1
     157: iload         8
     159: aload         5
     161: invokeinterface #19,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.size:()I
     166: isub
     167: isub
     168: istore_1
     169: aload         9
     171: athrow
     172: goto          34
     175: iload         6
     177: ifne          222
     180: iconst_m1
     181: istore        7
     183: aload_0
     184: iconst_0
     185: putfield      #13                 // Field writing:Z
     188: iload_2
     189: iload_1
     190: isub
     191: istore_3
     192: aload_0
     193: iload_3
     194: iconst_0
     195: invokespecial #25                 // Method decrementPendingBytes:(IZ)V
     198: aload_0
     199: iload_3
     200: invokespecial #26                 // Method decrementFlowControlWindow:(I)V
     203: aload_0
     204: getfield      #9                  // Field cancelled:Z
     207: ifeq          219
     210: aload_0
     211: getstatic     #27                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     214: aload         4
     216: invokevirtual #28                 // Method cancel:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;)V
     219: iload         7
     221: ireturn
     222: aload_0
     223: iconst_0
     224: putfield      #13                 // Field writing:Z
     227: iload_2
     228: iload_1
     229: isub
     230: istore_3
     231: aload_0
     232: iload_3
     233: iconst_0
     234: invokespecial #25                 // Method decrementPendingBytes:(IZ)V
     237: aload_0
     238: iload_3
     239: invokespecial #26                 // Method decrementFlowControlWindow:(I)V
     242: aload_0
     243: getfield      #9                  // Field cancelled:Z
     246: ifeq          352
     249: aload_0
     250: getstatic     #27                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     253: aload         4
     255: invokevirtual #28                 // Method cancel:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;)V
     258: goto          352
     261: astore        6
     263: aload_0
     264: iconst_1
     265: putfield      #9                  // Field cancelled:Z
     268: aload         6
     270: astore        4
     272: aload_0
     273: iconst_0
     274: putfield      #13                 // Field writing:Z
     277: iload_2
     278: iload_1
     279: isub
     280: istore_3
     281: aload_0
     282: iload_3
     283: iconst_0
     284: invokespecial #25                 // Method decrementPendingBytes:(IZ)V
     287: aload_0
     288: iload_3
     289: invokespecial #26                 // Method decrementFlowControlWindow:(I)V
     292: aload_0
     293: getfield      #9                  // Field cancelled:Z
     296: ifeq          352
     299: aload_0
     300: getstatic     #27                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     303: aload         4
     305: invokevirtual #28                 // Method cancel:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;)V
     308: goto          352
     311: astore        10
     313: aload_0
     314: iconst_0
     315: putfield      #13                 // Field writing:Z
     318: iload_2
     319: iload_1
     320: isub
     321: istore_3
     322: aload_0
     323: iload_3
     324: iconst_0
     325: invokespecial #25                 // Method decrementPendingBytes:(IZ)V
     328: aload_0
     329: iload_3
     330: invokespecial #26                 // Method decrementFlowControlWindow:(I)V
     333: aload_0
     334: getfield      #9                  // Field cancelled:Z
     337: ifeq          349
     340: aload_0
     341: getstatic     #27                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     344: aload         4
     346: invokevirtual #28                 // Method cancel:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;)V
     349: aload         10
     351: athrow
     352: iload_3
     353: ireturn
    Exception table:
       from    to  target type
          91   138   154   any
         154   156   154   any
           5   183   261   Class java/lang/Throwable
           5   183   311   any
         261   272   311   any
         311   313   311   any

  int incrementStreamWindow(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_1
       1: ifle          52
       4: ldc           #31                 // int 2147483647
       6: iload_1
       7: isub
       8: aload_0
       9: getfield      #11                 // Field window:I
      12: if_icmpge     52
      15: aload_0
      16: getfield      #1                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      19: invokeinterface #32,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      24: getstatic     #33                 // Field io/netty/handler/codec/http2/Http2Error.FLOW_CONTROL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      27: ldc           #34                 // String Window size overflow for stream: %d
      29: iconst_1
      30: anewarray     #35                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_0
      36: getfield      #1                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      39: invokeinterface #32,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      44: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: aastore
      48: invokestatic  #37                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      51: athrow
      52: aload_0
      53: dup
      54: getfield      #11                 // Field window:I
      57: iload_1
      58: iadd
      59: putfield      #11                 // Field window:I
      62: aload_0
      63: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      66: invokestatic  #38                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$600:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/StreamByteDistributor;
      69: aload_0
      70: invokeinterface #39,  2           // InterfaceMethod io/netty/handler/codec/http2/StreamByteDistributor.updateStreamableBytes:(Lio/netty/handler/codec/http2/StreamByteDistributor$StreamState;)V
      75: aload_0
      76: getfield      #11                 // Field window:I
      79: ireturn

  private int writableWindow();
    Code:
       0: aload_0
       1: getfield      #11                 // Field window:I
       4: aload_0
       5: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       8: invokestatic  #40                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$700:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)I
      11: invokestatic  #18                 // Method java/lang/Math.min:(II)I
      14: ireturn

  public long pendingBytes();
    Code:
       0: aload_0
       1: getfield      #41                 // Field pendingBytes:J
       4: lreturn

  void enqueueFrame(io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled);
    Code:
       0: aload_0
       1: getfield      #6                  // Field pendingWriteQueue:Ljava/util/Deque;
       4: invokeinterface #42,  1           // InterfaceMethod java/util/Deque.peekLast:()Ljava/lang/Object;
       9: checkcast     #43                 // class io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled
      12: astore_2
      13: aload_2
      14: ifnonnull     23
      17: aload_0
      18: aload_1
      19: invokespecial #44                 // Method enqueueFrameWithoutMerge:(Lio/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled;)V
      22: return
      23: aload_2
      24: invokeinterface #19,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.size:()I
      29: istore_3
      30: aload_2
      31: aload_0
      32: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      35: invokestatic  #20                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$500:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/channel/ChannelHandlerContext;
      38: aload_1
      39: invokeinterface #45,  3           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.merge:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled;)Z
      44: ifeq          61
      47: aload_0
      48: aload_2
      49: invokeinterface #19,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.size:()I
      54: iload_3
      55: isub
      56: iconst_1
      57: invokespecial #46                 // Method incrementPendingBytes:(IZ)V
      60: return
      61: aload_0
      62: aload_1
      63: invokespecial #44                 // Method enqueueFrameWithoutMerge:(Lio/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled;)V
      66: return

  private void enqueueFrameWithoutMerge(io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled);
    Code:
       0: aload_0
       1: getfield      #6                  // Field pendingWriteQueue:Ljava/util/Deque;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod java/util/Deque.offer:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: aload_1
      13: invokeinterface #19,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.size:()I
      18: iconst_1
      19: invokespecial #46                 // Method incrementPendingBytes:(IZ)V
      22: return

  public boolean hasFrame();
    Code:
       0: aload_0
       1: getfield      #6                  // Field pendingWriteQueue:Ljava/util/Deque;
       4: invokeinterface #48,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled peek();
    Code:
       0: aload_0
       1: getfield      #6                  // Field pendingWriteQueue:Ljava/util/Deque;
       4: invokeinterface #49,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
       9: checkcast     #43                 // class io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled
      12: areturn

  void cancel(io.netty.handler.codec.http2.Http2Error, java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field cancelled:Z
       5: aload_0
       6: getfield      #13                 // Field writing:Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #6                  // Field pendingWriteQueue:Ljava/util/Deque;
      17: invokeinterface #50,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      22: checkcast     #43                 // class io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled
      25: astore_3
      26: aload_3
      27: ifnull        76
      30: aload_0
      31: getfield      #1                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      34: invokeinterface #32,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      39: aload_1
      40: aload_2
      41: ldc           #51                 // String Stream closed before write could take place
      43: iconst_0
      44: anewarray     #35                 // class java/lang/Object
      47: invokestatic  #52                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      50: astore        4
      52: aload_0
      53: aload_3
      54: aload         4
      56: invokespecial #53                 // Method writeError:(Lio/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled;Lio/netty/handler/codec/http2/Http2Exception;)V
      59: aload_0
      60: getfield      #6                  // Field pendingWriteQueue:Ljava/util/Deque;
      63: invokeinterface #50,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      68: checkcast     #43                 // class io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled
      71: astore_3
      72: aload_3
      73: ifnonnull     52
      76: aload_0
      77: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      80: invokestatic  #38                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$600:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/StreamByteDistributor;
      83: aload_0
      84: invokeinterface #39,  2           // InterfaceMethod io/netty/handler/codec/http2/StreamByteDistributor.updateStreamableBytes:(Lio/netty/handler/codec/http2/StreamByteDistributor$StreamState;)V
      89: aload_0
      90: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      93: invokestatic  #54                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$300:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor;
      96: aload_0
      97: invokevirtual #55                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor.stateCancelled:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;)V
     100: return

  private void incrementPendingBytes(int, boolean);
    Code:
       0: aload_0
       1: dup
       2: getfield      #41                 // Field pendingBytes:J
       5: iload_1
       6: i2l
       7: ladd
       8: putfield      #41                 // Field pendingBytes:J
      11: aload_0
      12: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      15: invokestatic  #54                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$300:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor;
      18: iload_1
      19: invokevirtual #56                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor.incrementPendingBytes:(I)V
      22: iload_2
      23: ifeq          39
      26: aload_0
      27: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      30: invokestatic  #38                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$600:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/StreamByteDistributor;
      33: aload_0
      34: invokeinterface #39,  2           // InterfaceMethod io/netty/handler/codec/http2/StreamByteDistributor.updateStreamableBytes:(Lio/netty/handler/codec/http2/StreamByteDistributor$StreamState;)V
      39: return

  private void decrementPendingBytes(int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ineg
       3: iload_2
       4: invokespecial #46                 // Method incrementPendingBytes:(IZ)V
       7: return

  private void decrementFlowControlWindow(int);
    Code:
       0: iload_1
       1: ineg
       2: istore_2
       3: aload_0
       4: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       7: invokestatic  #57                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$800:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;
      10: iload_2
      11: invokevirtual #58                 // Method incrementStreamWindow:(I)I
      14: pop
      15: aload_0
      16: iload_2
      17: invokevirtual #58                 // Method incrementStreamWindow:(I)I
      20: pop
      21: goto          56
      24: astore_2
      25: new           #60                 // class java/lang/IllegalStateException
      28: dup
      29: new           #61                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #63                 // String Invalid window state when writing frame:
      38: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_2
      42: invokevirtual #65                 // Method io/netty/handler/codec/http2/Http2Exception.getMessage:()Ljava/lang/String;
      45: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: aload_2
      52: invokespecial #67                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    21    24   Class io/netty/handler/codec/http2/Http2Exception

  private void writeError(io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled, io.netty.handler.codec.http2.Http2Exception);
    Code:
       0: getstatic     #12                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      10: invokestatic  #20                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$500:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/channel/ChannelHandlerContext;
      13: ifnonnull     24
      16: new           #14                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: aload_1
      26: invokeinterface #19,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.size:()I
      31: iconst_1
      32: invokespecial #25                 // Method decrementPendingBytes:(IZ)V
      35: aload_1
      36: aload_0
      37: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      40: invokestatic  #20                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$500:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/channel/ChannelHandlerContext;
      43: aload_2
      44: invokeinterface #68,  3           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled.error:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      49: return

  static io.netty.handler.codec.http2.Http2Stream access$1300(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState);
    Code:
       0: aload_0
       1: getfield      #1                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
       4: areturn

  static {};
    Code:
       0: ldc           #69                 // class io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController
       2: invokevirtual #70                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #12                 // Field $assertionsDisabled:Z
      16: return
}
