Compiled from "Http2StreamChannelBootstrap.java"
public final class io.netty.handler.codec.http2.Http2StreamChannelBootstrap {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.util.Map$Entry<io.netty.channel.ChannelOption<?>, java.lang.Object>[] EMPTY_OPTION_ARRAY;

  private static final java.util.Map$Entry<io.netty.util.AttributeKey<?>, java.lang.Object>[] EMPTY_ATTRIBUTE_ARRAY;

  private final java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> options;

  private final java.util.Map<io.netty.util.AttributeKey<?>, java.lang.Object> attrs;

  private final io.netty.channel.Channel channel;

  private volatile io.netty.channel.ChannelHandler handler;

  private volatile io.netty.channel.ChannelHandlerContext multiplexCtx;

  static final boolean $assertionsDisabled;

  public io.netty.handler.codec.http2.Http2StreamChannelBootstrap(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #5                  // Field options:Ljava/util/Map;
      15: aload_0
      16: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #8                  // Field attrs:Ljava/util/Map;
      26: aload_0
      27: aload_1
      28: ldc           #9                  // String channel
      30: invokestatic  #10                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      33: checkcast     #11                 // class io/netty/channel/Channel
      36: putfield      #1                  // Field channel:Lio/netty/channel/Channel;
      39: return

  public <T> io.netty.handler.codec.http2.Http2StreamChannelBootstrap option(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_1
       1: ldc           #12                 // String option
       3: invokestatic  #10                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #5                  // Field options:Ljava/util/Map;
      11: dup
      12: astore_3
      13: monitorenter
      14: aload_2
      15: ifnonnull     32
      18: aload_0
      19: getfield      #5                  // Field options:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: goto          44
      32: aload_0
      33: getfield      #5                  // Field options:Ljava/util/Map;
      36: aload_1
      37: aload_2
      38: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: aload_3
      45: monitorexit
      46: goto          56
      49: astore        4
      51: aload_3
      52: monitorexit
      53: aload         4
      55: athrow
      56: aload_0
      57: areturn
    Exception table:
       from    to  target type
          14    46    49   any
          49    53    49   any

  public <T> io.netty.handler.codec.http2.Http2StreamChannelBootstrap attr(io.netty.util.AttributeKey<T>, T);
    Code:
       0: aload_1
       1: ldc           #15                 // String key
       3: invokestatic  #10                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ifnonnull     25
      11: aload_0
      12: getfield      #8                  // Field attrs:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: goto          37
      25: aload_0
      26: getfield      #8                  // Field attrs:Ljava/util/Map;
      29: aload_1
      30: aload_2
      31: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_0
      38: areturn

  public io.netty.handler.codec.http2.Http2StreamChannelBootstrap handler(io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #16                 // String handler
       4: invokestatic  #10                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #17                 // class io/netty/channel/ChannelHandler
      10: putfield      #18                 // Field handler:Lio/netty/channel/ChannelHandler;
      13: aload_0
      14: areturn

  public io.netty.util.concurrent.Future<io.netty.handler.codec.http2.Http2StreamChannel> open();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #1                  // Field channel:Lio/netty/channel/Channel;
       5: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      10: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/EventLoop.newPromise:()Lio/netty/util/concurrent/Promise;
      15: invokevirtual #21                 // Method open:(Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      18: areturn

  public io.netty.util.concurrent.Future<io.netty.handler.codec.http2.Http2StreamChannel> open(io.netty.util.concurrent.Promise<io.netty.handler.codec.http2.Http2StreamChannel>);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method findCtx:()Lio/netty/channel/ChannelHandlerContext;
       4: astore_2
       5: aload_2
       6: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      11: astore_3
      12: aload_3
      13: invokeinterface #24,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      18: ifeq          30
      21: aload_0
      22: aload_2
      23: aload_1
      24: invokevirtual #25                 // Method open0:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/util/concurrent/Promise;)V
      27: goto          50
      30: aload_2
      31: astore        4
      33: aload_3
      34: new           #26                 // class io/netty/handler/codec/http2/Http2StreamChannelBootstrap$1
      37: dup
      38: aload_0
      39: aload         4
      41: aload_1
      42: invokespecial #27                 // Method io/netty/handler/codec/http2/Http2StreamChannelBootstrap$1."<init>":(Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap;Lio/netty/channel/ChannelHandlerContext;Lio/netty/util/concurrent/Promise;)V
      45: invokeinterface #28,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      50: goto          62
      53: astore_2
      54: aload_1
      55: aload_2
      56: invokeinterface #30,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
      61: pop
      62: aload_1
      63: areturn
    Exception table:
       from    to  target type
           0    50    53   Class java/lang/Throwable

  private io.netty.channel.ChannelHandlerContext findCtx() throws java.nio.channels.ClosedChannelException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field multiplexCtx:Lio/netty/channel/ChannelHandlerContext;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_1
      10: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.isRemoved:()Z
      15: ifne          20
      18: aload_1
      19: areturn
      20: aload_0
      21: getfield      #1                  // Field channel:Lio/netty/channel/Channel;
      24: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      29: astore_2
      30: aload_2
      31: ldc           #34                 // class io/netty/handler/codec/http2/Http2MultiplexCodec
      33: invokeinterface #35,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.context:(Ljava/lang/Class;)Lio/netty/channel/ChannelHandlerContext;
      38: astore_1
      39: aload_1
      40: ifnonnull     52
      43: aload_2
      44: ldc           #36                 // class io/netty/handler/codec/http2/Http2MultiplexHandler
      46: invokeinterface #35,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.context:(Ljava/lang/Class;)Lio/netty/channel/ChannelHandlerContext;
      51: astore_1
      52: aload_1
      53: ifnonnull     127
      56: aload_0
      57: getfield      #1                  // Field channel:Lio/netty/channel/Channel;
      60: invokeinterface #37,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      65: ifeq          119
      68: new           #38                 // class java/lang/IllegalStateException
      71: dup
      72: new           #39                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #34                 // class io/netty/handler/codec/http2/Http2MultiplexCodec
      81: invokestatic  #41                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      84: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #43                 // String  or
      89: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #36                 // class io/netty/handler/codec/http2/Http2MultiplexHandler
      94: invokestatic  #41                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      97: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: ldc           #44                 // String  must be in the ChannelPipeline of Channel
     102: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_0
     106: getfield      #1                  // Field channel:Lio/netty/channel/Channel;
     109: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     112: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     118: athrow
     119: new           #48                 // class java/nio/channels/ClosedChannelException
     122: dup
     123: invokespecial #49                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     126: athrow
     127: aload_0
     128: aload_1
     129: putfield      #31                 // Field multiplexCtx:Lio/netty/channel/ChannelHandlerContext;
     132: aload_1
     133: areturn

  public void open0(io.netty.channel.ChannelHandlerContext, io.netty.util.concurrent.Promise<io.netty.handler.codec.http2.Http2StreamChannel>);
    Code:
       0: getstatic     #50                 // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_1
       7: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      12: invokeinterface #24,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      17: ifne          28
      20: new           #51                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #52                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_2
      29: invokeinterface #53,  1           // InterfaceMethod io/netty/util/concurrent/Promise.setUncancellable:()Z
      34: ifne          38
      37: return
      38: aload_1
      39: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      44: instanceof    #34                 // class io/netty/handler/codec/http2/Http2MultiplexCodec
      47: ifeq          66
      50: aload_1
      51: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      56: checkcast     #34                 // class io/netty/handler/codec/http2/Http2MultiplexCodec
      59: invokevirtual #55                 // Method io/netty/handler/codec/http2/Http2MultiplexCodec.newOutboundStream:()Lio/netty/handler/codec/http2/Http2StreamChannel;
      62: astore_3
      63: goto          79
      66: aload_1
      67: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      72: checkcast     #36                 // class io/netty/handler/codec/http2/Http2MultiplexHandler
      75: invokevirtual #56                 // Method io/netty/handler/codec/http2/Http2MultiplexHandler.newOutboundStream:()Lio/netty/handler/codec/http2/Http2StreamChannel;
      78: astore_3
      79: goto          94
      82: astore        4
      84: aload_2
      85: aload         4
      87: invokeinterface #30,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
      92: pop
      93: return
      94: aload_0
      95: aload_3
      96: invokespecial #58                 // Method init:(Lio/netty/channel/Channel;)V
      99: goto          125
     102: astore        4
     104: aload_3
     105: invokeinterface #59,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.unsafe:()Lio/netty/channel/Channel$Unsafe;
     110: invokeinterface #60,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.closeForcibly:()V
     115: aload_2
     116: aload         4
     118: invokeinterface #30,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
     123: pop
     124: return
     125: aload_1
     126: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     131: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
     136: aload_3
     137: invokeinterface #62,  2           // InterfaceMethod io/netty/channel/EventLoop.register:(Lio/netty/channel/Channel;)Lio/netty/channel/ChannelFuture;
     142: astore        4
     144: aload         4
     146: new           #63                 // class io/netty/handler/codec/http2/Http2StreamChannelBootstrap$2
     149: dup
     150: aload_0
     151: aload_2
     152: aload_3
     153: invokespecial #64                 // Method io/netty/handler/codec/http2/Http2StreamChannelBootstrap$2."<init>":(Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap;Lio/netty/util/concurrent/Promise;Lio/netty/handler/codec/http2/Http2StreamChannel;)V
     156: invokeinterface #65,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     161: pop
     162: return
    Exception table:
       from    to  target type
          38    79    82   Class java/lang/Exception
          94    99   102   Class java/lang/Exception

  private void init(io.netty.channel.Channel);
    Code:
       0: aload_1
       1: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
       6: astore_2
       7: aload_0
       8: getfield      #18                 // Field handler:Lio/netty/channel/ChannelHandler;
      11: astore_3
      12: aload_3
      13: ifnull        31
      16: aload_2
      17: iconst_1
      18: anewarray     #17                 // class io/netty/channel/ChannelHandler
      21: dup
      22: iconst_0
      23: aload_3
      24: aastore
      25: invokeinterface #66,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      30: pop
      31: aload_0
      32: getfield      #5                  // Field options:Ljava/util/Map;
      35: dup
      36: astore        5
      38: monitorenter
      39: aload_0
      40: getfield      #5                  // Field options:Ljava/util/Map;
      43: invokeinterface #67,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      48: getstatic     #68                 // Field EMPTY_OPTION_ARRAY:[Ljava/util/Map$Entry;
      51: invokeinterface #69,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      56: checkcast     #70                 // class "[Ljava/util/Map$Entry;"
      59: astore        4
      61: aload         5
      63: monitorexit
      64: goto          75
      67: astore        6
      69: aload         5
      71: monitorexit
      72: aload         6
      74: athrow
      75: aload_1
      76: aload         4
      78: invokestatic  #71                 // Method setChannelOptions:(Lio/netty/channel/Channel;[Ljava/util/Map$Entry;)V
      81: aload_1
      82: aload_0
      83: getfield      #8                  // Field attrs:Ljava/util/Map;
      86: invokeinterface #67,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      91: getstatic     #72                 // Field EMPTY_ATTRIBUTE_ARRAY:[Ljava/util/Map$Entry;
      94: invokeinterface #69,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      99: checkcast     #70                 // class "[Ljava/util/Map$Entry;"
     102: invokestatic  #73                 // Method setAttributes:(Lio/netty/channel/Channel;[Ljava/util/Map$Entry;)V
     105: return
    Exception table:
       from    to  target type
          39    64    67   any
          67    72    67   any

  private static void setChannelOptions(io.netty.channel.Channel, java.util.Map$Entry<io.netty.channel.ChannelOption<?>, java.lang.Object>[]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     47
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokeinterface #74,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      28: checkcast     #75                 // class io/netty/channel/ChannelOption
      31: aload         5
      33: invokeinterface #76,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      38: invokestatic  #77                 // Method setChannelOption:(Lio/netty/channel/Channel;Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
      41: iinc          4, 1
      44: goto          8
      47: return

  private static void setChannelOption(io.netty.channel.Channel, io.netty.channel.ChannelOption<?>, java.lang.Object);
    Code:
       0: aload_1
       1: astore_3
       2: aload_0
       3: invokeinterface #78,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
       8: aload_3
       9: aload_2
      10: invokeinterface #79,  3           // InterfaceMethod io/netty/channel/ChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
      15: ifne          30
      18: getstatic     #80                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      21: ldc           #81                 // String Unknown channel option \'{}\' for channel \'{}\'
      23: aload_1
      24: aload_0
      25: invokeinterface #82,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      30: goto          64
      33: astore_3
      34: getstatic     #80                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      37: ldc           #83                 // String Failed to set channel option \'{}\' with value \'{}\' for channel \'{}\'
      39: iconst_4
      40: anewarray     #84                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_1
      46: aastore
      47: dup
      48: iconst_1
      49: aload_2
      50: aastore
      51: dup
      52: iconst_2
      53: aload_0
      54: aastore
      55: dup
      56: iconst_3
      57: aload_3
      58: aastore
      59: invokeinterface #85,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      64: return
    Exception table:
       from    to  target type
           0    30    33   Class java/lang/Throwable

  private static void setAttributes(io.netty.channel.Channel, java.util.Map$Entry<io.netty.util.AttributeKey<?>, java.lang.Object>[]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     58
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: invokeinterface #74,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      27: checkcast     #86                 // class io/netty/util/AttributeKey
      30: astore        6
      32: aload_0
      33: aload         6
      35: invokeinterface #87,  2           // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      40: aload         5
      42: invokeinterface #76,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: invokeinterface #88,  2           // InterfaceMethod io/netty/util/Attribute.set:(Ljava/lang/Object;)V
      52: iinc          4, 1
      55: goto          8
      58: return

  static io.netty.channel.Channel access$000(io.netty.handler.codec.http2.Http2StreamChannelBootstrap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field channel:Lio/netty/channel/Channel;
       4: areturn

  static {};
    Code:
       0: ldc           #89                 // class io/netty/handler/codec/http2/Http2StreamChannelBootstrap
       2: invokevirtual #90                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #50                 // Field $assertionsDisabled:Z
      16: ldc           #89                 // class io/netty/handler/codec/http2/Http2StreamChannelBootstrap
      18: invokestatic  #91                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #80                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: iconst_0
      25: anewarray     #92                 // class java/util/Map$Entry
      28: putstatic     #68                 // Field EMPTY_OPTION_ARRAY:[Ljava/util/Map$Entry;
      31: iconst_0
      32: anewarray     #92                 // class java/util/Map$Entry
      35: putstatic     #72                 // Field EMPTY_ATTRIBUTE_ARRAY:[Ljava/util/Map$Entry;
      38: return
}
