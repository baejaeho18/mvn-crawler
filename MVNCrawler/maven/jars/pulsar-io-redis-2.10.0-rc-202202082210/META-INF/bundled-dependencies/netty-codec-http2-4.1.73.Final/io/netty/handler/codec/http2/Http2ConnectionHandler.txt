Compiled from "Http2ConnectionHandler.java"
public class io.netty.handler.codec.http2.Http2ConnectionHandler extends io.netty.handler.codec.ByteToMessageDecoder implements io.netty.handler.codec.http2.Http2LifecycleManager,io.netty.channel.ChannelOutboundHandler {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final io.netty.handler.codec.http2.Http2Headers HEADERS_TOO_LARGE_HEADERS;

  private static final io.netty.buffer.ByteBuf HTTP_1_X_BUF;

  private final io.netty.handler.codec.http2.Http2ConnectionDecoder decoder;

  private final io.netty.handler.codec.http2.Http2ConnectionEncoder encoder;

  private final io.netty.handler.codec.http2.Http2Settings initialSettings;

  private final boolean decoupleCloseAndGoAway;

  private io.netty.channel.ChannelFutureListener closeListener;

  private io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder byteDecoder;

  private long gracefulShutdownTimeoutMillis;

  protected io.netty.handler.codec.http2.Http2ConnectionHandler(io.netty.handler.codec.http2.Http2ConnectionDecoder, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2Settings);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokespecial #12                 // Method "<init>":(Lio/netty/handler/codec/http2/Http2ConnectionDecoder;Lio/netty/handler/codec/http2/Http2ConnectionEncoder;Lio/netty/handler/codec/http2/Http2Settings;Z)V
       8: return

  protected io.netty.handler.codec.http2.Http2ConnectionHandler(io.netty.handler.codec.http2.Http2ConnectionDecoder, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2Settings, boolean);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method io/netty/handler/codec/ByteToMessageDecoder."<init>":()V
       4: aload_0
       5: aload_3
       6: ldc           #14                 // String initialSettings
       8: invokestatic  #15                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #16                 // class io/netty/handler/codec/http2/Http2Settings
      14: putfield      #7                  // Field initialSettings:Lio/netty/handler/codec/http2/Http2Settings;
      17: aload_0
      18: aload_1
      19: ldc           #17                 // String decoder
      21: invokestatic  #15                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #18                 // class io/netty/handler/codec/http2/Http2ConnectionDecoder
      27: putfield      #6                  // Field decoder:Lio/netty/handler/codec/http2/Http2ConnectionDecoder;
      30: aload_0
      31: aload_2
      32: ldc           #19                 // String encoder
      34: invokestatic  #15                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      37: checkcast     #20                 // class io/netty/handler/codec/http2/Http2ConnectionEncoder
      40: putfield      #11                 // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      43: aload_0
      44: iload         4
      46: putfield      #21                 // Field decoupleCloseAndGoAway:Z
      49: aload_2
      50: invokeinterface #22,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.connection:()Lio/netty/handler/codec/http2/Http2Connection;
      55: aload_1
      56: invokeinterface #23,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionDecoder.connection:()Lio/netty/handler/codec/http2/Http2Connection;
      61: if_acmpeq     74
      64: new           #24                 // class java/lang/IllegalArgumentException
      67: dup
      68: ldc           #25                 // String Encoder and Decoder do not share the same connection object
      70: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: return

  public long gracefulShutdownTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #27                 // Field gracefulShutdownTimeoutMillis:J
       4: lreturn

  public void gracefulShutdownTimeoutMillis(long);
    Code:
       0: lload_1
       1: ldc2_w        #28                 // long -1l
       4: lcmp
       5: ifge          40
       8: new           #24                 // class java/lang/IllegalArgumentException
      11: dup
      12: new           #30                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #32                 // String gracefulShutdownTimeoutMillis:
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: lload_1
      25: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      28: ldc           #35                 // String  (expected: -1 for indefinite or >= 0)
      30: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: lload_1
      42: putfield      #27                 // Field gracefulShutdownTimeoutMillis:J
      45: return

  public io.netty.handler.codec.http2.Http2Connection connection();
    Code:
       0: aload_0
       1: getfield      #11                 // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
       4: invokeinterface #22,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.connection:()Lio/netty/handler/codec/http2/Http2Connection;
       9: areturn

  public io.netty.handler.codec.http2.Http2ConnectionDecoder decoder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field decoder:Lio/netty/handler/codec/http2/Http2ConnectionDecoder;
       4: areturn

  public io.netty.handler.codec.http2.Http2ConnectionEncoder encoder();
    Code:
       0: aload_0
       1: getfield      #11                 // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
       4: areturn

  private boolean prefaceSent();
    Code:
       0: aload_0
       1: getfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
       4: ifnull        21
       7: aload_0
       8: getfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
      11: invokevirtual #37                 // Method io/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder.prefaceSent:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public void onHttpClientUpgrade() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
       4: invokeinterface #39,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.isServer:()Z
       9: ifeq          25
      12: getstatic     #40                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      15: ldc           #41                 // String Client-side HTTP upgrade requested for a server
      17: iconst_0
      18: anewarray     #42                 // class java/lang/Object
      21: invokestatic  #43                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      24: athrow
      25: aload_0
      26: invokespecial #44                 // Method prefaceSent:()Z
      29: ifne          45
      32: getstatic     #45                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      35: ldc           #46                 // String HTTP upgrade must occur after preface was sent
      37: iconst_0
      38: anewarray     #42                 // class java/lang/Object
      41: invokestatic  #43                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      44: athrow
      45: aload_0
      46: getfield      #6                  // Field decoder:Lio/netty/handler/codec/http2/Http2ConnectionDecoder;
      49: invokeinterface #47,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionDecoder.prefaceReceived:()Z
      54: ifeq          70
      57: getstatic     #40                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      60: ldc           #48                 // String HTTP upgrade must occur before HTTP/2 preface is received
      62: iconst_0
      63: anewarray     #42                 // class java/lang/Object
      66: invokestatic  #43                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      69: athrow
      70: aload_0
      71: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
      74: invokeinterface #49,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.local:()Lio/netty/handler/codec/http2/Http2Connection$Endpoint;
      79: iconst_1
      80: iconst_1
      81: invokeinterface #50,  3           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection$Endpoint.createStream:(IZ)Lio/netty/handler/codec/http2/Http2Stream;
      86: pop
      87: return

  public void onHttpServerUpgrade(io.netty.handler.codec.http2.Http2Settings) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
       4: invokeinterface #39,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.isServer:()Z
       9: ifne          25
      12: getstatic     #40                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      15: ldc           #51                 // String Server-side HTTP upgrade requested for a client
      17: iconst_0
      18: anewarray     #42                 // class java/lang/Object
      21: invokestatic  #43                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      24: athrow
      25: aload_0
      26: invokespecial #44                 // Method prefaceSent:()Z
      29: ifne          45
      32: getstatic     #45                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      35: ldc           #46                 // String HTTP upgrade must occur after preface was sent
      37: iconst_0
      38: anewarray     #42                 // class java/lang/Object
      41: invokestatic  #43                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      44: athrow
      45: aload_0
      46: getfield      #6                  // Field decoder:Lio/netty/handler/codec/http2/Http2ConnectionDecoder;
      49: invokeinterface #47,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionDecoder.prefaceReceived:()Z
      54: ifeq          70
      57: getstatic     #40                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      60: ldc           #48                 // String HTTP upgrade must occur before HTTP/2 preface is received
      62: iconst_0
      63: anewarray     #42                 // class java/lang/Object
      66: invokestatic  #43                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      69: athrow
      70: aload_0
      71: getfield      #11                 // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      74: aload_1
      75: invokeinterface #52,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.remoteSettings:(Lio/netty/handler/codec/http2/Http2Settings;)V
      80: aload_0
      81: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
      84: invokeinterface #53,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.remote:()Lio/netty/handler/codec/http2/Http2Connection$Endpoint;
      89: iconst_1
      90: iconst_1
      91: invokeinterface #50,  3           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection$Endpoint.createStream:(IZ)Lio/netty/handler/codec/http2/Http2Stream;
      96: pop
      97: return

  public void flush(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #11                 // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
       4: invokeinterface #54,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.flowController:()Lio/netty/handler/codec/http2/Http2RemoteFlowController;
       9: invokeinterface #55,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController.writePendingBytes:()V
      14: aload_1
      15: invokeinterface #56,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      20: pop
      21: goto          55
      24: astore_2
      25: aload_0
      26: aload_1
      27: iconst_1
      28: aload_2
      29: invokevirtual #58                 // Method onError:(Lio/netty/channel/ChannelHandlerContext;ZLjava/lang/Throwable;)V
      32: goto          55
      35: astore_2
      36: aload_0
      37: aload_1
      38: iconst_1
      39: getstatic     #45                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      42: aload_2
      43: ldc           #60                 // String Error flushing
      45: iconst_0
      46: anewarray     #42                 // class java/lang/Object
      49: invokestatic  #61                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      52: invokevirtual #58                 // Method onError:(Lio/netty/channel/ChannelHandlerContext;ZLjava/lang/Throwable;)V
      55: return
    Exception table:
       from    to  target type
           0    21    24   Class io/netty/handler/codec/http2/Http2Exception
           0    21    35   Class java/lang/Throwable

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
       4: aload_0
       5: invokeinterface #62,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.lifecycleManager:(Lio/netty/handler/codec/http2/Http2LifecycleManager;)V
      10: aload_0
      11: getfield      #6                  // Field decoder:Lio/netty/handler/codec/http2/Http2ConnectionDecoder;
      14: aload_0
      15: invokeinterface #63,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionDecoder.lifecycleManager:(Lio/netty/handler/codec/http2/Http2LifecycleManager;)V
      20: aload_0
      21: getfield      #11                 // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      24: invokeinterface #54,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.flowController:()Lio/netty/handler/codec/http2/Http2RemoteFlowController;
      29: aload_1
      30: invokeinterface #64,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController.channelHandlerContext:(Lio/netty/channel/ChannelHandlerContext;)V
      35: aload_0
      36: getfield      #6                  // Field decoder:Lio/netty/handler/codec/http2/Http2ConnectionDecoder;
      39: invokeinterface #65,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionDecoder.flowController:()Lio/netty/handler/codec/http2/Http2LocalFlowController;
      44: aload_1
      45: invokeinterface #66,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2LocalFlowController.channelHandlerContext:(Lio/netty/channel/ChannelHandlerContext;)V
      50: aload_0
      51: new           #67                 // class io/netty/handler/codec/http2/Http2ConnectionHandler$PrefaceDecoder
      54: dup
      55: aload_0
      56: aload_1
      57: invokespecial #68                 // Method io/netty/handler/codec/http2/Http2ConnectionHandler$PrefaceDecoder."<init>":(Lio/netty/handler/codec/http2/Http2ConnectionHandler;Lio/netty/channel/ChannelHandlerContext;)V
      60: putfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
      63: return

  protected void handlerRemoved0(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
       4: ifnull        20
       7: aload_0
       8: getfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
      11: aload_1
      12: invokevirtual #69                 // Method io/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder.handlerRemoved:(Lio/netty/channel/ChannelHandlerContext;)V
      15: aload_0
      16: aconst_null
      17: putfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
      20: return

  public void channelActive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
       4: ifnonnull     20
       7: aload_0
       8: new           #67                 // class io/netty/handler/codec/http2/Http2ConnectionHandler$PrefaceDecoder
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #68                 // Method io/netty/handler/codec/http2/Http2ConnectionHandler$PrefaceDecoder."<init>":(Lio/netty/handler/codec/http2/Http2ConnectionHandler;Lio/netty/channel/ChannelHandlerContext;)V
      17: putfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
      20: aload_0
      21: getfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
      24: aload_1
      25: invokevirtual #70                 // Method io/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder.channelActive:(Lio/netty/channel/ChannelHandlerContext;)V
      28: aload_0
      29: aload_1
      30: invokespecial #71                 // Method io/netty/handler/codec/ByteToMessageDecoder.channelActive:(Lio/netty/channel/ChannelHandlerContext;)V
      33: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #72                 // Method io/netty/handler/codec/ByteToMessageDecoder.channelInactive:(Lio/netty/channel/ChannelHandlerContext;)V
       5: aload_0
       6: getfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
       9: ifnull        25
      12: aload_0
      13: getfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
      16: aload_1
      17: invokevirtual #73                 // Method io/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder.channelInactive:(Lio/netty/channel/ChannelHandlerContext;)V
      20: aload_0
      21: aconst_null
      22: putfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
      25: return

  public void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #74,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #75,  1           // InterfaceMethod io/netty/channel/Channel.isWritable:()Z
      11: ifeq          19
      14: aload_0
      15: aload_1
      16: invokevirtual #76                 // Method flush:(Lio/netty/channel/ChannelHandlerContext;)V
      19: aload_0
      20: getfield      #11                 // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      23: invokeinterface #54,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.flowController:()Lio/netty/handler/codec/http2/Http2RemoteFlowController;
      28: invokeinterface #77,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController.channelWritabilityChanged:()V
      33: aload_0
      34: aload_1
      35: invokespecial #78                 // Method io/netty/handler/codec/ByteToMessageDecoder.channelWritabilityChanged:(Lio/netty/channel/ChannelHandlerContext;)V
      38: goto          49
      41: astore_2
      42: aload_0
      43: aload_1
      44: invokespecial #78                 // Method io/netty/handler/codec/ByteToMessageDecoder.channelWritabilityChanged:(Lio/netty/channel/ChannelHandlerContext;)V
      47: aload_2
      48: athrow
      49: return
    Exception table:
       from    to  target type
           0    33    41   any

  protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #79                 // Method io/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder.decode:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V
      10: return

  public void bind(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #80,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.bind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: pop
       9: return

  public void connect(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokeinterface #81,  4           // InterfaceMethod io/netty/channel/ChannelHandlerContext.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: pop
      11: return

  public void disconnect(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #82,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       7: pop
       8: return

  public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #21                 // Field decoupleCloseAndGoAway:Z
       4: ifeq          16
       7: aload_1
       8: aload_2
       9: invokeinterface #83,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      14: pop
      15: return
      16: aload_2
      17: invokeinterface #84,  1           // InterfaceMethod io/netty/channel/ChannelPromise.unvoid:()Lio/netty/channel/ChannelPromise;
      22: astore_2
      23: aload_1
      24: invokeinterface #74,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      29: invokeinterface #85,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      34: ifeq          44
      37: aload_0
      38: invokespecial #44                 // Method prefaceSent:()Z
      41: ifne          53
      44: aload_1
      45: aload_2
      46: invokeinterface #83,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      51: pop
      52: return
      53: aload_0
      54: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
      57: invokeinterface #86,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.goAwaySent:()Z
      62: ifeq          77
      65: aload_1
      66: getstatic     #87                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      69: invokeinterface #88,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      74: goto          89
      77: aload_0
      78: aload_1
      79: aconst_null
      80: aload_1
      81: invokeinterface #89,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      86: invokespecial #90                 // Method goAway:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Exception;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      89: astore_3
      90: aload_1
      91: invokeinterface #56,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      96: pop
      97: aload_0
      98: aload_1
      99: aload_3
     100: aload_2
     101: invokespecial #91                 // Method doGracefulShutdown:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
     104: return

  private io.netty.channel.ChannelFutureListener newClosingChannelFutureListener(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #27                 // Field gracefulShutdownTimeoutMillis:J
       4: lstore_3
       5: lload_3
       6: lconst_0
       7: lcmp
       8: ifge          23
      11: new           #92                 // class io/netty/handler/codec/http2/Http2ConnectionHandler$ClosingChannelFutureListener
      14: dup
      15: aload_1
      16: aload_2
      17: invokespecial #93                 // Method io/netty/handler/codec/http2/Http2ConnectionHandler$ClosingChannelFutureListener."<init>":(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      20: goto          36
      23: new           #92                 // class io/netty/handler/codec/http2/Http2ConnectionHandler$ClosingChannelFutureListener
      26: dup
      27: aload_1
      28: aload_2
      29: lload_3
      30: getstatic     #94                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      33: invokespecial #95                 // Method io/netty/handler/codec/http2/Http2ConnectionHandler$ClosingChannelFutureListener."<init>":(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;JLjava/util/concurrent/TimeUnit;)V
      36: areturn

  private void doGracefulShutdown(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokespecial #96                 // Method newClosingChannelFutureListener:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFutureListener;
       6: astore        4
       8: aload_0
       9: invokevirtual #97                 // Method isGracefulShutdownComplete:()Z
      12: ifeq          27
      15: aload_2
      16: aload         4
      18: invokeinterface #98,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      23: pop
      24: goto          69
      27: aload_0
      28: getfield      #99                 // Field closeListener:Lio/netty/channel/ChannelFutureListener;
      31: ifnonnull     43
      34: aload_0
      35: aload         4
      37: putfield      #99                 // Field closeListener:Lio/netty/channel/ChannelFutureListener;
      40: goto          69
      43: aload_3
      44: ifnull        69
      47: aload_0
      48: getfield      #99                 // Field closeListener:Lio/netty/channel/ChannelFutureListener;
      51: astore        5
      53: aload_0
      54: new           #100                // class io/netty/handler/codec/http2/Http2ConnectionHandler$1
      57: dup
      58: aload_0
      59: aload         5
      61: aload         4
      63: invokespecial #101                // Method io/netty/handler/codec/http2/Http2ConnectionHandler$1."<init>":(Lio/netty/handler/codec/http2/Http2ConnectionHandler;Lio/netty/channel/ChannelFutureListener;Lio/netty/channel/ChannelFutureListener;)V
      66: putfield      #99                 // Field closeListener:Lio/netty/channel/ChannelFutureListener;
      69: return

  public void deregister(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #102,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.deregister:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       7: pop
       8: return

  public void read(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #103,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
       6: pop
       7: return

  public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #104,  3          // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: pop
       9: return

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #105                // Method channelReadComplete0:(Lio/netty/channel/ChannelHandlerContext;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #76                 // Method flush:(Lio/netty/channel/ChannelHandlerContext;)V
      10: goto          21
      13: astore_2
      14: aload_0
      15: aload_1
      16: invokevirtual #76                 // Method flush:(Lio/netty/channel/ChannelHandlerContext;)V
      19: aload_2
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0     5    13   any

  final void channelReadComplete0(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: invokevirtual #106                // Method discardSomeReadBytes:()V
       4: aload_1
       5: invokeinterface #74,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      10: invokeinterface #107,  1          // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      15: invokeinterface #108,  1          // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
      20: ifne          30
      23: aload_1
      24: invokeinterface #103,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      29: pop
      30: aload_1
      31: invokeinterface #109,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      36: pop
      37: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokestatic  #110                // Method io/netty/handler/codec/http2/Http2CodecUtil.getEmbeddedHttp2Exception:(Ljava/lang/Throwable;)Lio/netty/handler/codec/http2/Http2Exception;
       4: ifnull        17
       7: aload_0
       8: aload_1
       9: iconst_0
      10: aload_2
      11: invokevirtual #58                 // Method onError:(Lio/netty/channel/ChannelHandlerContext;ZLjava/lang/Throwable;)V
      14: goto          23
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokespecial #111                // Method io/netty/handler/codec/ByteToMessageDecoder.exceptionCaught:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      23: return

  public void closeStreamLocal(io.netty.handler.codec.http2.Http2Stream, io.netty.channel.ChannelFuture);
    Code:
       0: getstatic     #112                // Field io/netty/handler/codec/http2/Http2ConnectionHandler$6.$SwitchMap$io$netty$handler$codec$http2$Http2Stream$State:[I
       3: aload_1
       4: invokeinterface #113,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.state:()Lio/netty/handler/codec/http2/Http2Stream$State;
       9: invokevirtual #114                // Method io/netty/handler/codec/http2/Http2Stream$State.ordinal:()I
      12: iaload
      13: lookupswitch  { // 2
                     1: 40
                     2: 40
               default: 50
          }
      40: aload_1
      41: invokeinterface #115,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.closeLocalSide:()Lio/netty/handler/codec/http2/Http2Stream;
      46: pop
      47: goto          56
      50: aload_0
      51: aload_1
      52: aload_2
      53: invokevirtual #116                // Method closeStream:(Lio/netty/handler/codec/http2/Http2Stream;Lio/netty/channel/ChannelFuture;)V
      56: return

  public void closeStreamRemote(io.netty.handler.codec.http2.Http2Stream, io.netty.channel.ChannelFuture);
    Code:
       0: getstatic     #112                // Field io/netty/handler/codec/http2/Http2ConnectionHandler$6.$SwitchMap$io$netty$handler$codec$http2$Http2Stream$State:[I
       3: aload_1
       4: invokeinterface #113,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.state:()Lio/netty/handler/codec/http2/Http2Stream$State;
       9: invokevirtual #114                // Method io/netty/handler/codec/http2/Http2Stream$State.ordinal:()I
      12: iaload
      13: lookupswitch  { // 2
                     2: 40
                     3: 40
               default: 50
          }
      40: aload_1
      41: invokeinterface #117,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.closeRemoteSide:()Lio/netty/handler/codec/http2/Http2Stream;
      46: pop
      47: goto          56
      50: aload_0
      51: aload_1
      52: aload_2
      53: invokevirtual #116                // Method closeStream:(Lio/netty/handler/codec/http2/Http2Stream;Lio/netty/channel/ChannelFuture;)V
      56: return

  public void closeStream(io.netty.handler.codec.http2.Http2Stream, io.netty.channel.ChannelFuture);
    Code:
       0: aload_1
       1: invokeinterface #118,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.close:()Lio/netty/handler/codec/http2/Http2Stream;
       6: pop
       7: aload_2
       8: invokeinterface #119,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      13: ifeq          24
      16: aload_0
      17: aload_2
      18: invokespecial #5                  // Method checkCloseConnection:(Lio/netty/channel/ChannelFuture;)V
      21: goto          39
      24: aload_2
      25: new           #120                // class io/netty/handler/codec/http2/Http2ConnectionHandler$2
      28: dup
      29: aload_0
      30: invokespecial #121                // Method io/netty/handler/codec/http2/Http2ConnectionHandler$2."<init>":(Lio/netty/handler/codec/http2/Http2ConnectionHandler;)V
      33: invokeinterface #98,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      38: pop
      39: return

  public void onError(io.netty.channel.ChannelHandlerContext, boolean, java.lang.Throwable);
    Code:
       0: aload_3
       1: invokestatic  #110                // Method io/netty/handler/codec/http2/Http2CodecUtil.getEmbeddedHttp2Exception:(Ljava/lang/Throwable;)Lio/netty/handler/codec/http2/Http2Exception;
       4: astore        4
       6: aload         4
       8: invokestatic  #122                // Method io/netty/handler/codec/http2/Http2Exception.isStreamError:(Lio/netty/handler/codec/http2/Http2Exception;)Z
      11: ifeq          29
      14: aload_0
      15: aload_1
      16: iload_2
      17: aload_3
      18: aload         4
      20: checkcast     #123                // class io/netty/handler/codec/http2/Http2Exception$StreamException
      23: invokevirtual #124                // Method onStreamError:(Lio/netty/channel/ChannelHandlerContext;ZLjava/lang/Throwable;Lio/netty/handler/codec/http2/Http2Exception$StreamException;)V
      26: goto          97
      29: aload         4
      31: instanceof    #125                // class io/netty/handler/codec/http2/Http2Exception$CompositeStreamException
      34: ifeq          88
      37: aload         4
      39: checkcast     #125                // class io/netty/handler/codec/http2/Http2Exception$CompositeStreamException
      42: astore        5
      44: aload         5
      46: invokevirtual #126                // Method io/netty/handler/codec/http2/Http2Exception$CompositeStreamException.iterator:()Ljava/util/Iterator;
      49: astore        6
      51: aload         6
      53: invokeinterface #127,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          85
      61: aload         6
      63: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #123                // class io/netty/handler/codec/http2/Http2Exception$StreamException
      71: astore        7
      73: aload_0
      74: aload_1
      75: iload_2
      76: aload_3
      77: aload         7
      79: invokevirtual #124                // Method onStreamError:(Lio/netty/channel/ChannelHandlerContext;ZLjava/lang/Throwable;Lio/netty/handler/codec/http2/Http2Exception$StreamException;)V
      82: goto          51
      85: goto          97
      88: aload_0
      89: aload_1
      90: iload_2
      91: aload_3
      92: aload         4
      94: invokevirtual #129                // Method onConnectionError:(Lio/netty/channel/ChannelHandlerContext;ZLjava/lang/Throwable;Lio/netty/handler/codec/http2/Http2Exception;)V
      97: aload_1
      98: invokeinterface #56,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
     103: pop
     104: return

  protected boolean isGracefulShutdownComplete();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
       4: invokeinterface #130,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.numActiveStreams:()I
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  protected void onConnectionError(io.netty.channel.ChannelHandlerContext, boolean, java.lang.Throwable, io.netty.handler.codec.http2.Http2Exception);
    Code:
       0: aload         4
       2: ifnonnull     22
       5: new           #57                 // class io/netty/handler/codec/http2/Http2Exception
       8: dup
       9: getstatic     #45                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      12: aload_3
      13: invokevirtual #131                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      16: aload_3
      17: invokespecial #132                // Method io/netty/handler/codec/http2/Http2Exception."<init>":(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;Ljava/lang/Throwable;)V
      20: astore        4
      22: aload_1
      23: invokeinterface #89,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      28: astore        5
      30: aload_0
      31: aload_1
      32: aload         4
      34: aload_1
      35: invokeinterface #89,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      40: invokespecial #90                 // Method goAway:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Exception;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      43: astore        6
      45: aload         4
      47: invokevirtual #133                // Method io/netty/handler/codec/http2/Http2Exception.shutdownHint:()Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
      50: getstatic     #134                // Field io/netty/handler/codec/http2/Http2Exception$ShutdownHint.GRACEFUL_SHUTDOWN:Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
      53: if_acmpne     68
      56: aload_0
      57: aload_1
      58: aload         6
      60: aload         5
      62: invokespecial #91                 // Method doGracefulShutdown:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
      65: goto          83
      68: aload         6
      70: aload_0
      71: aload_1
      72: aload         5
      74: invokespecial #96                 // Method newClosingChannelFutureListener:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFutureListener;
      77: invokeinterface #98,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      82: pop
      83: return

  protected void onStreamError(io.netty.channel.ChannelHandlerContext, boolean, java.lang.Throwable, io.netty.handler.codec.http2.Http2Exception$StreamException);
    Code:
       0: aload         4
       2: invokevirtual #135                // Method io/netty/handler/codec/http2/Http2Exception$StreamException.streamId:()I
       5: istore        5
       7: aload_0
       8: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
      11: iload         5
      13: invokeinterface #136,  2          // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.stream:(I)Lio/netty/handler/codec/http2/Http2Stream;
      18: astore        6
      20: aload         4
      22: instanceof    #137                // class io/netty/handler/codec/http2/Http2Exception$HeaderListSizeException
      25: ifeq          155
      28: aload         4
      30: checkcast     #137                // class io/netty/handler/codec/http2/Http2Exception$HeaderListSizeException
      33: invokevirtual #138                // Method io/netty/handler/codec/http2/Http2Exception$HeaderListSizeException.duringDecode:()Z
      36: ifeq          155
      39: aload_0
      40: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
      43: invokeinterface #39,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.isServer:()Z
      48: ifeq          155
      51: aload         6
      53: ifnonnull     108
      56: aload_0
      57: getfield      #11                 // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      60: invokeinterface #22,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.connection:()Lio/netty/handler/codec/http2/Http2Connection;
      65: invokeinterface #53,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.remote:()Lio/netty/handler/codec/http2/Http2Connection$Endpoint;
      70: iload         5
      72: iconst_1
      73: invokeinterface #50,  3           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection$Endpoint.createStream:(IZ)Lio/netty/handler/codec/http2/Http2Stream;
      78: astore        6
      80: goto          108
      83: astore        7
      85: aload_0
      86: aload_1
      87: iload         5
      89: aload         4
      91: invokevirtual #139                // Method io/netty/handler/codec/http2/Http2Exception$StreamException.error:()Lio/netty/handler/codec/http2/Http2Error;
      94: invokevirtual #140                // Method io/netty/handler/codec/http2/Http2Error.code:()J
      97: aload_1
      98: invokeinterface #89,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
     103: invokespecial #141                // Method resetUnknownStream:(Lio/netty/channel/ChannelHandlerContext;IJLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     106: pop
     107: return
     108: aload         6
     110: ifnull        155
     113: aload         6
     115: invokeinterface #142,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.isHeadersSent:()Z
     120: ifne          155
     123: aload_0
     124: aload_1
     125: aload         6
     127: invokevirtual #143                // Method handleServerHeaderDecodeSizeError:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Stream;)V
     130: goto          155
     133: astore        7
     135: aload_0
     136: aload_1
     137: iload_2
     138: getstatic     #45                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     141: aload         7
     143: ldc           #144                // String Error DecodeSizeError
     145: iconst_0
     146: anewarray     #42                 // class java/lang/Object
     149: invokestatic  #61                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     152: invokevirtual #58                 // Method onError:(Lio/netty/channel/ChannelHandlerContext;ZLjava/lang/Throwable;)V
     155: aload         6
     157: ifnonnull     208
     160: iload_2
     161: ifeq          183
     164: aload_0
     165: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
     168: invokeinterface #49,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.local:()Lio/netty/handler/codec/http2/Http2Connection$Endpoint;
     173: iload         5
     175: invokeinterface #145,  2          // InterfaceMethod io/netty/handler/codec/http2/Http2Connection$Endpoint.mayHaveCreatedStream:(I)Z
     180: ifeq          230
     183: aload_0
     184: aload_1
     185: iload         5
     187: aload         4
     189: invokevirtual #139                // Method io/netty/handler/codec/http2/Http2Exception$StreamException.error:()Lio/netty/handler/codec/http2/Http2Error;
     192: invokevirtual #140                // Method io/netty/handler/codec/http2/Http2Error.code:()J
     195: aload_1
     196: invokeinterface #89,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
     201: invokespecial #141                // Method resetUnknownStream:(Lio/netty/channel/ChannelHandlerContext;IJLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     204: pop
     205: goto          230
     208: aload_0
     209: aload_1
     210: aload         6
     212: aload         4
     214: invokevirtual #139                // Method io/netty/handler/codec/http2/Http2Exception$StreamException.error:()Lio/netty/handler/codec/http2/Http2Error;
     217: invokevirtual #140                // Method io/netty/handler/codec/http2/Http2Error.code:()J
     220: aload_1
     221: invokeinterface #89,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
     226: invokespecial #146                // Method resetStream:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Stream;JLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     229: pop
     230: return
    Exception table:
       from    to  target type
          56    80    83   Class io/netty/handler/codec/http2/Http2Exception
         123   130   133   Class java/lang/Throwable

  protected void handleServerHeaderDecodeSizeError(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_0
       1: invokevirtual #147                // Method encoder:()Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
       4: aload_1
       5: aload_2
       6: invokeinterface #148,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      11: getstatic     #149                // Field HEADERS_TOO_LARGE_HEADERS:Lio/netty/handler/codec/http2/Http2Headers;
      14: iconst_0
      15: iconst_1
      16: aload_1
      17: invokeinterface #89,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      22: invokeinterface #150,  7          // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.writeHeaders:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Headers;IZLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      27: pop
      28: return

  protected io.netty.handler.codec.http2.Http2FrameWriter frameWriter();
    Code:
       0: aload_0
       1: invokevirtual #147                // Method encoder:()Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
       4: invokeinterface #151,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.frameWriter:()Lio/netty/handler/codec/http2/Http2FrameWriter;
       9: areturn

  private io.netty.channel.ChannelFuture resetUnknownStream(io.netty.channel.ChannelHandlerContext, int, long, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #152                // Method frameWriter:()Lio/netty/handler/codec/http2/Http2FrameWriter;
       4: aload_1
       5: iload_2
       6: lload_3
       7: aload         5
       9: invokeinterface #153,  6          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameWriter.writeRstStream:(Lio/netty/channel/ChannelHandlerContext;IJLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      14: astore        6
      16: aload         6
      18: invokeinterface #119,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      23: ifeq          36
      26: aload_0
      27: aload_1
      28: aload         6
      30: invokespecial #4                  // Method closeConnectionOnError:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelFuture;)V
      33: goto          53
      36: aload         6
      38: new           #154                // class io/netty/handler/codec/http2/Http2ConnectionHandler$3
      41: dup
      42: aload_0
      43: aload_1
      44: invokespecial #155                // Method io/netty/handler/codec/http2/Http2ConnectionHandler$3."<init>":(Lio/netty/handler/codec/http2/Http2ConnectionHandler;Lio/netty/channel/ChannelHandlerContext;)V
      47: invokeinterface #98,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      52: pop
      53: aload         6
      55: areturn

  public io.netty.channel.ChannelFuture resetStream(io.netty.channel.ChannelHandlerContext, int, long, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
       4: iload_2
       5: invokeinterface #136,  2          // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.stream:(I)Lio/netty/handler/codec/http2/Http2Stream;
      10: astore        6
      12: aload         6
      14: ifnonnull     32
      17: aload_0
      18: aload_1
      19: iload_2
      20: lload_3
      21: aload         5
      23: invokeinterface #84,  1           // InterfaceMethod io/netty/channel/ChannelPromise.unvoid:()Lio/netty/channel/ChannelPromise;
      28: invokespecial #141                // Method resetUnknownStream:(Lio/netty/channel/ChannelHandlerContext;IJLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      31: areturn
      32: aload_0
      33: aload_1
      34: aload         6
      36: lload_3
      37: aload         5
      39: invokespecial #146                // Method resetStream:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Stream;JLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      42: areturn

  private io.netty.channel.ChannelFuture resetStream(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Stream, long, io.netty.channel.ChannelPromise);
    Code:
       0: aload         5
       2: invokeinterface #84,  1           // InterfaceMethod io/netty/channel/ChannelPromise.unvoid:()Lio/netty/channel/ChannelPromise;
       7: astore        5
       9: aload_2
      10: invokeinterface #156,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.isResetSent:()Z
      15: ifeq          26
      18: aload         5
      20: invokeinterface #157,  1          // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      25: areturn
      26: aload_2
      27: invokeinterface #158,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.resetSent:()Lio/netty/handler/codec/http2/Http2Stream;
      32: pop
      33: aload_2
      34: invokeinterface #113,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.state:()Lio/netty/handler/codec/http2/Http2Stream$State;
      39: getstatic     #159                // Field io/netty/handler/codec/http2/Http2Stream$State.IDLE:Lio/netty/handler/codec/http2/Http2Stream$State;
      42: if_acmpeq     81
      45: aload_0
      46: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
      49: invokeinterface #49,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.local:()Lio/netty/handler/codec/http2/Http2Connection$Endpoint;
      54: aload_2
      55: invokeinterface #160,  2          // InterfaceMethod io/netty/handler/codec/http2/Http2Connection$Endpoint.created:(Lio/netty/handler/codec/http2/Http2Stream;)Z
      60: ifeq          93
      63: aload_2
      64: invokeinterface #142,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.isHeadersSent:()Z
      69: ifne          93
      72: aload_2
      73: invokeinterface #161,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.isPushPromiseSent:()Z
      78: ifne          93
      81: aload         5
      83: invokeinterface #157,  1          // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      88: astore        6
      90: goto          114
      93: aload_0
      94: invokevirtual #152                // Method frameWriter:()Lio/netty/handler/codec/http2/Http2FrameWriter;
      97: aload_1
      98: aload_2
      99: invokeinterface #148,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
     104: lload_3
     105: aload         5
     107: invokeinterface #153,  6          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameWriter.writeRstStream:(Lio/netty/channel/ChannelHandlerContext;IJLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     112: astore        6
     114: aload         6
     116: invokeinterface #119,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
     121: ifeq          135
     124: aload_0
     125: aload_1
     126: aload_2
     127: aload         6
     129: invokespecial #3                  // Method processRstStreamWriteResult:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Stream;Lio/netty/channel/ChannelFuture;)V
     132: goto          153
     135: aload         6
     137: new           #162                // class io/netty/handler/codec/http2/Http2ConnectionHandler$4
     140: dup
     141: aload_0
     142: aload_1
     143: aload_2
     144: invokespecial #163                // Method io/netty/handler/codec/http2/Http2ConnectionHandler$4."<init>":(Lio/netty/handler/codec/http2/Http2ConnectionHandler;Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Stream;)V
     147: invokeinterface #98,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     152: pop
     153: aload         6
     155: areturn

  public io.netty.channel.ChannelFuture goAway(io.netty.channel.ChannelHandlerContext, int, long, io.netty.buffer.ByteBuf, io.netty.channel.ChannelPromise);
    Code:
       0: aload         6
       2: invokeinterface #84,  1           // InterfaceMethod io/netty/channel/ChannelPromise.unvoid:()Lio/netty/channel/ChannelPromise;
       7: astore        6
       9: aload_0
      10: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
      13: astore        7
      15: aload         7
      17: iload_2
      18: lload_3
      19: aload         5
      21: invokeinterface #164,  5          // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.goAwaySent:(IJLio/netty/buffer/ByteBuf;)Z
      26: ifne          46
      29: aload         5
      31: invokevirtual #165                // Method io/netty/buffer/ByteBuf.release:()Z
      34: pop
      35: aload         6
      37: invokeinterface #166,  1          // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      42: pop
      43: aload         6
      45: areturn
      46: goto          70
      49: astore        8
      51: aload         5
      53: invokevirtual #165                // Method io/netty/buffer/ByteBuf.release:()Z
      56: pop
      57: aload         6
      59: aload         8
      61: invokeinterface #167,  2          // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      66: pop
      67: aload         6
      69: areturn
      70: aload         5
      72: invokevirtual #168                // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
      75: pop
      76: aload_0
      77: invokevirtual #152                // Method frameWriter:()Lio/netty/handler/codec/http2/Http2FrameWriter;
      80: aload_1
      81: iload_2
      82: lload_3
      83: aload         5
      85: aload         6
      87: invokeinterface #169,  7          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameWriter.writeGoAway:(Lio/netty/channel/ChannelHandlerContext;IJLio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      92: astore        8
      94: aload         8
      96: invokeinterface #119,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
     101: ifeq          117
     104: aload_1
     105: iload_2
     106: lload_3
     107: aload         5
     109: aload         8
     111: invokestatic  #2                  // Method processGoAwayWriteResult:(Lio/netty/channel/ChannelHandlerContext;IJLio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelFuture;)V
     114: goto          138
     117: aload         8
     119: new           #170                // class io/netty/handler/codec/http2/Http2ConnectionHandler$5
     122: dup
     123: aload_0
     124: aload_1
     125: iload_2
     126: lload_3
     127: aload         5
     129: invokespecial #171                // Method io/netty/handler/codec/http2/Http2ConnectionHandler$5."<init>":(Lio/netty/handler/codec/http2/Http2ConnectionHandler;Lio/netty/channel/ChannelHandlerContext;IJLio/netty/buffer/ByteBuf;)V
     132: invokeinterface #98,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     137: pop
     138: aload         8
     140: areturn
    Exception table:
       from    to  target type
          15    45    49   Class java/lang/Throwable

  private void checkCloseConnection(io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: getfield      #99                 // Field closeListener:Lio/netty/channel/ChannelFutureListener;
       4: ifnull        46
       7: aload_0
       8: invokevirtual #97                 // Method isGracefulShutdownComplete:()Z
      11: ifeq          46
      14: aload_0
      15: getfield      #99                 // Field closeListener:Lio/netty/channel/ChannelFutureListener;
      18: astore_2
      19: aload_0
      20: aconst_null
      21: putfield      #99                 // Field closeListener:Lio/netty/channel/ChannelFutureListener;
      24: aload_2
      25: aload_1
      26: invokeinterface #172,  2          // InterfaceMethod io/netty/channel/ChannelFutureListener.operationComplete:(Lio/netty/util/concurrent/Future;)V
      31: goto          46
      34: astore_3
      35: new           #174                // class java/lang/IllegalStateException
      38: dup
      39: ldc           #175                // String Close listener threw an unexpected exception
      41: aload_3
      42: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      45: athrow
      46: return
    Exception table:
       from    to  target type
          24    31    34   Class java/lang/Exception

  private io.netty.channel.ChannelFuture goAway(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Exception, io.netty.channel.ChannelPromise);
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: invokevirtual #177                // Method io/netty/handler/codec/http2/Http2Exception.error:()Lio/netty/handler/codec/http2/Http2Error;
       8: invokevirtual #140                // Method io/netty/handler/codec/http2/Http2Error.code:()J
      11: goto          20
      14: getstatic     #178                // Field io/netty/handler/codec/http2/Http2Error.NO_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      17: invokevirtual #140                // Method io/netty/handler/codec/http2/Http2Error.code:()J
      20: lstore        4
      22: aload_2
      23: ifnull        43
      26: aload_2
      27: invokevirtual #133                // Method io/netty/handler/codec/http2/Http2Exception.shutdownHint:()Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
      30: getstatic     #179                // Field io/netty/handler/codec/http2/Http2Exception$ShutdownHint.HARD_SHUTDOWN:Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
      33: if_acmpne     43
      36: ldc           #181                // int 2147483647
      38: istore        6
      40: goto          59
      43: aload_0
      44: invokevirtual #38                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
      47: invokeinterface #53,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.remote:()Lio/netty/handler/codec/http2/Http2Connection$Endpoint;
      52: invokeinterface #182,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Connection$Endpoint.lastStreamCreated:()I
      57: istore        6
      59: aload_0
      60: aload_1
      61: iload         6
      63: lload         4
      65: aload_1
      66: aload_2
      67: invokestatic  #183                // Method io/netty/handler/codec/http2/Http2CodecUtil.toByteBuf:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)Lio/netty/buffer/ByteBuf;
      70: aload_3
      71: invokevirtual #184                // Method goAway:(Lio/netty/channel/ChannelHandlerContext;IJLio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      74: areturn

  private void processRstStreamWriteResult(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Stream, io.netty.channel.ChannelFuture);
    Code:
       0: aload_3
       1: invokeinterface #185,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
       6: ifeq          18
       9: aload_0
      10: aload_2
      11: aload_3
      12: invokevirtual #116                // Method closeStream:(Lio/netty/handler/codec/http2/Http2Stream;Lio/netty/channel/ChannelFuture;)V
      15: goto          31
      18: aload_0
      19: aload_1
      20: iconst_1
      21: aload_3
      22: invokeinterface #186,  1          // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      27: aconst_null
      28: invokevirtual #129                // Method onConnectionError:(Lio/netty/channel/ChannelHandlerContext;ZLjava/lang/Throwable;Lio/netty/handler/codec/http2/Http2Exception;)V
      31: return

  private void closeConnectionOnError(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelFuture);
    Code:
       0: aload_2
       1: invokeinterface #185,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
       6: ifne          22
       9: aload_0
      10: aload_1
      11: iconst_1
      12: aload_2
      13: invokeinterface #186,  1          // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      18: aconst_null
      19: invokevirtual #129                // Method onConnectionError:(Lio/netty/channel/ChannelHandlerContext;ZLjava/lang/Throwable;Lio/netty/handler/codec/http2/Http2Exception;)V
      22: return

  private static io.netty.buffer.ByteBuf clientPrefaceString(io.netty.handler.codec.http2.Http2Connection);
    Code:
       0: aload_0
       1: invokeinterface #39,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.isServer:()Z
       6: ifeq          15
       9: invokestatic  #187                // Method io/netty/handler/codec/http2/Http2CodecUtil.connectionPrefaceBuf:()Lio/netty/buffer/ByteBuf;
      12: goto          16
      15: aconst_null
      16: areturn

  private static void processGoAwayWriteResult(io.netty.channel.ChannelHandlerContext, int, long, io.netty.buffer.ByteBuf, io.netty.channel.ChannelFuture);
    Code:
       0: aload         5
       2: invokeinterface #185,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
       7: ifeq          100
      10: lload_2
      11: getstatic     #178                // Field io/netty/handler/codec/http2/Http2Error.NO_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      14: invokevirtual #140                // Method io/netty/handler/codec/http2/Http2Error.code:()J
      17: lcmp
      18: ifeq          176
      21: getstatic     #188                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: invokeinterface #189,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      29: ifeq          90
      32: getstatic     #188                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      35: ldc           #190                // String {} Sent GOAWAY: lastStreamId \'{}\', errorCode \'{}\', debugData \'{}\'. Forcing shutdown of the connection.
      37: iconst_5
      38: anewarray     #42                 // class java/lang/Object
      41: dup
      42: iconst_0
      43: aload_0
      44: invokeinterface #74,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      49: aastore
      50: dup
      51: iconst_1
      52: iload_1
      53: invokestatic  #191                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: aastore
      57: dup
      58: iconst_2
      59: lload_2
      60: invokestatic  #192                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      63: aastore
      64: dup
      65: iconst_3
      66: aload         4
      68: getstatic     #193                // Field io/netty/util/CharsetUtil.UTF_8:Ljava/nio/charset/Charset;
      71: invokevirtual #194                // Method io/netty/buffer/ByteBuf.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;
      74: aastore
      75: dup
      76: iconst_4
      77: aload         5
      79: invokeinterface #186,  1          // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      84: aastore
      85: invokeinterface #195,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      90: aload_0
      91: invokeinterface #196,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      96: pop
      97: goto          176
     100: getstatic     #188                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     103: invokeinterface #189,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
     108: ifeq          169
     111: getstatic     #188                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     114: ldc           #197                // String {} Sending GOAWAY failed: lastStreamId \'{}\', errorCode \'{}\', debugData \'{}\'. Forcing shutdown of the connection.
     116: iconst_5
     117: anewarray     #42                 // class java/lang/Object
     120: dup
     121: iconst_0
     122: aload_0
     123: invokeinterface #74,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     128: aastore
     129: dup
     130: iconst_1
     131: iload_1
     132: invokestatic  #191                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     135: aastore
     136: dup
     137: iconst_2
     138: lload_2
     139: invokestatic  #192                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     142: aastore
     143: dup
     144: iconst_3
     145: aload         4
     147: getstatic     #193                // Field io/netty/util/CharsetUtil.UTF_8:Ljava/nio/charset/Charset;
     150: invokevirtual #194                // Method io/netty/buffer/ByteBuf.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;
     153: aastore
     154: dup
     155: iconst_4
     156: aload         5
     158: invokeinterface #186,  1          // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
     163: aastore
     164: invokeinterface #195,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     169: aload_0
     170: invokeinterface #196,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
     175: pop
     176: aload         4
     178: invokevirtual #165                // Method io/netty/buffer/ByteBuf.release:()Z
     181: pop
     182: goto          196
     185: astore        6
     187: aload         4
     189: invokevirtual #165                // Method io/netty/buffer/ByteBuf.release:()Z
     192: pop
     193: aload         6
     195: athrow
     196: return
    Exception table:
       from    to  target type
           0   176   185   any
         185   187   185   any

  static io.netty.handler.codec.http2.Http2ConnectionEncoder access$100(io.netty.handler.codec.http2.Http2ConnectionHandler);
    Code:
       0: aload_0
       1: getfield      #11                 // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
       4: areturn

  static io.netty.buffer.ByteBuf access$200(io.netty.handler.codec.http2.Http2Connection);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method clientPrefaceString:(Lio/netty/handler/codec/http2/Http2Connection;)Lio/netty/buffer/ByteBuf;
       4: areturn

  static io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder access$302(io.netty.handler.codec.http2.Http2ConnectionHandler, io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
       6: areturn

  static io.netty.handler.codec.http2.Http2ConnectionHandler$BaseDecoder access$300(io.netty.handler.codec.http2.Http2ConnectionHandler);
    Code:
       0: aload_0
       1: getfield      #9                  // Field byteDecoder:Lio/netty/handler/codec/http2/Http2ConnectionHandler$BaseDecoder;
       4: areturn

  static io.netty.buffer.ByteBuf access$500();
    Code:
       0: getstatic     #8                  // Field HTTP_1_X_BUF:Lio/netty/buffer/ByteBuf;
       3: areturn

  static io.netty.handler.codec.http2.Http2Settings access$600(io.netty.handler.codec.http2.Http2ConnectionHandler);
    Code:
       0: aload_0
       1: getfield      #7                  // Field initialSettings:Lio/netty/handler/codec/http2/Http2Settings;
       4: areturn

  static io.netty.handler.codec.http2.Http2ConnectionDecoder access$700(io.netty.handler.codec.http2.Http2ConnectionHandler);
    Code:
       0: aload_0
       1: getfield      #6                  // Field decoder:Lio/netty/handler/codec/http2/Http2ConnectionDecoder;
       4: areturn

  static void access$800(io.netty.handler.codec.http2.Http2ConnectionHandler, io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method checkCloseConnection:(Lio/netty/channel/ChannelFuture;)V
       5: return

  static void access$900(io.netty.handler.codec.http2.Http2ConnectionHandler, io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method closeConnectionOnError:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelFuture;)V
       6: return

  static void access$1000(io.netty.handler.codec.http2.Http2ConnectionHandler, io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Stream, io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method processRstStreamWriteResult:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Stream;Lio/netty/channel/ChannelFuture;)V
       7: return

  static void access$1100(io.netty.channel.ChannelHandlerContext, int, long, io.netty.buffer.ByteBuf, io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: iload_1
       2: lload_2
       3: aload         4
       5: aload         5
       7: invokestatic  #2                  // Method processGoAwayWriteResult:(Lio/netty/channel/ChannelHandlerContext;IJLio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelFuture;)V
      10: return

  static {};
    Code:
       0: ldc           #198                // class io/netty/handler/codec/http2/Http2ConnectionHandler
       2: invokestatic  #199                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #188                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: iconst_0
       9: getstatic     #200                // Field io/netty/handler/codec/http/HttpResponseStatus.REQUEST_HEADER_FIELDS_TOO_LARGE:Lio/netty/handler/codec/http/HttpResponseStatus;
      12: invokevirtual #201                // Method io/netty/handler/codec/http/HttpResponseStatus.codeAsText:()Lio/netty/util/AsciiString;
      15: iconst_0
      16: anewarray     #202                // class io/netty/util/AsciiString
      19: invokestatic  #203                // Method io/netty/handler/codec/http2/ReadOnlyHttp2Headers.serverHeaders:(ZLio/netty/util/AsciiString;[Lio/netty/util/AsciiString;)Lio/netty/handler/codec/http2/ReadOnlyHttp2Headers;
      22: putstatic     #149                // Field HEADERS_TOO_LARGE_HEADERS:Lio/netty/handler/codec/http2/Http2Headers;
      25: bipush        7
      27: newarray       byte
      29: dup
      30: iconst_0
      31: bipush        72
      33: bastore
      34: dup
      35: iconst_1
      36: bipush        84
      38: bastore
      39: dup
      40: iconst_2
      41: bipush        84
      43: bastore
      44: dup
      45: iconst_3
      46: bipush        80
      48: bastore
      49: dup
      50: iconst_4
      51: bipush        47
      53: bastore
      54: dup
      55: iconst_5
      56: bipush        49
      58: bastore
      59: dup
      60: bipush        6
      62: bipush        46
      64: bastore
      65: invokestatic  #204                // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
      68: invokestatic  #205                // Method io/netty/buffer/Unpooled.unreleasableBuffer:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      71: invokevirtual #206                // Method io/netty/buffer/ByteBuf.asReadOnly:()Lio/netty/buffer/ByteBuf;
      74: putstatic     #8                  // Field HTTP_1_X_BUF:Lio/netty/buffer/ByteBuf;
      77: return
}
