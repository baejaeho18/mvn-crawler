Compiled from "Http2Connection.java"
public interface io.netty.handler.codec.http2.Http2Connection$Endpoint<F extends io.netty.handler.codec.http2.Http2FlowController> {
  public abstract int incrementAndGetNextStreamId();

  public abstract boolean isValidStreamId(int);

  public abstract boolean mayHaveCreatedStream(int);

  public abstract boolean created(io.netty.handler.codec.http2.Http2Stream);

  public abstract boolean canOpenStream();

  public abstract io.netty.handler.codec.http2.Http2Stream createStream(int, boolean) throws io.netty.handler.codec.http2.Http2Exception;

  public abstract io.netty.handler.codec.http2.Http2Stream reservePushStream(int, io.netty.handler.codec.http2.Http2Stream) throws io.netty.handler.codec.http2.Http2Exception;

  public abstract boolean isServer();

  public abstract void allowPushTo(boolean);

  public abstract boolean allowPushTo();

  public abstract int numActiveStreams();

  public abstract int maxActiveStreams();

  public abstract void maxActiveStreams(int);

  public abstract int lastStreamCreated();

  public abstract int lastStreamKnownByPeer();

  public abstract F flowController();

  public abstract void flowController(F);

  public abstract io.netty.handler.codec.http2.Http2Connection$Endpoint<? extends io.netty.handler.codec.http2.Http2FlowController> opposite();
}
