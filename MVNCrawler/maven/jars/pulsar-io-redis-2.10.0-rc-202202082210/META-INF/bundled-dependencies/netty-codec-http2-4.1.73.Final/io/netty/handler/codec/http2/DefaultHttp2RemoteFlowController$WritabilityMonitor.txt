Compiled from "DefaultHttp2RemoteFlowController.java"
class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor implements io.netty.handler.codec.http2.StreamByteDistributor$Writer {
  private boolean inWritePendingBytes;

  private long totalPendingBytes;

  final io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0;

  private io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public final void write(io.netty.handler.codec.http2.Http2Stream, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       4: aload_1
       5: invokestatic  #4                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$100:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;Lio/netty/handler/codec/http2/Http2Stream;)Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;
       8: iload_2
       9: invokevirtual #5                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.writeAllocatedBytes:(I)I
      12: pop
      13: return

  void channelWritabilityChange() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: return

  void stateCancelled(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState);
    Code:
       0: return

  void windowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #6                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.windowSize:(I)V
       5: return

  void incrementWindowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #7                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.incrementStreamWindow:(I)I
       5: pop
       6: return

  void enqueueFrame(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState, io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #8                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.enqueueFrame:(Lio/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled;)V
       5: return

  final void incrementPendingBytes(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #9                  // Field totalPendingBytes:J
       5: iload_1
       6: i2l
       7: ladd
       8: putfield      #9                  // Field totalPendingBytes:J
      11: return

  final boolean isWritable(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method isWritableConnection:()Z
       4: ifeq          18
       7: aload_1
       8: invokevirtual #11                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.isWritable:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  final void writePendingBytes() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #12                 // Field inWritePendingBytes:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #12                 // Field inWritePendingBytes:Z
      13: aload_0
      14: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      17: invokestatic  #13                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$900:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)I
      20: istore_1
      21: aload_0
      22: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      25: invokestatic  #14                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$600:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/StreamByteDistributor;
      28: iload_1
      29: aload_0
      30: invokeinterface #15,  3           // InterfaceMethod io/netty/handler/codec/http2/StreamByteDistributor.distribute:(ILio/netty/handler/codec/http2/StreamByteDistributor$Writer;)Z
      35: ifeq          63
      38: aload_0
      39: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      42: invokestatic  #13                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$900:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)I
      45: dup
      46: istore_1
      47: ifle          63
      50: aload_0
      51: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      54: invokestatic  #16                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$1000:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Z
      57: ifne          21
      60: goto          63
      63: aload_0
      64: iconst_0
      65: putfield      #12                 // Field inWritePendingBytes:Z
      68: goto          79
      71: astore_2
      72: aload_0
      73: iconst_0
      74: putfield      #12                 // Field inWritePendingBytes:Z
      77: aload_2
      78: athrow
      79: return
    Exception table:
       from    to  target type
          13    63    71   any

  void initialWindowSize(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_1
       1: ldc           #17                 // String newWindowSize
       3: invokestatic  #18                 // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
       6: pop
       7: iload_1
       8: aload_0
       9: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      12: invokestatic  #19                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$200:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)I
      15: isub
      16: istore_2
      17: aload_0
      18: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      21: iload_1
      22: invokestatic  #20                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$202:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;I)I
      25: pop
      26: aload_0
      27: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      30: invokestatic  #21                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$1100:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/Http2Connection;
      33: new           #22                 // class io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor$1
      36: dup
      37: aload_0
      38: iload_2
      39: invokespecial #23                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor$1."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor;I)V
      42: invokeinterface #24,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.forEachActiveStream:(Lio/netty/handler/codec/http2/Http2StreamVisitor;)Lio/netty/handler/codec/http2/Http2Stream;
      47: pop
      48: iload_2
      49: ifle          66
      52: aload_0
      53: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      56: invokestatic  #25                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$1200:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Z
      59: ifeq          66
      62: aload_0
      63: invokevirtual #26                 // Method writePendingBytes:()V
      66: return

  final boolean isWritableConnection();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       4: invokestatic  #27                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$800:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;
       7: invokevirtual #28                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.windowSize:()I
      10: i2l
      11: aload_0
      12: getfield      #9                  // Field totalPendingBytes:J
      15: lsub
      16: lconst_0
      17: lcmp
      18: ifle          35
      21: aload_0
      22: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      25: invokestatic  #25                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$1200:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController, io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)V
       5: return
}
