Compiled from "AbstractHttp2StreamChannel.java"
abstract class io.netty.handler.codec.http2.AbstractHttp2StreamChannel extends io.netty.util.DefaultAttributeMap implements io.netty.handler.codec.http2.Http2StreamChannel {
  static final io.netty.handler.codec.http2.Http2FrameStreamVisitor WRITABLE_VISITOR;

  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final io.netty.channel.ChannelMetadata METADATA;

  private static final int MIN_HTTP2_FRAME_SIZE;

  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<io.netty.handler.codec.http2.AbstractHttp2StreamChannel> TOTAL_PENDING_SIZE_UPDATER;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.netty.handler.codec.http2.AbstractHttp2StreamChannel> UNWRITABLE_UPDATER;

  private final io.netty.channel.ChannelFutureListener windowUpdateFrameWriteListener;

  private final io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2StreamChannelConfig config;

  private final io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe unsafe;

  private final io.netty.channel.ChannelId channelId;

  private final io.netty.channel.ChannelPipeline pipeline;

  private final io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream stream;

  private final io.netty.channel.ChannelPromise closePromise;

  private volatile boolean registered;

  private volatile long totalPendingSize;

  private volatile int unwritable;

  private java.lang.Runnable fireChannelWritabilityChangedTask;

  private boolean outboundClosed;

  private int flowControlledBytes;

  private io.netty.handler.codec.http2.AbstractHttp2StreamChannel$ReadStatus readStatus;

  private java.util.Queue<java.lang.Object> inboundBuffer;

  private boolean firstFrameWritten;

  private boolean readCompletePending;

  static final boolean $assertionsDisabled;

  private static void windowUpdateFrameWriteComplete(io.netty.channel.ChannelFuture, io.netty.channel.Channel);
    Code:
       0: aload_0
       1: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
       6: astore_2
       7: aload_2
       8: ifnull        64
      11: aload_2
      12: instanceof    #20                 // class io/netty/handler/codec/http2/Http2FrameStreamException
      15: ifeq          29
      18: aload_2
      19: invokevirtual #21                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      22: dup
      23: astore_3
      24: ifnull        29
      27: aload_3
      28: astore_2
      29: aload_1
      30: invokeinterface #22,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      35: aload_2
      36: invokeinterface #23,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      41: pop
      42: aload_1
      43: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      48: aload_1
      49: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      54: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.voidPromise:()Lio/netty/channel/ChannelPromise;
      59: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/Channel$Unsafe.close:(Lio/netty/channel/ChannelPromise;)V
      64: return

  io.netty.handler.codec.http2.AbstractHttp2StreamChannel(io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream, int, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method io/netty/util/DefaultAttributeMap."<init>":()V
       4: aload_0
       5: new           #28                 // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel$2
       8: dup
       9: aload_0
      10: invokespecial #29                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$2."<init>":(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)V
      13: putfield      #3                  // Field windowUpdateFrameWriteListener:Lio/netty/channel/ChannelFutureListener;
      16: aload_0
      17: new           #30                 // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2StreamChannelConfig
      20: dup
      21: aload_0
      22: invokespecial #31                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2StreamChannelConfig."<init>":(Lio/netty/channel/Channel;)V
      25: putfield      #1                  // Field config:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2StreamChannelConfig;
      28: aload_0
      29: new           #32                 // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe
      32: dup
      33: aload_0
      34: aconst_null
      35: invokespecial #33                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe."<init>":(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$1;)V
      38: putfield      #6                  // Field unsafe:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;
      41: aload_0
      42: getstatic     #34                 // Field io/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus.IDLE:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      45: putfield      #7                  // Field readStatus:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      48: aload_0
      49: aload_1
      50: putfield      #12                 // Field stream:Lio/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream;
      53: aload_1
      54: aload_0
      55: putfield      #35                 // Field io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream.attachment:Lio/netty/channel/Channel;
      58: aload_0
      59: new           #36                 // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel$3
      62: dup
      63: aload_0
      64: aload_0
      65: invokespecial #37                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$3."<init>":(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Lio/netty/channel/Channel;)V
      68: putfield      #9                  // Field pipeline:Lio/netty/channel/ChannelPipeline;
      71: aload_0
      72: aload_0
      73: getfield      #9                  // Field pipeline:Lio/netty/channel/ChannelPipeline;
      76: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.newPromise:()Lio/netty/channel/ChannelPromise;
      81: putfield      #14                 // Field closePromise:Lio/netty/channel/ChannelPromise;
      84: aload_0
      85: new           #39                 // class io/netty/handler/codec/http2/Http2StreamChannelId
      88: dup
      89: aload_0
      90: invokevirtual #40                 // Method parent:()Lio/netty/channel/Channel;
      93: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      98: iload_2
      99: invokespecial #42                 // Method io/netty/handler/codec/http2/Http2StreamChannelId."<init>":(Lio/netty/channel/ChannelId;I)V
     102: putfield      #43                 // Field channelId:Lio/netty/channel/ChannelId;
     105: aload_3
     106: ifnull        127
     109: aload_0
     110: getfield      #9                  // Field pipeline:Lio/netty/channel/ChannelPipeline;
     113: iconst_1
     114: anewarray     #44                 // class io/netty/channel/ChannelHandler
     117: dup
     118: iconst_0
     119: aload_3
     120: aastore
     121: invokeinterface #45,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     126: pop
     127: return

  private void incrementPendingOutboundBytes(long, boolean);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifne          7
       6: return
       7: getstatic     #46                 // Field TOTAL_PENDING_SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
      15: lstore        4
      17: lload         4
      19: aload_0
      20: invokevirtual #48                 // Method config:()Lio/netty/channel/ChannelConfig;
      23: invokeinterface #49,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferHighWaterMark:()I
      28: i2l
      29: lcmp
      30: ifle          38
      33: aload_0
      34: iload_3
      35: invokespecial #50                 // Method setUnwritable:(Z)V
      38: return

  private void decrementPendingOutboundBytes(long, boolean);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifne          7
       6: return
       7: getstatic     #46                 // Field TOTAL_PENDING_SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: lneg
      13: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
      16: lstore        4
      18: lload         4
      20: aload_0
      21: invokevirtual #48                 // Method config:()Lio/netty/channel/ChannelConfig;
      24: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferLowWaterMark:()I
      29: i2l
      30: lcmp
      31: ifge          51
      34: aload_0
      35: invokevirtual #40                 // Method parent:()Lio/netty/channel/Channel;
      38: invokeinterface #52,  1           // InterfaceMethod io/netty/channel/Channel.isWritable:()Z
      43: ifeq          51
      46: aload_0
      47: iload_3
      48: invokespecial #53                 // Method setWritable:(Z)V
      51: return

  final void trySetWritable();
    Code:
       0: aload_0
       1: getfield      #54                 // Field totalPendingSize:J
       4: aload_0
       5: invokevirtual #48                 // Method config:()Lio/netty/channel/ChannelConfig;
       8: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferLowWaterMark:()I
      13: i2l
      14: lcmp
      15: ifge          23
      18: aload_0
      19: iconst_0
      20: invokespecial #53                 // Method setWritable:(Z)V
      23: return

  private void setWritable(boolean);
    Code:
       0: aload_0
       1: getfield      #55                 // Field unwritable:I
       4: istore_2
       5: iload_2
       6: bipush        -2
       8: iand
       9: istore_3
      10: getstatic     #56                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      13: aload_0
      14: iload_2
      15: iload_3
      16: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      19: ifeq          38
      22: iload_2
      23: ifeq          41
      26: iload_3
      27: ifne          41
      30: aload_0
      31: iload_1
      32: invokespecial #58                 // Method fireChannelWritabilityChanged:(Z)V
      35: goto          41
      38: goto          0
      41: return

  private void setUnwritable(boolean);
    Code:
       0: aload_0
       1: getfield      #55                 // Field unwritable:I
       4: istore_2
       5: iload_2
       6: iconst_1
       7: ior
       8: istore_3
       9: getstatic     #56                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      12: aload_0
      13: iload_2
      14: iload_3
      15: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      18: ifeq          33
      21: iload_2
      22: ifne          36
      25: aload_0
      26: iload_1
      27: invokespecial #58                 // Method fireChannelWritabilityChanged:(Z)V
      30: goto          36
      33: goto          0
      36: return

  private void fireChannelWritabilityChanged(boolean);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: astore_2
       5: iload_1
       6: ifeq          46
       9: aload_0
      10: getfield      #60                 // Field fireChannelWritabilityChangedTask:Ljava/lang/Runnable;
      13: astore_3
      14: aload_3
      15: ifnonnull     33
      18: aload_0
      19: new           #61                 // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel$4
      22: dup
      23: aload_0
      24: aload_2
      25: invokespecial #62                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$4."<init>":(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Lio/netty/channel/ChannelPipeline;)V
      28: dup
      29: astore_3
      30: putfield      #60                 // Field fireChannelWritabilityChangedTask:Ljava/lang/Runnable;
      33: aload_0
      34: invokevirtual #63                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      37: aload_3
      38: invokeinterface #64,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      43: goto          53
      46: aload_2
      47: invokeinterface #65,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelWritabilityChanged:()Lio/netty/channel/ChannelPipeline;
      52: pop
      53: return

  public io.netty.handler.codec.http2.Http2FrameStream stream();
    Code:
       0: aload_0
       1: getfield      #12                 // Field stream:Lio/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream;
       4: areturn

  void closeOutbound();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #10                 // Field outboundClosed:Z
       5: return

  void streamClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field unsafe:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;
       4: invokevirtual #66                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe.readEOS:()V
       7: aload_0
       8: getfield      #6                  // Field unsafe:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;
      11: invokevirtual #67                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe.doBeginRead:()V
      14: return

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: getstatic     #68                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
       3: areturn

  public io.netty.channel.ChannelConfig config();
    Code:
       0: aload_0
       1: getfield      #1                  // Field config:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2StreamChannelConfig;
       4: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #14                 // Field closePromise:Lio/netty/channel/ChannelPromise;
       4: invokeinterface #69,  1           // InterfaceMethod io/netty/channel/ChannelPromise.isDone:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean isActive();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method isOpen:()Z
       4: ireturn

  public boolean isWritable();
    Code:
       0: aload_0
       1: getfield      #55                 // Field unwritable:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public io.netty.channel.ChannelId id();
    Code:
       0: aload_0
       1: getfield      #43                 // Field channelId:Lio/netty/channel/ChannelId;
       4: areturn

  public io.netty.channel.EventLoop eventLoop();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method parent:()Lio/netty/channel/Channel;
       4: invokeinterface #71,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
       9: areturn

  public io.netty.channel.Channel parent();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method parentContext:()Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #73,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       9: areturn

  public boolean isRegistered();
    Code:
       0: aload_0
       1: getfield      #15                 // Field registered:Z
       4: ireturn

  public java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method parent:()Lio/netty/channel/Channel;
       4: invokeinterface #74,  1           // InterfaceMethod io/netty/channel/Channel.localAddress:()Ljava/net/SocketAddress;
       9: areturn

  public java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method parent:()Lio/netty/channel/Channel;
       4: invokeinterface #75,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
       9: areturn

  public io.netty.channel.ChannelFuture closeFuture();
    Code:
       0: aload_0
       1: getfield      #14                 // Field closePromise:Lio/netty/channel/ChannelPromise;
       4: areturn

  public long bytesBeforeUnwritable();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method config:()Lio/netty/channel/ChannelConfig;
       4: invokeinterface #49,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferHighWaterMark:()I
       9: i2l
      10: aload_0
      11: getfield      #54                 // Field totalPendingSize:J
      14: lsub
      15: lstore_1
      16: lload_1
      17: lconst_0
      18: lcmp
      19: ifle          35
      22: aload_0
      23: invokevirtual #76                 // Method isWritable:()Z
      26: ifeq          33
      29: lload_1
      30: goto          34
      33: lconst_0
      34: lreturn
      35: lconst_0
      36: lreturn

  public long bytesBeforeWritable();
    Code:
       0: aload_0
       1: getfield      #54                 // Field totalPendingSize:J
       4: aload_0
       5: invokevirtual #48                 // Method config:()Lio/netty/channel/ChannelConfig;
       8: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferLowWaterMark:()I
      13: i2l
      14: lsub
      15: lstore_1
      16: lload_1
      17: lconst_0
      18: lcmp
      19: ifle          35
      22: aload_0
      23: invokevirtual #76                 // Method isWritable:()Z
      26: ifeq          33
      29: lconst_0
      30: goto          34
      33: lload_1
      34: lreturn
      35: lconst_0
      36: lreturn

  public io.netty.channel.Channel$Unsafe unsafe();
    Code:
       0: aload_0
       1: getfield      #6                  // Field unsafe:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;
       4: areturn

  public io.netty.channel.ChannelPipeline pipeline();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pipeline:Lio/netty/channel/ChannelPipeline;
       4: areturn

  public io.netty.buffer.ByteBufAllocator alloc();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method config:()Lio/netty/channel/ChannelConfig;
       4: invokeinterface #77,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
       9: areturn

  public io.netty.channel.Channel read();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: invokeinterface #78,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.read:()Lio/netty/channel/ChannelOutboundInvoker;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.channel.Channel flush();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: invokeinterface #79,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.flush:()Lio/netty/channel/ChannelPipeline;
       9: pop
      10: aload_0
      11: areturn

  public io.netty.channel.ChannelFuture bind(java.net.SocketAddress);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: invokeinterface #80,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.bind:(Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: invokeinterface #81,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.connect:(Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress, java.net.SocketAddress);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: aload_2
       6: invokeinterface #82,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public io.netty.channel.ChannelFuture disconnect();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: invokeinterface #83,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.disconnect:()Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture close();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: invokeinterface #84,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.close:()Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture deregister();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: invokeinterface #85,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.deregister:()Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture bind(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: aload_2
       6: invokeinterface #86,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.bind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: aload_2
       6: invokeinterface #87,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.connect:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #88,  4           // InterfaceMethod io/netty/channel/ChannelPipeline.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      12: areturn

  public io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: invokeinterface #89,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: invokeinterface #90,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: invokeinterface #91,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.deregister:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture write(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: invokeinterface #92,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture write(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: aload_2
       6: invokeinterface #93,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: aload_2
       6: invokeinterface #94,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: invokeinterface #95,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelPromise newPromise();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.newPromise:()Lio/netty/channel/ChannelPromise;
       9: areturn

  public io.netty.channel.ChannelProgressivePromise newProgressivePromise();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: invokeinterface #96,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.newProgressivePromise:()Lio/netty/channel/ChannelProgressivePromise;
       9: areturn

  public io.netty.channel.ChannelFuture newSucceededFuture();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: invokeinterface #97,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.newSucceededFuture:()Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: aload_1
       5: invokeinterface #98,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelPromise voidPromise();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
       4: invokeinterface #99,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.voidPromise:()Lio/netty/channel/ChannelPromise;
       9: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #100                // Method id:()Lio/netty/channel/ChannelId;
       4: invokevirtual #101                // Method java/lang/Object.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  public int compareTo(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: invokevirtual #100                // Method id:()Lio/netty/channel/ChannelId;
      11: aload_1
      12: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      17: invokeinterface #102,  2          // InterfaceMethod io/netty/channel/ChannelId.compareTo:(Ljava/lang/Object;)I
      22: ireturn

  public java.lang.String toString();
    Code:
       0: new           #103                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #40                 // Method parent:()Lio/netty/channel/Channel;
      11: invokevirtual #105                // Method java/lang/Object.toString:()Ljava/lang/String;
      14: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #107                // String (H2 -
      19: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #12                 // Field stream:Lio/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream;
      26: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: bipush        41
      31: invokevirtual #109                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      34: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  void fireChildRead(io.netty.handler.codec.http2.Http2Frame);
    Code:
       0: getstatic     #111                // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: invokevirtual #63                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      10: invokeinterface #112,  1          // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      15: ifne          26
      18: new           #113                // class java/lang/AssertionError
      21: dup
      22: invokespecial #114                // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: invokevirtual #115                // Method isActive:()Z
      30: ifne          41
      33: aload_1
      34: invokestatic  #116                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      37: pop
      38: goto          159
      41: aload_0
      42: getfield      #7                  // Field readStatus:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      45: getstatic     #34                 // Field io/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus.IDLE:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      48: if_acmpeq     129
      51: getstatic     #111                // Field $assertionsDisabled:Z
      54: ifne          84
      57: aload_0
      58: getfield      #11                 // Field inboundBuffer:Ljava/util/Queue;
      61: ifnull        84
      64: aload_0
      65: getfield      #11                 // Field inboundBuffer:Ljava/util/Queue;
      68: invokeinterface #117,  1          // InterfaceMethod java/util/Queue.isEmpty:()Z
      73: ifne          84
      76: new           #113                // class java/lang/AssertionError
      79: dup
      80: invokespecial #114                // Method java/lang/AssertionError."<init>":()V
      83: athrow
      84: aload_0
      85: getfield      #6                  // Field unsafe:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;
      88: invokevirtual #118                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe.recvBufAllocHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
      91: astore_2
      92: aload_0
      93: getfield      #6                  // Field unsafe:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;
      96: aload_1
      97: aload_2
      98: invokevirtual #119                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe.doRead0:(Lio/netty/handler/codec/http2/Http2Frame;Lio/netty/channel/RecvByteBufAllocator$Handle;)V
     101: aload_2
     102: invokeinterface #120,  1          // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.continueReading:()Z
     107: ifeq          117
     110: aload_0
     111: invokespecial #5                  // Method maybeAddChannelToReadCompletePendingQueue:()V
     114: goto          126
     117: aload_0
     118: getfield      #6                  // Field unsafe:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;
     121: aload_2
     122: iconst_1
     123: invokevirtual #121                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe.notifyReadComplete:(Lio/netty/channel/RecvByteBufAllocator$Handle;Z)V
     126: goto          159
     129: aload_0
     130: getfield      #11                 // Field inboundBuffer:Ljava/util/Queue;
     133: ifnonnull     148
     136: aload_0
     137: new           #122                // class java/util/ArrayDeque
     140: dup
     141: iconst_4
     142: invokespecial #123                // Method java/util/ArrayDeque."<init>":(I)V
     145: putfield      #11                 // Field inboundBuffer:Ljava/util/Queue;
     148: aload_0
     149: getfield      #11                 // Field inboundBuffer:Ljava/util/Queue;
     152: aload_1
     153: invokeinterface #124,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     158: pop
     159: return

  void fireChildReadComplete();
    Code:
       0: getstatic     #111                // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: invokevirtual #63                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      10: invokeinterface #112,  1          // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      15: ifne          26
      18: new           #113                // class java/lang/AssertionError
      21: dup
      22: invokespecial #114                // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: getstatic     #111                // Field $assertionsDisabled:Z
      29: ifne          57
      32: aload_0
      33: getfield      #7                  // Field readStatus:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      36: getstatic     #34                 // Field io/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus.IDLE:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      39: if_acmpne     57
      42: aload_0
      43: getfield      #13                 // Field readCompletePending:Z
      46: ifeq          57
      49: new           #113                // class java/lang/AssertionError
      52: dup
      53: invokespecial #114                // Method java/lang/AssertionError."<init>":()V
      56: athrow
      57: aload_0
      58: getfield      #6                  // Field unsafe:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;
      61: aload_0
      62: getfield      #6                  // Field unsafe:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;
      65: invokevirtual #118                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe.recvBufAllocHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
      68: iconst_0
      69: invokevirtual #121                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe.notifyReadComplete:(Lio/netty/channel/RecvByteBufAllocator$Handle;Z)V
      72: return

  private void maybeAddChannelToReadCompletePendingQueue();
    Code:
       0: aload_0
       1: getfield      #13                 // Field readCompletePending:Z
       4: ifne          16
       7: aload_0
       8: iconst_1
       9: putfield      #13                 // Field readCompletePending:Z
      12: aload_0
      13: invokevirtual #125                // Method addChannelToReadCompletePendingQueue:()V
      16: return

  protected void flush0(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #126,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
       6: pop
       7: return

  protected io.netty.channel.ChannelFuture write0(io.netty.channel.ChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #127,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
       6: astore_3
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokeinterface #128,  3          // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      15: pop
      16: aload_3
      17: areturn

  protected abstract boolean isParentReadInProgress();

  protected abstract void addChannelToReadCompletePendingQueue();

  protected abstract io.netty.channel.ChannelHandlerContext parentContext();

  public io.netty.channel.ChannelOutboundInvoker flush();
    Code:
       0: aload_0
       1: invokevirtual #129                // Method flush:()Lio/netty/channel/Channel;
       4: areturn

  public io.netty.channel.ChannelOutboundInvoker read();
    Code:
       0: aload_0
       1: invokevirtual #130                // Method read:()Lio/netty/channel/Channel;
       4: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #131                // class io/netty/channel/Channel
       5: invokevirtual #132                // Method compareTo:(Lio/netty/channel/Channel;)I
       8: ireturn

  static void access$000(io.netty.channel.ChannelFuture, io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #18                 // Method windowUpdateFrameWriteComplete:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/Channel;)V
       5: return

  static void access$200(io.netty.handler.codec.http2.AbstractHttp2StreamChannel, long, boolean);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokespecial #17                 // Method incrementPendingOutboundBytes:(JZ)V
       6: return

  static void access$300(io.netty.handler.codec.http2.AbstractHttp2StreamChannel, long, boolean);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokespecial #16                 // Method decrementPendingOutboundBytes:(JZ)V
       6: return

  static boolean access$400(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #15                 // Field registered:Z
       4: ireturn

  static boolean access$402(io.netty.handler.codec.http2.AbstractHttp2StreamChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #15                 // Field registered:Z
       6: ireturn

  static io.netty.channel.ChannelPromise access$500(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #14                 // Field closePromise:Lio/netty/channel/ChannelPromise;
       4: areturn

  static boolean access$602(io.netty.handler.codec.http2.AbstractHttp2StreamChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #13                 // Field readCompletePending:Z
       6: ireturn

  static io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream access$700(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #12                 // Field stream:Lio/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream;
       4: areturn

  static java.util.Queue access$800(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #11                 // Field inboundBuffer:Ljava/util/Queue;
       4: areturn

  static java.util.Queue access$802(io.netty.handler.codec.http2.AbstractHttp2StreamChannel, java.util.Queue);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #11                 // Field inboundBuffer:Ljava/util/Queue;
       6: areturn

  static boolean access$902(io.netty.handler.codec.http2.AbstractHttp2StreamChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #10                 // Field outboundClosed:Z
       6: ireturn

  static io.netty.channel.ChannelPipeline access$1000(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #9                  // Field pipeline:Lio/netty/channel/ChannelPipeline;
       4: areturn

  static io.netty.util.internal.logging.InternalLogger access$1200();
    Code:
       0: getstatic     #8                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static io.netty.handler.codec.http2.AbstractHttp2StreamChannel$ReadStatus access$1300(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field readStatus:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
       4: areturn

  static io.netty.handler.codec.http2.AbstractHttp2StreamChannel$ReadStatus access$1302(io.netty.handler.codec.http2.AbstractHttp2StreamChannel, io.netty.handler.codec.http2.AbstractHttp2StreamChannel$ReadStatus);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field readStatus:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
       6: areturn

  static io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe access$1400(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #6                  // Field unsafe:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;
       4: areturn

  static void access$1500(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method maybeAddChannelToReadCompletePendingQueue:()V
       4: return

  static int access$1600(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field flowControlledBytes:I
       4: ireturn

  static int access$1602(io.netty.handler.codec.http2.AbstractHttp2StreamChannel, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #4                  // Field flowControlledBytes:I
       6: ireturn

  static io.netty.channel.ChannelFutureListener access$1700(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field windowUpdateFrameWriteListener:Lio/netty/channel/ChannelFutureListener;
       4: areturn

  static boolean access$600(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #13                 // Field readCompletePending:Z
       4: ireturn

  static boolean access$900(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #10                 // Field outboundClosed:Z
       4: ireturn

  static boolean access$1800(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field firstFrameWritten:Z
       4: ireturn

  static boolean access$1802(io.netty.handler.codec.http2.AbstractHttp2StreamChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field firstFrameWritten:Z
       6: ireturn

  static io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2StreamChannelConfig access$2200(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field config:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2StreamChannelConfig;
       4: areturn

  static {};
    Code:
       0: ldc           #133                // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel
       2: invokevirtual #134                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #111                // Field $assertionsDisabled:Z
      16: new           #135                // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel$1
      19: dup
      20: invokespecial #136                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$1."<init>":()V
      23: putstatic     #137                // Field WRITABLE_VISITOR:Lio/netty/handler/codec/http2/Http2FrameStreamVisitor;
      26: ldc           #133                // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel
      28: invokestatic  #138                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      31: putstatic     #8                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      34: new           #139                // class io/netty/channel/ChannelMetadata
      37: dup
      38: iconst_0
      39: bipush        16
      41: invokespecial #140                // Method io/netty/channel/ChannelMetadata."<init>":(ZI)V
      44: putstatic     #68                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
      47: ldc           #133                // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel
      49: ldc           #141                // String totalPendingSize
      51: invokestatic  #142                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      54: putstatic     #46                 // Field TOTAL_PENDING_SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      57: ldc           #133                // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel
      59: ldc           #143                // String unwritable
      61: invokestatic  #144                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      64: putstatic     #56                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      67: return
}
