Compiled from "DefaultHttp2Connection.java"
final class io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint<F extends io.netty.handler.codec.http2.Http2FlowController> implements io.netty.handler.codec.http2.Http2Connection$Endpoint<F> {
  private final boolean server;

  private int nextStreamIdToCreate;

  private int nextReservationStreamId;

  private int lastStreamKnownByPeer;

  private boolean pushToAllowed;

  private F flowController;

  private int maxStreams;

  private int maxActiveStreams;

  private final int maxReservedStreams;

  int numActiveStreams;

  int numStreams;

  static final boolean $assertionsDisabled;

  final io.netty.handler.codec.http2.DefaultHttp2Connection this$0;

  io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint(io.netty.handler.codec.http2.DefaultHttp2Connection, boolean, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2Connection;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field lastStreamKnownByPeer:I
      14: aload_0
      15: iload_2
      16: putfield      #6                  // Field server:Z
      19: iload_2
      20: ifeq          36
      23: aload_0
      24: iconst_2
      25: putfield      #7                  // Field nextStreamIdToCreate:I
      28: aload_0
      29: iconst_0
      30: putfield      #8                  // Field nextReservationStreamId:I
      33: goto          46
      36: aload_0
      37: iconst_1
      38: putfield      #7                  // Field nextStreamIdToCreate:I
      41: aload_0
      42: iconst_1
      43: putfield      #8                  // Field nextReservationStreamId:I
      46: aload_0
      47: iload_2
      48: ifne          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: putfield      #9                  // Field pushToAllowed:Z
      59: aload_0
      60: ldc           #10                 // int 2147483647
      62: putfield      #11                 // Field maxActiveStreams:I
      65: aload_0
      66: iload_3
      67: ldc           #12                 // String maxReservedStreams
      69: invokestatic  #13                 // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
      72: putfield      #14                 // Field maxReservedStreams:I
      75: aload_0
      76: invokespecial #15                 // Method updateMaxStreams:()V
      79: return

  public int incrementAndGetNextStreamId();
    Code:
       0: aload_0
       1: getfield      #8                  // Field nextReservationStreamId:I
       4: iflt          21
       7: aload_0
       8: dup
       9: getfield      #8                  // Field nextReservationStreamId:I
      12: iconst_2
      13: iadd
      14: dup_x1
      15: putfield      #8                  // Field nextReservationStreamId:I
      18: goto          25
      21: aload_0
      22: getfield      #8                  // Field nextReservationStreamId:I
      25: ireturn

  private void incrementExpectedStreamId(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #8                  // Field nextReservationStreamId:I
       5: if_icmple     20
       8: aload_0
       9: getfield      #8                  // Field nextReservationStreamId:I
      12: iflt          20
      15: aload_0
      16: iload_1
      17: putfield      #8                  // Field nextReservationStreamId:I
      20: aload_0
      21: iload_1
      22: iconst_2
      23: iadd
      24: putfield      #7                  // Field nextStreamIdToCreate:I
      27: aload_0
      28: dup
      29: getfield      #16                 // Field numStreams:I
      32: iconst_1
      33: iadd
      34: putfield      #16                 // Field numStreams:I
      37: return

  public boolean isValidStreamId(int);
    Code:
       0: iload_1
       1: ifle          26
       4: aload_0
       5: getfield      #6                  // Field server:Z
       8: iload_1
       9: iconst_1
      10: iand
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: if_icmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean mayHaveCreatedStream(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #17                 // Method isValidStreamId:(I)Z
       5: ifeq          20
       8: iload_1
       9: aload_0
      10: invokevirtual #18                 // Method lastStreamCreated:()I
      13: if_icmpgt     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean canOpenStream();
    Code:
       0: aload_0
       1: getfield      #19                 // Field numActiveStreams:I
       4: aload_0
       5: getfield      #11                 // Field maxActiveStreams:I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream createStream(int, boolean) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_1
       1: getstatic     #20                 // Field io/netty/handler/codec/http2/Http2Stream$State.IDLE:Lio/netty/handler/codec/http2/Http2Stream$State;
       4: aload_0
       5: invokespecial #21                 // Method isLocal:()Z
       8: iload_2
       9: invokestatic  #22                 // Method io/netty/handler/codec/http2/DefaultHttp2Connection.activeState:(ILio/netty/handler/codec/http2/Http2Stream$State;ZZ)Lio/netty/handler/codec/http2/Http2Stream$State;
      12: astore_3
      13: aload_0
      14: iload_1
      15: aload_3
      16: invokespecial #23                 // Method checkNewStreamAllowed:(ILio/netty/handler/codec/http2/Http2Stream$State;)V
      19: new           #24                 // class io/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream
      22: dup
      23: aload_0
      24: getfield      #4                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2Connection;
      27: iload_1
      28: aload_3
      29: invokespecial #25                 // Method io/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2Connection;ILio/netty/handler/codec/http2/Http2Stream$State;)V
      32: astore        4
      34: aload_0
      35: iload_1
      36: invokespecial #26                 // Method incrementExpectedStreamId:(I)V
      39: aload_0
      40: aload         4
      42: invokespecial #27                 // Method addStream:(Lio/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream;)V
      45: aload         4
      47: invokevirtual #28                 // Method io/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream.activate:()V
      50: aload         4
      52: areturn

  public boolean created(io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_1
       1: instanceof    #24                 // class io/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream
       4: ifeq          22
       7: aload_1
       8: checkcast     #24                 // class io/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream
      11: invokevirtual #29                 // Method io/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream.createdBy:()Lio/netty/handler/codec/http2/DefaultHttp2Connection$DefaultEndpoint;
      14: aload_0
      15: if_acmpne     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean isServer();
    Code:
       0: aload_0
       1: getfield      #6                  // Field server:Z
       4: ireturn

  public io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream reservePushStream(int, io.netty.handler.codec.http2.Http2Stream) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_2
       1: ifnonnull     17
       4: getstatic     #30                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
       7: ldc           #31                 // String Parent stream missing
       9: iconst_0
      10: anewarray     #32                 // class java/lang/Object
      13: invokestatic  #33                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      16: athrow
      17: aload_0
      18: invokespecial #21                 // Method isLocal:()Z
      21: ifeq          39
      24: aload_2
      25: invokeinterface #34,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.state:()Lio/netty/handler/codec/http2/Http2Stream$State;
      30: invokevirtual #35                 // Method io/netty/handler/codec/http2/Http2Stream$State.localSideOpen:()Z
      33: ifne          76
      36: goto          51
      39: aload_2
      40: invokeinterface #34,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.state:()Lio/netty/handler/codec/http2/Http2Stream$State;
      45: invokevirtual #36                 // Method io/netty/handler/codec/http2/Http2Stream$State.remoteSideOpen:()Z
      48: ifne          76
      51: getstatic     #30                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      54: ldc           #37                 // String Stream %d is not open for sending push promise
      56: iconst_1
      57: anewarray     #32                 // class java/lang/Object
      60: dup
      61: iconst_0
      62: aload_2
      63: invokeinterface #38,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      68: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: aastore
      72: invokestatic  #33                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      75: athrow
      76: aload_0
      77: invokevirtual #40                 // Method opposite:()Lio/netty/handler/codec/http2/Http2Connection$Endpoint;
      80: invokeinterface #41,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection$Endpoint.allowPushTo:()Z
      85: ifne          101
      88: getstatic     #30                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      91: ldc           #42                 // String Server push not allowed to opposite endpoint
      93: iconst_0
      94: anewarray     #32                 // class java/lang/Object
      97: invokestatic  #33                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     100: athrow
     101: aload_0
     102: invokespecial #21                 // Method isLocal:()Z
     105: ifeq          114
     108: getstatic     #43                 // Field io/netty/handler/codec/http2/Http2Stream$State.RESERVED_LOCAL:Lio/netty/handler/codec/http2/Http2Stream$State;
     111: goto          117
     114: getstatic     #44                 // Field io/netty/handler/codec/http2/Http2Stream$State.RESERVED_REMOTE:Lio/netty/handler/codec/http2/Http2Stream$State;
     117: astore_3
     118: aload_0
     119: iload_1
     120: aload_3
     121: invokespecial #23                 // Method checkNewStreamAllowed:(ILio/netty/handler/codec/http2/Http2Stream$State;)V
     124: new           #24                 // class io/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream
     127: dup
     128: aload_0
     129: getfield      #4                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2Connection;
     132: iload_1
     133: aload_3
     134: invokespecial #25                 // Method io/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2Connection;ILio/netty/handler/codec/http2/Http2Stream$State;)V
     137: astore        4
     139: aload_0
     140: iload_1
     141: invokespecial #26                 // Method incrementExpectedStreamId:(I)V
     144: aload_0
     145: aload         4
     147: invokespecial #27                 // Method addStream:(Lio/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream;)V
     150: aload         4
     152: areturn

  private void addStream(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream);
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2Connection;
       4: getfield      #45                 // Field io/netty/handler/codec/http2/DefaultHttp2Connection.streamMap:Lio/netty/util/collection/IntObjectMap;
       7: aload_1
       8: invokevirtual #46                 // Method io/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream.id:()I
      11: aload_1
      12: invokeinterface #47,  3           // InterfaceMethod io/netty/util/collection/IntObjectMap.put:(ILjava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: iconst_0
      19: istore_2
      20: iload_2
      21: aload_0
      22: getfield      #4                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2Connection;
      25: getfield      #48                 // Field io/netty/handler/codec/http2/DefaultHttp2Connection.listeners:Ljava/util/List;
      28: invokeinterface #49,  1           // InterfaceMethod java/util/List.size:()I
      33: if_icmpge     79
      36: aload_0
      37: getfield      #4                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2Connection;
      40: getfield      #48                 // Field io/netty/handler/codec/http2/DefaultHttp2Connection.listeners:Ljava/util/List;
      43: iload_2
      44: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: checkcast     #51                 // class io/netty/handler/codec/http2/Http2Connection$Listener
      52: aload_1
      53: invokeinterface #52,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection$Listener.onStreamAdded:(Lio/netty/handler/codec/http2/Http2Stream;)V
      58: goto          73
      61: astore_3
      62: invokestatic  #54                 // Method io/netty/handler/codec/http2/DefaultHttp2Connection.access$400:()Lio/netty/util/internal/logging/InternalLogger;
      65: ldc           #55                 // String Caught Throwable from listener onStreamAdded.
      67: aload_3
      68: invokeinterface #56,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      73: iinc          2, 1
      76: goto          20
      79: return
    Exception table:
       from    to  target type
          36    58    61   Class java/lang/Throwable

  public void allowPushTo(boolean);
    Code:
       0: iload_1
       1: ifeq          21
       4: aload_0
       5: getfield      #6                  // Field server:Z
       8: ifeq          21
      11: new           #57                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #58                 // String Servers do not allow push
      17: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: iload_1
      23: putfield      #9                  // Field pushToAllowed:Z
      26: return

  public boolean allowPushTo();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pushToAllowed:Z
       4: ireturn

  public int numActiveStreams();
    Code:
       0: aload_0
       1: getfield      #19                 // Field numActiveStreams:I
       4: ireturn

  public int maxActiveStreams();
    Code:
       0: aload_0
       1: getfield      #11                 // Field maxActiveStreams:I
       4: ireturn

  public void maxActiveStreams(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field maxActiveStreams:I
       5: aload_0
       6: invokespecial #15                 // Method updateMaxStreams:()V
       9: return

  public int lastStreamCreated();
    Code:
       0: aload_0
       1: getfield      #7                  // Field nextStreamIdToCreate:I
       4: iconst_1
       5: if_icmple     17
       8: aload_0
       9: getfield      #7                  // Field nextStreamIdToCreate:I
      12: iconst_2
      13: isub
      14: goto          18
      17: iconst_0
      18: ireturn

  public int lastStreamKnownByPeer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lastStreamKnownByPeer:I
       4: ireturn

  private void lastStreamKnownByPeer(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field lastStreamKnownByPeer:I
       5: return

  public F flowController();
    Code:
       0: aload_0
       1: getfield      #60                 // Field flowController:Lio/netty/handler/codec/http2/Http2FlowController;
       4: areturn

  public void flowController(F);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #61                 // String flowController
       4: invokestatic  #62                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #63                 // class io/netty/handler/codec/http2/Http2FlowController
      10: putfield      #60                 // Field flowController:Lio/netty/handler/codec/http2/Http2FlowController;
      13: return

  public io.netty.handler.codec.http2.Http2Connection$Endpoint<? extends io.netty.handler.codec.http2.Http2FlowController> opposite();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method isLocal:()Z
       4: ifeq          17
       7: aload_0
       8: getfield      #4                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2Connection;
      11: getfield      #64                 // Field io/netty/handler/codec/http2/DefaultHttp2Connection.remoteEndpoint:Lio/netty/handler/codec/http2/DefaultHttp2Connection$DefaultEndpoint;
      14: goto          24
      17: aload_0
      18: getfield      #4                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2Connection;
      21: getfield      #65                 // Field io/netty/handler/codec/http2/DefaultHttp2Connection.localEndpoint:Lio/netty/handler/codec/http2/DefaultHttp2Connection$DefaultEndpoint;
      24: areturn

  private void updateMaxStreams();
    Code:
       0: aload_0
       1: ldc2_w        #66                 // long 2147483647l
       4: aload_0
       5: getfield      #11                 // Field maxActiveStreams:I
       8: i2l
       9: aload_0
      10: getfield      #14                 // Field maxReservedStreams:I
      13: i2l
      14: ladd
      15: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
      18: l2i
      19: putfield      #69                 // Field maxStreams:I
      22: return

  private void checkNewStreamAllowed(int, io.netty.handler.codec.http2.Http2Stream$State) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: getstatic     #70                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_2
       7: getstatic     #20                 // Field io/netty/handler/codec/http2/Http2Stream$State.IDLE:Lio/netty/handler/codec/http2/Http2Stream$State;
      10: if_acmpne     21
      13: new           #71                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #72                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field lastStreamKnownByPeer:I
      25: iflt          67
      28: iload_1
      29: aload_0
      30: getfield      #3                  // Field lastStreamKnownByPeer:I
      33: if_icmple     67
      36: iload_1
      37: getstatic     #73                 // Field io/netty/handler/codec/http2/Http2Error.REFUSED_STREAM:Lio/netty/handler/codec/http2/Http2Error;
      40: ldc           #74                 // String Cannot create stream %d greater than Last-Stream-ID %d from GOAWAY.
      42: iconst_2
      43: anewarray     #32                 // class java/lang/Object
      46: dup
      47: iconst_0
      48: iload_1
      49: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: aastore
      53: dup
      54: iconst_1
      55: aload_0
      56: getfield      #3                  // Field lastStreamKnownByPeer:I
      59: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: aastore
      63: invokestatic  #75                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      66: athrow
      67: aload_0
      68: iload_1
      69: invokevirtual #17                 // Method isValidStreamId:(I)Z
      72: ifne          124
      75: iload_1
      76: ifge          87
      79: new           #76                 // class io/netty/handler/codec/http2/Http2NoMoreStreamIdsException
      82: dup
      83: invokespecial #77                 // Method io/netty/handler/codec/http2/Http2NoMoreStreamIdsException."<init>":()V
      86: athrow
      87: getstatic     #30                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      90: ldc           #78                 // String Request stream %d is not correct for %s connection
      92: iconst_2
      93: anewarray     #32                 // class java/lang/Object
      96: dup
      97: iconst_0
      98: iload_1
      99: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     102: aastore
     103: dup
     104: iconst_1
     105: aload_0
     106: getfield      #6                  // Field server:Z
     109: ifeq          117
     112: ldc           #79                 // String server
     114: goto          119
     117: ldc           #80                 // String client
     119: aastore
     120: invokestatic  #33                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     123: athrow
     124: iload_1
     125: aload_0
     126: getfield      #7                  // Field nextStreamIdToCreate:I
     129: if_icmpge     162
     132: getstatic     #30                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     135: ldc           #81                 // String Request stream %d is behind the next expected stream %d
     137: iconst_2
     138: anewarray     #32                 // class java/lang/Object
     141: dup
     142: iconst_0
     143: iload_1
     144: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     147: aastore
     148: dup
     149: iconst_1
     150: aload_0
     151: getfield      #7                  // Field nextStreamIdToCreate:I
     154: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     157: aastore
     158: invokestatic  #82                 // Method io/netty/handler/codec/http2/Http2Exception.closedStreamError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     161: athrow
     162: aload_0
     163: getfield      #7                  // Field nextStreamIdToCreate:I
     166: ifgt          185
     169: new           #83                 // class io/netty/handler/codec/http2/Http2Exception
     172: dup
     173: getstatic     #73                 // Field io/netty/handler/codec/http2/Http2Error.REFUSED_STREAM:Lio/netty/handler/codec/http2/Http2Error;
     176: ldc           #84                 // String Stream IDs are exhausted for this endpoint.
     178: getstatic     #85                 // Field io/netty/handler/codec/http2/Http2Exception$ShutdownHint.GRACEFUL_SHUTDOWN:Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
     181: invokespecial #86                 // Method io/netty/handler/codec/http2/Http2Exception."<init>":(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;)V
     184: athrow
     185: aload_2
     186: getstatic     #43                 // Field io/netty/handler/codec/http2/Http2Stream$State.RESERVED_LOCAL:Lio/netty/handler/codec/http2/Http2Stream$State;
     189: if_acmpeq     199
     192: aload_2
     193: getstatic     #44                 // Field io/netty/handler/codec/http2/Http2Stream$State.RESERVED_REMOTE:Lio/netty/handler/codec/http2/Http2Stream$State;
     196: if_acmpne     203
     199: iconst_1
     200: goto          204
     203: iconst_0
     204: istore_3
     205: iload_3
     206: ifne          216
     209: aload_0
     210: invokevirtual #87                 // Method canOpenStream:()Z
     213: ifeq          231
     216: iload_3
     217: ifeq          276
     220: aload_0
     221: getfield      #16                 // Field numStreams:I
     224: aload_0
     225: getfield      #69                 // Field maxStreams:I
     228: if_icmplt     276
     231: iload_1
     232: getstatic     #73                 // Field io/netty/handler/codec/http2/Http2Error.REFUSED_STREAM:Lio/netty/handler/codec/http2/Http2Error;
     235: new           #88                 // class java/lang/StringBuilder
     238: dup
     239: invokespecial #89                 // Method java/lang/StringBuilder."<init>":()V
     242: ldc           #90                 // String Maximum active streams violated for this endpoint:
     244: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: iload_3
     248: ifeq          258
     251: aload_0
     252: getfield      #69                 // Field maxStreams:I
     255: goto          262
     258: aload_0
     259: getfield      #11                 // Field maxActiveStreams:I
     262: invokevirtual #92                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     265: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     268: iconst_0
     269: anewarray     #32                 // class java/lang/Object
     272: invokestatic  #75                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     275: athrow
     276: aload_0
     277: getfield      #4                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2Connection;
     280: invokevirtual #94                 // Method io/netty/handler/codec/http2/DefaultHttp2Connection.isClosed:()Z
     283: ifeq          306
     286: getstatic     #95                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     289: ldc           #96                 // String Attempted to create stream id %d after connection was closed
     291: iconst_1
     292: anewarray     #32                 // class java/lang/Object
     295: dup
     296: iconst_0
     297: iload_1
     298: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     301: aastore
     302: invokestatic  #33                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     305: athrow
     306: return

  private boolean isLocal();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2Connection;
       5: getfield      #65                 // Field io/netty/handler/codec/http2/DefaultHttp2Connection.localEndpoint:Lio/netty/handler/codec/http2/DefaultHttp2Connection$DefaultEndpoint;
       8: if_acmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public io.netty.handler.codec.http2.Http2Stream reservePushStream(int, io.netty.handler.codec.http2.Http2Stream) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #97                 // Method reservePushStream:(ILio/netty/handler/codec/http2/Http2Stream;)Lio/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream;
       6: areturn

  public io.netty.handler.codec.http2.Http2Stream createStream(int, boolean) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #98                 // Method createStream:(IZ)Lio/netty/handler/codec/http2/DefaultHttp2Connection$DefaultStream;
       6: areturn

  static int access$100(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lastStreamKnownByPeer:I
       4: ireturn

  static void access$200(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method lastStreamKnownByPeer:(I)V
       5: return

  static {};
    Code:
       0: ldc           #99                 // class io/netty/handler/codec/http2/DefaultHttp2Connection
       2: invokevirtual #100                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #70                 // Field $assertionsDisabled:Z
      16: return
}
