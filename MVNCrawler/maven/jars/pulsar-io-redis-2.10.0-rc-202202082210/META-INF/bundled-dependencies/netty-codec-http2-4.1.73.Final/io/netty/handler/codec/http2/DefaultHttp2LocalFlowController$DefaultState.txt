Compiled from "DefaultHttp2LocalFlowController.java"
class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$DefaultState implements io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$FlowState {
  private final io.netty.handler.codec.http2.Http2Stream stream;

  private int window;

  private int processedWindow;

  private int initialStreamWindowSize;

  private float streamWindowUpdateRatio;

  private int lowerBound;

  private boolean endOfStream;

  static final boolean $assertionsDisabled;

  final io.netty.handler.codec.http2.DefaultHttp2LocalFlowController this$0;

  io.netty.handler.codec.http2.DefaultHttp2LocalFlowController$DefaultState(io.netty.handler.codec.http2.DefaultHttp2LocalFlowController, io.netty.handler.codec.http2.Http2Stream, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      14: aload_0
      15: iload_3
      16: invokevirtual #5                  // Method window:(I)V
      19: aload_0
      20: aload_1
      21: invokestatic  #6                  // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.access$600:(Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;)F
      24: putfield      #7                  // Field streamWindowUpdateRatio:F
      27: return

  public void window(int);
    Code:
       0: getstatic     #8                  // Field $assertionsDisabled:Z
       3: ifne          44
       6: aload_0
       7: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;
      10: invokestatic  #9                  // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.access$400:(Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;)Lio/netty/channel/ChannelHandlerContext;
      13: ifnull        44
      16: aload_0
      17: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;
      20: invokestatic  #9                  // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.access$400:(Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;)Lio/netty/channel/ChannelHandlerContext;
      23: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      28: invokeinterface #11,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      33: ifne          44
      36: new           #12                 // class java/lang/AssertionError
      39: dup
      40: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      43: athrow
      44: aload_0
      45: aload_0
      46: aload_0
      47: iload_1
      48: dup_x1
      49: putfield      #14                 // Field initialStreamWindowSize:I
      52: dup_x1
      53: putfield      #15                 // Field processedWindow:I
      56: putfield      #16                 // Field window:I
      59: return

  public int windowSize();
    Code:
       0: aload_0
       1: getfield      #16                 // Field window:I
       4: ireturn

  public int initialWindowSize();
    Code:
       0: aload_0
       1: getfield      #14                 // Field initialStreamWindowSize:I
       4: ireturn

  public void endOfStream(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field endOfStream:Z
       5: return

  public float windowUpdateRatio();
    Code:
       0: aload_0
       1: getfield      #7                  // Field streamWindowUpdateRatio:F
       4: freturn

  public void windowUpdateRatio(float);
    Code:
       0: getstatic     #8                  // Field $assertionsDisabled:Z
       3: ifne          44
       6: aload_0
       7: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;
      10: invokestatic  #9                  // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.access$400:(Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;)Lio/netty/channel/ChannelHandlerContext;
      13: ifnull        44
      16: aload_0
      17: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;
      20: invokestatic  #9                  // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.access$400:(Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;)Lio/netty/channel/ChannelHandlerContext;
      23: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      28: invokeinterface #11,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      33: ifne          44
      36: new           #12                 // class java/lang/AssertionError
      39: dup
      40: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      43: athrow
      44: aload_0
      45: fload_1
      46: putfield      #7                  // Field streamWindowUpdateRatio:F
      49: return

  public void incrementInitialStreamWindow(int);
    Code:
       0: ldc2_w        #18                 // long 2147483647l
       3: lconst_0
       4: aload_0
       5: getfield      #14                 // Field initialStreamWindowSize:I
       8: i2l
       9: iload_1
      10: i2l
      11: ladd
      12: invokestatic  #20                 // Method java/lang/Math.max:(JJ)J
      15: invokestatic  #21                 // Method java/lang/Math.min:(JJ)J
      18: l2i
      19: istore_2
      20: iload_2
      21: aload_0
      22: getfield      #14                 // Field initialStreamWindowSize:I
      25: isub
      26: istore_1
      27: aload_0
      28: dup
      29: getfield      #14                 // Field initialStreamWindowSize:I
      32: iload_1
      33: iadd
      34: putfield      #14                 // Field initialStreamWindowSize:I
      37: return

  public void incrementFlowControlWindows(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_1
       1: ifle          52
       4: aload_0
       5: getfield      #16                 // Field window:I
       8: ldc           #22                 // int 2147483647
      10: iload_1
      11: isub
      12: if_icmple     52
      15: aload_0
      16: getfield      #4                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      19: invokeinterface #23,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      24: getstatic     #24                 // Field io/netty/handler/codec/http2/Http2Error.FLOW_CONTROL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      27: ldc           #25                 // String Flow control window overflowed for stream: %d
      29: iconst_1
      30: anewarray     #26                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_0
      36: getfield      #4                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      39: invokeinterface #23,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      44: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: aastore
      48: invokestatic  #28                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      51: athrow
      52: aload_0
      53: dup
      54: getfield      #16                 // Field window:I
      57: iload_1
      58: iadd
      59: putfield      #16                 // Field window:I
      62: aload_0
      63: dup
      64: getfield      #15                 // Field processedWindow:I
      67: iload_1
      68: iadd
      69: putfield      #15                 // Field processedWindow:I
      72: aload_0
      73: iload_1
      74: iconst_0
      75: invokestatic  #29                 // Method java/lang/Math.min:(II)I
      78: putfield      #30                 // Field lowerBound:I
      81: return

  public void receiveFlowControlledFrame(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: getstatic     #8                  // Field $assertionsDisabled:Z
       3: ifne          18
       6: iload_1
       7: ifge          18
      10: new           #12                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: dup
      20: getfield      #16                 // Field window:I
      23: iload_1
      24: isub
      25: putfield      #16                 // Field window:I
      28: aload_0
      29: getfield      #16                 // Field window:I
      32: aload_0
      33: getfield      #30                 // Field lowerBound:I
      36: if_icmpge     76
      39: aload_0
      40: getfield      #4                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      43: invokeinterface #23,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      48: getstatic     #24                 // Field io/netty/handler/codec/http2/Http2Error.FLOW_CONTROL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      51: ldc           #31                 // String Flow control window exceeded for stream: %d
      53: iconst_1
      54: anewarray     #26                 // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_0
      60: getfield      #4                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      63: invokeinterface #23,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      68: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: aastore
      72: invokestatic  #28                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      75: athrow
      76: return

  private void returnProcessedBytes(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #15                 // Field processedWindow:I
       4: iload_1
       5: isub
       6: aload_0
       7: getfield      #16                 // Field window:I
      10: if_icmpge     50
      13: aload_0
      14: getfield      #4                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      17: invokeinterface #23,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      22: getstatic     #32                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      25: ldc           #33                 // String Attempting to return too many bytes for stream %d
      27: iconst_1
      28: anewarray     #26                 // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_0
      34: getfield      #4                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      37: invokeinterface #23,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      42: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: aastore
      46: invokestatic  #28                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      49: athrow
      50: aload_0
      51: dup
      52: getfield      #15                 // Field processedWindow:I
      55: iload_1
      56: isub
      57: putfield      #15                 // Field processedWindow:I
      60: return

  public boolean consumeBytes(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #34                 // Method returnProcessedBytes:(I)V
       5: aload_0
       6: invokevirtual #35                 // Method writeWindowUpdateIfNeeded:()Z
       9: ireturn

  public int unconsumedBytes();
    Code:
       0: aload_0
       1: getfield      #15                 // Field processedWindow:I
       4: aload_0
       5: getfield      #16                 // Field window:I
       8: isub
       9: ireturn

  public boolean writeWindowUpdateIfNeeded() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #17                 // Field endOfStream:Z
       4: ifne          24
       7: aload_0
       8: getfield      #14                 // Field initialStreamWindowSize:I
      11: ifle          24
      14: aload_0
      15: getfield      #4                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      18: invokestatic  #36                 // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.access$700:(Lio/netty/handler/codec/http2/Http2Stream;)Z
      21: ifeq          26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #14                 // Field initialStreamWindowSize:I
      30: i2f
      31: aload_0
      32: getfield      #7                  // Field streamWindowUpdateRatio:F
      35: fmul
      36: f2i
      37: istore_1
      38: aload_0
      39: getfield      #15                 // Field processedWindow:I
      42: iload_1
      43: if_icmpgt     52
      46: aload_0
      47: invokespecial #37                 // Method writeWindowUpdate:()V
      50: iconst_1
      51: ireturn
      52: iconst_0
      53: ireturn

  private void writeWindowUpdate() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #14                 // Field initialStreamWindowSize:I
       4: aload_0
       5: getfield      #15                 // Field processedWindow:I
       8: isub
       9: istore_1
      10: aload_0
      11: iload_1
      12: invokevirtual #38                 // Method incrementFlowControlWindows:(I)V
      15: goto          48
      18: astore_2
      19: getstatic     #32                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      22: aload_2
      23: ldc           #33                 // String Attempting to return too many bytes for stream %d
      25: iconst_1
      26: anewarray     #26                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_0
      32: getfield      #4                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      35: invokeinterface #23,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      40: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: aastore
      44: invokestatic  #40                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      47: athrow
      48: aload_0
      49: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;
      52: invokestatic  #41                 // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.access$800:(Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;)Lio/netty/handler/codec/http2/Http2FrameWriter;
      55: aload_0
      56: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;
      59: invokestatic  #9                  // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.access$400:(Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;)Lio/netty/channel/ChannelHandlerContext;
      62: aload_0
      63: getfield      #4                  // Field stream:Lio/netty/handler/codec/http2/Http2Stream;
      66: invokeinterface #23,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.id:()I
      71: iload_1
      72: aload_0
      73: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;
      76: invokestatic  #9                  // Method io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.access$400:(Lio/netty/handler/codec/http2/DefaultHttp2LocalFlowController;)Lio/netty/channel/ChannelHandlerContext;
      79: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      84: invokeinterface #43,  5           // InterfaceMethod io/netty/handler/codec/http2/Http2FrameWriter.writeWindowUpdate:(Lio/netty/channel/ChannelHandlerContext;IILio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      89: pop
      90: return
    Exception table:
       from    to  target type
          10    15    18   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #44                 // class io/netty/handler/codec/http2/DefaultHttp2LocalFlowController
       2: invokevirtual #45                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #8                  // Field $assertionsDisabled:Z
      16: return
}
