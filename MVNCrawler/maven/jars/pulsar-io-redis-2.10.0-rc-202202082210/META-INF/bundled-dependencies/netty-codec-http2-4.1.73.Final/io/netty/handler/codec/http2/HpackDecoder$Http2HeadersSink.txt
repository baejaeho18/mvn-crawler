Compiled from "HpackDecoder.java"
final class io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink implements io.netty.handler.codec.http2.HpackDecoder$Sink {
  private final io.netty.handler.codec.http2.Http2Headers headers;

  private final long maxHeaderListSize;

  private final int streamId;

  private final boolean validate;

  private long headersLength;

  private boolean exceededMaxLength;

  private io.netty.handler.codec.http2.HpackDecoder$HeaderType previousType;

  private io.netty.handler.codec.http2.Http2Exception validationException;

  io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink(int, io.netty.handler.codec.http2.Http2Headers, long, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field headers:Lio/netty/handler/codec/http2/Http2Headers;
       9: aload_0
      10: lload_3
      11: putfield      #3                  // Field maxHeaderListSize:J
      14: aload_0
      15: iload_1
      16: putfield      #4                  // Field streamId:I
      19: aload_0
      20: iload         5
      22: putfield      #5                  // Field validate:Z
      25: return

  public void finish() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field exceededMaxLength:Z
       4: ifeq          22
       7: aload_0
       8: getfield      #4                  // Field streamId:I
      11: aload_0
      12: getfield      #3                  // Field maxHeaderListSize:J
      15: iconst_1
      16: invokestatic  #7                  // Method io/netty/handler/codec/http2/Http2CodecUtil.headerListSizeExceeded:(IJZ)V
      19: goto          34
      22: aload_0
      23: getfield      #8                  // Field validationException:Lio/netty/handler/codec/http2/Http2Exception;
      26: ifnull        34
      29: aload_0
      30: getfield      #8                  // Field validationException:Lio/netty/handler/codec/http2/Http2Exception;
      33: athrow
      34: return

  public void appendToHeaderList(java.lang.CharSequence, java.lang.CharSequence);
    Code:
       0: aload_0
       1: dup
       2: getfield      #9                  // Field headersLength:J
       5: aload_1
       6: aload_2
       7: invokestatic  #10                 // Method io/netty/handler/codec/http2/HpackHeaderField.sizeOf:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)J
      10: ladd
      11: putfield      #9                  // Field headersLength:J
      14: aload_0
      15: dup
      16: getfield      #6                  // Field exceededMaxLength:Z
      19: aload_0
      20: getfield      #9                  // Field headersLength:J
      23: aload_0
      24: getfield      #3                  // Field maxHeaderListSize:J
      27: lcmp
      28: ifle          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ior
      37: putfield      #6                  // Field exceededMaxLength:Z
      40: aload_0
      41: getfield      #6                  // Field exceededMaxLength:Z
      44: ifne          54
      47: aload_0
      48: getfield      #8                  // Field validationException:Lio/netty/handler/codec/http2/Http2Exception;
      51: ifnull        55
      54: return
      55: aload_0
      56: getfield      #5                  // Field validate:Z
      59: ifeq          88
      62: aload_0
      63: aload_0
      64: getfield      #4                  // Field streamId:I
      67: aload_1
      68: aload_0
      69: getfield      #11                 // Field previousType:Lio/netty/handler/codec/http2/HpackDecoder$HeaderType;
      72: invokestatic  #12                 // Method io/netty/handler/codec/http2/HpackDecoder.access$000:(ILjava/lang/CharSequence;Lio/netty/handler/codec/http2/HpackDecoder$HeaderType;)Lio/netty/handler/codec/http2/HpackDecoder$HeaderType;
      75: putfield      #11                 // Field previousType:Lio/netty/handler/codec/http2/HpackDecoder$HeaderType;
      78: goto          88
      81: astore_3
      82: aload_0
      83: aload_3
      84: putfield      #8                  // Field validationException:Lio/netty/handler/codec/http2/Http2Exception;
      87: return
      88: aload_0
      89: getfield      #2                  // Field headers:Lio/netty/handler/codec/http2/Http2Headers;
      92: aload_1
      93: aload_2
      94: invokeinterface #14,  3           // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.add:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
      99: pop
     100: return
    Exception table:
       from    to  target type
          62    78    81   Class io/netty/handler/codec/http2/Http2Exception
}
