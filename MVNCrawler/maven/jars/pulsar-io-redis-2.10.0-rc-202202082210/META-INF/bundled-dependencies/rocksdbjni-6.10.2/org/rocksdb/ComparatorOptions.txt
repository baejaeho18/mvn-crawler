Compiled from "ComparatorOptions.java"
public class org.rocksdb.ComparatorOptions extends org.rocksdb.RocksObject {
  static final boolean $assertionsDisabled;

  public org.rocksdb.ComparatorOptions();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method newComparatorOptions:()J
       4: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
       7: return

  public org.rocksdb.ReusedSynchronisationType reusedSynchronisationType();
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokespecial #8                  // Method reusedSynchronisationType:(J)B
      29: invokestatic  #9                  // Method org/rocksdb/ReusedSynchronisationType.getReusedSynchronisationType:(B)Lorg/rocksdb/ReusedSynchronisationType;
      32: areturn

  public org.rocksdb.ComparatorOptions setReusedSynchronisationType(org.rocksdb.ReusedSynchronisationType);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: aload_1
      27: invokevirtual #10                 // Method org/rocksdb/ReusedSynchronisationType.getValue:()B
      30: invokespecial #11                 // Method setReusedSynchronisationType:(JB)V
      33: aload_0
      34: areturn

  public boolean useDirectBuffer();
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokespecial #12                 // Method useDirectBuffer:(J)Z
      29: ireturn

  public org.rocksdb.ComparatorOptions setUseDirectBuffer(boolean);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #13                 // Method setUseDirectBuffer:(JZ)V
      30: aload_0
      31: areturn

  public int maxReusedBufferSize();
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokespecial #14                 // Method maxReusedBufferSize:(J)I
      29: ireturn

  public org.rocksdb.ComparatorOptions setMaxReusedBufferSize(int);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #15                 // Method setMaxReusedBufferSize:(JI)V
      30: aload_0
      31: areturn

  private static native long newComparatorOptions();

  private native byte reusedSynchronisationType(long);

  private native void setReusedSynchronisationType(long, byte);

  private native boolean useDirectBuffer(long);

  private native void setUseDirectBuffer(long, boolean);

  private native int maxReusedBufferSize(long);

  private native void setMaxReusedBufferSize(long, int);

  protected final native void disposeInternal(long);

  static {};
    Code:
       0: ldc_w         #16                 // class org/rocksdb/ComparatorOptions
       3: invokevirtual #17                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #3                  // Field $assertionsDisabled:Z
      17: return
}
