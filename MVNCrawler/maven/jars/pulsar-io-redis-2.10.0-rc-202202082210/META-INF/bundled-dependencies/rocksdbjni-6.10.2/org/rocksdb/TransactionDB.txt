Compiled from "TransactionDB.java"
public class org.rocksdb.TransactionDB extends org.rocksdb.RocksDB implements org.rocksdb.TransactionalDB<org.rocksdb.TransactionOptions> {
  private org.rocksdb.TransactionDBOptions transactionDbOptions_;

  static final boolean $assertionsDisabled;

  private org.rocksdb.TransactionDB(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #1                  // Method org/rocksdb/RocksDB."<init>":(J)V
       5: return

  public static org.rocksdb.TransactionDB open(org.rocksdb.Options, org.rocksdb.TransactionDBOptions, java.lang.String) throws org.rocksdb.RocksDBException;
    Code:
       0: new           #2                  // class org/rocksdb/TransactionDB
       3: dup
       4: aload_0
       5: getfield      #3                  // Field org/rocksdb/Options.nativeHandle_:J
       8: aload_1
       9: getfield      #4                  // Field org/rocksdb/TransactionDBOptions.nativeHandle_:J
      12: aload_2
      13: invokestatic  #5                  // Method open:(JJLjava/lang/String;)J
      16: invokespecial #6                  // Method "<init>":(J)V
      19: astore_3
      20: aload_3
      21: aload_0
      22: invokevirtual #7                  // Method storeOptionsInstance:(Lorg/rocksdb/DBOptionsInterface;)V
      25: aload_3
      26: aload_1
      27: invokespecial #8                  // Method storeTransactionDbOptions:(Lorg/rocksdb/TransactionDBOptions;)V
      30: aload_3
      31: areturn

  public static org.rocksdb.TransactionDB open(org.rocksdb.DBOptions, org.rocksdb.TransactionDBOptions, java.lang.String, java.util.List<org.rocksdb.ColumnFamilyDescriptor>, java.util.List<org.rocksdb.ColumnFamilyHandle>) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_3
       1: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
       6: anewarray     #10                 // class "[B"
       9: astore        5
      11: aload_3
      12: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
      17: newarray       long
      19: astore        6
      21: iconst_0
      22: istore        7
      24: iload         7
      26: aload_3
      27: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
      32: if_icmpge     77
      35: aload_3
      36: iload         7
      38: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: checkcast     #12                 // class org/rocksdb/ColumnFamilyDescriptor
      46: astore        8
      48: aload         5
      50: iload         7
      52: aload         8
      54: invokevirtual #13                 // Method org/rocksdb/ColumnFamilyDescriptor.getName:()[B
      57: aastore
      58: aload         6
      60: iload         7
      62: aload         8
      64: invokevirtual #14                 // Method org/rocksdb/ColumnFamilyDescriptor.getOptions:()Lorg/rocksdb/ColumnFamilyOptions;
      67: getfield      #15                 // Field org/rocksdb/ColumnFamilyOptions.nativeHandle_:J
      70: lastore
      71: iinc          7, 1
      74: goto          24
      77: aload_0
      78: getfield      #16                 // Field org/rocksdb/DBOptions.nativeHandle_:J
      81: aload_1
      82: getfield      #4                  // Field org/rocksdb/TransactionDBOptions.nativeHandle_:J
      85: aload_2
      86: aload         5
      88: aload         6
      90: invokestatic  #17                 // Method open:(JJLjava/lang/String;[[B[J)[J
      93: astore        7
      95: new           #2                  // class org/rocksdb/TransactionDB
      98: dup
      99: aload         7
     101: iconst_0
     102: laload
     103: invokespecial #6                  // Method "<init>":(J)V
     106: astore        8
     108: aload         8
     110: aload_0
     111: invokevirtual #7                  // Method storeOptionsInstance:(Lorg/rocksdb/DBOptionsInterface;)V
     114: aload         8
     116: aload_1
     117: invokespecial #8                  // Method storeTransactionDbOptions:(Lorg/rocksdb/TransactionDBOptions;)V
     120: iconst_1
     121: istore        9
     123: iload         9
     125: aload         7
     127: arraylength
     128: if_icmpge     159
     131: aload         4
     133: new           #18                 // class org/rocksdb/ColumnFamilyHandle
     136: dup
     137: aload         8
     139: aload         7
     141: iload         9
     143: laload
     144: invokespecial #19                 // Method org/rocksdb/ColumnFamilyHandle."<init>":(Lorg/rocksdb/RocksDB;J)V
     147: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     152: pop
     153: iinc          9, 1
     156: goto          123
     159: aload         8
     161: areturn

  public void closeE() throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field owningHandle_:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          33
      12: aload_0
      13: getfield      #23                 // Field nativeHandle_:J
      16: invokestatic  #24                 // Method closeDatabase:(J)V
      19: aload_0
      20: invokevirtual #25                 // Method disposeInternal:()V
      23: goto          33
      26: astore_1
      27: aload_0
      28: invokevirtual #25                 // Method disposeInternal:()V
      31: aload_1
      32: athrow
      33: return
    Exception table:
       from    to  target type
          12    19    26   any
          26    27    26   any

  public void close();
    Code:
       0: aload_0
       1: getfield      #21                 // Field owningHandle_:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          41
      12: aload_0
      13: getfield      #23                 // Field nativeHandle_:J
      16: invokestatic  #24                 // Method closeDatabase:(J)V
      19: aload_0
      20: invokevirtual #25                 // Method disposeInternal:()V
      23: goto          41
      26: astore_1
      27: aload_0
      28: invokevirtual #25                 // Method disposeInternal:()V
      31: goto          41
      34: astore_2
      35: aload_0
      36: invokevirtual #25                 // Method disposeInternal:()V
      39: aload_2
      40: athrow
      41: return
    Exception table:
       from    to  target type
          12    19    26   Class org/rocksdb/RocksDBException
          12    19    34   any
          26    27    34   any
          34    35    34   any

  public org.rocksdb.Transaction beginTransaction(org.rocksdb.WriteOptions);
    Code:
       0: new           #27                 // class org/rocksdb/Transaction
       3: dup
       4: aload_0
       5: aload_0
       6: aload_0
       7: getfield      #23                 // Field nativeHandle_:J
      10: aload_1
      11: getfield      #28                 // Field org/rocksdb/WriteOptions.nativeHandle_:J
      14: invokespecial #29                 // Method beginTransaction:(JJ)J
      17: invokespecial #30                 // Method org/rocksdb/Transaction."<init>":(Lorg/rocksdb/RocksDB;J)V
      20: areturn

  public org.rocksdb.Transaction beginTransaction(org.rocksdb.WriteOptions, org.rocksdb.TransactionOptions);
    Code:
       0: new           #27                 // class org/rocksdb/Transaction
       3: dup
       4: aload_0
       5: aload_0
       6: aload_0
       7: getfield      #23                 // Field nativeHandle_:J
      10: aload_1
      11: getfield      #28                 // Field org/rocksdb/WriteOptions.nativeHandle_:J
      14: aload_2
      15: getfield      #31                 // Field org/rocksdb/TransactionOptions.nativeHandle_:J
      18: invokespecial #32                 // Method beginTransaction:(JJJ)J
      21: invokespecial #30                 // Method org/rocksdb/Transaction."<init>":(Lorg/rocksdb/RocksDB;J)V
      24: areturn

  public org.rocksdb.Transaction beginTransaction(org.rocksdb.WriteOptions, org.rocksdb.Transaction);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field nativeHandle_:J
       5: aload_1
       6: getfield      #28                 // Field org/rocksdb/WriteOptions.nativeHandle_:J
       9: aload_2
      10: getfield      #33                 // Field org/rocksdb/Transaction.nativeHandle_:J
      13: invokespecial #34                 // Method beginTransaction_withOld:(JJJ)J
      16: lstore_3
      17: getstatic     #35                 // Field $assertionsDisabled:Z
      20: ifne          40
      23: lload_3
      24: aload_2
      25: getfield      #33                 // Field org/rocksdb/Transaction.nativeHandle_:J
      28: lcmp
      29: ifeq          40
      32: new           #36                 // class java/lang/AssertionError
      35: dup
      36: invokespecial #37                 // Method java/lang/AssertionError."<init>":()V
      39: athrow
      40: aload_2
      41: areturn

  public org.rocksdb.Transaction beginTransaction(org.rocksdb.WriteOptions, org.rocksdb.TransactionOptions, org.rocksdb.Transaction);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field nativeHandle_:J
       5: aload_1
       6: getfield      #28                 // Field org/rocksdb/WriteOptions.nativeHandle_:J
       9: aload_2
      10: getfield      #31                 // Field org/rocksdb/TransactionOptions.nativeHandle_:J
      13: aload_3
      14: getfield      #33                 // Field org/rocksdb/Transaction.nativeHandle_:J
      17: invokespecial #38                 // Method beginTransaction_withOld:(JJJJ)J
      20: lstore        4
      22: getstatic     #35                 // Field $assertionsDisabled:Z
      25: ifne          46
      28: lload         4
      30: aload_3
      31: getfield      #33                 // Field org/rocksdb/Transaction.nativeHandle_:J
      34: lcmp
      35: ifeq          46
      38: new           #36                 // class java/lang/AssertionError
      41: dup
      42: invokespecial #37                 // Method java/lang/AssertionError."<init>":()V
      45: athrow
      46: aload_3
      47: areturn

  public org.rocksdb.Transaction getTransactionByName(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field nativeHandle_:J
       5: aload_1
       6: invokespecial #39                 // Method getTransactionByName:(JLjava/lang/String;)J
       9: lstore_2
      10: lload_2
      11: lconst_0
      12: lcmp
      13: ifne          18
      16: aconst_null
      17: areturn
      18: new           #27                 // class org/rocksdb/Transaction
      21: dup
      22: aload_0
      23: lload_2
      24: invokespecial #30                 // Method org/rocksdb/Transaction."<init>":(Lorg/rocksdb/RocksDB;J)V
      27: astore        4
      29: aload         4
      31: invokevirtual #40                 // Method org/rocksdb/Transaction.disOwnNativeHandle:()V
      34: aload         4
      36: areturn

  public java.util.List<org.rocksdb.Transaction> getAllPreparedTransactions();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field nativeHandle_:J
       5: invokespecial #41                 // Method getAllPreparedTransactions:(J)[J
       8: astore_1
       9: new           #42                 // class java/util/ArrayList
      12: dup
      13: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
      16: astore_2
      17: aload_1
      18: astore_3
      19: aload_3
      20: arraylength
      21: istore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: iload         4
      30: if_icmpge     71
      33: aload_3
      34: iload         5
      36: laload
      37: lstore        6
      39: new           #27                 // class org/rocksdb/Transaction
      42: dup
      43: aload_0
      44: lload         6
      46: invokespecial #30                 // Method org/rocksdb/Transaction."<init>":(Lorg/rocksdb/RocksDB;J)V
      49: astore        8
      51: aload         8
      53: invokevirtual #40                 // Method org/rocksdb/Transaction.disOwnNativeHandle:()V
      56: aload_2
      57: aload         8
      59: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: iinc          5, 1
      68: goto          26
      71: aload_2
      72: areturn

  public java.util.Map<java.lang.Long, org.rocksdb.TransactionDB$KeyLockInfo> getLockStatusData();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field nativeHandle_:J
       5: invokespecial #44                 // Method getLockStatusData:(J)Ljava/util/Map;
       8: areturn

  private org.rocksdb.TransactionDB$DeadlockInfo newDeadlockInfo(long, long, java.lang.String, boolean);
    Code:
       0: new           #45                 // class org/rocksdb/TransactionDB$DeadlockInfo
       3: dup
       4: lload_1
       5: lload_3
       6: aload         5
       8: iload         6
      10: aconst_null
      11: invokespecial #46                 // Method org/rocksdb/TransactionDB$DeadlockInfo."<init>":(JJLjava/lang/String;ZLorg/rocksdb/TransactionDB$1;)V
      14: areturn

  public org.rocksdb.TransactionDB$DeadlockPath[] getDeadlockInfoBuffer();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field nativeHandle_:J
       5: invokespecial #47                 // Method getDeadlockInfoBuffer:(J)[Lorg/rocksdb/TransactionDB$DeadlockPath;
       8: areturn

  public void setDeadlockInfoBufferSize(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #48                 // Method setDeadlockInfoBufferSize:(JI)V
       9: return

  private void storeTransactionDbOptions(org.rocksdb.TransactionDBOptions);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field transactionDbOptions_:Lorg/rocksdb/TransactionDBOptions;
       5: return

  protected final native void disposeInternal(long);

  private static native long open(long, long, java.lang.String) throws org.rocksdb.RocksDBException;

  private static native long[] open(long, long, java.lang.String, byte[][], long[]);

  private static native void closeDatabase(long) throws org.rocksdb.RocksDBException;

  private native long beginTransaction(long, long);

  private native long beginTransaction(long, long, long);

  private native long beginTransaction_withOld(long, long, long);

  private native long beginTransaction_withOld(long, long, long, long);

  private native long getTransactionByName(long, java.lang.String);

  private native long[] getAllPreparedTransactions(long);

  private native java.util.Map<java.lang.Long, org.rocksdb.TransactionDB$KeyLockInfo> getLockStatusData(long);

  private native org.rocksdb.TransactionDB$DeadlockPath[] getDeadlockInfoBuffer(long);

  private native void setDeadlockInfoBufferSize(long, int);

  public org.rocksdb.Transaction beginTransaction(org.rocksdb.WriteOptions, org.rocksdb.TransactionalOptions, org.rocksdb.Transaction);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #50                 // class org/rocksdb/TransactionOptions
       6: aload_3
       7: invokevirtual #51                 // Method beginTransaction:(Lorg/rocksdb/WriteOptions;Lorg/rocksdb/TransactionOptions;Lorg/rocksdb/Transaction;)Lorg/rocksdb/Transaction;
      10: areturn

  public org.rocksdb.Transaction beginTransaction(org.rocksdb.WriteOptions, org.rocksdb.TransactionalOptions);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #50                 // class org/rocksdb/TransactionOptions
       6: invokevirtual #52                 // Method beginTransaction:(Lorg/rocksdb/WriteOptions;Lorg/rocksdb/TransactionOptions;)Lorg/rocksdb/Transaction;
       9: areturn

  static {};
    Code:
       0: ldc_w         #2                  // class org/rocksdb/TransactionDB
       3: invokevirtual #53                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #35                 // Field $assertionsDisabled:Z
      17: return
}
