Compiled from "BytewiseComparator.java"
public final class org.rocksdb.util.BytewiseComparator extends org.rocksdb.AbstractComparator {
  static final boolean $assertionsDisabled;

  public org.rocksdb.util.BytewiseComparator(org.rocksdb.ComparatorOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/rocksdb/AbstractComparator."<init>":(Lorg/rocksdb/ComparatorOptions;)V
       5: return

  public java.lang.String name();
    Code:
       0: ldc           #2                  // String rocksdb.java.BytewiseComparator
       2: areturn

  public int compare(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #3                  // Method _compare:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
       5: ireturn

  static int _compare(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: getstatic     #4                  // Field $assertionsDisabled:Z
       3: ifne          22
       6: aload_0
       7: ifnull        14
      10: aload_1
      11: ifnonnull     22
      14: new           #5                  // class java/lang/AssertionError
      17: dup
      18: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: aload_0
      23: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      26: aload_1
      27: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      30: if_icmpge     40
      33: aload_0
      34: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      37: goto          44
      40: aload_1
      41: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      44: istore_2
      45: aload_0
      46: aload_1
      47: iload_2
      48: invokestatic  #8                  // Method org/rocksdb/util/ByteUtil.memcmp:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)I
      51: istore_3
      52: iload_3
      53: ifne          85
      56: aload_0
      57: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      60: aload_1
      61: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      64: if_icmpge     72
      67: iconst_m1
      68: istore_3
      69: goto          85
      72: aload_0
      73: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      76: aload_1
      77: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      80: if_icmple     85
      83: iconst_1
      84: istore_3
      85: iload_3
      86: ireturn

  public void findShortestSeparator(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
       4: aload_2
       5: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
       8: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     42
      21: aload_1
      22: iload         4
      24: invokevirtual #10                 // Method java/nio/ByteBuffer.get:(I)B
      27: aload_2
      28: iload         4
      30: invokevirtual #10                 // Method java/nio/ByteBuffer.get:(I)B
      33: if_icmpne     42
      36: iinc          4, 1
      39: goto          15
      42: iload         4
      44: iload_3
      45: if_icmplt     51
      48: goto          251
      51: aload_1
      52: iload         4
      54: invokevirtual #10                 // Method java/nio/ByteBuffer.get:(I)B
      57: sipush        255
      60: iand
      61: istore        5
      63: aload_2
      64: iload         4
      66: invokevirtual #10                 // Method java/nio/ByteBuffer.get:(I)B
      69: sipush        255
      72: iand
      73: istore        6
      75: iload         5
      77: iload         6
      79: if_icmplt     83
      82: return
      83: getstatic     #4                  // Field $assertionsDisabled:Z
      86: ifne          104
      89: iload         5
      91: iload         6
      93: if_icmplt     104
      96: new           #5                  // class java/lang/AssertionError
      99: dup
     100: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
     103: athrow
     104: iload         4
     106: aload_2
     107: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
     110: iconst_1
     111: isub
     112: if_icmplt     124
     115: iload         5
     117: iconst_1
     118: iadd
     119: iload         6
     121: if_icmpge     156
     124: aload_1
     125: iload         4
     127: aload_1
     128: iload         4
     130: invokevirtual #10                 // Method java/nio/ByteBuffer.get:(I)B
     133: sipush        255
     136: iand
     137: iconst_1
     138: iadd
     139: i2b
     140: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     143: pop
     144: aload_1
     145: iload         4
     147: iconst_1
     148: iadd
     149: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     152: pop
     153: goto          222
     156: iinc          4, 1
     159: iload         4
     161: aload_1
     162: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
     165: if_icmpge     222
     168: aload_1
     169: iload         4
     171: invokevirtual #10                 // Method java/nio/ByteBuffer.get:(I)B
     174: sipush        255
     177: iand
     178: sipush        255
     181: if_icmpge     216
     184: aload_1
     185: iload         4
     187: aload_1
     188: iload         4
     190: invokevirtual #10                 // Method java/nio/ByteBuffer.get:(I)B
     193: sipush        255
     196: iand
     197: iconst_1
     198: iadd
     199: i2b
     200: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     203: pop
     204: aload_1
     205: iload         4
     207: iconst_1
     208: iadd
     209: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     212: pop
     213: goto          222
     216: iinc          4, 1
     219: goto          159
     222: getstatic     #4                  // Field $assertionsDisabled:Z
     225: ifne          251
     228: aload_0
     229: aload_1
     230: invokevirtual #13                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     233: aload_2
     234: invokevirtual #13                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     237: invokevirtual #14                 // Method compare:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
     240: iflt          251
     243: new           #5                  // class java/lang/AssertionError
     246: dup
     247: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
     250: athrow
     251: return

  public void findShortSuccessor(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     57
      12: aload_1
      13: iload_3
      14: invokevirtual #10                 // Method java/nio/ByteBuffer.get:(I)B
      17: sipush        255
      20: iand
      21: istore        4
      23: iload         4
      25: sipush        255
      28: if_icmpeq     51
      31: aload_1
      32: iload_3
      33: iload         4
      35: iconst_1
      36: iadd
      37: i2b
      38: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      41: pop
      42: aload_1
      43: iload_3
      44: iconst_1
      45: iadd
      46: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      49: pop
      50: return
      51: iinc          3, 1
      54: goto          7
      57: return

  static {};
    Code:
       0: ldc_w         #15                 // class org/rocksdb/util/BytewiseComparator
       3: invokevirtual #16                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #4                  // Field $assertionsDisabled:Z
      17: return
}
