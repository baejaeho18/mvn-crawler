Compiled from "TableProperties.java"
public class org.rocksdb.TableProperties {
  private final long dataSize;

  private final long indexSize;

  private final long indexPartitions;

  private final long topLevelIndexSize;

  private final long indexKeyIsUserKey;

  private final long indexValueIsDeltaEncoded;

  private final long filterSize;

  private final long rawKeySize;

  private final long rawValueSize;

  private final long numDataBlocks;

  private final long numEntries;

  private final long numDeletions;

  private final long numMergeOperands;

  private final long numRangeDeletions;

  private final long formatVersion;

  private final long fixedKeyLen;

  private final long columnFamilyId;

  private final long creationTime;

  private final long oldestKeyTime;

  private final byte[] columnFamilyName;

  private final java.lang.String filterPolicyName;

  private final java.lang.String comparatorName;

  private final java.lang.String mergeOperatorName;

  private final java.lang.String prefixExtractorName;

  private final java.lang.String propertyCollectorsNames;

  private final java.lang.String compressionName;

  private final java.util.Map<java.lang.String, java.lang.String> userCollectedProperties;

  private final java.util.Map<java.lang.String, java.lang.String> readableProperties;

  private final java.util.Map<java.lang.String, java.lang.Long> propertiesOffsets;

  private org.rocksdb.TableProperties(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, byte[], java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.Long>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #2                  // Field dataSize:J
       9: aload_0
      10: lload_3
      11: putfield      #3                  // Field indexSize:J
      14: aload_0
      15: lload         5
      17: putfield      #4                  // Field indexPartitions:J
      20: aload_0
      21: lload         7
      23: putfield      #5                  // Field topLevelIndexSize:J
      26: aload_0
      27: lload         9
      29: putfield      #6                  // Field indexKeyIsUserKey:J
      32: aload_0
      33: lload         11
      35: putfield      #7                  // Field indexValueIsDeltaEncoded:J
      38: aload_0
      39: lload         13
      41: putfield      #8                  // Field filterSize:J
      44: aload_0
      45: lload         15
      47: putfield      #9                  // Field rawKeySize:J
      50: aload_0
      51: lload         17
      53: putfield      #10                 // Field rawValueSize:J
      56: aload_0
      57: lload         19
      59: putfield      #11                 // Field numDataBlocks:J
      62: aload_0
      63: lload         21
      65: putfield      #12                 // Field numEntries:J
      68: aload_0
      69: lload         23
      71: putfield      #13                 // Field numDeletions:J
      74: aload_0
      75: lload         25
      77: putfield      #14                 // Field numMergeOperands:J
      80: aload_0
      81: lload         27
      83: putfield      #15                 // Field numRangeDeletions:J
      86: aload_0
      87: lload         29
      89: putfield      #16                 // Field formatVersion:J
      92: aload_0
      93: lload         31
      95: putfield      #17                 // Field fixedKeyLen:J
      98: aload_0
      99: lload         33
     101: putfield      #18                 // Field columnFamilyId:J
     104: aload_0
     105: lload         35
     107: putfield      #19                 // Field creationTime:J
     110: aload_0
     111: lload         37
     113: putfield      #20                 // Field oldestKeyTime:J
     116: aload_0
     117: aload         39
     119: putfield      #21                 // Field columnFamilyName:[B
     122: aload_0
     123: aload         40
     125: putfield      #22                 // Field filterPolicyName:Ljava/lang/String;
     128: aload_0
     129: aload         41
     131: putfield      #23                 // Field comparatorName:Ljava/lang/String;
     134: aload_0
     135: aload         42
     137: putfield      #24                 // Field mergeOperatorName:Ljava/lang/String;
     140: aload_0
     141: aload         43
     143: putfield      #25                 // Field prefixExtractorName:Ljava/lang/String;
     146: aload_0
     147: aload         44
     149: putfield      #26                 // Field propertyCollectorsNames:Ljava/lang/String;
     152: aload_0
     153: aload         45
     155: putfield      #27                 // Field compressionName:Ljava/lang/String;
     158: aload_0
     159: aload         46
     161: putfield      #28                 // Field userCollectedProperties:Ljava/util/Map;
     164: aload_0
     165: aload         47
     167: putfield      #29                 // Field readableProperties:Ljava/util/Map;
     170: aload_0
     171: aload         48
     173: putfield      #30                 // Field propertiesOffsets:Ljava/util/Map;
     176: return

  public long getDataSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field dataSize:J
       4: lreturn

  public long getIndexSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field indexSize:J
       4: lreturn

  public long getIndexPartitions();
    Code:
       0: aload_0
       1: getfield      #4                  // Field indexPartitions:J
       4: lreturn

  public long getTopLevelIndexSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field topLevelIndexSize:J
       4: lreturn

  public long getIndexKeyIsUserKey();
    Code:
       0: aload_0
       1: getfield      #6                  // Field indexKeyIsUserKey:J
       4: lreturn

  public long getIndexValueIsDeltaEncoded();
    Code:
       0: aload_0
       1: getfield      #7                  // Field indexValueIsDeltaEncoded:J
       4: lreturn

  public long getFilterSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field filterSize:J
       4: lreturn

  public long getRawKeySize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field rawKeySize:J
       4: lreturn

  public long getRawValueSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field rawValueSize:J
       4: lreturn

  public long getNumDataBlocks();
    Code:
       0: aload_0
       1: getfield      #11                 // Field numDataBlocks:J
       4: lreturn

  public long getNumEntries();
    Code:
       0: aload_0
       1: getfield      #12                 // Field numEntries:J
       4: lreturn

  public long getNumDeletions();
    Code:
       0: aload_0
       1: getfield      #13                 // Field numDeletions:J
       4: lreturn

  public long getNumMergeOperands();
    Code:
       0: aload_0
       1: getfield      #14                 // Field numMergeOperands:J
       4: lreturn

  public long getNumRangeDeletions();
    Code:
       0: aload_0
       1: getfield      #15                 // Field numRangeDeletions:J
       4: lreturn

  public long getFormatVersion();
    Code:
       0: aload_0
       1: getfield      #16                 // Field formatVersion:J
       4: lreturn

  public long getFixedKeyLen();
    Code:
       0: aload_0
       1: getfield      #17                 // Field fixedKeyLen:J
       4: lreturn

  public long getColumnFamilyId();
    Code:
       0: aload_0
       1: getfield      #18                 // Field columnFamilyId:J
       4: lreturn

  public long getCreationTime();
    Code:
       0: aload_0
       1: getfield      #19                 // Field creationTime:J
       4: lreturn

  public long getOldestKeyTime();
    Code:
       0: aload_0
       1: getfield      #20                 // Field oldestKeyTime:J
       4: lreturn

  public byte[] getColumnFamilyName();
    Code:
       0: aload_0
       1: getfield      #21                 // Field columnFamilyName:[B
       4: areturn

  public java.lang.String getFilterPolicyName();
    Code:
       0: aload_0
       1: getfield      #22                 // Field filterPolicyName:Ljava/lang/String;
       4: areturn

  public java.lang.String getComparatorName();
    Code:
       0: aload_0
       1: getfield      #23                 // Field comparatorName:Ljava/lang/String;
       4: areturn

  public java.lang.String getMergeOperatorName();
    Code:
       0: aload_0
       1: getfield      #24                 // Field mergeOperatorName:Ljava/lang/String;
       4: areturn

  public java.lang.String getPrefixExtractorName();
    Code:
       0: aload_0
       1: getfield      #25                 // Field prefixExtractorName:Ljava/lang/String;
       4: areturn

  public java.lang.String getPropertyCollectorsNames();
    Code:
       0: aload_0
       1: getfield      #26                 // Field propertyCollectorsNames:Ljava/lang/String;
       4: areturn

  public java.lang.String getCompressionName();
    Code:
       0: aload_0
       1: getfield      #27                 // Field compressionName:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getUserCollectedProperties();
    Code:
       0: aload_0
       1: getfield      #28                 // Field userCollectedProperties:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getReadableProperties();
    Code:
       0: aload_0
       1: getfield      #29                 // Field readableProperties:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Long> getPropertiesOffsets();
    Code:
       0: aload_0
       1: getfield      #30                 // Field propertiesOffsets:Ljava/util/Map;
       4: areturn
}
