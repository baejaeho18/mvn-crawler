Compiled from "MutableDBOptions.java"
public class org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder extends org.rocksdb.AbstractMutableOptions$AbstractMutableOptionsBuilder<org.rocksdb.MutableDBOptions, org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder, org.rocksdb.MutableDBOptions$MutableDBOptionKey> implements org.rocksdb.MutableDBOptionsInterface<org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder> {
  private static final java.util.Map<java.lang.String, org.rocksdb.MutableDBOptions$MutableDBOptionKey> ALL_KEYS_LOOKUP;

  private org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder."<init>":()V
       4: return

  protected org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder self();
    Code:
       0: aload_0
       1: areturn

  protected java.util.Map<java.lang.String, org.rocksdb.MutableDBOptions$MutableDBOptionKey> allKeys();
    Code:
       0: getstatic     #3                  // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
       3: areturn

  protected org.rocksdb.MutableDBOptions build(java.lang.String[], java.lang.String[]);
    Code:
       0: new           #4                  // class org/rocksdb/MutableDBOptions
       3: dup
       4: aload_1
       5: aload_2
       6: aconst_null
       7: invokespecial #5                  // Method org/rocksdb/MutableDBOptions."<init>":([Ljava/lang/String;[Ljava/lang/String;Lorg/rocksdb/MutableDBOptions$1;)V
      10: areturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setMaxBackgroundJobs(int);
    Code:
       0: aload_0
       1: getstatic     #6                  // Field org/rocksdb/MutableDBOptions$DBOption.max_background_jobs:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: iload_1
       5: invokevirtual #7                  // Method setInt:(Lorg/rocksdb/MutableOptionKey;I)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public int maxBackgroundJobs();
    Code:
       0: aload_0
       1: getstatic     #6                  // Field org/rocksdb/MutableDBOptions$DBOption.max_background_jobs:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #9                  // Method getInt:(Lorg/rocksdb/MutableOptionKey;)I
       7: ireturn

  public void setBaseBackgroundCompactions(int);
    Code:
       0: aload_0
       1: getstatic     #10                 // Field org/rocksdb/MutableDBOptions$DBOption.base_background_compactions:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: iload_1
       5: invokevirtual #7                  // Method setInt:(Lorg/rocksdb/MutableOptionKey;I)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: pop
       9: return

  public int baseBackgroundCompactions();
    Code:
       0: aload_0
       1: getstatic     #10                 // Field org/rocksdb/MutableDBOptions$DBOption.base_background_compactions:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #9                  // Method getInt:(Lorg/rocksdb/MutableOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setMaxBackgroundCompactions(int);
    Code:
       0: aload_0
       1: getstatic     #11                 // Field org/rocksdb/MutableDBOptions$DBOption.max_background_compactions:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: iload_1
       5: invokevirtual #7                  // Method setInt:(Lorg/rocksdb/MutableOptionKey;I)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public int maxBackgroundCompactions();
    Code:
       0: aload_0
       1: getstatic     #11                 // Field org/rocksdb/MutableDBOptions$DBOption.max_background_compactions:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #9                  // Method getInt:(Lorg/rocksdb/MutableOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setAvoidFlushDuringShutdown(boolean);
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/rocksdb/MutableDBOptions$DBOption.avoid_flush_during_shutdown:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: iload_1
       5: invokevirtual #13                 // Method setBoolean:(Lorg/rocksdb/MutableOptionKey;Z)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public boolean avoidFlushDuringShutdown();
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/rocksdb/MutableDBOptions$DBOption.avoid_flush_during_shutdown:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #14                 // Method getBoolean:(Lorg/rocksdb/MutableOptionKey;)Z
       7: ireturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setWritableFileMaxBufferSize(long);
    Code:
       0: aload_0
       1: getstatic     #15                 // Field org/rocksdb/MutableDBOptions$DBOption.writable_file_max_buffer_size:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: lload_1
       5: invokevirtual #16                 // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public long writableFileMaxBufferSize();
    Code:
       0: aload_0
       1: getstatic     #15                 // Field org/rocksdb/MutableDBOptions$DBOption.writable_file_max_buffer_size:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #17                 // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setDelayedWriteRate(long);
    Code:
       0: aload_0
       1: getstatic     #18                 // Field org/rocksdb/MutableDBOptions$DBOption.delayed_write_rate:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: lload_1
       5: invokevirtual #16                 // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public long delayedWriteRate();
    Code:
       0: aload_0
       1: getstatic     #18                 // Field org/rocksdb/MutableDBOptions$DBOption.delayed_write_rate:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #17                 // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setMaxTotalWalSize(long);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field org/rocksdb/MutableDBOptions$DBOption.max_total_wal_size:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: lload_1
       5: invokevirtual #16                 // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public long maxTotalWalSize();
    Code:
       0: aload_0
       1: getstatic     #19                 // Field org/rocksdb/MutableDBOptions$DBOption.max_total_wal_size:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #17                 // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setDeleteObsoleteFilesPeriodMicros(long);
    Code:
       0: aload_0
       1: getstatic     #20                 // Field org/rocksdb/MutableDBOptions$DBOption.delete_obsolete_files_period_micros:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: lload_1
       5: invokevirtual #16                 // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public long deleteObsoleteFilesPeriodMicros();
    Code:
       0: aload_0
       1: getstatic     #20                 // Field org/rocksdb/MutableDBOptions$DBOption.delete_obsolete_files_period_micros:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #17                 // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setStatsDumpPeriodSec(int);
    Code:
       0: aload_0
       1: getstatic     #21                 // Field org/rocksdb/MutableDBOptions$DBOption.stats_dump_period_sec:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: iload_1
       5: invokevirtual #7                  // Method setInt:(Lorg/rocksdb/MutableOptionKey;I)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public int statsDumpPeriodSec();
    Code:
       0: aload_0
       1: getstatic     #21                 // Field org/rocksdb/MutableDBOptions$DBOption.stats_dump_period_sec:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #9                  // Method getInt:(Lorg/rocksdb/MutableOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setStatsPersistPeriodSec(int);
    Code:
       0: aload_0
       1: getstatic     #22                 // Field org/rocksdb/MutableDBOptions$DBOption.stats_persist_period_sec:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: iload_1
       5: invokevirtual #7                  // Method setInt:(Lorg/rocksdb/MutableOptionKey;I)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public int statsPersistPeriodSec();
    Code:
       0: aload_0
       1: getstatic     #22                 // Field org/rocksdb/MutableDBOptions$DBOption.stats_persist_period_sec:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #9                  // Method getInt:(Lorg/rocksdb/MutableOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setStatsHistoryBufferSize(long);
    Code:
       0: aload_0
       1: getstatic     #23                 // Field org/rocksdb/MutableDBOptions$DBOption.stats_history_buffer_size:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: lload_1
       5: invokevirtual #16                 // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public long statsHistoryBufferSize();
    Code:
       0: aload_0
       1: getstatic     #23                 // Field org/rocksdb/MutableDBOptions$DBOption.stats_history_buffer_size:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #17                 // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setMaxOpenFiles(int);
    Code:
       0: aload_0
       1: getstatic     #24                 // Field org/rocksdb/MutableDBOptions$DBOption.max_open_files:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: iload_1
       5: invokevirtual #7                  // Method setInt:(Lorg/rocksdb/MutableOptionKey;I)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public int maxOpenFiles();
    Code:
       0: aload_0
       1: getstatic     #24                 // Field org/rocksdb/MutableDBOptions$DBOption.max_open_files:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #9                  // Method getInt:(Lorg/rocksdb/MutableOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setBytesPerSync(long);
    Code:
       0: aload_0
       1: getstatic     #25                 // Field org/rocksdb/MutableDBOptions$DBOption.bytes_per_sync:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: lload_1
       5: invokevirtual #16                 // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public long bytesPerSync();
    Code:
       0: aload_0
       1: getstatic     #25                 // Field org/rocksdb/MutableDBOptions$DBOption.bytes_per_sync:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #17                 // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setWalBytesPerSync(long);
    Code:
       0: aload_0
       1: getstatic     #26                 // Field org/rocksdb/MutableDBOptions$DBOption.wal_bytes_per_sync:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: lload_1
       5: invokevirtual #16                 // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public long walBytesPerSync();
    Code:
       0: aload_0
       1: getstatic     #26                 // Field org/rocksdb/MutableDBOptions$DBOption.wal_bytes_per_sync:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #17                 // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setStrictBytesPerSync(boolean);
    Code:
       0: aload_0
       1: getstatic     #27                 // Field org/rocksdb/MutableDBOptions$DBOption.strict_bytes_per_sync:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: iload_1
       5: invokevirtual #13                 // Method setBoolean:(Lorg/rocksdb/MutableOptionKey;Z)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public boolean strictBytesPerSync();
    Code:
       0: aload_0
       1: getstatic     #27                 // Field org/rocksdb/MutableDBOptions$DBOption.strict_bytes_per_sync:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #14                 // Method getBoolean:(Lorg/rocksdb/MutableOptionKey;)Z
       7: ireturn

  public org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder setCompactionReadaheadSize(long);
    Code:
       0: aload_0
       1: getstatic     #28                 // Field org/rocksdb/MutableDBOptions$DBOption.compaction_readahead_size:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: lload_1
       5: invokevirtual #16                 // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableDBOptions$MutableDBOptionsBuilder
      11: areturn

  public long compactionReadaheadSize();
    Code:
       0: aload_0
       1: getstatic     #28                 // Field org/rocksdb/MutableDBOptions$DBOption.compaction_readahead_size:Lorg/rocksdb/MutableDBOptions$DBOption;
       4: invokevirtual #17                 // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  protected org.rocksdb.AbstractMutableOptions build(java.lang.String[], java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #29                 // Method build:([Ljava/lang/String;[Ljava/lang/String;)Lorg/rocksdb/MutableDBOptions;
       6: areturn

  protected org.rocksdb.AbstractMutableOptions$AbstractMutableOptionsBuilder self();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method self:()Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       4: areturn

  public org.rocksdb.MutableDBOptionsInterface setCompactionReadaheadSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #31                 // Method setCompactionReadaheadSize:(J)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setStrictBytesPerSync(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #32                 // Method setStrictBytesPerSync:(Z)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setWalBytesPerSync(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #33                 // Method setWalBytesPerSync:(J)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setBytesPerSync(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #34                 // Method setBytesPerSync:(J)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setMaxOpenFiles(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #35                 // Method setMaxOpenFiles:(I)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setStatsHistoryBufferSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #36                 // Method setStatsHistoryBufferSize:(J)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setStatsPersistPeriodSec(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #37                 // Method setStatsPersistPeriodSec:(I)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setStatsDumpPeriodSec(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #38                 // Method setStatsDumpPeriodSec:(I)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setDeleteObsoleteFilesPeriodMicros(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #39                 // Method setDeleteObsoleteFilesPeriodMicros:(J)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setMaxTotalWalSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #40                 // Method setMaxTotalWalSize:(J)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setDelayedWriteRate(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #41                 // Method setDelayedWriteRate:(J)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setWritableFileMaxBufferSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #42                 // Method setWritableFileMaxBufferSize:(J)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setAvoidFlushDuringShutdown(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #43                 // Method setAvoidFlushDuringShutdown:(Z)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setMaxBackgroundCompactions(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #44                 // Method setMaxBackgroundCompactions:(I)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableDBOptionsInterface setMaxBackgroundJobs(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #45                 // Method setMaxBackgroundJobs:(I)Lorg/rocksdb/MutableDBOptions$MutableDBOptionsBuilder;
       5: areturn

  org.rocksdb.MutableDBOptions$MutableDBOptionsBuilder(org.rocksdb.MutableDBOptions$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return

  static {};
    Code:
       0: new           #46                 // class java/util/HashMap
       3: dup
       4: invokespecial #47                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #3                  // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
      10: invokestatic  #48                 // Method org/rocksdb/MutableDBOptions$DBOption.values:()[Lorg/rocksdb/MutableDBOptions$DBOption;
      13: astore_0
      14: aload_0
      15: arraylength
      16: istore_1
      17: iconst_0
      18: istore_2
      19: iload_2
      20: iload_1
      21: if_icmpge     50
      24: aload_0
      25: iload_2
      26: aaload
      27: astore_3
      28: getstatic     #3                  // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
      31: aload_3
      32: invokeinterface #49,  1           // InterfaceMethod org/rocksdb/MutableDBOptions$MutableDBOptionKey.name:()Ljava/lang/String;
      37: aload_3
      38: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: iinc          2, 1
      47: goto          19
      50: return
}
