Compiled from "SstFileWriter.java"
public class org.rocksdb.SstFileWriter extends org.rocksdb.RocksObject {
  static final boolean $assertionsDisabled;

  public org.rocksdb.SstFileWriter(org.rocksdb.EnvOptions, org.rocksdb.Options, org.rocksdb.AbstractComparator);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #1                  // Field org/rocksdb/EnvOptions.nativeHandle_:J
       5: aload_2
       6: getfield      #2                  // Field org/rocksdb/Options.nativeHandle_:J
       9: aload_3
      10: getfield      #3                  // Field org/rocksdb/AbstractComparator.nativeHandle_:J
      13: aload_3
      14: invokevirtual #4                  // Method org/rocksdb/AbstractComparator.getComparatorType:()Lorg/rocksdb/ComparatorType;
      17: invokevirtual #5                  // Method org/rocksdb/ComparatorType.getValue:()B
      20: invokestatic  #6                  // Method newSstFileWriter:(JJJB)J
      23: invokespecial #7                  // Method org/rocksdb/RocksObject."<init>":(J)V
      26: return

  public org.rocksdb.SstFileWriter(org.rocksdb.EnvOptions, org.rocksdb.Options);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #1                  // Field org/rocksdb/EnvOptions.nativeHandle_:J
       5: aload_2
       6: getfield      #2                  // Field org/rocksdb/Options.nativeHandle_:J
       9: invokestatic  #8                  // Method newSstFileWriter:(JJ)J
      12: invokespecial #7                  // Method org/rocksdb/RocksObject."<init>":(J)V
      15: return

  public void open(java.lang.String) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: aload_1
       6: invokespecial #10                 // Method open:(JLjava/lang/String;)V
       9: return

  public void add(org.rocksdb.Slice, org.rocksdb.Slice) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #11                 // Method org/rocksdb/Slice.getNativeHandle:()J
       9: aload_2
      10: invokevirtual #11                 // Method org/rocksdb/Slice.getNativeHandle:()J
      13: invokespecial #12                 // Method put:(JJJ)V
      16: return

  public void add(org.rocksdb.DirectSlice, org.rocksdb.DirectSlice) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #13                 // Method org/rocksdb/DirectSlice.getNativeHandle:()J
       9: aload_2
      10: invokevirtual #13                 // Method org/rocksdb/DirectSlice.getNativeHandle:()J
      13: invokespecial #12                 // Method put:(JJJ)V
      16: return

  public void put(org.rocksdb.Slice, org.rocksdb.Slice) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #11                 // Method org/rocksdb/Slice.getNativeHandle:()J
       9: aload_2
      10: invokevirtual #11                 // Method org/rocksdb/Slice.getNativeHandle:()J
      13: invokespecial #12                 // Method put:(JJJ)V
      16: return

  public void put(org.rocksdb.DirectSlice, org.rocksdb.DirectSlice) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #13                 // Method org/rocksdb/DirectSlice.getNativeHandle:()J
       9: aload_2
      10: invokevirtual #13                 // Method org/rocksdb/DirectSlice.getNativeHandle:()J
      13: invokespecial #12                 // Method put:(JJJ)V
      16: return

  public void put(java.nio.ByteBuffer, java.nio.ByteBuffer) throws org.rocksdb.RocksDBException;
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_1
       7: invokevirtual #15                 // Method java/nio/ByteBuffer.isDirect:()Z
      10: ifeq          20
      13: aload_2
      14: invokevirtual #15                 // Method java/nio/ByteBuffer.isDirect:()Z
      17: ifne          28
      20: new           #16                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_0
      29: aload_0
      30: getfield      #9                  // Field nativeHandle_:J
      33: aload_1
      34: aload_1
      35: invokevirtual #18                 // Method java/nio/ByteBuffer.position:()I
      38: aload_1
      39: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
      42: aload_2
      43: aload_2
      44: invokevirtual #18                 // Method java/nio/ByteBuffer.position:()I
      47: aload_2
      48: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
      51: invokespecial #20                 // Method putDirect:(JLjava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)V
      54: aload_1
      55: aload_1
      56: invokevirtual #21                 // Method java/nio/ByteBuffer.limit:()I
      59: invokevirtual #22                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      62: pop
      63: aload_2
      64: aload_2
      65: invokevirtual #21                 // Method java/nio/ByteBuffer.limit:()I
      68: invokevirtual #22                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      71: pop
      72: return

  public void put(byte[], byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: aload_1
       6: aload_2
       7: invokespecial #23                 // Method put:(J[B[B)V
      10: return

  public void merge(org.rocksdb.Slice, org.rocksdb.Slice) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #11                 // Method org/rocksdb/Slice.getNativeHandle:()J
       9: aload_2
      10: invokevirtual #11                 // Method org/rocksdb/Slice.getNativeHandle:()J
      13: invokespecial #24                 // Method merge:(JJJ)V
      16: return

  public void merge(byte[], byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: aload_1
       6: aload_2
       7: invokespecial #25                 // Method merge:(J[B[B)V
      10: return

  public void merge(org.rocksdb.DirectSlice, org.rocksdb.DirectSlice) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #13                 // Method org/rocksdb/DirectSlice.getNativeHandle:()J
       9: aload_2
      10: invokevirtual #13                 // Method org/rocksdb/DirectSlice.getNativeHandle:()J
      13: invokespecial #24                 // Method merge:(JJJ)V
      16: return

  public void delete(org.rocksdb.Slice) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #11                 // Method org/rocksdb/Slice.getNativeHandle:()J
       9: invokespecial #26                 // Method delete:(JJ)V
      12: return

  public void delete(org.rocksdb.DirectSlice) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #13                 // Method org/rocksdb/DirectSlice.getNativeHandle:()J
       9: invokespecial #26                 // Method delete:(JJ)V
      12: return

  public void delete(byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: aload_1
       6: invokespecial #27                 // Method delete:(J[B)V
       9: return

  public void finish() throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: invokespecial #28                 // Method finish:(J)V
       8: return

  public long fileSize() throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field nativeHandle_:J
       5: invokespecial #29                 // Method fileSize:(J)J
       8: lreturn

  private static native long newSstFileWriter(long, long, long, byte);

  private static native long newSstFileWriter(long, long);

  private native void open(long, java.lang.String) throws org.rocksdb.RocksDBException;

  private native void put(long, long, long) throws org.rocksdb.RocksDBException;

  private native void put(long, byte[], byte[]) throws org.rocksdb.RocksDBException;

  private native void putDirect(long, java.nio.ByteBuffer, int, int, java.nio.ByteBuffer, int, int) throws org.rocksdb.RocksDBException;

  private native long fileSize(long) throws org.rocksdb.RocksDBException;

  private native void merge(long, long, long) throws org.rocksdb.RocksDBException;

  private native void merge(long, byte[], byte[]) throws org.rocksdb.RocksDBException;

  private native void delete(long, long) throws org.rocksdb.RocksDBException;

  private native void delete(long, byte[]) throws org.rocksdb.RocksDBException;

  private native void finish(long) throws org.rocksdb.RocksDBException;

  protected final native void disposeInternal(long);

  static {};
    Code:
       0: ldc_w         #30                 // class org/rocksdb/SstFileWriter
       3: invokevirtual #31                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #14                 // Field $assertionsDisabled:Z
      17: invokestatic  #32                 // Method org/rocksdb/RocksDB.loadLibrary:()V
      20: return
}
