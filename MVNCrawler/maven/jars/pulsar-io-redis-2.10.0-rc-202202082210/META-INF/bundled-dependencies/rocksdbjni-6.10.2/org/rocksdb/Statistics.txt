Compiled from "Statistics.java"
public class org.rocksdb.Statistics extends org.rocksdb.RocksObject {
  static final boolean $assertionsDisabled;

  public org.rocksdb.Statistics();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method newStatistics:()J
       4: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
       7: return

  public org.rocksdb.Statistics(org.rocksdb.Statistics);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #3                  // Field nativeHandle_:J
       5: invokestatic  #4                  // Method newStatistics:(J)J
       8: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
      11: return

  public org.rocksdb.Statistics(java.util.EnumSet<org.rocksdb.HistogramType>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method toArrayValues:(Ljava/util/EnumSet;)[B
       5: invokestatic  #6                  // Method newStatistics:([B)J
       8: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
      11: return

  public org.rocksdb.Statistics(java.util.EnumSet<org.rocksdb.HistogramType>, org.rocksdb.Statistics);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method toArrayValues:(Ljava/util/EnumSet;)[B
       5: aload_2
       6: getfield      #3                  // Field nativeHandle_:J
       9: invokestatic  #7                  // Method newStatistics:([BJ)J
      12: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
      15: return

  org.rocksdb.Statistics(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
       5: return

  private static byte[] toArrayValues(java.util.EnumSet<org.rocksdb.HistogramType>);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method java/util/EnumSet.size:()I
       4: newarray       byte
       6: astore_1
       7: iconst_0
       8: istore_2
       9: aload_0
      10: invokevirtual #9                  // Method java/util/EnumSet.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          48
      23: aload_3
      24: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #12                 // class org/rocksdb/HistogramType
      32: astore        4
      34: aload_1
      35: iload_2
      36: iinc          2, 1
      39: aload         4
      41: invokevirtual #13                 // Method org/rocksdb/HistogramType.getValue:()B
      44: bastore
      45: goto          14
      48: aload_1
      49: areturn

  public org.rocksdb.StatsLevel statsLevel();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: invokespecial #14                 // Method statsLevel:(J)B
       8: invokestatic  #15                 // Method org/rocksdb/StatsLevel.getStatsLevel:(B)Lorg/rocksdb/StatsLevel;
      11: areturn

  public void setStatsLevel(org.rocksdb.StatsLevel);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #16                 // Method org/rocksdb/StatsLevel.getValue:()B
       9: invokespecial #17                 // Method setStatsLevel:(JB)V
      12: return

  public long getTickerCount(org.rocksdb.TickerType);
    Code:
       0: getstatic     #18                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #19                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #20                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #21                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: aload_1
      27: invokevirtual #22                 // Method org/rocksdb/TickerType.getValue:()B
      30: invokespecial #23                 // Method getTickerCount:(JB)J
      33: lreturn

  public long getAndResetTickerCount(org.rocksdb.TickerType);
    Code:
       0: getstatic     #18                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #19                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #20                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #21                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: aload_1
      27: invokevirtual #22                 // Method org/rocksdb/TickerType.getValue:()B
      30: invokespecial #24                 // Method getAndResetTickerCount:(JB)J
      33: lreturn

  public org.rocksdb.HistogramData getHistogramData(org.rocksdb.HistogramType);
    Code:
       0: getstatic     #18                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #19                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #20                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #21                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: aload_1
      27: invokevirtual #13                 // Method org/rocksdb/HistogramType.getValue:()B
      30: invokespecial #25                 // Method getHistogramData:(JB)Lorg/rocksdb/HistogramData;
      33: areturn

  public java.lang.String getHistogramString(org.rocksdb.HistogramType);
    Code:
       0: getstatic     #18                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #19                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #20                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #21                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: aload_1
      27: invokevirtual #13                 // Method org/rocksdb/HistogramType.getValue:()B
      30: invokespecial #26                 // Method getHistogramString:(JB)Ljava/lang/String;
      33: areturn

  public void reset() throws org.rocksdb.RocksDBException;
    Code:
       0: getstatic     #18                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #19                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #20                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #21                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #27                 // Method reset:(J)V
      29: return

  public java.lang.String toString();
    Code:
       0: getstatic     #18                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #19                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #20                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #21                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #28                 // Method toString:(J)Ljava/lang/String;
      29: areturn

  private static native long newStatistics();

  private static native long newStatistics(long);

  private static native long newStatistics(byte[]);

  private static native long newStatistics(byte[], long);

  protected final native void disposeInternal(long);

  private native byte statsLevel(long);

  private native void setStatsLevel(long, byte);

  private native long getTickerCount(long, byte);

  private native long getAndResetTickerCount(long, byte);

  private native org.rocksdb.HistogramData getHistogramData(long, byte);

  private native java.lang.String getHistogramString(long, byte);

  private native void reset(long) throws org.rocksdb.RocksDBException;

  private native java.lang.String toString(long);

  static {};
    Code:
       0: ldc_w         #29                 // class org/rocksdb/Statistics
       3: invokevirtual #30                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #18                 // Field $assertionsDisabled:Z
      17: return
}
