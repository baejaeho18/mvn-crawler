Compiled from "FlushOptions.java"
public class org.rocksdb.FlushOptions extends org.rocksdb.RocksObject {
  static final boolean $assertionsDisabled;

  public org.rocksdb.FlushOptions();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method newFlushOptions:()J
       4: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
       7: return

  public org.rocksdb.FlushOptions setWaitForFlush(boolean);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #8                  // Method setWaitForFlush:(JZ)V
      30: aload_0
      31: areturn

  public boolean waitForFlush();
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokespecial #9                  // Method waitForFlush:(J)Z
      29: ireturn

  public org.rocksdb.FlushOptions setAllowWriteStall(boolean);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #10                 // Method setAllowWriteStall:(JZ)V
      30: aload_0
      31: areturn

  public boolean allowWriteStall();
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokespecial #11                 // Method allowWriteStall:(J)Z
      29: ireturn

  private static native long newFlushOptions();

  protected final native void disposeInternal(long);

  private native void setWaitForFlush(long, boolean);

  private native boolean waitForFlush(long);

  private native void setAllowWriteStall(long, boolean);

  private native boolean allowWriteStall(long);

  static {};
    Code:
       0: ldc_w         #12                 // class org/rocksdb/FlushOptions
       3: invokevirtual #13                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #3                  // Field $assertionsDisabled:Z
      17: invokestatic  #14                 // Method org/rocksdb/RocksDB.loadLibrary:()V
      20: return
}
