Compiled from "DBOptionsInterface.java"
public interface org.rocksdb.DBOptionsInterface<T extends org.rocksdb.DBOptionsInterface<T>> {
  public abstract T optimizeForSmallDb();

  public abstract T setEnv(org.rocksdb.Env);

  public abstract org.rocksdb.Env getEnv();

  public abstract T setIncreaseParallelism(int);

  public abstract T setCreateIfMissing(boolean);

  public abstract boolean createIfMissing();

  public abstract T setCreateMissingColumnFamilies(boolean);

  public abstract boolean createMissingColumnFamilies();

  public abstract T setErrorIfExists(boolean);

  public abstract boolean errorIfExists();

  public abstract T setParanoidChecks(boolean);

  public abstract boolean paranoidChecks();

  public abstract T setRateLimiter(org.rocksdb.RateLimiter);

  public abstract T setSstFileManager(org.rocksdb.SstFileManager);

  public abstract T setLogger(org.rocksdb.Logger);

  public abstract T setInfoLogLevel(org.rocksdb.InfoLogLevel);

  public abstract org.rocksdb.InfoLogLevel infoLogLevel();

  public abstract T setMaxFileOpeningThreads(int);

  public abstract int maxFileOpeningThreads();

  public abstract T setStatistics(org.rocksdb.Statistics);

  public abstract org.rocksdb.Statistics statistics();

  public abstract T setUseFsync(boolean);

  public abstract boolean useFsync();

  public abstract T setDbPaths(java.util.Collection<org.rocksdb.DbPath>);

  public abstract java.util.List<org.rocksdb.DbPath> dbPaths();

  public abstract T setDbLogDir(java.lang.String);

  public abstract java.lang.String dbLogDir();

  public abstract T setWalDir(java.lang.String);

  public abstract java.lang.String walDir();

  public abstract T setDeleteObsoleteFilesPeriodMicros(long);

  public abstract long deleteObsoleteFilesPeriodMicros();

  public abstract T setMaxSubcompactions(int);

  public abstract int maxSubcompactions();

  public abstract T setMaxBackgroundFlushes(int);

  public abstract int maxBackgroundFlushes();

  public abstract T setMaxLogFileSize(long);

  public abstract long maxLogFileSize();

  public abstract T setLogFileTimeToRoll(long);

  public abstract long logFileTimeToRoll();

  public abstract T setKeepLogFileNum(long);

  public abstract long keepLogFileNum();

  public abstract T setRecycleLogFileNum(long);

  public abstract long recycleLogFileNum();

  public abstract T setMaxManifestFileSize(long);

  public abstract long maxManifestFileSize();

  public abstract T setTableCacheNumshardbits(int);

  public abstract int tableCacheNumshardbits();

  public abstract T setWalTtlSeconds(long);

  public abstract long walTtlSeconds();

  public abstract T setWalSizeLimitMB(long);

  public abstract long walSizeLimitMB();

  public abstract T setManifestPreallocationSize(long);

  public abstract long manifestPreallocationSize();

  public abstract T setUseDirectReads(boolean);

  public abstract boolean useDirectReads();

  public abstract T setUseDirectIoForFlushAndCompaction(boolean);

  public abstract boolean useDirectIoForFlushAndCompaction();

  public abstract T setAllowFAllocate(boolean);

  public abstract boolean allowFAllocate();

  public abstract T setAllowMmapReads(boolean);

  public abstract boolean allowMmapReads();

  public abstract T setAllowMmapWrites(boolean);

  public abstract boolean allowMmapWrites();

  public abstract T setIsFdCloseOnExec(boolean);

  public abstract boolean isFdCloseOnExec();

  public abstract T setAdviseRandomOnOpen(boolean);

  public abstract boolean adviseRandomOnOpen();

  public abstract T setDbWriteBufferSize(long);

  public abstract T setWriteBufferManager(org.rocksdb.WriteBufferManager);

  public abstract org.rocksdb.WriteBufferManager writeBufferManager();

  public abstract long dbWriteBufferSize();

  public abstract T setAccessHintOnCompactionStart(org.rocksdb.AccessHint);

  public abstract org.rocksdb.AccessHint accessHintOnCompactionStart();

  public abstract T setNewTableReaderForCompactionInputs(boolean);

  public abstract boolean newTableReaderForCompactionInputs();

  public abstract T setRandomAccessMaxBufferSize(long);

  public abstract long randomAccessMaxBufferSize();

  public abstract T setUseAdaptiveMutex(boolean);

  public abstract boolean useAdaptiveMutex();

  public abstract T setEnableThreadTracking(boolean);

  public abstract boolean enableThreadTracking();

  public abstract T setEnablePipelinedWrite(boolean);

  public abstract boolean enablePipelinedWrite();

  public abstract T setUnorderedWrite(boolean);

  public abstract boolean unorderedWrite();

  public abstract T setAllowConcurrentMemtableWrite(boolean);

  public abstract boolean allowConcurrentMemtableWrite();

  public abstract T setEnableWriteThreadAdaptiveYield(boolean);

  public abstract boolean enableWriteThreadAdaptiveYield();

  public abstract T setWriteThreadMaxYieldUsec(long);

  public abstract long writeThreadMaxYieldUsec();

  public abstract T setWriteThreadSlowYieldUsec(long);

  public abstract long writeThreadSlowYieldUsec();

  public abstract T setSkipStatsUpdateOnDbOpen(boolean);

  public abstract boolean skipStatsUpdateOnDbOpen();

  public abstract T setWalRecoveryMode(org.rocksdb.WALRecoveryMode);

  public abstract org.rocksdb.WALRecoveryMode walRecoveryMode();

  public abstract T setAllow2pc(boolean);

  public abstract boolean allow2pc();

  public abstract T setRowCache(org.rocksdb.Cache);

  public abstract org.rocksdb.Cache rowCache();

  public abstract T setWalFilter(org.rocksdb.AbstractWalFilter);

  public abstract org.rocksdb.WalFilter walFilter();

  public abstract T setFailIfOptionsFileError(boolean);

  public abstract boolean failIfOptionsFileError();

  public abstract T setDumpMallocStats(boolean);

  public abstract boolean dumpMallocStats();

  public abstract T setAvoidFlushDuringRecovery(boolean);

  public abstract boolean avoidFlushDuringRecovery();

  public abstract T setAllowIngestBehind(boolean);

  public abstract boolean allowIngestBehind();

  public abstract T setPreserveDeletes(boolean);

  public abstract boolean preserveDeletes();

  public abstract T setTwoWriteQueues(boolean);

  public abstract boolean twoWriteQueues();

  public abstract T setManualWalFlush(boolean);

  public abstract boolean manualWalFlush();

  public abstract T setAtomicFlush(boolean);

  public abstract boolean atomicFlush();
}
