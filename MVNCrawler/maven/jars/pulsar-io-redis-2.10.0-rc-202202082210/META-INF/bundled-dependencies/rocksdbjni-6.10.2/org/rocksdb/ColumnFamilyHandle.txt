Compiled from "ColumnFamilyHandle.java"
public class org.rocksdb.ColumnFamilyHandle extends org.rocksdb.RocksObject {
  private final org.rocksdb.RocksDB rocksDB_;

  static final boolean $assertionsDisabled;

  org.rocksdb.ColumnFamilyHandle(org.rocksdb.RocksDB, long);
    Code:
       0: aload_0
       1: lload_2
       2: invokespecial #1                  // Method org/rocksdb/RocksObject."<init>":(J)V
       5: getstatic     #2                  // Field $assertionsDisabled:Z
       8: ifne          23
      11: aload_1
      12: ifnonnull     23
      15: new           #3                  // class java/lang/AssertionError
      18: dup
      19: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #5                  // Field rocksDB_:Lorg/rocksdb/RocksDB;
      28: return

  public byte[] getName() throws org.rocksdb.RocksDBException;
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_0
       7: invokevirtual #6                  // Method isOwningHandle:()Z
      10: ifne          28
      13: aload_0
      14: invokevirtual #7                  // Method isDefaultColumnFamily:()Z
      17: ifne          28
      20: new           #3                  // class java/lang/AssertionError
      23: dup
      24: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_0
      29: aload_0
      30: getfield      #8                  // Field nativeHandle_:J
      33: invokespecial #9                  // Method getName:(J)[B
      36: areturn

  public int getID();
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_0
       7: invokevirtual #6                  // Method isOwningHandle:()Z
      10: ifne          28
      13: aload_0
      14: invokevirtual #7                  // Method isDefaultColumnFamily:()Z
      17: ifne          28
      20: new           #3                  // class java/lang/AssertionError
      23: dup
      24: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_0
      29: aload_0
      30: getfield      #8                  // Field nativeHandle_:J
      33: invokespecial #10                 // Method getID:(J)I
      36: ireturn

  public org.rocksdb.ColumnFamilyDescriptor getDescriptor() throws org.rocksdb.RocksDBException;
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_0
       7: invokevirtual #6                  // Method isOwningHandle:()Z
      10: ifne          28
      13: aload_0
      14: invokevirtual #7                  // Method isDefaultColumnFamily:()Z
      17: ifne          28
      20: new           #3                  // class java/lang/AssertionError
      23: dup
      24: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_0
      29: aload_0
      30: getfield      #8                  // Field nativeHandle_:J
      33: invokespecial #11                 // Method getDescriptor:(J)Lorg/rocksdb/ColumnFamilyDescriptor;
      36: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #13                 // class org/rocksdb/ColumnFamilyHandle
      28: astore_2
      29: aload_0
      30: getfield      #5                  // Field rocksDB_:Lorg/rocksdb/RocksDB;
      33: getfield      #14                 // Field org/rocksdb/RocksDB.nativeHandle_:J
      36: aload_2
      37: getfield      #5                  // Field rocksDB_:Lorg/rocksdb/RocksDB;
      40: getfield      #14                 // Field org/rocksdb/RocksDB.nativeHandle_:J
      43: lcmp
      44: ifne          76
      47: aload_0
      48: invokevirtual #15                 // Method getID:()I
      51: aload_2
      52: invokevirtual #15                 // Method getID:()I
      55: if_icmpne     76
      58: aload_0
      59: invokevirtual #16                 // Method getName:()[B
      62: aload_2
      63: invokevirtual #16                 // Method getName:()[B
      66: invokestatic  #17                 // Method java/util/Arrays.equals:([B[B)Z
      69: ifeq          76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: ireturn
      78: astore_3
      79: new           #19                 // class java/lang/RuntimeException
      82: dup
      83: ldc           #20                 // String Cannot compare column family handles
      85: aload_3
      86: invokespecial #21                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      89: athrow
    Exception table:
       from    to  target type
          29    77    78   Class org/rocksdb/RocksDBException

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #22                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: invokevirtual #16                 // Method getName:()[B
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: invokevirtual #15                 // Method getID:()I
      17: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: getfield      #5                  // Field rocksDB_:Lorg/rocksdb/RocksDB;
      27: getfield      #14                 // Field org/rocksdb/RocksDB.nativeHandle_:J
      30: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      33: aastore
      34: invokestatic  #25                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      37: ireturn
      38: astore_1
      39: new           #19                 // class java/lang/RuntimeException
      42: dup
      43: ldc           #26                 // String Cannot calculate hash code of column family handle
      45: aload_1
      46: invokespecial #21                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      49: athrow
    Exception table:
       from    to  target type
           0    37    38   Class org/rocksdb/RocksDBException

  protected boolean isDefaultColumnFamily();
    Code:
       0: aload_0
       1: getfield      #8                  // Field nativeHandle_:J
       4: aload_0
       5: getfield      #5                  // Field rocksDB_:Lorg/rocksdb/RocksDB;
       8: invokevirtual #27                 // Method org/rocksdb/RocksDB.getDefaultColumnFamily:()Lorg/rocksdb/ColumnFamilyHandle;
      11: getfield      #8                  // Field nativeHandle_:J
      14: lcmp
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  protected void disposeInternal();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rocksDB_:Lorg/rocksdb/RocksDB;
       4: invokevirtual #28                 // Method org/rocksdb/RocksDB.isOwningHandle:()Z
       7: ifeq          18
      10: aload_0
      11: aload_0
      12: getfield      #8                  // Field nativeHandle_:J
      15: invokevirtual #29                 // Method disposeInternal:(J)V
      18: return

  private native byte[] getName(long) throws org.rocksdb.RocksDBException;

  private native int getID(long);

  private native org.rocksdb.ColumnFamilyDescriptor getDescriptor(long) throws org.rocksdb.RocksDBException;

  protected final native void disposeInternal(long);

  static {};
    Code:
       0: ldc_w         #13                 // class org/rocksdb/ColumnFamilyHandle
       3: invokevirtual #30                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #2                  // Field $assertionsDisabled:Z
      17: return
}
