Compiled from "MutableColumnFamilyOptions.java"
public class org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder extends org.rocksdb.AbstractMutableOptions$AbstractMutableOptionsBuilder<org.rocksdb.MutableColumnFamilyOptions, org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder, org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey> implements org.rocksdb.MutableColumnFamilyOptionsInterface<org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder> {
  private static final java.util.Map<java.lang.String, org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey> ALL_KEYS_LOOKUP;

  private org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder."<init>":()V
       4: return

  protected org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder self();
    Code:
       0: aload_0
       1: areturn

  protected java.util.Map<java.lang.String, org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey> allKeys();
    Code:
       0: getstatic     #3                  // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
       3: areturn

  protected org.rocksdb.MutableColumnFamilyOptions build(java.lang.String[], java.lang.String[]);
    Code:
       0: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions
       3: dup
       4: aload_1
       5: aload_2
       6: aconst_null
       7: invokespecial #5                  // Method org/rocksdb/MutableColumnFamilyOptions."<init>":([Ljava/lang/String;[Ljava/lang/String;Lorg/rocksdb/MutableColumnFamilyOptions$1;)V
      10: areturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setWriteBufferSize(long);
    Code:
       0: aload_0
       1: getstatic     #6                  // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.write_buffer_size:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: lload_1
       5: invokevirtual #7                  // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public long writeBufferSize();
    Code:
       0: aload_0
       1: getstatic     #6                  // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.write_buffer_size:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokevirtual #9                  // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setArenaBlockSize(long);
    Code:
       0: aload_0
       1: getstatic     #10                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.arena_block_size:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: lload_1
       5: invokevirtual #7                  // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public long arenaBlockSize();
    Code:
       0: aload_0
       1: getstatic     #10                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.arena_block_size:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokevirtual #9                  // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMemtablePrefixBloomSizeRatio(double);
    Code:
       0: aload_0
       1: getstatic     #11                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.memtable_prefix_bloom_size_ratio:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: dload_1
       5: invokevirtual #12                 // Method setDouble:(Lorg/rocksdb/MutableOptionKey;D)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public double memtablePrefixBloomSizeRatio();
    Code:
       0: aload_0
       1: getstatic     #11                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.memtable_prefix_bloom_size_ratio:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokevirtual #13                 // Method getDouble:(Lorg/rocksdb/MutableOptionKey;)D
       7: dreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMemtableHugePageSize(long);
    Code:
       0: aload_0
       1: getstatic     #14                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.memtable_huge_page_size:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: lload_1
       5: invokevirtual #7                  // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public long memtableHugePageSize();
    Code:
       0: aload_0
       1: getstatic     #14                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.memtable_huge_page_size:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokevirtual #9                  // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxSuccessiveMerges(long);
    Code:
       0: aload_0
       1: getstatic     #15                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.max_successive_merges:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: lload_1
       5: invokevirtual #7                  // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public long maxSuccessiveMerges();
    Code:
       0: aload_0
       1: getstatic     #15                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.max_successive_merges:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokevirtual #9                  // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxWriteBufferNumber(int);
    Code:
       0: aload_0
       1: getstatic     #16                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.max_write_buffer_number:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: iload_1
       5: invokevirtual #17                 // Method setInt:(Lorg/rocksdb/MutableOptionKey;I)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public int maxWriteBufferNumber();
    Code:
       0: aload_0
       1: getstatic     #16                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.max_write_buffer_number:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokevirtual #18                 // Method getInt:(Lorg/rocksdb/MutableOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setInplaceUpdateNumLocks(long);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.inplace_update_num_locks:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: lload_1
       5: invokevirtual #7                  // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public long inplaceUpdateNumLocks();
    Code:
       0: aload_0
       1: getstatic     #19                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.inplace_update_num_locks:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokevirtual #9                  // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setDisableAutoCompactions(boolean);
    Code:
       0: aload_0
       1: getstatic     #20                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.disable_auto_compactions:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: iload_1
       5: invokevirtual #21                 // Method setBoolean:(Lorg/rocksdb/MutableOptionKey;Z)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public boolean disableAutoCompactions();
    Code:
       0: aload_0
       1: getstatic     #20                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.disable_auto_compactions:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #22                 // Method getBoolean:(Lorg/rocksdb/MutableOptionKey;)Z
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setSoftPendingCompactionBytesLimit(long);
    Code:
       0: aload_0
       1: getstatic     #23                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.soft_pending_compaction_bytes_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: lload_1
       5: invokevirtual #7                  // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public long softPendingCompactionBytesLimit();
    Code:
       0: aload_0
       1: getstatic     #23                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.soft_pending_compaction_bytes_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #9                  // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setHardPendingCompactionBytesLimit(long);
    Code:
       0: aload_0
       1: getstatic     #24                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.hard_pending_compaction_bytes_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: lload_1
       5: invokevirtual #7                  // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public long hardPendingCompactionBytesLimit();
    Code:
       0: aload_0
       1: getstatic     #24                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.hard_pending_compaction_bytes_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #9                  // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setLevel0FileNumCompactionTrigger(int);
    Code:
       0: aload_0
       1: getstatic     #25                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.level0_file_num_compaction_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: iload_1
       5: invokevirtual #17                 // Method setInt:(Lorg/rocksdb/MutableOptionKey;I)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public int level0FileNumCompactionTrigger();
    Code:
       0: aload_0
       1: getstatic     #25                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.level0_file_num_compaction_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #18                 // Method getInt:(Lorg/rocksdb/MutableOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setLevel0SlowdownWritesTrigger(int);
    Code:
       0: aload_0
       1: getstatic     #26                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.level0_slowdown_writes_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: iload_1
       5: invokevirtual #17                 // Method setInt:(Lorg/rocksdb/MutableOptionKey;I)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public int level0SlowdownWritesTrigger();
    Code:
       0: aload_0
       1: getstatic     #26                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.level0_slowdown_writes_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #18                 // Method getInt:(Lorg/rocksdb/MutableOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setLevel0StopWritesTrigger(int);
    Code:
       0: aload_0
       1: getstatic     #27                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.level0_stop_writes_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: iload_1
       5: invokevirtual #17                 // Method setInt:(Lorg/rocksdb/MutableOptionKey;I)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public int level0StopWritesTrigger();
    Code:
       0: aload_0
       1: getstatic     #27                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.level0_stop_writes_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #18                 // Method getInt:(Lorg/rocksdb/MutableOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxCompactionBytes(long);
    Code:
       0: aload_0
       1: getstatic     #28                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_compaction_bytes:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: lload_1
       5: invokevirtual #7                  // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public long maxCompactionBytes();
    Code:
       0: aload_0
       1: getstatic     #28                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_compaction_bytes:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #9                  // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setTargetFileSizeBase(long);
    Code:
       0: aload_0
       1: getstatic     #29                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.target_file_size_base:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: lload_1
       5: invokevirtual #7                  // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public long targetFileSizeBase();
    Code:
       0: aload_0
       1: getstatic     #29                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.target_file_size_base:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #9                  // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setTargetFileSizeMultiplier(int);
    Code:
       0: aload_0
       1: getstatic     #30                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.target_file_size_multiplier:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: iload_1
       5: invokevirtual #17                 // Method setInt:(Lorg/rocksdb/MutableOptionKey;I)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public int targetFileSizeMultiplier();
    Code:
       0: aload_0
       1: getstatic     #30                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.target_file_size_multiplier:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #18                 // Method getInt:(Lorg/rocksdb/MutableOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxBytesForLevelBase(long);
    Code:
       0: aload_0
       1: getstatic     #31                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_bytes_for_level_base:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: lload_1
       5: invokevirtual #7                  // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public long maxBytesForLevelBase();
    Code:
       0: aload_0
       1: getstatic     #31                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_bytes_for_level_base:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #9                  // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxBytesForLevelMultiplier(double);
    Code:
       0: aload_0
       1: getstatic     #32                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_bytes_for_level_multiplier:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: dload_1
       5: invokevirtual #12                 // Method setDouble:(Lorg/rocksdb/MutableOptionKey;D)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public double maxBytesForLevelMultiplier();
    Code:
       0: aload_0
       1: getstatic     #32                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_bytes_for_level_multiplier:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #13                 // Method getDouble:(Lorg/rocksdb/MutableOptionKey;)D
       7: dreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxBytesForLevelMultiplierAdditional(int[]);
    Code:
       0: aload_0
       1: getstatic     #33                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_bytes_for_level_multiplier_additional:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: aload_1
       5: invokevirtual #34                 // Method setIntArray:(Lorg/rocksdb/MutableOptionKey;[I)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public int[] maxBytesForLevelMultiplierAdditional();
    Code:
       0: aload_0
       1: getstatic     #33                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_bytes_for_level_multiplier_additional:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #35                 // Method getIntArray:(Lorg/rocksdb/MutableOptionKey;)[I
       7: areturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxSequentialSkipInIterations(long);
    Code:
       0: aload_0
       1: getstatic     #36                 // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.max_sequential_skip_in_iterations:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: lload_1
       5: invokevirtual #7                  // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public long maxSequentialSkipInIterations();
    Code:
       0: aload_0
       1: getstatic     #36                 // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.max_sequential_skip_in_iterations:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: invokevirtual #9                  // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setParanoidFileChecks(boolean);
    Code:
       0: aload_0
       1: getstatic     #37                 // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.paranoid_file_checks:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: iload_1
       5: invokevirtual #21                 // Method setBoolean:(Lorg/rocksdb/MutableOptionKey;Z)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public boolean paranoidFileChecks();
    Code:
       0: aload_0
       1: getstatic     #37                 // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.paranoid_file_checks:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: invokevirtual #22                 // Method getBoolean:(Lorg/rocksdb/MutableOptionKey;)Z
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setCompressionType(org.rocksdb.CompressionType);
    Code:
       0: aload_0
       1: getstatic     #38                 // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.compression_type:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: aload_1
       5: invokevirtual #39                 // Method setEnum:(Lorg/rocksdb/MutableOptionKey;Ljava/lang/Enum;)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public org.rocksdb.CompressionType compressionType();
    Code:
       0: aload_0
       1: getstatic     #38                 // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.compression_type:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: invokevirtual #40                 // Method getEnum:(Lorg/rocksdb/MutableOptionKey;)Ljava/lang/Enum;
       7: checkcast     #41                 // class org/rocksdb/CompressionType
      10: areturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setReportBgIoStats(boolean);
    Code:
       0: aload_0
       1: getstatic     #42                 // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.report_bg_io_stats:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: iload_1
       5: invokevirtual #21                 // Method setBoolean:(Lorg/rocksdb/MutableOptionKey;Z)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public boolean reportBgIoStats();
    Code:
       0: aload_0
       1: getstatic     #42                 // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.report_bg_io_stats:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: invokevirtual #22                 // Method getBoolean:(Lorg/rocksdb/MutableOptionKey;)Z
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setTtl(long);
    Code:
       0: aload_0
       1: getstatic     #43                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.ttl:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: lload_1
       5: invokevirtual #7                  // Method setLong:(Lorg/rocksdb/MutableOptionKey;J)Lorg/rocksdb/AbstractMutableOptions$AbstractMutableOptionsBuilder;
       8: checkcast     #8                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
      11: areturn

  public long ttl();
    Code:
       0: aload_0
       1: getstatic     #43                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.ttl:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokevirtual #9                  // Method getLong:(Lorg/rocksdb/MutableOptionKey;)J
       7: lreturn

  protected org.rocksdb.AbstractMutableOptions build(java.lang.String[], java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #44                 // Method build:([Ljava/lang/String;[Ljava/lang/String;)Lorg/rocksdb/MutableColumnFamilyOptions;
       6: areturn

  protected org.rocksdb.AbstractMutableOptions$AbstractMutableOptionsBuilder self();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method self:()Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       4: areturn

  public org.rocksdb.MutableColumnFamilyOptionsInterface setCompressionType(org.rocksdb.CompressionType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method setCompressionType:(Lorg/rocksdb/CompressionType;)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableColumnFamilyOptionsInterface setMaxBytesForLevelBase(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #47                 // Method setMaxBytesForLevelBase:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableColumnFamilyOptionsInterface setMaxCompactionBytes(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #48                 // Method setMaxCompactionBytes:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableColumnFamilyOptionsInterface setLevel0FileNumCompactionTrigger(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #49                 // Method setLevel0FileNumCompactionTrigger:(I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableColumnFamilyOptionsInterface setDisableAutoCompactions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #50                 // Method setDisableAutoCompactions:(Z)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableColumnFamilyOptionsInterface setWriteBufferSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #51                 // Method setWriteBufferSize:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setTtl(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #52                 // Method setTtl:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setReportBgIoStats(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method setReportBgIoStats:(Z)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setParanoidFileChecks(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #54                 // Method setParanoidFileChecks:(Z)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMaxSuccessiveMerges(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #55                 // Method setMaxSuccessiveMerges:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMaxSequentialSkipInIterations(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #56                 // Method setMaxSequentialSkipInIterations:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setHardPendingCompactionBytesLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #57                 // Method setHardPendingCompactionBytesLimit:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setSoftPendingCompactionBytesLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #58                 // Method setSoftPendingCompactionBytesLimit:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMaxBytesForLevelMultiplierAdditional(int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method setMaxBytesForLevelMultiplierAdditional:([I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMaxBytesForLevelMultiplier(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #60                 // Method setMaxBytesForLevelMultiplier:(D)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setTargetFileSizeMultiplier(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method setTargetFileSizeMultiplier:(I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setTargetFileSizeBase(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #62                 // Method setTargetFileSizeBase:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setLevel0StopWritesTrigger(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #63                 // Method setLevel0StopWritesTrigger:(I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setLevel0SlowdownWritesTrigger(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #64                 // Method setLevel0SlowdownWritesTrigger:(I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setArenaBlockSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #65                 // Method setArenaBlockSize:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMemtableHugePageSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #66                 // Method setMemtableHugePageSize:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMemtablePrefixBloomSizeRatio(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #67                 // Method setMemtablePrefixBloomSizeRatio:(D)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setInplaceUpdateNumLocks(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #68                 // Method setInplaceUpdateNumLocks:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMaxWriteBufferNumber(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #69                 // Method setMaxWriteBufferNumber:(I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder(org.rocksdb.MutableColumnFamilyOptions$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return

  static {};
    Code:
       0: new           #70                 // class java/util/HashMap
       3: dup
       4: invokespecial #71                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #3                  // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
      10: invokestatic  #72                 // Method org/rocksdb/MutableColumnFamilyOptions$MemtableOption.values:()[Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
      13: astore_0
      14: aload_0
      15: arraylength
      16: istore_1
      17: iconst_0
      18: istore_2
      19: iload_2
      20: iload_1
      21: if_icmpge     50
      24: aload_0
      25: iload_2
      26: aaload
      27: astore_3
      28: getstatic     #3                  // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
      31: aload_3
      32: invokeinterface #73,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
      37: aload_3
      38: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: iinc          2, 1
      47: goto          19
      50: invokestatic  #75                 // Method org/rocksdb/MutableColumnFamilyOptions$CompactionOption.values:()[Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
      53: astore_0
      54: aload_0
      55: arraylength
      56: istore_1
      57: iconst_0
      58: istore_2
      59: iload_2
      60: iload_1
      61: if_icmpge     90
      64: aload_0
      65: iload_2
      66: aaload
      67: astore_3
      68: getstatic     #3                  // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
      71: aload_3
      72: invokeinterface #73,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
      77: aload_3
      78: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: iinc          2, 1
      87: goto          59
      90: invokestatic  #76                 // Method org/rocksdb/MutableColumnFamilyOptions$MiscOption.values:()[Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
      93: astore_0
      94: aload_0
      95: arraylength
      96: istore_1
      97: iconst_0
      98: istore_2
      99: iload_2
     100: iload_1
     101: if_icmpge     130
     104: aload_0
     105: iload_2
     106: aaload
     107: astore_3
     108: getstatic     #3                  // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
     111: aload_3
     112: invokeinterface #73,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
     117: aload_3
     118: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     123: pop
     124: iinc          2, 1
     127: goto          99
     130: return
}
