Compiled from "WBWIRocksIterator.java"
public class org.rocksdb.WBWIRocksIterator extends org.rocksdb.AbstractRocksIterator<org.rocksdb.WriteBatchWithIndex> {
  private final org.rocksdb.WBWIRocksIterator$WriteEntry entry;

  static final boolean $assertionsDisabled;

  protected org.rocksdb.WBWIRocksIterator(org.rocksdb.WriteBatchWithIndex, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #1                  // Method org/rocksdb/AbstractRocksIterator."<init>":(Lorg/rocksdb/RocksObject;J)V
       6: aload_0
       7: new           #2                  // class org/rocksdb/WBWIRocksIterator$WriteEntry
      10: dup
      11: aconst_null
      12: invokespecial #3                  // Method org/rocksdb/WBWIRocksIterator$WriteEntry."<init>":(Lorg/rocksdb/WBWIRocksIterator$1;)V
      15: putfield      #4                  // Field entry:Lorg/rocksdb/WBWIRocksIterator$WriteEntry;
      18: return

  public org.rocksdb.WBWIRocksIterator$WriteEntry entry();
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #6                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #7                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #9                  // Field nativeHandle_:J
      26: invokespecial #10                 // Method entry1:(J)[J
      29: astore_1
      30: aload_0
      31: getfield      #4                  // Field entry:Lorg/rocksdb/WBWIRocksIterator$WriteEntry;
      34: aload_1
      35: iconst_0
      36: laload
      37: l2i
      38: i2b
      39: invokestatic  #11                 // Method org/rocksdb/WBWIRocksIterator$WriteType.fromId:(B)Lorg/rocksdb/WBWIRocksIterator$WriteType;
      42: putfield      #12                 // Field org/rocksdb/WBWIRocksIterator$WriteEntry.type:Lorg/rocksdb/WBWIRocksIterator$WriteType;
      45: aload_0
      46: getfield      #4                  // Field entry:Lorg/rocksdb/WBWIRocksIterator$WriteEntry;
      49: getfield      #13                 // Field org/rocksdb/WBWIRocksIterator$WriteEntry.key:Lorg/rocksdb/DirectSlice;
      52: aload_1
      53: iconst_1
      54: laload
      55: aload_1
      56: iconst_1
      57: laload
      58: lconst_0
      59: lcmp
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: invokevirtual #14                 // Method org/rocksdb/DirectSlice.resetNativeHandle:(JZ)V
      71: aload_0
      72: getfield      #4                  // Field entry:Lorg/rocksdb/WBWIRocksIterator$WriteEntry;
      75: getfield      #15                 // Field org/rocksdb/WBWIRocksIterator$WriteEntry.value:Lorg/rocksdb/DirectSlice;
      78: aload_1
      79: iconst_2
      80: laload
      81: aload_1
      82: iconst_2
      83: laload
      84: lconst_0
      85: lcmp
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: invokevirtual #14                 // Method org/rocksdb/DirectSlice.resetNativeHandle:(JZ)V
      97: aload_0
      98: getfield      #4                  // Field entry:Lorg/rocksdb/WBWIRocksIterator$WriteEntry;
     101: areturn

  protected final native void disposeInternal(long);

  final native boolean isValid0(long);

  final native void seekToFirst0(long);

  final native void seekToLast0(long);

  final native void next0(long);

  final native void prev0(long);

  final native void refresh0(long) throws org.rocksdb.RocksDBException;

  final native void seek0(long, byte[], int);

  final native void seekForPrev0(long, byte[], int);

  final native void status0(long) throws org.rocksdb.RocksDBException;

  final native void seekDirect0(long, java.nio.ByteBuffer, int, int);

  private native long[] entry1(long);

  public void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field entry:Lorg/rocksdb/WBWIRocksIterator$WriteEntry;
       4: invokevirtual #16                 // Method org/rocksdb/WBWIRocksIterator$WriteEntry.close:()V
       7: aload_0
       8: invokespecial #17                 // Method org/rocksdb/AbstractRocksIterator.close:()V
      11: return

  void seekForPrevDirect0(long, java.nio.ByteBuffer, int, int);
    Code:
       0: new           #18                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #19                 // String Not implemented
       6: invokespecial #20                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  static {};
    Code:
       0: ldc_w         #21                 // class org/rocksdb/WBWIRocksIterator
       3: invokevirtual #22                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #5                  // Field $assertionsDisabled:Z
      17: return
}
