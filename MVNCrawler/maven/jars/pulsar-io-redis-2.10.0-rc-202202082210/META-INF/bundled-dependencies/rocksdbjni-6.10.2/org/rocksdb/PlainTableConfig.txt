Compiled from "PlainTableConfig.java"
public class org.rocksdb.PlainTableConfig extends org.rocksdb.TableFormatConfig {
  public static final int VARIABLE_LENGTH;

  public static final int DEFAULT_BLOOM_BITS_PER_KEY;

  public static final double DEFAULT_HASH_TABLE_RATIO;

  public static final int DEFAULT_INDEX_SPARSENESS;

  public static final int DEFAULT_HUGE_TLB_SIZE;

  public static final org.rocksdb.EncodingType DEFAULT_ENCODING_TYPE;

  public static final boolean DEFAULT_FULL_SCAN_MODE;

  public static final boolean DEFAULT_STORE_INDEX_IN_FILE;

  private int keySize_;

  private int bloomBitsPerKey_;

  private double hashTableRatio_;

  private int indexSparseness_;

  private int hugePageTlbSize_;

  private org.rocksdb.EncodingType encodingType_;

  private boolean fullScanMode_;

  private boolean storeIndexInFile_;

  public org.rocksdb.PlainTableConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/rocksdb/TableFormatConfig."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field keySize_:I
       9: aload_0
      10: bipush        10
      12: putfield      #3                  // Field bloomBitsPerKey_:I
      15: aload_0
      16: ldc2_w        #4                  // double 0.75d
      19: putfield      #6                  // Field hashTableRatio_:D
      22: aload_0
      23: bipush        16
      25: putfield      #7                  // Field indexSparseness_:I
      28: aload_0
      29: iconst_0
      30: putfield      #8                  // Field hugePageTlbSize_:I
      33: aload_0
      34: getstatic     #9                  // Field DEFAULT_ENCODING_TYPE:Lorg/rocksdb/EncodingType;
      37: putfield      #10                 // Field encodingType_:Lorg/rocksdb/EncodingType;
      40: aload_0
      41: iconst_0
      42: putfield      #11                 // Field fullScanMode_:Z
      45: aload_0
      46: iconst_0
      47: putfield      #12                 // Field storeIndexInFile_:Z
      50: return

  public org.rocksdb.PlainTableConfig setKeySize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field keySize_:I
       5: aload_0
       6: areturn

  public int keySize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field keySize_:I
       4: ireturn

  public org.rocksdb.PlainTableConfig setBloomBitsPerKey(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field bloomBitsPerKey_:I
       5: aload_0
       6: areturn

  public int bloomBitsPerKey();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bloomBitsPerKey_:I
       4: ireturn

  public org.rocksdb.PlainTableConfig setHashTableRatio(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #6                  // Field hashTableRatio_:D
       5: aload_0
       6: areturn

  public double hashTableRatio();
    Code:
       0: aload_0
       1: getfield      #6                  // Field hashTableRatio_:D
       4: dreturn

  public org.rocksdb.PlainTableConfig setIndexSparseness(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field indexSparseness_:I
       5: aload_0
       6: areturn

  public long indexSparseness();
    Code:
       0: aload_0
       1: getfield      #7                  // Field indexSparseness_:I
       4: i2l
       5: lreturn

  public org.rocksdb.PlainTableConfig setHugePageTlbSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field hugePageTlbSize_:I
       5: aload_0
       6: areturn

  public int hugePageTlbSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field hugePageTlbSize_:I
       4: ireturn

  public org.rocksdb.PlainTableConfig setEncodingType(org.rocksdb.EncodingType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field encodingType_:Lorg/rocksdb/EncodingType;
       5: aload_0
       6: areturn

  public org.rocksdb.EncodingType encodingType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field encodingType_:Lorg/rocksdb/EncodingType;
       4: areturn

  public org.rocksdb.PlainTableConfig setFullScanMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field fullScanMode_:Z
       5: aload_0
       6: areturn

  public boolean fullScanMode();
    Code:
       0: aload_0
       1: getfield      #11                 // Field fullScanMode_:Z
       4: ireturn

  public org.rocksdb.PlainTableConfig setStoreIndexInFile(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field storeIndexInFile_:Z
       5: aload_0
       6: areturn

  public boolean storeIndexInFile();
    Code:
       0: aload_0
       1: getfield      #12                 // Field storeIndexInFile_:Z
       4: ireturn

  protected long newTableFactoryHandle();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field keySize_:I
       5: aload_0
       6: getfield      #3                  // Field bloomBitsPerKey_:I
       9: aload_0
      10: getfield      #6                  // Field hashTableRatio_:D
      13: aload_0
      14: getfield      #7                  // Field indexSparseness_:I
      17: aload_0
      18: getfield      #8                  // Field hugePageTlbSize_:I
      21: aload_0
      22: getfield      #10                 // Field encodingType_:Lorg/rocksdb/EncodingType;
      25: invokevirtual #13                 // Method org/rocksdb/EncodingType.getValue:()B
      28: aload_0
      29: getfield      #11                 // Field fullScanMode_:Z
      32: aload_0
      33: getfield      #12                 // Field storeIndexInFile_:Z
      36: invokespecial #14                 // Method newTableFactoryHandle:(IIDIIBZZ)J
      39: lreturn

  private native long newTableFactoryHandle(int, int, double, int, int, byte, boolean, boolean);

  static {};
    Code:
       0: getstatic     #15                 // Field org/rocksdb/EncodingType.kPlain:Lorg/rocksdb/EncodingType;
       3: putstatic     #9                  // Field DEFAULT_ENCODING_TYPE:Lorg/rocksdb/EncodingType;
       6: return
}
