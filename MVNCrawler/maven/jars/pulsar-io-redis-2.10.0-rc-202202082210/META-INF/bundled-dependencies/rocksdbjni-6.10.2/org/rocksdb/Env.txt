Compiled from "Env.java"
public abstract class org.rocksdb.Env extends org.rocksdb.RocksObject {
  private static final org.rocksdb.Env DEFAULT_ENV;

  public static org.rocksdb.Env getDefault();
    Code:
       0: getstatic     #1                  // Field DEFAULT_ENV:Lorg/rocksdb/Env;
       3: areturn

  public org.rocksdb.Env setBackgroundThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #2                  // Field org/rocksdb/Priority.LOW:Lorg/rocksdb/Priority;
       5: invokevirtual #3                  // Method setBackgroundThreads:(ILorg/rocksdb/Priority;)Lorg/rocksdb/Env;
       8: areturn

  public int getBackgroundThreads(org.rocksdb.Priority);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #5                  // Method org/rocksdb/Priority.getValue:()B
       9: invokespecial #6                  // Method getBackgroundThreads:(JB)I
      12: ireturn

  public org.rocksdb.Env setBackgroundThreads(int, org.rocksdb.Priority);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field nativeHandle_:J
       5: iload_1
       6: aload_2
       7: invokevirtual #5                  // Method org/rocksdb/Priority.getValue:()B
      10: invokespecial #7                  // Method setBackgroundThreads:(JIB)V
      13: aload_0
      14: areturn

  public int getThreadPoolQueueLen(org.rocksdb.Priority);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #5                  // Method org/rocksdb/Priority.getValue:()B
       9: invokespecial #8                  // Method getThreadPoolQueueLen:(JB)I
      12: ireturn

  public org.rocksdb.Env incBackgroundThreadsIfNeeded(int, org.rocksdb.Priority);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field nativeHandle_:J
       5: iload_1
       6: aload_2
       7: invokevirtual #5                  // Method org/rocksdb/Priority.getValue:()B
      10: invokespecial #9                  // Method incBackgroundThreadsIfNeeded:(JIB)V
      13: aload_0
      14: areturn

  public org.rocksdb.Env lowerThreadPoolIOPriority(org.rocksdb.Priority);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #5                  // Method org/rocksdb/Priority.getValue:()B
       9: invokespecial #10                 // Method lowerThreadPoolIOPriority:(JB)V
      12: aload_0
      13: areturn

  public org.rocksdb.Env lowerThreadPoolCPUPriority(org.rocksdb.Priority);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #5                  // Method org/rocksdb/Priority.getValue:()B
       9: invokespecial #11                 // Method lowerThreadPoolCPUPriority:(JB)V
      12: aload_0
      13: areturn

  public java.util.List<org.rocksdb.ThreadStatus> getThreadList() throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field nativeHandle_:J
       5: invokespecial #12                 // Method getThreadList:(J)[Lorg/rocksdb/ThreadStatus;
       8: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      11: areturn

  org.rocksdb.Env(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #14                 // Method org/rocksdb/RocksObject."<init>":(J)V
       5: return

  private static native long getDefaultEnvInternal();

  private native void setBackgroundThreads(long, int, byte);

  private native int getBackgroundThreads(long, byte);

  private native int getThreadPoolQueueLen(long, byte);

  private native void incBackgroundThreadsIfNeeded(long, int, byte);

  private native void lowerThreadPoolIOPriority(long, byte);

  private native void lowerThreadPoolCPUPriority(long, byte);

  private native org.rocksdb.ThreadStatus[] getThreadList(long) throws org.rocksdb.RocksDBException;

  static {};
    Code:
       0: invokestatic  #15                 // Method org/rocksdb/RocksDB.loadLibrary:()V
       3: new           #16                 // class org/rocksdb/RocksEnv
       6: dup
       7: invokestatic  #17                 // Method getDefaultEnvInternal:()J
      10: invokespecial #18                 // Method org/rocksdb/RocksEnv."<init>":(J)V
      13: putstatic     #1                  // Field DEFAULT_ENV:Lorg/rocksdb/Env;
      16: getstatic     #1                  // Field DEFAULT_ENV:Lorg/rocksdb/Env;
      19: invokevirtual #19                 // Method disOwnNativeHandle:()V
      22: return
}
