Compiled from "CompactRangeOptions.java"
public class org.rocksdb.CompactRangeOptions extends org.rocksdb.RocksObject {
  private static final byte VALUE_kSkip;

  private static final byte VALUE_kIfHaveCompactionFilter;

  private static final byte VALUE_kForce;

  public org.rocksdb.CompactRangeOptions();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method newCompactRangeOptions:()J
       4: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
       7: return

  public boolean exclusiveManualCompaction();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: invokespecial #4                  // Method exclusiveManualCompaction:(J)Z
       8: ireturn

  public org.rocksdb.CompactRangeOptions setExclusiveManualCompaction(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #5                  // Method setExclusiveManualCompaction:(JZ)V
       9: aload_0
      10: areturn

  public boolean changeLevel();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: invokespecial #6                  // Method changeLevel:(J)Z
       8: ireturn

  public org.rocksdb.CompactRangeOptions setChangeLevel(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #7                  // Method setChangeLevel:(JZ)V
       9: aload_0
      10: areturn

  public int targetLevel();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: invokespecial #8                  // Method targetLevel:(J)I
       8: ireturn

  public org.rocksdb.CompactRangeOptions setTargetLevel(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #9                  // Method setTargetLevel:(JI)V
       9: aload_0
      10: areturn

  public int targetPathId();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: invokespecial #10                 // Method targetPathId:(J)I
       8: ireturn

  public org.rocksdb.CompactRangeOptions setTargetPathId(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #11                 // Method setTargetPathId:(JI)V
       9: aload_0
      10: areturn

  public org.rocksdb.CompactRangeOptions$BottommostLevelCompaction bottommostLevelCompaction();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: invokespecial #12                 // Method bottommostLevelCompaction:(J)I
       8: invokestatic  #13                 // Method org/rocksdb/CompactRangeOptions$BottommostLevelCompaction.fromRocksId:(I)Lorg/rocksdb/CompactRangeOptions$BottommostLevelCompaction;
      11: areturn

  public org.rocksdb.CompactRangeOptions setBottommostLevelCompaction(org.rocksdb.CompactRangeOptions$BottommostLevelCompaction);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #14                 // Method org/rocksdb/CompactRangeOptions$BottommostLevelCompaction.getValue:()B
       9: invokespecial #15                 // Method setBottommostLevelCompaction:(JI)V
      12: aload_0
      13: areturn

  public boolean allowWriteStall();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: invokespecial #16                 // Method allowWriteStall:(J)Z
       8: ireturn

  public org.rocksdb.CompactRangeOptions setAllowWriteStall(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #17                 // Method setAllowWriteStall:(JZ)V
       9: aload_0
      10: areturn

  public int maxSubcompactions();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: invokespecial #18                 // Method maxSubcompactions:(J)I
       8: ireturn

  public org.rocksdb.CompactRangeOptions setMaxSubcompactions(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #19                 // Method setMaxSubcompactions:(JI)V
       9: aload_0
      10: areturn

  private static native long newCompactRangeOptions();

  protected final native void disposeInternal(long);

  private native boolean exclusiveManualCompaction(long);

  private native void setExclusiveManualCompaction(long, boolean);

  private native boolean changeLevel(long);

  private native void setChangeLevel(long, boolean);

  private native int targetLevel(long);

  private native void setTargetLevel(long, int);

  private native int targetPathId(long);

  private native void setTargetPathId(long, int);

  private native int bottommostLevelCompaction(long);

  private native void setBottommostLevelCompaction(long, int);

  private native boolean allowWriteStall(long);

  private native void setAllowWriteStall(long, boolean);

  private native void setMaxSubcompactions(long, int);

  private native int maxSubcompactions(long);
}
