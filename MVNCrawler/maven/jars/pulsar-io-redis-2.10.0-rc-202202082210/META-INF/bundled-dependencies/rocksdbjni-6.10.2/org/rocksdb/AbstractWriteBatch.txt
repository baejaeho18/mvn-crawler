Compiled from "AbstractWriteBatch.java"
public abstract class org.rocksdb.AbstractWriteBatch extends org.rocksdb.RocksObject implements org.rocksdb.WriteBatchInterface {
  static final boolean $assertionsDisabled;

  protected org.rocksdb.AbstractWriteBatch(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #1                  // Method org/rocksdb/RocksObject."<init>":(J)V
       5: return

  public int count();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: invokevirtual #3                  // Method count0:(J)I
       8: ireturn

  public void put(byte[], byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_1
       6: aload_1
       7: arraylength
       8: aload_2
       9: aload_2
      10: arraylength
      11: invokevirtual #4                  // Method put:(J[BI[BI)V
      14: return

  public void put(org.rocksdb.ColumnFamilyHandle, byte[], byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_2
       6: aload_2
       7: arraylength
       8: aload_3
       9: aload_3
      10: arraylength
      11: aload_1
      12: getfield      #5                  // Field org/rocksdb/ColumnFamilyHandle.nativeHandle_:J
      15: invokevirtual #6                  // Method put:(J[BI[BIJ)V
      18: return

  public void merge(byte[], byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_1
       6: aload_1
       7: arraylength
       8: aload_2
       9: aload_2
      10: arraylength
      11: invokevirtual #7                  // Method merge:(J[BI[BI)V
      14: return

  public void merge(org.rocksdb.ColumnFamilyHandle, byte[], byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_2
       6: aload_2
       7: arraylength
       8: aload_3
       9: aload_3
      10: arraylength
      11: aload_1
      12: getfield      #5                  // Field org/rocksdb/ColumnFamilyHandle.nativeHandle_:J
      15: invokevirtual #8                  // Method merge:(J[BI[BIJ)V
      18: return

  public void remove(byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_1
       6: aload_1
       7: arraylength
       8: invokevirtual #9                  // Method delete:(J[BI)V
      11: return

  public void remove(org.rocksdb.ColumnFamilyHandle, byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_2
       6: aload_2
       7: arraylength
       8: aload_1
       9: getfield      #5                  // Field org/rocksdb/ColumnFamilyHandle.nativeHandle_:J
      12: invokevirtual #10                 // Method delete:(J[BIJ)V
      15: return

  public void put(java.nio.ByteBuffer, java.nio.ByteBuffer) throws org.rocksdb.RocksDBException;
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_1
       7: invokevirtual #12                 // Method java/nio/ByteBuffer.isDirect:()Z
      10: ifeq          20
      13: aload_2
      14: invokevirtual #12                 // Method java/nio/ByteBuffer.isDirect:()Z
      17: ifne          28
      20: new           #13                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_0
      29: aload_0
      30: getfield      #2                  // Field nativeHandle_:J
      33: aload_1
      34: aload_1
      35: invokevirtual #15                 // Method java/nio/ByteBuffer.position:()I
      38: aload_1
      39: invokevirtual #16                 // Method java/nio/ByteBuffer.remaining:()I
      42: aload_2
      43: aload_2
      44: invokevirtual #15                 // Method java/nio/ByteBuffer.position:()I
      47: aload_2
      48: invokevirtual #16                 // Method java/nio/ByteBuffer.remaining:()I
      51: lconst_0
      52: invokevirtual #17                 // Method putDirect:(JLjava/nio/ByteBuffer;IILjava/nio/ByteBuffer;IIJ)V
      55: aload_1
      56: aload_1
      57: invokevirtual #18                 // Method java/nio/ByteBuffer.limit:()I
      60: invokevirtual #19                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      63: pop
      64: aload_2
      65: aload_2
      66: invokevirtual #18                 // Method java/nio/ByteBuffer.limit:()I
      69: invokevirtual #19                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      72: pop
      73: return

  public void put(org.rocksdb.ColumnFamilyHandle, java.nio.ByteBuffer, java.nio.ByteBuffer) throws org.rocksdb.RocksDBException;
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_2
       7: invokevirtual #12                 // Method java/nio/ByteBuffer.isDirect:()Z
      10: ifeq          20
      13: aload_3
      14: invokevirtual #12                 // Method java/nio/ByteBuffer.isDirect:()Z
      17: ifne          28
      20: new           #13                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_0
      29: aload_0
      30: getfield      #2                  // Field nativeHandle_:J
      33: aload_2
      34: aload_2
      35: invokevirtual #15                 // Method java/nio/ByteBuffer.position:()I
      38: aload_2
      39: invokevirtual #16                 // Method java/nio/ByteBuffer.remaining:()I
      42: aload_3
      43: aload_3
      44: invokevirtual #15                 // Method java/nio/ByteBuffer.position:()I
      47: aload_3
      48: invokevirtual #16                 // Method java/nio/ByteBuffer.remaining:()I
      51: aload_1
      52: getfield      #5                  // Field org/rocksdb/ColumnFamilyHandle.nativeHandle_:J
      55: invokevirtual #17                 // Method putDirect:(JLjava/nio/ByteBuffer;IILjava/nio/ByteBuffer;IIJ)V
      58: aload_2
      59: aload_2
      60: invokevirtual #18                 // Method java/nio/ByteBuffer.limit:()I
      63: invokevirtual #19                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      66: pop
      67: aload_3
      68: aload_3
      69: invokevirtual #18                 // Method java/nio/ByteBuffer.limit:()I
      72: invokevirtual #19                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      75: pop
      76: return

  public void delete(byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_1
       6: aload_1
       7: arraylength
       8: invokevirtual #9                  // Method delete:(J[BI)V
      11: return

  public void delete(org.rocksdb.ColumnFamilyHandle, byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_2
       6: aload_2
       7: arraylength
       8: aload_1
       9: getfield      #5                  // Field org/rocksdb/ColumnFamilyHandle.nativeHandle_:J
      12: invokevirtual #10                 // Method delete:(J[BIJ)V
      15: return

  public void singleDelete(byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_1
       6: aload_1
       7: arraylength
       8: invokevirtual #20                 // Method singleDelete:(J[BI)V
      11: return

  public void singleDelete(org.rocksdb.ColumnFamilyHandle, byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_2
       6: aload_2
       7: arraylength
       8: aload_1
       9: getfield      #5                  // Field org/rocksdb/ColumnFamilyHandle.nativeHandle_:J
      12: invokevirtual #21                 // Method singleDelete:(J[BIJ)V
      15: return

  public void deleteRange(byte[], byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_1
       6: aload_1
       7: arraylength
       8: aload_2
       9: aload_2
      10: arraylength
      11: invokevirtual #22                 // Method deleteRange:(J[BI[BI)V
      14: return

  public void deleteRange(org.rocksdb.ColumnFamilyHandle, byte[], byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_2
       6: aload_2
       7: arraylength
       8: aload_3
       9: aload_3
      10: arraylength
      11: aload_1
      12: getfield      #5                  // Field org/rocksdb/ColumnFamilyHandle.nativeHandle_:J
      15: invokevirtual #23                 // Method deleteRange:(J[BI[BIJ)V
      18: return

  public void remove(java.nio.ByteBuffer) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_1
       6: aload_1
       7: invokevirtual #15                 // Method java/nio/ByteBuffer.position:()I
      10: aload_1
      11: invokevirtual #16                 // Method java/nio/ByteBuffer.remaining:()I
      14: lconst_0
      15: invokevirtual #24                 // Method removeDirect:(JLjava/nio/ByteBuffer;IIJ)V
      18: aload_1
      19: aload_1
      20: invokevirtual #18                 // Method java/nio/ByteBuffer.limit:()I
      23: invokevirtual #19                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      26: pop
      27: return

  public void remove(org.rocksdb.ColumnFamilyHandle, java.nio.ByteBuffer) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_2
       6: aload_2
       7: invokevirtual #15                 // Method java/nio/ByteBuffer.position:()I
      10: aload_2
      11: invokevirtual #16                 // Method java/nio/ByteBuffer.remaining:()I
      14: aload_1
      15: getfield      #5                  // Field org/rocksdb/ColumnFamilyHandle.nativeHandle_:J
      18: invokevirtual #24                 // Method removeDirect:(JLjava/nio/ByteBuffer;IIJ)V
      21: aload_2
      22: aload_2
      23: invokevirtual #18                 // Method java/nio/ByteBuffer.limit:()I
      26: invokevirtual #19                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      29: pop
      30: return

  public void putLogData(byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: aload_1
       6: aload_1
       7: arraylength
       8: invokevirtual #25                 // Method putLogData:(J[BI)V
      11: return

  public void clear();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: invokevirtual #26                 // Method clear0:(J)V
       8: return

  public void setSavePoint();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: invokevirtual #27                 // Method setSavePoint0:(J)V
       8: return

  public void rollbackToSavePoint() throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: invokevirtual #28                 // Method rollbackToSavePoint0:(J)V
       8: return

  public void popSavePoint() throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: invokevirtual #29                 // Method popSavePoint:(J)V
       8: return

  public void setMaxBytes(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: lload_1
       6: invokevirtual #30                 // Method setMaxBytes:(JJ)V
       9: return

  public org.rocksdb.WriteBatch getWriteBatch();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field nativeHandle_:J
       5: invokevirtual #31                 // Method getWriteBatch:(J)Lorg/rocksdb/WriteBatch;
       8: areturn

  abstract int count0(long);

  abstract void put(long, byte[], int, byte[], int) throws org.rocksdb.RocksDBException;

  abstract void put(long, byte[], int, byte[], int, long) throws org.rocksdb.RocksDBException;

  abstract void putDirect(long, java.nio.ByteBuffer, int, int, java.nio.ByteBuffer, int, int, long) throws org.rocksdb.RocksDBException;

  abstract void merge(long, byte[], int, byte[], int) throws org.rocksdb.RocksDBException;

  abstract void merge(long, byte[], int, byte[], int, long) throws org.rocksdb.RocksDBException;

  abstract void delete(long, byte[], int) throws org.rocksdb.RocksDBException;

  abstract void delete(long, byte[], int, long) throws org.rocksdb.RocksDBException;

  abstract void singleDelete(long, byte[], int) throws org.rocksdb.RocksDBException;

  abstract void singleDelete(long, byte[], int, long) throws org.rocksdb.RocksDBException;

  abstract void removeDirect(long, java.nio.ByteBuffer, int, int, long) throws org.rocksdb.RocksDBException;

  abstract void deleteRange(long, byte[], int, byte[], int) throws org.rocksdb.RocksDBException;

  abstract void deleteRange(long, byte[], int, byte[], int, long) throws org.rocksdb.RocksDBException;

  abstract void putLogData(long, byte[], int) throws org.rocksdb.RocksDBException;

  abstract void clear0(long);

  abstract void setSavePoint0(long);

  abstract void rollbackToSavePoint0(long);

  abstract void popSavePoint(long) throws org.rocksdb.RocksDBException;

  abstract void setMaxBytes(long, long);

  abstract org.rocksdb.WriteBatch getWriteBatch(long);

  static {};
    Code:
       0: ldc_w         #32                 // class org/rocksdb/AbstractWriteBatch
       3: invokevirtual #33                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #11                 // Field $assertionsDisabled:Z
      17: return
}
