Compiled from "EnvOptions.java"
public class org.rocksdb.EnvOptions extends org.rocksdb.RocksObject {
  private org.rocksdb.RateLimiter rateLimiter;

  static final boolean $assertionsDisabled;

  public org.rocksdb.EnvOptions();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method newEnvOptions:()J
       4: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
       7: return

  public org.rocksdb.EnvOptions(org.rocksdb.DBOptions);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #3                  // Field org/rocksdb/DBOptions.nativeHandle_:J
       5: invokestatic  #4                  // Method newEnvOptions:(J)J
       8: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
      11: return

  public org.rocksdb.EnvOptions setUseMmapReads(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #6                  // Method setUseMmapReads:(JZ)V
       9: aload_0
      10: areturn

  public boolean useMmapReads();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #5                  // Field nativeHandle_:J
      26: invokespecial #11                 // Method useMmapReads:(J)Z
      29: ireturn

  public org.rocksdb.EnvOptions setUseMmapWrites(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #12                 // Method setUseMmapWrites:(JZ)V
       9: aload_0
      10: areturn

  public boolean useMmapWrites();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #5                  // Field nativeHandle_:J
      26: invokespecial #13                 // Method useMmapWrites:(J)Z
      29: ireturn

  public org.rocksdb.EnvOptions setUseDirectReads(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #14                 // Method setUseDirectReads:(JZ)V
       9: aload_0
      10: areturn

  public boolean useDirectReads();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #5                  // Field nativeHandle_:J
      26: invokespecial #15                 // Method useDirectReads:(J)Z
      29: ireturn

  public org.rocksdb.EnvOptions setUseDirectWrites(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #16                 // Method setUseDirectWrites:(JZ)V
       9: aload_0
      10: areturn

  public boolean useDirectWrites();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #5                  // Field nativeHandle_:J
      26: invokespecial #17                 // Method useDirectWrites:(J)Z
      29: ireturn

  public org.rocksdb.EnvOptions setAllowFallocate(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #18                 // Method setAllowFallocate:(JZ)V
       9: aload_0
      10: areturn

  public boolean allowFallocate();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #5                  // Field nativeHandle_:J
      26: invokespecial #19                 // Method allowFallocate:(J)Z
      29: ireturn

  public org.rocksdb.EnvOptions setSetFdCloexec(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #20                 // Method setSetFdCloexec:(JZ)V
       9: aload_0
      10: areturn

  public boolean setFdCloexec();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #5                  // Field nativeHandle_:J
      26: invokespecial #21                 // Method setFdCloexec:(J)Z
      29: ireturn

  public org.rocksdb.EnvOptions setBytesPerSync(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field nativeHandle_:J
       5: lload_1
       6: invokespecial #22                 // Method setBytesPerSync:(JJ)V
       9: aload_0
      10: areturn

  public long bytesPerSync();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #5                  // Field nativeHandle_:J
      26: invokespecial #23                 // Method bytesPerSync:(J)J
      29: lreturn

  public org.rocksdb.EnvOptions setFallocateWithKeepSize(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #24                 // Method setFallocateWithKeepSize:(JZ)V
       9: aload_0
      10: areturn

  public boolean fallocateWithKeepSize();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #5                  // Field nativeHandle_:J
      26: invokespecial #25                 // Method fallocateWithKeepSize:(J)Z
      29: ireturn

  public org.rocksdb.EnvOptions setCompactionReadaheadSize(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field nativeHandle_:J
       5: lload_1
       6: invokespecial #26                 // Method setCompactionReadaheadSize:(JJ)V
       9: aload_0
      10: areturn

  public long compactionReadaheadSize();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #5                  // Field nativeHandle_:J
      26: invokespecial #27                 // Method compactionReadaheadSize:(J)J
      29: lreturn

  public org.rocksdb.EnvOptions setRandomAccessMaxBufferSize(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field nativeHandle_:J
       5: lload_1
       6: invokespecial #28                 // Method setRandomAccessMaxBufferSize:(JJ)V
       9: aload_0
      10: areturn

  public long randomAccessMaxBufferSize();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #5                  // Field nativeHandle_:J
      26: invokespecial #29                 // Method randomAccessMaxBufferSize:(J)J
      29: lreturn

  public org.rocksdb.EnvOptions setWritableFileMaxBufferSize(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field nativeHandle_:J
       5: lload_1
       6: invokespecial #30                 // Method setWritableFileMaxBufferSize:(JJ)V
       9: aload_0
      10: areturn

  public long writableFileMaxBufferSize();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #5                  // Field nativeHandle_:J
      26: invokespecial #31                 // Method writableFileMaxBufferSize:(J)J
      29: lreturn

  public org.rocksdb.EnvOptions setRateLimiter(org.rocksdb.RateLimiter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field rateLimiter:Lorg/rocksdb/RateLimiter;
       5: aload_0
       6: aload_0
       7: getfield      #5                  // Field nativeHandle_:J
      10: aload_1
      11: getfield      #33                 // Field org/rocksdb/RateLimiter.nativeHandle_:J
      14: invokespecial #34                 // Method setRateLimiter:(JJ)V
      17: aload_0
      18: areturn

  public org.rocksdb.RateLimiter rateLimiter();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #32                 // Field rateLimiter:Lorg/rocksdb/RateLimiter;
      25: areturn

  private static native long newEnvOptions();

  private static native long newEnvOptions(long);

  protected final native void disposeInternal(long);

  private native void setUseMmapReads(long, boolean);

  private native boolean useMmapReads(long);

  private native void setUseMmapWrites(long, boolean);

  private native boolean useMmapWrites(long);

  private native void setUseDirectReads(long, boolean);

  private native boolean useDirectReads(long);

  private native void setUseDirectWrites(long, boolean);

  private native boolean useDirectWrites(long);

  private native void setAllowFallocate(long, boolean);

  private native boolean allowFallocate(long);

  private native void setSetFdCloexec(long, boolean);

  private native boolean setFdCloexec(long);

  private native void setBytesPerSync(long, long);

  private native long bytesPerSync(long);

  private native void setFallocateWithKeepSize(long, boolean);

  private native boolean fallocateWithKeepSize(long);

  private native void setCompactionReadaheadSize(long, long);

  private native long compactionReadaheadSize(long);

  private native void setRandomAccessMaxBufferSize(long, long);

  private native long randomAccessMaxBufferSize(long);

  private native void setWritableFileMaxBufferSize(long, long);

  private native long writableFileMaxBufferSize(long);

  private native void setRateLimiter(long, long);

  static {};
    Code:
       0: ldc_w         #35                 // class org/rocksdb/EnvOptions
       3: invokevirtual #36                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #7                  // Field $assertionsDisabled:Z
      17: invokestatic  #37                 // Method org/rocksdb/RocksDB.loadLibrary:()V
      20: return
}
