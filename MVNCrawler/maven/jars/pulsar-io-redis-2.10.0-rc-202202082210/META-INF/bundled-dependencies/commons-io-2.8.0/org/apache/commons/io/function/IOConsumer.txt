Compiled from "IOConsumer.java"
public interface org.apache.commons.io.function.IOConsumer<T> {
  public abstract void accept(T) throws java.io.IOException;

  public default org.apache.commons.io.function.IOConsumer<T> andThen(org.apache.commons.io.function.IOConsumer<? super T>);
    Code:
       0: aload_1
       1: invokestatic  #1                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #2,  0              // InvokeDynamic #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;
      12: areturn

  private void lambda$andThen$0(org.apache.commons.io.function.IOConsumer, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #3,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V
       7: aload_1
       8: aload_2
       9: invokeinterface #3,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V
      14: return
}
