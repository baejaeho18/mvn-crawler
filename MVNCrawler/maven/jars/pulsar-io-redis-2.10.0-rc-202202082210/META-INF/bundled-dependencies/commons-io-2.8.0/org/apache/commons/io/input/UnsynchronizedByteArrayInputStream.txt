Compiled from "UnsynchronizedByteArrayInputStream.java"
public class org.apache.commons.io.input.UnsynchronizedByteArrayInputStream extends java.io.InputStream {
  public static final int END_OF_STREAM;

  private final byte[] data;

  private final int eod;

  private int offset;

  private int markedOffset;

  public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_1
       5: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field data:[B
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field offset:I
      19: aload_0
      20: aload_1
      21: arraylength
      22: putfield      #5                  // Field eod:I
      25: aload_0
      26: aload_0
      27: getfield      #4                  // Field offset:I
      30: putfield      #6                  // Field markedOffset:I
      33: return

  public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream(byte[], int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_1
       5: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: iload_2
      10: ifge          23
      13: new           #7                  // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #8                  // String offset cannot be negative
      19: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #3                  // Field data:[B
      28: aload_0
      29: iload_2
      30: aload_1
      31: arraylength
      32: ifle          40
      35: aload_1
      36: arraylength
      37: goto          41
      40: iload_2
      41: invokestatic  #10                 // Method java/lang/Math.min:(II)I
      44: putfield      #4                  // Field offset:I
      47: aload_0
      48: aload_1
      49: arraylength
      50: putfield      #5                  // Field eod:I
      53: aload_0
      54: aload_0
      55: getfield      #4                  // Field offset:I
      58: putfield      #6                  // Field markedOffset:I
      61: return

  public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_1
       5: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: iload_2
      10: ifge          23
      13: new           #7                  // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #8                  // String offset cannot be negative
      19: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: iload_3
      24: ifge          37
      27: new           #7                  // class java/lang/IllegalArgumentException
      30: dup
      31: ldc           #11                 // String length cannot be negative
      33: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: aload_1
      39: putfield      #3                  // Field data:[B
      42: aload_0
      43: iload_2
      44: aload_1
      45: arraylength
      46: ifle          54
      49: aload_1
      50: arraylength
      51: goto          55
      54: iload_2
      55: invokestatic  #10                 // Method java/lang/Math.min:(II)I
      58: putfield      #4                  // Field offset:I
      61: aload_0
      62: aload_0
      63: getfield      #4                  // Field offset:I
      66: iload_3
      67: iadd
      68: aload_1
      69: arraylength
      70: invokestatic  #10                 // Method java/lang/Math.min:(II)I
      73: putfield      #5                  // Field eod:I
      76: aload_0
      77: aload_0
      78: getfield      #4                  // Field offset:I
      81: putfield      #6                  // Field markedOffset:I
      84: return

  public int available();
    Code:
       0: aload_0
       1: getfield      #4                  // Field offset:I
       4: aload_0
       5: getfield      #5                  // Field eod:I
       8: if_icmpge     23
      11: aload_0
      12: getfield      #5                  // Field eod:I
      15: aload_0
      16: getfield      #4                  // Field offset:I
      19: isub
      20: goto          24
      23: iconst_0
      24: ireturn

  public int read();
    Code:
       0: aload_0
       1: getfield      #4                  // Field offset:I
       4: aload_0
       5: getfield      #5                  // Field eod:I
       8: if_icmpge     34
      11: aload_0
      12: getfield      #3                  // Field data:[B
      15: aload_0
      16: dup
      17: getfield      #4                  // Field offset:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #4                  // Field offset:I
      26: baload
      27: sipush        255
      30: iand
      31: goto          35
      34: iconst_m1
      35: ireturn

  public int read(byte[]);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: iconst_0
       8: aload_1
       9: arraylength
      10: invokevirtual #13                 // Method read:([BII)I
      13: ireturn

  public int read(byte[], int, int);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_2
       6: iflt          21
       9: iload_3
      10: iflt          21
      13: iload_2
      14: iload_3
      15: iadd
      16: aload_1
      17: arraylength
      18: if_icmple     29
      21: new           #14                 // class java/lang/IndexOutOfBoundsException
      24: dup
      25: invokespecial #15                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #4                  // Field offset:I
      33: aload_0
      34: getfield      #5                  // Field eod:I
      37: if_icmplt     42
      40: iconst_m1
      41: ireturn
      42: aload_0
      43: getfield      #5                  // Field eod:I
      46: aload_0
      47: getfield      #4                  // Field offset:I
      50: isub
      51: istore        4
      53: iload_3
      54: iload         4
      56: if_icmpge     62
      59: iload_3
      60: istore        4
      62: iload         4
      64: ifgt          69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: getfield      #3                  // Field data:[B
      73: aload_0
      74: getfield      #4                  // Field offset:I
      77: aload_1
      78: iload_2
      79: iload         4
      81: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      84: aload_0
      85: dup
      86: getfield      #4                  // Field offset:I
      89: iload         4
      91: iadd
      92: putfield      #4                  // Field offset:I
      95: iload         4
      97: ireturn

  public long skip(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          16
       6: new           #7                  // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #17                 // String Skipping backward is not supported
      12: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: getfield      #5                  // Field eod:I
      20: aload_0
      21: getfield      #4                  // Field offset:I
      24: isub
      25: i2l
      26: lstore_3
      27: lload_1
      28: lload_3
      29: lcmp
      30: ifge          35
      33: lload_1
      34: lstore_3
      35: aload_0
      36: dup
      37: getfield      #4                  // Field offset:I
      40: i2l
      41: lload_3
      42: ladd
      43: l2i
      44: putfield      #4                  // Field offset:I
      47: lload_3
      48: lreturn

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public void mark(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field offset:I
       5: putfield      #6                  // Field markedOffset:I
       8: return

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field markedOffset:I
       5: putfield      #4                  // Field offset:I
       8: return
}
