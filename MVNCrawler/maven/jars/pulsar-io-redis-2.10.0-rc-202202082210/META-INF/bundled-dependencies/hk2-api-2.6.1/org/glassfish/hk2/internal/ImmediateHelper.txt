Compiled from "ImmediateHelper.java"
public class org.glassfish.hk2.internal.ImmediateHelper implements org.glassfish.hk2.api.DynamicConfigurationListener,java.lang.Runnable,org.glassfish.hk2.api.ValidationService,org.glassfish.hk2.api.ErrorService,org.glassfish.hk2.api.Validator,org.glassfish.hk2.api.ImmediateController {
  private static final java.util.concurrent.ThreadFactory THREAD_FACTORY;

  private static final java.util.concurrent.Executor DEFAULT_EXECUTOR;

  private final org.glassfish.hk2.api.ServiceLocator locator;

  private final org.glassfish.hk2.utilities.ImmediateContext immediateContext;

  private final java.util.HashSet<java.lang.Long> tidsWithWork;

  private final java.lang.Object queueLock;

  private boolean threadAvailable;

  private boolean outstandingJob;

  private boolean waitingForWork;

  private boolean firstTime;

  private org.glassfish.hk2.api.ImmediateController$ImmediateServiceState currentState;

  private java.util.concurrent.Executor currentExecutor;

  private long decayTime;

  private org.glassfish.hk2.internal.ImmediateHelper(org.glassfish.hk2.api.ServiceLocator, org.glassfish.hk2.utilities.ImmediateContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field tidsWithWork:Ljava/util/HashSet;
      15: aload_0
      16: new           #5                  // class java/lang/Object
      19: dup
      20: invokespecial #1                  // Method java/lang/Object."<init>":()V
      23: putfield      #6                  // Field queueLock:Ljava/lang/Object;
      26: aload_0
      27: iconst_1
      28: putfield      #7                  // Field firstTime:Z
      31: aload_0
      32: getstatic     #8                  // Field org/glassfish/hk2/api/ImmediateController$ImmediateServiceState.SUSPENDED:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      35: putfield      #9                  // Field currentState:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      38: aload_0
      39: getstatic     #10                 // Field DEFAULT_EXECUTOR:Ljava/util/concurrent/Executor;
      42: putfield      #11                 // Field currentExecutor:Ljava/util/concurrent/Executor;
      45: aload_0
      46: ldc2_w        #12                 // long 20000l
      49: putfield      #14                 // Field decayTime:J
      52: aload_0
      53: aload_1
      54: putfield      #15                 // Field locator:Lorg/glassfish/hk2/api/ServiceLocator;
      57: aload_0
      58: aload_2
      59: putfield      #16                 // Field immediateContext:Lorg/glassfish/hk2/utilities/ImmediateContext;
      62: return

  private boolean hasWork();
    Code:
       0: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #18                 // Method java/lang/Thread.getId:()J
       6: lstore_1
       7: aload_0
       8: getfield      #7                  // Field firstTime:Z
      11: istore_3
      12: aload_0
      13: iconst_0
      14: putfield      #7                  // Field firstTime:Z
      17: aload_0
      18: getfield      #4                  // Field tidsWithWork:Ljava/util/HashSet;
      21: lload_1
      22: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: invokevirtual #20                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      28: istore        4
      30: aload_0
      31: getfield      #4                  // Field tidsWithWork:Ljava/util/HashSet;
      34: lload_1
      35: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      38: invokevirtual #21                 // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
      41: pop
      42: iload         4
      44: ifne          51
      47: iload_3
      48: ifne          54
      51: iload         4
      53: ireturn
      54: aload_0
      55: invokespecial #22                 // Method getImmediateServices:()Ljava/util/List;
      58: astore        5
      60: aload         5
      62: invokeinterface #23,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      67: ifne          74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: ireturn

  private void doWorkIfWeHaveSome();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method hasWork:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #25                 // Field outstandingJob:Z
      13: aload_0
      14: getfield      #26                 // Field threadAvailable:Z
      17: ifne          38
      20: aload_0
      21: iconst_1
      22: putfield      #26                 // Field threadAvailable:Z
      25: aload_0
      26: getfield      #11                 // Field currentExecutor:Ljava/util/concurrent/Executor;
      29: aload_0
      30: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      35: goto          52
      38: aload_0
      39: getfield      #28                 // Field waitingForWork:Z
      42: ifeq          52
      45: aload_0
      46: getfield      #6                  // Field queueLock:Ljava/lang/Object;
      49: invokevirtual #29                 // Method java/lang/Object.notify:()V
      52: return

  public void configurationChanged();
    Code:
       0: aload_0
       1: getfield      #6                  // Field queueLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field currentState:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      11: getstatic     #8                  // Field org/glassfish/hk2/api/ImmediateController$ImmediateServiceState.SUSPENDED:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      14: invokevirtual #30                 // Method org/glassfish/hk2/api/ImmediateController$ImmediateServiceState.equals:(Ljava/lang/Object;)Z
      17: ifeq          23
      20: aload_1
      21: monitorexit
      22: return
      23: aload_0
      24: invokespecial #31                 // Method doWorkIfWeHaveSome:()V
      27: aload_1
      28: monitorexit
      29: goto          37
      32: astore_2
      33: aload_1
      34: monitorexit
      35: aload_2
      36: athrow
      37: return
    Exception table:
       from    to  target type
           7    22    32   any
          23    29    32   any
          32    35    32   any

  public org.glassfish.hk2.api.Filter getLookupFilter();
    Code:
       0: aload_0
       1: getfield      #16                 // Field immediateContext:Lorg/glassfish/hk2/utilities/ImmediateContext;
       4: invokevirtual #32                 // Method org/glassfish/hk2/utilities/ImmediateContext.getValidationFilter:()Lorg/glassfish/hk2/api/Filter;
       7: areturn

  public org.glassfish.hk2.api.Validator getValidator();
    Code:
       0: aload_0
       1: areturn

  public void onFailure(org.glassfish.hk2.api.ErrorInformation) throws org.glassfish.hk2.api.MultiException;
    Code:
       0: getstatic     #33                 // Field org/glassfish/hk2/api/ErrorType.DYNAMIC_CONFIGURATION_FAILURE:Lorg/glassfish/hk2/api/ErrorType;
       3: aload_1
       4: invokeinterface #34,  1           // InterfaceMethod org/glassfish/hk2/api/ErrorInformation.getErrorType:()Lorg/glassfish/hk2/api/ErrorType;
       9: invokevirtual #35                 // Method org/glassfish/hk2/api/ErrorType.equals:(Ljava/lang/Object;)Z
      12: ifne          57
      15: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      18: invokevirtual #18                 // Method java/lang/Thread.getId:()J
      21: lstore_2
      22: aload_0
      23: getfield      #6                  // Field queueLock:Ljava/lang/Object;
      26: dup
      27: astore        4
      29: monitorenter
      30: aload_0
      31: getfield      #4                  // Field tidsWithWork:Ljava/util/HashSet;
      34: lload_2
      35: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      38: invokevirtual #21                 // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
      41: pop
      42: aload         4
      44: monitorexit
      45: goto          56
      48: astore        5
      50: aload         4
      52: monitorexit
      53: aload         5
      55: athrow
      56: return
      57: return
    Exception table:
       from    to  target type
          30    45    48   any
          48    53    48   any

  public boolean validate(org.glassfish.hk2.api.ValidationInformation);
    Code:
       0: aload_1
       1: invokeinterface #36,  1           // InterfaceMethod org/glassfish/hk2/api/ValidationInformation.getOperation:()Lorg/glassfish/hk2/api/Operation;
       6: getstatic     #37                 // Field org/glassfish/hk2/api/Operation.BIND:Lorg/glassfish/hk2/api/Operation;
       9: invokevirtual #38                 // Method org/glassfish/hk2/api/Operation.equals:(Ljava/lang/Object;)Z
      12: ifne          30
      15: aload_1
      16: invokeinterface #36,  1           // InterfaceMethod org/glassfish/hk2/api/ValidationInformation.getOperation:()Lorg/glassfish/hk2/api/Operation;
      21: getstatic     #39                 // Field org/glassfish/hk2/api/Operation.UNBIND:Lorg/glassfish/hk2/api/Operation;
      24: invokevirtual #38                 // Method org/glassfish/hk2/api/Operation.equals:(Ljava/lang/Object;)Z
      27: ifeq          71
      30: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      33: invokevirtual #18                 // Method java/lang/Thread.getId:()J
      36: lstore_2
      37: aload_0
      38: getfield      #6                  // Field queueLock:Ljava/lang/Object;
      41: dup
      42: astore        4
      44: monitorenter
      45: aload_0
      46: getfield      #4                  // Field tidsWithWork:Ljava/util/HashSet;
      49: lload_2
      50: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      53: invokevirtual #40                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      56: pop
      57: aload         4
      59: monitorexit
      60: goto          71
      63: astore        5
      65: aload         4
      67: monitorexit
      68: aload         5
      70: athrow
      71: iconst_1
      72: ireturn
    Exception table:
       from    to  target type
          45    60    63   any
          63    68    63   any

  public void run();
    Code:
       0: aload_0
       1: getfield      #6                  // Field queueLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #14                 // Field decayTime:J
      11: lstore_2
      12: aload_0
      13: getfield      #9                  // Field currentState:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      16: getstatic     #41                 // Field org/glassfish/hk2/api/ImmediateController$ImmediateServiceState.RUNNING:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      19: invokevirtual #30                 // Method org/glassfish/hk2/api/ImmediateController$ImmediateServiceState.equals:(Ljava/lang/Object;)Z
      22: ifeq          90
      25: aload_0
      26: getfield      #25                 // Field outstandingJob:Z
      29: ifne          90
      32: lload_2
      33: lconst_0
      34: lcmp
      35: ifle          90
      38: aload_0
      39: iconst_1
      40: putfield      #28                 // Field waitingForWork:Z
      43: invokestatic  #42                 // Method java/lang/System.currentTimeMillis:()J
      46: lstore        4
      48: aload_0
      49: getfield      #6                  // Field queueLock:Ljava/lang/Object;
      52: lload_2
      53: invokevirtual #43                 // Method java/lang/Object.wait:(J)V
      56: goto          74
      59: astore        6
      61: aload_0
      62: iconst_0
      63: putfield      #26                 // Field threadAvailable:Z
      66: aload_0
      67: iconst_0
      68: putfield      #28                 // Field waitingForWork:Z
      71: aload_1
      72: monitorexit
      73: return
      74: invokestatic  #42                 // Method java/lang/System.currentTimeMillis:()J
      77: lload         4
      79: lsub
      80: lstore        6
      82: lload_2
      83: lload         6
      85: lsub
      86: lstore_2
      87: goto          12
      90: aload_0
      91: iconst_0
      92: putfield      #28                 // Field waitingForWork:Z
      95: aload_0
      96: getfield      #25                 // Field outstandingJob:Z
      99: ifeq          115
     102: aload_0
     103: getfield      #9                  // Field currentState:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
     106: getstatic     #8                  // Field org/glassfish/hk2/api/ImmediateController$ImmediateServiceState.SUSPENDED:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
     109: invokevirtual #30                 // Method org/glassfish/hk2/api/ImmediateController$ImmediateServiceState.equals:(Ljava/lang/Object;)Z
     112: ifeq          123
     115: aload_0
     116: iconst_0
     117: putfield      #26                 // Field threadAvailable:Z
     120: aload_1
     121: monitorexit
     122: return
     123: aload_0
     124: iconst_0
     125: putfield      #25                 // Field outstandingJob:Z
     128: aload_1
     129: monitorexit
     130: goto          140
     133: astore        8
     135: aload_1
     136: monitorexit
     137: aload         8
     139: athrow
     140: aload_0
     141: getfield      #16                 // Field immediateContext:Lorg/glassfish/hk2/utilities/ImmediateContext;
     144: invokevirtual #45                 // Method org/glassfish/hk2/utilities/ImmediateContext.doWork:()V
     147: goto          0
    Exception table:
       from    to  target type
          48    56    59   Class java/lang/InterruptedException
           7    73   133   any
          74   122   133   any
         123   130   133   any
         133   137   133   any

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #6                  // Field queueLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field currentExecutor:Ljava/util/concurrent/Executor;
      11: aload_1
      12: monitorexit
      13: areturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  public void setExecutor(java.util.concurrent.Executor) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field queueLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field currentState:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      11: getstatic     #41                 // Field org/glassfish/hk2/api/ImmediateController$ImmediateServiceState.RUNNING:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      14: invokevirtual #30                 // Method org/glassfish/hk2/api/ImmediateController$ImmediateServiceState.equals:(Ljava/lang/Object;)Z
      17: ifeq          30
      20: new           #46                 // class java/lang/IllegalStateException
      23: dup
      24: ldc           #47                 // String ImmediateSerivce attempt made to change executor while in RUNNING state
      26: invokespecial #48                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: aload_1
      32: ifnonnull     41
      35: getstatic     #10                 // Field DEFAULT_EXECUTOR:Ljava/util/concurrent/Executor;
      38: goto          42
      41: aload_1
      42: putfield      #11                 // Field currentExecutor:Ljava/util/concurrent/Executor;
      45: aload_2
      46: monitorexit
      47: goto          55
      50: astore_3
      51: aload_2
      52: monitorexit
      53: aload_3
      54: athrow
      55: return
    Exception table:
       from    to  target type
           7    47    50   any
          50    53    50   any

  public long getThreadInactivityTimeout();
    Code:
       0: aload_0
       1: getfield      #6                  // Field queueLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #14                 // Field decayTime:J
      11: aload_1
      12: monitorexit
      13: lreturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  public void setThreadInactivityTimeout(long) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field queueLock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: lload_1
       8: lconst_0
       9: lcmp
      10: ifge          21
      13: new           #49                 // class java/lang/IllegalArgumentException
      16: dup
      17: invokespecial #50                 // Method java/lang/IllegalArgumentException."<init>":()V
      20: athrow
      21: aload_0
      22: lload_1
      23: putfield      #14                 // Field decayTime:J
      26: aload_3
      27: monitorexit
      28: goto          38
      31: astore        4
      33: aload_3
      34: monitorexit
      35: aload         4
      37: athrow
      38: return
    Exception table:
       from    to  target type
           7    28    31   any
          31    35    31   any

  public org.glassfish.hk2.api.ImmediateController$ImmediateServiceState getImmediateState();
    Code:
       0: aload_0
       1: getfield      #6                  // Field queueLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field currentState:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      11: aload_1
      12: monitorexit
      13: areturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  public void setImmediateState(org.glassfish.hk2.api.ImmediateController$ImmediateServiceState);
    Code:
       0: aload_0
       1: getfield      #6                  // Field queueLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_1
       8: ifnonnull     19
      11: new           #49                 // class java/lang/IllegalArgumentException
      14: dup
      15: invokespecial #50                 // Method java/lang/IllegalArgumentException."<init>":()V
      18: athrow
      19: aload_1
      20: aload_0
      21: getfield      #9                  // Field currentState:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      24: if_acmpne     30
      27: aload_2
      28: monitorexit
      29: return
      30: aload_0
      31: aload_1
      32: putfield      #9                  // Field currentState:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      35: aload_0
      36: getfield      #9                  // Field currentState:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      39: getstatic     #41                 // Field org/glassfish/hk2/api/ImmediateController$ImmediateServiceState.RUNNING:Lorg/glassfish/hk2/api/ImmediateController$ImmediateServiceState;
      42: invokevirtual #30                 // Method org/glassfish/hk2/api/ImmediateController$ImmediateServiceState.equals:(Ljava/lang/Object;)Z
      45: ifeq          52
      48: aload_0
      49: invokespecial #31                 // Method doWorkIfWeHaveSome:()V
      52: aload_2
      53: monitorexit
      54: goto          62
      57: astore_3
      58: aload_2
      59: monitorexit
      60: aload_3
      61: athrow
      62: return
    Exception table:
       from    to  target type
           7    29    57   any
          30    54    57   any
          57    60    57   any

  private java.util.List<org.glassfish.hk2.api.ActiveDescriptor<?>> getImmediateServices();
    Code:
       0: aload_0
       1: getfield      #15                 // Field locator:Lorg/glassfish/hk2/api/ServiceLocator;
       4: aload_0
       5: getfield      #16                 // Field immediateContext:Lorg/glassfish/hk2/utilities/ImmediateContext;
       8: invokevirtual #32                 // Method org/glassfish/hk2/utilities/ImmediateContext.getValidationFilter:()Lorg/glassfish/hk2/api/Filter;
      11: invokeinterface #51,  2           // InterfaceMethod org/glassfish/hk2/api/ServiceLocator.getDescriptors:(Lorg/glassfish/hk2/api/Filter;)Ljava/util/List;
      16: astore_1
      17: goto          25
      20: astore_2
      21: invokestatic  #52                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      24: astore_1
      25: aload_1
      26: areturn
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/IllegalStateException

  static {};
    Code:
       0: new           #53                 // class org/glassfish/hk2/internal/ImmediateHelper$ImmediateThreadFactory
       3: dup
       4: aconst_null
       5: invokespecial #54                 // Method org/glassfish/hk2/internal/ImmediateHelper$ImmediateThreadFactory."<init>":(Lorg/glassfish/hk2/internal/ImmediateHelper$1;)V
       8: putstatic     #55                 // Field THREAD_FACTORY:Ljava/util/concurrent/ThreadFactory;
      11: new           #56                 // class java/util/concurrent/ThreadPoolExecutor
      14: dup
      15: iconst_0
      16: ldc           #58                 // int 2147483647
      18: ldc2_w        #59                 // long 60l
      21: getstatic     #61                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      24: new           #62                 // class java/util/concurrent/SynchronousQueue
      27: dup
      28: iconst_1
      29: invokespecial #63                 // Method java/util/concurrent/SynchronousQueue."<init>":(Z)V
      32: getstatic     #55                 // Field THREAD_FACTORY:Ljava/util/concurrent/ThreadFactory;
      35: invokespecial #64                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      38: putstatic     #10                 // Field DEFAULT_EXECUTOR:Ljava/util/concurrent/Executor;
      41: return
}
