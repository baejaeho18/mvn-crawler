Compiled from "DynamicConfiguration.java"
public interface org.glassfish.hk2.api.DynamicConfiguration {
  public abstract <T> org.glassfish.hk2.api.ActiveDescriptor<T> bind(org.glassfish.hk2.api.Descriptor);

  public abstract <T> org.glassfish.hk2.api.ActiveDescriptor<T> bind(org.glassfish.hk2.api.Descriptor, boolean);

  public abstract org.glassfish.hk2.api.FactoryDescriptors bind(org.glassfish.hk2.api.FactoryDescriptors);

  public abstract org.glassfish.hk2.api.FactoryDescriptors bind(org.glassfish.hk2.api.FactoryDescriptors, boolean);

  public abstract <T> org.glassfish.hk2.api.ActiveDescriptor<T> addActiveDescriptor(org.glassfish.hk2.api.ActiveDescriptor<T>) throws java.lang.IllegalArgumentException;

  public abstract <T> org.glassfish.hk2.api.ActiveDescriptor<T> addActiveDescriptor(org.glassfish.hk2.api.ActiveDescriptor<T>, boolean) throws java.lang.IllegalArgumentException;

  public abstract <T> org.glassfish.hk2.api.ActiveDescriptor<T> addActiveDescriptor(java.lang.Class<T>) throws org.glassfish.hk2.api.MultiException, java.lang.IllegalArgumentException;

  public abstract <T> org.glassfish.hk2.api.FactoryDescriptors addActiveFactoryDescriptor(java.lang.Class<? extends org.glassfish.hk2.api.Factory<T>>) throws org.glassfish.hk2.api.MultiException, java.lang.IllegalArgumentException;

  public abstract void addUnbindFilter(org.glassfish.hk2.api.Filter) throws java.lang.IllegalArgumentException;

  public abstract void addIdempotentFilter(org.glassfish.hk2.api.Filter...) throws java.lang.IllegalArgumentException;

  public abstract void registerTwoPhaseResources(org.glassfish.hk2.api.TwoPhaseResource...);

  public abstract void commit() throws org.glassfish.hk2.api.MultiException;
}
