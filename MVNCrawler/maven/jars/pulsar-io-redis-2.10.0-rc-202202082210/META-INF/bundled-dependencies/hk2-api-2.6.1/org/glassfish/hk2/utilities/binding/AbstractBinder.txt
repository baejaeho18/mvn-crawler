Compiled from "AbstractBinder.java"
public abstract class org.glassfish.hk2.utilities.binding.AbstractBinder implements org.glassfish.hk2.utilities.Binder,org.glassfish.hk2.api.DynamicConfiguration {
  private transient org.glassfish.hk2.api.DynamicConfiguration configuration;

  private transient org.glassfish.hk2.utilities.binding.AbstractBindingBuilder<?> currentBuilder;

  private transient org.glassfish.hk2.api.HK2Loader defaultLoader;

  public org.glassfish.hk2.utilities.binding.AbstractBinder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public <T> org.glassfish.hk2.utilities.binding.ServiceBindingBuilder<T> bind(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #2                  // Method org/glassfish/hk2/utilities/binding/AbstractBindingBuilder.create:(Ljava/lang/Class;Z)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       6: invokespecial #3                  // Method resetBuilder:(Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       9: areturn

  public <T> org.glassfish.hk2.utilities.binding.ServiceBindingBuilder<T> bindAsContract(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #2                  // Method org/glassfish/hk2/utilities/binding/AbstractBindingBuilder.create:(Ljava/lang/Class;Z)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       6: invokespecial #3                  // Method resetBuilder:(Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       9: areturn

  public <T> org.glassfish.hk2.utilities.binding.ServiceBindingBuilder<T> bindAsContract(org.glassfish.hk2.api.TypeLiteral<T>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #4                  // Method org/glassfish/hk2/utilities/binding/AbstractBindingBuilder.create:(Lorg/glassfish/hk2/api/TypeLiteral;Z)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       6: invokespecial #3                  // Method resetBuilder:(Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       9: areturn

  public <T> org.glassfish.hk2.utilities.binding.ServiceBindingBuilder<T> bindAsContract(java.lang.reflect.Type);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #5                  // Method org/glassfish/hk2/utilities/binding/AbstractBindingBuilder.create:(Ljava/lang/reflect/Type;Z)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       6: invokespecial #3                  // Method resetBuilder:(Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       9: areturn

  public <T> org.glassfish.hk2.utilities.binding.ScopedBindingBuilder<T> bind(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #6                  // Method org/glassfish/hk2/utilities/binding/AbstractBindingBuilder.create:(Ljava/lang/Object;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       5: invokespecial #3                  // Method resetBuilder:(Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       8: areturn

  public <T> org.glassfish.hk2.utilities.binding.ServiceBindingBuilder<T> bindFactory(java.lang.Class<? extends org.glassfish.hk2.api.Factory<T>>, java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #7                  // Method org/glassfish/hk2/utilities/binding/AbstractBindingBuilder.createFactoryBinder:(Ljava/lang/Class;Ljava/lang/Class;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       6: invokespecial #3                  // Method resetBuilder:(Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       9: areturn

  public <T> org.glassfish.hk2.utilities.binding.ServiceBindingBuilder<T> bindFactory(java.lang.Class<? extends org.glassfish.hk2.api.Factory<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #7                  // Method org/glassfish/hk2/utilities/binding/AbstractBindingBuilder.createFactoryBinder:(Ljava/lang/Class;Ljava/lang/Class;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       6: invokespecial #3                  // Method resetBuilder:(Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       9: areturn

  public <T> org.glassfish.hk2.utilities.binding.ServiceBindingBuilder<T> bindFactory(org.glassfish.hk2.api.Factory<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #8                  // Method org/glassfish/hk2/utilities/binding/AbstractBindingBuilder.createFactoryBinder:(Lorg/glassfish/hk2/api/Factory;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       5: invokespecial #3                  // Method resetBuilder:(Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       8: areturn

  public void bind(org.glassfish.hk2.api.DynamicConfiguration);
    Code:
       0: aload_0
       1: getfield      #9                  // Field configuration:Lorg/glassfish/hk2/api/DynamicConfiguration;
       4: ifnull        17
       7: new           #10                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #11                 // String Recursive configuration call detected.
      13: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: ifnonnull     31
      21: new           #13                 // class java/lang/NullPointerException
      24: dup
      25: ldc           #14                 // String configuration
      27: invokespecial #15                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: aload_1
      33: putfield      #9                  // Field configuration:Lorg/glassfish/hk2/api/DynamicConfiguration;
      36: aload_0
      37: invokevirtual #16                 // Method configure:()V
      40: aload_0
      41: invokespecial #17                 // Method complete:()V
      44: goto          54
      47: astore_2
      48: aload_0
      49: invokespecial #17                 // Method complete:()V
      52: aload_2
      53: athrow
      54: return
    Exception table:
       from    to  target type
          36    40    47   any

  private <T> org.glassfish.hk2.utilities.binding.AbstractBindingBuilder<T> resetBuilder(org.glassfish.hk2.utilities.binding.AbstractBindingBuilder<T>);
    Code:
       0: aload_0
       1: getfield      #18                 // Field currentBuilder:Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       4: ifnull        22
       7: aload_0
       8: getfield      #18                 // Field currentBuilder:Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
      11: aload_0
      12: invokespecial #19                 // Method configuration:()Lorg/glassfish/hk2/api/DynamicConfiguration;
      15: aload_0
      16: invokespecial #20                 // Method getDefaultBinderLoader:()Lorg/glassfish/hk2/api/HK2Loader;
      19: invokevirtual #21                 // Method org/glassfish/hk2/utilities/binding/AbstractBindingBuilder.complete:(Lorg/glassfish/hk2/api/DynamicConfiguration;Lorg/glassfish/hk2/api/HK2Loader;)V
      22: aload_0
      23: aload_1
      24: putfield      #18                 // Field currentBuilder:Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
      27: aload_1
      28: areturn

  private void complete();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #3                  // Method resetBuilder:(Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;)Lorg/glassfish/hk2/utilities/binding/AbstractBindingBuilder;
       5: pop
       6: aload_0
       7: aconst_null
       8: putfield      #9                  // Field configuration:Lorg/glassfish/hk2/api/DynamicConfiguration;
      11: goto          22
      14: astore_1
      15: aload_0
      16: aconst_null
      17: putfield      #9                  // Field configuration:Lorg/glassfish/hk2/api/DynamicConfiguration;
      20: aload_1
      21: athrow
      22: return
    Exception table:
       from    to  target type
           0     6    14   any

  protected abstract void configure();

  private org.glassfish.hk2.api.DynamicConfiguration configuration();
    Code:
       0: aload_0
       1: getfield      #9                  // Field configuration:Lorg/glassfish/hk2/api/DynamicConfiguration;
       4: ifnonnull     17
       7: new           #10                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #22                 // String Dynamic configuration accessed from outside of an active binder configuration scope.
      13: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #9                  // Field configuration:Lorg/glassfish/hk2/api/DynamicConfiguration;
      21: areturn

  public <T> org.glassfish.hk2.api.ActiveDescriptor<T> bind(org.glassfish.hk2.api.Descriptor);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #23                 // Method bind:(Lorg/glassfish/hk2/api/Descriptor;Z)Lorg/glassfish/hk2/api/ActiveDescriptor;
       6: areturn

  public <T> org.glassfish.hk2.api.ActiveDescriptor<T> bind(org.glassfish.hk2.api.Descriptor, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method setLoader:(Lorg/glassfish/hk2/api/Descriptor;)V
       5: aload_0
       6: invokespecial #19                 // Method configuration:()Lorg/glassfish/hk2/api/DynamicConfiguration;
       9: aload_1
      10: iload_2
      11: invokeinterface #25,  3           // InterfaceMethod org/glassfish/hk2/api/DynamicConfiguration.bind:(Lorg/glassfish/hk2/api/Descriptor;Z)Lorg/glassfish/hk2/api/ActiveDescriptor;
      16: areturn

  public org.glassfish.hk2.api.FactoryDescriptors bind(org.glassfish.hk2.api.FactoryDescriptors);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #26                 // Method bind:(Lorg/glassfish/hk2/api/FactoryDescriptors;Z)Lorg/glassfish/hk2/api/FactoryDescriptors;
       6: areturn

  public org.glassfish.hk2.api.FactoryDescriptors bind(org.glassfish.hk2.api.FactoryDescriptors, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #27,  1           // InterfaceMethod org/glassfish/hk2/api/FactoryDescriptors.getFactoryAsAService:()Lorg/glassfish/hk2/api/Descriptor;
       7: invokespecial #24                 // Method setLoader:(Lorg/glassfish/hk2/api/Descriptor;)V
      10: aload_0
      11: aload_1
      12: invokeinterface #28,  1           // InterfaceMethod org/glassfish/hk2/api/FactoryDescriptors.getFactoryAsAFactory:()Lorg/glassfish/hk2/api/Descriptor;
      17: invokespecial #24                 // Method setLoader:(Lorg/glassfish/hk2/api/Descriptor;)V
      20: aload_0
      21: invokespecial #19                 // Method configuration:()Lorg/glassfish/hk2/api/DynamicConfiguration;
      24: aload_1
      25: iload_2
      26: invokeinterface #29,  3           // InterfaceMethod org/glassfish/hk2/api/DynamicConfiguration.bind:(Lorg/glassfish/hk2/api/FactoryDescriptors;Z)Lorg/glassfish/hk2/api/FactoryDescriptors;
      31: areturn

  public <T> org.glassfish.hk2.api.ActiveDescriptor<T> addActiveDescriptor(org.glassfish.hk2.api.ActiveDescriptor<T>) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #30                 // Method addActiveDescriptor:(Lorg/glassfish/hk2/api/ActiveDescriptor;Z)Lorg/glassfish/hk2/api/ActiveDescriptor;
       6: areturn

  public <T> org.glassfish.hk2.api.ActiveDescriptor<T> addActiveDescriptor(org.glassfish.hk2.api.ActiveDescriptor<T>, boolean) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #19                 // Method configuration:()Lorg/glassfish/hk2/api/DynamicConfiguration;
       4: aload_1
       5: iload_2
       6: invokeinterface #31,  3           // InterfaceMethod org/glassfish/hk2/api/DynamicConfiguration.addActiveDescriptor:(Lorg/glassfish/hk2/api/ActiveDescriptor;Z)Lorg/glassfish/hk2/api/ActiveDescriptor;
      11: areturn

  public <T> org.glassfish.hk2.api.ActiveDescriptor<T> addActiveDescriptor(java.lang.Class<T>) throws org.glassfish.hk2.api.MultiException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #19                 // Method configuration:()Lorg/glassfish/hk2/api/DynamicConfiguration;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod org/glassfish/hk2/api/DynamicConfiguration.addActiveDescriptor:(Ljava/lang/Class;)Lorg/glassfish/hk2/api/ActiveDescriptor;
      10: areturn

  public <T> org.glassfish.hk2.api.FactoryDescriptors addActiveFactoryDescriptor(java.lang.Class<? extends org.glassfish.hk2.api.Factory<T>>) throws org.glassfish.hk2.api.MultiException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #19                 // Method configuration:()Lorg/glassfish/hk2/api/DynamicConfiguration;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod org/glassfish/hk2/api/DynamicConfiguration.addActiveFactoryDescriptor:(Ljava/lang/Class;)Lorg/glassfish/hk2/api/FactoryDescriptors;
      10: areturn

  public void addUnbindFilter(org.glassfish.hk2.api.Filter) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #19                 // Method configuration:()Lorg/glassfish/hk2/api/DynamicConfiguration;
       4: aload_1
       5: invokeinterface #34,  2           // InterfaceMethod org/glassfish/hk2/api/DynamicConfiguration.addUnbindFilter:(Lorg/glassfish/hk2/api/Filter;)V
      10: return

  public void addIdempotentFilter(org.glassfish.hk2.api.Filter...) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #19                 // Method configuration:()Lorg/glassfish/hk2/api/DynamicConfiguration;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod org/glassfish/hk2/api/DynamicConfiguration.addIdempotentFilter:([Lorg/glassfish/hk2/api/Filter;)V
      10: return

  public void registerTwoPhaseResources(org.glassfish.hk2.api.TwoPhaseResource...);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method configuration:()Lorg/glassfish/hk2/api/DynamicConfiguration;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod org/glassfish/hk2/api/DynamicConfiguration.registerTwoPhaseResources:([Lorg/glassfish/hk2/api/TwoPhaseResource;)V
      10: return

  public void commit() throws org.glassfish.hk2.api.MultiException;
    Code:
       0: aload_0
       1: invokespecial #19                 // Method configuration:()Lorg/glassfish/hk2/api/DynamicConfiguration;
       4: invokeinterface #37,  1           // InterfaceMethod org/glassfish/hk2/api/DynamicConfiguration.commit:()V
       9: return

  public final void install(org.glassfish.hk2.utilities.Binder...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     34
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: aload_0
      23: invokeinterface #38,  2           // InterfaceMethod org/glassfish/hk2/utilities/Binder.bind:(Lorg/glassfish/hk2/api/DynamicConfiguration;)V
      28: iinc          4, 1
      31: goto          8
      34: return

  private void setLoader(org.glassfish.hk2.api.Descriptor);
    Code:
       0: aload_1
       1: invokeinterface #39,  1           // InterfaceMethod org/glassfish/hk2/api/Descriptor.getLoader:()Lorg/glassfish/hk2/api/HK2Loader;
       6: ifnonnull     27
       9: aload_1
      10: instanceof    #40                 // class org/glassfish/hk2/utilities/DescriptorImpl
      13: ifeq          27
      16: aload_1
      17: checkcast     #40                 // class org/glassfish/hk2/utilities/DescriptorImpl
      20: aload_0
      21: invokespecial #20                 // Method getDefaultBinderLoader:()Lorg/glassfish/hk2/api/HK2Loader;
      24: invokevirtual #41                 // Method org/glassfish/hk2/utilities/DescriptorImpl.setLoader:(Lorg/glassfish/hk2/api/HK2Loader;)V
      27: return

  private org.glassfish.hk2.api.HK2Loader getDefaultBinderLoader();
    Code:
       0: aload_0
       1: getfield      #42                 // Field defaultLoader:Lorg/glassfish/hk2/api/HK2Loader;
       4: ifnonnull     35
       7: new           #43                 // class org/glassfish/hk2/utilities/binding/AbstractBinder$1
      10: dup
      11: aload_0
      12: invokespecial #44                 // Method org/glassfish/hk2/utilities/binding/AbstractBinder$1."<init>":(Lorg/glassfish/hk2/utilities/binding/AbstractBinder;)V
      15: invokestatic  #45                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      18: checkcast     #46                 // class java/lang/ClassLoader
      21: astore_1
      22: aload_0
      23: new           #47                 // class org/glassfish/hk2/utilities/binding/AbstractBinder$2
      26: dup
      27: aload_0
      28: aload_1
      29: invokespecial #48                 // Method org/glassfish/hk2/utilities/binding/AbstractBinder$2."<init>":(Lorg/glassfish/hk2/utilities/binding/AbstractBinder;Ljava/lang/ClassLoader;)V
      32: putfield      #42                 // Field defaultLoader:Lorg/glassfish/hk2/api/HK2Loader;
      35: aload_0
      36: getfield      #42                 // Field defaultLoader:Lorg/glassfish/hk2/api/HK2Loader;
      39: areturn
}
