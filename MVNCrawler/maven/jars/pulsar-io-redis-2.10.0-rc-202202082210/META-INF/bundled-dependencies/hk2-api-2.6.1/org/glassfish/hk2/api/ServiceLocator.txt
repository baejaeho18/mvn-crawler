Compiled from "ServiceLocator.java"
public interface org.glassfish.hk2.api.ServiceLocator {
  public abstract <T> T getService(java.lang.Class<T>, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> T getService(java.lang.reflect.Type, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> T getService(java.lang.Class<T>, java.lang.String, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> T getService(java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> java.util.List<T> getAllServices(java.lang.Class<T>, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> java.util.List<T> getAllServices(java.lang.reflect.Type, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> java.util.List<T> getAllServices(java.lang.annotation.Annotation, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract java.util.List<?> getAllServices(org.glassfish.hk2.api.Filter) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> org.glassfish.hk2.api.ServiceHandle<T> getServiceHandle(java.lang.Class<T>, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> org.glassfish.hk2.api.ServiceHandle<T> getServiceHandle(java.lang.reflect.Type, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> org.glassfish.hk2.api.ServiceHandle<T> getServiceHandle(java.lang.Class<T>, java.lang.String, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> org.glassfish.hk2.api.ServiceHandle<T> getServiceHandle(java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> java.util.List<org.glassfish.hk2.api.ServiceHandle<T>> getAllServiceHandles(java.lang.Class<T>, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract java.util.List<org.glassfish.hk2.api.ServiceHandle<?>> getAllServiceHandles(java.lang.reflect.Type, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract java.util.List<org.glassfish.hk2.api.ServiceHandle<?>> getAllServiceHandles(java.lang.annotation.Annotation, java.lang.annotation.Annotation...) throws org.glassfish.hk2.api.MultiException;

  public abstract java.util.List<org.glassfish.hk2.api.ServiceHandle<?>> getAllServiceHandles(org.glassfish.hk2.api.Filter) throws org.glassfish.hk2.api.MultiException;

  public abstract java.util.List<org.glassfish.hk2.api.ActiveDescriptor<?>> getDescriptors(org.glassfish.hk2.api.Filter);

  public abstract org.glassfish.hk2.api.ActiveDescriptor<?> getBestDescriptor(org.glassfish.hk2.api.Filter);

  public abstract org.glassfish.hk2.api.ActiveDescriptor<?> reifyDescriptor(org.glassfish.hk2.api.Descriptor, org.glassfish.hk2.api.Injectee) throws org.glassfish.hk2.api.MultiException;

  public abstract org.glassfish.hk2.api.ActiveDescriptor<?> reifyDescriptor(org.glassfish.hk2.api.Descriptor) throws org.glassfish.hk2.api.MultiException;

  public abstract org.glassfish.hk2.api.ActiveDescriptor<?> getInjecteeDescriptor(org.glassfish.hk2.api.Injectee) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> org.glassfish.hk2.api.ServiceHandle<T> getServiceHandle(org.glassfish.hk2.api.ActiveDescriptor<T>, org.glassfish.hk2.api.Injectee) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> org.glassfish.hk2.api.ServiceHandle<T> getServiceHandle(org.glassfish.hk2.api.ActiveDescriptor<T>) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> T getService(org.glassfish.hk2.api.ActiveDescriptor<T>, org.glassfish.hk2.api.ServiceHandle<?>) throws org.glassfish.hk2.api.MultiException;

  public abstract <T> T getService(org.glassfish.hk2.api.ActiveDescriptor<T>, org.glassfish.hk2.api.ServiceHandle<?>, org.glassfish.hk2.api.Injectee) throws org.glassfish.hk2.api.MultiException;

  public abstract java.lang.String getDefaultClassAnalyzerName();

  public abstract void setDefaultClassAnalyzerName(java.lang.String);

  public abstract org.glassfish.hk2.api.Unqualified getDefaultUnqualified();

  public abstract void setDefaultUnqualified(org.glassfish.hk2.api.Unqualified);

  public abstract java.lang.String getName();

  public abstract long getLocatorId();

  public abstract org.glassfish.hk2.api.ServiceLocator getParent();

  public abstract void shutdown();

  public abstract org.glassfish.hk2.api.ServiceLocatorState getState();

  public abstract boolean getNeutralContextClassLoader();

  public abstract void setNeutralContextClassLoader(boolean);

  public abstract <T> T create(java.lang.Class<T>);

  public abstract <T> T create(java.lang.Class<T>, java.lang.String);

  public abstract void inject(java.lang.Object);

  public abstract void inject(java.lang.Object, java.lang.String);

  public abstract java.lang.Object assistedInject(java.lang.Object, java.lang.reflect.Method, org.glassfish.hk2.api.MethodParameter...);

  public abstract java.lang.Object assistedInject(java.lang.Object, java.lang.reflect.Method, org.glassfish.hk2.api.ServiceHandle<?>, org.glassfish.hk2.api.MethodParameter...);

  public abstract void postConstruct(java.lang.Object);

  public abstract void postConstruct(java.lang.Object, java.lang.String);

  public abstract void preDestroy(java.lang.Object);

  public abstract void preDestroy(java.lang.Object, java.lang.String);

  public abstract <U> U createAndInitialize(java.lang.Class<U>);

  public abstract <U> U createAndInitialize(java.lang.Class<U>, java.lang.String);
}
