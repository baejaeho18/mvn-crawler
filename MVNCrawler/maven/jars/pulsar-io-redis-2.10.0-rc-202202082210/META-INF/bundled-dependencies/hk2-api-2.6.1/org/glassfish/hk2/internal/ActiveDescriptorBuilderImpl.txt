Compiled from "ActiveDescriptorBuilderImpl.java"
public class org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl implements org.glassfish.hk2.utilities.ActiveDescriptorBuilder {
  private java.lang.String name;

  private final java.util.HashSet<java.lang.reflect.Type> contracts;

  private java.lang.annotation.Annotation scopeAnnotation;

  private java.lang.Class<? extends java.lang.annotation.Annotation> scope;

  private final java.util.HashSet<java.lang.annotation.Annotation> qualifiers;

  private final java.util.HashMap<java.lang.String, java.util.List<java.lang.String>> metadatas;

  private final java.lang.Class<?> implementation;

  private org.glassfish.hk2.api.HK2Loader loader;

  private int rank;

  private java.lang.Boolean proxy;

  private java.lang.Boolean proxyForSameScope;

  private org.glassfish.hk2.api.DescriptorVisibility visibility;

  private java.lang.String classAnalysisName;

  private java.lang.reflect.Type implementationType;

  public org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field contracts:Ljava/util/HashSet;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field scopeAnnotation:Ljava/lang/annotation/Annotation;
      20: aload_0
      21: ldc           #6                  // class org/glassfish/hk2/api/PerLookup
      23: putfield      #7                  // Field scope:Ljava/lang/Class;
      26: aload_0
      27: new           #2                  // class java/util/HashSet
      30: dup
      31: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      34: putfield      #8                  // Field qualifiers:Ljava/util/HashSet;
      37: aload_0
      38: new           #9                  // class java/util/HashMap
      41: dup
      42: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      45: putfield      #11                 // Field metadatas:Ljava/util/HashMap;
      48: aload_0
      49: aconst_null
      50: putfield      #12                 // Field loader:Lorg/glassfish/hk2/api/HK2Loader;
      53: aload_0
      54: iconst_0
      55: putfield      #13                 // Field rank:I
      58: aload_0
      59: aconst_null
      60: putfield      #14                 // Field proxy:Ljava/lang/Boolean;
      63: aload_0
      64: aconst_null
      65: putfield      #15                 // Field proxyForSameScope:Ljava/lang/Boolean;
      68: aload_0
      69: getstatic     #16                 // Field org/glassfish/hk2/api/DescriptorVisibility.NORMAL:Lorg/glassfish/hk2/api/DescriptorVisibility;
      72: putfield      #17                 // Field visibility:Lorg/glassfish/hk2/api/DescriptorVisibility;
      75: aload_0
      76: aconst_null
      77: putfield      #18                 // Field classAnalysisName:Ljava/lang/String;
      80: aload_0
      81: aload_1
      82: putfield      #19                 // Field implementation:Ljava/lang/Class;
      85: return

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder named(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder to(java.lang.reflect.Type) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_0
       5: getfield      #4                  // Field contracts:Ljava/util/HashSet;
       8: aload_1
       9: invokevirtual #21                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      12: pop
      13: aload_0
      14: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder in(java.lang.annotation.Annotation) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #22                 // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: aload_0
      13: aload_1
      14: putfield      #5                  // Field scopeAnnotation:Ljava/lang/annotation/Annotation;
      17: aload_0
      18: aload_1
      19: invokeinterface #24,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      24: putfield      #7                  // Field scope:Ljava/lang/Class;
      27: aload_0
      28: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder in(java.lang.Class<? extends java.lang.annotation.Annotation>) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field scope:Ljava/lang/Class;
       5: aload_1
       6: ifnonnull     17
       9: aload_0
      10: aconst_null
      11: putfield      #5                  // Field scopeAnnotation:Ljava/lang/annotation/Annotation;
      14: goto          90
      17: aload_0
      18: getfield      #5                  // Field scopeAnnotation:Ljava/lang/annotation/Annotation;
      21: ifnull        90
      24: aload_1
      25: aload_0
      26: getfield      #5                  // Field scopeAnnotation:Ljava/lang/annotation/Annotation;
      29: invokeinterface #24,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      34: invokevirtual #25                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      37: ifne          90
      40: new           #22                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #26                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #28                 // String Scope set to different class (
      53: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_1
      57: invokevirtual #30                 // Method java/lang/Class.getName:()Ljava/lang/String;
      60: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #31                 // String ) from the scope annotation (
      65: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: getfield      #5                  // Field scopeAnnotation:Ljava/lang/annotation/Annotation;
      72: invokeinterface #24,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      77: invokevirtual #30                 // Method java/lang/Class.getName:()Ljava/lang/String;
      80: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: aload_0
      91: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder qualifiedBy(java.lang.annotation.Annotation) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ifnull        40
       4: ldc           #34                 // class javax/inject/Named
       6: aload_1
       7: invokeinterface #24,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      12: invokevirtual #25                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      15: ifeq          31
      18: aload_0
      19: aload_1
      20: checkcast     #34                 // class javax/inject/Named
      23: invokeinterface #35,  1           // InterfaceMethod javax/inject/Named.value:()Ljava/lang/String;
      28: putfield      #20                 // Field name:Ljava/lang/String;
      31: aload_0
      32: getfield      #8                  // Field qualifiers:Ljava/util/HashSet;
      35: aload_1
      36: invokevirtual #21                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder has(java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #36                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       6: invokevirtual #37                 // Method has:(Ljava/lang/String;Ljava/util/List;)Lorg/glassfish/hk2/utilities/ActiveDescriptorBuilder;
       9: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder has(java.lang.String, java.util.List<java.lang.String>) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_2
       5: ifnull        17
       8: aload_2
       9: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
      14: ifgt          25
      17: new           #22                 // class java/lang/IllegalArgumentException
      20: dup
      21: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #11                 // Field metadatas:Ljava/util/HashMap;
      29: aload_1
      30: aload_2
      31: invokevirtual #39                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_0
      36: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder ofRank(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field rank:I
       5: aload_0
       6: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder proxy();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #40                 // Method proxy:(Z)Lorg/glassfish/hk2/utilities/ActiveDescriptorBuilder;
       5: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder proxy(boolean);
    Code:
       0: iload_1
       1: ifeq          14
       4: aload_0
       5: getstatic     #41                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       8: putfield      #14                 // Field proxy:Ljava/lang/Boolean;
      11: goto          21
      14: aload_0
      15: getstatic     #42                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      18: putfield      #14                 // Field proxy:Ljava/lang/Boolean;
      21: aload_0
      22: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder proxyForSameScope();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #40                 // Method proxy:(Z)Lorg/glassfish/hk2/utilities/ActiveDescriptorBuilder;
       5: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder proxyForSameScope(boolean);
    Code:
       0: iload_1
       1: ifeq          14
       4: aload_0
       5: getstatic     #41                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       8: putfield      #15                 // Field proxyForSameScope:Ljava/lang/Boolean;
      11: goto          21
      14: aload_0
      15: getstatic     #42                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      18: putfield      #15                 // Field proxyForSameScope:Ljava/lang/Boolean;
      21: aload_0
      22: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder andLoadWith(org.glassfish.hk2.api.HK2Loader) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field loader:Lorg/glassfish/hk2/api/HK2Loader;
       5: aload_0
       6: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder analyzeWith(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field classAnalysisName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder localOnly();
    Code:
       0: aload_0
       1: getstatic     #43                 // Field org/glassfish/hk2/api/DescriptorVisibility.LOCAL:Lorg/glassfish/hk2/api/DescriptorVisibility;
       4: putfield      #17                 // Field visibility:Lorg/glassfish/hk2/api/DescriptorVisibility;
       7: aload_0
       8: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder visibility(org.glassfish.hk2.api.DescriptorVisibility);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #22                 // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: aload_0
      13: aload_1
      14: putfield      #17                 // Field visibility:Lorg/glassfish/hk2/api/DescriptorVisibility;
      17: aload_0
      18: areturn

  public org.glassfish.hk2.utilities.ActiveDescriptorBuilder asType(java.lang.reflect.Type);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #22                 // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: aload_0
      13: aload_1
      14: putfield      #44                 // Field implementationType:Ljava/lang/reflect/Type;
      17: aload_0
      18: areturn

  public <T> org.glassfish.hk2.utilities.AbstractActiveDescriptor<T> build() throws java.lang.IllegalArgumentException;
    Code:
       0: new           #45                 // class org/glassfish/hk2/internal/ActiveDescriptorBuilderImpl$BuiltActiveDescriptor
       3: dup
       4: aload_0
       5: getfield      #19                 // Field implementation:Ljava/lang/Class;
       8: aload_0
       9: getfield      #4                  // Field contracts:Ljava/util/HashSet;
      12: aload_0
      13: getfield      #5                  // Field scopeAnnotation:Ljava/lang/annotation/Annotation;
      16: aload_0
      17: getfield      #7                  // Field scope:Ljava/lang/Class;
      20: aload_0
      21: getfield      #20                 // Field name:Ljava/lang/String;
      24: aload_0
      25: getfield      #8                  // Field qualifiers:Ljava/util/HashSet;
      28: getstatic     #46                 // Field org/glassfish/hk2/api/DescriptorType.CLASS:Lorg/glassfish/hk2/api/DescriptorType;
      31: aload_0
      32: getfield      #17                 // Field visibility:Lorg/glassfish/hk2/api/DescriptorVisibility;
      35: aload_0
      36: getfield      #13                 // Field rank:I
      39: aload_0
      40: getfield      #14                 // Field proxy:Ljava/lang/Boolean;
      43: aload_0
      44: getfield      #15                 // Field proxyForSameScope:Ljava/lang/Boolean;
      47: aload_0
      48: getfield      #18                 // Field classAnalysisName:Ljava/lang/String;
      51: aload_0
      52: getfield      #11                 // Field metadatas:Ljava/util/HashMap;
      55: aload_0
      56: getfield      #12                 // Field loader:Lorg/glassfish/hk2/api/HK2Loader;
      59: aload_0
      60: getfield      #44                 // Field implementationType:Ljava/lang/reflect/Type;
      63: aconst_null
      64: invokespecial #47                 // Method org/glassfish/hk2/internal/ActiveDescriptorBuilderImpl$BuiltActiveDescriptor."<init>":(Ljava/lang/Class;Ljava/util/Set;Ljava/lang/annotation/Annotation;Ljava/lang/Class;Ljava/lang/String;Ljava/util/Set;Lorg/glassfish/hk2/api/DescriptorType;Lorg/glassfish/hk2/api/DescriptorVisibility;ILjava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;Lorg/glassfish/hk2/api/HK2Loader;Ljava/lang/reflect/Type;Lorg/glassfish/hk2/internal/ActiveDescriptorBuilderImpl$1;)V
      67: areturn

  public <T> org.glassfish.hk2.utilities.AbstractActiveDescriptor<T> buildFactory() throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method buildProvideMethod:()Lorg/glassfish/hk2/utilities/AbstractActiveDescriptor;
       4: areturn

  public <T> org.glassfish.hk2.utilities.AbstractActiveDescriptor<T> buildProvideMethod() throws java.lang.IllegalArgumentException;
    Code:
       0: new           #45                 // class org/glassfish/hk2/internal/ActiveDescriptorBuilderImpl$BuiltActiveDescriptor
       3: dup
       4: aload_0
       5: getfield      #19                 // Field implementation:Ljava/lang/Class;
       8: aload_0
       9: getfield      #4                  // Field contracts:Ljava/util/HashSet;
      12: aload_0
      13: getfield      #5                  // Field scopeAnnotation:Ljava/lang/annotation/Annotation;
      16: aload_0
      17: getfield      #7                  // Field scope:Ljava/lang/Class;
      20: aload_0
      21: getfield      #20                 // Field name:Ljava/lang/String;
      24: aload_0
      25: getfield      #8                  // Field qualifiers:Ljava/util/HashSet;
      28: getstatic     #49                 // Field org/glassfish/hk2/api/DescriptorType.PROVIDE_METHOD:Lorg/glassfish/hk2/api/DescriptorType;
      31: aload_0
      32: getfield      #17                 // Field visibility:Lorg/glassfish/hk2/api/DescriptorVisibility;
      35: aload_0
      36: getfield      #13                 // Field rank:I
      39: aload_0
      40: getfield      #14                 // Field proxy:Ljava/lang/Boolean;
      43: aload_0
      44: getfield      #15                 // Field proxyForSameScope:Ljava/lang/Boolean;
      47: aload_0
      48: getfield      #18                 // Field classAnalysisName:Ljava/lang/String;
      51: aload_0
      52: getfield      #11                 // Field metadatas:Ljava/util/HashMap;
      55: aload_0
      56: getfield      #12                 // Field loader:Lorg/glassfish/hk2/api/HK2Loader;
      59: aload_0
      60: getfield      #44                 // Field implementationType:Ljava/lang/reflect/Type;
      63: aconst_null
      64: invokespecial #47                 // Method org/glassfish/hk2/internal/ActiveDescriptorBuilderImpl$BuiltActiveDescriptor."<init>":(Ljava/lang/Class;Ljava/util/Set;Ljava/lang/annotation/Annotation;Ljava/lang/Class;Ljava/lang/String;Ljava/util/Set;Lorg/glassfish/hk2/api/DescriptorType;Lorg/glassfish/hk2/api/DescriptorVisibility;ILjava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;Lorg/glassfish/hk2/api/HK2Loader;Ljava/lang/reflect/Type;Lorg/glassfish/hk2/internal/ActiveDescriptorBuilderImpl$1;)V
      67: areturn
}
