Compiled from "InstanceLifecycleEventType.java"
public final class org.glassfish.hk2.api.InstanceLifecycleEventType extends java.lang.Enum<org.glassfish.hk2.api.InstanceLifecycleEventType> {
  public static final org.glassfish.hk2.api.InstanceLifecycleEventType PRE_PRODUCTION;

  public static final org.glassfish.hk2.api.InstanceLifecycleEventType POST_PRODUCTION;

  public static final org.glassfish.hk2.api.InstanceLifecycleEventType PRE_DESTRUCTION;

  private static final org.glassfish.hk2.api.InstanceLifecycleEventType[] $VALUES;

  public static org.glassfish.hk2.api.InstanceLifecycleEventType[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/glassfish/hk2/api/InstanceLifecycleEventType;
       3: invokevirtual #2                  // Method "[Lorg/glassfish/hk2/api/InstanceLifecycleEventType;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/glassfish/hk2/api/InstanceLifecycleEventType;"
       9: areturn

  public static org.glassfish.hk2.api.InstanceLifecycleEventType valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/glassfish/hk2/api/InstanceLifecycleEventType
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/glassfish/hk2/api/InstanceLifecycleEventType
       9: areturn

  private org.glassfish.hk2.api.InstanceLifecycleEventType();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static {};
    Code:
       0: new           #4                  // class org/glassfish/hk2/api/InstanceLifecycleEventType
       3: dup
       4: ldc           #7                  // String PRE_PRODUCTION
       6: iconst_0
       7: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #9                  // Field PRE_PRODUCTION:Lorg/glassfish/hk2/api/InstanceLifecycleEventType;
      13: new           #4                  // class org/glassfish/hk2/api/InstanceLifecycleEventType
      16: dup
      17: ldc           #10                 // String POST_PRODUCTION
      19: iconst_1
      20: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
      23: putstatic     #11                 // Field POST_PRODUCTION:Lorg/glassfish/hk2/api/InstanceLifecycleEventType;
      26: new           #4                  // class org/glassfish/hk2/api/InstanceLifecycleEventType
      29: dup
      30: ldc           #12                 // String PRE_DESTRUCTION
      32: iconst_2
      33: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
      36: putstatic     #13                 // Field PRE_DESTRUCTION:Lorg/glassfish/hk2/api/InstanceLifecycleEventType;
      39: iconst_3
      40: anewarray     #4                  // class org/glassfish/hk2/api/InstanceLifecycleEventType
      43: dup
      44: iconst_0
      45: getstatic     #9                  // Field PRE_PRODUCTION:Lorg/glassfish/hk2/api/InstanceLifecycleEventType;
      48: aastore
      49: dup
      50: iconst_1
      51: getstatic     #11                 // Field POST_PRODUCTION:Lorg/glassfish/hk2/api/InstanceLifecycleEventType;
      54: aastore
      55: dup
      56: iconst_2
      57: getstatic     #13                 // Field PRE_DESTRUCTION:Lorg/glassfish/hk2/api/InstanceLifecycleEventType;
      60: aastore
      61: putstatic     #1                  // Field $VALUES:[Lorg/glassfish/hk2/api/InstanceLifecycleEventType;
      64: return
}
