Compiled from "WILSA.java"
class com.github.benmanes.caffeine.cache.WILSA<K, V> extends com.github.benmanes.caffeine.cache.WILS<K, V> {
  final com.github.benmanes.caffeine.cache.Ticker ticker;

  final com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderWindowDeque;

  final com.github.benmanes.caffeine.cache.Expiry<K, V> expiry;

  final com.github.benmanes.caffeine.cache.TimerWheel<K, V> timerWheel;

  volatile long expiresAfterAccessNanos;

  final com.github.benmanes.caffeine.cache.MpscGrowableArrayQueue<java.lang.Runnable> writeBuffer;

  final com.github.benmanes.caffeine.cache.Pacer pacer;

  com.github.benmanes.caffeine.cache.WILSA(com.github.benmanes.caffeine.cache.Caffeine<K, V>, com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/WILS."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;Z)V
       7: aload_0
       8: aload_1
       9: invokevirtual #2                  // Method com/github/benmanes/caffeine/cache/Caffeine.getTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      12: putfield      #3                  // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      15: aload_0
      16: aload_1
      17: invokevirtual #4                  // Method com/github/benmanes/caffeine/cache/Caffeine.evicts:()Z
      20: ifne          30
      23: aload_1
      24: invokevirtual #5                  // Method com/github/benmanes/caffeine/cache/Caffeine.expiresAfterAccess:()Z
      27: ifeq          40
      30: new           #6                  // class com/github/benmanes/caffeine/cache/AccessOrderDeque
      33: dup
      34: invokespecial #7                  // Method com/github/benmanes/caffeine/cache/AccessOrderDeque."<init>":()V
      37: goto          41
      40: aconst_null
      41: putfield      #8                  // Field accessOrderWindowDeque:Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      44: aload_0
      45: aload_1
      46: aload_0
      47: getfield      #9                  // Field isAsync:Z
      50: invokevirtual #10                 // Method com/github/benmanes/caffeine/cache/Caffeine.getExpiry:(Z)Lcom/github/benmanes/caffeine/cache/Expiry;
      53: putfield      #11                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
      56: aload_0
      57: aload_1
      58: invokevirtual #12                 // Method com/github/benmanes/caffeine/cache/Caffeine.expiresVariable:()Z
      61: ifeq          75
      64: new           #13                 // class com/github/benmanes/caffeine/cache/TimerWheel
      67: dup
      68: aload_0
      69: invokespecial #14                 // Method com/github/benmanes/caffeine/cache/TimerWheel."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      72: goto          76
      75: aconst_null
      76: putfield      #15                 // Field timerWheel:Lcom/github/benmanes/caffeine/cache/TimerWheel;
      79: aload_0
      80: aload_1
      81: invokevirtual #16                 // Method com/github/benmanes/caffeine/cache/Caffeine.getExpiresAfterAccessNanos:()J
      84: putfield      #17                 // Field expiresAfterAccessNanos:J
      87: aload_0
      88: new           #18                 // class com/github/benmanes/caffeine/cache/MpscGrowableArrayQueue
      91: dup
      92: iconst_4
      93: getstatic     #20                 // Field WRITE_BUFFER_MAX:I
      96: invokespecial #21                 // Method com/github/benmanes/caffeine/cache/MpscGrowableArrayQueue."<init>":(II)V
      99: putfield      #22                 // Field writeBuffer:Lcom/github/benmanes/caffeine/cache/MpscGrowableArrayQueue;
     102: aload_0
     103: aload_1
     104: invokevirtual #23                 // Method com/github/benmanes/caffeine/cache/Caffeine.getScheduler:()Lcom/github/benmanes/caffeine/cache/Scheduler;
     107: invokestatic  #24                 // InterfaceMethod com/github/benmanes/caffeine/cache/Scheduler.disabledScheduler:()Lcom/github/benmanes/caffeine/cache/Scheduler;
     110: if_acmpne     117
     113: aconst_null
     114: goto          128
     117: new           #25                 // class com/github/benmanes/caffeine/cache/Pacer
     120: dup
     121: aload_1
     122: invokevirtual #23                 // Method com/github/benmanes/caffeine/cache/Caffeine.getScheduler:()Lcom/github/benmanes/caffeine/cache/Scheduler;
     125: invokespecial #26                 // Method com/github/benmanes/caffeine/cache/Pacer."<init>":(Lcom/github/benmanes/caffeine/cache/Scheduler;)V
     128: putfield      #27                 // Field pacer:Lcom/github/benmanes/caffeine/cache/Pacer;
     131: return

  public final com.github.benmanes.caffeine.cache.Ticker expirationTicker();
    Code:
       0: aload_0
       1: getfield      #3                  // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
       4: areturn

  protected final com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderWindowDeque();
    Code:
       0: aload_0
       1: getfield      #8                  // Field accessOrderWindowDeque:Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
       4: areturn

  protected final boolean expiresVariable();
    Code:
       0: aload_0
       1: getfield      #15                 // Field timerWheel:Lcom/github/benmanes/caffeine/cache/TimerWheel;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected final com.github.benmanes.caffeine.cache.Expiry<K, V> expiry();
    Code:
       0: aload_0
       1: getfield      #11                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
       4: areturn

  protected final com.github.benmanes.caffeine.cache.TimerWheel<K, V> timerWheel();
    Code:
       0: aload_0
       1: getfield      #15                 // Field timerWheel:Lcom/github/benmanes/caffeine/cache/TimerWheel;
       4: areturn

  protected final boolean expiresAfterAccess();
    Code:
       0: aload_0
       1: getfield      #15                 // Field timerWheel:Lcom/github/benmanes/caffeine/cache/TimerWheel;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected final long expiresAfterAccessNanos();
    Code:
       0: aload_0
       1: getfield      #17                 // Field expiresAfterAccessNanos:J
       4: lreturn

  protected final void setExpiresAfterAccessNanos(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #17                 // Field expiresAfterAccessNanos:J
       5: return

  protected final com.github.benmanes.caffeine.cache.MpscGrowableArrayQueue<java.lang.Runnable> writeBuffer();
    Code:
       0: aload_0
       1: getfield      #22                 // Field writeBuffer:Lcom/github/benmanes/caffeine/cache/MpscGrowableArrayQueue;
       4: areturn

  protected final boolean buffersWrites();
    Code:
       0: iconst_1
       1: ireturn

  public final com.github.benmanes.caffeine.cache.Pacer pacer();
    Code:
       0: aload_0
       1: getfield      #27                 // Field pacer:Lcom/github/benmanes/caffeine/cache/Pacer;
       4: areturn
}
