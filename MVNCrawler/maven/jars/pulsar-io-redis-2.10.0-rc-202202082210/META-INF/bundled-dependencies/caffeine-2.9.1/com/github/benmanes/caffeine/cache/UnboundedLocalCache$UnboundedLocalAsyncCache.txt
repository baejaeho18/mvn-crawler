Compiled from "UnboundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedLocalAsyncCache<K, V> implements com.github.benmanes.caffeine.cache.LocalAsyncCache<K, V>, java.io.Serializable {
  private static final long serialVersionUID;

  final com.github.benmanes.caffeine.cache.UnboundedLocalCache<K, java.util.concurrent.CompletableFuture<V>> cache;

  java.util.concurrent.ConcurrentMap<K, java.util.concurrent.CompletableFuture<V>> mapView;

  com.github.benmanes.caffeine.cache.LocalAsyncCache$CacheView<K, V> cacheView;

  com.github.benmanes.caffeine.cache.Policy<K, V> policy;

  com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedLocalAsyncCache(com.github.benmanes.caffeine.cache.Caffeine<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/github/benmanes/caffeine/cache/UnboundedLocalCache
       8: dup
       9: aload_1
      10: iconst_1
      11: invokespecial #3                  // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Z)V
      14: putfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
      17: return

  public com.github.benmanes.caffeine.cache.UnboundedLocalCache<K, java.util.concurrent.CompletableFuture<V>> cache();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
       4: areturn

  public java.util.concurrent.ConcurrentMap<K, java.util.concurrent.CompletableFuture<V>> asMap();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mapView:Ljava/util/concurrent/ConcurrentMap;
       4: ifnonnull     23
       7: aload_0
       8: new           #6                  // class com/github/benmanes/caffeine/cache/LocalAsyncCache$AsyncAsMapView
      11: dup
      12: aload_0
      13: invokespecial #7                  // Method com/github/benmanes/caffeine/cache/LocalAsyncCache$AsyncAsMapView."<init>":(Lcom/github/benmanes/caffeine/cache/LocalAsyncCache;)V
      16: dup_x1
      17: putfield      #5                  // Field mapView:Ljava/util/concurrent/ConcurrentMap;
      20: goto          27
      23: aload_0
      24: getfield      #5                  // Field mapView:Ljava/util/concurrent/ConcurrentMap;
      27: areturn

  public com.github.benmanes.caffeine.cache.Cache<K, V> synchronous();
    Code:
       0: aload_0
       1: getfield      #8                  // Field cacheView:Lcom/github/benmanes/caffeine/cache/LocalAsyncCache$CacheView;
       4: ifnonnull     23
       7: aload_0
       8: new           #9                  // class com/github/benmanes/caffeine/cache/LocalAsyncCache$CacheView
      11: dup
      12: aload_0
      13: invokespecial #10                 // Method com/github/benmanes/caffeine/cache/LocalAsyncCache$CacheView."<init>":(Lcom/github/benmanes/caffeine/cache/LocalAsyncCache;)V
      16: dup_x1
      17: putfield      #8                  // Field cacheView:Lcom/github/benmanes/caffeine/cache/LocalAsyncCache$CacheView;
      20: goto          27
      23: aload_0
      24: getfield      #8                  // Field cacheView:Lcom/github/benmanes/caffeine/cache/LocalAsyncCache$CacheView;
      27: areturn

  public com.github.benmanes.caffeine.cache.Policy<K, V> policy();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
       4: astore_1
       5: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: astore_2
      11: aload_2
      12: astore_3
      13: aload_0
      14: getfield      #12                 // Field policy:Lcom/github/benmanes/caffeine/cache/Policy;
      17: ifnonnull     37
      20: aload_0
      21: new           #13                 // class com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedPolicy
      24: dup
      25: aload_1
      26: aload_3
      27: invokespecial #14                 // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedPolicy."<init>":(Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;Ljava/util/function/Function;)V
      30: dup_x1
      31: putfield      #12                 // Field policy:Lcom/github/benmanes/caffeine/cache/Policy;
      34: goto          41
      37: aload_0
      38: getfield      #12                 // Field policy:Lcom/github/benmanes/caffeine/cache/Policy;
      41: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException;
    Code:
       0: new           #15                 // class java/io/InvalidObjectException
       3: dup
       4: ldc           #16                 // String Proxy required
       6: invokespecial #17                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
       9: athrow

  java.lang.Object writeReplace();
    Code:
       0: new           #18                 // class com/github/benmanes/caffeine/cache/SerializationProxy
       3: dup
       4: invokespecial #19                 // Method com/github/benmanes/caffeine/cache/SerializationProxy."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
      13: getfield      #20                 // Field com/github/benmanes/caffeine/cache/UnboundedLocalCache.isRecordingStats:Z
      16: putfield      #21                 // Field com/github/benmanes/caffeine/cache/SerializationProxy.isRecordingStats:Z
      19: aload_1
      20: aload_0
      21: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
      24: getfield      #22                 // Field com/github/benmanes/caffeine/cache/UnboundedLocalCache.removalListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
      27: putfield      #23                 // Field com/github/benmanes/caffeine/cache/SerializationProxy.removalListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
      30: aload_1
      31: aload_0
      32: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
      35: getfield      #24                 // Field com/github/benmanes/caffeine/cache/UnboundedLocalCache.ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      38: putfield      #25                 // Field com/github/benmanes/caffeine/cache/SerializationProxy.ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      41: aload_1
      42: aload_0
      43: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
      46: getfield      #26                 // Field com/github/benmanes/caffeine/cache/UnboundedLocalCache.writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      49: putfield      #27                 // Field com/github/benmanes/caffeine/cache/SerializationProxy.writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      52: aload_1
      53: iconst_1
      54: putfield      #28                 // Field com/github/benmanes/caffeine/cache/SerializationProxy.async:Z
      57: aload_1
      58: areturn

  public com.github.benmanes.caffeine.cache.LocalCache cache();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method cache:()Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
       4: areturn
}
