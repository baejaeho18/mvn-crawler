Compiled from "BoundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.BoundedLocalCache$PerformCleanupTask extends java.util.concurrent.ForkJoinTask<java.lang.Void> implements java.lang.Runnable {
  private static final long serialVersionUID;

  final java.lang.ref.WeakReference<com.github.benmanes.caffeine.cache.BoundedLocalCache<?, ?>> reference;

  com.github.benmanes.caffeine.cache.BoundedLocalCache$PerformCleanupTask(com.github.benmanes.caffeine.cache.BoundedLocalCache<?, ?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/ForkJoinTask."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/WeakReference
       8: dup
       9: aload_1
      10: invokespecial #3                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      13: putfield      #4                  // Field reference:Ljava/lang/ref/WeakReference;
      16: return

  public boolean exec();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method run:()V
       4: goto          20
       7: astore_1
       8: getstatic     #7                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.logger:Ljava/util/logging/Logger;
      11: getstatic     #8                  // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      14: ldc           #9                  // String Exception thrown when performing the maintenance task
      16: aload_1
      17: invokevirtual #10                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      20: iconst_0
      21: ireturn
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Throwable

  public void run();
    Code:
       0: aload_0
       1: getfield      #4                  // Field reference:Ljava/lang/ref/WeakReference;
       4: invokevirtual #11                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: checkcast     #12                 // class com/github/benmanes/caffeine/cache/BoundedLocalCache
      10: astore_1
      11: aload_1
      12: ifnull        20
      15: aload_1
      16: aconst_null
      17: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.performCleanUp:(Ljava/lang/Runnable;)V
      20: return

  public java.lang.Void getRawResult();
    Code:
       0: aconst_null
       1: areturn

  public void setRawResult(java.lang.Void);
    Code:
       0: return

  public void complete(java.lang.Void);
    Code:
       0: return

  public void completeExceptionally(java.lang.Throwable);
    Code:
       0: return

  public boolean cancel(boolean);
    Code:
       0: iconst_0
       1: ireturn

  public void setRawResult(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #14                 // class java/lang/Void
       5: invokevirtual #15                 // Method setRawResult:(Ljava/lang/Void;)V
       8: return

  public java.lang.Object getRawResult();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getRawResult:()Ljava/lang/Void;
       4: areturn

  public void complete(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #14                 // class java/lang/Void
       5: invokevirtual #17                 // Method complete:(Ljava/lang/Void;)V
       8: return
}
