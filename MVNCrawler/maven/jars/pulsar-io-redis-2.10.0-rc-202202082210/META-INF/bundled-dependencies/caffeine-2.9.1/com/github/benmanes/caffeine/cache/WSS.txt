Compiled from "WSS.java"
class com.github.benmanes.caffeine.cache.WSS<K, V> extends com.github.benmanes.caffeine.cache.WS<K, V> {
  final com.github.benmanes.caffeine.cache.stats.StatsCounter statsCounter;

  com.github.benmanes.caffeine.cache.WSS(com.github.benmanes.caffeine.cache.Caffeine<K, V>, com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/WS."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;Z)V
       7: aload_0
       8: aload_1
       9: invokevirtual #2                  // Method com/github/benmanes/caffeine/cache/Caffeine.getStatsCounterSupplier:()Ljava/util/function/Supplier;
      12: invokeinterface #3,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      17: checkcast     #4                  // class com/github/benmanes/caffeine/cache/stats/StatsCounter
      20: putfield      #5                  // Field statsCounter:Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      23: return

  public final boolean isRecordingStats();
    Code:
       0: iconst_1
       1: ireturn

  public final com.github.benmanes.caffeine.cache.Ticker statsTicker();
    Code:
       0: invokestatic  #6                  // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.systemTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       3: areturn

  public final com.github.benmanes.caffeine.cache.stats.StatsCounter statsCounter();
    Code:
       0: aload_0
       1: getfield      #5                  // Field statsCounter:Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
       4: areturn
}
