Compiled from "WISW.java"
class com.github.benmanes.caffeine.cache.WISW<K, V> extends com.github.benmanes.caffeine.cache.WIS<K, V> {
  final com.github.benmanes.caffeine.cache.Ticker ticker;

  final com.github.benmanes.caffeine.cache.WriteOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> writeOrderDeque;

  volatile long expiresAfterWriteNanos;

  final com.github.benmanes.caffeine.cache.MpscGrowableArrayQueue<java.lang.Runnable> writeBuffer;

  final com.github.benmanes.caffeine.cache.Pacer pacer;

  com.github.benmanes.caffeine.cache.WISW(com.github.benmanes.caffeine.cache.Caffeine<K, V>, com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/WIS."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;Z)V
       7: aload_0
       8: aload_1
       9: invokevirtual #2                  // Method com/github/benmanes/caffeine/cache/Caffeine.getTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      12: putfield      #3                  // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      15: aload_0
      16: new           #4                  // class com/github/benmanes/caffeine/cache/WriteOrderDeque
      19: dup
      20: invokespecial #5                  // Method com/github/benmanes/caffeine/cache/WriteOrderDeque."<init>":()V
      23: putfield      #6                  // Field writeOrderDeque:Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
      26: aload_0
      27: aload_1
      28: invokevirtual #7                  // Method com/github/benmanes/caffeine/cache/Caffeine.getExpiresAfterWriteNanos:()J
      31: putfield      #8                  // Field expiresAfterWriteNanos:J
      34: aload_0
      35: new           #9                  // class com/github/benmanes/caffeine/cache/MpscGrowableArrayQueue
      38: dup
      39: iconst_4
      40: getstatic     #11                 // Field WRITE_BUFFER_MAX:I
      43: invokespecial #12                 // Method com/github/benmanes/caffeine/cache/MpscGrowableArrayQueue."<init>":(II)V
      46: putfield      #13                 // Field writeBuffer:Lcom/github/benmanes/caffeine/cache/MpscGrowableArrayQueue;
      49: aload_0
      50: aload_1
      51: invokevirtual #14                 // Method com/github/benmanes/caffeine/cache/Caffeine.getScheduler:()Lcom/github/benmanes/caffeine/cache/Scheduler;
      54: invokestatic  #15                 // InterfaceMethod com/github/benmanes/caffeine/cache/Scheduler.disabledScheduler:()Lcom/github/benmanes/caffeine/cache/Scheduler;
      57: if_acmpne     64
      60: aconst_null
      61: goto          75
      64: new           #16                 // class com/github/benmanes/caffeine/cache/Pacer
      67: dup
      68: aload_1
      69: invokevirtual #14                 // Method com/github/benmanes/caffeine/cache/Caffeine.getScheduler:()Lcom/github/benmanes/caffeine/cache/Scheduler;
      72: invokespecial #17                 // Method com/github/benmanes/caffeine/cache/Pacer."<init>":(Lcom/github/benmanes/caffeine/cache/Scheduler;)V
      75: putfield      #18                 // Field pacer:Lcom/github/benmanes/caffeine/cache/Pacer;
      78: return

  public final com.github.benmanes.caffeine.cache.Ticker expirationTicker();
    Code:
       0: aload_0
       1: getfield      #3                  // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
       4: areturn

  protected final com.github.benmanes.caffeine.cache.WriteOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> writeOrderDeque();
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeOrderDeque:Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
       4: areturn

  protected final boolean expiresAfterWrite();
    Code:
       0: iconst_1
       1: ireturn

  protected final long expiresAfterWriteNanos();
    Code:
       0: aload_0
       1: getfield      #8                  // Field expiresAfterWriteNanos:J
       4: lreturn

  protected final void setExpiresAfterWriteNanos(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #8                  // Field expiresAfterWriteNanos:J
       5: return

  protected final com.github.benmanes.caffeine.cache.MpscGrowableArrayQueue<java.lang.Runnable> writeBuffer();
    Code:
       0: aload_0
       1: getfield      #13                 // Field writeBuffer:Lcom/github/benmanes/caffeine/cache/MpscGrowableArrayQueue;
       4: areturn

  protected final boolean buffersWrites();
    Code:
       0: iconst_1
       1: ireturn

  public final com.github.benmanes.caffeine.cache.Pacer pacer();
    Code:
       0: aload_0
       1: getfield      #18                 // Field pacer:Lcom/github/benmanes/caffeine/cache/Pacer;
       4: areturn
}
