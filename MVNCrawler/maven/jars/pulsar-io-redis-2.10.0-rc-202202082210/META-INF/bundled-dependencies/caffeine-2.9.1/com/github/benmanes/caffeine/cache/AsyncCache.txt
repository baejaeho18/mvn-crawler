Compiled from "AsyncCache.java"
public interface com.github.benmanes.caffeine.cache.AsyncCache<K, V> {
  public abstract java.util.concurrent.CompletableFuture<V> getIfPresent(java.lang.Object);

  public abstract java.util.concurrent.CompletableFuture<V> get(K, java.util.function.Function<? super K, ? extends V>);

  public abstract java.util.concurrent.CompletableFuture<V> get(K, java.util.function.BiFunction<? super K, java.util.concurrent.Executor, java.util.concurrent.CompletableFuture<V>>);

  public default java.util.concurrent.CompletableFuture<java.util.Map<K, V>> getAll(java.lang.Iterable<? extends K>, java.util.function.Function<java.lang.Iterable<? extends K>, java.util.Map<K, V>>);
    Code:
       0: new           #1                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #2                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public default java.util.concurrent.CompletableFuture<java.util.Map<K, V>> getAll(java.lang.Iterable<? extends K>, java.util.function.BiFunction<java.lang.Iterable<? extends K>, java.util.concurrent.Executor, java.util.concurrent.CompletableFuture<java.util.Map<K, V>>>);
    Code:
       0: new           #1                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #2                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public abstract void put(K, java.util.concurrent.CompletableFuture<V>);

  public abstract java.util.concurrent.ConcurrentMap<K, java.util.concurrent.CompletableFuture<V>> asMap();

  public abstract com.github.benmanes.caffeine.cache.Cache<K, V> synchronous();
}
