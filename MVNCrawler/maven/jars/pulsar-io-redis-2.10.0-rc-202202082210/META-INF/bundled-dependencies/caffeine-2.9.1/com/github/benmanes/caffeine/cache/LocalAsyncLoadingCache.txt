Compiled from "LocalAsyncLoadingCache.java"
abstract class com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache<K, V> implements com.github.benmanes.caffeine.cache.LocalAsyncCache<K, V>, com.github.benmanes.caffeine.cache.AsyncLoadingCache<K, V> {
  static final java.util.logging.Logger logger;

  final boolean canBulkLoad;

  final com.github.benmanes.caffeine.cache.AsyncCacheLoader<K, V> loader;

  com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$LoadingCacheView<K, V> cacheView;

  com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache(com.github.benmanes.caffeine.cache.AsyncCacheLoader<? super K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
       9: aload_0
      10: aload_1
      11: invokestatic  #3                  // Method canBulkLoad:(Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;)Z
      14: putfield      #4                  // Field canBulkLoad:Z
      17: return

  private static boolean canBulkLoad(com.github.benmanes.caffeine.cache.AsyncCacheLoader<?, ?>);
    Code:
       0: ldc           #5                  // class com/github/benmanes/caffeine/cache/AsyncCacheLoader
       2: astore_1
       3: aload_0
       4: instanceof    #6                  // class com/github/benmanes/caffeine/cache/CacheLoader
       7: ifeq          59
      10: ldc           #6                  // class com/github/benmanes/caffeine/cache/CacheLoader
      12: astore_1
      13: aload_0
      14: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: ldc           #8                  // String loadAll
      19: iconst_1
      20: anewarray     #9                  // class java/lang/Class
      23: dup
      24: iconst_0
      25: ldc           #10                 // class java/lang/Iterable
      27: aastore
      28: invokevirtual #11                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      31: astore_2
      32: ldc           #6                  // class com/github/benmanes/caffeine/cache/CacheLoader
      34: ldc           #8                  // String loadAll
      36: iconst_1
      37: anewarray     #9                  // class java/lang/Class
      40: dup
      41: iconst_0
      42: ldc           #10                 // class java/lang/Iterable
      44: aastore
      45: invokevirtual #11                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      48: astore_3
      49: aload_2
      50: aload_3
      51: invokevirtual #12                 // Method java/lang/reflect/Method.equals:(Ljava/lang/Object;)Z
      54: ifne          59
      57: iconst_1
      58: ireturn
      59: aload_0
      60: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      63: ldc           #13                 // String asyncLoadAll
      65: iconst_2
      66: anewarray     #9                  // class java/lang/Class
      69: dup
      70: iconst_0
      71: ldc           #10                 // class java/lang/Iterable
      73: aastore
      74: dup
      75: iconst_1
      76: ldc           #14                 // class java/util/concurrent/Executor
      78: aastore
      79: invokevirtual #11                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      82: astore_2
      83: aload_1
      84: ldc           #13                 // String asyncLoadAll
      86: iconst_2
      87: anewarray     #9                  // class java/lang/Class
      90: dup
      91: iconst_0
      92: ldc           #10                 // class java/lang/Iterable
      94: aastore
      95: dup
      96: iconst_1
      97: ldc           #14                 // class java/util/concurrent/Executor
      99: aastore
     100: invokevirtual #11                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     103: astore_3
     104: aload_2
     105: aload_3
     106: invokevirtual #12                 // Method java/lang/reflect/Method.equals:(Ljava/lang/Object;)Z
     109: ifne          116
     112: iconst_1
     113: goto          117
     116: iconst_0
     117: ireturn
     118: astore_1
     119: getstatic     #17                 // Field logger:Ljava/util/logging/Logger;
     122: getstatic     #18                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     125: ldc           #19                 // String Cannot determine if CacheLoader can bulk load
     127: aload_1
     128: invokevirtual #20                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     131: iconst_0
     132: ireturn
    Exception table:
       from    to  target type
           0    58   118   Class java/lang/NoSuchMethodException
           0    58   118   Class java/lang/SecurityException
          59   117   118   Class java/lang/NoSuchMethodException
          59   117   118   Class java/lang/SecurityException

  public java.util.concurrent.CompletableFuture<V> get(K);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #2                  // Field loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
       6: dup
       7: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: invokedynamic #22,  0             // InvokeDynamic #0:apply:(Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;)Ljava/util/function/BiFunction;
      16: invokevirtual #23                 // Method get:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
      19: areturn

  public java.util.concurrent.CompletableFuture<java.util.Map<K, V>> getAll(java.lang.Iterable<? extends K>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field canBulkLoad:Z
       4: ifeq          27
       7: aload_0
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
      13: dup
      14: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: invokedynamic #24,  0             // InvokeDynamic #1:apply:(Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;)Ljava/util/function/BiFunction;
      23: invokevirtual #25                 // Method getAll:(Ljava/lang/Iterable;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
      26: areturn
      27: new           #26                 // class java/util/LinkedHashMap
      30: dup
      31: invokespecial #27                 // Method java/util/LinkedHashMap."<init>":()V
      34: astore_2
      35: aload_0
      36: invokedynamic #28,  0             // InvokeDynamic #2:apply:(Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache;)Ljava/util/function/Function;
      41: astore_3
      42: aload_1
      43: invokeinterface #29,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      48: astore        4
      50: aload         4
      52: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          92
      60: aload         4
      62: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: astore        5
      69: aload_2
      70: aload         5
      72: aload_3
      73: invokeinterface #32,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      78: checkcast     #33                 // class java/util/concurrent/CompletableFuture
      81: astore        6
      83: aload         6
      85: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: goto          50
      92: aload_0
      93: aload_2
      94: invokevirtual #34                 // Method composeResult:(Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;
      97: areturn

  public com.github.benmanes.caffeine.cache.LoadingCache<K, V> synchronous();
    Code:
       0: aload_0
       1: getfield      #35                 // Field cacheView:Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache$LoadingCacheView;
       4: ifnonnull     23
       7: aload_0
       8: new           #36                 // class com/github/benmanes/caffeine/cache/LocalAsyncLoadingCache$LoadingCacheView
      11: dup
      12: aload_0
      13: invokespecial #37                 // Method com/github/benmanes/caffeine/cache/LocalAsyncLoadingCache$LoadingCacheView."<init>":(Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache;)V
      16: dup_x1
      17: putfield      #35                 // Field cacheView:Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache$LoadingCacheView;
      20: goto          27
      23: aload_0
      24: getfield      #35                 // Field cacheView:Lcom/github/benmanes/caffeine/cache/LocalAsyncLoadingCache$LoadingCacheView;
      27: areturn

  public com.github.benmanes.caffeine.cache.Cache synchronous();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method synchronous:()Lcom/github/benmanes/caffeine/cache/LoadingCache;
       4: areturn

  static {};
    Code:
       0: ldc           #39                 // class com/github/benmanes/caffeine/cache/LocalAsyncLoadingCache
       2: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #41                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #17                 // Field logger:Ljava/util/logging/Logger;
      11: return
}
