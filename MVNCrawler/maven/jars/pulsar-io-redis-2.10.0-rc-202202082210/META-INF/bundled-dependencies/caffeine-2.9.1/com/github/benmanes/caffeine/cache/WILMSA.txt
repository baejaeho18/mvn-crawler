Compiled from "WILMSA.java"
class com.github.benmanes.caffeine.cache.WILMSA<K, V> extends com.github.benmanes.caffeine.cache.WILMS<K, V> {
  final com.github.benmanes.caffeine.cache.Ticker ticker;

  final com.github.benmanes.caffeine.cache.Expiry<K, V> expiry;

  final com.github.benmanes.caffeine.cache.TimerWheel<K, V> timerWheel;

  volatile long expiresAfterAccessNanos;

  final com.github.benmanes.caffeine.cache.Pacer pacer;

  com.github.benmanes.caffeine.cache.WILMSA(com.github.benmanes.caffeine.cache.Caffeine<K, V>, com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/WILMS."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;Z)V
       7: aload_0
       8: aload_1
       9: invokevirtual #2                  // Method com/github/benmanes/caffeine/cache/Caffeine.getTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      12: putfield      #3                  // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      15: aload_0
      16: aload_1
      17: aload_0
      18: getfield      #4                  // Field isAsync:Z
      21: invokevirtual #5                  // Method com/github/benmanes/caffeine/cache/Caffeine.getExpiry:(Z)Lcom/github/benmanes/caffeine/cache/Expiry;
      24: putfield      #6                  // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
      27: aload_0
      28: aload_1
      29: invokevirtual #7                  // Method com/github/benmanes/caffeine/cache/Caffeine.expiresVariable:()Z
      32: ifeq          46
      35: new           #8                  // class com/github/benmanes/caffeine/cache/TimerWheel
      38: dup
      39: aload_0
      40: invokespecial #9                  // Method com/github/benmanes/caffeine/cache/TimerWheel."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      43: goto          47
      46: aconst_null
      47: putfield      #10                 // Field timerWheel:Lcom/github/benmanes/caffeine/cache/TimerWheel;
      50: aload_0
      51: aload_1
      52: invokevirtual #11                 // Method com/github/benmanes/caffeine/cache/Caffeine.getExpiresAfterAccessNanos:()J
      55: putfield      #12                 // Field expiresAfterAccessNanos:J
      58: aload_0
      59: aload_1
      60: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/Caffeine.getScheduler:()Lcom/github/benmanes/caffeine/cache/Scheduler;
      63: invokestatic  #14                 // InterfaceMethod com/github/benmanes/caffeine/cache/Scheduler.disabledScheduler:()Lcom/github/benmanes/caffeine/cache/Scheduler;
      66: if_acmpne     73
      69: aconst_null
      70: goto          84
      73: new           #15                 // class com/github/benmanes/caffeine/cache/Pacer
      76: dup
      77: aload_1
      78: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/Caffeine.getScheduler:()Lcom/github/benmanes/caffeine/cache/Scheduler;
      81: invokespecial #16                 // Method com/github/benmanes/caffeine/cache/Pacer."<init>":(Lcom/github/benmanes/caffeine/cache/Scheduler;)V
      84: putfield      #17                 // Field pacer:Lcom/github/benmanes/caffeine/cache/Pacer;
      87: return

  public final com.github.benmanes.caffeine.cache.Ticker expirationTicker();
    Code:
       0: aload_0
       1: getfield      #3                  // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
       4: areturn

  protected final boolean expiresVariable();
    Code:
       0: aload_0
       1: getfield      #10                 // Field timerWheel:Lcom/github/benmanes/caffeine/cache/TimerWheel;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected final com.github.benmanes.caffeine.cache.Expiry<K, V> expiry();
    Code:
       0: aload_0
       1: getfield      #6                  // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
       4: areturn

  protected final com.github.benmanes.caffeine.cache.TimerWheel<K, V> timerWheel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field timerWheel:Lcom/github/benmanes/caffeine/cache/TimerWheel;
       4: areturn

  protected final boolean expiresAfterAccess();
    Code:
       0: aload_0
       1: getfield      #10                 // Field timerWheel:Lcom/github/benmanes/caffeine/cache/TimerWheel;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected final long expiresAfterAccessNanos();
    Code:
       0: aload_0
       1: getfield      #12                 // Field expiresAfterAccessNanos:J
       4: lreturn

  protected final void setExpiresAfterAccessNanos(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #12                 // Field expiresAfterAccessNanos:J
       5: return

  public final com.github.benmanes.caffeine.cache.Pacer pacer();
    Code:
       0: aload_0
       1: getfield      #17                 // Field pacer:Lcom/github/benmanes/caffeine/cache/Pacer;
       4: areturn
}
