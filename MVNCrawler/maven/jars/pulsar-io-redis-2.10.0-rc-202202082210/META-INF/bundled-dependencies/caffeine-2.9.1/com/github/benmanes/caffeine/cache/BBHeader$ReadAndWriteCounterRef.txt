Compiled from "BoundedBuffer.java"
abstract class com.github.benmanes.caffeine.cache.BBHeader$ReadAndWriteCounterRef extends com.github.benmanes.caffeine.cache.BBHeader$PadWriteCounter {
  static final long WRITE_OFFSET;

  volatile long writeCounter;

  com.github.benmanes.caffeine.cache.BBHeader$ReadAndWriteCounterRef();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/BBHeader$PadWriteCounter."<init>":()V
       4: getstatic     #2                  // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       7: aload_0
       8: getstatic     #3                  // Field WRITE_OFFSET:J
      11: lconst_1
      12: invokevirtual #4                  // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      15: return

  long relaxedWriteCounter();
    Code:
       0: getstatic     #2                  // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #3                  // Field WRITE_OFFSET:J
       7: invokevirtual #5                  // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      10: lreturn

  boolean casWriteCounter(long, long);
    Code:
       0: getstatic     #2                  // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #3                  // Field WRITE_OFFSET:J
       7: lload_1
       8: lload_3
       9: invokevirtual #6                  // Method sun/misc/Unsafe.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      12: ireturn

  static {};
    Code:
       0: ldc           #7                  // class com/github/benmanes/caffeine/cache/BBHeader$ReadAndWriteCounterRef
       2: ldc           #8                  // String writeCounter
       4: invokestatic  #9                  // Method com/github/benmanes/caffeine/cache/UnsafeAccess.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
       7: putstatic     #3                  // Field WRITE_OFFSET:J
      10: return
}
