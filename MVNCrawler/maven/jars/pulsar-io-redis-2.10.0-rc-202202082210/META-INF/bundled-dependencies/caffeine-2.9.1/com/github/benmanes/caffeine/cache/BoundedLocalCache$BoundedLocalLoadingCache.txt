Compiled from "BoundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalLoadingCache<K, V> extends com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalManualCache<K, V> implements com.github.benmanes.caffeine.cache.LocalLoadingCache<K, V> {
  private static final long serialVersionUID;

  final java.util.function.Function<K, V> mappingFunction;

  final java.util.function.Function<java.lang.Iterable<? extends K>, java.util.Map<K, V>> bulkMappingFunction;

  com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalLoadingCache(com.github.benmanes.caffeine.cache.Caffeine<K, V>, com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;)V
       6: aload_2
       7: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: aload_2
      13: invokestatic  #3                  // InterfaceMethod com/github/benmanes/caffeine/cache/LocalLoadingCache.newMappingFunction:(Lcom/github/benmanes/caffeine/cache/CacheLoader;)Ljava/util/function/Function;
      16: putfield      #4                  // Field mappingFunction:Ljava/util/function/Function;
      19: aload_0
      20: aload_2
      21: invokestatic  #5                  // InterfaceMethod com/github/benmanes/caffeine/cache/LocalLoadingCache.newBulkMappingFunction:(Lcom/github/benmanes/caffeine/cache/CacheLoader;)Ljava/util/function/Function;
      24: putfield      #6                  // Field bulkMappingFunction:Ljava/util/function/Function;
      27: return

  public com.github.benmanes.caffeine.cache.CacheLoader<? super K, V> cacheLoader();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: getfield      #8                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.cacheLoader:Lcom/github/benmanes/caffeine/cache/CacheLoader;
       7: areturn

  public java.util.function.Function<K, V> mappingFunction();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mappingFunction:Ljava/util/function/Function;
       4: areturn

  public java.util.function.Function<java.lang.Iterable<? extends K>, java.util.Map<K, V>> bulkMappingFunction();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bulkMappingFunction:Ljava/util/function/Function;
       4: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException;
    Code:
       0: new           #9                  // class java/io/InvalidObjectException
       3: dup
       4: ldc           #10                 // String Proxy required
       6: invokespecial #11                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
       9: athrow

  java.lang.Object writeReplace();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.writeReplace:()Ljava/lang/Object;
       4: checkcast     #13                 // class com/github/benmanes/caffeine/cache/SerializationProxy
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      12: invokevirtual #14                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.refreshAfterWrite:()Z
      15: ifeq          29
      18: aload_1
      19: aload_0
      20: getfield      #7                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      23: invokevirtual #15                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.refreshAfterWriteNanos:()J
      26: putfield      #16                 // Field com/github/benmanes/caffeine/cache/SerializationProxy.refreshAfterWriteNanos:J
      29: aload_1
      30: aload_0
      31: getfield      #7                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      34: getfield      #8                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.cacheLoader:Lcom/github/benmanes/caffeine/cache/CacheLoader;
      37: putfield      #17                 // Field com/github/benmanes/caffeine/cache/SerializationProxy.loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
      40: aload_1
      41: areturn
}
