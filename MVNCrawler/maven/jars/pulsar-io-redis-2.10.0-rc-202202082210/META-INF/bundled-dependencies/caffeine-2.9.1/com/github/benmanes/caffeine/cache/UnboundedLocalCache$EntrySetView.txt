Compiled from "UnboundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySetView<K, V> extends java.util.AbstractSet<java.util.Map$Entry<K, V>> {
  final com.github.benmanes.caffeine.cache.UnboundedLocalCache<K, V> cache;

  com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySetView(com.github.benmanes.caffeine.cache.UnboundedLocalCache<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractSet."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class com/github/benmanes/caffeine/cache/UnboundedLocalCache
      12: putfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
      15: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
       4: invokevirtual #5                  // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache.isEmpty:()Z
       7: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
       4: invokevirtual #6                  // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache.size:()I
       7: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
       4: invokevirtual #7                  // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache.clear:()V
       7: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #8                  // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #8                  // class java/util/Map$Entry
      13: astore_2
      14: aload_0
      15: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
      18: aload_2
      19: invokeinterface #9,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      24: invokevirtual #10                 // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: astore_3
      28: aload_3
      29: ifnull        49
      32: aload_3
      33: aload_2
      34: invokeinterface #11,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      39: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #8                  // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #8                  // class java/util/Map$Entry
      13: astore_2
      14: aload_0
      15: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
      18: aload_2
      19: invokeinterface #9,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      24: aload_2
      25: invokeinterface #11,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      30: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      33: ireturn

  public boolean removeIf(java.util.function.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_0
       6: istore_2
       7: aload_0
       8: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
      11: getfield      #14                 // Field com/github/benmanes/caffeine/cache/UnboundedLocalCache.data:Ljava/util/concurrent/ConcurrentHashMap;
      14: invokevirtual #15                 // Method java/util/concurrent/ConcurrentHashMap.entrySet:()Ljava/util/Set;
      17: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          81
      32: aload_3
      33: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #8                  // class java/util/Map$Entry
      41: astore        4
      43: aload_1
      44: aload         4
      46: invokeinterface #19,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      51: ifeq          78
      54: iload_2
      55: aload_0
      56: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
      59: aload         4
      61: invokeinterface #9,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      66: aload         4
      68: invokeinterface #11,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      73: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      76: ior
      77: istore_2
      78: goto          23
      81: iload_2
      82: ireturn

  public java.util.Iterator<java.util.Map$Entry<K, V>> iterator();
    Code:
       0: new           #20                 // class com/github/benmanes/caffeine/cache/UnboundedLocalCache$EntryIterator
       3: dup
       4: aload_0
       5: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
       8: invokespecial #21                 // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache$EntryIterator."<init>":(Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;)V
      11: areturn

  public java.util.Spliterator<java.util.Map$Entry<K, V>> spliterator();
    Code:
       0: new           #22                 // class com/github/benmanes/caffeine/cache/UnboundedLocalCache$EntrySpliterator
       3: dup
       4: aload_0
       5: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;
       8: invokespecial #23                 // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache$EntrySpliterator."<init>":(Lcom/github/benmanes/caffeine/cache/UnboundedLocalCache;)V
      11: areturn
}
