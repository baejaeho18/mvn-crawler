Compiled from "BoundedLocalCache.java"
class com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalManualCache<K, V> implements com.github.benmanes.caffeine.cache.LocalManualCache<K, V>, java.io.Serializable {
  private static final long serialVersionUID;

  final com.github.benmanes.caffeine.cache.BoundedLocalCache<K, V> cache;

  final boolean isWeighted;

  com.github.benmanes.caffeine.cache.Policy<K, V> policy;

  com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalManualCache(com.github.benmanes.caffeine.cache.Caffeine<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;)V
       6: return

  com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalManualCache(com.github.benmanes.caffeine.cache.Caffeine<K, V>, com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: iconst_0
       8: invokestatic  #3                  // Method com/github/benmanes/caffeine/cache/LocalCacheFactory.newBoundedLocalCache:(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;Z)Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      11: putfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      14: aload_0
      15: aload_1
      16: invokevirtual #5                  // Method com/github/benmanes/caffeine/cache/Caffeine.isWeighted:()Z
      19: putfield      #6                  // Field isWeighted:Z
      22: return

  public com.github.benmanes.caffeine.cache.BoundedLocalCache<K, V> cache();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: areturn

  public com.github.benmanes.caffeine.cache.Policy<K, V> policy();
    Code:
       0: aload_0
       1: getfield      #7                  // Field policy:Lcom/github/benmanes/caffeine/cache/Policy;
       4: ifnonnull     33
       7: aload_0
       8: new           #8                  // class com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy
      11: dup
      12: aload_0
      13: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      16: invokestatic  #9                  // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
      19: aload_0
      20: getfield      #6                  // Field isWeighted:Z
      23: invokespecial #10                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/util/function/Function;Z)V
      26: dup_x1
      27: putfield      #7                  // Field policy:Lcom/github/benmanes/caffeine/cache/Policy;
      30: goto          37
      33: aload_0
      34: getfield      #7                  // Field policy:Lcom/github/benmanes/caffeine/cache/Policy;
      37: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException;
    Code:
       0: new           #11                 // class java/io/InvalidObjectException
       3: dup
       4: ldc           #12                 // String Proxy required
       6: invokespecial #13                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
       9: athrow

  java.lang.Object writeReplace();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: aload_0
       5: getfield      #6                  // Field isWeighted:Z
       8: invokestatic  #14                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.makeSerializationProxy:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Z)Lcom/github/benmanes/caffeine/cache/SerializationProxy;
      11: areturn

  public com.github.benmanes.caffeine.cache.LocalCache cache();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method cache:()Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: areturn
}
