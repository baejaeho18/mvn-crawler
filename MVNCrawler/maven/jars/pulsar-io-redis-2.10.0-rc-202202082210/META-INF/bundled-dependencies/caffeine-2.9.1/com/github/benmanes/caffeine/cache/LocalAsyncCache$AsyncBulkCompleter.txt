Compiled from "LocalAsyncCache.java"
public final class com.github.benmanes.caffeine.cache.LocalAsyncCache$AsyncBulkCompleter<K, V> implements java.util.function.BiConsumer<java.util.Map<K, V>, java.lang.Throwable> {
  private final com.github.benmanes.caffeine.cache.LocalCache<K, java.util.concurrent.CompletableFuture<V>> cache;

  private final java.util.Map<K, java.util.concurrent.CompletableFuture<V>> proxies;

  private final long startTime;

  com.github.benmanes.caffeine.cache.LocalAsyncCache$AsyncBulkCompleter(com.github.benmanes.caffeine.cache.LocalCache<K, java.util.concurrent.CompletableFuture<V>>, java.util.Map<K, java.util.concurrent.CompletableFuture<V>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      11: invokeinterface #3,  1            // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      16: putfield      #4                  // Field startTime:J
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field proxies:Ljava/util/Map;
      24: aload_0
      25: aload_1
      26: putfield      #6                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      29: return

  public void accept(java.util.Map<K, V>, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
       4: invokeinterface #2,  1            // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       9: invokeinterface #3,  1            // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      14: aload_0
      15: getfield      #4                  // Field startTime:J
      18: lsub
      19: lstore_3
      20: aload_1
      21: ifnonnull     145
      24: aload_2
      25: ifnonnull     36
      28: new           #7                  // class com/github/benmanes/caffeine/cache/LocalAsyncCache$AsyncBulkCompleter$NullMapCompletionException
      31: dup
      32: invokespecial #8                  // Method com/github/benmanes/caffeine/cache/LocalAsyncCache$AsyncBulkCompleter$NullMapCompletionException."<init>":()V
      35: astore_2
      36: aload_0
      37: getfield      #5                  // Field proxies:Ljava/util/Map;
      40: invokeinterface #9,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      45: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      50: astore        5
      52: aload         5
      54: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          115
      62: aload         5
      64: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #13                 // class java/util/Map$Entry
      72: astore        6
      74: aload_0
      75: getfield      #6                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      78: aload         6
      80: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      85: aload         6
      87: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      92: invokeinterface #16,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      97: pop
      98: aload         6
     100: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     105: checkcast     #17                 // class java/util/concurrent/CompletableFuture
     108: aload_2
     109: invokevirtual #18                 // Method java/util/concurrent/CompletableFuture.obtrudeException:(Ljava/lang/Throwable;)V
     112: goto          52
     115: aload_0
     116: getfield      #6                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
     119: invokeinterface #19,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     124: lload_3
     125: invokeinterface #20,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadFailure:(J)V
     130: getstatic     #21                 // Field com/github/benmanes/caffeine/cache/LocalAsyncCache.logger:Ljava/util/logging/Logger;
     133: getstatic     #22                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     136: ldc           #23                 // String Exception thrown during asynchronous load
     138: aload_2
     139: invokevirtual #24                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     142: goto          170
     145: aload_0
     146: aload_1
     147: invokespecial #25                 // Method fillProxies:(Ljava/util/Map;)V
     150: aload_0
     151: aload_1
     152: invokespecial #26                 // Method addNewEntries:(Ljava/util/Map;)V
     155: aload_0
     156: getfield      #6                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
     159: invokeinterface #19,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     164: lload_3
     165: invokeinterface #27,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadSuccess:(J)V
     170: return

  private void fillProxies(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field proxies:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: invokedynamic #28,  0             // InvokeDynamic #0:accept:(Lcom/github/benmanes/caffeine/cache/LocalAsyncCache$AsyncBulkCompleter;Ljava/util/Map;)Ljava/util/function/BiConsumer;
      11: invokeinterface #29,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      16: return

  private void addNewEntries(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field proxies:Ljava/util/Map;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/Map.size:()I
       9: aload_1
      10: invokeinterface #30,  1           // InterfaceMethod java/util/Map.size:()I
      15: if_icmpne     19
      18: return
      19: aload_1
      20: aload_0
      21: invokedynamic #31,  0             // InvokeDynamic #1:accept:(Lcom/github/benmanes/caffeine/cache/LocalAsyncCache$AsyncBulkCompleter;)Ljava/util/function/BiConsumer;
      26: invokeinterface #29,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      31: return

  public void accept(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #32                 // class java/util/Map
       5: aload_2
       6: checkcast     #33                 // class java/lang/Throwable
       9: invokevirtual #34                 // Method accept:(Ljava/util/Map;Ljava/lang/Throwable;)V
      12: return

  private void lambda$addNewEntries$1(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field proxies:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifne          28
      13: aload_0
      14: getfield      #6                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      17: aload_1
      18: aload_2
      19: invokestatic  #36                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      22: invokeinterface #37,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  private void lambda$fillProxies$0(java.util.Map, java.lang.Object, java.util.concurrent.CompletableFuture);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore        4
       9: aload_3
      10: aload         4
      12: invokevirtual #39                 // Method java/util/concurrent/CompletableFuture.obtrudeValue:(Ljava/lang/Object;)V
      15: aload         4
      17: ifnonnull     35
      20: aload_0
      21: getfield      #6                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      24: aload_2
      25: aload_3
      26: invokeinterface #16,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      31: pop
      32: goto          48
      35: aload_0
      36: getfield      #6                  // Field cache:Lcom/github/benmanes/caffeine/cache/LocalCache;
      39: aload_2
      40: aload_3
      41: aload_3
      42: invokeinterface #40,  4           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      47: pop
      48: return
}
