Compiled from "BoundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalAsyncLoadingCache<K, V> extends com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache<K, V> implements java.io.Serializable {
  private static final long serialVersionUID;

  final com.github.benmanes.caffeine.cache.BoundedLocalCache<K, java.util.concurrent.CompletableFuture<V>> cache;

  final boolean isWeighted;

  java.util.concurrent.ConcurrentMap<K, java.util.concurrent.CompletableFuture<V>> mapView;

  com.github.benmanes.caffeine.cache.Policy<K, V> policy;

  com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalAsyncLoadingCache(com.github.benmanes.caffeine.cache.Caffeine<K, V>, com.github.benmanes.caffeine.cache.AsyncCacheLoader<? super K, V>);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/LocalAsyncLoadingCache."<init>":(Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #2                  // Method com/github/benmanes/caffeine/cache/Caffeine.isWeighted:()Z
      10: putfield      #3                  // Field isWeighted:Z
      13: aload_0
      14: aload_1
      15: new           #4                  // class com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalAsyncLoadingCache$AsyncLoader
      18: dup
      19: aload_2
      20: aload_1
      21: invokespecial #5                  // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalAsyncLoadingCache$AsyncLoader."<init>":(Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;Lcom/github/benmanes/caffeine/cache/Caffeine;)V
      24: iconst_1
      25: invokestatic  #6                  // Method com/github/benmanes/caffeine/cache/LocalCacheFactory.newBoundedLocalCache:(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;Z)Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      28: putfield      #7                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      31: return

  public com.github.benmanes.caffeine.cache.BoundedLocalCache<K, java.util.concurrent.CompletableFuture<V>> cache();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: areturn

  public java.util.concurrent.ConcurrentMap<K, java.util.concurrent.CompletableFuture<V>> asMap();
    Code:
       0: aload_0
       1: getfield      #8                  // Field mapView:Ljava/util/concurrent/ConcurrentMap;
       4: ifnonnull     23
       7: aload_0
       8: new           #9                  // class com/github/benmanes/caffeine/cache/LocalAsyncCache$AsyncAsMapView
      11: dup
      12: aload_0
      13: invokespecial #10                 // Method com/github/benmanes/caffeine/cache/LocalAsyncCache$AsyncAsMapView."<init>":(Lcom/github/benmanes/caffeine/cache/LocalAsyncCache;)V
      16: dup_x1
      17: putfield      #8                  // Field mapView:Ljava/util/concurrent/ConcurrentMap;
      20: goto          27
      23: aload_0
      24: getfield      #8                  // Field mapView:Ljava/util/concurrent/ConcurrentMap;
      27: areturn

  public com.github.benmanes.caffeine.cache.Policy<K, V> policy();
    Code:
       0: aload_0
       1: getfield      #11                 // Field policy:Lcom/github/benmanes/caffeine/cache/Policy;
       4: ifnonnull     37
       7: aload_0
       8: getfield      #7                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      11: astore_1
      12: invokedynamic #12,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      17: astore_2
      18: aload_2
      19: astore_3
      20: aload_0
      21: new           #13                 // class com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy
      24: dup
      25: aload_1
      26: aload_3
      27: aload_0
      28: getfield      #3                  // Field isWeighted:Z
      31: invokespecial #14                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/util/function/Function;Z)V
      34: putfield      #11                 // Field policy:Lcom/github/benmanes/caffeine/cache/Policy;
      37: aload_0
      38: getfield      #11                 // Field policy:Lcom/github/benmanes/caffeine/cache/Policy;
      41: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException;
    Code:
       0: new           #15                 // class java/io/InvalidObjectException
       3: dup
       4: ldc           #16                 // String Proxy required
       6: invokespecial #17                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
       9: athrow

  java.lang.Object writeReplace();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: aload_0
       5: getfield      #3                  // Field isWeighted:Z
       8: invokestatic  #18                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.makeSerializationProxy:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Z)Lcom/github/benmanes/caffeine/cache/SerializationProxy;
      11: astore_1
      12: aload_0
      13: getfield      #7                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      16: invokevirtual #19                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.refreshAfterWrite:()Z
      19: ifeq          33
      22: aload_1
      23: aload_0
      24: getfield      #7                  // Field cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      27: invokevirtual #20                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.refreshAfterWriteNanos:()J
      30: putfield      #21                 // Field com/github/benmanes/caffeine/cache/SerializationProxy.refreshAfterWriteNanos:J
      33: aload_1
      34: aload_0
      35: getfield      #22                 // Field loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
      38: putfield      #23                 // Field com/github/benmanes/caffeine/cache/SerializationProxy.loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
      41: aload_1
      42: iconst_1
      43: putfield      #24                 // Field com/github/benmanes/caffeine/cache/SerializationProxy.async:Z
      46: aload_1
      47: areturn

  public com.github.benmanes.caffeine.cache.LocalCache cache();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method cache:()Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       4: areturn
}
