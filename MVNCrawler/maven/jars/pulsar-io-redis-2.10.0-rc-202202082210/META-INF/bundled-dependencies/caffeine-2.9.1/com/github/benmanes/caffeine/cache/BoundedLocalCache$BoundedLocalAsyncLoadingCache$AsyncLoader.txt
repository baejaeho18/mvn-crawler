Compiled from "BoundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalAsyncLoadingCache$AsyncLoader<K, V> implements com.github.benmanes.caffeine.cache.CacheLoader<K, V> {
  final com.github.benmanes.caffeine.cache.AsyncCacheLoader<? super K, V> loader;

  final java.util.concurrent.Executor executor;

  com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalAsyncLoadingCache$AsyncLoader(com.github.benmanes.caffeine.cache.AsyncCacheLoader<? super K, V>, com.github.benmanes.caffeine.cache.Caffeine<?, ?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: invokevirtual #2                  // Method com/github/benmanes/caffeine/cache/Caffeine.getExecutor:()Ljava/util/concurrent/Executor;
       9: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/util/concurrent/Executor
      15: putfield      #5                  // Field executor:Ljava/util/concurrent/Executor;
      18: aload_0
      19: aload_1
      20: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #6                  // class com/github/benmanes/caffeine/cache/AsyncCacheLoader
      26: putfield      #7                  // Field loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
      29: return

  public V load(K);
    Code:
       0: aload_0
       1: getfield      #7                  // Field loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
       4: aload_1
       5: aload_0
       6: getfield      #5                  // Field executor:Ljava/util/concurrent/Executor;
       9: invokeinterface #8,  3            // InterfaceMethod com/github/benmanes/caffeine/cache/AsyncCacheLoader.asyncLoad:(Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      14: astore_2
      15: aload_2
      16: areturn

  public V reload(K, V);
    Code:
       0: aload_0
       1: getfield      #7                  // Field loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #5                  // Field executor:Ljava/util/concurrent/Executor;
      10: invokeinterface #9,  4            // InterfaceMethod com/github/benmanes/caffeine/cache/AsyncCacheLoader.asyncReload:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      15: astore_3
      16: aload_3
      17: areturn

  public java.util.concurrent.CompletableFuture<V> asyncReload(K, V, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: getfield      #7                  // Field loader:Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #9,  4            // InterfaceMethod com/github/benmanes/caffeine/cache/AsyncCacheLoader.asyncReload:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      12: areturn
}
