Compiled from "LocalLoadingCache.java"
interface com.github.benmanes.caffeine.cache.LocalLoadingCache<K, V> extends com.github.benmanes.caffeine.cache.LocalManualCache<K, V>, com.github.benmanes.caffeine.cache.LoadingCache<K, V> {
  public static final java.util.logging.Logger logger;

  public abstract com.github.benmanes.caffeine.cache.CacheLoader<? super K, V> cacheLoader();

  public abstract java.util.function.Function<K, V> mappingFunction();

  public abstract java.util.function.Function<java.lang.Iterable<? extends K>, java.util.Map<K, V>> bulkMappingFunction();

  public default V get(K);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: aload_1
       7: aload_0
       8: invokeinterface #2,  1            // InterfaceMethod mappingFunction:()Ljava/util/function/Function;
      13: invokeinterface #3,  3            // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      18: areturn

  public default java.util.Map<K, V> getAll(java.lang.Iterable<? extends K>);
    Code:
       0: aload_0
       1: invokeinterface #4,  1            // InterfaceMethod bulkMappingFunction:()Ljava/util/function/Function;
       6: astore_2
       7: aload_2
       8: ifnonnull     21
      11: aload_0
      12: aload_1
      13: invokeinterface #5,  2            // InterfaceMethod loadSequentially:(Ljava/lang/Iterable;)Ljava/util/Map;
      18: goto          29
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokeinterface #6,  3            // InterfaceMethod getAll:(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/util/Map;
      29: areturn

  public default java.util.Map<K, V> loadSequentially(java.lang.Iterable<? extends K>);
    Code:
       0: new           #7                  // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #8                  // Method java/util/LinkedHashSet."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #9,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          44
      24: aload_3
      25: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: astore        4
      32: aload_2
      33: aload         4
      35: invokeinterface #12,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      40: pop
      41: goto          15
      44: iconst_0
      45: istore_3
      46: new           #13                 // class java/util/LinkedHashMap
      49: dup
      50: aload_2
      51: invokeinterface #14,  1           // InterfaceMethod java/util/Set.size:()I
      56: invokespecial #15                 // Method java/util/LinkedHashMap."<init>":(I)V
      59: astore        4
      61: aload_2
      62: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      67: astore        5
      69: aload         5
      71: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          121
      79: aload         5
      81: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      86: astore        6
      88: iinc          3, 1
      91: aload_0
      92: aload         6
      94: invokeinterface #17,  2           // InterfaceMethod get:(Ljava/lang/Object;)Ljava/lang/Object;
      99: astore        7
     101: aload         7
     103: ifnull        118
     106: aload         4
     108: aload         6
     110: aload         7
     112: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: goto          69
     121: goto          153
     124: astore        5
     126: aload_0
     127: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
     132: invokeinterface #20,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     137: aload_2
     138: invokeinterface #14,  1           // InterfaceMethod java/util/Set.size:()I
     143: iload_3
     144: isub
     145: invokeinterface #21,  2           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordMisses:(I)V
     150: aload         5
     152: athrow
     153: aload         4
     155: invokestatic  #22                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     158: areturn
    Exception table:
       from    to  target type
          61   121   124   Class java/lang/Throwable

  public default void refresh(K);
    Code:
       0: aload_1
       1: invokestatic  #23                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_1
       6: newarray       long
       8: astore_2
       9: aload_0
      10: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
      15: invokeinterface #24,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      20: invokeinterface #25,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      25: lstore_3
      26: aload_0
      27: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
      32: aload_1
      33: aload_2
      34: invokeinterface #26,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.getIfPresentQuietly:(Ljava/lang/Object;[J)Ljava/lang/Object;
      39: astore        5
      41: aload         5
      43: ifnonnull     72
      46: aload_0
      47: invokeinterface #27,  1           // InterfaceMethod cacheLoader:()Lcom/github/benmanes/caffeine/cache/CacheLoader;
      52: aload_1
      53: aload_0
      54: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
      59: invokeinterface #28,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.executor:()Ljava/util/concurrent/Executor;
      64: invokeinterface #29,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/CacheLoader.asyncLoad:(Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      69: goto          97
      72: aload_0
      73: invokeinterface #27,  1           // InterfaceMethod cacheLoader:()Lcom/github/benmanes/caffeine/cache/CacheLoader;
      78: aload_1
      79: aload         5
      81: aload_0
      82: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
      87: invokeinterface #28,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.executor:()Ljava/util/concurrent/Executor;
      92: invokeinterface #30,  4           // InterfaceMethod com/github/benmanes/caffeine/cache/CacheLoader.asyncReload:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      97: astore        6
      99: aload         6
     101: aload_0
     102: lload_3
     103: aload_1
     104: aload         5
     106: aload_2
     107: invokedynamic #31,  0             // InvokeDynamic #0:accept:(Lcom/github/benmanes/caffeine/cache/LocalLoadingCache;JLjava/lang/Object;Ljava/lang/Object;[J)Ljava/util/function/BiConsumer;
     112: invokevirtual #32                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
     115: pop
     116: return

  public static <K, V> java.util.function.Function<K, V> newMappingFunction(com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>);
    Code:
       0: aload_0
       1: invokedynamic #33,  0             // InvokeDynamic #1:apply:(Lcom/github/benmanes/caffeine/cache/CacheLoader;)Ljava/util/function/Function;
       6: areturn

  public static <K, V> java.util.function.Function<java.lang.Iterable<? extends K>, java.util.Map<K, V>> newBulkMappingFunction(com.github.benmanes.caffeine.cache.CacheLoader<? super K, V>);
    Code:
       0: aload_0
       1: invokestatic  #34                 // InterfaceMethod hasLoadAll:(Lcom/github/benmanes/caffeine/cache/CacheLoader;)Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokedynamic #35,  0             // InvokeDynamic #2:apply:(Lcom/github/benmanes/caffeine/cache/CacheLoader;)Ljava/util/function/Function;
      15: areturn

  public static boolean hasLoadAll(com.github.benmanes.caffeine.cache.CacheLoader<?, ?>);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #37                 // String loadAll
       6: iconst_1
       7: anewarray     #38                 // class java/lang/Class
      10: dup
      11: iconst_0
      12: ldc           #39                 // class java/lang/Iterable
      14: aastore
      15: invokevirtual #40                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      18: astore_1
      19: ldc           #41                 // class com/github/benmanes/caffeine/cache/CacheLoader
      21: ldc           #37                 // String loadAll
      23: iconst_1
      24: anewarray     #38                 // class java/lang/Class
      27: dup
      28: iconst_0
      29: ldc           #39                 // class java/lang/Iterable
      31: aastore
      32: invokevirtual #40                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      35: astore_2
      36: aload_1
      37: aload_2
      38: invokevirtual #42                 // Method java/lang/reflect/Method.equals:(Ljava/lang/Object;)Z
      41: ifne          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn
      50: astore_1
      51: getstatic     #45                 // Field logger:Ljava/util/logging/Logger;
      54: getstatic     #46                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      57: ldc           #47                 // String Cannot determine if CacheLoader can bulk load
      59: aload_1
      60: invokevirtual #48                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      63: iconst_0
      64: ireturn
    Exception table:
       from    to  target type
           0    49    50   Class java/lang/NoSuchMethodException
           0    49    50   Class java/lang/SecurityException

  private static java.util.Map lambda$newBulkMappingFunction$3(com.github.benmanes.caffeine.cache.CacheLoader, java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #49,  2           // InterfaceMethod com/github/benmanes/caffeine/cache/CacheLoader.loadAll:(Ljava/lang/Iterable;)Ljava/util/Map;
       7: astore_2
       8: aload_2
       9: areturn
      10: astore_2
      11: aload_2
      12: athrow
      13: astore_2
      14: invokestatic  #52                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      17: invokevirtual #53                 // Method java/lang/Thread.interrupt:()V
      20: new           #54                 // class java/util/concurrent/CompletionException
      23: dup
      24: aload_2
      25: invokespecial #55                 // Method java/util/concurrent/CompletionException."<init>":(Ljava/lang/Throwable;)V
      28: athrow
      29: astore_2
      30: new           #54                 // class java/util/concurrent/CompletionException
      33: dup
      34: aload_2
      35: invokespecial #55                 // Method java/util/concurrent/CompletionException."<init>":(Ljava/lang/Throwable;)V
      38: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/RuntimeException
           0     9    13   Class java/lang/InterruptedException
           0     9    29   Class java/lang/Exception

  private static java.lang.Object lambda$newMappingFunction$2(com.github.benmanes.caffeine.cache.CacheLoader, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #57,  2           // InterfaceMethod com/github/benmanes/caffeine/cache/CacheLoader.load:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn
       8: astore_2
       9: aload_2
      10: athrow
      11: astore_2
      12: invokestatic  #52                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      15: invokevirtual #53                 // Method java/lang/Thread.interrupt:()V
      18: new           #54                 // class java/util/concurrent/CompletionException
      21: dup
      22: aload_2
      23: invokespecial #55                 // Method java/util/concurrent/CompletionException."<init>":(Ljava/lang/Throwable;)V
      26: athrow
      27: astore_2
      28: new           #54                 // class java/util/concurrent/CompletionException
      31: dup
      32: aload_2
      33: invokespecial #55                 // Method java/util/concurrent/CompletionException."<init>":(Ljava/lang/Throwable;)V
      36: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/RuntimeException
           0     7    11   Class java/lang/InterruptedException
           0     7    27   Class java/lang/Exception

  private void lambda$refresh$1(long, java.lang.Object, java.lang.Object, long[], java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
       6: invokeinterface #24,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      11: invokeinterface #25,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      16: lload_1
      17: lsub
      18: lstore        8
      20: aload         7
      22: ifnull        57
      25: getstatic     #45                 // Field logger:Ljava/util/logging/Logger;
      28: getstatic     #46                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      31: ldc           #58                 // String Exception thrown during refresh
      33: aload         7
      35: invokevirtual #48                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      38: aload_0
      39: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
      44: invokeinterface #20,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      49: lload         8
      51: invokeinterface #59,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadFailure:(J)V
      56: return
      57: iconst_1
      58: newarray       boolean
      60: astore        10
      62: aload_0
      63: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
      68: aload_3
      69: aload_0
      70: aload         6
      72: aload         4
      74: aload         5
      76: aload_3
      77: aload         10
      79: invokedynamic #60,  0             // InvokeDynamic #3:apply:(Lcom/github/benmanes/caffeine/cache/LocalLoadingCache;Ljava/lang/Object;Ljava/lang/Object;[JLjava/lang/Object;[Z)Ljava/util/function/BiFunction;
      84: iconst_0
      85: iconst_0
      86: iconst_1
      87: invokeinterface #61,  6           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;ZZZ)Ljava/lang/Object;
      92: pop
      93: aload         10
      95: iconst_0
      96: baload
      97: ifeq          131
     100: aload_0
     101: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
     106: invokeinterface #62,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.hasRemovalListener:()Z
     111: ifeq          131
     114: aload_0
     115: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
     120: aload_3
     121: aload         6
     123: getstatic     #63                 // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     126: invokeinterface #64,  4           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     131: aload         6
     133: ifnonnull     157
     136: aload_0
     137: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
     142: invokeinterface #20,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     147: lload         8
     149: invokeinterface #59,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadFailure:(J)V
     154: goto          175
     157: aload_0
     158: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
     163: invokeinterface #20,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     168: lload         8
     170: invokeinterface #65,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadSuccess:(J)V
     175: return

  private java.lang.Object lambda$refresh$0(java.lang.Object, java.lang.Object, long[], java.lang.Object, boolean[], java.lang.Object, java.lang.Object);
    Code:
       0: aload         7
       2: ifnonnull     7
       5: aload_1
       6: areturn
       7: aload         7
       9: aload_2
      10: if_acmpne     58
      13: aload_3
      14: iconst_0
      15: laload
      16: lstore        8
      18: aload_0
      19: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
      24: invokeinterface #66,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.hasWriteTime:()Z
      29: ifeq          47
      32: aload_0
      33: invokeinterface #1,  1            // InterfaceMethod cache:()Lcom/github/benmanes/caffeine/cache/LocalCache;
      38: aload         4
      40: aload_3
      41: invokeinterface #26,  3           // InterfaceMethod com/github/benmanes/caffeine/cache/LocalCache.getIfPresentQuietly:(Ljava/lang/Object;[J)Ljava/lang/Object;
      46: pop
      47: aload_3
      48: iconst_0
      49: laload
      50: lload         8
      52: lcmp
      53: ifne          58
      56: aload_1
      57: areturn
      58: aload         5
      60: iconst_0
      61: iconst_1
      62: bastore
      63: aload         7
      65: areturn

  static {};
    Code:
       0: ldc           #67                 // class com/github/benmanes/caffeine/cache/LocalLoadingCache
       2: invokevirtual #68                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #69                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #45                 // Field logger:Ljava/util/logging/Logger;
      11: return
}
