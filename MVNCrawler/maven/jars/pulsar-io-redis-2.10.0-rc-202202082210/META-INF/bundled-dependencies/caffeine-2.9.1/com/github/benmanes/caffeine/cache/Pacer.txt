Compiled from "Pacer.java"
final class com.github.benmanes.caffeine.cache.Pacer {
  static final long TOLERANCE;

  final com.github.benmanes.caffeine.cache.Scheduler scheduler;

  long nextFireTime;

  java.util.concurrent.Future<?> future;

  com.github.benmanes.caffeine.cache.Pacer(com.github.benmanes.caffeine.cache.Scheduler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class com/github/benmanes/caffeine/cache/Scheduler
      12: putfield      #4                  // Field scheduler:Lcom/github/benmanes/caffeine/cache/Scheduler;
      15: return

  public void schedule(java.util.concurrent.Executor, java.lang.Runnable, long, long);
    Code:
       0: lload_3
       1: lload         5
       3: ladd
       4: lstore        7
       6: aload_0
       7: getfield      #5                  // Field future:Ljava/util/concurrent/Future;
      10: ifnonnull     23
      13: aload_0
      14: getfield      #6                  // Field nextFireTime:J
      17: lconst_0
      18: lcmp
      19: ifeq          55
      22: return
      23: aload_0
      24: getfield      #6                  // Field nextFireTime:J
      27: lload_3
      28: lsub
      29: lconst_0
      30: lcmp
      31: ifle          55
      34: aload_0
      35: lload         7
      37: invokevirtual #7                  // Method maySkip:(J)Z
      40: ifeq          44
      43: return
      44: aload_0
      45: getfield      #5                  // Field future:Ljava/util/concurrent/Future;
      48: iconst_0
      49: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      54: pop
      55: aload_0
      56: lload_3
      57: lload         5
      59: lload         7
      61: invokevirtual #9                  // Method calculateSchedule:(JJJ)J
      64: lstore        9
      66: aload_0
      67: aload_0
      68: getfield      #4                  // Field scheduler:Lcom/github/benmanes/caffeine/cache/Scheduler;
      71: aload_1
      72: aload_2
      73: lload         9
      75: getstatic     #10                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      78: invokeinterface #11,  6           // InterfaceMethod com/github/benmanes/caffeine/cache/Scheduler.schedule:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
      83: putfield      #5                  // Field future:Ljava/util/concurrent/Future;
      86: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field future:Ljava/util/concurrent/Future;
       4: ifnull        28
       7: aload_0
       8: getfield      #5                  // Field future:Ljava/util/concurrent/Future;
      11: iconst_0
      12: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      17: pop
      18: aload_0
      19: lconst_0
      20: putfield      #6                  // Field nextFireTime:J
      23: aload_0
      24: aconst_null
      25: putfield      #5                  // Field future:Ljava/util/concurrent/Future;
      28: return

  boolean maySkip(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #6                  // Field nextFireTime:J
       5: lsub
       6: lstore_3
       7: lload_3
       8: lconst_0
       9: lcmp
      10: ifge          22
      13: lload_3
      14: lneg
      15: getstatic     #12                 // Field TOLERANCE:J
      18: lcmp
      19: ifgt          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  long calculateSchedule(long, long, long);
    Code:
       0: lload_3
       1: getstatic     #12                 // Field TOLERANCE:J
       4: lcmp
       5: ifgt          21
       8: aload_0
       9: lload_1
      10: getstatic     #12                 // Field TOLERANCE:J
      13: ladd
      14: putfield      #6                  // Field nextFireTime:J
      17: getstatic     #12                 // Field TOLERANCE:J
      20: lreturn
      21: aload_0
      22: lload         5
      24: putfield      #6                  // Field nextFireTime:J
      27: lload_3
      28: lreturn

  static {};
    Code:
       0: getstatic     #13                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       3: lconst_1
       4: invokevirtual #14                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       7: invokestatic  #15                 // Method com/github/benmanes/caffeine/cache/Caffeine.ceilingPowerOfTwo:(J)J
      10: putstatic     #12                 // Field TOLERANCE:J
      13: return
}
