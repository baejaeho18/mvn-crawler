Compiled from "Caffeine.java"
public final class com.github.benmanes.caffeine.cache.Caffeine<K, V> {
  static final java.util.logging.Logger logger;

  static final java.util.function.Supplier<com.github.benmanes.caffeine.cache.stats.StatsCounter> ENABLED_STATS_COUNTER_SUPPLIER;

  static final int UNSET_INT;

  static final int DEFAULT_INITIAL_CAPACITY;

  static final int DEFAULT_EXPIRATION_NANOS;

  static final int DEFAULT_REFRESH_NANOS;

  boolean strictParsing;

  long maximumSize;

  long maximumWeight;

  int initialCapacity;

  long expireAfterWriteNanos;

  long expireAfterAccessNanos;

  long refreshAfterWriteNanos;

  com.github.benmanes.caffeine.cache.RemovalListener<? super K, ? super V> evictionListener;

  com.github.benmanes.caffeine.cache.RemovalListener<? super K, ? super V> removalListener;

  java.util.function.Supplier<com.github.benmanes.caffeine.cache.stats.StatsCounter> statsCounterSupplier;

  com.github.benmanes.caffeine.cache.CacheWriter<? super K, ? super V> writer;

  com.github.benmanes.caffeine.cache.Weigher<? super K, ? super V> weigher;

  com.github.benmanes.caffeine.cache.Expiry<? super K, ? super V> expiry;

  com.github.benmanes.caffeine.cache.Scheduler scheduler;

  java.util.concurrent.Executor executor;

  com.github.benmanes.caffeine.cache.Ticker ticker;

  com.github.benmanes.caffeine.cache.Caffeine$Strength keyStrength;

  com.github.benmanes.caffeine.cache.Caffeine$Strength valueStrength;

  private com.github.benmanes.caffeine.cache.Caffeine();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field strictParsing:Z
       9: aload_0
      10: ldc2_w        #4                  // long -1l
      13: putfield      #6                  // Field maximumSize:J
      16: aload_0
      17: ldc2_w        #4                  // long -1l
      20: putfield      #7                  // Field maximumWeight:J
      23: aload_0
      24: iconst_m1
      25: putfield      #8                  // Field initialCapacity:I
      28: aload_0
      29: ldc2_w        #4                  // long -1l
      32: putfield      #9                  // Field expireAfterWriteNanos:J
      35: aload_0
      36: ldc2_w        #4                  // long -1l
      39: putfield      #10                 // Field expireAfterAccessNanos:J
      42: aload_0
      43: ldc2_w        #4                  // long -1l
      46: putfield      #11                 // Field refreshAfterWriteNanos:J
      49: return

  static void requireArgument(boolean, java.lang.String, java.lang.Object...);
    Code:
       0: iload_0
       1: ifne          17
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: aload_1
       9: aload_2
      10: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  static void requireArgument(boolean);
    Code:
       0: iload_0
       1: ifne          12
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: return

  static void requireState(boolean);
    Code:
       0: iload_0
       1: ifne          12
       4: new           #16                 // class java/lang/IllegalStateException
       7: dup
       8: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":()V
      11: athrow
      12: return

  static void requireState(boolean, java.lang.String, java.lang.Object...);
    Code:
       0: iload_0
       1: ifne          17
       4: new           #16                 // class java/lang/IllegalStateException
       7: dup
       8: aload_1
       9: aload_2
      10: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  static int ceilingPowerOfTwo(int);
    Code:
       0: iconst_1
       1: iload_0
       2: iconst_1
       3: isub
       4: invokestatic  #19                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       7: ineg
       8: ishl
       9: ireturn

  static long ceilingPowerOfTwo(long);
    Code:
       0: lconst_1
       1: lload_0
       2: lconst_1
       3: lsub
       4: invokestatic  #20                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
       7: ineg
       8: lshl
       9: lreturn

  public static com.github.benmanes.caffeine.cache.Caffeine<java.lang.Object, java.lang.Object> newBuilder();
    Code:
       0: new           #3                  // class com/github/benmanes/caffeine/cache/Caffeine
       3: dup
       4: invokespecial #21                 // Method "<init>":()V
       7: areturn

  public static com.github.benmanes.caffeine.cache.Caffeine<java.lang.Object, java.lang.Object> from(com.github.benmanes.caffeine.cache.CaffeineSpec);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method com/github/benmanes/caffeine/cache/CaffeineSpec.toBuilder:()Lcom/github/benmanes/caffeine/cache/Caffeine;
       4: astore_1
       5: aload_1
       6: iconst_0
       7: putfield      #2                  // Field strictParsing:Z
      10: aload_1
      11: areturn

  public static com.github.benmanes.caffeine.cache.Caffeine<java.lang.Object, java.lang.Object> from(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method com/github/benmanes/caffeine/cache/CaffeineSpec.parse:(Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/CaffeineSpec;
       4: invokestatic  #24                 // Method from:(Lcom/github/benmanes/caffeine/cache/CaffeineSpec;)Lcom/github/benmanes/caffeine/cache/Caffeine;
       7: areturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> initialCapacity(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field initialCapacity:I
       4: iconst_m1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #25                 // String initial capacity was already set to %s
      15: iconst_1
      16: anewarray     #26                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_0
      22: getfield      #8                  // Field initialCapacity:I
      25: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      32: iload_1
      33: iflt          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: invokestatic  #29                 // Method requireArgument:(Z)V
      44: aload_0
      45: iload_1
      46: putfield      #8                  // Field initialCapacity:I
      49: aload_0
      50: areturn

  boolean hasInitialCapacity();
    Code:
       0: aload_0
       1: getfield      #8                  // Field initialCapacity:I
       4: iconst_m1
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  int getInitialCapacity();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method hasInitialCapacity:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #8                  // Field initialCapacity:I
      11: goto          16
      14: bipush        16
      16: ireturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> executor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/Executor;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #32                 // String executor was already set to %s
      14: iconst_1
      15: anewarray     #26                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #31                 // Field executor:Ljava/util/concurrent/Executor;
      24: aastore
      25: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #34                 // class java/util/concurrent/Executor
      36: putfield      #31                 // Field executor:Ljava/util/concurrent/Executor;
      39: aload_0
      40: areturn

  java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/Executor;
       4: ifnonnull     13
       7: invokestatic  #35                 // Method java/util/concurrent/ForkJoinPool.commonPool:()Ljava/util/concurrent/ForkJoinPool;
      10: goto          17
      13: aload_0
      14: getfield      #31                 // Field executor:Ljava/util/concurrent/Executor;
      17: areturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> scheduler(com.github.benmanes.caffeine.cache.Scheduler);
    Code:
       0: aload_0
       1: getfield      #36                 // Field scheduler:Lcom/github/benmanes/caffeine/cache/Scheduler;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #37                 // String scheduler was already set to %s
      14: iconst_1
      15: anewarray     #26                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #36                 // Field scheduler:Lcom/github/benmanes/caffeine/cache/Scheduler;
      24: aastore
      25: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #38                 // class com/github/benmanes/caffeine/cache/Scheduler
      36: putfield      #36                 // Field scheduler:Lcom/github/benmanes/caffeine/cache/Scheduler;
      39: aload_0
      40: areturn

  com.github.benmanes.caffeine.cache.Scheduler getScheduler();
    Code:
       0: aload_0
       1: getfield      #36                 // Field scheduler:Lcom/github/benmanes/caffeine/cache/Scheduler;
       4: ifnull        17
       7: aload_0
       8: getfield      #36                 // Field scheduler:Lcom/github/benmanes/caffeine/cache/Scheduler;
      11: invokestatic  #39                 // InterfaceMethod com/github/benmanes/caffeine/cache/Scheduler.disabledScheduler:()Lcom/github/benmanes/caffeine/cache/Scheduler;
      14: if_acmpne     21
      17: invokestatic  #39                 // InterfaceMethod com/github/benmanes/caffeine/cache/Scheduler.disabledScheduler:()Lcom/github/benmanes/caffeine/cache/Scheduler;
      20: areturn
      21: aload_0
      22: getfield      #36                 // Field scheduler:Lcom/github/benmanes/caffeine/cache/Scheduler;
      25: invokestatic  #40                 // InterfaceMethod com/github/benmanes/caffeine/cache/Scheduler.systemScheduler:()Lcom/github/benmanes/caffeine/cache/Scheduler;
      28: if_acmpne     36
      31: aload_0
      32: getfield      #36                 // Field scheduler:Lcom/github/benmanes/caffeine/cache/Scheduler;
      35: areturn
      36: aload_0
      37: getfield      #36                 // Field scheduler:Lcom/github/benmanes/caffeine/cache/Scheduler;
      40: invokestatic  #41                 // InterfaceMethod com/github/benmanes/caffeine/cache/Scheduler.guardedScheduler:(Lcom/github/benmanes/caffeine/cache/Scheduler;)Lcom/github/benmanes/caffeine/cache/Scheduler;
      43: areturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> maximumSize(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field maximumSize:J
       4: ldc2_w        #4                  // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #42                 // String maximum size was already set to %s
      18: iconst_1
      19: anewarray     #26                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #6                  // Field maximumSize:J
      28: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aastore
      32: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #7                  // Field maximumWeight:J
      39: ldc2_w        #4                  // long -1l
      42: lcmp
      43: ifne          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ldc           #44                 // String maximum weight was already set to %s
      53: iconst_1
      54: anewarray     #26                 // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_0
      60: getfield      #7                  // Field maximumWeight:J
      63: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      66: aastore
      67: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      70: aload_0
      71: getfield      #45                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      74: ifnonnull     81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ldc           #46                 // String maximum size can not be combined with weigher
      84: iconst_0
      85: anewarray     #26                 // class java/lang/Object
      88: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      91: lload_1
      92: lconst_0
      93: lcmp
      94: iflt          101
      97: iconst_1
      98: goto          102
     101: iconst_0
     102: ldc           #47                 // String maximum size must not be negative
     104: iconst_0
     105: anewarray     #26                 // class java/lang/Object
     108: invokestatic  #48                 // Method requireArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     111: aload_0
     112: lload_1
     113: putfield      #6                  // Field maximumSize:J
     116: aload_0
     117: areturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> maximumWeight(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field maximumWeight:J
       4: ldc2_w        #4                  // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #44                 // String maximum weight was already set to %s
      18: iconst_1
      19: anewarray     #26                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #7                  // Field maximumWeight:J
      28: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aastore
      32: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #6                  // Field maximumSize:J
      39: ldc2_w        #4                  // long -1l
      42: lcmp
      43: ifne          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ldc           #42                 // String maximum size was already set to %s
      53: iconst_1
      54: anewarray     #26                 // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_0
      60: getfield      #6                  // Field maximumSize:J
      63: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      66: aastore
      67: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      70: lload_1
      71: lconst_0
      72: lcmp
      73: iflt          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ldc           #49                 // String maximum weight must not be negative
      83: iconst_0
      84: anewarray     #26                 // class java/lang/Object
      87: invokestatic  #48                 // Method requireArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      90: aload_0
      91: lload_1
      92: putfield      #7                  // Field maximumWeight:J
      95: aload_0
      96: areturn

  public <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.Caffeine<K1, V1> weigher(com.github.benmanes.caffeine.cache.Weigher<? super K1, ? super V1>);
    Code:
       0: aload_1
       1: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #45                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
       9: ifnonnull     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #50                 // String weigher was already set to %s
      19: iconst_1
      20: anewarray     #26                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #45                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      29: aastore
      30: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #2                  // Field strictParsing:Z
      37: ifeq          51
      40: aload_0
      41: getfield      #6                  // Field maximumSize:J
      44: ldc2_w        #4                  // long -1l
      47: lcmp
      48: ifne          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ldc           #51                 // String weigher can not be combined with maximum size
      58: iconst_0
      59: anewarray     #26                 // class java/lang/Object
      62: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      65: aload_0
      66: astore_2
      67: aload_2
      68: aload_1
      69: putfield      #45                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      72: aload_2
      73: areturn

  boolean evicts();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getMaximum:()J
       4: ldc2_w        #4                  // long -1l
       7: lcmp
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  boolean isWeighted();
    Code:
       0: aload_0
       1: getfield      #45                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  long getMaximum();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method isWeighted:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #7                  // Field maximumWeight:J
      11: goto          18
      14: aload_0
      15: getfield      #6                  // Field maximumSize:J
      18: lreturn

  <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.Weigher<K1, V1> getWeigher(boolean);
    Code:
       0: aload_0
       1: getfield      #45                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
       4: ifnull        17
       7: aload_0
       8: getfield      #45                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      11: invokestatic  #54                 // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.singletonWeigher:()Lcom/github/benmanes/caffeine/cache/Weigher;
      14: if_acmpne     23
      17: invokestatic  #54                 // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.singletonWeigher:()Lcom/github/benmanes/caffeine/cache/Weigher;
      20: goto          30
      23: aload_0
      24: getfield      #45                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      27: invokestatic  #55                 // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.boundedWeigher:(Lcom/github/benmanes/caffeine/cache/Weigher;)Lcom/github/benmanes/caffeine/cache/Weigher;
      30: astore_2
      31: iload_1
      32: ifeq          46
      35: new           #56                 // class com/github/benmanes/caffeine/cache/Async$AsyncWeigher
      38: dup
      39: aload_2
      40: invokespecial #57                 // Method com/github/benmanes/caffeine/cache/Async$AsyncWeigher."<init>":(Lcom/github/benmanes/caffeine/cache/Weigher;)V
      43: goto          47
      46: aload_2
      47: areturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> weakKeys();
    Code:
       0: aload_0
       1: getfield      #58                 // Field keyStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #59                 // String Key strength was already set to %s
      14: iconst_1
      15: anewarray     #26                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #58                 // Field keyStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
      24: aastore
      25: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: getfield      #60                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      32: ifnonnull     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ldc           #61                 // String Weak keys may not be used with CacheWriter
      42: iconst_0
      43: anewarray     #26                 // class java/lang/Object
      46: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      49: aload_0
      50: getstatic     #62                 // Field com/github/benmanes/caffeine/cache/Caffeine$Strength.WEAK:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
      53: putfield      #58                 // Field keyStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
      56: aload_0
      57: areturn

  boolean isStrongKeys();
    Code:
       0: aload_0
       1: getfield      #58                 // Field keyStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> weakValues();
    Code:
       0: aload_0
       1: getfield      #63                 // Field valueStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #64                 // String Value strength was already set to %s
      14: iconst_1
      15: anewarray     #26                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #63                 // Field valueStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
      24: aastore
      25: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: getstatic     #62                 // Field com/github/benmanes/caffeine/cache/Caffeine$Strength.WEAK:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
      32: putfield      #63                 // Field valueStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
      35: aload_0
      36: areturn

  boolean isStrongValues();
    Code:
       0: aload_0
       1: getfield      #63                 // Field valueStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  boolean isWeakValues();
    Code:
       0: aload_0
       1: getfield      #63                 // Field valueStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: getstatic     #62                 // Field com/github/benmanes/caffeine/cache/Caffeine$Strength.WEAK:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> softValues();
    Code:
       0: aload_0
       1: getfield      #63                 // Field valueStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #64                 // String Value strength was already set to %s
      14: iconst_1
      15: anewarray     #26                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #63                 // Field valueStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
      24: aastore
      25: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: getstatic     #65                 // Field com/github/benmanes/caffeine/cache/Caffeine$Strength.SOFT:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
      32: putfield      #63                 // Field valueStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
      35: aload_0
      36: areturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> expireAfterWrite(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // Method saturatedToNanos:(Ljava/time/Duration;)J
       5: getstatic     #67                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #68                 // Method expireAfterWrite:(JLjava/util/concurrent/TimeUnit;)Lcom/github/benmanes/caffeine/cache/Caffeine;
      11: areturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> expireAfterWrite(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #9                  // Field expireAfterWriteNanos:J
       4: ldc2_w        #4                  // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #69                 // String expireAfterWrite was already set to %s ns
      18: iconst_1
      19: anewarray     #26                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #9                  // Field expireAfterWriteNanos:J
      28: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aastore
      32: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #70                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
      39: ifnonnull     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ldc           #71                 // String expireAfterWrite may not be used with variable expiration
      49: iconst_0
      50: anewarray     #26                 // class java/lang/Object
      53: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      56: lload_1
      57: lconst_0
      58: lcmp
      59: iflt          66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: ldc           #72                 // String duration cannot be negative: %s %s
      69: iconst_2
      70: anewarray     #26                 // class java/lang/Object
      73: dup
      74: iconst_0
      75: lload_1
      76: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      79: aastore
      80: dup
      81: iconst_1
      82: aload_3
      83: aastore
      84: invokestatic  #48                 // Method requireArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      87: aload_0
      88: aload_3
      89: lload_1
      90: invokevirtual #73                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      93: putfield      #9                  // Field expireAfterWriteNanos:J
      96: aload_0
      97: areturn

  long getExpiresAfterWriteNanos();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method expiresAfterWrite:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #9                  // Field expireAfterWriteNanos:J
      11: goto          15
      14: lconst_0
      15: lreturn

  boolean expiresAfterWrite();
    Code:
       0: aload_0
       1: getfield      #9                  // Field expireAfterWriteNanos:J
       4: ldc2_w        #4                  // long -1l
       7: lcmp
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> expireAfterAccess(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // Method saturatedToNanos:(Ljava/time/Duration;)J
       5: getstatic     #67                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #75                 // Method expireAfterAccess:(JLjava/util/concurrent/TimeUnit;)Lcom/github/benmanes/caffeine/cache/Caffeine;
      11: areturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> expireAfterAccess(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #10                 // Field expireAfterAccessNanos:J
       4: ldc2_w        #4                  // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #76                 // String expireAfterAccess was already set to %s ns
      18: iconst_1
      19: anewarray     #26                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #10                 // Field expireAfterAccessNanos:J
      28: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aastore
      32: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #70                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
      39: ifnonnull     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ldc           #77                 // String expireAfterAccess may not be used with variable expiration
      49: iconst_0
      50: anewarray     #26                 // class java/lang/Object
      53: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      56: lload_1
      57: lconst_0
      58: lcmp
      59: iflt          66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: ldc           #72                 // String duration cannot be negative: %s %s
      69: iconst_2
      70: anewarray     #26                 // class java/lang/Object
      73: dup
      74: iconst_0
      75: lload_1
      76: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      79: aastore
      80: dup
      81: iconst_1
      82: aload_3
      83: aastore
      84: invokestatic  #48                 // Method requireArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      87: aload_0
      88: aload_3
      89: lload_1
      90: invokevirtual #73                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      93: putfield      #10                 // Field expireAfterAccessNanos:J
      96: aload_0
      97: areturn

  long getExpiresAfterAccessNanos();
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method expiresAfterAccess:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #10                 // Field expireAfterAccessNanos:J
      11: goto          15
      14: lconst_0
      15: lreturn

  boolean expiresAfterAccess();
    Code:
       0: aload_0
       1: getfield      #10                 // Field expireAfterAccessNanos:J
       4: ldc2_w        #4                  // long -1l
       7: lcmp
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.Caffeine<K1, V1> expireAfter(com.github.benmanes.caffeine.cache.Expiry<? super K1, ? super V1>);
    Code:
       0: aload_1
       1: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #70                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
       9: ifnonnull     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #79                 // String Expiry was already set to %s
      19: iconst_1
      20: anewarray     #26                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #70                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
      29: aastore
      30: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #10                 // Field expireAfterAccessNanos:J
      37: ldc2_w        #4                  // long -1l
      40: lcmp
      41: ifne          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ldc           #80                 // String Expiry may not be used with expiresAfterAccess
      51: iconst_0
      52: anewarray     #26                 // class java/lang/Object
      55: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      58: aload_0
      59: getfield      #9                  // Field expireAfterWriteNanos:J
      62: ldc2_w        #4                  // long -1l
      65: lcmp
      66: ifne          73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: ldc           #81                 // String Expiry may not be used with expiresAfterWrite
      76: iconst_0
      77: anewarray     #26                 // class java/lang/Object
      80: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      83: aload_0
      84: astore_2
      85: aload_2
      86: aload_1
      87: putfield      #70                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
      90: aload_2
      91: areturn

  boolean expiresVariable();
    Code:
       0: aload_0
       1: getfield      #70                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  com.github.benmanes.caffeine.cache.Expiry<K, V> getExpiry(boolean);
    Code:
       0: iload_1
       1: ifeq          25
       4: aload_0
       5: getfield      #70                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
       8: ifnull        25
      11: new           #82                 // class com/github/benmanes/caffeine/cache/Async$AsyncExpiry
      14: dup
      15: aload_0
      16: getfield      #70                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
      19: invokespecial #83                 // Method com/github/benmanes/caffeine/cache/Async$AsyncExpiry."<init>":(Lcom/github/benmanes/caffeine/cache/Expiry;)V
      22: goto          29
      25: aload_0
      26: getfield      #70                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
      29: areturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> refreshAfterWrite(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // Method saturatedToNanos:(Ljava/time/Duration;)J
       5: getstatic     #67                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #84                 // Method refreshAfterWrite:(JLjava/util/concurrent/TimeUnit;)Lcom/github/benmanes/caffeine/cache/Caffeine;
      11: areturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> refreshAfterWrite(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #11                 // Field refreshAfterWriteNanos:J
       9: ldc2_w        #4                  // long -1l
      12: lcmp
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #85                 // String refreshAfterWriteNanos was already set to %s ns
      23: iconst_1
      24: anewarray     #26                 // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload_0
      30: getfield      #11                 // Field refreshAfterWriteNanos:J
      33: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      36: aastore
      37: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      40: lload_1
      41: lconst_0
      42: lcmp
      43: ifle          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ldc           #86                 // String duration must be positive: %s %s
      53: iconst_2
      54: anewarray     #26                 // class java/lang/Object
      57: dup
      58: iconst_0
      59: lload_1
      60: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      63: aastore
      64: dup
      65: iconst_1
      66: aload_3
      67: aastore
      68: invokestatic  #48                 // Method requireArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      71: aload_0
      72: aload_3
      73: lload_1
      74: invokevirtual #73                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      77: putfield      #11                 // Field refreshAfterWriteNanos:J
      80: aload_0
      81: areturn

  long getRefreshAfterWriteNanos();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method refreshAfterWrite:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #11                 // Field refreshAfterWriteNanos:J
      11: goto          15
      14: lconst_0
      15: lreturn

  boolean refreshAfterWrite();
    Code:
       0: aload_0
       1: getfield      #11                 // Field refreshAfterWriteNanos:J
       4: ldc2_w        #4                  // long -1l
       7: lcmp
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> ticker(com.github.benmanes.caffeine.cache.Ticker);
    Code:
       0: aload_0
       1: getfield      #88                 // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #89                 // String Ticker was already set to %s
      14: iconst_1
      15: anewarray     #26                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #88                 // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      24: aastore
      25: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #90                 // class com/github/benmanes/caffeine/cache/Ticker
      36: putfield      #88                 // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      39: aload_0
      40: areturn

  com.github.benmanes.caffeine.cache.Ticker getTicker();
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method expiresVariable:()Z
       4: ifne          35
       7: aload_0
       8: invokevirtual #78                 // Method expiresAfterAccess:()Z
      11: ifne          35
      14: aload_0
      15: invokevirtual #74                 // Method expiresAfterWrite:()Z
      18: ifne          35
      21: aload_0
      22: invokevirtual #87                 // Method refreshAfterWrite:()Z
      25: ifne          35
      28: aload_0
      29: invokevirtual #92                 // Method isRecordingStats:()Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: istore_1
      41: iload_1
      42: ifeq          65
      45: aload_0
      46: getfield      #88                 // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      49: ifnonnull     58
      52: invokestatic  #93                 // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.systemTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      55: goto          68
      58: aload_0
      59: getfield      #88                 // Field ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      62: goto          68
      65: invokestatic  #94                 // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.disabledTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      68: areturn

  public <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.Caffeine<K1, V1> evictionListener(com.github.benmanes.caffeine.cache.RemovalListener<? super K1, ? super V1>);
    Code:
       0: aload_0
       1: getfield      #95                 // Field evictionListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #96                 // String eviction listener was already set to %s
      14: iconst_1
      15: anewarray     #26                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #95                 // Field evictionListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
      24: aastore
      25: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: astore_2
      30: aload_2
      31: aload_1
      32: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #97                 // class com/github/benmanes/caffeine/cache/RemovalListener
      38: putfield      #95                 // Field evictionListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
      41: aload_2
      42: areturn

  public <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.Caffeine<K1, V1> removalListener(com.github.benmanes.caffeine.cache.RemovalListener<? super K1, ? super V1>);
    Code:
       0: aload_0
       1: getfield      #98                 // Field removalListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #99                 // String removal listener was already set to %s
      14: iconst_1
      15: anewarray     #26                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #98                 // Field removalListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
      24: aastore
      25: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: astore_2
      30: aload_2
      31: aload_1
      32: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #97                 // class com/github/benmanes/caffeine/cache/RemovalListener
      38: putfield      #98                 // Field removalListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
      41: aload_2
      42: areturn

  <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.RemovalListener<K1, V1> getRemovalListener(boolean);
    Code:
       0: aload_0
       1: getfield      #98                 // Field removalListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
       4: astore_2
       5: iload_1
       6: ifeq          28
       9: aload_2
      10: ifnull        28
      13: new           #100                // class com/github/benmanes/caffeine/cache/Async$AsyncRemovalListener
      16: dup
      17: aload_2
      18: aload_0
      19: invokevirtual #101                // Method getExecutor:()Ljava/util/concurrent/Executor;
      22: invokespecial #102                // Method com/github/benmanes/caffeine/cache/Async$AsyncRemovalListener."<init>":(Lcom/github/benmanes/caffeine/cache/RemovalListener;Ljava/util/concurrent/Executor;)V
      25: goto          29
      28: aload_2
      29: areturn

  public <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.Caffeine<K1, V1> writer(com.github.benmanes.caffeine.cache.CacheWriter<? super K1, ? super V1>);
    Code:
       0: aload_0
       1: getfield      #60                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #103                // String Writer was already set to %s
      14: iconst_1
      15: anewarray     #26                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #60                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      24: aastore
      25: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: getfield      #58                 // Field keyStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
      32: ifnonnull     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ldc           #61                 // String Weak keys may not be used with CacheWriter
      42: iconst_0
      43: anewarray     #26                 // class java/lang/Object
      46: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      49: aload_0
      50: getfield      #95                 // Field evictionListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
      53: ifnonnull     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ldc           #104                // String Eviction listener may not be used with CacheWriter
      63: iconst_0
      64: anewarray     #26                 // class java/lang/Object
      67: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      70: aload_0
      71: astore_2
      72: aload_2
      73: aload_1
      74: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #105                // class com/github/benmanes/caffeine/cache/CacheWriter
      80: putfield      #60                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      83: aload_2
      84: areturn

  <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.CacheWriter<K1, V1> getCacheWriter(boolean);
    Code:
       0: aload_0
       1: getfield      #95                 // Field evictionListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
       4: ifnonnull     15
       7: aload_0
       8: getfield      #60                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      11: astore_2
      12: goto          28
      15: new           #106                // class com/github/benmanes/caffeine/cache/Caffeine$CacheWriterAdapter
      18: dup
      19: aload_0
      20: getfield      #95                 // Field evictionListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
      23: iload_1
      24: invokespecial #107                // Method com/github/benmanes/caffeine/cache/Caffeine$CacheWriterAdapter."<init>":(Lcom/github/benmanes/caffeine/cache/RemovalListener;Z)V
      27: astore_2
      28: aload_2
      29: ifnonnull     38
      32: invokestatic  #108                // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.disabledWriter:()Lcom/github/benmanes/caffeine/cache/CacheWriter;
      35: goto          39
      38: aload_2
      39: areturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> recordStats();
    Code:
       0: aload_0
       1: getfield      #109                // Field statsCounterSupplier:Ljava/util/function/Supplier;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #110                // String Statistics recording was already set
      14: iconst_0
      15: anewarray     #26                 // class java/lang/Object
      18: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      21: aload_0
      22: getstatic     #111                // Field ENABLED_STATS_COUNTER_SUPPLIER:Ljava/util/function/Supplier;
      25: putfield      #109                // Field statsCounterSupplier:Ljava/util/function/Supplier;
      28: aload_0
      29: areturn

  public com.github.benmanes.caffeine.cache.Caffeine<K, V> recordStats(java.util.function.Supplier<? extends com.github.benmanes.caffeine.cache.stats.StatsCounter>);
    Code:
       0: aload_0
       1: getfield      #109                // Field statsCounterSupplier:Ljava/util/function/Supplier;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #110                // String Statistics recording was already set
      14: iconst_0
      15: anewarray     #26                 // class java/lang/Object
      18: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      21: aload_1
      22: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_0
      27: aload_1
      28: invokedynamic #112,  0            // InvokeDynamic #0:get:(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;
      33: putfield      #109                // Field statsCounterSupplier:Ljava/util/function/Supplier;
      36: aload_0
      37: areturn

  boolean isRecordingStats();
    Code:
       0: aload_0
       1: getfield      #109                // Field statsCounterSupplier:Ljava/util/function/Supplier;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  java.util.function.Supplier<com.github.benmanes.caffeine.cache.stats.StatsCounter> getStatsCounterSupplier();
    Code:
       0: aload_0
       1: getfield      #109                // Field statsCounterSupplier:Ljava/util/function/Supplier;
       4: ifnonnull     15
       7: invokedynamic #113,  0            // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      12: goto          19
      15: aload_0
      16: getfield      #109                // Field statsCounterSupplier:Ljava/util/function/Supplier;
      19: areturn

  boolean isBounded();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maximumSize:J
       4: ldc2_w        #4                  // long -1l
       7: lcmp
       8: ifne          65
      11: aload_0
      12: getfield      #7                  // Field maximumWeight:J
      15: ldc2_w        #4                  // long -1l
      18: lcmp
      19: ifne          65
      22: aload_0
      23: getfield      #10                 // Field expireAfterAccessNanos:J
      26: ldc2_w        #4                  // long -1l
      29: lcmp
      30: ifne          65
      33: aload_0
      34: getfield      #9                  // Field expireAfterWriteNanos:J
      37: ldc2_w        #4                  // long -1l
      40: lcmp
      41: ifne          65
      44: aload_0
      45: getfield      #70                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
      48: ifnonnull     65
      51: aload_0
      52: getfield      #58                 // Field keyStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
      55: ifnonnull     65
      58: aload_0
      59: getfield      #63                 // Field valueStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
      62: ifnull        69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn

  public <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.Cache<K1, V1> build();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method requireWeightWithWeigher:()V
       4: aload_0
       5: invokevirtual #115                // Method requireNonLoadingCache:()V
       8: aload_0
       9: astore_1
      10: aload_0
      11: invokevirtual #116                // Method isBounded:()Z
      14: ifeq          28
      17: new           #117                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache
      20: dup
      21: aload_1
      22: invokespecial #118                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;)V
      25: goto          36
      28: new           #119                // class com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalManualCache
      31: dup
      32: aload_1
      33: invokespecial #120                // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalManualCache."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;)V
      36: areturn

  public <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.LoadingCache<K1, V1> build(com.github.benmanes.caffeine.cache.CacheLoader<? super K1, V1>);
    Code:
       0: aload_0
       1: invokevirtual #114                // Method requireWeightWithWeigher:()V
       4: aload_0
       5: astore_2
       6: aload_0
       7: invokevirtual #116                // Method isBounded:()Z
      10: ifne          20
      13: aload_0
      14: invokevirtual #87                 // Method refreshAfterWrite:()Z
      17: ifeq          32
      20: new           #121                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalLoadingCache
      23: dup
      24: aload_2
      25: aload_1
      26: invokespecial #122                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalLoadingCache."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;)V
      29: goto          41
      32: new           #123                // class com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalLoadingCache
      35: dup
      36: aload_2
      37: aload_1
      38: invokespecial #124                // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalLoadingCache."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/CacheLoader;)V
      41: areturn

  public <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.AsyncCache<K1, V1> buildAsync();
    Code:
       0: aload_0
       1: getfield      #63                 // Field valueStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #125                // String Weak or soft values can not be combined with AsyncCache
      14: iconst_0
      15: anewarray     #26                 // class java/lang/Object
      18: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #60                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      25: ifnonnull     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ldc           #126                // String CacheWriter can not be combined with AsyncCache
      35: iconst_0
      36: anewarray     #26                 // class java/lang/Object
      39: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      42: aload_0
      43: invokevirtual #127                // Method isStrongKeys:()Z
      46: ifne          56
      49: aload_0
      50: getfield      #95                 // Field evictionListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
      53: ifnonnull     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ldc           #128                // String Weak keys cannot be combined eviction listener and with AsyncLoadingCache
      63: iconst_0
      64: anewarray     #26                 // class java/lang/Object
      67: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      70: aload_0
      71: invokevirtual #114                // Method requireWeightWithWeigher:()V
      74: aload_0
      75: invokevirtual #115                // Method requireNonLoadingCache:()V
      78: aload_0
      79: astore_1
      80: aload_0
      81: invokevirtual #116                // Method isBounded:()Z
      84: ifeq          98
      87: new           #129                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalAsyncCache
      90: dup
      91: aload_1
      92: invokespecial #130                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalAsyncCache."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;)V
      95: goto          106
      98: new           #131                // class com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalAsyncCache
     101: dup
     102: aload_1
     103: invokespecial #132                // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalAsyncCache."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;)V
     106: areturn

  public <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.AsyncLoadingCache<K1, V1> buildAsync(com.github.benmanes.caffeine.cache.CacheLoader<? super K1, V1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #133                // Method buildAsync:(Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;)Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;
       5: areturn

  public <K1 extends K, V1 extends V> com.github.benmanes.caffeine.cache.AsyncLoadingCache<K1, V1> buildAsync(com.github.benmanes.caffeine.cache.AsyncCacheLoader<? super K1, V1>);
    Code:
       0: aload_0
       1: invokevirtual #134                // Method isStrongValues:()Z
       4: ldc           #135                // String Weak or soft values cannot be combined with AsyncLoadingCache
       6: iconst_0
       7: anewarray     #26                 // class java/lang/Object
      10: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      13: aload_0
      14: getfield      #60                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      17: ifnonnull     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ldc           #136                // String CacheWriter cannot be combined with AsyncLoadingCache
      27: iconst_0
      28: anewarray     #26                 // class java/lang/Object
      31: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      34: aload_0
      35: invokevirtual #127                // Method isStrongKeys:()Z
      38: ifne          48
      41: aload_0
      42: getfield      #95                 // Field evictionListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
      45: ifnonnull     52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ldc           #128                // String Weak keys cannot be combined eviction listener and with AsyncLoadingCache
      55: iconst_0
      56: anewarray     #26                 // class java/lang/Object
      59: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      62: aload_0
      63: invokevirtual #114                // Method requireWeightWithWeigher:()V
      66: aload_1
      67: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: aload_0
      72: astore_2
      73: aload_0
      74: invokevirtual #116                // Method isBounded:()Z
      77: ifne          87
      80: aload_0
      81: invokevirtual #87                 // Method refreshAfterWrite:()Z
      84: ifeq          99
      87: new           #137                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalAsyncLoadingCache
      90: dup
      91: aload_2
      92: aload_1
      93: invokespecial #138                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalAsyncLoadingCache."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;)V
      96: goto          108
      99: new           #139                // class com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalAsyncLoadingCache
     102: dup
     103: aload_2
     104: aload_1
     105: invokespecial #140                // Method com/github/benmanes/caffeine/cache/UnboundedLocalCache$UnboundedLocalAsyncLoadingCache."<init>":(Lcom/github/benmanes/caffeine/cache/Caffeine;Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;)V
     108: areturn

  void requireNonLoadingCache();
    Code:
       0: aload_0
       1: getfield      #11                 // Field refreshAfterWriteNanos:J
       4: ldc2_w        #4                  // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #141                // String refreshAfterWrite requires a LoadingCache
      18: iconst_0
      19: anewarray     #26                 // class java/lang/Object
      22: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      25: return

  void requireWeightWithWeigher();
    Code:
       0: aload_0
       1: getfield      #45                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
       4: ifnonnull     35
       7: aload_0
       8: getfield      #7                  // Field maximumWeight:J
      11: ldc2_w        #4                  // long -1l
      14: lcmp
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ldc           #142                // String maximumWeight requires weigher
      25: iconst_0
      26: anewarray     #26                 // class java/lang/Object
      29: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      32: goto          92
      35: aload_0
      36: getfield      #2                  // Field strictParsing:Z
      39: ifeq          70
      42: aload_0
      43: getfield      #7                  // Field maximumWeight:J
      46: ldc2_w        #4                  // long -1l
      49: lcmp
      50: ifeq          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ldc           #143                // String weigher requires maximumWeight
      60: iconst_0
      61: anewarray     #26                 // class java/lang/Object
      64: invokestatic  #28                 // Method requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      67: goto          92
      70: aload_0
      71: getfield      #7                  // Field maximumWeight:J
      74: ldc2_w        #4                  // long -1l
      77: lcmp
      78: ifne          92
      81: getstatic     #144                // Field logger:Ljava/util/logging/Logger;
      84: getstatic     #145                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      87: ldc           #146                // String ignoring weigher specified without maximumWeight
      89: invokevirtual #147                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      92: return

  private static long saturatedToNanos(java.time.Duration);
    Code:
       0: aload_0
       1: invokevirtual #148                // Method java/time/Duration.toNanos:()J
       4: lreturn
       5: astore_1
       6: aload_0
       7: invokevirtual #150                // Method java/time/Duration.isNegative:()Z
      10: ifeq          19
      13: ldc2_w        #152                // long -9223372036854775808l
      16: goto          22
      19: ldc2_w        #154                // long 9223372036854775807l
      22: lreturn
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ArithmeticException

  public java.lang.String toString();
    Code:
       0: new           #156                // class java/lang/StringBuilder
       3: dup
       4: bipush        75
       6: invokespecial #157                // Method java/lang/StringBuilder."<init>":(I)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokevirtual #158                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #159                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      18: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: bipush        123
      23: invokevirtual #161                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      26: pop
      27: aload_1
      28: invokevirtual #162                // Method java/lang/StringBuilder.length:()I
      31: istore_2
      32: aload_0
      33: getfield      #8                  // Field initialCapacity:I
      36: iconst_m1
      37: if_icmpeq     59
      40: aload_1
      41: ldc           #163                // String initialCapacity=
      43: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #8                  // Field initialCapacity:I
      50: invokevirtual #164                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #165                // String ,
      55: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: pop
      59: aload_0
      60: getfield      #6                  // Field maximumSize:J
      63: ldc2_w        #4                  // long -1l
      66: lcmp
      67: ifeq          89
      70: aload_1
      71: ldc           #166                // String maximumSize=
      73: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: getfield      #6                  // Field maximumSize:J
      80: invokevirtual #167                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      83: ldc           #165                // String ,
      85: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: pop
      89: aload_0
      90: getfield      #7                  // Field maximumWeight:J
      93: ldc2_w        #4                  // long -1l
      96: lcmp
      97: ifeq          119
     100: aload_1
     101: ldc           #168                // String maximumWeight=
     103: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_0
     107: getfield      #7                  // Field maximumWeight:J
     110: invokevirtual #167                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     113: ldc           #165                // String ,
     115: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: pop
     119: aload_0
     120: getfield      #9                  // Field expireAfterWriteNanos:J
     123: ldc2_w        #4                  // long -1l
     126: lcmp
     127: ifeq          149
     130: aload_1
     131: ldc           #169                // String expireAfterWrite=
     133: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_0
     137: getfield      #9                  // Field expireAfterWriteNanos:J
     140: invokevirtual #167                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     143: ldc           #170                // String ns,
     145: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: pop
     149: aload_0
     150: getfield      #10                 // Field expireAfterAccessNanos:J
     153: ldc2_w        #4                  // long -1l
     156: lcmp
     157: ifeq          179
     160: aload_1
     161: ldc           #171                // String expireAfterAccess=
     163: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload_0
     167: getfield      #10                 // Field expireAfterAccessNanos:J
     170: invokevirtual #167                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     173: ldc           #170                // String ns,
     175: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: pop
     179: aload_0
     180: getfield      #70                 // Field expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
     183: ifnull        193
     186: aload_1
     187: ldc           #172                // String expiry,
     189: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: pop
     193: aload_0
     194: getfield      #11                 // Field refreshAfterWriteNanos:J
     197: ldc2_w        #4                  // long -1l
     200: lcmp
     201: ifeq          223
     204: aload_1
     205: ldc           #173                // String refreshAfterWriteNanos=
     207: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: aload_0
     211: getfield      #11                 // Field refreshAfterWriteNanos:J
     214: invokevirtual #167                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     217: ldc           #170                // String ns,
     219: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     222: pop
     223: aload_0
     224: getfield      #58                 // Field keyStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
     227: ifnull        258
     230: aload_1
     231: ldc           #174                // String keyStrength=
     233: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: aload_0
     237: getfield      #58                 // Field keyStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
     240: invokevirtual #175                // Method com/github/benmanes/caffeine/cache/Caffeine$Strength.toString:()Ljava/lang/String;
     243: getstatic     #176                // Field java/util/Locale.US:Ljava/util/Locale;
     246: invokevirtual #177                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
     249: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: ldc           #165                // String ,
     254: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     257: pop
     258: aload_0
     259: getfield      #63                 // Field valueStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
     262: ifnull        293
     265: aload_1
     266: ldc           #178                // String valueStrength=
     268: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     271: aload_0
     272: getfield      #63                 // Field valueStrength:Lcom/github/benmanes/caffeine/cache/Caffeine$Strength;
     275: invokevirtual #175                // Method com/github/benmanes/caffeine/cache/Caffeine$Strength.toString:()Ljava/lang/String;
     278: getstatic     #176                // Field java/util/Locale.US:Ljava/util/Locale;
     281: invokevirtual #177                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
     284: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: ldc           #165                // String ,
     289: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     292: pop
     293: aload_0
     294: getfield      #95                 // Field evictionListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
     297: ifnull        307
     300: aload_1
     301: ldc           #179                // String evictionListener,
     303: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     306: pop
     307: aload_0
     308: getfield      #98                 // Field removalListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
     311: ifnull        321
     314: aload_1
     315: ldc           #180                // String removalListener,
     317: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: pop
     321: aload_0
     322: getfield      #60                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     325: ifnull        335
     328: aload_1
     329: ldc           #181                // String writer,
     331: invokevirtual #160                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     334: pop
     335: aload_1
     336: invokevirtual #162                // Method java/lang/StringBuilder.length:()I
     339: iload_2
     340: if_icmple     354
     343: aload_1
     344: aload_1
     345: invokevirtual #162                // Method java/lang/StringBuilder.length:()I
     348: iconst_2
     349: isub
     350: invokevirtual #182                // Method java/lang/StringBuilder.deleteCharAt:(I)Ljava/lang/StringBuilder;
     353: pop
     354: aload_1
     355: bipush        125
     357: invokevirtual #161                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     360: invokevirtual #183                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     363: areturn

  private static com.github.benmanes.caffeine.cache.stats.StatsCounter lambda$recordStats$0(java.util.function.Supplier);
    Code:
       0: aload_0
       1: invokeinterface #184,  1          // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       6: checkcast     #185                // class com/github/benmanes/caffeine/cache/stats/StatsCounter
       9: invokestatic  #186                // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.guardedStatsCounter:(Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;)Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      12: areturn

  static {};
    Code:
       0: ldc           #3                  // class com/github/benmanes/caffeine/cache/Caffeine
       2: invokevirtual #187                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #188                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #144                // Field logger:Ljava/util/logging/Logger;
      11: invokedynamic #189,  0            // InvokeDynamic #2:get:()Ljava/util/function/Supplier;
      16: putstatic     #111                // Field ENABLED_STATS_COUNTER_SUPPLIER:Ljava/util/function/Supplier;
      19: return
}
