Compiled from "LinkedDeque.java"
interface com.github.benmanes.caffeine.cache.LinkedDeque<E> extends java.util.Deque<E> {
  public abstract boolean isFirst(E);

  public abstract boolean isLast(E);

  public abstract void moveToFront(E);

  public abstract void moveToBack(E);

  public abstract E getPrevious(E);

  public abstract void setPrevious(E, E);

  public abstract E getNext(E);

  public abstract void setNext(E, E);

  public abstract com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator<E> iterator();

  public abstract com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator<E> descendingIterator();

  public default java.util.Iterator descendingIterator();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
       6: areturn

  public default java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
       6: areturn
}
