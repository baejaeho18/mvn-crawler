Compiled from "BoundedLocalCache.java"
abstract class com.github.benmanes.caffeine.cache.BoundedLocalCache<K, V> extends com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef<K, V> implements com.github.benmanes.caffeine.cache.LocalCache<K, V> {
  static final java.util.logging.Logger logger;

  static final int NCPU;

  static final int WRITE_BUFFER_MIN;

  static final int WRITE_BUFFER_MAX;

  static final int WRITE_BUFFER_RETRIES;

  static final long MAXIMUM_CAPACITY;

  static final double PERCENT_MAIN;

  static final double PERCENT_MAIN_PROTECTED;

  static final double HILL_CLIMBER_RESTART_THRESHOLD;

  static final double HILL_CLIMBER_STEP_PERCENT;

  static final double HILL_CLIMBER_STEP_DECAY_RATE;

  static final int QUEUE_TRANSFER_THRESHOLD;

  static final long EXPIRE_WRITE_TOLERANCE;

  static final long MAXIMUM_EXPIRY;

  final java.util.concurrent.ConcurrentHashMap<java.lang.Object, com.github.benmanes.caffeine.cache.Node<K, V>> data;

  final com.github.benmanes.caffeine.cache.CacheLoader<K, V> cacheLoader;

  final com.github.benmanes.caffeine.cache.BoundedLocalCache$PerformCleanupTask drainBuffersTask;

  final java.util.function.Consumer<com.github.benmanes.caffeine.cache.Node<K, V>> accessPolicy;

  final com.github.benmanes.caffeine.cache.Buffer<com.github.benmanes.caffeine.cache.Node<K, V>> readBuffer;

  final com.github.benmanes.caffeine.cache.NodeFactory<K, V> nodeFactory;

  final java.util.concurrent.locks.ReentrantLock evictionLock;

  final com.github.benmanes.caffeine.cache.CacheWriter<K, V> writer;

  final com.github.benmanes.caffeine.cache.Weigher<K, V> weigher;

  final java.util.concurrent.Executor executor;

  final boolean isAsync;

  transient java.util.Set<K> keySet;

  transient java.util.Collection<V> values;

  transient java.util.Set<java.util.Map$Entry<K, V>> entrySet;

  protected com.github.benmanes.caffeine.cache.BoundedLocalCache(com.github.benmanes.caffeine.cache.Caffeine<K, V>, com.github.benmanes.caffeine.cache.CacheLoader<K, V>, boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method com/github/benmanes/caffeine/cache/BLCHeader$DrainStatusRef."<init>":()V
       4: aload_0
       5: iload_3
       6: putfield      #6                  // Field isAsync:Z
       9: aload_0
      10: aload_2
      11: putfield      #7                  // Field cacheLoader:Lcom/github/benmanes/caffeine/cache/CacheLoader;
      14: aload_0
      15: aload_1
      16: invokevirtual #8                  // Method com/github/benmanes/caffeine/cache/Caffeine.getExecutor:()Ljava/util/concurrent/Executor;
      19: putfield      #9                  // Field executor:Ljava/util/concurrent/Executor;
      22: aload_0
      23: new           #10                 // class java/util/concurrent/locks/ReentrantLock
      26: dup
      27: invokespecial #11                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      30: putfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
      33: aload_0
      34: aload_1
      35: iload_3
      36: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/Caffeine.getWeigher:(Z)Lcom/github/benmanes/caffeine/cache/Weigher;
      39: putfield      #14                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      42: aload_0
      43: aload_1
      44: iload_3
      45: invokevirtual #15                 // Method com/github/benmanes/caffeine/cache/Caffeine.getCacheWriter:(Z)Lcom/github/benmanes/caffeine/cache/CacheWriter;
      48: putfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      51: aload_0
      52: new           #17                 // class com/github/benmanes/caffeine/cache/BoundedLocalCache$PerformCleanupTask
      55: dup
      56: aload_0
      57: invokespecial #18                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$PerformCleanupTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      60: putfield      #19                 // Field drainBuffersTask:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$PerformCleanupTask;
      63: aload_0
      64: aload_1
      65: iload_3
      66: invokestatic  #20                 // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newFactory:(Lcom/github/benmanes/caffeine/cache/Caffeine;Z)Lcom/github/benmanes/caffeine/cache/NodeFactory;
      69: putfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      72: aload_0
      73: new           #22                 // class java/util/concurrent/ConcurrentHashMap
      76: dup
      77: aload_1
      78: invokevirtual #23                 // Method com/github/benmanes/caffeine/cache/Caffeine.getInitialCapacity:()I
      81: invokespecial #24                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      84: putfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      87: aload_0
      88: aload_0
      89: invokevirtual #26                 // Method evicts:()Z
      92: ifne          116
      95: aload_0
      96: invokevirtual #27                 // Method collectKeys:()Z
      99: ifne          116
     102: aload_0
     103: invokevirtual #28                 // Method collectValues:()Z
     106: ifne          116
     109: aload_0
     110: invokevirtual #29                 // Method expiresAfterAccess:()Z
     113: ifeq          126
     116: new           #30                 // class com/github/benmanes/caffeine/cache/BoundedBuffer
     119: dup
     120: invokespecial #31                 // Method com/github/benmanes/caffeine/cache/BoundedBuffer."<init>":()V
     123: goto          129
     126: invokestatic  #32                 // InterfaceMethod com/github/benmanes/caffeine/cache/Buffer.disabled:()Lcom/github/benmanes/caffeine/cache/Buffer;
     129: putfield      #33                 // Field readBuffer:Lcom/github/benmanes/caffeine/cache/Buffer;
     132: aload_0
     133: aload_0
     134: invokevirtual #26                 // Method evicts:()Z
     137: ifne          147
     140: aload_0
     141: invokevirtual #29                 // Method expiresAfterAccess:()Z
     144: ifeq          156
     147: aload_0
     148: invokedynamic #34,  0             // InvokeDynamic #0:accept:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)Ljava/util/function/Consumer;
     153: goto          161
     156: invokedynamic #35,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
     161: putfield      #36                 // Field accessPolicy:Ljava/util/function/Consumer;
     164: aload_0
     165: invokevirtual #26                 // Method evicts:()Z
     168: ifeq          179
     171: aload_0
     172: aload_1
     173: invokevirtual #37                 // Method com/github/benmanes/caffeine/cache/Caffeine.getMaximum:()J
     176: invokevirtual #38                 // Method setMaximumSize:(J)V
     179: return

  final boolean isComputingAsync(com.github.benmanes.caffeine.cache.Node<?, ?>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field isAsync:Z
       4: ifeq          24
       7: aload_1
       8: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      11: checkcast     #40                 // class java/util/concurrent/CompletableFuture
      14: invokestatic  #41                 // Method com/github/benmanes/caffeine/cache/Async.isReady:(Ljava/util/concurrent/CompletableFuture;)Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  protected com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderWindowDeque();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderProbationDeque();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> accessOrderProtectedDeque();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected com.github.benmanes.caffeine.cache.WriteOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>> writeOrderDeque();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected boolean buffersWrites();
    Code:
       0: iconst_0
       1: ireturn

  protected com.github.benmanes.caffeine.cache.MpscGrowableArrayQueue<java.lang.Runnable> writeBuffer();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final java.util.concurrent.Executor executor();
    Code:
       0: aload_0
       1: getfield      #9                  // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  protected boolean hasWriter();
    Code:
       0: aload_0
       1: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
       4: invokestatic  #44                 // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.disabledWriter:()Lcom/github/benmanes/caffeine/cache/CacheWriter;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isRecordingStats();
    Code:
       0: iconst_0
       1: ireturn

  public com.github.benmanes.caffeine.cache.stats.StatsCounter statsCounter();
    Code:
       0: invokestatic  #45                 // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.disabledStatsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
       3: areturn

  public com.github.benmanes.caffeine.cache.Ticker statsTicker();
    Code:
       0: invokestatic  #46                 // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.disabledTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       3: areturn

  public com.github.benmanes.caffeine.cache.RemovalListener<K, V> removalListener();
    Code:
       0: aconst_null
       1: areturn

  public boolean hasRemovalListener();
    Code:
       0: iconst_0
       1: ireturn

  public void notifyRemoval(K, V, com.github.benmanes.caffeine.cache.RemovalCause);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method hasRemovalListener:()Z
       4: ldc           #48                 // String Notification should be guarded with a check
       6: iconst_0
       7: anewarray     #49                 // class java/lang/Object
      10: invokestatic  #50                 // Method com/github/benmanes/caffeine/cache/Caffeine.requireState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      13: aload_0
      14: aload_1
      15: aload_2
      16: aload_3
      17: invokedynamic #51,  0             // InvokeDynamic #2:run:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)Ljava/lang/Runnable;
      22: astore        4
      24: aload_0
      25: getfield      #9                  // Field executor:Ljava/util/concurrent/Executor;
      28: aload         4
      30: invokeinterface #52,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      35: goto          60
      38: astore        5
      40: getstatic     #54                 // Field logger:Ljava/util/logging/Logger;
      43: getstatic     #55                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      46: ldc           #56                 // String Exception thrown when submitting removal listener
      48: aload         5
      50: invokevirtual #57                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      53: aload         4
      55: invokeinterface #58,  1           // InterfaceMethod java/lang/Runnable.run:()V
      60: return
    Exception table:
       from    to  target type
          24    35    38   Class java/lang/Throwable

  protected boolean collectKeys();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean collectValues();
    Code:
       0: iconst_0
       1: ireturn

  protected java.lang.ref.ReferenceQueue<K> keyReferenceQueue();
    Code:
       0: aconst_null
       1: areturn

  protected java.lang.ref.ReferenceQueue<V> valueReferenceQueue();
    Code:
       0: aconst_null
       1: areturn

  protected com.github.benmanes.caffeine.cache.Pacer pacer();
    Code:
       0: aconst_null
       1: areturn

  protected boolean expiresVariable();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean expiresAfterAccess();
    Code:
       0: iconst_0
       1: ireturn

  protected long expiresAfterAccessNanos();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setExpiresAfterAccessNanos(long);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected boolean expiresAfterWrite();
    Code:
       0: iconst_0
       1: ireturn

  protected long expiresAfterWriteNanos();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setExpiresAfterWriteNanos(long);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected boolean refreshAfterWrite();
    Code:
       0: iconst_0
       1: ireturn

  protected long refreshAfterWriteNanos();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setRefreshAfterWriteNanos(long);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean hasWriteTime();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method expiresAfterWrite:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #60                 // Method refreshAfterWrite:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected com.github.benmanes.caffeine.cache.Expiry<K, V> expiry();
    Code:
       0: aconst_null
       1: areturn

  public com.github.benmanes.caffeine.cache.Ticker expirationTicker();
    Code:
       0: invokestatic  #46                 // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.disabledTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       3: areturn

  protected com.github.benmanes.caffeine.cache.TimerWheel<K, V> timerWheel();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected boolean evicts();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean isWeighted();
    Code:
       0: aload_0
       1: getfield      #14                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
       4: invokestatic  #61                 // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.singletonWeigher:()Lcom/github/benmanes/caffeine/cache/Weigher;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected com.github.benmanes.caffeine.cache.FrequencySketch<K> frequencySketch();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected boolean fastpath();
    Code:
       0: iconst_0
       1: ireturn

  protected long maximum();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected long windowMaximum();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected long mainProtectedMaximum();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setMaximum(long);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setWindowMaximum(long);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setMainProtectedMaximum(long);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected long weightedSize();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected long windowWeightedSize();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected long mainProtectedWeightedSize();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setWeightedSize(long);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setWindowWeightedSize(long);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setMainProtectedWeightedSize(long);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected int hitsInSample();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected int missesInSample();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected int sampleCount();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected double stepSize();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected double previousSampleHitRate();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected long adjustment();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setHitsInSample(int);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setMissesInSample(int);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setSampleCount(int);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setStepSize(double);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setPreviousSampleHitRate(double);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void setAdjustment(long);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  void setMaximumSize(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #62                 // String maximum must not be negative
      13: iconst_0
      14: anewarray     #49                 // class java/lang/Object
      17: invokestatic  #63                 // Method com/github/benmanes/caffeine/cache/Caffeine.requireArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      20: lload_1
      21: aload_0
      22: invokevirtual #64                 // Method maximum:()J
      25: lcmp
      26: ifne          30
      29: return
      30: lload_1
      31: ldc2_w        #66                 // long 9223372034707292160l
      34: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
      37: lstore_3
      38: lload_3
      39: ldc2_w        #69                 // double 0.99d
      42: lload_3
      43: l2d
      44: dmul
      45: d2l
      46: lsub
      47: lstore        5
      49: ldc2_w        #71                 // double 0.8d
      52: lload_3
      53: lload         5
      55: lsub
      56: l2d
      57: dmul
      58: d2l
      59: lstore        7
      61: aload_0
      62: lload_3
      63: invokevirtual #73                 // Method setMaximum:(J)V
      66: aload_0
      67: lload         5
      69: invokevirtual #74                 // Method setWindowMaximum:(J)V
      72: aload_0
      73: lload         7
      75: invokevirtual #75                 // Method setMainProtectedMaximum:(J)V
      78: aload_0
      79: iconst_0
      80: invokevirtual #76                 // Method setHitsInSample:(I)V
      83: aload_0
      84: iconst_0
      85: invokevirtual #77                 // Method setMissesInSample:(I)V
      88: aload_0
      89: ldc2_w        #78                 // double -0.0625d
      92: lload_3
      93: l2d
      94: dmul
      95: invokevirtual #80                 // Method setStepSize:(D)V
      98: aload_0
      99: invokevirtual #81                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
     102: ifnull        131
     105: aload_0
     106: invokevirtual #82                 // Method isWeighted:()Z
     109: ifne          131
     112: aload_0
     113: invokevirtual #83                 // Method weightedSize:()J
     116: lload_3
     117: iconst_1
     118: lushr
     119: lcmp
     120: iflt          131
     123: aload_0
     124: invokevirtual #81                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
     127: lload_3
     128: invokevirtual #84                 // Method com/github/benmanes/caffeine/cache/FrequencySketch.ensureCapacity:(J)V
     131: return

  void evictEntries();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method evicts:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #85                 // Method evictFromWindow:()I
      12: istore_1
      13: aload_0
      14: iload_1
      15: invokevirtual #86                 // Method evictFromMain:(I)V
      18: return

  int evictFromWindow();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
       6: invokevirtual #88                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peek:()Ljava/lang/Object;
       9: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      12: astore_2
      13: aload_0
      14: invokevirtual #89                 // Method windowWeightedSize:()J
      17: aload_0
      18: invokevirtual #90                 // Method windowMaximum:()J
      21: lcmp
      22: ifle          88
      25: aload_2
      26: ifnonnull     32
      29: goto          88
      32: aload_2
      33: invokevirtual #91                 // Method com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
      36: astore_3
      37: aload_2
      38: invokevirtual #92                 // Method com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
      41: ifeq          83
      44: aload_2
      45: invokevirtual #93                 // Method com/github/benmanes/caffeine/cache/Node.makeMainProbation:()V
      48: aload_0
      49: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      52: aload_2
      53: invokevirtual #94                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
      56: pop
      57: aload_0
      58: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      61: aload_2
      62: invokevirtual #96                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.add:(Ljava/lang/Object;)Z
      65: pop
      66: iinc          1, 1
      69: aload_0
      70: aload_0
      71: invokevirtual #89                 // Method windowWeightedSize:()J
      74: aload_2
      75: invokevirtual #92                 // Method com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
      78: i2l
      79: lsub
      80: invokevirtual #97                 // Method setWindowWeightedSize:(J)V
      83: aload_3
      84: astore_2
      85: goto          13
      88: iload_1
      89: ireturn

  void evictFromMain(int);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
       6: invokevirtual #98                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekFirst:()Ljava/lang/Object;
       9: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      12: astore_3
      13: aload_0
      14: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      17: invokevirtual #99                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekLast:()Ljava/lang/Object;
      20: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      23: astore        4
      25: aload_0
      26: invokevirtual #83                 // Method weightedSize:()J
      29: aload_0
      30: invokevirtual #64                 // Method maximum:()J
      33: lcmp
      34: ifle          443
      37: iload_1
      38: ifne          53
      41: aload_0
      42: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      45: invokevirtual #99                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekLast:()Ljava/lang/Object;
      48: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      51: astore        4
      53: aload         4
      55: ifnonnull     104
      58: aload_3
      59: ifnonnull     104
      62: iload_2
      63: iconst_1
      64: if_icmpne     83
      67: aload_0
      68: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      71: invokevirtual #98                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekFirst:()Ljava/lang/Object;
      74: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      77: astore_3
      78: iconst_2
      79: istore_2
      80: goto          25
      83: iload_2
      84: iconst_2
      85: if_icmpne     443
      88: aload_0
      89: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      92: invokevirtual #98                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekFirst:()Ljava/lang/Object;
      95: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      98: astore_3
      99: iconst_0
     100: istore_2
     101: goto          25
     104: aload_3
     105: ifnull        123
     108: aload_3
     109: invokevirtual #92                 // Method com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
     112: ifne          123
     115: aload_3
     116: invokevirtual #91                 // Method com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     119: astore_3
     120: goto          25
     123: aload         4
     125: ifnull        161
     128: aload         4
     130: invokevirtual #92                 // Method com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
     133: ifne          161
     136: iload_1
     137: ifle          148
     140: aload         4
     142: invokevirtual #101                // Method com/github/benmanes/caffeine/cache/Node.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     145: goto          153
     148: aload         4
     150: invokevirtual #91                 // Method com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     153: astore        4
     155: iinc          1, -1
     158: goto          25
     161: aload_3
     162: ifnonnull     197
     165: aload         4
     167: invokevirtual #101                // Method com/github/benmanes/caffeine/cache/Node.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     170: astore        5
     172: aload         4
     174: astore        6
     176: aload         5
     178: astore        4
     180: iinc          1, -1
     183: aload_0
     184: aload         6
     186: getstatic     #102                // Field com/github/benmanes/caffeine/cache/RemovalCause.SIZE:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     189: lconst_0
     190: invokevirtual #103                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)Z
     193: pop
     194: goto          25
     197: aload         4
     199: ifnonnull     224
     202: aload_3
     203: astore        5
     205: aload_3
     206: invokevirtual #91                 // Method com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     209: astore_3
     210: aload_0
     211: aload         5
     213: getstatic     #102                // Field com/github/benmanes/caffeine/cache/RemovalCause.SIZE:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     216: lconst_0
     217: invokevirtual #103                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)Z
     220: pop
     221: goto          25
     224: aload_3
     225: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
     228: astore        5
     230: aload         4
     232: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
     235: astore        6
     237: aload         5
     239: ifnonnull     264
     242: aload_3
     243: astore        7
     245: aload_3
     246: invokevirtual #91                 // Method com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     249: astore_3
     250: aload_0
     251: aload         7
     253: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     256: lconst_0
     257: invokevirtual #103                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)Z
     260: pop
     261: goto          25
     264: aload         6
     266: ifnonnull     309
     269: aload         4
     271: astore        7
     273: iload_1
     274: ifle          285
     277: aload         4
     279: invokevirtual #101                // Method com/github/benmanes/caffeine/cache/Node.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     282: goto          290
     285: aload         4
     287: invokevirtual #91                 // Method com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     290: astore        4
     292: iinc          1, -1
     295: aload_0
     296: aload         7
     298: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     301: lconst_0
     302: invokevirtual #103                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)Z
     305: pop
     306: goto          25
     309: aload         4
     311: invokevirtual #92                 // Method com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
     314: i2l
     315: aload_0
     316: invokevirtual #64                 // Method maximum:()J
     319: lcmp
     320: ifle          363
     323: aload         4
     325: astore        7
     327: iload_1
     328: ifle          339
     331: aload         4
     333: invokevirtual #101                // Method com/github/benmanes/caffeine/cache/Node.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     336: goto          344
     339: aload         4
     341: invokevirtual #91                 // Method com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     344: astore        4
     346: iinc          1, -1
     349: aload_0
     350: aload         7
     352: getstatic     #102                // Field com/github/benmanes/caffeine/cache/RemovalCause.SIZE:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     355: lconst_0
     356: invokevirtual #103                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)Z
     359: pop
     360: goto          25
     363: iinc          1, -1
     366: aload_0
     367: aload         6
     369: aload         5
     371: invokevirtual #106                // Method admit:(Ljava/lang/Object;Ljava/lang/Object;)Z
     374: ifeq          406
     377: aload_3
     378: astore        7
     380: aload_3
     381: invokevirtual #91                 // Method com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     384: astore_3
     385: aload_0
     386: aload         7
     388: getstatic     #102                // Field com/github/benmanes/caffeine/cache/RemovalCause.SIZE:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     391: lconst_0
     392: invokevirtual #103                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)Z
     395: pop
     396: aload         4
     398: invokevirtual #101                // Method com/github/benmanes/caffeine/cache/Node.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     401: astore        4
     403: goto          440
     406: aload         4
     408: astore        7
     410: iload_1
     411: ifle          422
     414: aload         4
     416: invokevirtual #101                // Method com/github/benmanes/caffeine/cache/Node.getPreviousInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     419: goto          427
     422: aload         4
     424: invokevirtual #91                 // Method com/github/benmanes/caffeine/cache/Node.getNextInAccessOrder:()Lcom/github/benmanes/caffeine/cache/Node;
     427: astore        4
     429: aload_0
     430: aload         7
     432: getstatic     #102                // Field com/github/benmanes/caffeine/cache/RemovalCause.SIZE:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     435: lconst_0
     436: invokevirtual #103                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)Z
     439: pop
     440: goto          25
     443: return

  boolean admit(K, K);
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
       4: aload_2
       5: invokevirtual #107                // Method com/github/benmanes/caffeine/cache/FrequencySketch.frequency:(Ljava/lang/Object;)I
       8: istore_3
       9: aload_0
      10: invokevirtual #81                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
      13: aload_1
      14: invokevirtual #107                // Method com/github/benmanes/caffeine/cache/FrequencySketch.frequency:(Ljava/lang/Object;)I
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmple     27
      25: iconst_1
      26: ireturn
      27: iload         4
      29: iconst_5
      30: if_icmpgt     35
      33: iconst_0
      34: ireturn
      35: invokestatic  #108                // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
      38: invokevirtual #109                // Method java/util/concurrent/ThreadLocalRandom.nextInt:()I
      41: istore        5
      43: iload         5
      45: bipush        127
      47: iand
      48: ifne          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ireturn

  void expireEntries();
    Code:
       0: aload_0
       1: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       4: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
       9: lstore_1
      10: aload_0
      11: lload_1
      12: invokevirtual #112                // Method expireAfterAccessEntries:(J)V
      15: aload_0
      16: lload_1
      17: invokevirtual #113                // Method expireAfterWriteEntries:(J)V
      20: aload_0
      21: lload_1
      22: invokevirtual #114                // Method expireVariableEntries:(J)V
      25: aload_0
      26: invokevirtual #115                // Method pacer:()Lcom/github/benmanes/caffeine/cache/Pacer;
      29: astore_3
      30: aload_3
      31: ifnull        72
      34: aload_0
      35: lload_1
      36: invokespecial #116                // Method getExpirationDelay:(J)J
      39: lstore        4
      41: lload         4
      43: ldc2_w        #117                // long 9223372036854775807l
      46: lcmp
      47: ifne          57
      50: aload_3
      51: invokevirtual #119                // Method com/github/benmanes/caffeine/cache/Pacer.cancel:()V
      54: goto          72
      57: aload_3
      58: aload_0
      59: getfield      #9                  // Field executor:Ljava/util/concurrent/Executor;
      62: aload_0
      63: getfield      #19                 // Field drainBuffersTask:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$PerformCleanupTask;
      66: lload_1
      67: lload         4
      69: invokevirtual #120                // Method com/github/benmanes/caffeine/cache/Pacer.schedule:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;JJ)V
      72: return

  void expireAfterAccessEntries(long);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method expiresAfterAccess:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: aload_0
      10: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      13: lload_1
      14: invokevirtual #121                // Method expireAfterAccessEntries:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;J)V
      17: aload_0
      18: invokevirtual #26                 // Method evicts:()Z
      21: ifeq          42
      24: aload_0
      25: aload_0
      26: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      29: lload_1
      30: invokevirtual #121                // Method expireAfterAccessEntries:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;J)V
      33: aload_0
      34: aload_0
      35: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      38: lload_1
      39: invokevirtual #121                // Method expireAfterAccessEntries:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;J)V
      42: return

  void expireAfterAccessEntries(com.github.benmanes.caffeine.cache.AccessOrderDeque<com.github.benmanes.caffeine.cache.Node<K, V>>, long);
    Code:
       0: aload_0
       1: invokevirtual #122                // Method expiresAfterAccessNanos:()J
       4: lstore        4
       6: aload_1
       7: invokevirtual #98                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekFirst:()Ljava/lang/Object;
      10: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      13: astore        6
      15: aload         6
      17: ifnull        33
      20: lload_2
      21: aload         6
      23: invokevirtual #123                // Method com/github/benmanes/caffeine/cache/Node.getAccessTime:()J
      26: lsub
      27: lload         4
      29: lcmp
      30: ifge          34
      33: return
      34: aload_0
      35: aload         6
      37: getstatic     #124                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      40: lload_2
      41: invokevirtual #103                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)Z
      44: pop
      45: goto          6

  void expireAfterWriteEntries(long);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method expiresAfterWrite:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #125                // Method expiresAfterWriteNanos:()J
      12: lstore_3
      13: aload_0
      14: invokevirtual #126                // Method writeOrderDeque:()Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
      17: invokevirtual #127                // Method com/github/benmanes/caffeine/cache/WriteOrderDeque.peekFirst:()Ljava/lang/Object;
      20: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      23: astore        5
      25: aload         5
      27: ifnull        59
      30: lload_1
      31: aload         5
      33: invokevirtual #128                // Method com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      36: lsub
      37: lload_3
      38: lcmp
      39: ifge          45
      42: goto          59
      45: aload_0
      46: aload         5
      48: getstatic     #124                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      51: lload_1
      52: invokevirtual #103                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)Z
      55: pop
      56: goto          13
      59: return

  void expireVariableEntries(long);
    Code:
       0: aload_0
       1: invokevirtual #129                // Method expiresVariable:()Z
       4: ifeq          15
       7: aload_0
       8: invokevirtual #130                // Method timerWheel:()Lcom/github/benmanes/caffeine/cache/TimerWheel;
      11: lload_1
      12: invokevirtual #131                // Method com/github/benmanes/caffeine/cache/TimerWheel.advance:(J)V
      15: return

  private long getExpirationDelay(long);
    Code:
       0: ldc2_w        #117                // long 9223372036854775807l
       3: lstore_3
       4: aload_0
       5: invokevirtual #29                 // Method expiresAfterAccess:()Z
       8: ifeq          120
      11: aload_0
      12: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      15: invokevirtual #98                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekFirst:()Ljava/lang/Object;
      18: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      21: astore        5
      23: aload         5
      25: ifnull        45
      28: lload_3
      29: aload_0
      30: invokevirtual #122                // Method expiresAfterAccessNanos:()J
      33: lload_1
      34: aload         5
      36: invokevirtual #123                // Method com/github/benmanes/caffeine/cache/Node.getAccessTime:()J
      39: lsub
      40: lsub
      41: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
      44: lstore_3
      45: aload_0
      46: invokevirtual #26                 // Method evicts:()Z
      49: ifeq          120
      52: aload_0
      53: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      56: invokevirtual #98                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekFirst:()Ljava/lang/Object;
      59: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      62: astore        5
      64: aload         5
      66: ifnull        86
      69: lload_3
      70: aload_0
      71: invokevirtual #122                // Method expiresAfterAccessNanos:()J
      74: lload_1
      75: aload         5
      77: invokevirtual #123                // Method com/github/benmanes/caffeine/cache/Node.getAccessTime:()J
      80: lsub
      81: lsub
      82: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
      85: lstore_3
      86: aload_0
      87: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      90: invokevirtual #98                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peekFirst:()Ljava/lang/Object;
      93: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      96: astore        5
      98: aload         5
     100: ifnull        120
     103: lload_3
     104: aload_0
     105: invokevirtual #122                // Method expiresAfterAccessNanos:()J
     108: lload_1
     109: aload         5
     111: invokevirtual #123                // Method com/github/benmanes/caffeine/cache/Node.getAccessTime:()J
     114: lsub
     115: lsub
     116: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
     119: lstore_3
     120: aload_0
     121: invokevirtual #59                 // Method expiresAfterWrite:()Z
     124: ifeq          161
     127: aload_0
     128: invokevirtual #126                // Method writeOrderDeque:()Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
     131: invokevirtual #127                // Method com/github/benmanes/caffeine/cache/WriteOrderDeque.peekFirst:()Ljava/lang/Object;
     134: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
     137: astore        5
     139: aload         5
     141: ifnull        161
     144: lload_3
     145: aload_0
     146: invokevirtual #125                // Method expiresAfterWriteNanos:()J
     149: lload_1
     150: aload         5
     152: invokevirtual #128                // Method com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
     155: lsub
     156: lsub
     157: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
     160: lstore_3
     161: aload_0
     162: invokevirtual #129                // Method expiresVariable:()Z
     165: ifeq          180
     168: lload_3
     169: aload_0
     170: invokevirtual #130                // Method timerWheel:()Lcom/github/benmanes/caffeine/cache/TimerWheel;
     173: invokevirtual #132                // Method com/github/benmanes/caffeine/cache/TimerWheel.getExpirationDelay:()J
     176: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
     179: lstore_3
     180: lload_3
     181: lreturn

  boolean hasExpired(com.github.benmanes.caffeine.cache.Node<K, V>, long);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method expiresAfterAccess:()Z
       4: ifeq          25
       7: lload_2
       8: aload_1
       9: invokevirtual #123                // Method com/github/benmanes/caffeine/cache/Node.getAccessTime:()J
      12: lsub
      13: aload_0
      14: invokevirtual #122                // Method expiresAfterAccessNanos:()J
      17: lcmp
      18: iflt          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: aload_0
      27: invokevirtual #59                 // Method expiresAfterWrite:()Z
      30: ifeq          51
      33: lload_2
      34: aload_1
      35: invokevirtual #128                // Method com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      38: lsub
      39: aload_0
      40: invokevirtual #125                // Method expiresAfterWriteNanos:()J
      43: lcmp
      44: iflt          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ior
      53: aload_0
      54: invokevirtual #129                // Method expiresVariable:()Z
      57: ifeq          75
      60: lload_2
      61: aload_1
      62: invokevirtual #133                // Method com/github/benmanes/caffeine/cache/Node.getVariableTime:()J
      65: lsub
      66: lconst_0
      67: lcmp
      68: iflt          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ior
      77: ireturn

  boolean evictEntry(com.github.benmanes.caffeine.cache.Node<K, V>, com.github.benmanes.caffeine.cache.RemovalCause, long);
    Code:
       0: aload_1
       1: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
       4: astore        5
       6: iconst_1
       7: anewarray     #49                 // class java/lang/Object
      10: astore        6
      12: iconst_1
      13: newarray       boolean
      15: astore        7
      17: iconst_1
      18: newarray       boolean
      20: astore        8
      22: iconst_1
      23: anewarray     #134                // class com/github/benmanes/caffeine/cache/RemovalCause
      26: astore        9
      28: aload_0
      29: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      32: aload_1
      33: invokevirtual #135                // Method com/github/benmanes/caffeine/cache/Node.getKeyReference:()Ljava/lang/Object;
      36: aload_0
      37: aload_1
      38: aload         6
      40: aload         9
      42: aload         5
      44: aload_2
      45: lload_3
      46: aload         8
      48: aload         7
      50: invokedynamic #136,  0            // InvokeDynamic #3:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;[Ljava/lang/Object;[Lcom/github/benmanes/caffeine/cache/RemovalCause;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;J[Z[Z)Ljava/util/function/BiFunction;
      55: invokevirtual #137                // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      58: pop
      59: aload         8
      61: iconst_0
      62: baload
      63: ifeq          68
      66: iconst_0
      67: ireturn
      68: aload_1
      69: invokevirtual #138                // Method com/github/benmanes/caffeine/cache/Node.inWindow:()Z
      72: ifeq          101
      75: aload_0
      76: invokevirtual #26                 // Method evicts:()Z
      79: ifne          89
      82: aload_0
      83: invokevirtual #29                 // Method expiresAfterAccess:()Z
      86: ifeq          101
      89: aload_0
      90: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      93: aload_1
      94: invokevirtual #94                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
      97: pop
      98: goto          136
     101: aload_0
     102: invokevirtual #26                 // Method evicts:()Z
     105: ifeq          136
     108: aload_1
     109: invokevirtual #139                // Method com/github/benmanes/caffeine/cache/Node.inMainProbation:()Z
     112: ifeq          127
     115: aload_0
     116: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     119: aload_1
     120: invokevirtual #94                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
     123: pop
     124: goto          136
     127: aload_0
     128: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     131: aload_1
     132: invokevirtual #94                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
     135: pop
     136: aload_0
     137: invokevirtual #59                 // Method expiresAfterWrite:()Z
     140: ifeq          155
     143: aload_0
     144: invokevirtual #126                // Method writeOrderDeque:()Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
     147: aload_1
     148: invokevirtual #140                // Method com/github/benmanes/caffeine/cache/WriteOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/WriteOrderDeque$WriteOrder;)Z
     151: pop
     152: goto          170
     155: aload_0
     156: invokevirtual #129                // Method expiresVariable:()Z
     159: ifeq          170
     162: aload_0
     163: invokevirtual #130                // Method timerWheel:()Lcom/github/benmanes/caffeine/cache/TimerWheel;
     166: aload_1
     167: invokevirtual #141                // Method com/github/benmanes/caffeine/cache/TimerWheel.deschedule:(Lcom/github/benmanes/caffeine/cache/Node;)V
     170: aload         7
     172: iconst_0
     173: baload
     174: ifeq          218
     177: aload_0
     178: invokevirtual #142                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     181: aload_1
     182: invokevirtual #143                // Method com/github/benmanes/caffeine/cache/Node.getWeight:()I
     185: aload         9
     187: iconst_0
     188: aaload
     189: invokeinterface #144,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordEviction:(ILcom/github/benmanes/caffeine/cache/RemovalCause;)V
     194: aload_0
     195: invokevirtual #47                 // Method hasRemovalListener:()Z
     198: ifeq          223
     201: aload_0
     202: aload         5
     204: aload         6
     206: iconst_0
     207: aaload
     208: aload         9
     210: iconst_0
     211: aaload
     212: invokevirtual #145                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     215: goto          223
     218: aload_0
     219: aload_1
     220: invokevirtual #146                // Method makeDead:(Lcom/github/benmanes/caffeine/cache/Node;)V
     223: iconst_1
     224: ireturn

  void climb();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method evicts:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #147                // Method determineAdjustment:()V
      12: aload_0
      13: invokevirtual #148                // Method demoteFromMainProtected:()V
      16: aload_0
      17: invokevirtual #149                // Method adjustment:()J
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifne          28
      27: return
      28: lload_1
      29: lconst_0
      30: lcmp
      31: ifle          41
      34: aload_0
      35: invokevirtual #150                // Method increaseWindow:()V
      38: goto          45
      41: aload_0
      42: invokevirtual #151                // Method decreaseWindow:()V
      45: return

  void determineAdjustment();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
       4: invokevirtual #152                // Method com/github/benmanes/caffeine/cache/FrequencySketch.isNotInitialized:()Z
       7: ifeq          26
      10: aload_0
      11: dconst_0
      12: invokevirtual #153                // Method setPreviousSampleHitRate:(D)V
      15: aload_0
      16: iconst_0
      17: invokevirtual #77                 // Method setMissesInSample:(I)V
      20: aload_0
      21: iconst_0
      22: invokevirtual #76                 // Method setHitsInSample:(I)V
      25: return
      26: aload_0
      27: invokevirtual #154                // Method hitsInSample:()I
      30: aload_0
      31: invokevirtual #155                // Method missesInSample:()I
      34: iadd
      35: istore_1
      36: iload_1
      37: aload_0
      38: invokevirtual #81                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
      41: getfield      #156                // Field com/github/benmanes/caffeine/cache/FrequencySketch.sampleSize:I
      44: if_icmpge     48
      47: return
      48: aload_0
      49: invokevirtual #154                // Method hitsInSample:()I
      52: i2d
      53: iload_1
      54: i2d
      55: ddiv
      56: dstore_2
      57: dload_2
      58: aload_0
      59: invokevirtual #157                // Method previousSampleHitRate:()D
      62: dsub
      63: dstore        4
      65: dload         4
      67: dconst_0
      68: dcmpl
      69: iflt          79
      72: aload_0
      73: invokevirtual #158                // Method stepSize:()D
      76: goto          84
      79: aload_0
      80: invokevirtual #158                // Method stepSize:()D
      83: dneg
      84: dstore        6
      86: dload         4
      88: invokestatic  #159                // Method java/lang/Math.abs:(D)D
      91: ldc2_w        #160                // double 0.05d
      94: dcmpl
      95: iflt          124
      98: ldc2_w        #162                // double 0.0625d
     101: aload_0
     102: invokevirtual #64                 // Method maximum:()J
     105: l2d
     106: dmul
     107: dload         6
     109: dconst_0
     110: dcmpl
     111: iflt          118
     114: iconst_1
     115: goto          119
     118: iconst_m1
     119: i2d
     120: dmul
     121: goto          130
     124: ldc2_w        #164                // double 0.98d
     127: dload         6
     129: dmul
     130: dstore        8
     132: aload_0
     133: dload_2
     134: invokevirtual #153                // Method setPreviousSampleHitRate:(D)V
     137: aload_0
     138: dload         6
     140: d2l
     141: invokevirtual #166                // Method setAdjustment:(J)V
     144: aload_0
     145: dload         8
     147: invokevirtual #80                 // Method setStepSize:(D)V
     150: aload_0
     151: iconst_0
     152: invokevirtual #77                 // Method setMissesInSample:(I)V
     155: aload_0
     156: iconst_0
     157: invokevirtual #76                 // Method setHitsInSample:(I)V
     160: return

  void increaseWindow();
    Code:
       0: aload_0
       1: invokevirtual #167                // Method mainProtectedMaximum:()J
       4: lconst_0
       5: lcmp
       6: ifne          10
       9: return
      10: aload_0
      11: invokevirtual #149                // Method adjustment:()J
      14: aload_0
      15: invokevirtual #167                // Method mainProtectedMaximum:()J
      18: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
      21: lstore_1
      22: aload_0
      23: aload_0
      24: invokevirtual #167                // Method mainProtectedMaximum:()J
      27: lload_1
      28: lsub
      29: invokevirtual #75                 // Method setMainProtectedMaximum:(J)V
      32: aload_0
      33: aload_0
      34: invokevirtual #90                 // Method windowMaximum:()J
      37: lload_1
      38: ladd
      39: invokevirtual #74                 // Method setWindowMaximum:(J)V
      42: aload_0
      43: invokevirtual #148                // Method demoteFromMainProtected:()V
      46: iconst_0
      47: istore_3
      48: iload_3
      49: sipush        1000
      52: if_icmpge     206
      55: aload_0
      56: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      59: invokevirtual #88                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peek:()Ljava/lang/Object;
      62: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      65: astore        4
      67: iconst_1
      68: istore        5
      70: aload         4
      72: ifnull        86
      75: lload_1
      76: aload         4
      78: invokevirtual #92                 // Method com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
      81: i2l
      82: lcmp
      83: ifge          101
      86: aload_0
      87: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      90: invokevirtual #88                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peek:()Ljava/lang/Object;
      93: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      96: astore        4
      98: iconst_0
      99: istore        5
     101: aload         4
     103: ifnonnull     109
     106: goto          206
     109: aload         4
     111: invokevirtual #92                 // Method com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
     114: istore        6
     116: lload_1
     117: iload         6
     119: i2l
     120: lcmp
     121: ifge          127
     124: goto          206
     127: lload_1
     128: iload         6
     130: i2l
     131: lsub
     132: lstore_1
     133: iload         5
     135: ifeq          151
     138: aload_0
     139: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     142: aload         4
     144: invokevirtual #94                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
     147: pop
     148: goto          173
     151: aload_0
     152: aload_0
     153: invokevirtual #168                // Method mainProtectedWeightedSize:()J
     156: iload         6
     158: i2l
     159: lsub
     160: invokevirtual #169                // Method setMainProtectedWeightedSize:(J)V
     163: aload_0
     164: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     167: aload         4
     169: invokevirtual #94                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
     172: pop
     173: aload_0
     174: aload_0
     175: invokevirtual #89                 // Method windowWeightedSize:()J
     178: iload         6
     180: i2l
     181: ladd
     182: invokevirtual #97                 // Method setWindowWeightedSize:(J)V
     185: aload_0
     186: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     189: aload         4
     191: invokevirtual #96                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.add:(Ljava/lang/Object;)Z
     194: pop
     195: aload         4
     197: invokevirtual #170                // Method com/github/benmanes/caffeine/cache/Node.makeWindow:()V
     200: iinc          3, 1
     203: goto          48
     206: aload_0
     207: aload_0
     208: invokevirtual #167                // Method mainProtectedMaximum:()J
     211: lload_1
     212: ladd
     213: invokevirtual #75                 // Method setMainProtectedMaximum:(J)V
     216: aload_0
     217: aload_0
     218: invokevirtual #90                 // Method windowMaximum:()J
     221: lload_1
     222: lsub
     223: invokevirtual #74                 // Method setWindowMaximum:(J)V
     226: aload_0
     227: lload_1
     228: invokevirtual #166                // Method setAdjustment:(J)V
     231: return

  void decreaseWindow();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method windowMaximum:()J
       4: lconst_1
       5: lcmp
       6: ifgt          10
       9: return
      10: aload_0
      11: invokevirtual #149                // Method adjustment:()J
      14: lneg
      15: lconst_0
      16: aload_0
      17: invokevirtual #90                 // Method windowMaximum:()J
      20: lconst_1
      21: lsub
      22: invokestatic  #171                // Method java/lang/Math.max:(JJ)J
      25: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
      28: lstore_1
      29: aload_0
      30: aload_0
      31: invokevirtual #167                // Method mainProtectedMaximum:()J
      34: lload_1
      35: ladd
      36: invokevirtual #75                 // Method setMainProtectedMaximum:(J)V
      39: aload_0
      40: aload_0
      41: invokevirtual #90                 // Method windowMaximum:()J
      44: lload_1
      45: lsub
      46: invokevirtual #74                 // Method setWindowMaximum:(J)V
      49: iconst_0
      50: istore_3
      51: iload_3
      52: sipush        1000
      55: if_icmpge     145
      58: aload_0
      59: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      62: invokevirtual #88                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.peek:()Ljava/lang/Object;
      65: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      68: astore        4
      70: aload         4
      72: ifnonnull     78
      75: goto          145
      78: aload         4
      80: invokevirtual #92                 // Method com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
      83: istore        5
      85: lload_1
      86: iload         5
      88: i2l
      89: lcmp
      90: ifge          96
      93: goto          145
      96: lload_1
      97: iload         5
      99: i2l
     100: lsub
     101: lstore_1
     102: aload_0
     103: aload_0
     104: invokevirtual #89                 // Method windowWeightedSize:()J
     107: iload         5
     109: i2l
     110: lsub
     111: invokevirtual #97                 // Method setWindowWeightedSize:(J)V
     114: aload_0
     115: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     118: aload         4
     120: invokevirtual #94                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
     123: pop
     124: aload_0
     125: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     128: aload         4
     130: invokevirtual #96                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.add:(Ljava/lang/Object;)Z
     133: pop
     134: aload         4
     136: invokevirtual #93                 // Method com/github/benmanes/caffeine/cache/Node.makeMainProbation:()V
     139: iinc          3, 1
     142: goto          51
     145: aload_0
     146: aload_0
     147: invokevirtual #167                // Method mainProtectedMaximum:()J
     150: lload_1
     151: lsub
     152: invokevirtual #75                 // Method setMainProtectedMaximum:(J)V
     155: aload_0
     156: aload_0
     157: invokevirtual #90                 // Method windowMaximum:()J
     160: lload_1
     161: ladd
     162: invokevirtual #74                 // Method setWindowMaximum:(J)V
     165: aload_0
     166: lload_1
     167: lneg
     168: invokevirtual #166                // Method setAdjustment:(J)V
     171: return

  void demoteFromMainProtected();
    Code:
       0: aload_0
       1: invokevirtual #167                // Method mainProtectedMaximum:()J
       4: lstore_1
       5: aload_0
       6: invokevirtual #168                // Method mainProtectedWeightedSize:()J
       9: lstore_3
      10: lload_3
      11: lload_1
      12: lcmp
      13: ifgt          17
      16: return
      17: iconst_0
      18: istore        5
      20: iload         5
      22: sipush        1000
      25: if_icmpge     87
      28: lload_3
      29: lload_1
      30: lcmp
      31: ifgt          37
      34: goto          87
      37: aload_0
      38: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      41: invokevirtual #172                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.poll:()Ljava/lang/Object;
      44: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      47: astore        6
      49: aload         6
      51: ifnonnull     57
      54: goto          87
      57: aload         6
      59: invokevirtual #93                 // Method com/github/benmanes/caffeine/cache/Node.makeMainProbation:()V
      62: aload_0
      63: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      66: aload         6
      68: invokevirtual #96                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.add:(Ljava/lang/Object;)Z
      71: pop
      72: lload_3
      73: aload         6
      75: invokevirtual #92                 // Method com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
      78: i2l
      79: lsub
      80: lstore_3
      81: iinc          5, 1
      84: goto          20
      87: aload_0
      88: lload_3
      89: invokevirtual #169                // Method setMainProtectedWeightedSize:(J)V
      92: return

  void afterRead(com.github.benmanes.caffeine.cache.Node<K, V>, long, boolean);
    Code:
       0: iload         4
       2: ifeq          15
       5: aload_0
       6: invokevirtual #142                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
       9: iconst_1
      10: invokeinterface #173,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordHits:(I)V
      15: aload_0
      16: invokevirtual #174                // Method skipReadBuffer:()Z
      19: ifne          36
      22: aload_0
      23: getfield      #33                 // Field readBuffer:Lcom/github/benmanes/caffeine/cache/Buffer;
      26: aload_1
      27: invokeinterface #175,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Buffer.offer:(Ljava/lang/Object;)I
      32: iconst_1
      33: if_icmpeq     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: istore        5
      43: aload_0
      44: iload         5
      46: invokevirtual #177                // Method shouldDrainBuffers:(Z)Z
      49: ifeq          56
      52: aload_0
      53: invokevirtual #178                // Method scheduleDrainBuffers:()V
      56: aload_0
      57: aload_1
      58: lload_2
      59: invokevirtual #179                // Method refreshIfNeeded:(Lcom/github/benmanes/caffeine/cache/Node;J)V
      62: return

  boolean skipReadBuffer();
    Code:
       0: aload_0
       1: invokevirtual #180                // Method fastpath:()Z
       4: ifeq          21
       7: aload_0
       8: invokevirtual #81                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
      11: invokevirtual #152                // Method com/github/benmanes/caffeine/cache/FrequencySketch.isNotInitialized:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  void refreshIfNeeded(com.github.benmanes.caffeine.cache.Node<K, V>, long);
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method refreshAfterWrite:()Z
       4: ifne          8
       7: return
       8: aload_1
       9: invokevirtual #128                // Method com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      12: lstore        6
      14: lload_2
      15: ldc2_w        #181                // long 6917529027641081854l
      18: ladd
      19: lstore        8
      21: lload_2
      22: lload         6
      24: lsub
      25: aload_0
      26: invokevirtual #183                // Method refreshAfterWriteNanos:()J
      29: lcmp
      30: ifle          207
      33: aload_1
      34: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      37: dup
      38: astore        4
      40: ifnull        207
      43: aload_1
      44: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      47: dup
      48: astore        5
      50: ifnull        207
      53: aload_1
      54: lload         6
      56: lload         8
      58: invokevirtual #184                // Method com/github/benmanes/caffeine/cache/Node.casWriteTime:(JJ)Z
      61: ifeq          207
      64: aload_0
      65: invokevirtual #185                // Method statsTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      68: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      73: lstore        11
      75: aload_0
      76: getfield      #6                  // Field isAsync:Z
      79: ifeq          132
      82: aload         5
      84: checkcast     #40                 // class java/util/concurrent/CompletableFuture
      87: astore        13
      89: aload         13
      91: invokestatic  #41                 // Method com/github/benmanes/caffeine/cache/Async.isReady:(Ljava/util/concurrent/CompletableFuture;)Z
      94: ifeq          119
      97: aload         13
      99: aload_0
     100: aload         4
     102: invokedynamic #186,  0            // InvokeDynamic #4:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/lang/Object;)Ljava/util/function/Function;
     107: invokevirtual #187                // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
     110: astore        14
     112: aload         14
     114: astore        10
     116: goto          129
     119: aload_1
     120: lload         8
     122: lload         6
     124: invokevirtual #184                // Method com/github/benmanes/caffeine/cache/Node.casWriteTime:(JJ)Z
     127: pop
     128: return
     129: goto          155
     132: aload_0
     133: getfield      #7                  // Field cacheLoader:Lcom/github/benmanes/caffeine/cache/CacheLoader;
     136: aload         4
     138: aload         5
     140: aload_0
     141: getfield      #9                  // Field executor:Ljava/util/concurrent/Executor;
     144: invokeinterface #188,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheLoader.asyncReload:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
     149: astore        13
     151: aload         13
     153: astore        10
     155: aload         10
     157: aload_0
     158: lload         11
     160: aload_1
     161: lload         8
     163: lload         6
     165: aload         10
     167: aload         4
     169: aload         5
     171: invokedynamic #189,  0            // InvokeDynamic #5:accept:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;JLcom/github/benmanes/caffeine/cache/Node;JJLjava/util/concurrent/CompletableFuture;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/BiConsumer;
     176: invokevirtual #190                // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
     179: pop
     180: goto          207
     183: astore        10
     185: aload_1
     186: lload         8
     188: lload         6
     190: invokevirtual #184                // Method com/github/benmanes/caffeine/cache/Node.casWriteTime:(JJ)Z
     193: pop
     194: getstatic     #54                 // Field logger:Ljava/util/logging/Logger;
     197: getstatic     #55                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
     200: ldc           #191                // String Exception thrown when submitting refresh task
     202: aload         10
     204: invokevirtual #57                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     207: return
    Exception table:
       from    to  target type
          64   128   183   Class java/lang/Throwable
         129   180   183   Class java/lang/Throwable

  long expireAfterCreate(K, V, com.github.benmanes.caffeine.cache.Expiry<K, V>, long);
    Code:
       0: aload_0
       1: invokevirtual #129                // Method expiresVariable:()Z
       4: ifeq          54
       7: aload_1
       8: ifnull        54
      11: aload_2
      12: ifnull        54
      15: aload_3
      16: aload_1
      17: aload_2
      18: lload         4
      20: invokeinterface #192,  5          // InterfaceMethod com/github/benmanes/caffeine/cache/Expiry.expireAfterCreate:(Ljava/lang/Object;Ljava/lang/Object;J)J
      25: lstore        6
      27: aload_0
      28: getfield      #6                  // Field isAsync:Z
      31: ifeq          42
      34: lload         4
      36: lload         6
      38: ladd
      39: goto          53
      42: lload         4
      44: lload         6
      46: ldc2_w        #193                // long 4611686018427387903l
      49: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
      52: ladd
      53: lreturn
      54: lconst_0
      55: lreturn

  long expireAfterUpdate(com.github.benmanes.caffeine.cache.Node<K, V>, K, V, com.github.benmanes.caffeine.cache.Expiry<K, V>, long);
    Code:
       0: aload_0
       1: invokevirtual #129                // Method expiresVariable:()Z
       4: ifeq          70
       7: aload_2
       8: ifnull        70
      11: aload_3
      12: ifnull        70
      15: lconst_1
      16: aload_1
      17: invokevirtual #133                // Method com/github/benmanes/caffeine/cache/Node.getVariableTime:()J
      20: lload         5
      22: lsub
      23: invokestatic  #171                // Method java/lang/Math.max:(JJ)J
      26: lstore        7
      28: aload         4
      30: aload_2
      31: aload_3
      32: lload         5
      34: lload         7
      36: invokeinterface #195,  7          // InterfaceMethod com/github/benmanes/caffeine/cache/Expiry.expireAfterUpdate:(Ljava/lang/Object;Ljava/lang/Object;JJ)J
      41: lstore        9
      43: aload_0
      44: getfield      #6                  // Field isAsync:Z
      47: ifeq          58
      50: lload         5
      52: lload         9
      54: ladd
      55: goto          69
      58: lload         5
      60: lload         9
      62: ldc2_w        #193                // long 4611686018427387903l
      65: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
      68: ladd
      69: lreturn
      70: lconst_0
      71: lreturn

  long expireAfterRead(com.github.benmanes.caffeine.cache.Node<K, V>, K, V, com.github.benmanes.caffeine.cache.Expiry<K, V>, long);
    Code:
       0: aload_0
       1: invokevirtual #129                // Method expiresVariable:()Z
       4: ifeq          70
       7: aload_2
       8: ifnull        70
      11: aload_3
      12: ifnull        70
      15: lconst_1
      16: aload_1
      17: invokevirtual #133                // Method com/github/benmanes/caffeine/cache/Node.getVariableTime:()J
      20: lload         5
      22: lsub
      23: invokestatic  #171                // Method java/lang/Math.max:(JJ)J
      26: lstore        7
      28: aload         4
      30: aload_2
      31: aload_3
      32: lload         5
      34: lload         7
      36: invokeinterface #196,  7          // InterfaceMethod com/github/benmanes/caffeine/cache/Expiry.expireAfterRead:(Ljava/lang/Object;Ljava/lang/Object;JJ)J
      41: lstore        9
      43: aload_0
      44: getfield      #6                  // Field isAsync:Z
      47: ifeq          58
      50: lload         5
      52: lload         9
      54: ladd
      55: goto          69
      58: lload         5
      60: lload         9
      62: ldc2_w        #193                // long 4611686018427387903l
      65: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
      68: ladd
      69: lreturn
      70: lconst_0
      71: lreturn

  void tryExpireAfterRead(com.github.benmanes.caffeine.cache.Node<K, V>, K, V, com.github.benmanes.caffeine.cache.Expiry<K, V>, long);
    Code:
       0: aload_0
       1: invokevirtual #129                // Method expiresVariable:()Z
       4: ifeq          15
       7: aload_2
       8: ifnull        15
      11: aload_3
      12: ifnonnull     16
      15: return
      16: aload_1
      17: invokevirtual #133                // Method com/github/benmanes/caffeine/cache/Node.getVariableTime:()J
      20: lstore        7
      22: lconst_1
      23: lload         7
      25: lload         5
      27: lsub
      28: invokestatic  #171                // Method java/lang/Math.max:(JJ)J
      31: lstore        9
      33: aload_0
      34: getfield      #6                  // Field isAsync:Z
      37: ifeq          50
      40: lload         9
      42: ldc2_w        #193                // long 4611686018427387903l
      45: lcmp
      46: ifle          50
      49: return
      50: aload         4
      52: aload_2
      53: aload_3
      54: lload         5
      56: lload         9
      58: invokeinterface #196,  7          // InterfaceMethod com/github/benmanes/caffeine/cache/Expiry.expireAfterRead:(Ljava/lang/Object;Ljava/lang/Object;JJ)J
      63: lstore        11
      65: lload         11
      67: lload         9
      69: lcmp
      70: ifeq          110
      73: aload_0
      74: getfield      #6                  // Field isAsync:Z
      77: ifeq          88
      80: lload         5
      82: lload         11
      84: ladd
      85: goto          99
      88: lload         5
      90: lload         11
      92: ldc2_w        #193                // long 4611686018427387903l
      95: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
      98: ladd
      99: lstore        13
     101: aload_1
     102: lload         7
     104: lload         13
     106: invokevirtual #197                // Method com/github/benmanes/caffeine/cache/Node.casVariableTime:(JJ)Z
     109: pop
     110: return

  void setVariableTime(com.github.benmanes.caffeine.cache.Node<K, V>, long);
    Code:
       0: aload_0
       1: invokevirtual #129                // Method expiresVariable:()Z
       4: ifeq          12
       7: aload_1
       8: lload_2
       9: invokevirtual #198                // Method com/github/benmanes/caffeine/cache/Node.setVariableTime:(J)V
      12: return

  void setWriteTime(com.github.benmanes.caffeine.cache.Node<K, V>, long);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method expiresAfterWrite:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #60                 // Method refreshAfterWrite:()Z
      11: ifeq          19
      14: aload_1
      15: lload_2
      16: invokevirtual #199                // Method com/github/benmanes/caffeine/cache/Node.setWriteTime:(J)V
      19: return

  void setAccessTime(com.github.benmanes.caffeine.cache.Node<K, V>, long);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method expiresAfterAccess:()Z
       4: ifeq          12
       7: aload_1
       8: lload_2
       9: invokevirtual #200                // Method com/github/benmanes/caffeine/cache/Node.setAccessTime:(J)V
      12: return

  void afterWrite(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #201                // Method buffersWrites:()Z
       4: ifeq          65
       7: iconst_0
       8: istore_2
       9: iload_2
      10: bipush        100
      12: if_icmpge     41
      15: aload_0
      16: invokevirtual #202                // Method writeBuffer:()Lcom/github/benmanes/caffeine/cache/MpscGrowableArrayQueue;
      19: aload_1
      20: invokevirtual #203                // Method com/github/benmanes/caffeine/cache/MpscGrowableArrayQueue.offer:(Ljava/lang/Object;)Z
      23: ifeq          31
      26: aload_0
      27: invokevirtual #204                // Method scheduleAfterWrite:()V
      30: return
      31: aload_0
      32: invokevirtual #178                // Method scheduleDrainBuffers:()V
      35: iinc          2, 1
      38: goto          9
      41: aload_0
      42: aload_1
      43: invokevirtual #205                // Method performCleanUp:(Ljava/lang/Runnable;)V
      46: goto          69
      49: astore_2
      50: getstatic     #54                 // Field logger:Ljava/util/logging/Logger;
      53: getstatic     #55                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      56: ldc           #207                // String Exception thrown when performing the maintenance task
      58: aload_2
      59: invokevirtual #57                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      62: goto          69
      65: aload_0
      66: invokevirtual #204                // Method scheduleAfterWrite:()V
      69: return
    Exception table:
       from    to  target type
          41    46    49   Class java/lang/RuntimeException

  void scheduleAfterWrite();
    Code:
       0: aload_0
       1: invokevirtual #208                // Method drainStatus:()I
       4: tableswitch   { // 0 to 3
                     0: 36
                     1: 48
                     2: 53
                     3: 63
               default: 64
          }
      36: aload_0
      37: iconst_0
      38: iconst_1
      39: invokevirtual #210                // Method casDrainStatus:(II)Z
      42: pop
      43: aload_0
      44: invokevirtual #178                // Method scheduleDrainBuffers:()V
      47: return
      48: aload_0
      49: invokevirtual #178                // Method scheduleDrainBuffers:()V
      52: return
      53: aload_0
      54: iconst_2
      55: iconst_3
      56: invokevirtual #210                // Method casDrainStatus:(II)Z
      59: ifeq          0
      62: return
      63: return
      64: new           #211                // class java/lang/IllegalStateException
      67: dup
      68: invokespecial #212                // Method java/lang/IllegalStateException."<init>":()V
      71: athrow

  void scheduleDrainBuffers();
    Code:
       0: aload_0
       1: invokevirtual #208                // Method drainStatus:()I
       4: iconst_2
       5: if_icmplt     9
       8: return
       9: aload_0
      10: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
      13: invokevirtual #213                // Method java/util/concurrent/locks/ReentrantLock.tryLock:()Z
      16: ifeq          103
      19: aload_0
      20: invokevirtual #208                // Method drainStatus:()I
      23: istore_1
      24: iload_1
      25: iconst_2
      26: if_icmplt     37
      29: aload_0
      30: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
      33: invokevirtual #214                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      36: return
      37: aload_0
      38: iconst_2
      39: invokevirtual #215                // Method lazySetDrainStatus:(I)V
      42: aload_0
      43: getfield      #9                  // Field executor:Ljava/util/concurrent/Executor;
      46: aload_0
      47: getfield      #19                 // Field drainBuffersTask:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$PerformCleanupTask;
      50: invokeinterface #52,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      55: aload_0
      56: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
      59: invokevirtual #214                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      62: goto          103
      65: astore_1
      66: getstatic     #54                 // Field logger:Ljava/util/logging/Logger;
      69: getstatic     #216                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      72: ldc           #217                // String Exception thrown when submitting maintenance task
      74: aload_1
      75: invokevirtual #57                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      78: aload_0
      79: aconst_null
      80: invokevirtual #218                // Method maintenance:(Ljava/lang/Runnable;)V
      83: aload_0
      84: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
      87: invokevirtual #214                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      90: goto          103
      93: astore_2
      94: aload_0
      95: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
      98: invokevirtual #214                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     101: aload_2
     102: athrow
     103: return
    Exception table:
       from    to  target type
          19    29    65   Class java/lang/Throwable
          37    55    65   Class java/lang/Throwable
          19    29    93   any
          37    55    93   any
          65    83    93   any

  public void cleanUp();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #205                // Method performCleanUp:(Ljava/lang/Runnable;)V
       5: goto          21
       8: astore_1
       9: getstatic     #54                 // Field logger:Ljava/util/logging/Logger;
      12: getstatic     #55                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      15: ldc           #207                // String Exception thrown when performing the maintenance task
      17: aload_1
      18: invokevirtual #57                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      21: return
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/RuntimeException

  void performCleanUp(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #219                // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #218                // Method maintenance:(Ljava/lang/Runnable;)V
      12: aload_0
      13: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #214                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: goto          32
      22: astore_2
      23: aload_0
      24: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
      27: invokevirtual #214                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      30: aload_2
      31: athrow
      32: aload_0
      33: invokevirtual #208                // Method drainStatus:()I
      36: iconst_1
      37: if_icmpne     54
      40: aload_0
      41: getfield      #9                  // Field executor:Ljava/util/concurrent/Executor;
      44: invokestatic  #220                // Method java/util/concurrent/ForkJoinPool.commonPool:()Ljava/util/concurrent/ForkJoinPool;
      47: if_acmpne     54
      50: aload_0
      51: invokevirtual #178                // Method scheduleDrainBuffers:()V
      54: return
    Exception table:
       from    to  target type
           7    12    22   any

  void maintenance(java.lang.Runnable);
    Code:
       0: aload_0
       1: iconst_2
       2: invokevirtual #215                // Method lazySetDrainStatus:(I)V
       5: aload_0
       6: invokevirtual #221                // Method drainReadBuffer:()V
       9: aload_0
      10: invokevirtual #222                // Method drainWriteBuffer:()V
      13: aload_1
      14: ifnull        23
      17: aload_1
      18: invokeinterface #58,  1           // InterfaceMethod java/lang/Runnable.run:()V
      23: aload_0
      24: invokevirtual #223                // Method drainKeyReferences:()V
      27: aload_0
      28: invokevirtual #224                // Method drainValueReferences:()V
      31: aload_0
      32: invokevirtual #225                // Method expireEntries:()V
      35: aload_0
      36: invokevirtual #226                // Method evictEntries:()V
      39: aload_0
      40: invokevirtual #227                // Method climb:()V
      43: aload_0
      44: invokevirtual #208                // Method drainStatus:()I
      47: iconst_2
      48: if_icmpne     60
      51: aload_0
      52: iconst_2
      53: iconst_0
      54: invokevirtual #210                // Method casDrainStatus:(II)Z
      57: ifne          93
      60: aload_0
      61: iconst_1
      62: invokevirtual #215                // Method lazySetDrainStatus:(I)V
      65: goto          93
      68: astore_2
      69: aload_0
      70: invokevirtual #208                // Method drainStatus:()I
      73: iconst_2
      74: if_icmpne     86
      77: aload_0
      78: iconst_2
      79: iconst_0
      80: invokevirtual #210                // Method casDrainStatus:(II)Z
      83: ifne          91
      86: aload_0
      87: iconst_1
      88: invokevirtual #215                // Method lazySetDrainStatus:(I)V
      91: aload_2
      92: athrow
      93: return
    Exception table:
       from    to  target type
           5    43    68   any

  void drainKeyReferences();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method collectKeys:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #228                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      12: invokevirtual #229                // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      15: dup
      16: astore_1
      17: ifnull        49
      20: aload_0
      21: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      24: aload_1
      25: invokevirtual #230                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      31: astore_2
      32: aload_2
      33: ifnull        46
      36: aload_0
      37: aload_2
      38: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      41: lconst_0
      42: invokevirtual #103                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)Z
      45: pop
      46: goto          8
      49: return

  void drainValueReferences();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method collectValues:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #231                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      12: invokevirtual #229                // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      15: dup
      16: astore_1
      17: ifnull        67
      20: aload_1
      21: checkcast     #232                // class com/github/benmanes/caffeine/cache/References$InternalReference
      24: astore_2
      25: aload_0
      26: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      29: aload_2
      30: invokeinterface #233,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/References$InternalReference.getKeyReference:()Ljava/lang/Object;
      35: invokevirtual #230                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      41: astore_3
      42: aload_3
      43: ifnull        64
      46: aload_1
      47: aload_3
      48: invokevirtual #234                // Method com/github/benmanes/caffeine/cache/Node.getValueReference:()Ljava/lang/Object;
      51: if_acmpne     64
      54: aload_0
      55: aload_3
      56: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      59: lconst_0
      60: invokevirtual #103                // Method evictEntry:(Lcom/github/benmanes/caffeine/cache/Node;Lcom/github/benmanes/caffeine/cache/RemovalCause;J)Z
      63: pop
      64: goto          8
      67: return

  void drainReadBuffer();
    Code:
       0: aload_0
       1: invokevirtual #174                // Method skipReadBuffer:()Z
       4: ifne          20
       7: aload_0
       8: getfield      #33                 // Field readBuffer:Lcom/github/benmanes/caffeine/cache/Buffer;
      11: aload_0
      12: getfield      #36                 // Field accessPolicy:Ljava/util/function/Consumer;
      15: invokeinterface #235,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Buffer.drainTo:(Ljava/util/function/Consumer;)V
      20: return

  void onAccess(com.github.benmanes.caffeine.cache.Node<K, V>);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method evicts:()Z
       4: ifeq          79
       7: aload_1
       8: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      11: astore_2
      12: aload_2
      13: ifnonnull     17
      16: return
      17: aload_0
      18: invokevirtual #81                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
      21: aload_2
      22: invokevirtual #236                // Method com/github/benmanes/caffeine/cache/FrequencySketch.increment:(Ljava/lang/Object;)V
      25: aload_1
      26: invokevirtual #138                // Method com/github/benmanes/caffeine/cache/Node.inWindow:()Z
      29: ifeq          43
      32: aload_0
      33: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      36: aload_1
      37: invokestatic  #237                // Method reorder:(Lcom/github/benmanes/caffeine/cache/LinkedDeque;Lcom/github/benmanes/caffeine/cache/Node;)V
      40: goto          66
      43: aload_1
      44: invokevirtual #139                // Method com/github/benmanes/caffeine/cache/Node.inMainProbation:()Z
      47: ifeq          58
      50: aload_0
      51: aload_1
      52: invokevirtual #238                // Method reorderProbation:(Lcom/github/benmanes/caffeine/cache/Node;)V
      55: goto          66
      58: aload_0
      59: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      62: aload_1
      63: invokestatic  #237                // Method reorder:(Lcom/github/benmanes/caffeine/cache/LinkedDeque;Lcom/github/benmanes/caffeine/cache/Node;)V
      66: aload_0
      67: aload_0
      68: invokevirtual #154                // Method hitsInSample:()I
      71: iconst_1
      72: iadd
      73: invokevirtual #76                 // Method setHitsInSample:(I)V
      76: goto          94
      79: aload_0
      80: invokevirtual #29                 // Method expiresAfterAccess:()Z
      83: ifeq          94
      86: aload_0
      87: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      90: aload_1
      91: invokestatic  #237                // Method reorder:(Lcom/github/benmanes/caffeine/cache/LinkedDeque;Lcom/github/benmanes/caffeine/cache/Node;)V
      94: aload_0
      95: invokevirtual #129                // Method expiresVariable:()Z
      98: ifeq          109
     101: aload_0
     102: invokevirtual #130                // Method timerWheel:()Lcom/github/benmanes/caffeine/cache/TimerWheel;
     105: aload_1
     106: invokevirtual #239                // Method com/github/benmanes/caffeine/cache/TimerWheel.reschedule:(Lcom/github/benmanes/caffeine/cache/Node;)V
     109: return

  void reorderProbation(com.github.benmanes.caffeine.cache.Node<K, V>);
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
       4: aload_1
       5: invokevirtual #240                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.contains:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
       8: ifne          12
      11: return
      12: aload_1
      13: invokevirtual #92                 // Method com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
      16: i2l
      17: aload_0
      18: invokevirtual #167                // Method mainProtectedMaximum:()J
      21: lcmp
      22: ifle          26
      25: return
      26: aload_0
      27: aload_0
      28: invokevirtual #168                // Method mainProtectedWeightedSize:()J
      31: aload_1
      32: invokevirtual #92                 // Method com/github/benmanes/caffeine/cache/Node.getPolicyWeight:()I
      35: i2l
      36: ladd
      37: invokevirtual #169                // Method setMainProtectedWeightedSize:(J)V
      40: aload_0
      41: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      44: aload_1
      45: invokevirtual #94                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
      48: pop
      49: aload_0
      50: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      53: aload_1
      54: invokevirtual #96                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_1
      59: invokevirtual #241                // Method com/github/benmanes/caffeine/cache/Node.makeMainProtected:()V
      62: return

  static <K, V> void reorder(com.github.benmanes.caffeine.cache.LinkedDeque<com.github.benmanes.caffeine.cache.Node<K, V>>, com.github.benmanes.caffeine.cache.Node<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #242,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque.contains:(Ljava/lang/Object;)Z
       7: ifeq          17
      10: aload_0
      11: aload_1
      12: invokeinterface #243,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque.moveToBack:(Ljava/lang/Object;)V
      17: return

  void drainWriteBuffer();
    Code:
       0: aload_0
       1: invokevirtual #201                // Method buffersWrites:()Z
       4: ifne          8
       7: return
       8: iconst_0
       9: istore_1
      10: iload_1
      11: getstatic     #244                // Field WRITE_BUFFER_MAX:I
      14: if_icmpge     45
      17: aload_0
      18: invokevirtual #202                // Method writeBuffer:()Lcom/github/benmanes/caffeine/cache/MpscGrowableArrayQueue;
      21: invokevirtual #245                // Method com/github/benmanes/caffeine/cache/MpscGrowableArrayQueue.poll:()Ljava/lang/Object;
      24: checkcast     #246                // class java/lang/Runnable
      27: astore_2
      28: aload_2
      29: ifnonnull     33
      32: return
      33: aload_2
      34: invokeinterface #58,  1           // InterfaceMethod java/lang/Runnable.run:()V
      39: iinc          1, 1
      42: goto          10
      45: aload_0
      46: iconst_3
      47: invokevirtual #215                // Method lazySetDrainStatus:(I)V
      50: return

  void makeDead(com.github.benmanes.caffeine.cache.Node<K, V>);
    Code:
       0: aload_1
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_1
       5: invokevirtual #247                // Method com/github/benmanes/caffeine/cache/Node.isDead:()Z
       8: ifeq          14
      11: aload_2
      12: monitorexit
      13: return
      14: aload_0
      15: invokevirtual #26                 // Method evicts:()Z
      18: ifeq          80
      21: aload_1
      22: invokevirtual #138                // Method com/github/benmanes/caffeine/cache/Node.inWindow:()Z
      25: ifeq          45
      28: aload_0
      29: aload_0
      30: invokevirtual #89                 // Method windowWeightedSize:()J
      33: aload_1
      34: invokevirtual #143                // Method com/github/benmanes/caffeine/cache/Node.getWeight:()I
      37: i2l
      38: lsub
      39: invokevirtual #97                 // Method setWindowWeightedSize:(J)V
      42: goto          66
      45: aload_1
      46: invokevirtual #248                // Method com/github/benmanes/caffeine/cache/Node.inMainProtected:()Z
      49: ifeq          66
      52: aload_0
      53: aload_0
      54: invokevirtual #168                // Method mainProtectedWeightedSize:()J
      57: aload_1
      58: invokevirtual #143                // Method com/github/benmanes/caffeine/cache/Node.getWeight:()I
      61: i2l
      62: lsub
      63: invokevirtual #169                // Method setMainProtectedWeightedSize:(J)V
      66: aload_0
      67: aload_0
      68: invokevirtual #83                 // Method weightedSize:()J
      71: aload_1
      72: invokevirtual #143                // Method com/github/benmanes/caffeine/cache/Node.getWeight:()I
      75: i2l
      76: lsub
      77: invokevirtual #249                // Method setWeightedSize:(J)V
      80: aload_1
      81: invokevirtual #250                // Method com/github/benmanes/caffeine/cache/Node.die:()V
      84: aload_2
      85: monitorexit
      86: goto          94
      89: astore_3
      90: aload_2
      91: monitorexit
      92: aload_3
      93: athrow
      94: return
    Exception table:
       from    to  target type
           4    13    89   any
          14    86    89   any
          89    92    89   any

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #251                // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
       7: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #252                // Method java/util/concurrent/ConcurrentHashMap.size:()I
       7: ireturn

  public long estimatedSize();
    Code:
       0: aload_0
       1: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #253                // Method java/util/concurrent/ConcurrentHashMap.mappingCount:()J
       7: lreturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #219                // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      11: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      16: lstore_1
      17: aload_0
      18: invokevirtual #201                // Method buffersWrites:()Z
      21: ifeq          48
      24: aload_0
      25: invokevirtual #202                // Method writeBuffer:()Lcom/github/benmanes/caffeine/cache/MpscGrowableArrayQueue;
      28: invokevirtual #245                // Method com/github/benmanes/caffeine/cache/MpscGrowableArrayQueue.poll:()Ljava/lang/Object;
      31: checkcast     #246                // class java/lang/Runnable
      34: dup
      35: astore_3
      36: ifnull        48
      39: aload_3
      40: invokeinterface #58,  1           // InterfaceMethod java/lang/Runnable.run:()V
      45: goto          17
      48: aload_0
      49: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      52: invokevirtual #254                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      55: invokeinterface #255,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      60: astore        4
      62: aload         4
      64: invokeinterface #256,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          94
      72: aload         4
      74: invokeinterface #257,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      82: astore        5
      84: aload_0
      85: aload         5
      87: lload_1
      88: invokevirtual #258                // Method removeNode:(Lcom/github/benmanes/caffeine/cache/Node;J)V
      91: goto          62
      94: aload_0
      95: invokevirtual #115                // Method pacer:()Lcom/github/benmanes/caffeine/cache/Pacer;
      98: astore        4
     100: aload         4
     102: ifnull        110
     105: aload         4
     107: invokevirtual #119                // Method com/github/benmanes/caffeine/cache/Pacer.cancel:()V
     110: aload_0
     111: getfield      #33                 // Field readBuffer:Lcom/github/benmanes/caffeine/cache/Buffer;
     114: invokedynamic #259,  0            // InvokeDynamic #6:accept:()Ljava/util/function/Consumer;
     119: invokeinterface #235,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/Buffer.drainTo:(Ljava/util/function/Consumer;)V
     124: aload_0
     125: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
     128: invokevirtual #214                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     131: goto          146
     134: astore        6
     136: aload_0
     137: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
     140: invokevirtual #214                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     143: aload         6
     145: athrow
     146: return
    Exception table:
       from    to  target type
           7   124   134   any
         134   136   134   any

  void removeNode(com.github.benmanes.caffeine.cache.Node<K, V>, long);
    Code:
       0: aload_1
       1: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
       4: astore        4
       6: iconst_1
       7: anewarray     #49                 // class java/lang/Object
      10: astore        5
      12: iconst_1
      13: anewarray     #134                // class com/github/benmanes/caffeine/cache/RemovalCause
      16: astore        6
      18: aload_0
      19: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_1
      23: invokevirtual #135                // Method com/github/benmanes/caffeine/cache/Node.getKeyReference:()Ljava/lang/Object;
      26: aload_0
      27: aload_1
      28: aload         5
      30: aload         4
      32: aload         6
      34: lload_2
      35: invokedynamic #260,  0            // InvokeDynamic #7:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;[Ljava/lang/Object;Ljava/lang/Object;[Lcom/github/benmanes/caffeine/cache/RemovalCause;J)Ljava/util/function/BiFunction;
      40: invokevirtual #137                // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      43: pop
      44: aload_1
      45: invokevirtual #138                // Method com/github/benmanes/caffeine/cache/Node.inWindow:()Z
      48: ifeq          77
      51: aload_0
      52: invokevirtual #26                 // Method evicts:()Z
      55: ifne          65
      58: aload_0
      59: invokevirtual #29                 // Method expiresAfterAccess:()Z
      62: ifeq          77
      65: aload_0
      66: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      69: aload_1
      70: invokevirtual #94                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
      73: pop
      74: goto          112
      77: aload_0
      78: invokevirtual #26                 // Method evicts:()Z
      81: ifeq          112
      84: aload_1
      85: invokevirtual #139                // Method com/github/benmanes/caffeine/cache/Node.inMainProbation:()Z
      88: ifeq          103
      91: aload_0
      92: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      95: aload_1
      96: invokevirtual #94                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
      99: pop
     100: goto          112
     103: aload_0
     104: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
     107: aload_1
     108: invokevirtual #94                 // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/AccessOrderDeque$AccessOrder;)Z
     111: pop
     112: aload_0
     113: invokevirtual #59                 // Method expiresAfterWrite:()Z
     116: ifeq          131
     119: aload_0
     120: invokevirtual #126                // Method writeOrderDeque:()Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
     123: aload_1
     124: invokevirtual #140                // Method com/github/benmanes/caffeine/cache/WriteOrderDeque.remove:(Lcom/github/benmanes/caffeine/cache/WriteOrderDeque$WriteOrder;)Z
     127: pop
     128: goto          146
     131: aload_0
     132: invokevirtual #129                // Method expiresVariable:()Z
     135: ifeq          146
     138: aload_0
     139: invokevirtual #130                // Method timerWheel:()Lcom/github/benmanes/caffeine/cache/TimerWheel;
     142: aload_1
     143: invokevirtual #141                // Method com/github/benmanes/caffeine/cache/TimerWheel.deschedule:(Lcom/github/benmanes/caffeine/cache/Node;)V
     146: aload         6
     148: iconst_0
     149: aaload
     150: ifnull        174
     153: aload_0
     154: invokevirtual #47                 // Method hasRemovalListener:()Z
     157: ifeq          174
     160: aload_0
     161: aload         4
     163: aload         5
     165: iconst_0
     166: aaload
     167: aload         6
     169: iconst_0
     170: aaload
     171: invokevirtual #145                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     174: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_0
       5: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
       8: aload_1
       9: invokeinterface #261,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokevirtual #230                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      20: astore_2
      21: aload_2
      22: ifnull        53
      25: aload_2
      26: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      29: ifnull        53
      32: aload_0
      33: aload_2
      34: aload_0
      35: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      38: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      43: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      46: ifne          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       9: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      14: lstore_2
      15: aload_0
      16: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      19: invokevirtual #254                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      22: invokeinterface #255,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      27: astore        4
      29: aload         4
      31: invokeinterface #256,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          83
      39: aload         4
      41: invokeinterface #257,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      49: astore        5
      51: aload         5
      53: aload_1
      54: invokevirtual #264                // Method com/github/benmanes/caffeine/cache/Node.containsValue:(Ljava/lang/Object;)Z
      57: ifeq          80
      60: aload_0
      61: aload         5
      63: lload_2
      64: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      67: ifne          80
      70: aload         5
      72: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      75: ifnull        80
      78: iconst_1
      79: ireturn
      80: goto          29
      83: iconst_0
      84: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #265                // Method getIfPresent:(Ljava/lang/Object;Z)Ljava/lang/Object;
       6: areturn

  public V getIfPresent(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_0
       5: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
       8: aload_1
       9: invokeinterface #261,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokevirtual #230                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      20: astore_3
      21: aload_3
      22: ifnonnull     53
      25: iload_2
      26: ifeq          39
      29: aload_0
      30: invokevirtual #142                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      33: iconst_1
      34: invokeinterface #266,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordMisses:(I)V
      39: aload_0
      40: invokevirtual #208                // Method drainStatus:()I
      43: iconst_1
      44: if_icmpne     51
      47: aload_0
      48: invokevirtual #178                // Method scheduleDrainBuffers:()V
      51: aconst_null
      52: areturn
      53: aload_3
      54: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      57: astore        4
      59: aload_0
      60: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      63: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      68: lstore        5
      70: aload_0
      71: aload_3
      72: lload         5
      74: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      77: ifne          92
      80: aload_0
      81: invokevirtual #28                 // Method collectValues:()Z
      84: ifeq          112
      87: aload         4
      89: ifnonnull     112
      92: iload_2
      93: ifeq          106
      96: aload_0
      97: invokevirtual #142                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     100: iconst_1
     101: invokeinterface #266,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordMisses:(I)V
     106: aload_0
     107: invokevirtual #178                // Method scheduleDrainBuffers:()V
     110: aconst_null
     111: areturn
     112: aload_0
     113: aload_3
     114: invokevirtual #267                // Method isComputingAsync:(Lcom/github/benmanes/caffeine/cache/Node;)Z
     117: ifne          145
     120: aload_1
     121: astore        7
     123: aload_0
     124: aload_3
     125: lload         5
     127: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     130: aload_0
     131: aload_3
     132: aload         7
     134: aload         4
     136: aload_0
     137: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
     140: lload         5
     142: invokevirtual #270                // Method tryExpireAfterRead:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)V
     145: aload_0
     146: aload_3
     147: lload         5
     149: iload_2
     150: invokevirtual #271                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     153: aload         4
     155: areturn

  public V getIfPresentQuietly(java.lang.Object, long[]);
    Code:
       0: aload_0
       1: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_0
       5: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
       8: aload_1
       9: invokeinterface #261,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokevirtual #230                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      20: astore        4
      22: aload         4
      24: ifnull        55
      27: aload         4
      29: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      32: dup
      33: astore_3
      34: ifnull        55
      37: aload_0
      38: aload         4
      40: aload_0
      41: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      44: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      49: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      52: ifeq          57
      55: aconst_null
      56: areturn
      57: aload_2
      58: iconst_0
      59: aload         4
      61: invokevirtual #128                // Method com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      64: lastore
      65: aload_3
      66: areturn

  public java.util.Map<K, V> getAllPresent(java.lang.Iterable<?>);
    Code:
       0: new           #272                // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #273                // Method java/util/LinkedHashSet."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #274,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #256,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          44
      24: aload_3
      25: invokeinterface #257,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: astore        4
      32: aload_2
      33: aload         4
      35: invokeinterface #275,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      40: pop
      41: goto          15
      44: iconst_0
      45: istore_3
      46: aload_0
      47: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      50: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      55: lstore        4
      57: new           #276                // class java/util/LinkedHashMap
      60: dup
      61: aload_2
      62: invokeinterface #277,  1          // InterfaceMethod java/util/Set.size:()I
      67: invokespecial #278                // Method java/util/LinkedHashMap."<init>":(I)V
      70: astore        6
      72: aload_2
      73: invokeinterface #279,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      78: astore        7
      80: aload         7
      82: invokeinterface #256,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifeq          216
      90: aload         7
      92: invokeinterface #257,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: astore        8
      99: aload_0
     100: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
     103: aload_0
     104: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
     107: aload         8
     109: invokeinterface #261,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
     114: invokevirtual #230                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     117: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
     120: astore        10
     122: aload         10
     124: ifnull        149
     127: aload         10
     129: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     132: dup
     133: astore        9
     135: ifnull        149
     138: aload_0
     139: aload         10
     141: lload         4
     143: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
     146: ifeq          155
     149: iinc          3, 1
     152: goto          213
     155: aload         6
     157: aload         8
     159: aload         9
     161: invokeinterface #280,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     166: pop
     167: aload_0
     168: aload         10
     170: invokevirtual #267                // Method isComputingAsync:(Lcom/github/benmanes/caffeine/cache/Node;)Z
     173: ifne          204
     176: aload         8
     178: astore        11
     180: aload_0
     181: aload         10
     183: aload         11
     185: aload         9
     187: aload_0
     188: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
     191: lload         4
     193: invokevirtual #270                // Method tryExpireAfterRead:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)V
     196: aload_0
     197: aload         10
     199: lload         4
     201: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     204: aload_0
     205: aload         10
     207: lload         4
     209: iconst_0
     210: invokevirtual #271                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     213: goto          80
     216: aload_0
     217: invokevirtual #142                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     220: iload_3
     221: invokeinterface #266,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordMisses:(I)V
     226: aload_0
     227: invokevirtual #142                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     230: aload         6
     232: invokeinterface #281,  1          // InterfaceMethod java/util/Map.size:()I
     237: invokeinterface #173,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordHits:(I)V
     242: aload         6
     244: astore        7
     246: aload         7
     248: invokestatic  #282                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     251: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
       7: iconst_1
       8: iconst_0
       9: invokevirtual #283                // Method put:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;ZZ)Ljava/lang/Object;
      12: areturn

  public V put(K, V, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
       7: iload_3
       8: iconst_0
       9: invokevirtual #283                // Method put:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;ZZ)Ljava/lang/Object;
      12: areturn

  public V putIfAbsent(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
       7: iconst_1
       8: iconst_1
       9: invokevirtual #283                // Method put:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;ZZ)Ljava/lang/Object;
      12: areturn

  V put(K, V, com.github.benmanes.caffeine.cache.Expiry<K, V>, boolean, boolean);
    Code:
       0: aload_1
       1: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aconst_null
      11: astore        6
      13: aload_0
      14: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      17: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      22: lstore        7
      24: aload_0
      25: getfield      #14                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      28: aload_1
      29: aload_2
      30: invokeinterface #284,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
      35: istore        9
      37: aload_0
      38: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      41: aload_0
      42: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      45: aload_1
      46: invokeinterface #261,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      51: invokevirtual #230                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      57: astore        10
      59: aload         10
      61: ifnonnull     369
      64: aload         6
      66: ifnonnull     109
      69: aload_0
      70: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      73: aload_1
      74: aload_0
      75: invokevirtual #228                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      78: aload_2
      79: aload_0
      80: invokevirtual #231                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      83: iload         9
      85: lload         7
      87: invokeinterface #285,  8          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newNode:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;IJ)Lcom/github/benmanes/caffeine/cache/Node;
      92: astore        6
      94: aload_0
      95: aload         6
      97: aload_0
      98: aload_1
      99: aload_2
     100: aload_3
     101: lload         7
     103: invokevirtual #286                // Method expireAfterCreate:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)J
     106: invokevirtual #287                // Method setVariableTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     109: iload         4
     111: ifeq          252
     114: aload_0
     115: invokevirtual #288                // Method hasWriter:()Z
     118: ifeq          252
     121: aload         6
     123: astore        11
     125: aload_0
     126: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
     129: aload         6
     131: invokevirtual #135                // Method com/github/benmanes/caffeine/cache/Node.getKeyReference:()Ljava/lang/Object;
     134: aload_0
     135: aload_1
     136: aload_2
     137: aload         11
     139: invokedynamic #289,  0            // InvokeDynamic #8:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Node;)Ljava/util/function/Function;
     144: invokevirtual #290                // Method java/util/concurrent/ConcurrentHashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
     147: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
     150: astore        10
     152: aload         10
     154: aload         6
     156: if_acmpne     177
     159: aload_0
     160: new           #291                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask
     163: dup
     164: aload_0
     165: aload         6
     167: iload         9
     169: invokespecial #292                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     172: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
     175: aconst_null
     176: areturn
     177: iload         5
     179: ifeq          249
     182: aload         10
     184: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     187: astore        12
     189: aload         12
     191: ifnull        249
     194: aload_0
     195: aload         10
     197: lload         7
     199: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
     202: ifne          249
     205: aload_0
     206: aload         10
     208: invokevirtual #267                // Method isComputingAsync:(Lcom/github/benmanes/caffeine/cache/Node;)Z
     211: ifne          237
     214: aload_0
     215: aload         10
     217: aload_1
     218: aload         12
     220: aload_0
     221: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
     224: lload         7
     226: invokevirtual #270                // Method tryExpireAfterRead:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)V
     229: aload_0
     230: aload         10
     232: lload         7
     234: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     237: aload_0
     238: aload         10
     240: lload         7
     242: iconst_0
     243: invokevirtual #271                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     246: aload         12
     248: areturn
     249: goto          441
     252: aload_0
     253: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
     256: aload         6
     258: invokevirtual #135                // Method com/github/benmanes/caffeine/cache/Node.getKeyReference:()Ljava/lang/Object;
     261: aload         6
     263: invokevirtual #294                // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     266: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
     269: astore        10
     271: aload         10
     273: ifnonnull     294
     276: aload_0
     277: new           #291                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask
     280: dup
     281: aload_0
     282: aload         6
     284: iload         9
     286: invokespecial #292                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     289: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
     292: aconst_null
     293: areturn
     294: iload         5
     296: ifeq          441
     299: aload         10
     301: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     304: astore        11
     306: aload         11
     308: ifnull        366
     311: aload_0
     312: aload         10
     314: lload         7
     316: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
     319: ifne          366
     322: aload_0
     323: aload         10
     325: invokevirtual #267                // Method isComputingAsync:(Lcom/github/benmanes/caffeine/cache/Node;)Z
     328: ifne          354
     331: aload_0
     332: aload         10
     334: aload_1
     335: aload         11
     337: aload_0
     338: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
     341: lload         7
     343: invokevirtual #270                // Method tryExpireAfterRead:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)V
     346: aload_0
     347: aload         10
     349: lload         7
     351: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     354: aload_0
     355: aload         10
     357: lload         7
     359: iconst_0
     360: invokevirtual #271                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     363: aload         11
     365: areturn
     366: goto          441
     369: iload         5
     371: ifeq          441
     374: aload         10
     376: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     379: astore        11
     381: aload         11
     383: ifnull        441
     386: aload_0
     387: aload         10
     389: lload         7
     391: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
     394: ifne          441
     397: aload_0
     398: aload         10
     400: invokevirtual #267                // Method isComputingAsync:(Lcom/github/benmanes/caffeine/cache/Node;)Z
     403: ifne          429
     406: aload_0
     407: aload         10
     409: aload_1
     410: aload         11
     412: aload_0
     413: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
     416: lload         7
     418: invokevirtual #270                // Method tryExpireAfterRead:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)V
     421: aload_0
     422: aload         10
     424: lload         7
     426: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     429: aload_0
     430: aload         10
     432: lload         7
     434: iconst_0
     435: invokevirtual #271                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     438: aload         11
     440: areturn
     441: iconst_0
     442: istore        15
     444: iconst_1
     445: istore        16
     447: iconst_0
     448: istore        17
     450: aload         10
     452: dup
     453: astore        18
     455: monitorenter
     456: aload         10
     458: invokevirtual #295                // Method com/github/benmanes/caffeine/cache/Node.isAlive:()Z
     461: ifne          470
     464: aload         18
     466: monitorexit
     467: goto          37
     470: aload         10
     472: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     475: astore        11
     477: aload         10
     479: invokevirtual #143                // Method com/github/benmanes/caffeine/cache/Node.getWeight:()I
     482: istore        14
     484: aload         11
     486: ifnonnull     517
     489: aload_0
     490: aload_1
     491: aload_2
     492: aload_3
     493: lload         7
     495: invokevirtual #286                // Method expireAfterCreate:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)J
     498: lstore        12
     500: aload_0
     501: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     504: aload_1
     505: aconst_null
     506: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     509: invokeinterface #296,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     514: goto          597
     517: aload_0
     518: aload         10
     520: lload         7
     522: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
     525: ifeq          560
     528: iconst_1
     529: istore        15
     531: aload_0
     532: aload_1
     533: aload_2
     534: aload_3
     535: lload         7
     537: invokevirtual #286                // Method expireAfterCreate:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)J
     540: lstore        12
     542: aload_0
     543: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     546: aload_1
     547: aload         11
     549: getstatic     #124                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     552: invokeinterface #296,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     557: goto          597
     560: iload         5
     562: ifeq          584
     565: iconst_0
     566: istore        16
     568: aload_0
     569: aload         10
     571: aload_1
     572: aload_2
     573: aload_3
     574: lload         7
     576: invokevirtual #297                // Method expireAfterRead:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)J
     579: lstore        12
     581: goto          597
     584: aload_0
     585: aload         10
     587: aload_1
     588: aload_2
     589: aload_3
     590: lload         7
     592: invokevirtual #298                // Method expireAfterUpdate:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)J
     595: lstore        12
     597: iload         4
     599: ifeq          629
     602: iload         15
     604: ifne          618
     607: iload         16
     609: ifeq          629
     612: aload_2
     613: aload         11
     615: if_acmpeq     629
     618: aload_0
     619: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     622: aload_1
     623: aload_2
     624: invokeinterface #299,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.write:(Ljava/lang/Object;Ljava/lang/Object;)V
     629: iload         16
     631: ifeq          713
     634: aload_0
     635: invokevirtual #59                 // Method expiresAfterWrite:()Z
     638: ifeq          656
     641: lload         7
     643: aload         10
     645: invokevirtual #128                // Method com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
     648: lsub
     649: getstatic     #300                // Field EXPIRE_WRITE_TOLERANCE:J
     652: lcmp
     653: ifgt          681
     656: aload_0
     657: invokevirtual #129                // Method expiresVariable:()Z
     660: ifeq          685
     663: lload         12
     665: aload         10
     667: invokevirtual #133                // Method com/github/benmanes/caffeine/cache/Node.getVariableTime:()J
     670: lsub
     671: invokestatic  #301                // Method java/lang/Math.abs:(J)J
     674: getstatic     #300                // Field EXPIRE_WRITE_TOLERANCE:J
     677: lcmp
     678: ifle          685
     681: iconst_1
     682: goto          686
     685: iconst_0
     686: istore        17
     688: aload_0
     689: aload         10
     691: lload         7
     693: invokevirtual #302                // Method setWriteTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     696: aload         10
     698: iload         9
     700: invokevirtual #303                // Method com/github/benmanes/caffeine/cache/Node.setWeight:(I)V
     703: aload         10
     705: aload_2
     706: aload_0
     707: invokevirtual #231                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
     710: invokevirtual #304                // Method com/github/benmanes/caffeine/cache/Node.setValue:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
     713: aload_0
     714: aload         10
     716: lload         12
     718: invokevirtual #287                // Method setVariableTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     721: aload_0
     722: aload         10
     724: lload         7
     726: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     729: aload         18
     731: monitorexit
     732: goto          743
     735: astore        19
     737: aload         18
     739: monitorexit
     740: aload         19
     742: athrow
     743: aload_0
     744: invokevirtual #47                 // Method hasRemovalListener:()Z
     747: ifeq          806
     750: iload         15
     752: ifeq          768
     755: aload_0
     756: aload_1
     757: aload         11
     759: getstatic     #124                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     762: invokevirtual #145                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     765: goto          806
     768: aload         11
     770: ifnonnull     785
     773: aload_0
     774: aload_1
     775: aconst_null
     776: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     779: invokevirtual #145                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     782: goto          806
     785: iload         16
     787: ifeq          806
     790: aload_2
     791: aload         11
     793: if_acmpeq     806
     796: aload_0
     797: aload_1
     798: aload         11
     800: getstatic     #305                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     803: invokevirtual #145                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     806: iload         16
     808: ifeq          819
     811: iload         9
     813: iload         14
     815: isub
     816: goto          820
     819: iconst_0
     820: istore        18
     822: aload         11
     824: ifnull        837
     827: iload         18
     829: ifne          837
     832: iload         15
     834: ifeq          856
     837: aload_0
     838: new           #306                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     841: dup
     842: aload_0
     843: aload         10
     845: iload         18
     847: invokespecial #307                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     850: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
     853: goto          907
     856: iload         5
     858: ifne          885
     861: iload         17
     863: ifeq          885
     866: aload_0
     867: new           #306                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     870: dup
     871: aload_0
     872: aload         10
     874: iload         18
     876: invokespecial #307                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     879: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
     882: goto          907
     885: iload         16
     887: ifeq          898
     890: aload_0
     891: aload         10
     893: lload         7
     895: invokevirtual #302                // Method setWriteTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     898: aload_0
     899: aload         10
     901: lload         7
     903: iconst_0
     904: invokevirtual #271                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     907: iload         15
     909: ifeq          916
     912: aconst_null
     913: goto          918
     916: aload         11
     918: areturn
    Exception table:
       from    to  target type
         456   467   735   any
         470   732   735   any
         735   740   735   any

  public V remove(java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: iconst_1
       3: anewarray     #4                  // class com/github/benmanes/caffeine/cache/Node
       6: astore_3
       7: iconst_1
       8: anewarray     #49                 // class java/lang/Object
      11: astore        4
      13: iconst_1
      14: anewarray     #134                // class com/github/benmanes/caffeine/cache/RemovalCause
      17: astore        5
      19: aload_0
      20: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      23: aload_0
      24: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      27: aload_1
      28: invokeinterface #261,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      33: aload_0
      34: aload         4
      36: aload         5
      38: aload_2
      39: aload_3
      40: invokedynamic #308,  0            // InvokeDynamic #9:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;[Ljava/lang/Object;[Lcom/github/benmanes/caffeine/cache/RemovalCause;Ljava/lang/Object;[Lcom/github/benmanes/caffeine/cache/Node;)Ljava/util/function/BiFunction;
      45: invokevirtual #137                // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      48: pop
      49: aload         5
      51: iconst_0
      52: aaload
      53: ifnull        91
      56: aload_0
      57: new           #309                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask
      60: dup
      61: aload_0
      62: aload_3
      63: iconst_0
      64: aaload
      65: invokespecial #310                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;)V
      68: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
      71: aload_0
      72: invokevirtual #47                 // Method hasRemovalListener:()Z
      75: ifeq          91
      78: aload_0
      79: aload_2
      80: aload         4
      82: iconst_0
      83: aaload
      84: aload         5
      86: iconst_0
      87: aaload
      88: invokevirtual #145                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
      91: aload         5
      93: iconst_0
      94: aaload
      95: getstatic     #311                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      98: if_acmpne     108
     101: aload         4
     103: iconst_0
     104: aaload
     105: goto          109
     108: aconst_null
     109: areturn

  public boolean remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: iconst_1
      12: anewarray     #4                  // class com/github/benmanes/caffeine/cache/Node
      15: astore_3
      16: iconst_1
      17: anewarray     #49                 // class java/lang/Object
      20: astore        4
      22: iconst_1
      23: anewarray     #49                 // class java/lang/Object
      26: astore        5
      28: iconst_1
      29: anewarray     #134                // class com/github/benmanes/caffeine/cache/RemovalCause
      32: astore        6
      34: aload_0
      35: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      38: aload_0
      39: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      42: aload_1
      43: invokeinterface #261,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      48: aload_0
      49: aload         4
      51: aload         5
      53: aload         6
      55: aload_2
      56: aload_3
      57: invokedynamic #312,  0            // InvokeDynamic #10:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;[Ljava/lang/Object;[Ljava/lang/Object;[Lcom/github/benmanes/caffeine/cache/RemovalCause;Ljava/lang/Object;[Lcom/github/benmanes/caffeine/cache/Node;)Ljava/util/function/BiFunction;
      62: invokevirtual #137                // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      65: pop
      66: aload_3
      67: iconst_0
      68: aaload
      69: ifnonnull     74
      72: iconst_0
      73: ireturn
      74: aload_0
      75: invokevirtual #47                 // Method hasRemovalListener:()Z
      78: ifeq          97
      81: aload_0
      82: aload         4
      84: iconst_0
      85: aaload
      86: aload         5
      88: iconst_0
      89: aaload
      90: aload         6
      92: iconst_0
      93: aaload
      94: invokevirtual #145                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
      97: aload_0
      98: new           #309                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask
     101: dup
     102: aload_0
     103: aload_3
     104: iconst_0
     105: aaload
     106: invokespecial #310                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;)V
     109: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
     112: aload         6
     114: iconst_0
     115: aaload
     116: getstatic     #311                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     119: if_acmpne     126
     122: iconst_1
     123: goto          127
     126: iconst_0
     127: ireturn

  public V replace(K, V);
    Code:
       0: aload_1
       1: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: iconst_1
      11: newarray       int
      13: astore_3
      14: iconst_1
      15: anewarray     #49                 // class java/lang/Object
      18: astore        4
      20: iconst_1
      21: anewarray     #49                 // class java/lang/Object
      24: astore        5
      26: iconst_1
      27: newarray       long
      29: astore        6
      31: aload_0
      32: getfield      #14                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      35: aload_1
      36: aload_2
      37: invokeinterface #284,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
      42: istore        7
      44: aload_0
      45: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      48: aload_0
      49: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      52: aload_1
      53: invokeinterface #261,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      58: aload_0
      59: aload         4
      61: aload         5
      63: aload_3
      64: aload         6
      66: aload_1
      67: aload_2
      68: iload         7
      70: invokedynamic #313,  0            // InvokeDynamic #11:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;[Ljava/lang/Object;[Ljava/lang/Object;[I[JLjava/lang/Object;Ljava/lang/Object;I)Ljava/util/function/BiFunction;
      75: invokevirtual #137                // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      78: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      81: astore        8
      83: aload         5
      85: iconst_0
      86: aaload
      87: ifnonnull     92
      90: aconst_null
      91: areturn
      92: iload         7
      94: aload_3
      95: iconst_0
      96: iaload
      97: isub
      98: istore        9
     100: aload_0
     101: invokevirtual #59                 // Method expiresAfterWrite:()Z
     104: ifne          112
     107: iload         9
     109: ifeq          131
     112: aload_0
     113: new           #306                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     116: dup
     117: aload_0
     118: aload         8
     120: iload         9
     122: invokespecial #307                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     125: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
     128: goto          142
     131: aload_0
     132: aload         8
     134: aload         6
     136: iconst_0
     137: laload
     138: iconst_0
     139: invokevirtual #271                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     142: aload_0
     143: invokevirtual #47                 // Method hasRemovalListener:()Z
     146: ifeq          172
     149: aload_2
     150: aload         5
     152: iconst_0
     153: aaload
     154: if_acmpeq     172
     157: aload_0
     158: aload         4
     160: iconst_0
     161: aaload
     162: aload         5
     164: iconst_0
     165: aaload
     166: getstatic     #305                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     169: invokevirtual #145                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     172: aload         5
     174: iconst_0
     175: aaload
     176: areturn

  public boolean replace(K, V, V);
    Code:
       0: aload_1
       1: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_3
      11: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: getfield      #14                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      19: aload_1
      20: aload_3
      21: invokeinterface #284,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
      26: istore        4
      28: iconst_1
      29: newarray       boolean
      31: astore        5
      33: iconst_1
      34: anewarray     #49                 // class java/lang/Object
      37: astore        6
      39: iconst_1
      40: anewarray     #49                 // class java/lang/Object
      43: astore        7
      45: iconst_1
      46: newarray       int
      48: astore        8
      50: iconst_1
      51: newarray       long
      53: astore        9
      55: aload_0
      56: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      59: aload_0
      60: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      63: aload_1
      64: invokeinterface #261,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      69: aload_0
      70: aload         6
      72: aload         7
      74: aload         8
      76: aload_2
      77: aload         9
      79: aload_1
      80: aload_3
      81: iload         4
      83: aload         5
      85: invokedynamic #314,  0            // InvokeDynamic #12:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;[Ljava/lang/Object;[Ljava/lang/Object;[ILjava/lang/Object;[JLjava/lang/Object;Ljava/lang/Object;I[Z)Ljava/util/function/BiFunction;
      90: invokevirtual #137                // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      93: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      96: astore        10
      98: aload         5
     100: iconst_0
     101: baload
     102: ifne          107
     105: iconst_0
     106: ireturn
     107: iload         4
     109: aload         8
     111: iconst_0
     112: iaload
     113: isub
     114: istore        11
     116: aload_0
     117: invokevirtual #59                 // Method expiresAfterWrite:()Z
     120: ifne          128
     123: iload         11
     125: ifeq          147
     128: aload_0
     129: new           #306                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     132: dup
     133: aload_0
     134: aload         10
     136: iload         11
     138: invokespecial #307                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     141: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
     144: goto          158
     147: aload_0
     148: aload         10
     150: aload         9
     152: iconst_0
     153: laload
     154: iconst_0
     155: invokevirtual #271                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     158: aload_0
     159: invokevirtual #47                 // Method hasRemovalListener:()Z
     162: ifeq          185
     165: aload_2
     166: aload_3
     167: if_acmpeq     185
     170: aload_0
     171: aload         6
     173: iconst_0
     174: aaload
     175: aload         7
     177: iconst_0
     178: aaload
     179: getstatic     #305                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     182: invokevirtual #145                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     185: iconst_1
     186: ireturn

  public void replaceAll(java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    Code:
       0: aload_1
       1: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #315,  0            // InvokeDynamic #13:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;
      12: astore_2
      13: aload_0
      14: invokevirtual #316                // Method keySet:()Ljava/util/Set;
      17: invokeinterface #279,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #256,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          86
      32: aload_3
      33: invokeinterface #257,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: astore        4
      40: iconst_1
      41: newarray       long
      43: dup
      44: iconst_0
      45: aload_0
      46: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      49: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      54: lastore
      55: astore        5
      57: aload_0
      58: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      61: aload         4
      63: invokeinterface #261,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      68: astore        6
      70: aload_0
      71: aload         4
      73: aload         6
      75: aload_2
      76: aload         5
      78: iconst_0
      79: invokevirtual #317                // Method remap:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;[JZ)Ljava/lang/Object;
      82: pop
      83: goto          23
      86: return

  public V computeIfAbsent(K, java.util.function.Function<? super K, ? extends V>, boolean, boolean);
    Code:
       0: aload_1
       1: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      14: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      19: lstore        5
      21: aload_0
      22: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      25: aload_0
      26: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      29: aload_1
      30: invokeinterface #261,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      35: invokevirtual #230                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      41: astore        7
      43: aload         7
      45: ifnull        115
      48: aload         7
      50: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      53: astore        8
      55: aload         8
      57: ifnull        115
      60: aload_0
      61: aload         7
      63: lload         5
      65: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      68: ifne          115
      71: aload_0
      72: aload         7
      74: invokevirtual #267                // Method isComputingAsync:(Lcom/github/benmanes/caffeine/cache/Node;)Z
      77: ifne          103
      80: aload_0
      81: aload         7
      83: aload_1
      84: aload         8
      86: aload_0
      87: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
      90: lload         5
      92: invokevirtual #270                // Method tryExpireAfterRead:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)V
      95: aload_0
      96: aload         7
      98: lload         5
     100: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     103: aload_0
     104: aload         7
     106: lload         5
     108: iload_3
     109: invokevirtual #271                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     112: aload         8
     114: areturn
     115: iload_3
     116: ifeq          127
     119: aload_0
     120: aload_2
     121: iload         4
     123: invokevirtual #318                // Method statsAware:(Ljava/util/function/Function;Z)Ljava/util/function/Function;
     126: astore_2
     127: aload_0
     128: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
     131: aload_1
     132: aload_0
     133: invokevirtual #228                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
     136: invokeinterface #319,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newReferenceKey:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Ljava/lang/Object;
     141: astore        8
     143: aload_0
     144: aload_1
     145: aload         8
     147: aload_2
     148: iconst_1
     149: newarray       long
     151: dup
     152: iconst_0
     153: lload         5
     155: lastore
     156: iload_3
     157: invokevirtual #320                // Method doComputeIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/Function;[JZ)Ljava/lang/Object;
     160: areturn

  V doComputeIfAbsent(K, java.lang.Object, java.util.function.Function<? super K, ? extends V>, long[], boolean);
    Code:
       0: iconst_1
       1: anewarray     #49                 // class java/lang/Object
       4: astore        6
       6: iconst_1
       7: anewarray     #49                 // class java/lang/Object
      10: astore        7
      12: iconst_1
      13: anewarray     #49                 // class java/lang/Object
      16: astore        8
      18: iconst_1
      19: anewarray     #4                  // class com/github/benmanes/caffeine/cache/Node
      22: astore        9
      24: iconst_2
      25: newarray       int
      27: astore        10
      29: iconst_1
      30: anewarray     #134                // class com/github/benmanes/caffeine/cache/RemovalCause
      33: astore        11
      35: aload_0
      36: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      39: aload_2
      40: aload_0
      41: aload         7
      43: aload_3
      44: aload_1
      45: aload         4
      47: aload         10
      49: aload         8
      51: aload         6
      53: aload         11
      55: aload         9
      57: invokedynamic #321,  0            // InvokeDynamic #14:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;[Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;[J[I[Ljava/lang/Object;[Ljava/lang/Object;[Lcom/github/benmanes/caffeine/cache/RemovalCause;[Lcom/github/benmanes/caffeine/cache/Node;)Ljava/util/function/BiFunction;
      62: invokevirtual #322                // Method java/util/concurrent/ConcurrentHashMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      65: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      68: astore        12
      70: aload         12
      72: ifnonnull     100
      75: aload         9
      77: iconst_0
      78: aaload
      79: ifnull        98
      82: aload_0
      83: new           #309                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask
      86: dup
      87: aload_0
      88: aload         9
      90: iconst_0
      91: aaload
      92: invokespecial #310                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;)V
      95: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
      98: aconst_null
      99: areturn
     100: aload         11
     102: iconst_0
     103: aaload
     104: ifnull        147
     107: aload_0
     108: invokevirtual #47                 // Method hasRemovalListener:()Z
     111: ifeq          130
     114: aload_0
     115: aload         8
     117: iconst_0
     118: aaload
     119: aload         6
     121: iconst_0
     122: aaload
     123: aload         11
     125: iconst_0
     126: aaload
     127: invokevirtual #145                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     130: aload_0
     131: invokevirtual #142                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     134: aload         10
     136: iconst_0
     137: iaload
     138: aload         11
     140: iconst_0
     141: aaload
     142: invokeinterface #144,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordEviction:(ILcom/github/benmanes/caffeine/cache/RemovalCause;)V
     147: aload         7
     149: iconst_0
     150: aaload
     151: ifnonnull     209
     154: aload_0
     155: aload         12
     157: invokevirtual #267                // Method isComputingAsync:(Lcom/github/benmanes/caffeine/cache/Node;)Z
     160: ifne          192
     163: aload_0
     164: aload         12
     166: aload_1
     167: aload         6
     169: iconst_0
     170: aaload
     171: aload_0
     172: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
     175: aload         4
     177: iconst_0
     178: laload
     179: invokevirtual #270                // Method tryExpireAfterRead:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)V
     182: aload_0
     183: aload         12
     185: aload         4
     187: iconst_0
     188: laload
     189: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     192: aload_0
     193: aload         12
     195: aload         4
     197: iconst_0
     198: laload
     199: iload         5
     201: invokevirtual #271                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     204: aload         6
     206: iconst_0
     207: aaload
     208: areturn
     209: aload         6
     211: iconst_0
     212: aaload
     213: ifnonnull     244
     216: aload         11
     218: iconst_0
     219: aaload
     220: ifnonnull     244
     223: aload_0
     224: new           #291                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask
     227: dup
     228: aload_0
     229: aload         12
     231: aload         10
     233: iconst_1
     234: iaload
     235: invokespecial #292                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     238: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
     241: goto          271
     244: aload         10
     246: iconst_1
     247: iaload
     248: aload         10
     250: iconst_0
     251: iaload
     252: isub
     253: istore        13
     255: aload_0
     256: new           #306                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     259: dup
     260: aload_0
     261: aload         12
     263: iload         13
     265: invokespecial #307                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     268: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
     271: aload         7
     273: iconst_0
     274: aaload
     275: areturn

  public V computeIfPresent(K, java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    Code:
       0: aload_1
       1: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      14: aload_1
      15: invokeinterface #261,  2          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      20: astore_3
      21: aload_0
      22: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      25: aload_3
      26: invokevirtual #230                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      32: astore        4
      34: aload         4
      36: ifnonnull     41
      39: aconst_null
      40: areturn
      41: aload         4
      43: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      46: ifnull        70
      49: aload_0
      50: aload         4
      52: aload_0
      53: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      56: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      61: dup2
      62: lstore        5
      64: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      67: ifeq          76
      70: aload_0
      71: invokevirtual #178                // Method scheduleDrainBuffers:()V
      74: aconst_null
      75: areturn
      76: aload_0
      77: aload_2
      78: iconst_0
      79: iconst_1
      80: iconst_1
      81: invokevirtual #323                // Method statsAware:(Ljava/util/function/BiFunction;ZZZ)Ljava/util/function/BiFunction;
      84: astore        7
      86: aload_0
      87: aload_1
      88: aload_3
      89: aload         7
      91: iconst_1
      92: newarray       long
      94: dup
      95: iconst_0
      96: lload         5
      98: lastore
      99: iconst_0
     100: invokevirtual #317                // Method remap:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;[JZ)Ljava/lang/Object;
     103: areturn

  public V compute(K, java.util.function.BiFunction<? super K, ? super V, ? extends V>, boolean, boolean, boolean);
    Code:
       0: aload_1
       1: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: iconst_1
      11: newarray       long
      13: dup
      14: iconst_0
      15: aload_0
      16: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      19: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      24: lastore
      25: astore        6
      27: aload_0
      28: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      31: aload_1
      32: aload_0
      33: invokevirtual #228                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      36: invokeinterface #319,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newReferenceKey:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Ljava/lang/Object;
      41: astore        7
      43: aload_0
      44: aload_2
      45: iload_3
      46: iload         4
      48: iload         5
      50: invokevirtual #323                // Method statsAware:(Ljava/util/function/BiFunction;ZZZ)Ljava/util/function/BiFunction;
      53: astore        8
      55: aload_0
      56: aload_1
      57: aload         7
      59: aload         8
      61: aload         6
      63: iconst_1
      64: invokevirtual #317                // Method remap:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;[JZ)Ljava/lang/Object;
      67: areturn

  public V merge(K, V, java.util.function.BiFunction<? super V, ? super V, ? extends V>);
    Code:
       0: aload_1
       1: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_3
      11: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: iconst_1
      16: newarray       long
      18: dup
      19: iconst_0
      20: aload_0
      21: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      24: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      29: lastore
      30: astore        4
      32: aload_0
      33: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      36: aload_1
      37: aload_0
      38: invokevirtual #228                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      41: invokeinterface #319,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newReferenceKey:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Ljava/lang/Object;
      46: astore        5
      48: aload_0
      49: aload_2
      50: aload_3
      51: invokedynamic #324,  0            // InvokeDynamic #15:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;
      56: astore        6
      58: aload_0
      59: aload_1
      60: aload         5
      62: aload         6
      64: aload         4
      66: iconst_1
      67: invokevirtual #317                // Method remap:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;[JZ)Ljava/lang/Object;
      70: areturn

  V remap(K, java.lang.Object, java.util.function.BiFunction<? super K, ? super V, ? extends V>, long[], boolean);
    Code:
       0: iconst_1
       1: anewarray     #49                 // class java/lang/Object
       4: astore        6
       6: iconst_1
       7: anewarray     #49                 // class java/lang/Object
      10: astore        7
      12: iconst_1
      13: anewarray     #49                 // class java/lang/Object
      16: astore        8
      18: iconst_1
      19: anewarray     #4                  // class com/github/benmanes/caffeine/cache/Node
      22: astore        9
      24: iconst_2
      25: newarray       int
      27: astore        10
      29: iconst_1
      30: anewarray     #134                // class com/github/benmanes/caffeine/cache/RemovalCause
      33: astore        11
      35: aload_0
      36: getfield      #25                 // Field data:Ljava/util/concurrent/ConcurrentHashMap;
      39: aload_2
      40: aload_0
      41: iload         5
      43: aload         8
      45: aload_3
      46: aload_1
      47: aload         4
      49: aload         10
      51: aload_2
      52: aload         6
      54: aload         7
      56: aload         11
      58: aload         9
      60: invokedynamic #325,  0            // InvokeDynamic #16:apply:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Z[Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/lang/Object;[J[ILjava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;[Lcom/github/benmanes/caffeine/cache/RemovalCause;[Lcom/github/benmanes/caffeine/cache/Node;)Ljava/util/function/BiFunction;
      65: invokevirtual #322                // Method java/util/concurrent/ConcurrentHashMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      68: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      71: astore        12
      73: aload         11
      75: iconst_0
      76: aaload
      77: ifnull        130
      80: aload         11
      82: iconst_0
      83: aaload
      84: invokevirtual #326                // Method com/github/benmanes/caffeine/cache/RemovalCause.wasEvicted:()Z
      87: ifeq          107
      90: aload_0
      91: invokevirtual #142                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      94: aload         10
      96: iconst_0
      97: iaload
      98: aload         11
     100: iconst_0
     101: aaload
     102: invokeinterface #144,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordEviction:(ILcom/github/benmanes/caffeine/cache/RemovalCause;)V
     107: aload_0
     108: invokevirtual #47                 // Method hasRemovalListener:()Z
     111: ifeq          130
     114: aload_0
     115: aload         6
     117: iconst_0
     118: aaload
     119: aload         7
     121: iconst_0
     122: aaload
     123: aload         11
     125: iconst_0
     126: aaload
     127: invokevirtual #145                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     130: aload         9
     132: iconst_0
     133: aaload
     134: ifnull        156
     137: aload_0
     138: new           #309                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask
     141: dup
     142: aload_0
     143: aload         9
     145: iconst_0
     146: aaload
     147: invokespecial #310                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$RemovalTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;)V
     150: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
     153: goto          314
     156: aload         12
     158: ifnonnull     164
     161: goto          314
     164: aload         7
     166: iconst_0
     167: aaload
     168: ifnonnull     199
     171: aload         11
     173: iconst_0
     174: aaload
     175: ifnonnull     199
     178: aload_0
     179: new           #291                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask
     182: dup
     183: aload_0
     184: aload         12
     186: aload         10
     188: iconst_1
     189: iaload
     190: invokespecial #292                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$AddTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     193: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
     196: goto          314
     199: aload         10
     201: iconst_1
     202: iaload
     203: aload         10
     205: iconst_0
     206: iaload
     207: isub
     208: istore        13
     210: aload_0
     211: invokevirtual #59                 // Method expiresAfterWrite:()Z
     214: ifne          222
     217: iload         13
     219: ifeq          241
     222: aload_0
     223: new           #306                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask
     226: dup
     227: aload_0
     228: aload         12
     230: iload         13
     232: invokespecial #307                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$UpdateTask."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Lcom/github/benmanes/caffeine/cache/Node;I)V
     235: invokevirtual #293                // Method afterWrite:(Ljava/lang/Runnable;)V
     238: goto          314
     241: aload         11
     243: iconst_0
     244: aaload
     245: ifnonnull     289
     248: aload_0
     249: aload         12
     251: invokevirtual #267                // Method isComputingAsync:(Lcom/github/benmanes/caffeine/cache/Node;)Z
     254: ifne          303
     257: aload_0
     258: aload         12
     260: aload_1
     261: aload         8
     263: iconst_0
     264: aaload
     265: aload_0
     266: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
     269: aload         4
     271: iconst_0
     272: laload
     273: invokevirtual #270                // Method tryExpireAfterRead:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)V
     276: aload_0
     277: aload         12
     279: aload         4
     281: iconst_0
     282: laload
     283: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     286: goto          303
     289: aload         11
     291: iconst_0
     292: aaload
     293: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     296: if_acmpne     303
     299: aload_0
     300: invokevirtual #178                // Method scheduleDrainBuffers:()V
     303: aload_0
     304: aload         12
     306: aload         4
     308: iconst_0
     309: laload
     310: iconst_0
     311: invokevirtual #271                // Method afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     314: aload         8
     316: iconst_0
     317: aaload
     318: areturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #327                // Field keySet:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnonnull     25
       9: aload_0
      10: new           #328                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$KeySetView
      13: dup
      14: aload_0
      15: invokespecial #329                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$KeySetView."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      18: dup_x1
      19: putfield      #327                // Field keySet:Ljava/util/Set;
      22: goto          26
      25: aload_1
      26: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #330                // Field values:Ljava/util/Collection;
       4: astore_1
       5: aload_1
       6: ifnonnull     25
       9: aload_0
      10: new           #331                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$ValuesView
      13: dup
      14: aload_0
      15: invokespecial #332                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$ValuesView."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      18: dup_x1
      19: putfield      #330                // Field values:Ljava/util/Collection;
      22: goto          26
      25: aload_1
      26: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #333                // Field entrySet:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnonnull     25
       9: aload_0
      10: new           #334                // class com/github/benmanes/caffeine/cache/BoundedLocalCache$EntrySetView
      13: dup
      14: aload_0
      15: invokespecial #335                // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$EntrySetView."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)V
      18: dup_x1
      19: putfield      #333                // Field entrySet:Ljava/util/Set;
      22: goto          26
      25: aload_1
      26: areturn

  java.util.Map<K, V> evictionOrder(int, java.util.function.Function<V, V>, boolean);
    Code:
       0: aload_0
       1: iload_3
       2: invokedynamic #336,  0            // InvokeDynamic #17:get:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Z)Ljava/util/function/Supplier;
       7: astore        4
       9: aload_0
      10: aload         4
      12: iload_1
      13: aload_2
      14: invokevirtual #337                // Method fixedSnapshot:(Ljava/util/function/Supplier;ILjava/util/function/Function;)Ljava/util/Map;
      17: areturn

  java.util.Map<K, V> expireAfterAccessOrder(int, java.util.function.Function<V, V>, boolean);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method evicts:()Z
       4: ifne          25
       7: aload_0
       8: iload_3
       9: invokedynamic #338,  0            // InvokeDynamic #18:get:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Z)Ljava/util/function/Supplier;
      14: astore        4
      16: aload_0
      17: aload         4
      19: iload_1
      20: aload_2
      21: invokevirtual #337                // Method fixedSnapshot:(Ljava/util/function/Supplier;ILjava/util/function/Function;)Ljava/util/Map;
      24: areturn
      25: aload_0
      26: iload_3
      27: invokedynamic #339,  0            // InvokeDynamic #19:get:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Z)Ljava/util/function/Supplier;
      32: astore        4
      34: aload_0
      35: aload         4
      37: iload_1
      38: aload_2
      39: invokevirtual #337                // Method fixedSnapshot:(Ljava/util/function/Supplier;ILjava/util/function/Function;)Ljava/util/Map;
      42: areturn

  java.util.Map<K, V> expireAfterWriteOrder(int, java.util.function.Function<V, V>, boolean);
    Code:
       0: aload_0
       1: iload_3
       2: invokedynamic #340,  0            // InvokeDynamic #20:get:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;Z)Ljava/util/function/Supplier;
       7: astore        4
       9: aload_0
      10: aload         4
      12: iload_1
      13: aload_2
      14: invokevirtual #337                // Method fixedSnapshot:(Ljava/util/function/Supplier;ILjava/util/function/Function;)Ljava/util/Map;
      17: areturn

  java.util.Map<K, V> fixedSnapshot(java.util.function.Supplier<java.util.Iterator<com.github.benmanes.caffeine.cache.Node<K, V>>>, int, java.util.function.Function<V, V>);
    Code:
       0: iload_2
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: invokestatic  #341                // Method com/github/benmanes/caffeine/cache/Caffeine.requireArgument:(Z)V
      12: aload_0
      13: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #219                // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      19: aload_0
      20: aconst_null
      21: invokevirtual #218                // Method maintenance:(Ljava/lang/Runnable;)V
      24: iload_2
      25: aload_0
      26: invokevirtual #342                // Method size:()I
      29: invokestatic  #343                // Method java/lang/Math.min:(II)I
      32: istore        4
      34: aload_1
      35: invokeinterface #344,  1          // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      40: checkcast     #345                // class java/util/Iterator
      43: astore        5
      45: new           #276                // class java/util/LinkedHashMap
      48: dup
      49: iload         4
      51: invokespecial #278                // Method java/util/LinkedHashMap."<init>":(I)V
      54: astore        6
      56: aload         6
      58: invokeinterface #281,  1          // InterfaceMethod java/util/Map.size:()I
      63: iload_2
      64: if_icmpge     142
      67: aload         5
      69: invokeinterface #256,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          142
      77: aload         5
      79: invokeinterface #257,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: checkcast     #4                  // class com/github/benmanes/caffeine/cache/Node
      87: astore        7
      89: aload         7
      91: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      94: astore        8
      96: aload_3
      97: aload         7
      99: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     102: invokeinterface #346,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     107: astore        9
     109: aload         8
     111: ifnull        139
     114: aload         9
     116: ifnull        139
     119: aload         7
     121: invokevirtual #295                // Method com/github/benmanes/caffeine/cache/Node.isAlive:()Z
     124: ifeq          139
     127: aload         6
     129: aload         8
     131: aload         9
     133: invokeinterface #280,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     138: pop
     139: goto          56
     142: aload         6
     144: invokestatic  #282                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     147: astore        7
     149: aload_0
     150: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
     153: invokevirtual #214                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     156: aload         7
     158: areturn
     159: astore        10
     161: aload_0
     162: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
     165: invokevirtual #214                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     168: aload         10
     170: athrow
    Exception table:
       from    to  target type
          19   149   159   any
         159   161   159   any

  java.util.Map<K, V> variableSnapshot(boolean, int, java.util.function.Function<V, V>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #219                // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: aconst_null
       9: invokevirtual #218                // Method maintenance:(Ljava/lang/Runnable;)V
      12: aload_0
      13: invokevirtual #130                // Method timerWheel:()Lcom/github/benmanes/caffeine/cache/TimerWheel;
      16: iload_1
      17: iload_2
      18: aload_3
      19: invokevirtual #347                // Method com/github/benmanes/caffeine/cache/TimerWheel.snapshot:(ZILjava/util/function/Function;)Ljava/util/Map;
      22: astore        4
      24: aload_0
      25: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
      28: invokevirtual #214                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      31: aload         4
      33: areturn
      34: astore        5
      36: aload_0
      37: getfield      #12                 // Field evictionLock:Ljava/util/concurrent/locks/ReentrantLock;
      40: invokevirtual #214                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      43: aload         5
      45: athrow
    Exception table:
       from    to  target type
           7    24    34   any
          34    36    34   any

  static <K, V> com.github.benmanes.caffeine.cache.SerializationProxy<K, V> makeSerializationProxy(com.github.benmanes.caffeine.cache.BoundedLocalCache<?, ?>, boolean);
    Code:
       0: new           #348                // class com/github/benmanes/caffeine/cache/SerializationProxy
       3: dup
       4: invokespecial #349                // Method com/github/benmanes/caffeine/cache/SerializationProxy."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #27                 // Method collectKeys:()Z
      13: putfield      #350                // Field com/github/benmanes/caffeine/cache/SerializationProxy.weakKeys:Z
      16: aload_2
      17: aload_0
      18: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      21: invokeinterface #351,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.weakValues:()Z
      26: putfield      #352                // Field com/github/benmanes/caffeine/cache/SerializationProxy.weakValues:Z
      29: aload_2
      30: aload_0
      31: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      34: invokeinterface #353,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.softValues:()Z
      39: putfield      #354                // Field com/github/benmanes/caffeine/cache/SerializationProxy.softValues:Z
      42: aload_2
      43: aload_0
      44: invokevirtual #355                // Method isRecordingStats:()Z
      47: putfield      #356                // Field com/github/benmanes/caffeine/cache/SerializationProxy.isRecordingStats:Z
      50: aload_2
      51: aload_0
      52: invokevirtual #357                // Method removalListener:()Lcom/github/benmanes/caffeine/cache/RemovalListener;
      55: putfield      #358                // Field com/github/benmanes/caffeine/cache/SerializationProxy.removalListener:Lcom/github/benmanes/caffeine/cache/RemovalListener;
      58: aload_2
      59: aload_0
      60: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      63: putfield      #359                // Field com/github/benmanes/caffeine/cache/SerializationProxy.ticker:Lcom/github/benmanes/caffeine/cache/Ticker;
      66: aload_2
      67: aload_0
      68: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      71: putfield      #360                // Field com/github/benmanes/caffeine/cache/SerializationProxy.writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      74: aload_0
      75: invokevirtual #29                 // Method expiresAfterAccess:()Z
      78: ifeq          89
      81: aload_2
      82: aload_0
      83: invokevirtual #122                // Method expiresAfterAccessNanos:()J
      86: putfield      #361                // Field com/github/benmanes/caffeine/cache/SerializationProxy.expiresAfterAccessNanos:J
      89: aload_0
      90: invokevirtual #59                 // Method expiresAfterWrite:()Z
      93: ifeq          104
      96: aload_2
      97: aload_0
      98: invokevirtual #125                // Method expiresAfterWriteNanos:()J
     101: putfield      #362                // Field com/github/benmanes/caffeine/cache/SerializationProxy.expiresAfterWriteNanos:J
     104: aload_0
     105: invokevirtual #129                // Method expiresVariable:()Z
     108: ifeq          119
     111: aload_2
     112: aload_0
     113: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
     116: putfield      #363                // Field com/github/benmanes/caffeine/cache/SerializationProxy.expiry:Lcom/github/benmanes/caffeine/cache/Expiry;
     119: aload_0
     120: invokevirtual #26                 // Method evicts:()Z
     123: ifeq          157
     126: iload_1
     127: ifeq          149
     130: aload_2
     131: aload_0
     132: getfield      #14                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
     135: putfield      #364                // Field com/github/benmanes/caffeine/cache/SerializationProxy.weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
     138: aload_2
     139: aload_0
     140: invokevirtual #64                 // Method maximum:()J
     143: putfield      #365                // Field com/github/benmanes/caffeine/cache/SerializationProxy.maximumWeight:J
     146: goto          157
     149: aload_2
     150: aload_0
     151: invokevirtual #64                 // Method maximum:()J
     154: putfield      #366                // Field com/github/benmanes/caffeine/cache/SerializationProxy.maximumSize:J
     157: aload_2
     158: areturn

  private java.util.Iterator lambda$expireAfterWriteOrder$21(boolean);
    Code:
       0: iload_1
       1: ifeq          14
       4: aload_0
       5: invokevirtual #126                // Method writeOrderDeque:()Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
       8: invokevirtual #367                // Method com/github/benmanes/caffeine/cache/WriteOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      11: goto          21
      14: aload_0
      15: invokevirtual #126                // Method writeOrderDeque:()Lcom/github/benmanes/caffeine/cache/WriteOrderDeque;
      18: invokevirtual #368                // Method com/github/benmanes/caffeine/cache/WriteOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      21: areturn

  private java.util.Iterator lambda$expireAfterAccessOrder$20(boolean);
    Code:
       0: invokedynamic #369,  0            // InvokeDynamic #21:applyAsLong:()Ljava/util/function/ToLongFunction;
       5: invokestatic  #370                // InterfaceMethod java/util/Comparator.comparingLong:(Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;
       8: astore_2
       9: iload_1
      10: ifeq          42
      13: aload_0
      14: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      17: invokevirtual #371                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      20: astore_3
      21: aload_0
      22: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      25: invokevirtual #371                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      28: astore        4
      30: aload_0
      31: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      34: invokevirtual #371                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      37: astore        5
      39: goto          75
      42: aload_2
      43: invokeinterface #372,  1          // InterfaceMethod java/util/Comparator.reversed:()Ljava/util/Comparator;
      48: astore_2
      49: aload_0
      50: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      53: invokevirtual #373                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      56: astore_3
      57: aload_0
      58: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      61: invokevirtual #373                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      64: astore        4
      66: aload_0
      67: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      70: invokevirtual #373                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      73: astore        5
      75: aload_3
      76: aload         4
      78: aload_2
      79: invokestatic  #374                // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator.comparing:(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Ljava/util/Comparator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      82: aload         5
      84: aload_2
      85: invokestatic  #374                // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator.comparing:(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Ljava/util/Comparator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      88: areturn

  private java.util.Iterator lambda$expireAfterAccessOrder$19(boolean);
    Code:
       0: iload_1
       1: ifeq          14
       4: aload_0
       5: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
       8: invokevirtual #371                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      11: goto          21
      14: aload_0
      15: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      18: invokevirtual #373                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      21: areturn

  private java.util.Iterator lambda$evictionOrder$18(boolean);
    Code:
       0: aload_0
       1: invokedynamic #375,  0            // InvokeDynamic #22:applyAsInt:(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;)Ljava/util/function/ToIntFunction;
       6: invokestatic  #376                // InterfaceMethod java/util/Comparator.comparingInt:(Ljava/util/function/ToIntFunction;)Ljava/util/Comparator;
       9: astore_2
      10: iload_1
      11: ifeq          45
      14: aload_0
      15: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      18: invokevirtual #373                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      21: aload_0
      22: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      25: invokevirtual #373                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      28: aload_2
      29: invokestatic  #374                // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator.comparing:(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Ljava/util/Comparator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      32: astore_3
      33: aload_0
      34: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      37: invokevirtual #373                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.descendingIterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      40: aload_3
      41: invokestatic  #377                // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator.concat:(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      44: areturn
      45: aload_0
      46: invokevirtual #87                 // Method accessOrderWindowDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      49: invokevirtual #371                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      52: aload_0
      53: invokevirtual #95                 // Method accessOrderProbationDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      56: invokevirtual #371                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      59: aload_2
      60: invokeinterface #372,  1          // InterfaceMethod java/util/Comparator.reversed:()Ljava/util/Comparator;
      65: invokestatic  #374                // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator.comparing:(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Ljava/util/Comparator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      68: astore_3
      69: aload_3
      70: aload_0
      71: invokevirtual #100                // Method accessOrderProtectedDeque:()Lcom/github/benmanes/caffeine/cache/AccessOrderDeque;
      74: invokevirtual #371                // Method com/github/benmanes/caffeine/cache/AccessOrderDeque.iterator:()Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      77: invokestatic  #377                // InterfaceMethod com/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator.concat:(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
      80: areturn

  private int lambda$evictionOrder$17(com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload_1
       1: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: ifnonnull     13
       9: iconst_0
      10: goto          21
      13: aload_0
      14: invokevirtual #81                 // Method frequencySketch:()Lcom/github/benmanes/caffeine/cache/FrequencySketch;
      17: aload_2
      18: invokevirtual #107                // Method com/github/benmanes/caffeine/cache/FrequencySketch.frequency:(Ljava/lang/Object;)I
      21: ireturn

  private com.github.benmanes.caffeine.cache.Node lambda$remap$16(boolean, java.lang.Object[], java.util.function.BiFunction, java.lang.Object, long[], int[], java.lang.Object, java.lang.Object[], java.lang.Object[], com.github.benmanes.caffeine.cache.RemovalCause[], com.github.benmanes.caffeine.cache.Node[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         13
       2: ifnonnull     116
       5: iload_1
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_2
      12: iconst_0
      13: aload_3
      14: aload         4
      16: aconst_null
      17: invokeinterface #378,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: aastore
      23: aload_2
      24: iconst_0
      25: aaload
      26: ifnonnull     31
      29: aconst_null
      30: areturn
      31: aload         5
      33: iconst_0
      34: aload_0
      35: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      38: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      43: lastore
      44: aload         6
      46: iconst_1
      47: aload_0
      48: getfield      #14                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      51: aload         4
      53: aload_2
      54: iconst_0
      55: aaload
      56: invokeinterface #284,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
      61: iastore
      62: aload_0
      63: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      66: aload         7
      68: aload_2
      69: iconst_0
      70: aaload
      71: aload_0
      72: invokevirtual #231                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      75: aload         6
      77: iconst_1
      78: iaload
      79: aload         5
      81: iconst_0
      82: laload
      83: invokeinterface #379,  7          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newNode:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;IJ)Lcom/github/benmanes/caffeine/cache/Node;
      88: astore        13
      90: aload_0
      91: aload         13
      93: aload_0
      94: aload         4
      96: aload_2
      97: iconst_0
      98: aaload
      99: aload_0
     100: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
     103: aload         5
     105: iconst_0
     106: laload
     107: invokevirtual #286                // Method expireAfterCreate:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)J
     110: invokevirtual #287                // Method setVariableTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     113: aload         13
     115: areturn
     116: aload         13
     118: dup
     119: astore        14
     121: monitorenter
     122: aload         8
     124: iconst_0
     125: aload         13
     127: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
     130: aastore
     131: aload         9
     133: iconst_0
     134: aload         13
     136: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     139: aastore
     140: aload         8
     142: iconst_0
     143: aaload
     144: ifnull        154
     147: aload         9
     149: iconst_0
     150: aaload
     151: ifnonnull     164
     154: aload         10
     156: iconst_0
     157: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     160: aastore
     161: goto          184
     164: aload_0
     165: aload         13
     167: aload         5
     169: iconst_0
     170: laload
     171: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
     174: ifeq          184
     177: aload         10
     179: iconst_0
     180: getstatic     #124                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     183: aastore
     184: aload         10
     186: iconst_0
     187: aaload
     188: ifnull        232
     191: aload_0
     192: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     195: aload         8
     197: iconst_0
     198: aaload
     199: aload         9
     201: iconst_0
     202: aaload
     203: aload         10
     205: iconst_0
     206: aaload
     207: invokeinterface #296,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     212: iload_1
     213: ifne          232
     216: aload         11
     218: iconst_0
     219: aload         13
     221: aastore
     222: aload         13
     224: invokevirtual #380                // Method com/github/benmanes/caffeine/cache/Node.retire:()V
     227: aconst_null
     228: aload         14
     230: monitorexit
     231: areturn
     232: aload_2
     233: iconst_0
     234: aload_3
     235: aload         8
     237: iconst_0
     238: aaload
     239: aload         10
     241: iconst_0
     242: aaload
     243: ifnonnull     253
     246: aload         9
     248: iconst_0
     249: aaload
     250: goto          254
     253: aconst_null
     254: invokeinterface #378,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     259: aastore
     260: aload_2
     261: iconst_0
     262: aaload
     263: ifnonnull     296
     266: aload         10
     268: iconst_0
     269: aaload
     270: ifnonnull     280
     273: aload         10
     275: iconst_0
     276: getstatic     #311                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     279: aastore
     280: aload         11
     282: iconst_0
     283: aload         13
     285: aastore
     286: aload         13
     288: invokevirtual #380                // Method com/github/benmanes/caffeine/cache/Node.retire:()V
     291: aconst_null
     292: aload         14
     294: monitorexit
     295: areturn
     296: aload         6
     298: iconst_0
     299: aload         13
     301: invokevirtual #143                // Method com/github/benmanes/caffeine/cache/Node.getWeight:()I
     304: iastore
     305: aload         6
     307: iconst_1
     308: aload_0
     309: getfield      #14                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
     312: aload         4
     314: aload_2
     315: iconst_0
     316: aaload
     317: invokeinterface #284,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
     322: iastore
     323: aload         5
     325: iconst_0
     326: aload_0
     327: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
     330: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
     335: lastore
     336: aload         10
     338: iconst_0
     339: aaload
     340: ifnonnull     388
     343: aload_2
     344: iconst_0
     345: aaload
     346: aload         9
     348: iconst_0
     349: aaload
     350: if_acmpeq     360
     353: aload         10
     355: iconst_0
     356: getstatic     #305                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     359: aastore
     360: aload_0
     361: aload         13
     363: aload_0
     364: aload         13
     366: aload         4
     368: aload_2
     369: iconst_0
     370: aaload
     371: aload_0
     372: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
     375: aload         5
     377: iconst_0
     378: laload
     379: invokevirtual #298                // Method expireAfterUpdate:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)J
     382: invokevirtual #287                // Method setVariableTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     385: goto          411
     388: aload_0
     389: aload         13
     391: aload_0
     392: aload         4
     394: aload_2
     395: iconst_0
     396: aaload
     397: aload_0
     398: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
     401: aload         5
     403: iconst_0
     404: laload
     405: invokevirtual #286                // Method expireAfterCreate:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)J
     408: invokevirtual #287                // Method setVariableTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     411: aload         13
     413: aload_2
     414: iconst_0
     415: aaload
     416: aload_0
     417: invokevirtual #231                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
     420: invokevirtual #304                // Method com/github/benmanes/caffeine/cache/Node.setValue:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
     423: aload         13
     425: aload         6
     427: iconst_1
     428: iaload
     429: invokevirtual #303                // Method com/github/benmanes/caffeine/cache/Node.setWeight:(I)V
     432: aload_0
     433: aload         13
     435: aload         5
     437: iconst_0
     438: laload
     439: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     442: aload_0
     443: aload         13
     445: aload         5
     447: iconst_0
     448: laload
     449: invokevirtual #302                // Method setWriteTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     452: aload         13
     454: aload         14
     456: monitorexit
     457: areturn
     458: astore        15
     460: aload         14
     462: monitorexit
     463: aload         15
     465: athrow
    Exception table:
       from    to  target type
         122   231   458   any
         232   295   458   any
         296   457   458   any
         458   463   458   any

  private java.lang.Object lambda$merge$15(java.lang.Object, java.util.function.BiFunction, java.lang.Object, java.lang.Object);
    Code:
       0: aload         4
       2: ifnonnull     9
       5: aload_1
       6: goto          22
       9: aload_0
      10: aload_2
      11: invokevirtual #381                // Method statsAware:(Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;
      14: aload         4
      16: aload_1
      17: invokeinterface #378,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: areturn

  private com.github.benmanes.caffeine.cache.Node lambda$doComputeIfAbsent$14(java.lang.Object[], java.util.function.Function, java.lang.Object, long[], int[], java.lang.Object[], java.lang.Object[], com.github.benmanes.caffeine.cache.RemovalCause[], com.github.benmanes.caffeine.cache.Node[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         11
       2: ifnonnull     109
       5: aload_1
       6: iconst_0
       7: aload_2
       8: aload_3
       9: invokeinterface #346,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aastore
      15: aload_1
      16: iconst_0
      17: aaload
      18: ifnonnull     23
      21: aconst_null
      22: areturn
      23: aload         4
      25: iconst_0
      26: aload_0
      27: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      30: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      35: lastore
      36: aload         5
      38: iconst_1
      39: aload_0
      40: getfield      #14                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
      43: aload_3
      44: aload_1
      45: iconst_0
      46: aaload
      47: invokeinterface #284,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
      52: iastore
      53: aload_0
      54: getfield      #21                 // Field nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      57: aload_3
      58: aload_0
      59: invokevirtual #228                // Method keyReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      62: aload_1
      63: iconst_0
      64: aaload
      65: aload_0
      66: invokevirtual #231                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
      69: aload         5
      71: iconst_1
      72: iaload
      73: aload         4
      75: iconst_0
      76: laload
      77: invokeinterface #285,  8          // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newNode:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;IJ)Lcom/github/benmanes/caffeine/cache/Node;
      82: astore        11
      84: aload_0
      85: aload         11
      87: aload_0
      88: aload_3
      89: aload_1
      90: iconst_0
      91: aaload
      92: aload_0
      93: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
      96: aload         4
      98: iconst_0
      99: laload
     100: invokevirtual #286                // Method expireAfterCreate:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)J
     103: invokevirtual #287                // Method setVariableTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     106: aload         11
     108: areturn
     109: aload         11
     111: dup
     112: astore        12
     114: monitorenter
     115: aload         6
     117: iconst_0
     118: aload         11
     120: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
     123: aastore
     124: aload         5
     126: iconst_0
     127: aload         11
     129: invokevirtual #143                // Method com/github/benmanes/caffeine/cache/Node.getWeight:()I
     132: iastore
     133: aload         7
     135: iconst_0
     136: aload         11
     138: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
     141: aastore
     142: aload         6
     144: iconst_0
     145: aaload
     146: ifnull        156
     149: aload         7
     151: iconst_0
     152: aaload
     153: ifnonnull     166
     156: aload         8
     158: iconst_0
     159: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     162: aastore
     163: goto          195
     166: aload_0
     167: aload         11
     169: aload         4
     171: iconst_0
     172: laload
     173: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
     176: ifeq          189
     179: aload         8
     181: iconst_0
     182: getstatic     #124                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     185: aastore
     186: goto          195
     189: aload         11
     191: aload         12
     193: monitorexit
     194: areturn
     195: aload_0
     196: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     199: aload         6
     201: iconst_0
     202: aaload
     203: aload         7
     205: iconst_0
     206: aaload
     207: aload         8
     209: iconst_0
     210: aaload
     211: invokeinterface #296,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     216: aload_1
     217: iconst_0
     218: aload_2
     219: aload_3
     220: invokeinterface #346,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     225: aastore
     226: aload_1
     227: iconst_0
     228: aaload
     229: ifnonnull     248
     232: aload         9
     234: iconst_0
     235: aload         11
     237: aastore
     238: aload         11
     240: invokevirtual #380                // Method com/github/benmanes/caffeine/cache/Node.retire:()V
     243: aconst_null
     244: aload         12
     246: monitorexit
     247: areturn
     248: aload         5
     250: iconst_1
     251: aload_0
     252: getfield      #14                 // Field weigher:Lcom/github/benmanes/caffeine/cache/Weigher;
     255: aload_3
     256: aload_1
     257: iconst_0
     258: aaload
     259: invokeinterface #284,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/Weigher.weigh:(Ljava/lang/Object;Ljava/lang/Object;)I
     264: iastore
     265: aload         11
     267: aload_1
     268: iconst_0
     269: aaload
     270: aload_0
     271: invokevirtual #231                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
     274: invokevirtual #304                // Method com/github/benmanes/caffeine/cache/Node.setValue:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
     277: aload         11
     279: aload         5
     281: iconst_1
     282: iaload
     283: invokevirtual #303                // Method com/github/benmanes/caffeine/cache/Node.setWeight:(I)V
     286: aload         4
     288: iconst_0
     289: aload_0
     290: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
     293: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
     298: lastore
     299: aload_0
     300: aload         11
     302: aload_0
     303: aload_3
     304: aload_1
     305: iconst_0
     306: aaload
     307: aload_0
     308: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
     311: aload         4
     313: iconst_0
     314: laload
     315: invokevirtual #286                // Method expireAfterCreate:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)J
     318: invokevirtual #287                // Method setVariableTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     321: aload_0
     322: aload         11
     324: aload         4
     326: iconst_0
     327: laload
     328: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     331: aload_0
     332: aload         11
     334: aload         4
     336: iconst_0
     337: laload
     338: invokevirtual #302                // Method setWriteTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     341: aload         11
     343: aload         12
     345: monitorexit
     346: areturn
     347: astore        13
     349: aload         12
     351: monitorexit
     352: aload         13
     354: athrow
    Exception table:
       from    to  target type
         115   194   347   any
         195   247   347   any
         248   346   347   any
         347   352   347   any

  private java.lang.Object lambda$replaceAll$13(java.util.function.BiFunction, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #378,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: invokestatic  #263                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore        4
      13: aload_3
      14: aload         4
      16: if_acmpeq     31
      19: aload_0
      20: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      23: aload_2
      24: aload         4
      26: invokeinterface #299,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.write:(Ljava/lang/Object;Ljava/lang/Object;)V
      31: aload         4
      33: areturn

  private com.github.benmanes.caffeine.cache.Node lambda$replace$12(java.lang.Object[], java.lang.Object[], int[], java.lang.Object, long[], java.lang.Object, java.lang.Object, int, boolean[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         11
       2: dup
       3: astore        12
       5: monitorenter
       6: aload_1
       7: iconst_0
       8: aload         11
      10: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      13: aastore
      14: aload_2
      15: iconst_0
      16: aload         11
      18: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      21: aastore
      22: aload_3
      23: iconst_0
      24: aload         11
      26: invokevirtual #143                // Method com/github/benmanes/caffeine/cache/Node.getWeight:()I
      29: iastore
      30: aload_1
      31: iconst_0
      32: aaload
      33: ifnull        75
      36: aload_2
      37: iconst_0
      38: aaload
      39: ifnull        75
      42: aload         11
      44: aload         4
      46: invokevirtual #264                // Method com/github/benmanes/caffeine/cache/Node.containsValue:(Ljava/lang/Object;)Z
      49: ifeq          75
      52: aload_0
      53: aload         11
      55: aload         5
      57: iconst_0
      58: aload_0
      59: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      62: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      67: dup2_x2
      68: lastore
      69: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      72: ifeq          81
      75: aload         11
      77: aload         12
      79: monitorexit
      80: areturn
      81: aload_0
      82: aload         11
      84: aload         6
      86: aload         7
      88: aload_0
      89: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
      92: aload         5
      94: iconst_0
      95: laload
      96: invokevirtual #298                // Method expireAfterUpdate:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)J
      99: lstore        13
     101: aload         7
     103: aload_2
     104: iconst_0
     105: aaload
     106: if_acmpeq     122
     109: aload_0
     110: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     113: aload         6
     115: aload         7
     117: invokeinterface #299,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.write:(Ljava/lang/Object;Ljava/lang/Object;)V
     122: aload         11
     124: aload         7
     126: aload_0
     127: invokevirtual #231                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
     130: invokevirtual #304                // Method com/github/benmanes/caffeine/cache/Node.setValue:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
     133: aload         11
     135: iload         8
     137: invokevirtual #303                // Method com/github/benmanes/caffeine/cache/Node.setWeight:(I)V
     140: aload_0
     141: aload         11
     143: lload         13
     145: invokevirtual #287                // Method setVariableTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     148: aload_0
     149: aload         11
     151: aload         5
     153: iconst_0
     154: laload
     155: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     158: aload_0
     159: aload         11
     161: aload         5
     163: iconst_0
     164: laload
     165: invokevirtual #302                // Method setWriteTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     168: aload         9
     170: iconst_0
     171: iconst_1
     172: bastore
     173: aload         12
     175: monitorexit
     176: goto          187
     179: astore        15
     181: aload         12
     183: monitorexit
     184: aload         15
     186: athrow
     187: aload         11
     189: areturn
    Exception table:
       from    to  target type
           6    80   179   any
          81   176   179   any
         179   184   179   any

  private com.github.benmanes.caffeine.cache.Node lambda$replace$11(java.lang.Object[], java.lang.Object[], int[], long[], java.lang.Object, java.lang.Object, int, java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         9
       2: dup
       3: astore        10
       5: monitorenter
       6: aload_1
       7: iconst_0
       8: aload         9
      10: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      13: aastore
      14: aload_2
      15: iconst_0
      16: aload         9
      18: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      21: aastore
      22: aload_3
      23: iconst_0
      24: aload         9
      26: invokevirtual #143                // Method com/github/benmanes/caffeine/cache/Node.getWeight:()I
      29: iastore
      30: aload_1
      31: iconst_0
      32: aaload
      33: ifnull        65
      36: aload_2
      37: iconst_0
      38: aaload
      39: ifnull        65
      42: aload_0
      43: aload         9
      45: aload         4
      47: iconst_0
      48: aload_0
      49: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      52: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      57: dup2_x2
      58: lastore
      59: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      62: ifeq          75
      65: aload_2
      66: iconst_0
      67: aconst_null
      68: aastore
      69: aload         9
      71: aload         10
      73: monitorexit
      74: areturn
      75: aload_0
      76: aload         9
      78: aload         5
      80: aload         6
      82: aload_0
      83: invokevirtual #269                // Method expiry:()Lcom/github/benmanes/caffeine/cache/Expiry;
      86: aload         4
      88: iconst_0
      89: laload
      90: invokevirtual #298                // Method expireAfterUpdate:(Lcom/github/benmanes/caffeine/cache/Node;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;J)J
      93: lstore        11
      95: aload         6
      97: aload_2
      98: iconst_0
      99: aaload
     100: if_acmpeq     117
     103: aload_0
     104: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     107: aload_1
     108: iconst_0
     109: aaload
     110: aload         6
     112: invokeinterface #299,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.write:(Ljava/lang/Object;Ljava/lang/Object;)V
     117: aload         9
     119: aload         6
     121: aload_0
     122: invokevirtual #231                // Method valueReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
     125: invokevirtual #304                // Method com/github/benmanes/caffeine/cache/Node.setValue:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
     128: aload         9
     130: iload         7
     132: invokevirtual #303                // Method com/github/benmanes/caffeine/cache/Node.setWeight:(I)V
     135: aload_0
     136: aload         9
     138: lload         11
     140: invokevirtual #287                // Method setVariableTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     143: aload_0
     144: aload         9
     146: aload         4
     148: iconst_0
     149: laload
     150: invokevirtual #268                // Method setAccessTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     153: aload_0
     154: aload         9
     156: aload         4
     158: iconst_0
     159: laload
     160: invokevirtual #302                // Method setWriteTime:(Lcom/github/benmanes/caffeine/cache/Node;J)V
     163: aload         9
     165: aload         10
     167: monitorexit
     168: areturn
     169: astore        13
     171: aload         10
     173: monitorexit
     174: aload         13
     176: athrow
    Exception table:
       from    to  target type
           6    74   169   any
          75   168   169   any
         169   174   169   any

  private com.github.benmanes.caffeine.cache.Node lambda$remove$10(java.lang.Object[], java.lang.Object[], com.github.benmanes.caffeine.cache.RemovalCause[], java.lang.Object, com.github.benmanes.caffeine.cache.Node[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         7
       2: dup
       3: astore        8
       5: monitorenter
       6: aload_1
       7: iconst_0
       8: aload         7
      10: invokevirtual #104                // Method com/github/benmanes/caffeine/cache/Node.getKey:()Ljava/lang/Object;
      13: aastore
      14: aload_2
      15: iconst_0
      16: aload         7
      18: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      21: aastore
      22: aload_1
      23: iconst_0
      24: aaload
      25: ifnonnull     37
      28: aload_3
      29: iconst_0
      30: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      33: aastore
      34: goto          89
      37: aload_0
      38: aload         7
      40: aload_0
      41: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      44: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      49: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      52: ifeq          64
      55: aload_3
      56: iconst_0
      57: getstatic     #124                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      60: aastore
      61: goto          89
      64: aload         7
      66: aload         4
      68: invokevirtual #264                // Method com/github/benmanes/caffeine/cache/Node.containsValue:(Ljava/lang/Object;)Z
      71: ifeq          83
      74: aload_3
      75: iconst_0
      76: getstatic     #311                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      79: aastore
      80: goto          89
      83: aload         7
      85: aload         8
      87: monitorexit
      88: areturn
      89: aload_0
      90: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      93: aload_1
      94: iconst_0
      95: aaload
      96: aload_2
      97: iconst_0
      98: aaload
      99: aload_3
     100: iconst_0
     101: aaload
     102: invokeinterface #296,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     107: aload         5
     109: iconst_0
     110: aload         7
     112: aastore
     113: aload         7
     115: invokevirtual #380                // Method com/github/benmanes/caffeine/cache/Node.retire:()V
     118: aconst_null
     119: aload         8
     121: monitorexit
     122: areturn
     123: astore        9
     125: aload         8
     127: monitorexit
     128: aload         9
     130: athrow
    Exception table:
       from    to  target type
           6    88   123   any
          89   122   123   any
         123   128   123   any

  private com.github.benmanes.caffeine.cache.Node lambda$remove$9(java.lang.Object[], com.github.benmanes.caffeine.cache.RemovalCause[], java.lang.Object, com.github.benmanes.caffeine.cache.Node[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         6
       2: dup
       3: astore        7
       5: monitorenter
       6: aload_1
       7: iconst_0
       8: aload         6
      10: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      13: aastore
      14: aload_1
      15: iconst_0
      16: aaload
      17: ifnonnull     29
      20: aload_2
      21: iconst_0
      22: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      25: aastore
      26: goto          62
      29: aload_0
      30: aload         6
      32: aload_0
      33: invokevirtual #110                // Method expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      36: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      41: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      44: ifeq          56
      47: aload_2
      48: iconst_0
      49: getstatic     #124                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      52: aastore
      53: goto          62
      56: aload_2
      57: iconst_0
      58: getstatic     #311                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      61: aastore
      62: aload_0
      63: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      66: aload_3
      67: aload_1
      68: iconst_0
      69: aaload
      70: aload_2
      71: iconst_0
      72: aaload
      73: invokeinterface #296,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
      78: aload         6
      80: invokevirtual #380                // Method com/github/benmanes/caffeine/cache/Node.retire:()V
      83: aload         7
      85: monitorexit
      86: goto          97
      89: astore        8
      91: aload         7
      93: monitorexit
      94: aload         8
      96: athrow
      97: aload         4
      99: iconst_0
     100: aload         6
     102: aastore
     103: aconst_null
     104: areturn
    Exception table:
       from    to  target type
           6    86    89   any
          89    94    89   any

  private com.github.benmanes.caffeine.cache.Node lambda$put$8(java.lang.Object, java.lang.Object, com.github.benmanes.caffeine.cache.Node, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
       4: aload_1
       5: aload_2
       6: invokeinterface #299,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.write:(Ljava/lang/Object;Ljava/lang/Object;)V
      11: aload_3
      12: areturn

  private com.github.benmanes.caffeine.cache.Node lambda$removeNode$7(com.github.benmanes.caffeine.cache.Node, java.lang.Object[], java.lang.Object, com.github.benmanes.caffeine.cache.RemovalCause[], long, java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         8
       2: aload_1
       3: if_acmpeq     9
       6: aload         8
       8: areturn
       9: aload         8
      11: dup
      12: astore        9
      14: monitorenter
      15: aload_2
      16: iconst_0
      17: aload         8
      19: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      22: aastore
      23: aload_3
      24: ifnull        33
      27: aload_2
      28: iconst_0
      29: aaload
      30: ifnonnull     43
      33: aload         4
      35: iconst_0
      36: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      39: aastore
      40: goto          71
      43: aload_0
      44: aload         8
      46: lload         5
      48: invokevirtual #262                // Method hasExpired:(Lcom/github/benmanes/caffeine/cache/Node;J)Z
      51: ifeq          64
      54: aload         4
      56: iconst_0
      57: getstatic     #124                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      60: aastore
      61: goto          71
      64: aload         4
      66: iconst_0
      67: getstatic     #311                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPLICIT:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      70: aastore
      71: aload_3
      72: ifnull        92
      75: aload_0
      76: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
      79: aload_3
      80: aload_2
      81: iconst_0
      82: aaload
      83: aload         4
      85: iconst_0
      86: aaload
      87: invokeinterface #296,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
      92: aload_0
      93: aload         8
      95: invokevirtual #146                // Method makeDead:(Lcom/github/benmanes/caffeine/cache/Node;)V
      98: aconst_null
      99: aload         9
     101: monitorexit
     102: areturn
     103: astore        10
     105: aload         9
     107: monitorexit
     108: aload         10
     110: athrow
    Exception table:
       from    to  target type
          15   102   103   any
         103   108   103   any

  private static void lambda$clear$6(com.github.benmanes.caffeine.cache.Node);
    Code:
       0: return

  private void lambda$refreshIfNeeded$5(long, com.github.benmanes.caffeine.cache.Node, long, long, java.util.concurrent.CompletableFuture, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #185                // Method statsTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
       4: invokeinterface #111,  1          // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
       9: lload_1
      10: lsub
      11: lstore        13
      13: aload         12
      15: ifnull        53
      18: getstatic     #54                 // Field logger:Ljava/util/logging/Logger;
      21: getstatic     #216                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      24: ldc_w         #382                // String Exception thrown during refresh
      27: aload         12
      29: invokevirtual #57                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      32: aload_3
      33: lload         4
      35: lload         6
      37: invokevirtual #184                // Method com/github/benmanes/caffeine/cache/Node.casWriteTime:(JJ)Z
      40: pop
      41: aload_0
      42: invokevirtual #142                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
      45: lload         13
      47: invokeinterface #383,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadFailure:(J)V
      52: return
      53: aload_0
      54: getfield      #6                  // Field isAsync:Z
      57: ifeq          70
      60: aload         11
      62: ifnull        70
      65: aload         8
      67: goto          72
      70: aload         11
      72: astore        15
      74: iconst_1
      75: newarray       boolean
      77: astore        16
      79: aload_0
      80: aload         9
      82: aload         15
      84: aload         10
      86: aload_3
      87: lload         4
      89: aload         16
      91: invokedynamic #384,  0            // InvokeDynamic #23:apply:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Node;J[Z)Ljava/util/function/BiFunction;
      96: iconst_0
      97: iconst_0
      98: iconst_1
      99: invokevirtual #385                // Method compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;ZZZ)Ljava/lang/Object;
     102: pop
     103: aload         16
     105: iconst_0
     106: baload
     107: ifeq          128
     110: aload_0
     111: invokevirtual #47                 // Method hasRemovalListener:()Z
     114: ifeq          128
     117: aload_0
     118: aload         9
     120: aload         15
     122: getstatic     #305                // Field com/github/benmanes/caffeine/cache/RemovalCause.REPLACED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     125: invokevirtual #145                // Method notifyRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     128: aload         11
     130: ifnonnull     147
     133: aload_0
     134: invokevirtual #142                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     137: lload         13
     139: invokeinterface #383,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadFailure:(J)V
     144: goto          158
     147: aload_0
     148: invokevirtual #142                // Method statsCounter:()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
     151: lload         13
     153: invokeinterface #386,  3          // InterfaceMethod com/github/benmanes/caffeine/cache/stats/StatsCounter.recordLoadSuccess:(J)V
     158: return

  private static java.lang.Object lambda$refreshIfNeeded$4(java.lang.Object, java.lang.Object, com.github.benmanes.caffeine.cache.Node, long, boolean[], java.lang.Object, java.lang.Object);
    Code:
       0: aload         7
       2: ifnonnull     7
       5: aload_0
       6: areturn
       7: aload         7
       9: aload_1
      10: if_acmpne     24
      13: aload_2
      14: invokevirtual #128                // Method com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
      17: lload_3
      18: lcmp
      19: ifne          24
      22: aload_0
      23: areturn
      24: aload         5
      26: iconst_0
      27: iconst_1
      28: bastore
      29: aload         7
      31: areturn

  private java.util.concurrent.CompletionStage lambda$refreshIfNeeded$3(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field cacheLoader:Lcom/github/benmanes/caffeine/cache/CacheLoader;
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #9                  // Field executor:Ljava/util/concurrent/Executor;
      10: invokeinterface #188,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheLoader.asyncReload:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  private com.github.benmanes.caffeine.cache.Node lambda$evictEntry$2(com.github.benmanes.caffeine.cache.Node, java.lang.Object[], com.github.benmanes.caffeine.cache.RemovalCause[], java.lang.Object, com.github.benmanes.caffeine.cache.RemovalCause, long, boolean[], boolean[], java.lang.Object, com.github.benmanes.caffeine.cache.Node);
    Code:
       0: aload         11
       2: aload_1
       3: if_acmpeq     9
       6: aload         11
       8: areturn
       9: aload         11
      11: dup
      12: astore        12
      14: monitorenter
      15: aload_2
      16: iconst_0
      17: aload         11
      19: invokevirtual #39                 // Method com/github/benmanes/caffeine/cache/Node.getValue:()Ljava/lang/Object;
      22: aastore
      23: aload_3
      24: iconst_0
      25: aload         4
      27: ifnull        36
      30: aload_2
      31: iconst_0
      32: aaload
      33: ifnonnull     42
      36: getstatic     #105                // Field com/github/benmanes/caffeine/cache/RemovalCause.COLLECTED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      39: goto          44
      42: aload         5
      44: aastore
      45: aload_3
      46: iconst_0
      47: aaload
      48: getstatic     #124                // Field com/github/benmanes/caffeine/cache/RemovalCause.EXPIRED:Lcom/github/benmanes/caffeine/cache/RemovalCause;
      51: if_acmpne     170
      54: iconst_0
      55: istore        13
      57: aload_0
      58: invokevirtual #29                 // Method expiresAfterAccess:()Z
      61: ifeq          90
      64: iload         13
      66: lload         6
      68: aload         11
      70: invokevirtual #123                // Method com/github/benmanes/caffeine/cache/Node.getAccessTime:()J
      73: lsub
      74: aload_0
      75: invokevirtual #122                // Method expiresAfterAccessNanos:()J
      78: lcmp
      79: iflt          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: ior
      88: istore        13
      90: aload_0
      91: invokevirtual #59                 // Method expiresAfterWrite:()Z
      94: ifeq          123
      97: iload         13
      99: lload         6
     101: aload         11
     103: invokevirtual #128                // Method com/github/benmanes/caffeine/cache/Node.getWriteTime:()J
     106: lsub
     107: aload_0
     108: invokevirtual #125                // Method expiresAfterWriteNanos:()J
     111: lcmp
     112: iflt          119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: ior
     121: istore        13
     123: aload_0
     124: invokevirtual #129                // Method expiresVariable:()Z
     127: ifeq          151
     130: iload         13
     132: aload         11
     134: invokevirtual #133                // Method com/github/benmanes/caffeine/cache/Node.getVariableTime:()J
     137: lload         6
     139: lcmp
     140: ifgt          147
     143: iconst_1
     144: goto          148
     147: iconst_0
     148: ior
     149: istore        13
     151: iload         13
     153: ifne          167
     156: aload         8
     158: iconst_0
     159: iconst_1
     160: bastore
     161: aload         11
     163: aload         12
     165: monitorexit
     166: areturn
     167: goto          201
     170: aload_3
     171: iconst_0
     172: aaload
     173: getstatic     #102                // Field com/github/benmanes/caffeine/cache/RemovalCause.SIZE:Lcom/github/benmanes/caffeine/cache/RemovalCause;
     176: if_acmpne     201
     179: aload_1
     180: invokevirtual #143                // Method com/github/benmanes/caffeine/cache/Node.getWeight:()I
     183: istore        13
     185: iload         13
     187: ifne          201
     190: aload         8
     192: iconst_0
     193: iconst_1
     194: bastore
     195: aload         11
     197: aload         12
     199: monitorexit
     200: areturn
     201: aload_0
     202: getfield      #16                 // Field writer:Lcom/github/benmanes/caffeine/cache/CacheWriter;
     205: aload         4
     207: aload_2
     208: iconst_0
     209: aaload
     210: aload_3
     211: iconst_0
     212: aaload
     213: invokeinterface #296,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/CacheWriter.delete:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
     218: aload_0
     219: aload         11
     221: invokevirtual #146                // Method makeDead:(Lcom/github/benmanes/caffeine/cache/Node;)V
     224: aload         12
     226: monitorexit
     227: goto          238
     230: astore        14
     232: aload         12
     234: monitorexit
     235: aload         14
     237: athrow
     238: aload         9
     240: iconst_0
     241: iconst_1
     242: bastore
     243: aconst_null
     244: areturn
    Exception table:
       from    to  target type
          15   166   230   any
         167   200   230   any
         201   227   230   any
         230   235   230   any

  private void lambda$notifyRemoval$1(java.lang.Object, java.lang.Object, com.github.benmanes.caffeine.cache.RemovalCause);
    Code:
       0: aload_0
       1: invokevirtual #357                // Method removalListener:()Lcom/github/benmanes/caffeine/cache/RemovalListener;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #387,  4          // InterfaceMethod com/github/benmanes/caffeine/cache/RemovalListener.onRemoval:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
      12: goto          31
      15: astore        4
      17: getstatic     #54                 // Field logger:Ljava/util/logging/Logger;
      20: getstatic     #216                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      23: ldc_w         #388                // String Exception thrown by removal listener
      26: aload         4
      28: invokevirtual #57                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      31: return
    Exception table:
       from    to  target type
           0    12    15   Class java/lang/Throwable

  private static void lambda$new$0(com.github.benmanes.caffeine.cache.Node);
    Code:
       0: return

  static {};
    Code:
       0: ldc           #65                 // class com/github/benmanes/caffeine/cache/BoundedLocalCache
       2: invokevirtual #389                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #390                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #54                 // Field logger:Ljava/util/logging/Logger;
      11: invokestatic  #391                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      14: invokevirtual #392                // Method java/lang/Runtime.availableProcessors:()I
      17: putstatic     #393                // Field NCPU:I
      20: sipush        128
      23: getstatic     #393                // Field NCPU:I
      26: invokestatic  #394                // Method com/github/benmanes/caffeine/cache/Caffeine.ceilingPowerOfTwo:(I)I
      29: imul
      30: putstatic     #244                // Field WRITE_BUFFER_MAX:I
      33: getstatic     #395                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      36: lconst_1
      37: invokevirtual #396                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      40: putstatic     #300                // Field EXPIRE_WRITE_TOLERANCE:J
      43: return
}
