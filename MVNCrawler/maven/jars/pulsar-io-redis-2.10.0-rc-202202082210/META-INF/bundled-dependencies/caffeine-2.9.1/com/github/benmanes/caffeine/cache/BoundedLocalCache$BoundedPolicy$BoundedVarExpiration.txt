Compiled from "BoundedLocalCache.java"
final class com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy$BoundedVarExpiration implements com.github.benmanes.caffeine.cache.Policy$VarExpiration<K, V> {
  final com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy this$0;

  com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy$BoundedVarExpiration(com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public java.util.OptionalLong getExpiresAfter(K, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      14: getfield      #5                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      17: getfield      #6                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      20: aload_1
      21: invokeinterface #7,  2            // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      26: astore_3
      27: aload_0
      28: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      31: getfield      #5                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      34: getfield      #8                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.data:Ljava/util/concurrent/ConcurrentHashMap;
      37: aload_3
      38: invokevirtual #9                  // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #10                 // class com/github/benmanes/caffeine/cache/Node
      44: astore        4
      46: aload         4
      48: ifnonnull     55
      51: invokestatic  #11                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
      54: areturn
      55: aload         4
      57: invokevirtual #12                 // Method com/github/benmanes/caffeine/cache/Node.getVariableTime:()J
      60: aload_0
      61: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      64: getfield      #5                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      67: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      70: invokeinterface #14,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
      75: lsub
      76: lstore        5
      78: lload         5
      80: lconst_0
      81: lcmp
      82: ifgt          91
      85: invokestatic  #11                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
      88: goto          103
      91: aload_2
      92: lload         5
      94: getstatic     #15                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      97: invokevirtual #16                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
     100: invokestatic  #17                 // Method java/util/OptionalLong.of:(J)Ljava/util/OptionalLong;
     103: areturn

  public void setExpiresAfter(K, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload         4
       7: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: lload_2
      12: lconst_0
      13: lcmp
      14: iflt          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokestatic  #18                 // Method com/github/benmanes/caffeine/cache/Caffeine.requireArgument:(Z)V
      25: aload_0
      26: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      29: getfield      #5                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      32: getfield      #6                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.nodeFactory:Lcom/github/benmanes/caffeine/cache/NodeFactory;
      35: aload_1
      36: invokeinterface #7,  2            // InterfaceMethod com/github/benmanes/caffeine/cache/NodeFactory.newLookupKey:(Ljava/lang/Object;)Ljava/lang/Object;
      41: astore        5
      43: aload_0
      44: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      47: getfield      #5                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      50: getfield      #8                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.data:Ljava/util/concurrent/ConcurrentHashMap;
      53: aload         5
      55: invokevirtual #9                  // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #10                 // class com/github/benmanes/caffeine/cache/Node
      61: astore        6
      63: aload         6
      65: ifnull        147
      68: getstatic     #15                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      71: lload_2
      72: aload         4
      74: invokevirtual #16                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      77: lstore        9
      79: aload         6
      81: dup
      82: astore        11
      84: monitorenter
      85: aload_0
      86: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      89: getfield      #5                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      92: invokevirtual #13                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.expirationTicker:()Lcom/github/benmanes/caffeine/cache/Ticker;
      95: invokeinterface #14,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Ticker.read:()J
     100: lstore        7
     102: aload         6
     104: lload         7
     106: lload         9
     108: ldc2_w        #19                 // long 4611686018427387903l
     111: invokestatic  #21                 // Method java/lang/Math.min:(JJ)J
     114: ladd
     115: invokevirtual #22                 // Method com/github/benmanes/caffeine/cache/Node.setVariableTime:(J)V
     118: aload         11
     120: monitorexit
     121: goto          132
     124: astore        12
     126: aload         11
     128: monitorexit
     129: aload         12
     131: athrow
     132: aload_0
     133: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
     136: getfield      #5                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
     139: aload         6
     141: lload         7
     143: iconst_0
     144: invokevirtual #23                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.afterRead:(Lcom/github/benmanes/caffeine/cache/Node;JZ)V
     147: return
    Exception table:
       from    to  target type
          85   121   124   any
         124   129   124   any

  public void put(K, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: aload         5
       6: iconst_0
       7: invokevirtual #24                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Z)Ljava/lang/Object;
      10: pop
      11: return

  public boolean putIfAbsent(K, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: aload         5
       6: iconst_1
       7: invokevirtual #24                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Z)Ljava/lang/Object;
      10: astore        6
      12: aload         6
      14: ifnonnull     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  V put(K, V, long, java.util.concurrent.TimeUnit, boolean);
    Code:
       0: aload         5
       2: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: pop
       6: aload_2
       7: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: lload_3
      12: lconst_0
      13: lcmp
      14: iflt          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokestatic  #18                 // Method com/github/benmanes/caffeine/cache/Caffeine.requireArgument:(Z)V
      25: new           #25                 // class com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy$BoundedVarExpiration$1
      28: dup
      29: aload_0
      30: aload         5
      32: lload_3
      33: invokespecial #26                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy$BoundedVarExpiration$1."<init>":(Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy$BoundedVarExpiration;Ljava/util/concurrent/TimeUnit;J)V
      36: astore        7
      38: aload_0
      39: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      42: getfield      #5                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      45: getfield      #27                 // Field com/github/benmanes/caffeine/cache/BoundedLocalCache.isAsync:Z
      48: ifeq          75
      51: new           #28                 // class com/github/benmanes/caffeine/cache/Async$AsyncExpiry
      54: dup
      55: aload         7
      57: invokespecial #29                 // Method com/github/benmanes/caffeine/cache/Async$AsyncExpiry."<init>":(Lcom/github/benmanes/caffeine/cache/Expiry;)V
      60: astore        8
      62: aload         8
      64: astore        7
      66: aload_2
      67: invokestatic  #30                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      70: astore        9
      72: aload         9
      74: astore_2
      75: aload_0
      76: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      79: getfield      #5                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
      82: aload_1
      83: aload_2
      84: aload         7
      86: iconst_1
      87: iload         6
      89: invokevirtual #31                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.put:(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/Expiry;ZZ)Ljava/lang/Object;
      92: areturn

  public java.util.Map<K, V> oldest(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #5                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: iconst_1
       8: iload_1
       9: aload_0
      10: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      13: getfield      #32                 // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.transformer:Ljava/util/function/Function;
      16: invokevirtual #33                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.variableSnapshot:(ZILjava/util/function/Function;)Ljava/util/Map;
      19: areturn

  public java.util.Map<K, V> youngest(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
       4: getfield      #5                  // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.cache:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache;
       7: iconst_0
       8: iload_1
       9: aload_0
      10: getfield      #2                  // Field this$0:Lcom/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy;
      13: getfield      #32                 // Field com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedPolicy.transformer:Ljava/util/function/Function;
      16: invokevirtual #33                 // Method com/github/benmanes/caffeine/cache/BoundedLocalCache.variableSnapshot:(ZILjava/util/function/Function;)Ljava/util/Map;
      19: areturn
}
