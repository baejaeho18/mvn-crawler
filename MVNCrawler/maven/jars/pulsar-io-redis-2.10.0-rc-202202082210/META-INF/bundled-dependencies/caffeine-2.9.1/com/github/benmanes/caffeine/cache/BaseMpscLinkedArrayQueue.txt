Compiled from "MpscGrowableArrayQueue.java"
abstract class com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue<E> extends com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields<E> {
  private static final long P_INDEX_OFFSET;

  private static final long C_INDEX_OFFSET;

  private static final long P_LIMIT_OFFSET;

  private static final java.lang.Object JUMP;

  com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/github/benmanes/caffeine/cache/BaseMpscLinkedArrayQueueColdProducerFields."<init>":()V
       4: iload_1
       5: iconst_2
       6: if_icmpge     19
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #3                  // String Initial capacity must be 2 or more
      15: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: iload_1
      20: invokestatic  #5                  // Method com/github/benmanes/caffeine/cache/Caffeine.ceilingPowerOfTwo:(I)I
      23: istore_2
      24: iload_2
      25: i2l
      26: lconst_1
      27: lsub
      28: iconst_1
      29: lshl
      30: lstore_3
      31: iload_2
      32: iconst_1
      33: iadd
      34: invokestatic  #6                  // Method allocate:(I)[Ljava/lang/Object;
      37: astore        5
      39: aload_0
      40: aload         5
      42: putfield      #7                  // Field producerBuffer:[Ljava/lang/Object;
      45: aload_0
      46: lload_3
      47: putfield      #8                  // Field producerMask:J
      50: aload_0
      51: aload         5
      53: putfield      #9                  // Field consumerBuffer:[Ljava/lang/Object;
      56: aload_0
      57: lload_3
      58: putfield      #10                 // Field consumerMask:J
      61: aload_0
      62: lload_3
      63: invokespecial #11                 // Method soProducerLimit:(J)V
      66: return

  public final java.util.Iterator<E> iterator();
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String toString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #17                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #19                 // String @
      19: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #20                 // Method java/lang/Object.hashCode:()I
      26: invokestatic  #21                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      29: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn

  public boolean offer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #23                 // class java/lang/NullPointerException
       8: dup
       9: invokespecial #24                 // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: invokespecial #25                 // Method lvProducerLimit:()J
      17: lstore        7
      19: aload_0
      20: invokespecial #26                 // Method lvProducerIndex:()J
      23: lstore        5
      25: lload         5
      27: lconst_1
      28: land
      29: lconst_1
      30: lcmp
      31: ifne          37
      34: goto          13
      37: aload_0
      38: getfield      #8                  // Field producerMask:J
      41: lstore_2
      42: aload_0
      43: getfield      #7                  // Field producerBuffer:[Ljava/lang/Object;
      46: astore        4
      48: lload         7
      50: lload         5
      52: lcmp
      53: ifgt          120
      56: aload_0
      57: lload_2
      58: lload         5
      60: lload         7
      62: invokespecial #27                 // Method offerSlowPath:(JJJ)I
      65: istore        9
      67: iload         9
      69: tableswitch   { // 0 to 3
                     0: 100
                     1: 103
                     2: 106
                     3: 108
               default: 120
          }
     100: goto          120
     103: goto          13
     106: iconst_0
     107: ireturn
     108: aload_0
     109: lload_2
     110: aload         4
     112: lload         5
     114: aload_1
     115: invokespecial #28                 // Method resize:(J[Ljava/lang/Object;JLjava/lang/Object;)V
     118: iconst_1
     119: ireturn
     120: aload_0
     121: lload         5
     123: lload         5
     125: ldc2_w        #29                 // long 2l
     128: ladd
     129: invokespecial #31                 // Method casProducerIndex:(JJ)Z
     132: ifeq          138
     135: goto          141
     138: goto          13
     141: lload         5
     143: lload_2
     144: invokestatic  #32                 // Method modifiedCalcElementOffset:(JJ)J
     147: lstore        7
     149: aload         4
     151: lload         7
     153: aload_1
     154: invokestatic  #33                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
     157: iconst_1
     158: ireturn

  private int offerSlowPath(long, long, long);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method lvConsumerIndex:()J
       4: lstore        8
       6: aload_0
       7: lload_1
       8: invokevirtual #35                 // Method getCurrentBufferCapacity:(J)J
      11: lstore        10
      13: iconst_0
      14: istore        7
      16: lload         8
      18: lload         10
      20: ladd
      21: lload_3
      22: lcmp
      23: ifle          46
      26: aload_0
      27: lload         5
      29: lload         8
      31: lload         10
      33: ladd
      34: invokespecial #36                 // Method casProducerLimit:(JJ)Z
      37: ifne          84
      40: iconst_1
      41: istore        7
      43: goto          84
      46: aload_0
      47: lload_3
      48: lload         8
      50: invokevirtual #37                 // Method availableInQueue:(JJ)J
      53: lconst_0
      54: lcmp
      55: ifgt          64
      58: iconst_2
      59: istore        7
      61: goto          84
      64: aload_0
      65: lload_3
      66: lload_3
      67: lconst_1
      68: ladd
      69: invokespecial #31                 // Method casProducerIndex:(JJ)Z
      72: ifeq          81
      75: iconst_3
      76: istore        7
      78: goto          84
      81: iconst_1
      82: istore        7
      84: iload         7
      86: ireturn

  protected abstract long availableInQueue(long, long);

  private static long modifiedCalcElementOffset(long, long);
    Code:
       0: getstatic     #38                 // Field com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.REF_ARRAY_BASE:J
       3: lload_0
       4: lload_2
       5: land
       6: getstatic     #39                 // Field com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.REF_ELEMENT_SHIFT:I
       9: iconst_1
      10: isub
      11: lshl
      12: ladd
      13: lreturn

  public E poll();
    Code:
       0: aload_0
       1: getfield      #9                  // Field consumerBuffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #40                 // Field consumerIndex:J
       9: lstore_2
      10: aload_0
      11: getfield      #10                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #32                 // Method modifiedCalcElementOffset:(JJ)J
      22: lstore        6
      24: aload_1
      25: lload         6
      27: invokestatic  #41                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      30: astore        8
      32: aload         8
      34: ifnonnull     64
      37: lload_2
      38: aload_0
      39: invokespecial #26                 // Method lvProducerIndex:()J
      42: lcmp
      43: ifeq          62
      46: aload_1
      47: lload         6
      49: invokestatic  #41                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      52: astore        8
      54: aload         8
      56: ifnull        46
      59: goto          64
      62: aconst_null
      63: areturn
      64: aload         8
      66: getstatic     #42                 // Field JUMP:Ljava/lang/Object;
      69: if_acmpne     89
      72: aload_0
      73: aload_1
      74: lload         4
      76: invokespecial #43                 // Method getNextBuffer:([Ljava/lang/Object;J)[Ljava/lang/Object;
      79: astore        9
      81: aload_0
      82: aload         9
      84: lload_2
      85: invokespecial #44                 // Method newBufferPoll:([Ljava/lang/Object;J)Ljava/lang/Object;
      88: areturn
      89: aload_1
      90: lload         6
      92: aconst_null
      93: invokestatic  #33                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      96: aload_0
      97: lload_2
      98: ldc2_w        #29                 // long 2l
     101: ladd
     102: invokespecial #45                 // Method soConsumerIndex:(J)V
     105: aload         8
     107: areturn

  public E peek();
    Code:
       0: aload_0
       1: getfield      #9                  // Field consumerBuffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #40                 // Field consumerIndex:J
       9: lstore_2
      10: aload_0
      11: getfield      #10                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #32                 // Method modifiedCalcElementOffset:(JJ)J
      22: lstore        6
      24: aload_1
      25: lload         6
      27: invokestatic  #41                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      30: astore        8
      32: aload         8
      34: ifnonnull     61
      37: lload_2
      38: aload_0
      39: invokespecial #26                 // Method lvProducerIndex:()J
      42: lcmp
      43: ifeq          61
      46: aload_1
      47: lload         6
      49: invokestatic  #41                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      52: dup
      53: astore        8
      55: ifnonnull     61
      58: goto          46
      61: aload         8
      63: getstatic     #42                 // Field JUMP:Ljava/lang/Object;
      66: if_acmpne     82
      69: aload_0
      70: aload_0
      71: aload_1
      72: lload         4
      74: invokespecial #43                 // Method getNextBuffer:([Ljava/lang/Object;J)[Ljava/lang/Object;
      77: lload_2
      78: invokespecial #46                 // Method newBufferPeek:([Ljava/lang/Object;J)Ljava/lang/Object;
      81: areturn
      82: aload         8
      84: areturn

  private E[] getNextBuffer(E[], long);
    Code:
       0: lload_2
       1: invokestatic  #47                 // Method nextArrayOffset:(J)J
       4: lstore        4
       6: aload_1
       7: lload         4
       9: invokestatic  #41                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      12: checkcast     #48                 // class "[Ljava/lang/Object;"
      15: astore        6
      17: aload_1
      18: lload         4
      20: aconst_null
      21: invokestatic  #33                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      24: aload         6
      26: areturn

  private static long nextArrayOffset(long);
    Code:
       0: lload_0
       1: ldc2_w        #29                 // long 2l
       4: ladd
       5: ldc2_w        #50                 // long 9223372036854775807l
       8: invokestatic  #32                 // Method modifiedCalcElementOffset:(JJ)J
      11: lreturn

  private E newBufferPoll(E[], long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #52                 // Method newBufferAndOffset:([Ljava/lang/Object;J)J
       6: lstore        4
       8: aload_1
       9: lload         4
      11: invokestatic  #41                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      14: astore        6
      16: aload         6
      18: ifnonnull     31
      21: new           #53                 // class java/lang/IllegalStateException
      24: dup
      25: ldc           #54                 // String new buffer must have at least one element
      27: invokespecial #55                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_1
      32: lload         4
      34: aconst_null
      35: invokestatic  #33                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      38: aload_0
      39: lload_2
      40: ldc2_w        #29                 // long 2l
      43: ladd
      44: invokespecial #45                 // Method soConsumerIndex:(J)V
      47: aload         6
      49: areturn

  private E newBufferPeek(E[], long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #52                 // Method newBufferAndOffset:([Ljava/lang/Object;J)J
       6: lstore        4
       8: aload_1
       9: lload         4
      11: invokestatic  #41                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      14: astore        6
      16: aconst_null
      17: aload         6
      19: if_acmpne     32
      22: new           #53                 // class java/lang/IllegalStateException
      25: dup
      26: ldc           #54                 // String new buffer must have at least one element
      28: invokespecial #55                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload         6
      34: areturn

  private long newBufferAndOffset(E[], long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field consumerBuffer:[Ljava/lang/Object;
       5: aload_0
       6: aload_1
       7: arraylength
       8: i2l
       9: ldc2_w        #29                 // long 2l
      12: lsub
      13: iconst_1
      14: lshl
      15: putfield      #10                 // Field consumerMask:J
      18: lload_2
      19: aload_0
      20: getfield      #10                 // Field consumerMask:J
      23: invokestatic  #32                 // Method modifiedCalcElementOffset:(JJ)J
      26: lstore        4
      28: lload         4
      30: lreturn

  public final int size();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method lvConsumerIndex:()J
       4: lstore_1
       5: lload_1
       6: lstore        5
       8: aload_0
       9: invokespecial #26                 // Method lvProducerIndex:()J
      12: lstore        7
      14: aload_0
      15: invokespecial #34                 // Method lvConsumerIndex:()J
      18: lstore_1
      19: lload         5
      21: lload_1
      22: lcmp
      23: ifne          36
      26: lload         7
      28: lload_1
      29: lsub
      30: iconst_1
      31: lshr
      32: lstore_3
      33: goto          39
      36: goto          5
      39: lload_3
      40: ldc2_w        #57                 // long 2147483647l
      43: lcmp
      44: ifle          50
      47: ldc           #59                 // int 2147483647
      49: ireturn
      50: lload_3
      51: l2i
      52: ireturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method lvConsumerIndex:()J
       4: aload_0
       5: invokespecial #26                 // Method lvProducerIndex:()J
       8: lcmp
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private long lvProducerIndex();
    Code:
       0: getstatic     #60                 // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #61                 // Field P_INDEX_OFFSET:J
       7: invokevirtual #62                 // Method sun/misc/Unsafe.getLongVolatile:(Ljava/lang/Object;J)J
      10: lreturn

  private long lvConsumerIndex();
    Code:
       0: getstatic     #60                 // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #63                 // Field C_INDEX_OFFSET:J
       7: invokevirtual #62                 // Method sun/misc/Unsafe.getLongVolatile:(Ljava/lang/Object;J)J
      10: lreturn

  private void soProducerIndex(long);
    Code:
       0: getstatic     #60                 // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #61                 // Field P_INDEX_OFFSET:J
       7: lload_1
       8: invokevirtual #64                 // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      11: return

  private boolean casProducerIndex(long, long);
    Code:
       0: getstatic     #60                 // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #61                 // Field P_INDEX_OFFSET:J
       7: lload_1
       8: lload_3
       9: invokevirtual #65                 // Method sun/misc/Unsafe.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      12: ireturn

  private void soConsumerIndex(long);
    Code:
       0: getstatic     #60                 // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #63                 // Field C_INDEX_OFFSET:J
       7: lload_1
       8: invokevirtual #64                 // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      11: return

  private long lvProducerLimit();
    Code:
       0: aload_0
       1: getfield      #66                 // Field producerLimit:J
       4: lreturn

  private boolean casProducerLimit(long, long);
    Code:
       0: getstatic     #60                 // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #67                 // Field P_LIMIT_OFFSET:J
       7: lload_1
       8: lload_3
       9: invokevirtual #65                 // Method sun/misc/Unsafe.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      12: ireturn

  private void soProducerLimit(long);
    Code:
       0: getstatic     #60                 // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #67                 // Field P_LIMIT_OFFSET:J
       7: lload_1
       8: invokevirtual #64                 // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      11: return

  public long currentProducerIndex();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method lvProducerIndex:()J
       4: ldc2_w        #29                 // long 2l
       7: ldiv
       8: lreturn

  public long currentConsumerIndex();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method lvConsumerIndex:()J
       4: ldc2_w        #29                 // long 2l
       7: ldiv
       8: lreturn

  public abstract int capacity();

  public boolean relaxedOffer(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method offer:(Ljava/lang/Object;)Z
       5: ireturn

  public E relaxedPoll();
    Code:
       0: aload_0
       1: getfield      #9                  // Field consumerBuffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #40                 // Field consumerIndex:J
       9: lstore_2
      10: aload_0
      11: getfield      #10                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #32                 // Method modifiedCalcElementOffset:(JJ)J
      22: lstore        6
      24: aload_1
      25: lload         6
      27: invokestatic  #41                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      30: astore        8
      32: aload         8
      34: ifnonnull     39
      37: aconst_null
      38: areturn
      39: aload         8
      41: getstatic     #42                 // Field JUMP:Ljava/lang/Object;
      44: if_acmpne     64
      47: aload_0
      48: aload_1
      49: lload         4
      51: invokespecial #43                 // Method getNextBuffer:([Ljava/lang/Object;J)[Ljava/lang/Object;
      54: astore        9
      56: aload_0
      57: aload         9
      59: lload_2
      60: invokespecial #44                 // Method newBufferPoll:([Ljava/lang/Object;J)Ljava/lang/Object;
      63: areturn
      64: aload_1
      65: lload         6
      67: aconst_null
      68: invokestatic  #33                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      71: aload_0
      72: lload_2
      73: ldc2_w        #29                 // long 2l
      76: ladd
      77: invokespecial #45                 // Method soConsumerIndex:(J)V
      80: aload         8
      82: areturn

  public E relaxedPeek();
    Code:
       0: aload_0
       1: getfield      #9                  // Field consumerBuffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #40                 // Field consumerIndex:J
       9: lstore_2
      10: aload_0
      11: getfield      #10                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #32                 // Method modifiedCalcElementOffset:(JJ)J
      22: lstore        6
      24: aload_1
      25: lload         6
      27: invokestatic  #41                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      30: astore        8
      32: aload         8
      34: getstatic     #42                 // Field JUMP:Ljava/lang/Object;
      37: if_acmpne     53
      40: aload_0
      41: aload_0
      42: aload_1
      43: lload         4
      45: invokespecial #43                 // Method getNextBuffer:([Ljava/lang/Object;J)[Ljava/lang/Object;
      48: lload_2
      49: invokespecial #46                 // Method newBufferPeek:([Ljava/lang/Object;J)Ljava/lang/Object;
      52: areturn
      53: aload         8
      55: areturn

  private void resize(long, E[], long, E);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #69                 // Method getNextBufferSize:([Ljava/lang/Object;)I
       5: istore        7
       7: iload         7
       9: invokestatic  #6                  // Method allocate:(I)[Ljava/lang/Object;
      12: astore        8
      14: aload_0
      15: aload         8
      17: putfield      #7                  // Field producerBuffer:[Ljava/lang/Object;
      20: iload         7
      22: iconst_2
      23: isub
      24: iconst_1
      25: ishl
      26: istore        9
      28: aload_0
      29: iload         9
      31: i2l
      32: putfield      #8                  // Field producerMask:J
      35: lload         4
      37: lload_1
      38: invokestatic  #32                 // Method modifiedCalcElementOffset:(JJ)J
      41: lstore        10
      43: lload         4
      45: iload         9
      47: i2l
      48: invokestatic  #32                 // Method modifiedCalcElementOffset:(JJ)J
      51: lstore        12
      53: aload         8
      55: lload         12
      57: aload         6
      59: invokestatic  #33                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      62: aload_3
      63: lload_1
      64: invokestatic  #47                 // Method nextArrayOffset:(J)J
      67: aload         8
      69: invokestatic  #33                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      72: aload_0
      73: invokespecial #34                 // Method lvConsumerIndex:()J
      76: lstore        14
      78: aload_0
      79: lload         4
      81: lload         14
      83: invokevirtual #37                 // Method availableInQueue:(JJ)J
      86: lstore        16
      88: lload         16
      90: lconst_0
      91: lcmp
      92: ifgt          103
      95: new           #53                 // class java/lang/IllegalStateException
      98: dup
      99: invokespecial #70                 // Method java/lang/IllegalStateException."<init>":()V
     102: athrow
     103: aload_0
     104: lload         4
     106: iload         9
     108: i2l
     109: lload         16
     111: invokestatic  #71                 // Method java/lang/Math.min:(JJ)J
     114: ladd
     115: invokespecial #11                 // Method soProducerLimit:(J)V
     118: aload_0
     119: lload         4
     121: ldc2_w        #29                 // long 2l
     124: ladd
     125: invokespecial #72                 // Method soProducerIndex:(J)V
     128: aload_3
     129: lload         10
     131: getstatic     #42                 // Field JUMP:Ljava/lang/Object;
     134: invokestatic  #33                 // Method com/github/benmanes/caffeine/cache/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
     137: return

  public static <E> E[] allocate(int);
    Code:
       0: iload_0
       1: anewarray     #73                 // class java/lang/Object
       4: areturn

  protected abstract int getNextBufferSize(E[]);

  protected abstract long getCurrentBufferCapacity(long);

  static {};
    Code:
       0: ldc           #74                 // class com/github/benmanes/caffeine/cache/BaseMpscLinkedArrayQueueProducerFields
       2: ldc           #75                 // String producerIndex
       4: invokevirtual #76                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
       7: astore_0
       8: getstatic     #60                 // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      11: aload_0
      12: invokevirtual #77                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      15: putstatic     #61                 // Field P_INDEX_OFFSET:J
      18: goto          31
      21: astore_0
      22: new           #79                 // class java/lang/RuntimeException
      25: dup
      26: aload_0
      27: invokespecial #80                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
      31: ldc           #81                 // class com/github/benmanes/caffeine/cache/BaseMpscLinkedArrayQueueConsumerFields
      33: ldc           #82                 // String consumerIndex
      35: invokevirtual #76                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      38: astore_0
      39: getstatic     #60                 // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      42: aload_0
      43: invokevirtual #77                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      46: putstatic     #63                 // Field C_INDEX_OFFSET:J
      49: goto          62
      52: astore_0
      53: new           #79                 // class java/lang/RuntimeException
      56: dup
      57: aload_0
      58: invokespecial #80                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      61: athrow
      62: ldc           #83                 // class com/github/benmanes/caffeine/cache/BaseMpscLinkedArrayQueueColdProducerFields
      64: ldc           #84                 // String producerLimit
      66: invokevirtual #76                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      69: astore_0
      70: getstatic     #60                 // Field com/github/benmanes/caffeine/cache/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      73: aload_0
      74: invokevirtual #77                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      77: putstatic     #67                 // Field P_LIMIT_OFFSET:J
      80: goto          93
      83: astore_0
      84: new           #79                 // class java/lang/RuntimeException
      87: dup
      88: aload_0
      89: invokespecial #80                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      92: athrow
      93: new           #73                 // class java/lang/Object
      96: dup
      97: invokespecial #85                 // Method java/lang/Object."<init>":()V
     100: putstatic     #42                 // Field JUMP:Ljava/lang/Object;
     103: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/NoSuchFieldException
          31    49    52   Class java/lang/NoSuchFieldException
          62    80    83   Class java/lang/NoSuchFieldException
}
