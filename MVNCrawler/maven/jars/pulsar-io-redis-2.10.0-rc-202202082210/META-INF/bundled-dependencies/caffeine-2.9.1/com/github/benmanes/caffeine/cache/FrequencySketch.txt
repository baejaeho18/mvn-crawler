Compiled from "FrequencySketch.java"
final class com.github.benmanes.caffeine.cache.FrequencySketch<E> {
  static final long[] SEED;

  static final long RESET_MASK;

  static final long ONE_MASK;

  int sampleSize;

  int tableMask;

  long[] table;

  int size;

  public com.github.benmanes.caffeine.cache.FrequencySketch();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void ensureCapacity(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokestatic  #2                  // Method com/github/benmanes/caffeine/cache/Caffeine.requireArgument:(Z)V
      14: lload_1
      15: ldc2_w        #4                  // long 1073741823l
      18: invokestatic  #6                  // Method java/lang/Math.min:(JJ)J
      21: l2i
      22: istore_3
      23: aload_0
      24: getfield      #7                  // Field table:[J
      27: ifnull        40
      30: aload_0
      31: getfield      #7                  // Field table:[J
      34: arraylength
      35: iload_3
      36: if_icmplt     40
      39: return
      40: aload_0
      41: iload_3
      42: ifne          49
      45: iconst_1
      46: goto          53
      49: iload_3
      50: invokestatic  #8                  // Method com/github/benmanes/caffeine/cache/Caffeine.ceilingPowerOfTwo:(I)I
      53: newarray       long
      55: putfield      #7                  // Field table:[J
      58: aload_0
      59: iconst_0
      60: aload_0
      61: getfield      #7                  // Field table:[J
      64: arraylength
      65: iconst_1
      66: isub
      67: invokestatic  #9                  // Method java/lang/Math.max:(II)I
      70: putfield      #10                 // Field tableMask:I
      73: aload_0
      74: lload_1
      75: lconst_0
      76: lcmp
      77: ifne          85
      80: bipush        10
      82: goto          89
      85: bipush        10
      87: iload_3
      88: imul
      89: putfield      #11                 // Field sampleSize:I
      92: aload_0
      93: getfield      #11                 // Field sampleSize:I
      96: ifgt          105
      99: aload_0
     100: ldc           #12                 // int 2147483647
     102: putfield      #11                 // Field sampleSize:I
     105: aload_0
     106: iconst_0
     107: putfield      #13                 // Field size:I
     110: return

  public boolean isNotInitialized();
    Code:
       0: aload_0
       1: getfield      #7                  // Field table:[J
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int frequency(E);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method isNotInitialized:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: invokevirtual #15                 // Method java/lang/Object.hashCode:()I
      14: invokevirtual #16                 // Method spread:(I)I
      17: istore_2
      18: iload_2
      19: iconst_3
      20: iand
      21: iconst_2
      22: ishl
      23: istore_3
      24: ldc           #12                 // int 2147483647
      26: istore        4
      28: iconst_0
      29: istore        5
      31: iload         5
      33: iconst_4
      34: if_icmpge     82
      37: aload_0
      38: iload_2
      39: iload         5
      41: invokevirtual #17                 // Method indexOf:(II)I
      44: istore        6
      46: aload_0
      47: getfield      #7                  // Field table:[J
      50: iload         6
      52: laload
      53: iload_3
      54: iload         5
      56: iadd
      57: iconst_2
      58: ishl
      59: lushr
      60: ldc2_w        #18                 // long 15l
      63: land
      64: l2i
      65: istore        7
      67: iload         4
      69: iload         7
      71: invokestatic  #20                 // Method java/lang/Math.min:(II)I
      74: istore        4
      76: iinc          5, 1
      79: goto          31
      82: iload         4
      84: ireturn

  public void increment(E);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method isNotInitialized:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: aload_1
      10: invokevirtual #15                 // Method java/lang/Object.hashCode:()I
      13: invokevirtual #16                 // Method spread:(I)I
      16: istore_2
      17: iload_2
      18: iconst_3
      19: iand
      20: iconst_2
      21: ishl
      22: istore_3
      23: aload_0
      24: iload_2
      25: iconst_0
      26: invokevirtual #17                 // Method indexOf:(II)I
      29: istore        4
      31: aload_0
      32: iload_2
      33: iconst_1
      34: invokevirtual #17                 // Method indexOf:(II)I
      37: istore        5
      39: aload_0
      40: iload_2
      41: iconst_2
      42: invokevirtual #17                 // Method indexOf:(II)I
      45: istore        6
      47: aload_0
      48: iload_2
      49: iconst_3
      50: invokevirtual #17                 // Method indexOf:(II)I
      53: istore        7
      55: aload_0
      56: iload         4
      58: iload_3
      59: invokevirtual #21                 // Method incrementAt:(II)Z
      62: istore        8
      64: iload         8
      66: aload_0
      67: iload         5
      69: iload_3
      70: iconst_1
      71: iadd
      72: invokevirtual #21                 // Method incrementAt:(II)Z
      75: ior
      76: istore        8
      78: iload         8
      80: aload_0
      81: iload         6
      83: iload_3
      84: iconst_2
      85: iadd
      86: invokevirtual #21                 // Method incrementAt:(II)Z
      89: ior
      90: istore        8
      92: iload         8
      94: aload_0
      95: iload         7
      97: iload_3
      98: iconst_3
      99: iadd
     100: invokevirtual #21                 // Method incrementAt:(II)Z
     103: ior
     104: istore        8
     106: iload         8
     108: ifeq          133
     111: aload_0
     112: dup
     113: getfield      #13                 // Field size:I
     116: iconst_1
     117: iadd
     118: dup_x1
     119: putfield      #13                 // Field size:I
     122: aload_0
     123: getfield      #11                 // Field sampleSize:I
     126: if_icmpne     133
     129: aload_0
     130: invokevirtual #22                 // Method reset:()V
     133: return

  boolean incrementAt(int, int);
    Code:
       0: iload_2
       1: iconst_2
       2: ishl
       3: istore_3
       4: ldc2_w        #18                 // long 15l
       7: iload_3
       8: lshl
       9: lstore        4
      11: aload_0
      12: getfield      #7                  // Field table:[J
      15: iload_1
      16: laload
      17: lload         4
      19: land
      20: lload         4
      22: lcmp
      23: ifeq          40
      26: aload_0
      27: getfield      #7                  // Field table:[J
      30: iload_1
      31: dup2
      32: laload
      33: lconst_1
      34: iload_3
      35: lshl
      36: ladd
      37: lastore
      38: iconst_1
      39: ireturn
      40: iconst_0
      41: ireturn

  void reset();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: aload_0
       6: getfield      #7                  // Field table:[J
       9: arraylength
      10: if_icmpge     53
      13: iload_1
      14: aload_0
      15: getfield      #7                  // Field table:[J
      18: iload_2
      19: laload
      20: ldc2_w        #24                 // long 1229782938247303441l
      23: land
      24: invokestatic  #26                 // Method java/lang/Long.bitCount:(J)I
      27: iadd
      28: istore_1
      29: aload_0
      30: getfield      #7                  // Field table:[J
      33: iload_2
      34: aload_0
      35: getfield      #7                  // Field table:[J
      38: iload_2
      39: laload
      40: iconst_1
      41: lushr
      42: ldc2_w        #27                 // long 8608480567731124087l
      45: land
      46: lastore
      47: iinc          2, 1
      50: goto          4
      53: aload_0
      54: aload_0
      55: getfield      #13                 // Field size:I
      58: iconst_1
      59: iushr
      60: iload_1
      61: iconst_2
      62: iushr
      63: isub
      64: putfield      #13                 // Field size:I
      67: return

  int indexOf(int, int);
    Code:
       0: iload_1
       1: i2l
       2: getstatic     #29                 // Field SEED:[J
       5: iload_2
       6: laload
       7: ladd
       8: getstatic     #29                 // Field SEED:[J
      11: iload_2
      12: laload
      13: lmul
      14: lstore_3
      15: lload_3
      16: lload_3
      17: bipush        32
      19: lushr
      20: ladd
      21: lstore_3
      22: lload_3
      23: l2i
      24: aload_0
      25: getfield      #10                 // Field tableMask:I
      28: iand
      29: ireturn

  int spread(int);
    Code:
       0: iload_1
       1: bipush        16
       3: iushr
       4: iload_1
       5: ixor
       6: ldc           #30                 // int 73244475
       8: imul
       9: istore_1
      10: iload_1
      11: bipush        16
      13: iushr
      14: iload_1
      15: ixor
      16: ldc           #30                 // int 73244475
      18: imul
      19: istore_1
      20: iload_1
      21: bipush        16
      23: iushr
      24: iload_1
      25: ixor
      26: ireturn

  static {};
    Code:
       0: iconst_4
       1: newarray       long
       3: dup
       4: iconst_0
       5: ldc2_w        #31                 // long -4348849565147123417l
       8: lastore
       9: dup
      10: iconst_1
      11: ldc2_w        #33                 // long -5435081209227447693l
      14: lastore
      15: dup
      16: iconst_2
      17: ldc2_w        #35                 // long -7286425919675154353l
      20: lastore
      21: dup
      22: iconst_3
      23: ldc2_w        #37                 // long -3750763034362895579l
      26: lastore
      27: putstatic     #29                 // Field SEED:[J
      30: return
}
