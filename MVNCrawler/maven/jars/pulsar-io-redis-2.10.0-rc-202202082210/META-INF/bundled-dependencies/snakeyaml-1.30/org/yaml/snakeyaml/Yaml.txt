Compiled from "Yaml.java"
public class org.yaml.snakeyaml.Yaml {
  protected final org.yaml.snakeyaml.resolver.Resolver resolver;

  private java.lang.String name;

  protected org.yaml.snakeyaml.constructor.BaseConstructor constructor;

  protected org.yaml.snakeyaml.representer.Representer representer;

  protected org.yaml.snakeyaml.DumperOptions dumperOptions;

  protected org.yaml.snakeyaml.LoaderOptions loadingConfig;

  public org.yaml.snakeyaml.Yaml();
    Code:
       0: aload_0
       1: new           #1                  // class org/yaml/snakeyaml/constructor/Constructor
       4: dup
       5: invokespecial #2                  // Method org/yaml/snakeyaml/constructor/Constructor."<init>":()V
       8: new           #3                  // class org/yaml/snakeyaml/representer/Representer
      11: dup
      12: invokespecial #4                  // Method org/yaml/snakeyaml/representer/Representer."<init>":()V
      15: new           #5                  // class org/yaml/snakeyaml/DumperOptions
      18: dup
      19: invokespecial #6                  // Method org/yaml/snakeyaml/DumperOptions."<init>":()V
      22: new           #7                  // class org/yaml/snakeyaml/LoaderOptions
      25: dup
      26: invokespecial #8                  // Method org/yaml/snakeyaml/LoaderOptions."<init>":()V
      29: new           #9                  // class org/yaml/snakeyaml/resolver/Resolver
      32: dup
      33: invokespecial #10                 // Method org/yaml/snakeyaml/resolver/Resolver."<init>":()V
      36: invokespecial #11                 // Method "<init>":(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
      39: return

  public org.yaml.snakeyaml.Yaml(org.yaml.snakeyaml.DumperOptions);
    Code:
       0: aload_0
       1: new           #1                  // class org/yaml/snakeyaml/constructor/Constructor
       4: dup
       5: invokespecial #2                  // Method org/yaml/snakeyaml/constructor/Constructor."<init>":()V
       8: new           #3                  // class org/yaml/snakeyaml/representer/Representer
      11: dup
      12: aload_1
      13: invokespecial #12                 // Method org/yaml/snakeyaml/representer/Representer."<init>":(Lorg/yaml/snakeyaml/DumperOptions;)V
      16: aload_1
      17: invokespecial #13                 // Method "<init>":(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
      20: return

  public org.yaml.snakeyaml.Yaml(org.yaml.snakeyaml.LoaderOptions);
    Code:
       0: aload_0
       1: new           #1                  // class org/yaml/snakeyaml/constructor/Constructor
       4: dup
       5: aload_1
       6: invokespecial #14                 // Method org/yaml/snakeyaml/constructor/Constructor."<init>":(Lorg/yaml/snakeyaml/LoaderOptions;)V
       9: new           #3                  // class org/yaml/snakeyaml/representer/Representer
      12: dup
      13: invokespecial #4                  // Method org/yaml/snakeyaml/representer/Representer."<init>":()V
      16: new           #5                  // class org/yaml/snakeyaml/DumperOptions
      19: dup
      20: invokespecial #6                  // Method org/yaml/snakeyaml/DumperOptions."<init>":()V
      23: aload_1
      24: invokespecial #15                 // Method "<init>":(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;)V
      27: return

  public org.yaml.snakeyaml.Yaml(org.yaml.snakeyaml.representer.Representer);
    Code:
       0: aload_0
       1: new           #1                  // class org/yaml/snakeyaml/constructor/Constructor
       4: dup
       5: invokespecial #2                  // Method org/yaml/snakeyaml/constructor/Constructor."<init>":()V
       8: aload_1
       9: invokespecial #16                 // Method "<init>":(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;)V
      12: return

  public org.yaml.snakeyaml.Yaml(org.yaml.snakeyaml.constructor.BaseConstructor);
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class org/yaml/snakeyaml/representer/Representer
       5: dup
       6: invokespecial #4                  // Method org/yaml/snakeyaml/representer/Representer."<init>":()V
       9: invokespecial #16                 // Method "<init>":(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;)V
      12: return

  public org.yaml.snakeyaml.Yaml(org.yaml.snakeyaml.constructor.BaseConstructor, org.yaml.snakeyaml.representer.Representer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: invokestatic  #17                 // Method initDumperOptions:(Lorg/yaml/snakeyaml/representer/Representer;)Lorg/yaml/snakeyaml/DumperOptions;
       7: invokespecial #13                 // Method "<init>":(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;)V
      10: return

  private static org.yaml.snakeyaml.DumperOptions initDumperOptions(org.yaml.snakeyaml.representer.Representer);
    Code:
       0: new           #5                  // class org/yaml/snakeyaml/DumperOptions
       3: dup
       4: invokespecial #6                  // Method org/yaml/snakeyaml/DumperOptions."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #18                 // Method org/yaml/snakeyaml/representer/Representer.getDefaultFlowStyle:()Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      13: invokevirtual #19                 // Method org/yaml/snakeyaml/DumperOptions.setDefaultFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
      16: aload_1
      17: aload_0
      18: invokevirtual #20                 // Method org/yaml/snakeyaml/representer/Representer.getDefaultScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      21: invokevirtual #21                 // Method org/yaml/snakeyaml/DumperOptions.setDefaultScalarStyle:(Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;)V
      24: aload_1
      25: aload_0
      26: invokevirtual #22                 // Method org/yaml/snakeyaml/representer/Representer.getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      29: invokevirtual #23                 // Method org/yaml/snakeyaml/introspector/PropertyUtils.isAllowReadOnlyProperties:()Z
      32: invokevirtual #24                 // Method org/yaml/snakeyaml/DumperOptions.setAllowReadOnlyProperties:(Z)V
      35: aload_1
      36: aload_0
      37: invokevirtual #25                 // Method org/yaml/snakeyaml/representer/Representer.getTimeZone:()Ljava/util/TimeZone;
      40: invokevirtual #26                 // Method org/yaml/snakeyaml/DumperOptions.setTimeZone:(Ljava/util/TimeZone;)V
      43: aload_1
      44: areturn

  public org.yaml.snakeyaml.Yaml(org.yaml.snakeyaml.representer.Representer, org.yaml.snakeyaml.DumperOptions);
    Code:
       0: aload_0
       1: new           #1                  // class org/yaml/snakeyaml/constructor/Constructor
       4: dup
       5: invokespecial #2                  // Method org/yaml/snakeyaml/constructor/Constructor."<init>":()V
       8: aload_1
       9: aload_2
      10: new           #7                  // class org/yaml/snakeyaml/LoaderOptions
      13: dup
      14: invokespecial #8                  // Method org/yaml/snakeyaml/LoaderOptions."<init>":()V
      17: new           #9                  // class org/yaml/snakeyaml/resolver/Resolver
      20: dup
      21: invokespecial #10                 // Method org/yaml/snakeyaml/resolver/Resolver."<init>":()V
      24: invokespecial #11                 // Method "<init>":(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
      27: return

  public org.yaml.snakeyaml.Yaml(org.yaml.snakeyaml.constructor.BaseConstructor, org.yaml.snakeyaml.representer.Representer, org.yaml.snakeyaml.DumperOptions);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #7                  // class org/yaml/snakeyaml/LoaderOptions
       7: dup
       8: invokespecial #8                  // Method org/yaml/snakeyaml/LoaderOptions."<init>":()V
      11: new           #9                  // class org/yaml/snakeyaml/resolver/Resolver
      14: dup
      15: invokespecial #10                 // Method org/yaml/snakeyaml/resolver/Resolver."<init>":()V
      18: invokespecial #11                 // Method "<init>":(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
      21: return

  public org.yaml.snakeyaml.Yaml(org.yaml.snakeyaml.constructor.BaseConstructor, org.yaml.snakeyaml.representer.Representer, org.yaml.snakeyaml.DumperOptions, org.yaml.snakeyaml.LoaderOptions);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: new           #9                  // class org/yaml/snakeyaml/resolver/Resolver
       9: dup
      10: invokespecial #10                 // Method org/yaml/snakeyaml/resolver/Resolver."<init>":()V
      13: invokespecial #11                 // Method "<init>":(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
      16: return

  public org.yaml.snakeyaml.Yaml(org.yaml.snakeyaml.constructor.BaseConstructor, org.yaml.snakeyaml.representer.Representer, org.yaml.snakeyaml.DumperOptions, org.yaml.snakeyaml.resolver.Resolver);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #7                  // class org/yaml/snakeyaml/LoaderOptions
       7: dup
       8: invokespecial #8                  // Method org/yaml/snakeyaml/LoaderOptions."<init>":()V
      11: aload         4
      13: invokespecial #11                 // Method "<init>":(Lorg/yaml/snakeyaml/constructor/BaseConstructor;Lorg/yaml/snakeyaml/representer/Representer;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/LoaderOptions;Lorg/yaml/snakeyaml/resolver/Resolver;)V
      16: return

  public org.yaml.snakeyaml.Yaml(org.yaml.snakeyaml.constructor.BaseConstructor, org.yaml.snakeyaml.representer.Representer, org.yaml.snakeyaml.DumperOptions, org.yaml.snakeyaml.LoaderOptions, org.yaml.snakeyaml.resolver.Resolver);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #28                 // Method org/yaml/snakeyaml/constructor/BaseConstructor.isExplicitPropertyUtils:()Z
       8: ifne          22
      11: aload_1
      12: aload_2
      13: invokevirtual #22                 // Method org/yaml/snakeyaml/representer/Representer.getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      16: invokevirtual #29                 // Method org/yaml/snakeyaml/constructor/BaseConstructor.setPropertyUtils:(Lorg/yaml/snakeyaml/introspector/PropertyUtils;)V
      19: goto          37
      22: aload_2
      23: invokevirtual #30                 // Method org/yaml/snakeyaml/representer/Representer.isExplicitPropertyUtils:()Z
      26: ifne          37
      29: aload_2
      30: aload_1
      31: invokevirtual #31                 // Method org/yaml/snakeyaml/constructor/BaseConstructor.getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      34: invokevirtual #32                 // Method org/yaml/snakeyaml/representer/Representer.setPropertyUtils:(Lorg/yaml/snakeyaml/introspector/PropertyUtils;)V
      37: aload_0
      38: aload_1
      39: putfield      #33                 // Field constructor:Lorg/yaml/snakeyaml/constructor/BaseConstructor;
      42: aload_0
      43: getfield      #33                 // Field constructor:Lorg/yaml/snakeyaml/constructor/BaseConstructor;
      46: aload         4
      48: invokevirtual #34                 // Method org/yaml/snakeyaml/LoaderOptions.isAllowDuplicateKeys:()Z
      51: invokevirtual #35                 // Method org/yaml/snakeyaml/constructor/BaseConstructor.setAllowDuplicateKeys:(Z)V
      54: aload_0
      55: getfield      #33                 // Field constructor:Lorg/yaml/snakeyaml/constructor/BaseConstructor;
      58: aload         4
      60: invokevirtual #36                 // Method org/yaml/snakeyaml/LoaderOptions.isWrappedToRootException:()Z
      63: invokevirtual #37                 // Method org/yaml/snakeyaml/constructor/BaseConstructor.setWrappedToRootException:(Z)V
      66: aload_3
      67: invokevirtual #38                 // Method org/yaml/snakeyaml/DumperOptions.getIndentWithIndicator:()Z
      70: ifne          94
      73: aload_3
      74: invokevirtual #39                 // Method org/yaml/snakeyaml/DumperOptions.getIndent:()I
      77: aload_3
      78: invokevirtual #40                 // Method org/yaml/snakeyaml/DumperOptions.getIndicatorIndent:()I
      81: if_icmpgt     94
      84: new           #41                 // class org/yaml/snakeyaml/error/YAMLException
      87: dup
      88: ldc           #42                 // String Indicator indent must be smaller then indent.
      90: invokespecial #43                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_2
      95: aload_3
      96: invokevirtual #44                 // Method org/yaml/snakeyaml/DumperOptions.getDefaultFlowStyle:()Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      99: invokevirtual #45                 // Method org/yaml/snakeyaml/representer/Representer.setDefaultFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
     102: aload_2
     103: aload_3
     104: invokevirtual #46                 // Method org/yaml/snakeyaml/DumperOptions.getDefaultScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     107: invokevirtual #47                 // Method org/yaml/snakeyaml/representer/Representer.setDefaultScalarStyle:(Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;)V
     110: aload_2
     111: invokevirtual #22                 // Method org/yaml/snakeyaml/representer/Representer.getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
     114: aload_3
     115: invokevirtual #48                 // Method org/yaml/snakeyaml/DumperOptions.isAllowReadOnlyProperties:()Z
     118: invokevirtual #49                 // Method org/yaml/snakeyaml/introspector/PropertyUtils.setAllowReadOnlyProperties:(Z)V
     121: aload_2
     122: aload_3
     123: invokevirtual #50                 // Method org/yaml/snakeyaml/DumperOptions.getTimeZone:()Ljava/util/TimeZone;
     126: invokevirtual #51                 // Method org/yaml/snakeyaml/representer/Representer.setTimeZone:(Ljava/util/TimeZone;)V
     129: aload_0
     130: aload_2
     131: putfield      #52                 // Field representer:Lorg/yaml/snakeyaml/representer/Representer;
     134: aload_0
     135: aload_3
     136: putfield      #53                 // Field dumperOptions:Lorg/yaml/snakeyaml/DumperOptions;
     139: aload_0
     140: aload         4
     142: putfield      #54                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
     145: aload_0
     146: aload         5
     148: putfield      #55                 // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
     151: aload_0
     152: new           #56                 // class java/lang/StringBuilder
     155: dup
     156: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
     159: ldc           #58                 // String Yaml:
     161: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload_0
     165: invokestatic  #60                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
     168: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     171: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     174: putfield      #63                 // Field name:Ljava/lang/String;
     177: return

  public java.lang.String dump(java.lang.Object);
    Code:
       0: new           #64                 // class java/util/ArrayList
       3: dup
       4: iconst_1
       5: invokespecial #65                 // Method java/util/ArrayList."<init>":(I)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: aload_2
      19: invokeinterface #67,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: invokevirtual #68                 // Method dumpAll:(Ljava/util/Iterator;)Ljava/lang/String;
      27: areturn

  public org.yaml.snakeyaml.nodes.Node represent(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #52                 // Field representer:Lorg/yaml/snakeyaml/representer/Representer;
       4: aload_1
       5: invokevirtual #69                 // Method org/yaml/snakeyaml/representer/Representer.represent:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
       8: areturn

  public java.lang.String dumpAll(java.util.Iterator<? extends java.lang.Object>);
    Code:
       0: new           #70                 // class java/io/StringWriter
       3: dup
       4: invokespecial #71                 // Method java/io/StringWriter."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: aconst_null
      12: invokespecial #72                 // Method dumpAll:(Ljava/util/Iterator;Ljava/io/Writer;Lorg/yaml/snakeyaml/nodes/Tag;)V
      15: aload_2
      16: invokevirtual #73                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      19: areturn

  public void dump(java.lang.Object, java.io.Writer);
    Code:
       0: new           #64                 // class java/util/ArrayList
       3: dup
       4: iconst_1
       5: invokespecial #65                 // Method java/util/ArrayList."<init>":(I)V
       8: astore_3
       9: aload_3
      10: aload_1
      11: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: aload_3
      19: invokeinterface #67,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: aload_2
      25: aconst_null
      26: invokespecial #72                 // Method dumpAll:(Ljava/util/Iterator;Ljava/io/Writer;Lorg/yaml/snakeyaml/nodes/Tag;)V
      29: return

  public void dumpAll(java.util.Iterator<? extends java.lang.Object>, java.io.Writer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #72                 // Method dumpAll:(Ljava/util/Iterator;Ljava/io/Writer;Lorg/yaml/snakeyaml/nodes/Tag;)V
       7: return

  private void dumpAll(java.util.Iterator<? extends java.lang.Object>, java.io.Writer, org.yaml.snakeyaml.nodes.Tag);
    Code:
       0: new           #74                 // class org/yaml/snakeyaml/serializer/Serializer
       3: dup
       4: new           #75                 // class org/yaml/snakeyaml/emitter/Emitter
       7: dup
       8: aload_2
       9: aload_0
      10: getfield      #53                 // Field dumperOptions:Lorg/yaml/snakeyaml/DumperOptions;
      13: invokespecial #76                 // Method org/yaml/snakeyaml/emitter/Emitter."<init>":(Ljava/io/Writer;Lorg/yaml/snakeyaml/DumperOptions;)V
      16: aload_0
      17: getfield      #55                 // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
      20: aload_0
      21: getfield      #53                 // Field dumperOptions:Lorg/yaml/snakeyaml/DumperOptions;
      24: aload_3
      25: invokespecial #77                 // Method org/yaml/snakeyaml/serializer/Serializer."<init>":(Lorg/yaml/snakeyaml/emitter/Emitable;Lorg/yaml/snakeyaml/resolver/Resolver;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/nodes/Tag;)V
      28: astore        4
      30: aload         4
      32: invokevirtual #78                 // Method org/yaml/snakeyaml/serializer/Serializer.open:()V
      35: aload_1
      36: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          69
      44: aload_0
      45: getfield      #52                 // Field representer:Lorg/yaml/snakeyaml/representer/Representer;
      48: aload_1
      49: invokeinterface #80,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: invokevirtual #69                 // Method org/yaml/snakeyaml/representer/Representer.represent:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
      57: astore        5
      59: aload         4
      61: aload         5
      63: invokevirtual #81                 // Method org/yaml/snakeyaml/serializer/Serializer.serialize:(Lorg/yaml/snakeyaml/nodes/Node;)V
      66: goto          35
      69: aload         4
      71: invokevirtual #82                 // Method org/yaml/snakeyaml/serializer/Serializer.close:()V
      74: goto          89
      77: astore        5
      79: new           #41                 // class org/yaml/snakeyaml/error/YAMLException
      82: dup
      83: aload         5
      85: invokespecial #84                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
      88: athrow
      89: return
    Exception table:
       from    to  target type
          30    74    77   Class java/io/IOException

  public java.lang.String dumpAs(java.lang.Object, org.yaml.snakeyaml.nodes.Tag, org.yaml.snakeyaml.DumperOptions$FlowStyle);
    Code:
       0: aload_0
       1: getfield      #52                 // Field representer:Lorg/yaml/snakeyaml/representer/Representer;
       4: invokevirtual #18                 // Method org/yaml/snakeyaml/representer/Representer.getDefaultFlowStyle:()Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
       7: astore        4
       9: aload_3
      10: ifnull        21
      13: aload_0
      14: getfield      #52                 // Field representer:Lorg/yaml/snakeyaml/representer/Representer;
      17: aload_3
      18: invokevirtual #45                 // Method org/yaml/snakeyaml/representer/Representer.setDefaultFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
      21: new           #64                 // class java/util/ArrayList
      24: dup
      25: iconst_1
      26: invokespecial #65                 // Method java/util/ArrayList."<init>":(I)V
      29: astore        5
      31: aload         5
      33: aload_1
      34: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: new           #70                 // class java/io/StringWriter
      43: dup
      44: invokespecial #71                 // Method java/io/StringWriter."<init>":()V
      47: astore        6
      49: aload_0
      50: aload         5
      52: invokeinterface #67,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      57: aload         6
      59: aload_2
      60: invokespecial #72                 // Method dumpAll:(Ljava/util/Iterator;Ljava/io/Writer;Lorg/yaml/snakeyaml/nodes/Tag;)V
      63: aload_0
      64: getfield      #52                 // Field representer:Lorg/yaml/snakeyaml/representer/Representer;
      67: aload         4
      69: invokevirtual #45                 // Method org/yaml/snakeyaml/representer/Representer.setDefaultFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
      72: aload         6
      74: invokevirtual #73                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      77: areturn

  public java.lang.String dumpAsMap(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #85                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
       5: getstatic     #86                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.BLOCK:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
       8: invokevirtual #87                 // Method dumpAs:(Ljava/lang/Object;Lorg/yaml/snakeyaml/nodes/Tag;Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)Ljava/lang/String;
      11: areturn

  public void serialize(org.yaml.snakeyaml.nodes.Node, java.io.Writer);
    Code:
       0: new           #74                 // class org/yaml/snakeyaml/serializer/Serializer
       3: dup
       4: new           #75                 // class org/yaml/snakeyaml/emitter/Emitter
       7: dup
       8: aload_2
       9: aload_0
      10: getfield      #53                 // Field dumperOptions:Lorg/yaml/snakeyaml/DumperOptions;
      13: invokespecial #76                 // Method org/yaml/snakeyaml/emitter/Emitter."<init>":(Ljava/io/Writer;Lorg/yaml/snakeyaml/DumperOptions;)V
      16: aload_0
      17: getfield      #55                 // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
      20: aload_0
      21: getfield      #53                 // Field dumperOptions:Lorg/yaml/snakeyaml/DumperOptions;
      24: aconst_null
      25: invokespecial #77                 // Method org/yaml/snakeyaml/serializer/Serializer."<init>":(Lorg/yaml/snakeyaml/emitter/Emitable;Lorg/yaml/snakeyaml/resolver/Resolver;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/nodes/Tag;)V
      28: astore_3
      29: aload_3
      30: invokevirtual #78                 // Method org/yaml/snakeyaml/serializer/Serializer.open:()V
      33: aload_3
      34: aload_1
      35: invokevirtual #81                 // Method org/yaml/snakeyaml/serializer/Serializer.serialize:(Lorg/yaml/snakeyaml/nodes/Node;)V
      38: aload_3
      39: invokevirtual #82                 // Method org/yaml/snakeyaml/serializer/Serializer.close:()V
      42: goto          57
      45: astore        4
      47: new           #41                 // class org/yaml/snakeyaml/error/YAMLException
      50: dup
      51: aload         4
      53: invokespecial #84                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
      56: athrow
      57: return
    Exception table:
       from    to  target type
          29    42    45   Class java/io/IOException

  public java.util.List<org.yaml.snakeyaml.events.Event> serialize(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: new           #88                 // class org/yaml/snakeyaml/Yaml$SilentEmitter
       3: dup
       4: aconst_null
       5: invokespecial #89                 // Method org/yaml/snakeyaml/Yaml$SilentEmitter."<init>":(Lorg/yaml/snakeyaml/Yaml$1;)V
       8: astore_2
       9: new           #74                 // class org/yaml/snakeyaml/serializer/Serializer
      12: dup
      13: aload_2
      14: aload_0
      15: getfield      #55                 // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
      18: aload_0
      19: getfield      #53                 // Field dumperOptions:Lorg/yaml/snakeyaml/DumperOptions;
      22: aconst_null
      23: invokespecial #77                 // Method org/yaml/snakeyaml/serializer/Serializer."<init>":(Lorg/yaml/snakeyaml/emitter/Emitable;Lorg/yaml/snakeyaml/resolver/Resolver;Lorg/yaml/snakeyaml/DumperOptions;Lorg/yaml/snakeyaml/nodes/Tag;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #78                 // Method org/yaml/snakeyaml/serializer/Serializer.open:()V
      31: aload_3
      32: aload_1
      33: invokevirtual #81                 // Method org/yaml/snakeyaml/serializer/Serializer.serialize:(Lorg/yaml/snakeyaml/nodes/Node;)V
      36: aload_3
      37: invokevirtual #82                 // Method org/yaml/snakeyaml/serializer/Serializer.close:()V
      40: goto          55
      43: astore        4
      45: new           #41                 // class org/yaml/snakeyaml/error/YAMLException
      48: dup
      49: aload         4
      51: invokespecial #84                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
      54: athrow
      55: aload_2
      56: invokevirtual #90                 // Method org/yaml/snakeyaml/Yaml$SilentEmitter.getEvents:()Ljava/util/List;
      59: areturn
    Exception table:
       from    to  target type
          27    40    43   Class java/io/IOException

  public <T> T load(java.lang.String);
    Code:
       0: aload_0
       1: new           #91                 // class org/yaml/snakeyaml/reader/StreamReader
       4: dup
       5: aload_1
       6: invokespecial #92                 // Method org/yaml/snakeyaml/reader/StreamReader."<init>":(Ljava/lang/String;)V
       9: ldc_w         #93                 // class java/lang/Object
      12: invokespecial #94                 // Method loadFromReader:(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      15: areturn

  public <T> T load(java.io.InputStream);
    Code:
       0: aload_0
       1: new           #91                 // class org/yaml/snakeyaml/reader/StreamReader
       4: dup
       5: new           #95                 // class org/yaml/snakeyaml/reader/UnicodeReader
       8: dup
       9: aload_1
      10: invokespecial #96                 // Method org/yaml/snakeyaml/reader/UnicodeReader."<init>":(Ljava/io/InputStream;)V
      13: invokespecial #97                 // Method org/yaml/snakeyaml/reader/StreamReader."<init>":(Ljava/io/Reader;)V
      16: ldc_w         #93                 // class java/lang/Object
      19: invokespecial #94                 // Method loadFromReader:(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      22: areturn

  public <T> T load(java.io.Reader);
    Code:
       0: aload_0
       1: new           #91                 // class org/yaml/snakeyaml/reader/StreamReader
       4: dup
       5: aload_1
       6: invokespecial #97                 // Method org/yaml/snakeyaml/reader/StreamReader."<init>":(Ljava/io/Reader;)V
       9: ldc_w         #93                 // class java/lang/Object
      12: invokespecial #94                 // Method loadFromReader:(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      15: areturn

  public <T> T loadAs(java.io.Reader, java.lang.Class<T>);
    Code:
       0: aload_0
       1: new           #91                 // class org/yaml/snakeyaml/reader/StreamReader
       4: dup
       5: aload_1
       6: invokespecial #97                 // Method org/yaml/snakeyaml/reader/StreamReader."<init>":(Ljava/io/Reader;)V
       9: aload_2
      10: invokespecial #94                 // Method loadFromReader:(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      13: areturn

  public <T> T loadAs(java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_0
       1: new           #91                 // class org/yaml/snakeyaml/reader/StreamReader
       4: dup
       5: aload_1
       6: invokespecial #92                 // Method org/yaml/snakeyaml/reader/StreamReader."<init>":(Ljava/lang/String;)V
       9: aload_2
      10: invokespecial #94                 // Method loadFromReader:(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      13: areturn

  public <T> T loadAs(java.io.InputStream, java.lang.Class<T>);
    Code:
       0: aload_0
       1: new           #91                 // class org/yaml/snakeyaml/reader/StreamReader
       4: dup
       5: new           #95                 // class org/yaml/snakeyaml/reader/UnicodeReader
       8: dup
       9: aload_1
      10: invokespecial #96                 // Method org/yaml/snakeyaml/reader/UnicodeReader."<init>":(Ljava/io/InputStream;)V
      13: invokespecial #97                 // Method org/yaml/snakeyaml/reader/StreamReader."<init>":(Ljava/io/Reader;)V
      16: aload_2
      17: invokespecial #94                 // Method loadFromReader:(Lorg/yaml/snakeyaml/reader/StreamReader;Ljava/lang/Class;)Ljava/lang/Object;
      20: areturn

  private java.lang.Object loadFromReader(org.yaml.snakeyaml.reader.StreamReader, java.lang.Class<?>);
    Code:
       0: new           #98                 // class org/yaml/snakeyaml/composer/Composer
       3: dup
       4: new           #99                 // class org/yaml/snakeyaml/parser/ParserImpl
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #54                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
      13: invokevirtual #100                // Method org/yaml/snakeyaml/LoaderOptions.isProcessComments:()Z
      16: invokespecial #101                // Method org/yaml/snakeyaml/parser/ParserImpl."<init>":(Lorg/yaml/snakeyaml/reader/StreamReader;Z)V
      19: aload_0
      20: getfield      #55                 // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
      23: aload_0
      24: getfield      #54                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
      27: invokespecial #102                // Method org/yaml/snakeyaml/composer/Composer."<init>":(Lorg/yaml/snakeyaml/parser/Parser;Lorg/yaml/snakeyaml/resolver/Resolver;Lorg/yaml/snakeyaml/LoaderOptions;)V
      30: astore_3
      31: aload_0
      32: getfield      #33                 // Field constructor:Lorg/yaml/snakeyaml/constructor/BaseConstructor;
      35: aload_3
      36: invokevirtual #103                // Method org/yaml/snakeyaml/constructor/BaseConstructor.setComposer:(Lorg/yaml/snakeyaml/composer/Composer;)V
      39: aload_0
      40: getfield      #33                 // Field constructor:Lorg/yaml/snakeyaml/constructor/BaseConstructor;
      43: aload_2
      44: invokevirtual #104                // Method org/yaml/snakeyaml/constructor/BaseConstructor.getSingleData:(Ljava/lang/Class;)Ljava/lang/Object;
      47: areturn

  public java.lang.Iterable<java.lang.Object> loadAll(java.io.Reader);
    Code:
       0: new           #98                 // class org/yaml/snakeyaml/composer/Composer
       3: dup
       4: new           #99                 // class org/yaml/snakeyaml/parser/ParserImpl
       7: dup
       8: new           #91                 // class org/yaml/snakeyaml/reader/StreamReader
      11: dup
      12: aload_1
      13: invokespecial #97                 // Method org/yaml/snakeyaml/reader/StreamReader."<init>":(Ljava/io/Reader;)V
      16: aload_0
      17: getfield      #54                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
      20: invokevirtual #100                // Method org/yaml/snakeyaml/LoaderOptions.isProcessComments:()Z
      23: invokespecial #101                // Method org/yaml/snakeyaml/parser/ParserImpl."<init>":(Lorg/yaml/snakeyaml/reader/StreamReader;Z)V
      26: aload_0
      27: getfield      #55                 // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
      30: aload_0
      31: getfield      #54                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
      34: invokespecial #102                // Method org/yaml/snakeyaml/composer/Composer."<init>":(Lorg/yaml/snakeyaml/parser/Parser;Lorg/yaml/snakeyaml/resolver/Resolver;Lorg/yaml/snakeyaml/LoaderOptions;)V
      37: astore_2
      38: aload_0
      39: getfield      #33                 // Field constructor:Lorg/yaml/snakeyaml/constructor/BaseConstructor;
      42: aload_2
      43: invokevirtual #103                // Method org/yaml/snakeyaml/constructor/BaseConstructor.setComposer:(Lorg/yaml/snakeyaml/composer/Composer;)V
      46: new           #105                // class org/yaml/snakeyaml/Yaml$1
      49: dup
      50: aload_0
      51: invokespecial #106                // Method org/yaml/snakeyaml/Yaml$1."<init>":(Lorg/yaml/snakeyaml/Yaml;)V
      54: astore_3
      55: new           #107                // class org/yaml/snakeyaml/Yaml$YamlIterable
      58: dup
      59: aload_3
      60: invokespecial #108                // Method org/yaml/snakeyaml/Yaml$YamlIterable."<init>":(Ljava/util/Iterator;)V
      63: areturn

  public java.lang.Iterable<java.lang.Object> loadAll(java.lang.String);
    Code:
       0: aload_0
       1: new           #109                // class java/io/StringReader
       4: dup
       5: aload_1
       6: invokespecial #110                // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
       9: invokevirtual #111                // Method loadAll:(Ljava/io/Reader;)Ljava/lang/Iterable;
      12: areturn

  public java.lang.Iterable<java.lang.Object> loadAll(java.io.InputStream);
    Code:
       0: aload_0
       1: new           #95                 // class org/yaml/snakeyaml/reader/UnicodeReader
       4: dup
       5: aload_1
       6: invokespecial #96                 // Method org/yaml/snakeyaml/reader/UnicodeReader."<init>":(Ljava/io/InputStream;)V
       9: invokevirtual #111                // Method loadAll:(Ljava/io/Reader;)Ljava/lang/Iterable;
      12: areturn

  public org.yaml.snakeyaml.nodes.Node compose(java.io.Reader);
    Code:
       0: new           #98                 // class org/yaml/snakeyaml/composer/Composer
       3: dup
       4: new           #99                 // class org/yaml/snakeyaml/parser/ParserImpl
       7: dup
       8: new           #91                 // class org/yaml/snakeyaml/reader/StreamReader
      11: dup
      12: aload_1
      13: invokespecial #97                 // Method org/yaml/snakeyaml/reader/StreamReader."<init>":(Ljava/io/Reader;)V
      16: aload_0
      17: getfield      #54                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
      20: invokevirtual #100                // Method org/yaml/snakeyaml/LoaderOptions.isProcessComments:()Z
      23: invokespecial #101                // Method org/yaml/snakeyaml/parser/ParserImpl."<init>":(Lorg/yaml/snakeyaml/reader/StreamReader;Z)V
      26: aload_0
      27: getfield      #55                 // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
      30: aload_0
      31: getfield      #54                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
      34: invokespecial #102                // Method org/yaml/snakeyaml/composer/Composer."<init>":(Lorg/yaml/snakeyaml/parser/Parser;Lorg/yaml/snakeyaml/resolver/Resolver;Lorg/yaml/snakeyaml/LoaderOptions;)V
      37: astore_2
      38: aload_2
      39: invokevirtual #112                // Method org/yaml/snakeyaml/composer/Composer.getSingleNode:()Lorg/yaml/snakeyaml/nodes/Node;
      42: areturn

  public java.lang.Iterable<org.yaml.snakeyaml.nodes.Node> composeAll(java.io.Reader);
    Code:
       0: new           #98                 // class org/yaml/snakeyaml/composer/Composer
       3: dup
       4: new           #99                 // class org/yaml/snakeyaml/parser/ParserImpl
       7: dup
       8: new           #91                 // class org/yaml/snakeyaml/reader/StreamReader
      11: dup
      12: aload_1
      13: invokespecial #97                 // Method org/yaml/snakeyaml/reader/StreamReader."<init>":(Ljava/io/Reader;)V
      16: aload_0
      17: getfield      #54                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
      20: invokevirtual #100                // Method org/yaml/snakeyaml/LoaderOptions.isProcessComments:()Z
      23: invokespecial #101                // Method org/yaml/snakeyaml/parser/ParserImpl."<init>":(Lorg/yaml/snakeyaml/reader/StreamReader;Z)V
      26: aload_0
      27: getfield      #55                 // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
      30: aload_0
      31: getfield      #54                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
      34: invokespecial #102                // Method org/yaml/snakeyaml/composer/Composer."<init>":(Lorg/yaml/snakeyaml/parser/Parser;Lorg/yaml/snakeyaml/resolver/Resolver;Lorg/yaml/snakeyaml/LoaderOptions;)V
      37: astore_2
      38: new           #113                // class org/yaml/snakeyaml/Yaml$2
      41: dup
      42: aload_0
      43: aload_2
      44: invokespecial #114                // Method org/yaml/snakeyaml/Yaml$2."<init>":(Lorg/yaml/snakeyaml/Yaml;Lorg/yaml/snakeyaml/composer/Composer;)V
      47: astore_3
      48: new           #115                // class org/yaml/snakeyaml/Yaml$NodeIterable
      51: dup
      52: aload_3
      53: invokespecial #116                // Method org/yaml/snakeyaml/Yaml$NodeIterable."<init>":(Ljava/util/Iterator;)V
      56: areturn

  public void addImplicitResolver(org.yaml.snakeyaml.nodes.Tag, java.util.regex.Pattern, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #55                 // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #117                // Method org/yaml/snakeyaml/resolver/Resolver.addImplicitResolver:(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/util/regex/Pattern;Ljava/lang/String;)V
      10: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #63                 // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #63                 // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field name:Ljava/lang/String;
       5: return

  public java.lang.Iterable<org.yaml.snakeyaml.events.Event> parse(java.io.Reader);
    Code:
       0: new           #99                 // class org/yaml/snakeyaml/parser/ParserImpl
       3: dup
       4: new           #91                 // class org/yaml/snakeyaml/reader/StreamReader
       7: dup
       8: aload_1
       9: invokespecial #97                 // Method org/yaml/snakeyaml/reader/StreamReader."<init>":(Ljava/io/Reader;)V
      12: aload_0
      13: getfield      #54                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
      16: invokevirtual #100                // Method org/yaml/snakeyaml/LoaderOptions.isProcessComments:()Z
      19: invokespecial #101                // Method org/yaml/snakeyaml/parser/ParserImpl."<init>":(Lorg/yaml/snakeyaml/reader/StreamReader;Z)V
      22: astore_2
      23: new           #118                // class org/yaml/snakeyaml/Yaml$3
      26: dup
      27: aload_0
      28: aload_2
      29: invokespecial #119                // Method org/yaml/snakeyaml/Yaml$3."<init>":(Lorg/yaml/snakeyaml/Yaml;Lorg/yaml/snakeyaml/parser/Parser;)V
      32: astore_3
      33: new           #120                // class org/yaml/snakeyaml/Yaml$EventIterable
      36: dup
      37: aload_3
      38: invokespecial #121                // Method org/yaml/snakeyaml/Yaml$EventIterable."<init>":(Ljava/util/Iterator;)V
      41: areturn

  public void setBeanAccess(org.yaml.snakeyaml.introspector.BeanAccess);
    Code:
       0: aload_0
       1: getfield      #33                 // Field constructor:Lorg/yaml/snakeyaml/constructor/BaseConstructor;
       4: invokevirtual #31                 // Method org/yaml/snakeyaml/constructor/BaseConstructor.getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       7: aload_1
       8: invokevirtual #122                // Method org/yaml/snakeyaml/introspector/PropertyUtils.setBeanAccess:(Lorg/yaml/snakeyaml/introspector/BeanAccess;)V
      11: aload_0
      12: getfield      #52                 // Field representer:Lorg/yaml/snakeyaml/representer/Representer;
      15: invokevirtual #22                 // Method org/yaml/snakeyaml/representer/Representer.getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      18: aload_1
      19: invokevirtual #122                // Method org/yaml/snakeyaml/introspector/PropertyUtils.setBeanAccess:(Lorg/yaml/snakeyaml/introspector/BeanAccess;)V
      22: return

  public void addTypeDescription(org.yaml.snakeyaml.TypeDescription);
    Code:
       0: aload_0
       1: getfield      #33                 // Field constructor:Lorg/yaml/snakeyaml/constructor/BaseConstructor;
       4: aload_1
       5: invokevirtual #123                // Method org/yaml/snakeyaml/constructor/BaseConstructor.addTypeDescription:(Lorg/yaml/snakeyaml/TypeDescription;)Lorg/yaml/snakeyaml/TypeDescription;
       8: pop
       9: aload_0
      10: getfield      #52                 // Field representer:Lorg/yaml/snakeyaml/representer/Representer;
      13: aload_1
      14: invokevirtual #124                // Method org/yaml/snakeyaml/representer/Representer.addTypeDescription:(Lorg/yaml/snakeyaml/TypeDescription;)Lorg/yaml/snakeyaml/TypeDescription;
      17: pop
      18: return
}
