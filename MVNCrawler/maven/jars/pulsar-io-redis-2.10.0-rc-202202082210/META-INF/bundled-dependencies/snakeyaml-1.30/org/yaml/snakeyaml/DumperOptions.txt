Compiled from "DumperOptions.java"
public class org.yaml.snakeyaml.DumperOptions {
  private org.yaml.snakeyaml.DumperOptions$ScalarStyle defaultStyle;

  private org.yaml.snakeyaml.DumperOptions$FlowStyle defaultFlowStyle;

  private boolean canonical;

  private boolean allowUnicode;

  private boolean allowReadOnlyProperties;

  private int indent;

  private int indicatorIndent;

  private boolean indentWithIndicator;

  private int bestWidth;

  private boolean splitLines;

  private org.yaml.snakeyaml.DumperOptions$LineBreak lineBreak;

  private boolean explicitStart;

  private boolean explicitEnd;

  private java.util.TimeZone timeZone;

  private int maxSimpleKeyLength;

  private boolean processComments;

  private org.yaml.snakeyaml.DumperOptions$NonPrintableStyle nonPrintableStyle;

  private org.yaml.snakeyaml.DumperOptions$Version version;

  private java.util.Map<java.lang.String, java.lang.String> tags;

  private java.lang.Boolean prettyFlow;

  private org.yaml.snakeyaml.serializer.AnchorGenerator anchorGenerator;

  public org.yaml.snakeyaml.DumperOptions();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.PLAIN:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
       8: putfield      #3                  // Field defaultStyle:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      11: aload_0
      12: getstatic     #4                  // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      15: putfield      #5                  // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      18: aload_0
      19: iconst_0
      20: putfield      #6                  // Field canonical:Z
      23: aload_0
      24: iconst_1
      25: putfield      #7                  // Field allowUnicode:Z
      28: aload_0
      29: iconst_0
      30: putfield      #8                  // Field allowReadOnlyProperties:Z
      33: aload_0
      34: iconst_2
      35: putfield      #9                  // Field indent:I
      38: aload_0
      39: iconst_0
      40: putfield      #10                 // Field indicatorIndent:I
      43: aload_0
      44: iconst_0
      45: putfield      #11                 // Field indentWithIndicator:Z
      48: aload_0
      49: bipush        80
      51: putfield      #12                 // Field bestWidth:I
      54: aload_0
      55: iconst_1
      56: putfield      #13                 // Field splitLines:Z
      59: aload_0
      60: getstatic     #14                 // Field org/yaml/snakeyaml/DumperOptions$LineBreak.UNIX:Lorg/yaml/snakeyaml/DumperOptions$LineBreak;
      63: putfield      #15                 // Field lineBreak:Lorg/yaml/snakeyaml/DumperOptions$LineBreak;
      66: aload_0
      67: iconst_0
      68: putfield      #16                 // Field explicitStart:Z
      71: aload_0
      72: iconst_0
      73: putfield      #17                 // Field explicitEnd:Z
      76: aload_0
      77: aconst_null
      78: putfield      #18                 // Field timeZone:Ljava/util/TimeZone;
      81: aload_0
      82: sipush        128
      85: putfield      #19                 // Field maxSimpleKeyLength:I
      88: aload_0
      89: iconst_0
      90: putfield      #20                 // Field processComments:Z
      93: aload_0
      94: getstatic     #21                 // Field org/yaml/snakeyaml/DumperOptions$NonPrintableStyle.BINARY:Lorg/yaml/snakeyaml/DumperOptions$NonPrintableStyle;
      97: putfield      #22                 // Field nonPrintableStyle:Lorg/yaml/snakeyaml/DumperOptions$NonPrintableStyle;
     100: aload_0
     101: aconst_null
     102: putfield      #23                 // Field version:Lorg/yaml/snakeyaml/DumperOptions$Version;
     105: aload_0
     106: aconst_null
     107: putfield      #24                 // Field tags:Ljava/util/Map;
     110: aload_0
     111: iconst_0
     112: invokestatic  #25                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     115: putfield      #26                 // Field prettyFlow:Ljava/lang/Boolean;
     118: aload_0
     119: new           #27                 // class org/yaml/snakeyaml/serializer/NumberAnchorGenerator
     122: dup
     123: iconst_0
     124: invokespecial #28                 // Method org/yaml/snakeyaml/serializer/NumberAnchorGenerator."<init>":(I)V
     127: putfield      #29                 // Field anchorGenerator:Lorg/yaml/snakeyaml/serializer/AnchorGenerator;
     130: return

  public boolean isAllowUnicode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field allowUnicode:Z
       4: ireturn

  public void setAllowUnicode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field allowUnicode:Z
       5: return

  public org.yaml.snakeyaml.DumperOptions$ScalarStyle getDefaultScalarStyle();
    Code:
       0: aload_0
       1: getfield      #3                  // Field defaultStyle:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
       4: areturn

  public void setDefaultScalarStyle(org.yaml.snakeyaml.DumperOptions$ScalarStyle);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #30                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #31                 // String Use ScalarStyle enum.
      10: invokespecial #32                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #3                  // Field defaultStyle:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      19: return

  public void setIndent(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     15
       5: new           #33                 // class org/yaml/snakeyaml/error/YAMLException
       8: dup
       9: ldc           #34                 // String Indent must be at least 1
      11: invokespecial #35                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: iload_1
      16: bipush        10
      18: if_icmple     31
      21: new           #33                 // class org/yaml/snakeyaml/error/YAMLException
      24: dup
      25: ldc           #36                 // String Indent must be at most 10
      27: invokespecial #35                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: iload_1
      33: putfield      #9                  // Field indent:I
      36: return

  public int getIndent();
    Code:
       0: aload_0
       1: getfield      #9                  // Field indent:I
       4: ireturn

  public void setIndicatorIndent(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #33                 // class org/yaml/snakeyaml/error/YAMLException
       7: dup
       8: ldc           #37                 // String Indicator indent must be non-negative.
      10: invokespecial #35                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_1
      15: bipush        9
      17: if_icmple     30
      20: new           #33                 // class org/yaml/snakeyaml/error/YAMLException
      23: dup
      24: ldc           #38                 // String Indicator indent must be at most Emitter.MAX_INDENT-1: 9
      26: invokespecial #35                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: iload_1
      32: putfield      #10                 // Field indicatorIndent:I
      35: return

  public int getIndicatorIndent();
    Code:
       0: aload_0
       1: getfield      #10                 // Field indicatorIndent:I
       4: ireturn

  public boolean getIndentWithIndicator();
    Code:
       0: aload_0
       1: getfield      #11                 // Field indentWithIndicator:Z
       4: ireturn

  public void setIndentWithIndicator(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field indentWithIndicator:Z
       5: return

  public void setVersion(org.yaml.snakeyaml.DumperOptions$Version);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field version:Lorg/yaml/snakeyaml/DumperOptions$Version;
       5: return

  public org.yaml.snakeyaml.DumperOptions$Version getVersion();
    Code:
       0: aload_0
       1: getfield      #23                 // Field version:Lorg/yaml/snakeyaml/DumperOptions$Version;
       4: areturn

  public void setCanonical(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field canonical:Z
       5: return

  public boolean isCanonical();
    Code:
       0: aload_0
       1: getfield      #6                  // Field canonical:Z
       4: ireturn

  public void setPrettyFlow(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #25                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #26                 // Field prettyFlow:Ljava/lang/Boolean;
       8: return

  public boolean isPrettyFlow();
    Code:
       0: aload_0
       1: getfield      #26                 // Field prettyFlow:Ljava/lang/Boolean;
       4: invokevirtual #39                 // Method java/lang/Boolean.booleanValue:()Z
       7: ireturn

  public void setWidth(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field bestWidth:I
       5: return

  public int getWidth();
    Code:
       0: aload_0
       1: getfield      #12                 // Field bestWidth:I
       4: ireturn

  public void setSplitLines(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field splitLines:Z
       5: return

  public boolean getSplitLines();
    Code:
       0: aload_0
       1: getfield      #13                 // Field splitLines:Z
       4: ireturn

  public org.yaml.snakeyaml.DumperOptions$LineBreak getLineBreak();
    Code:
       0: aload_0
       1: getfield      #15                 // Field lineBreak:Lorg/yaml/snakeyaml/DumperOptions$LineBreak;
       4: areturn

  public void setDefaultFlowStyle(org.yaml.snakeyaml.DumperOptions$FlowStyle);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #30                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #40                 // String Use FlowStyle enum.
      10: invokespecial #32                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #5                  // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      19: return

  public org.yaml.snakeyaml.DumperOptions$FlowStyle getDefaultFlowStyle();
    Code:
       0: aload_0
       1: getfield      #5                  // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
       4: areturn

  public void setLineBreak(org.yaml.snakeyaml.DumperOptions$LineBreak);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #30                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #41                 // String Specify line break.
      10: invokespecial #32                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #15                 // Field lineBreak:Lorg/yaml/snakeyaml/DumperOptions$LineBreak;
      19: return

  public boolean isExplicitStart();
    Code:
       0: aload_0
       1: getfield      #16                 // Field explicitStart:Z
       4: ireturn

  public void setExplicitStart(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field explicitStart:Z
       5: return

  public boolean isExplicitEnd();
    Code:
       0: aload_0
       1: getfield      #17                 // Field explicitEnd:Z
       4: ireturn

  public void setExplicitEnd(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field explicitEnd:Z
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getTags();
    Code:
       0: aload_0
       1: getfield      #24                 // Field tags:Ljava/util/Map;
       4: areturn

  public void setTags(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field tags:Ljava/util/Map;
       5: return

  public boolean isAllowReadOnlyProperties();
    Code:
       0: aload_0
       1: getfield      #8                  // Field allowReadOnlyProperties:Z
       4: ireturn

  public void setAllowReadOnlyProperties(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field allowReadOnlyProperties:Z
       5: return

  public java.util.TimeZone getTimeZone();
    Code:
       0: aload_0
       1: getfield      #18                 // Field timeZone:Ljava/util/TimeZone;
       4: areturn

  public void setTimeZone(java.util.TimeZone);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field timeZone:Ljava/util/TimeZone;
       5: return

  public org.yaml.snakeyaml.serializer.AnchorGenerator getAnchorGenerator();
    Code:
       0: aload_0
       1: getfield      #29                 // Field anchorGenerator:Lorg/yaml/snakeyaml/serializer/AnchorGenerator;
       4: areturn

  public void setAnchorGenerator(org.yaml.snakeyaml.serializer.AnchorGenerator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field anchorGenerator:Lorg/yaml/snakeyaml/serializer/AnchorGenerator;
       5: return

  public int getMaxSimpleKeyLength();
    Code:
       0: aload_0
       1: getfield      #19                 // Field maxSimpleKeyLength:I
       4: ireturn

  public void setMaxSimpleKeyLength(int);
    Code:
       0: iload_1
       1: sipush        1024
       4: if_icmple     17
       7: new           #33                 // class org/yaml/snakeyaml/error/YAMLException
      10: dup
      11: ldc           #42                 // String The simple key must not span more than 1024 stream characters. See https://yaml.org/spec/1.1/#id934537
      13: invokespecial #35                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iload_1
      19: putfield      #19                 // Field maxSimpleKeyLength:I
      22: return

  public void setProcessComments(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field processComments:Z
       5: return

  public boolean isProcessComments();
    Code:
       0: aload_0
       1: getfield      #20                 // Field processComments:Z
       4: ireturn

  public org.yaml.snakeyaml.DumperOptions$NonPrintableStyle getNonPrintableStyle();
    Code:
       0: aload_0
       1: getfield      #22                 // Field nonPrintableStyle:Lorg/yaml/snakeyaml/DumperOptions$NonPrintableStyle;
       4: areturn

  public void setNonPrintableStyle(org.yaml.snakeyaml.DumperOptions$NonPrintableStyle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field nonPrintableStyle:Lorg/yaml/snakeyaml/DumperOptions$NonPrintableStyle;
       5: return
}
