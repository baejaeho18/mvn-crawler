class org.bouncycastle.jcajce.provider.drbg.DRBG$HybridSecureRandom extends java.security.SecureRandom {
  private final java.util.concurrent.atomic.AtomicBoolean seedAvailable;

  private final java.util.concurrent.atomic.AtomicInteger samples;

  private final java.security.SecureRandom baseRandom;

  private final org.bouncycastle.crypto.prng.SP800SecureRandom drbg;

  org.bouncycastle.jcajce.provider.drbg.DRBG$HybridSecureRandom();
    Code:
       0: aload_0
       1: aconst_null
       2: new           #52                 // class org/bouncycastle/jcajce/provider/drbg/DRBG$HybridRandomProvider
       5: dup
       6: invokespecial #115                // Method org/bouncycastle/jcajce/provider/drbg/DRBG$HybridRandomProvider."<init>":()V
       9: invokespecial #99                 // Method java/security/SecureRandom."<init>":(Ljava/security/SecureRandomSpi;Ljava/security/Provider;)V
      12: aload_0
      13: new           #45                 // class java/util/concurrent/atomic/AtomicBoolean
      16: dup
      17: iconst_0
      18: invokespecial #100                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      21: putfield      #95                 // Field seedAvailable:Ljava/util/concurrent/atomic/AtomicBoolean;
      24: aload_0
      25: new           #46                 // class java/util/concurrent/atomic/AtomicInteger
      28: dup
      29: iconst_0
      30: invokespecial #103                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      33: putfield      #96                 // Field samples:Ljava/util/concurrent/atomic/AtomicInteger;
      36: aload_0
      37: invokestatic  #114                // Method org/bouncycastle/jcajce/provider/drbg/DRBG.access$400:()Ljava/security/SecureRandom;
      40: putfield      #94                 // Field baseRandom:Ljava/security/SecureRandom;
      43: aload_0
      44: new           #50                 // class org/bouncycastle/crypto/prng/SP800SecureRandomBuilder
      47: dup
      48: new           #54                 // class org/bouncycastle/jcajce/provider/drbg/DRBG$HybridSecureRandom$1
      51: dup
      52: aload_0
      53: invokespecial #116                // Method org/bouncycastle/jcajce/provider/drbg/DRBG$HybridSecureRandom$1."<init>":(Lorg/bouncycastle/jcajce/provider/drbg/DRBG$HybridSecureRandom;)V
      56: invokespecial #111                // Method org/bouncycastle/crypto/prng/SP800SecureRandomBuilder."<init>":(Lorg/bouncycastle/crypto/prng/EntropySourceProvider;)V
      59: ldc           #1                  // String Bouncy Castle Hybrid Entropy Source
      61: invokestatic  #117                // Method org/bouncycastle/util/Strings.toByteArray:(Ljava/lang/String;)[B
      64: invokevirtual #112                // Method org/bouncycastle/crypto/prng/SP800SecureRandomBuilder.setPersonalizationString:([B)Lorg/bouncycastle/crypto/prng/SP800SecureRandomBuilder;
      67: new           #48                 // class org/bouncycastle/crypto/macs/HMac
      70: dup
      71: new           #47                 // class org/bouncycastle/crypto/digests/SHA512Digest
      74: dup
      75: invokespecial #105                // Method org/bouncycastle/crypto/digests/SHA512Digest."<init>":()V
      78: invokespecial #106                // Method org/bouncycastle/crypto/macs/HMac."<init>":(Lorg/bouncycastle/crypto/Digest;)V
      81: aload_0
      82: getfield      #94                 // Field baseRandom:Ljava/security/SecureRandom;
      85: bipush        32
      87: invokevirtual #98                 // Method java/security/SecureRandom.generateSeed:(I)[B
      90: iconst_0
      91: invokevirtual #113                // Method org/bouncycastle/crypto/prng/SP800SecureRandomBuilder.buildHMAC:(Lorg/bouncycastle/crypto/Mac;[BZ)Lorg/bouncycastle/crypto/prng/SP800SecureRandom;
      94: putfield      #97                 // Field drbg:Lorg/bouncycastle/crypto/prng/SP800SecureRandom;
      97: return

  public void setSeed(byte[]);
    Code:
       0: aload_0
       1: getfield      #97                 // Field drbg:Lorg/bouncycastle/crypto/prng/SP800SecureRandom;
       4: ifnull        15
       7: aload_0
       8: getfield      #97                 // Field drbg:Lorg/bouncycastle/crypto/prng/SP800SecureRandom;
      11: aload_1
      12: invokevirtual #110                // Method org/bouncycastle/crypto/prng/SP800SecureRandom.setSeed:([B)V
      15: return

  public void setSeed(long);
    Code:
       0: aload_0
       1: getfield      #97                 // Field drbg:Lorg/bouncycastle/crypto/prng/SP800SecureRandom;
       4: ifnull        15
       7: aload_0
       8: getfield      #97                 // Field drbg:Lorg/bouncycastle/crypto/prng/SP800SecureRandom;
      11: lload_1
      12: invokevirtual #107                // Method org/bouncycastle/crypto/prng/SP800SecureRandom.setSeed:(J)V
      15: return

  public byte[] generateSeed(int);
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_0
       5: getfield      #96                 // Field samples:Ljava/util/concurrent/atomic/AtomicInteger;
       8: invokevirtual #102                // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      11: bipush        20
      13: if_icmple     46
      16: aload_0
      17: getfield      #95                 // Field seedAvailable:Ljava/util/concurrent/atomic/AtomicBoolean;
      20: iconst_0
      21: invokevirtual #101                // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
      24: ifeq          46
      27: aload_0
      28: getfield      #96                 // Field samples:Ljava/util/concurrent/atomic/AtomicInteger;
      31: iconst_0
      32: invokevirtual #104                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      35: aload_0
      36: getfield      #97                 // Field drbg:Lorg/bouncycastle/crypto/prng/SP800SecureRandom;
      39: aconst_null
      40: checkcast     #43                 // class "[B"
      43: invokevirtual #109                // Method org/bouncycastle/crypto/prng/SP800SecureRandom.reseed:([B)V
      46: aload_0
      47: getfield      #97                 // Field drbg:Lorg/bouncycastle/crypto/prng/SP800SecureRandom;
      50: aload_2
      51: invokevirtual #108                // Method org/bouncycastle/crypto/prng/SP800SecureRandom.nextBytes:([B)V
      54: aload_2
      55: areturn

  static java.security.SecureRandom access$500(org.bouncycastle.jcajce.provider.drbg.DRBG$HybridSecureRandom);
    Code:
       0: aload_0
       1: getfield      #94                 // Field baseRandom:Ljava/security/SecureRandom;
       4: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$800(org.bouncycastle.jcajce.provider.drbg.DRBG$HybridSecureRandom);
    Code:
       0: aload_0
       1: getfield      #95                 // Field seedAvailable:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn
}
