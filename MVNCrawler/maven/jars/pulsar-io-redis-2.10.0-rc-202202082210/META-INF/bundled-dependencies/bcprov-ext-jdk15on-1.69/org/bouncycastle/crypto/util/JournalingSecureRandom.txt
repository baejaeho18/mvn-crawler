public class org.bouncycastle.crypto.util.JournalingSecureRandom extends java.security.SecureRandom {
  private static byte[] EMPTY_TRANSCRIPT;

  private final java.security.SecureRandom base;

  private org.bouncycastle.crypto.util.JournalingSecureRandom$TranscriptStream tOut;

  private byte[] transcript;

  private int index;

  public org.bouncycastle.crypto.util.JournalingSecureRandom();
    Code:
       0: aload_0
       1: invokestatic  #95                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
       4: invokespecial #96                 // Method "<init>":(Ljava/security/SecureRandom;)V
       7: return

  public org.bouncycastle.crypto.util.JournalingSecureRandom(java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #93                 // Method java/security/SecureRandom."<init>":()V
       4: aload_0
       5: new           #49                 // class org/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #101                // Method org/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream."<init>":(Lorg/bouncycastle/crypto/util/JournalingSecureRandom;Lorg/bouncycastle/crypto/util/JournalingSecureRandom$1;)V
      14: putfield      #86                 // Field tOut:Lorg/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream;
      17: aload_0
      18: iconst_0
      19: putfield      #82                 // Field index:I
      22: aload_0
      23: aload_1
      24: putfield      #85                 // Field base:Ljava/security/SecureRandom;
      27: aload_0
      28: getstatic     #83                 // Field EMPTY_TRANSCRIPT:[B
      31: putfield      #84                 // Field transcript:[B
      34: return

  public org.bouncycastle.crypto.util.JournalingSecureRandom(byte[], java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #93                 // Method java/security/SecureRandom."<init>":()V
       4: aload_0
       5: new           #49                 // class org/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #101                // Method org/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream."<init>":(Lorg/bouncycastle/crypto/util/JournalingSecureRandom;Lorg/bouncycastle/crypto/util/JournalingSecureRandom$1;)V
      14: putfield      #86                 // Field tOut:Lorg/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream;
      17: aload_0
      18: iconst_0
      19: putfield      #82                 // Field index:I
      22: aload_0
      23: aload_2
      24: putfield      #85                 // Field base:Ljava/security/SecureRandom;
      27: aload_0
      28: aload_1
      29: invokestatic  #102                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      32: putfield      #84                 // Field transcript:[B
      35: return

  public final void nextBytes(byte[]);
    Code:
       0: aload_0
       1: getfield      #82                 // Field index:I
       4: aload_0
       5: getfield      #84                 // Field transcript:[B
       8: arraylength
       9: if_icmplt     23
      12: aload_0
      13: getfield      #85                 // Field base:Ljava/security/SecureRandom;
      16: aload_1
      17: invokevirtual #94                 // Method java/security/SecureRandom.nextBytes:([B)V
      20: goto          98
      23: iconst_0
      24: istore_2
      25: iload_2
      26: aload_1
      27: arraylength
      28: if_icmpeq     68
      31: aload_0
      32: getfield      #82                 // Field index:I
      35: aload_0
      36: getfield      #84                 // Field transcript:[B
      39: arraylength
      40: if_icmpge     68
      43: aload_1
      44: iload_2
      45: aload_0
      46: getfield      #84                 // Field transcript:[B
      49: aload_0
      50: dup
      51: getfield      #82                 // Field index:I
      54: dup_x1
      55: iconst_1
      56: iadd
      57: putfield      #82                 // Field index:I
      60: baload
      61: bastore
      62: iinc          2, 1
      65: goto          25
      68: iload_2
      69: aload_1
      70: arraylength
      71: if_icmpeq     98
      74: aload_1
      75: arraylength
      76: iload_2
      77: isub
      78: newarray       byte
      80: astore_3
      81: aload_0
      82: getfield      #85                 // Field base:Ljava/security/SecureRandom;
      85: aload_3
      86: invokevirtual #94                 // Method java/security/SecureRandom.nextBytes:([B)V
      89: aload_3
      90: iconst_0
      91: aload_1
      92: iload_2
      93: aload_3
      94: arraylength
      95: invokestatic  #92                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      98: aload_0
      99: getfield      #86                 // Field tOut:Lorg/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream;
     102: aload_1
     103: invokevirtual #100                // Method org/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream.write:([B)V
     106: goto          140
     109: astore_2
     110: new           #42                 // class java/lang/IllegalStateException
     113: dup
     114: new           #43                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #89                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #1                  // String unable to record transcript:
     123: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_2
     127: invokevirtual #87                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     130: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokespecial #88                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     139: athrow
     140: return
    Exception table:
       from    to  target type
          98   106   109   Class java/io/IOException

  public void clear();
    Code:
       0: aload_0
       1: getfield      #84                 // Field transcript:[B
       4: iconst_0
       5: invokestatic  #103                // Method org/bouncycastle/util/Arrays.fill:([BB)V
       8: aload_0
       9: getfield      #86                 // Field tOut:Lorg/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream;
      12: invokevirtual #97                 // Method org/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream.clear:()V
      15: return

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #82                 // Field index:I
       5: aload_0
       6: getfield      #82                 // Field index:I
       9: aload_0
      10: getfield      #84                 // Field transcript:[B
      13: arraylength
      14: if_icmpne     28
      17: aload_0
      18: aload_0
      19: getfield      #86                 // Field tOut:Lorg/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream;
      22: invokevirtual #99                 // Method org/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream.toByteArray:()[B
      25: putfield      #84                 // Field transcript:[B
      28: aload_0
      29: getfield      #86                 // Field tOut:Lorg/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream;
      32: invokevirtual #98                 // Method org/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream.reset:()V
      35: return

  public byte[] getTranscript();
    Code:
       0: aload_0
       1: getfield      #86                 // Field tOut:Lorg/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream;
       4: invokevirtual #99                 // Method org/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream.toByteArray:()[B
       7: areturn

  public byte[] getFullTranscript();
    Code:
       0: aload_0
       1: getfield      #82                 // Field index:I
       4: aload_0
       5: getfield      #84                 // Field transcript:[B
       8: arraylength
       9: if_icmpne     20
      12: aload_0
      13: getfield      #86                 // Field tOut:Lorg/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream;
      16: invokevirtual #99                 // Method org/bouncycastle/crypto/util/JournalingSecureRandom$TranscriptStream.toByteArray:()[B
      19: areturn
      20: aload_0
      21: getfield      #84                 // Field transcript:[B
      24: invokestatic  #102                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      27: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #83                 // Field EMPTY_TRANSCRIPT:[B
       6: return
}
