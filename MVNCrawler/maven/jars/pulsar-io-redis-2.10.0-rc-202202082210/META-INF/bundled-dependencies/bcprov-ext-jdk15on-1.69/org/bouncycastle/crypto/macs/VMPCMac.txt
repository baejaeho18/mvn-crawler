public class org.bouncycastle.crypto.macs.VMPCMac implements org.bouncycastle.crypto.Mac {
  private byte g;

  private byte n;

  private byte[] P;

  private byte s;

  private byte[] T;

  private byte[] workingIV;

  private byte[] workingKey;

  private byte x1;

  private byte x2;

  private byte x3;

  private byte x4;

  public org.bouncycastle.crypto.macs.VMPCMac();
    Code:
       0: aload_0
       1: invokespecial #98                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #87                 // Field n:B
       9: aload_0
      10: aconst_null
      11: putfield      #93                 // Field P:[B
      14: aload_0
      15: iconst_0
      16: putfield      #88                 // Field s:B
      19: return

  public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: iconst_1
       1: istore_3
       2: iload_3
       3: bipush        25
       5: if_icmpge     358
       8: aload_0
       9: aload_0
      10: getfield      #93                 // Field P:[B
      13: aload_0
      14: getfield      #88                 // Field s:B
      17: aload_0
      18: getfield      #93                 // Field P:[B
      21: aload_0
      22: getfield      #87                 // Field n:B
      25: sipush        255
      28: iand
      29: baload
      30: iadd
      31: sipush        255
      34: iand
      35: baload
      36: putfield      #88                 // Field s:B
      39: aload_0
      40: aload_0
      41: getfield      #93                 // Field P:[B
      44: aload_0
      45: getfield      #92                 // Field x4:B
      48: aload_0
      49: getfield      #91                 // Field x3:B
      52: iadd
      53: iload_3
      54: iadd
      55: sipush        255
      58: iand
      59: baload
      60: putfield      #92                 // Field x4:B
      63: aload_0
      64: aload_0
      65: getfield      #93                 // Field P:[B
      68: aload_0
      69: getfield      #91                 // Field x3:B
      72: aload_0
      73: getfield      #90                 // Field x2:B
      76: iadd
      77: iload_3
      78: iadd
      79: sipush        255
      82: iand
      83: baload
      84: putfield      #91                 // Field x3:B
      87: aload_0
      88: aload_0
      89: getfield      #93                 // Field P:[B
      92: aload_0
      93: getfield      #90                 // Field x2:B
      96: aload_0
      97: getfield      #89                 // Field x1:B
     100: iadd
     101: iload_3
     102: iadd
     103: sipush        255
     106: iand
     107: baload
     108: putfield      #90                 // Field x2:B
     111: aload_0
     112: aload_0
     113: getfield      #93                 // Field P:[B
     116: aload_0
     117: getfield      #89                 // Field x1:B
     120: aload_0
     121: getfield      #88                 // Field s:B
     124: iadd
     125: iload_3
     126: iadd
     127: sipush        255
     130: iand
     131: baload
     132: putfield      #89                 // Field x1:B
     135: aload_0
     136: getfield      #94                 // Field T:[B
     139: aload_0
     140: getfield      #86                 // Field g:B
     143: bipush        31
     145: iand
     146: aload_0
     147: getfield      #94                 // Field T:[B
     150: aload_0
     151: getfield      #86                 // Field g:B
     154: bipush        31
     156: iand
     157: baload
     158: aload_0
     159: getfield      #89                 // Field x1:B
     162: ixor
     163: i2b
     164: bastore
     165: aload_0
     166: getfield      #94                 // Field T:[B
     169: aload_0
     170: getfield      #86                 // Field g:B
     173: iconst_1
     174: iadd
     175: bipush        31
     177: iand
     178: aload_0
     179: getfield      #94                 // Field T:[B
     182: aload_0
     183: getfield      #86                 // Field g:B
     186: iconst_1
     187: iadd
     188: bipush        31
     190: iand
     191: baload
     192: aload_0
     193: getfield      #90                 // Field x2:B
     196: ixor
     197: i2b
     198: bastore
     199: aload_0
     200: getfield      #94                 // Field T:[B
     203: aload_0
     204: getfield      #86                 // Field g:B
     207: iconst_2
     208: iadd
     209: bipush        31
     211: iand
     212: aload_0
     213: getfield      #94                 // Field T:[B
     216: aload_0
     217: getfield      #86                 // Field g:B
     220: iconst_2
     221: iadd
     222: bipush        31
     224: iand
     225: baload
     226: aload_0
     227: getfield      #91                 // Field x3:B
     230: ixor
     231: i2b
     232: bastore
     233: aload_0
     234: getfield      #94                 // Field T:[B
     237: aload_0
     238: getfield      #86                 // Field g:B
     241: iconst_3
     242: iadd
     243: bipush        31
     245: iand
     246: aload_0
     247: getfield      #94                 // Field T:[B
     250: aload_0
     251: getfield      #86                 // Field g:B
     254: iconst_3
     255: iadd
     256: bipush        31
     258: iand
     259: baload
     260: aload_0
     261: getfield      #92                 // Field x4:B
     264: ixor
     265: i2b
     266: bastore
     267: aload_0
     268: aload_0
     269: getfield      #86                 // Field g:B
     272: iconst_4
     273: iadd
     274: bipush        31
     276: iand
     277: i2b
     278: putfield      #86                 // Field g:B
     281: aload_0
     282: getfield      #93                 // Field P:[B
     285: aload_0
     286: getfield      #87                 // Field n:B
     289: sipush        255
     292: iand
     293: baload
     294: istore        4
     296: aload_0
     297: getfield      #93                 // Field P:[B
     300: aload_0
     301: getfield      #87                 // Field n:B
     304: sipush        255
     307: iand
     308: aload_0
     309: getfield      #93                 // Field P:[B
     312: aload_0
     313: getfield      #88                 // Field s:B
     316: sipush        255
     319: iand
     320: baload
     321: bastore
     322: aload_0
     323: getfield      #93                 // Field P:[B
     326: aload_0
     327: getfield      #88                 // Field s:B
     330: sipush        255
     333: iand
     334: iload         4
     336: bastore
     337: aload_0
     338: aload_0
     339: getfield      #87                 // Field n:B
     342: iconst_1
     343: iadd
     344: sipush        255
     347: iand
     348: i2b
     349: putfield      #87                 // Field n:B
     352: iinc          3, 1
     355: goto          2
     358: iconst_0
     359: istore_3
     360: iload_3
     361: sipush        768
     364: if_icmpge     461
     367: aload_0
     368: aload_0
     369: getfield      #93                 // Field P:[B
     372: aload_0
     373: getfield      #88                 // Field s:B
     376: aload_0
     377: getfield      #93                 // Field P:[B
     380: iload_3
     381: sipush        255
     384: iand
     385: baload
     386: iadd
     387: aload_0
     388: getfield      #94                 // Field T:[B
     391: iload_3
     392: bipush        31
     394: iand
     395: baload
     396: iadd
     397: sipush        255
     400: iand
     401: baload
     402: putfield      #88                 // Field s:B
     405: aload_0
     406: getfield      #93                 // Field P:[B
     409: iload_3
     410: sipush        255
     413: iand
     414: baload
     415: istore        4
     417: aload_0
     418: getfield      #93                 // Field P:[B
     421: iload_3
     422: sipush        255
     425: iand
     426: aload_0
     427: getfield      #93                 // Field P:[B
     430: aload_0
     431: getfield      #88                 // Field s:B
     434: sipush        255
     437: iand
     438: baload
     439: bastore
     440: aload_0
     441: getfield      #93                 // Field P:[B
     444: aload_0
     445: getfield      #88                 // Field s:B
     448: sipush        255
     451: iand
     452: iload         4
     454: bastore
     455: iinc          3, 1
     458: goto          360
     461: bipush        20
     463: newarray       byte
     465: astore_3
     466: iconst_0
     467: istore        4
     469: iload         4
     471: bipush        20
     473: if_icmpge     600
     476: aload_0
     477: aload_0
     478: getfield      #93                 // Field P:[B
     481: aload_0
     482: getfield      #88                 // Field s:B
     485: aload_0
     486: getfield      #93                 // Field P:[B
     489: iload         4
     491: sipush        255
     494: iand
     495: baload
     496: iadd
     497: sipush        255
     500: iand
     501: baload
     502: putfield      #88                 // Field s:B
     505: aload_3
     506: iload         4
     508: aload_0
     509: getfield      #93                 // Field P:[B
     512: aload_0
     513: getfield      #93                 // Field P:[B
     516: aload_0
     517: getfield      #93                 // Field P:[B
     520: aload_0
     521: getfield      #88                 // Field s:B
     524: sipush        255
     527: iand
     528: baload
     529: sipush        255
     532: iand
     533: baload
     534: iconst_1
     535: iadd
     536: sipush        255
     539: iand
     540: baload
     541: bastore
     542: aload_0
     543: getfield      #93                 // Field P:[B
     546: iload         4
     548: sipush        255
     551: iand
     552: baload
     553: istore        5
     555: aload_0
     556: getfield      #93                 // Field P:[B
     559: iload         4
     561: sipush        255
     564: iand
     565: aload_0
     566: getfield      #93                 // Field P:[B
     569: aload_0
     570: getfield      #88                 // Field s:B
     573: sipush        255
     576: iand
     577: baload
     578: bastore
     579: aload_0
     580: getfield      #93                 // Field P:[B
     583: aload_0
     584: getfield      #88                 // Field s:B
     587: sipush        255
     590: iand
     591: iload         5
     593: bastore
     594: iinc          4, 1
     597: goto          469
     600: aload_3
     601: iconst_0
     602: aload_1
     603: iload_2
     604: aload_3
     605: arraylength
     606: invokestatic  #99                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     609: aload_0
     610: invokevirtual #101                // Method reset:()V
     613: aload_3
     614: arraylength
     615: ireturn

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #1                  // String VMPC-MAC
       2: areturn

  public int getMacSize();
    Code:
       0: bipush        20
       2: ireturn

  public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: instanceof    #60                 // class org/bouncycastle/crypto/params/ParametersWithIV
       4: ifne          17
       7: new           #52                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #3                  // String VMPC-MAC Init parameters must include an IV
      13: invokespecial #97                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: checkcast     #60                 // class org/bouncycastle/crypto/params/ParametersWithIV
      21: astore_2
      22: aload_2
      23: invokevirtual #106                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      26: checkcast     #59                 // class org/bouncycastle/crypto/params/KeyParameter
      29: astore_3
      30: aload_2
      31: invokevirtual #106                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      34: instanceof    #59                 // class org/bouncycastle/crypto/params/KeyParameter
      37: ifne          50
      40: new           #52                 // class java/lang/IllegalArgumentException
      43: dup
      44: ldc           #2                  // String VMPC-MAC Init parameters must include a key
      46: invokespecial #97                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: aload_2
      52: invokevirtual #105                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      55: putfield      #95                 // Field workingIV:[B
      58: aload_0
      59: getfield      #95                 // Field workingIV:[B
      62: ifnull        85
      65: aload_0
      66: getfield      #95                 // Field workingIV:[B
      69: arraylength
      70: iconst_1
      71: if_icmplt     85
      74: aload_0
      75: getfield      #95                 // Field workingIV:[B
      78: arraylength
      79: sipush        768
      82: if_icmple     95
      85: new           #52                 // class java/lang/IllegalArgumentException
      88: dup
      89: ldc           #4                  // String VMPC-MAC requires 1 to 768 bytes of IV
      91: invokespecial #97                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload_0
      96: aload_3
      97: invokevirtual #104                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
     100: putfield      #96                 // Field workingKey:[B
     103: aload_0
     104: invokevirtual #101                // Method reset:()V
     107: return

  private void initKey(byte[], byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #88                 // Field s:B
       5: aload_0
       6: sipush        256
       9: newarray       byte
      11: putfield      #93                 // Field P:[B
      14: iconst_0
      15: istore_3
      16: iload_3
      17: sipush        256
      20: if_icmpge     37
      23: aload_0
      24: getfield      #93                 // Field P:[B
      27: iload_3
      28: iload_3
      29: i2b
      30: bastore
      31: iinc          3, 1
      34: goto          16
      37: iconst_0
      38: istore_3
      39: iload_3
      40: sipush        768
      43: if_icmpge     137
      46: aload_0
      47: aload_0
      48: getfield      #93                 // Field P:[B
      51: aload_0
      52: getfield      #88                 // Field s:B
      55: aload_0
      56: getfield      #93                 // Field P:[B
      59: iload_3
      60: sipush        255
      63: iand
      64: baload
      65: iadd
      66: aload_1
      67: iload_3
      68: aload_1
      69: arraylength
      70: irem
      71: baload
      72: iadd
      73: sipush        255
      76: iand
      77: baload
      78: putfield      #88                 // Field s:B
      81: aload_0
      82: getfield      #93                 // Field P:[B
      85: iload_3
      86: sipush        255
      89: iand
      90: baload
      91: istore        4
      93: aload_0
      94: getfield      #93                 // Field P:[B
      97: iload_3
      98: sipush        255
     101: iand
     102: aload_0
     103: getfield      #93                 // Field P:[B
     106: aload_0
     107: getfield      #88                 // Field s:B
     110: sipush        255
     113: iand
     114: baload
     115: bastore
     116: aload_0
     117: getfield      #93                 // Field P:[B
     120: aload_0
     121: getfield      #88                 // Field s:B
     124: sipush        255
     127: iand
     128: iload         4
     130: bastore
     131: iinc          3, 1
     134: goto          39
     137: iconst_0
     138: istore_3
     139: iload_3
     140: sipush        768
     143: if_icmpge     237
     146: aload_0
     147: aload_0
     148: getfield      #93                 // Field P:[B
     151: aload_0
     152: getfield      #88                 // Field s:B
     155: aload_0
     156: getfield      #93                 // Field P:[B
     159: iload_3
     160: sipush        255
     163: iand
     164: baload
     165: iadd
     166: aload_2
     167: iload_3
     168: aload_2
     169: arraylength
     170: irem
     171: baload
     172: iadd
     173: sipush        255
     176: iand
     177: baload
     178: putfield      #88                 // Field s:B
     181: aload_0
     182: getfield      #93                 // Field P:[B
     185: iload_3
     186: sipush        255
     189: iand
     190: baload
     191: istore        4
     193: aload_0
     194: getfield      #93                 // Field P:[B
     197: iload_3
     198: sipush        255
     201: iand
     202: aload_0
     203: getfield      #93                 // Field P:[B
     206: aload_0
     207: getfield      #88                 // Field s:B
     210: sipush        255
     213: iand
     214: baload
     215: bastore
     216: aload_0
     217: getfield      #93                 // Field P:[B
     220: aload_0
     221: getfield      #88                 // Field s:B
     224: sipush        255
     227: iand
     228: iload         4
     230: bastore
     231: iinc          3, 1
     234: goto          139
     237: aload_0
     238: iconst_0
     239: putfield      #87                 // Field n:B
     242: return

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #96                 // Field workingKey:[B
       5: aload_0
       6: getfield      #95                 // Field workingIV:[B
       9: invokespecial #103                // Method initKey:([B[B)V
      12: aload_0
      13: aload_0
      14: aload_0
      15: aload_0
      16: aload_0
      17: aload_0
      18: iconst_0
      19: dup_x1
      20: putfield      #87                 // Field n:B
      23: dup_x1
      24: putfield      #92                 // Field x4:B
      27: dup_x1
      28: putfield      #91                 // Field x3:B
      31: dup_x1
      32: putfield      #90                 // Field x2:B
      35: dup_x1
      36: putfield      #89                 // Field x1:B
      39: putfield      #86                 // Field g:B
      42: aload_0
      43: bipush        32
      45: newarray       byte
      47: putfield      #94                 // Field T:[B
      50: iconst_0
      51: istore_1
      52: iload_1
      53: bipush        32
      55: if_icmpge     71
      58: aload_0
      59: getfield      #94                 // Field T:[B
      62: iload_1
      63: iconst_0
      64: bastore
      65: iinc          1, 1
      68: goto          52
      71: return

  public void update(byte) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #93                 // Field P:[B
       5: aload_0
       6: getfield      #88                 // Field s:B
       9: aload_0
      10: getfield      #93                 // Field P:[B
      13: aload_0
      14: getfield      #87                 // Field n:B
      17: sipush        255
      20: iand
      21: baload
      22: iadd
      23: sipush        255
      26: iand
      27: baload
      28: putfield      #88                 // Field s:B
      31: iload_1
      32: aload_0
      33: getfield      #93                 // Field P:[B
      36: aload_0
      37: getfield      #93                 // Field P:[B
      40: aload_0
      41: getfield      #93                 // Field P:[B
      44: aload_0
      45: getfield      #88                 // Field s:B
      48: sipush        255
      51: iand
      52: baload
      53: sipush        255
      56: iand
      57: baload
      58: iconst_1
      59: iadd
      60: sipush        255
      63: iand
      64: baload
      65: ixor
      66: i2b
      67: istore_2
      68: aload_0
      69: aload_0
      70: getfield      #93                 // Field P:[B
      73: aload_0
      74: getfield      #92                 // Field x4:B
      77: aload_0
      78: getfield      #91                 // Field x3:B
      81: iadd
      82: sipush        255
      85: iand
      86: baload
      87: putfield      #92                 // Field x4:B
      90: aload_0
      91: aload_0
      92: getfield      #93                 // Field P:[B
      95: aload_0
      96: getfield      #91                 // Field x3:B
      99: aload_0
     100: getfield      #90                 // Field x2:B
     103: iadd
     104: sipush        255
     107: iand
     108: baload
     109: putfield      #91                 // Field x3:B
     112: aload_0
     113: aload_0
     114: getfield      #93                 // Field P:[B
     117: aload_0
     118: getfield      #90                 // Field x2:B
     121: aload_0
     122: getfield      #89                 // Field x1:B
     125: iadd
     126: sipush        255
     129: iand
     130: baload
     131: putfield      #90                 // Field x2:B
     134: aload_0
     135: aload_0
     136: getfield      #93                 // Field P:[B
     139: aload_0
     140: getfield      #89                 // Field x1:B
     143: aload_0
     144: getfield      #88                 // Field s:B
     147: iadd
     148: iload_2
     149: iadd
     150: sipush        255
     153: iand
     154: baload
     155: putfield      #89                 // Field x1:B
     158: aload_0
     159: getfield      #94                 // Field T:[B
     162: aload_0
     163: getfield      #86                 // Field g:B
     166: bipush        31
     168: iand
     169: aload_0
     170: getfield      #94                 // Field T:[B
     173: aload_0
     174: getfield      #86                 // Field g:B
     177: bipush        31
     179: iand
     180: baload
     181: aload_0
     182: getfield      #89                 // Field x1:B
     185: ixor
     186: i2b
     187: bastore
     188: aload_0
     189: getfield      #94                 // Field T:[B
     192: aload_0
     193: getfield      #86                 // Field g:B
     196: iconst_1
     197: iadd
     198: bipush        31
     200: iand
     201: aload_0
     202: getfield      #94                 // Field T:[B
     205: aload_0
     206: getfield      #86                 // Field g:B
     209: iconst_1
     210: iadd
     211: bipush        31
     213: iand
     214: baload
     215: aload_0
     216: getfield      #90                 // Field x2:B
     219: ixor
     220: i2b
     221: bastore
     222: aload_0
     223: getfield      #94                 // Field T:[B
     226: aload_0
     227: getfield      #86                 // Field g:B
     230: iconst_2
     231: iadd
     232: bipush        31
     234: iand
     235: aload_0
     236: getfield      #94                 // Field T:[B
     239: aload_0
     240: getfield      #86                 // Field g:B
     243: iconst_2
     244: iadd
     245: bipush        31
     247: iand
     248: baload
     249: aload_0
     250: getfield      #91                 // Field x3:B
     253: ixor
     254: i2b
     255: bastore
     256: aload_0
     257: getfield      #94                 // Field T:[B
     260: aload_0
     261: getfield      #86                 // Field g:B
     264: iconst_3
     265: iadd
     266: bipush        31
     268: iand
     269: aload_0
     270: getfield      #94                 // Field T:[B
     273: aload_0
     274: getfield      #86                 // Field g:B
     277: iconst_3
     278: iadd
     279: bipush        31
     281: iand
     282: baload
     283: aload_0
     284: getfield      #92                 // Field x4:B
     287: ixor
     288: i2b
     289: bastore
     290: aload_0
     291: aload_0
     292: getfield      #86                 // Field g:B
     295: iconst_4
     296: iadd
     297: bipush        31
     299: iand
     300: i2b
     301: putfield      #86                 // Field g:B
     304: aload_0
     305: getfield      #93                 // Field P:[B
     308: aload_0
     309: getfield      #87                 // Field n:B
     312: sipush        255
     315: iand
     316: baload
     317: istore_3
     318: aload_0
     319: getfield      #93                 // Field P:[B
     322: aload_0
     323: getfield      #87                 // Field n:B
     326: sipush        255
     329: iand
     330: aload_0
     331: getfield      #93                 // Field P:[B
     334: aload_0
     335: getfield      #88                 // Field s:B
     338: sipush        255
     341: iand
     342: baload
     343: bastore
     344: aload_0
     345: getfield      #93                 // Field P:[B
     348: aload_0
     349: getfield      #88                 // Field s:B
     352: sipush        255
     355: iand
     356: iload_3
     357: bastore
     358: aload_0
     359: aload_0
     360: getfield      #87                 // Field n:B
     363: iconst_1
     364: iadd
     365: sipush        255
     368: iand
     369: i2b
     370: putfield      #87                 // Field n:B
     373: return

  public void update(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: iload_2
       1: iload_3
       2: iadd
       3: aload_1
       4: arraylength
       5: if_icmple     18
       8: new           #56                 // class org/bouncycastle/crypto/DataLengthException
      11: dup
      12: ldc           #5                  // String input buffer too short
      14: invokespecial #100                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iconst_0
      19: istore        4
      21: iload         4
      23: iload_3
      24: if_icmpge     43
      27: aload_0
      28: aload_1
      29: iload_2
      30: iload         4
      32: iadd
      33: baload
      34: invokevirtual #102                // Method update:(B)V
      37: iinc          4, 1
      40: goto          21
      43: return
}
