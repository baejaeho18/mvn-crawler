public class org.bouncycastle.crypto.engines.VMPCEngine implements org.bouncycastle.crypto.StreamCipher {
  protected byte n;

  protected byte[] P;

  protected byte s;

  protected byte[] workingIV;

  protected byte[] workingKey;

  public org.bouncycastle.crypto.engines.VMPCEngine();
    Code:
       0: aload_0
       1: invokespecial #72                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #66                 // Field n:B
       9: aload_0
      10: aconst_null
      11: putfield      #68                 // Field P:[B
      14: aload_0
      15: iconst_0
      16: putfield      #67                 // Field s:B
      19: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #1                  // String VMPC
       2: areturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #50                 // class org/bouncycastle/crypto/params/ParametersWithIV
       4: ifne          17
       7: new           #43                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #3                  // String VMPC init parameters must include an IV
      13: invokespecial #71                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_2
      18: checkcast     #50                 // class org/bouncycastle/crypto/params/ParametersWithIV
      21: astore_3
      22: aload_3
      23: invokevirtual #78                 // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      26: instanceof    #49                 // class org/bouncycastle/crypto/params/KeyParameter
      29: ifne          42
      32: new           #43                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #2                  // String VMPC init parameters must include a key
      38: invokespecial #71                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_3
      43: invokevirtual #78                 // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      46: checkcast     #49                 // class org/bouncycastle/crypto/params/KeyParameter
      49: astore        4
      51: aload_0
      52: aload_3
      53: invokevirtual #77                 // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      56: putfield      #69                 // Field workingIV:[B
      59: aload_0
      60: getfield      #69                 // Field workingIV:[B
      63: ifnull        86
      66: aload_0
      67: getfield      #69                 // Field workingIV:[B
      70: arraylength
      71: iconst_1
      72: if_icmplt     86
      75: aload_0
      76: getfield      #69                 // Field workingIV:[B
      79: arraylength
      80: sipush        768
      83: if_icmple     96
      86: new           #43                 // class java/lang/IllegalArgumentException
      89: dup
      90: ldc           #4                  // String VMPC requires 1 to 768 bytes of IV
      92: invokespecial #71                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: aload_0
      97: aload         4
      99: invokevirtual #76                 // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
     102: putfield      #70                 // Field workingKey:[B
     105: aload_0
     106: aload_0
     107: getfield      #70                 // Field workingKey:[B
     110: aload_0
     111: getfield      #69                 // Field workingIV:[B
     114: invokevirtual #75                 // Method initKey:([B[B)V
     117: return

  protected void initKey(byte[], byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #67                 // Field s:B
       5: aload_0
       6: sipush        256
       9: newarray       byte
      11: putfield      #68                 // Field P:[B
      14: iconst_0
      15: istore_3
      16: iload_3
      17: sipush        256
      20: if_icmpge     37
      23: aload_0
      24: getfield      #68                 // Field P:[B
      27: iload_3
      28: iload_3
      29: i2b
      30: bastore
      31: iinc          3, 1
      34: goto          16
      37: iconst_0
      38: istore_3
      39: iload_3
      40: sipush        768
      43: if_icmpge     137
      46: aload_0
      47: aload_0
      48: getfield      #68                 // Field P:[B
      51: aload_0
      52: getfield      #67                 // Field s:B
      55: aload_0
      56: getfield      #68                 // Field P:[B
      59: iload_3
      60: sipush        255
      63: iand
      64: baload
      65: iadd
      66: aload_1
      67: iload_3
      68: aload_1
      69: arraylength
      70: irem
      71: baload
      72: iadd
      73: sipush        255
      76: iand
      77: baload
      78: putfield      #67                 // Field s:B
      81: aload_0
      82: getfield      #68                 // Field P:[B
      85: iload_3
      86: sipush        255
      89: iand
      90: baload
      91: istore        4
      93: aload_0
      94: getfield      #68                 // Field P:[B
      97: iload_3
      98: sipush        255
     101: iand
     102: aload_0
     103: getfield      #68                 // Field P:[B
     106: aload_0
     107: getfield      #67                 // Field s:B
     110: sipush        255
     113: iand
     114: baload
     115: bastore
     116: aload_0
     117: getfield      #68                 // Field P:[B
     120: aload_0
     121: getfield      #67                 // Field s:B
     124: sipush        255
     127: iand
     128: iload         4
     130: bastore
     131: iinc          3, 1
     134: goto          39
     137: iconst_0
     138: istore_3
     139: iload_3
     140: sipush        768
     143: if_icmpge     237
     146: aload_0
     147: aload_0
     148: getfield      #68                 // Field P:[B
     151: aload_0
     152: getfield      #67                 // Field s:B
     155: aload_0
     156: getfield      #68                 // Field P:[B
     159: iload_3
     160: sipush        255
     163: iand
     164: baload
     165: iadd
     166: aload_2
     167: iload_3
     168: aload_2
     169: arraylength
     170: irem
     171: baload
     172: iadd
     173: sipush        255
     176: iand
     177: baload
     178: putfield      #67                 // Field s:B
     181: aload_0
     182: getfield      #68                 // Field P:[B
     185: iload_3
     186: sipush        255
     189: iand
     190: baload
     191: istore        4
     193: aload_0
     194: getfield      #68                 // Field P:[B
     197: iload_3
     198: sipush        255
     201: iand
     202: aload_0
     203: getfield      #68                 // Field P:[B
     206: aload_0
     207: getfield      #67                 // Field s:B
     210: sipush        255
     213: iand
     214: baload
     215: bastore
     216: aload_0
     217: getfield      #68                 // Field P:[B
     220: aload_0
     221: getfield      #67                 // Field s:B
     224: sipush        255
     227: iand
     228: iload         4
     230: bastore
     231: iinc          3, 1
     234: goto          139
     237: aload_0
     238: iconst_0
     239: putfield      #66                 // Field n:B
     242: return

  public int processBytes(byte[], int, int, byte[], int);
    Code:
       0: iload_2
       1: iload_3
       2: iadd
       3: aload_1
       4: arraylength
       5: if_icmple     18
       8: new           #45                 // class org/bouncycastle/crypto/DataLengthException
      11: dup
      12: ldc           #5                  // String input buffer too short
      14: invokespecial #73                 // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iload         5
      20: iload_3
      21: iadd
      22: aload         4
      24: arraylength
      25: if_icmple     38
      28: new           #46                 // class org/bouncycastle/crypto/OutputLengthException
      31: dup
      32: ldc           #6                  // String output buffer too short
      34: invokespecial #74                 // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iconst_0
      39: istore        6
      41: iload         6
      43: iload_3
      44: if_icmpge     208
      47: aload_0
      48: aload_0
      49: getfield      #68                 // Field P:[B
      52: aload_0
      53: getfield      #67                 // Field s:B
      56: aload_0
      57: getfield      #68                 // Field P:[B
      60: aload_0
      61: getfield      #66                 // Field n:B
      64: sipush        255
      67: iand
      68: baload
      69: iadd
      70: sipush        255
      73: iand
      74: baload
      75: putfield      #67                 // Field s:B
      78: aload_0
      79: getfield      #68                 // Field P:[B
      82: aload_0
      83: getfield      #68                 // Field P:[B
      86: aload_0
      87: getfield      #68                 // Field P:[B
      90: aload_0
      91: getfield      #67                 // Field s:B
      94: sipush        255
      97: iand
      98: baload
      99: sipush        255
     102: iand
     103: baload
     104: iconst_1
     105: iadd
     106: sipush        255
     109: iand
     110: baload
     111: istore        7
     113: aload_0
     114: getfield      #68                 // Field P:[B
     117: aload_0
     118: getfield      #66                 // Field n:B
     121: sipush        255
     124: iand
     125: baload
     126: istore        8
     128: aload_0
     129: getfield      #68                 // Field P:[B
     132: aload_0
     133: getfield      #66                 // Field n:B
     136: sipush        255
     139: iand
     140: aload_0
     141: getfield      #68                 // Field P:[B
     144: aload_0
     145: getfield      #67                 // Field s:B
     148: sipush        255
     151: iand
     152: baload
     153: bastore
     154: aload_0
     155: getfield      #68                 // Field P:[B
     158: aload_0
     159: getfield      #67                 // Field s:B
     162: sipush        255
     165: iand
     166: iload         8
     168: bastore
     169: aload_0
     170: aload_0
     171: getfield      #66                 // Field n:B
     174: iconst_1
     175: iadd
     176: sipush        255
     179: iand
     180: i2b
     181: putfield      #66                 // Field n:B
     184: aload         4
     186: iload         6
     188: iload         5
     190: iadd
     191: aload_1
     192: iload         6
     194: iload_2
     195: iadd
     196: baload
     197: iload         7
     199: ixor
     200: i2b
     201: bastore
     202: iinc          6, 1
     205: goto          41
     208: iload_3
     209: ireturn

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #70                 // Field workingKey:[B
       5: aload_0
       6: getfield      #69                 // Field workingIV:[B
       9: invokevirtual #75                 // Method initKey:([B[B)V
      12: return

  public byte returnByte(byte);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #68                 // Field P:[B
       5: aload_0
       6: getfield      #67                 // Field s:B
       9: aload_0
      10: getfield      #68                 // Field P:[B
      13: aload_0
      14: getfield      #66                 // Field n:B
      17: sipush        255
      20: iand
      21: baload
      22: iadd
      23: sipush        255
      26: iand
      27: baload
      28: putfield      #67                 // Field s:B
      31: aload_0
      32: getfield      #68                 // Field P:[B
      35: aload_0
      36: getfield      #68                 // Field P:[B
      39: aload_0
      40: getfield      #68                 // Field P:[B
      43: aload_0
      44: getfield      #67                 // Field s:B
      47: sipush        255
      50: iand
      51: baload
      52: sipush        255
      55: iand
      56: baload
      57: iconst_1
      58: iadd
      59: sipush        255
      62: iand
      63: baload
      64: istore_2
      65: aload_0
      66: getfield      #68                 // Field P:[B
      69: aload_0
      70: getfield      #66                 // Field n:B
      73: sipush        255
      76: iand
      77: baload
      78: istore_3
      79: aload_0
      80: getfield      #68                 // Field P:[B
      83: aload_0
      84: getfield      #66                 // Field n:B
      87: sipush        255
      90: iand
      91: aload_0
      92: getfield      #68                 // Field P:[B
      95: aload_0
      96: getfield      #67                 // Field s:B
      99: sipush        255
     102: iand
     103: baload
     104: bastore
     105: aload_0
     106: getfield      #68                 // Field P:[B
     109: aload_0
     110: getfield      #67                 // Field s:B
     113: sipush        255
     116: iand
     117: iload_3
     118: bastore
     119: aload_0
     120: aload_0
     121: getfield      #66                 // Field n:B
     124: iconst_1
     125: iadd
     126: sipush        255
     129: iand
     130: i2b
     131: putfield      #66                 // Field n:B
     134: iload_1
     135: iload_2
     136: ixor
     137: i2b
     138: ireturn
}
