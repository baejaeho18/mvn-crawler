public class org.bouncycastle.crypto.engines.RSABlindingEngine implements org.bouncycastle.crypto.AsymmetricBlockCipher {
  private org.bouncycastle.crypto.engines.RSACoreEngine core;

  private org.bouncycastle.crypto.params.RSAKeyParameters key;

  private java.math.BigInteger blindingFactor;

  private boolean forEncryption;

  public org.bouncycastle.crypto.engines.RSABlindingEngine();
    Code:
       0: aload_0
       1: invokespecial #81                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #40                 // class org/bouncycastle/crypto/engines/RSACoreEngine
       8: dup
       9: invokespecial #89                 // Method org/bouncycastle/crypto/engines/RSACoreEngine."<init>":()V
      12: putfield      #79                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
      15: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #41                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       4: ifeq          25
       7: aload_2
       8: checkcast     #41                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      11: astore        4
      13: aload         4
      15: invokevirtual #93                 // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      18: checkcast     #42                 // class org/bouncycastle/crypto/params/RSABlindingParameters
      21: astore_3
      22: goto          30
      25: aload_2
      26: checkcast     #42                 // class org/bouncycastle/crypto/params/RSABlindingParameters
      29: astore_3
      30: aload_0
      31: getfield      #79                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
      34: iload_1
      35: aload_3
      36: invokevirtual #95                 // Method org/bouncycastle/crypto/params/RSABlindingParameters.getPublicKey:()Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      39: invokevirtual #92                 // Method org/bouncycastle/crypto/engines/RSACoreEngine.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      42: aload_0
      43: iload_1
      44: putfield      #77                 // Field forEncryption:Z
      47: aload_0
      48: aload_3
      49: invokevirtual #95                 // Method org/bouncycastle/crypto/params/RSABlindingParameters.getPublicKey:()Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      52: putfield      #80                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      55: aload_0
      56: aload_3
      57: invokevirtual #94                 // Method org/bouncycastle/crypto/params/RSABlindingParameters.getBlindingFactor:()Ljava/math/BigInteger;
      60: putfield      #78                 // Field blindingFactor:Ljava/math/BigInteger;
      63: return

  public int getInputBlockSize();
    Code:
       0: aload_0
       1: getfield      #79                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
       4: invokevirtual #87                 // Method org/bouncycastle/crypto/engines/RSACoreEngine.getInputBlockSize:()I
       7: ireturn

  public int getOutputBlockSize();
    Code:
       0: aload_0
       1: getfield      #79                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
       4: invokevirtual #88                 // Method org/bouncycastle/crypto/engines/RSACoreEngine.getOutputBlockSize:()I
       7: ireturn

  public byte[] processBlock(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #79                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #91                 // Method org/bouncycastle/crypto/engines/RSACoreEngine.convertInput:([BII)Ljava/math/BigInteger;
      10: astore        4
      12: aload_0
      13: getfield      #77                 // Field forEncryption:Z
      16: ifeq          30
      19: aload_0
      20: aload         4
      22: invokespecial #85                 // Method blindMessage:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      25: astore        4
      27: goto          38
      30: aload_0
      31: aload         4
      33: invokespecial #86                 // Method unblindMessage:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      36: astore        4
      38: aload_0
      39: getfield      #79                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
      42: aload         4
      44: invokevirtual #90                 // Method org/bouncycastle/crypto/engines/RSACoreEngine.convertOutput:(Ljava/math/BigInteger;)[B
      47: areturn

  private java.math.BigInteger blindMessage(java.math.BigInteger);
    Code:
       0: aload_0
       1: getfield      #78                 // Field blindingFactor:Ljava/math/BigInteger;
       4: astore_2
       5: aload_1
       6: aload_2
       7: aload_0
       8: getfield      #80                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      11: invokevirtual #96                 // Method org/bouncycastle/crypto/params/RSAKeyParameters.getExponent:()Ljava/math/BigInteger;
      14: aload_0
      15: getfield      #80                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      18: invokevirtual #97                 // Method org/bouncycastle/crypto/params/RSAKeyParameters.getModulus:()Ljava/math/BigInteger;
      21: invokevirtual #84                 // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      24: invokevirtual #83                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      27: astore_2
      28: aload_2
      29: aload_0
      30: getfield      #80                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      33: invokevirtual #97                 // Method org/bouncycastle/crypto/params/RSAKeyParameters.getModulus:()Ljava/math/BigInteger;
      36: invokevirtual #82                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      39: astore_2
      40: aload_2
      41: areturn

  private java.math.BigInteger unblindMessage(java.math.BigInteger);
    Code:
       0: aload_0
       1: getfield      #80                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
       4: invokevirtual #97                 // Method org/bouncycastle/crypto/params/RSAKeyParameters.getModulus:()Ljava/math/BigInteger;
       7: astore_2
       8: aload_1
       9: astore_3
      10: aload_2
      11: aload_0
      12: getfield      #78                 // Field blindingFactor:Ljava/math/BigInteger;
      15: invokestatic  #98                 // Method org/bouncycastle/util/BigIntegers.modOddInverse:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      18: astore        4
      20: aload_3
      21: aload         4
      23: invokevirtual #83                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      26: astore_3
      27: aload_3
      28: aload_2
      29: invokevirtual #82                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      32: astore_3
      33: aload_3
      34: areturn
}
