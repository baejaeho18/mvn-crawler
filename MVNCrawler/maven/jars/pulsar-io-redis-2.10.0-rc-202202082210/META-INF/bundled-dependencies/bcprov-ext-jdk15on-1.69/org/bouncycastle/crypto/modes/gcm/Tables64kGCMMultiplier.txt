public class org.bouncycastle.crypto.modes.gcm.Tables64kGCMMultiplier implements org.bouncycastle.crypto.modes.gcm.GCMMultiplier {
  private byte[] H;

  private long[][][] T;

  public org.bouncycastle.crypto.modes.gcm.Tables64kGCMMultiplier();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(byte[]);
    Code:
       0: aload_0
       1: getfield      #47                 // Field T:[[[J
       4: ifnonnull     24
       7: aload_0
       8: bipush        16
      10: sipush        256
      13: iconst_2
      14: multianewarray #29,  3            // class "[[[J"
      18: putfield      #47                 // Field T:[[[J
      21: goto          37
      24: iconst_0
      25: aload_0
      26: getfield      #46                 // Field H:[B
      29: aload_1
      30: invokestatic  #49                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.areEqual:([B[B)B
      33: if_icmpeq     37
      36: return
      37: aload_0
      38: bipush        16
      40: newarray       byte
      42: putfield      #46                 // Field H:[B
      45: aload_1
      46: aload_0
      47: getfield      #46                 // Field H:[B
      50: invokestatic  #50                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.copy:([B[B)V
      53: iconst_0
      54: istore_2
      55: iload_2
      56: bipush        16
      58: if_icmpge     162
      61: aload_0
      62: getfield      #47                 // Field T:[[[J
      65: iload_2
      66: aaload
      67: astore_3
      68: iload_2
      69: ifne          94
      72: aload_0
      73: getfield      #46                 // Field H:[B
      76: aload_3
      77: iconst_1
      78: aaload
      79: invokestatic  #51                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.asLongs:([B[J)V
      82: aload_3
      83: iconst_1
      84: aaload
      85: aload_3
      86: iconst_1
      87: aaload
      88: invokestatic  #53                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.multiplyP7:([J[J)V
      91: goto          110
      94: aload_0
      95: getfield      #47                 // Field T:[[[J
      98: iload_2
      99: iconst_1
     100: isub
     101: aaload
     102: iconst_1
     103: aaload
     104: aload_3
     105: iconst_1
     106: aaload
     107: invokestatic  #54                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.multiplyP8:([J[J)V
     110: iconst_2
     111: istore        4
     113: iload         4
     115: sipush        256
     118: if_icmpge     156
     121: aload_3
     122: iload         4
     124: iconst_1
     125: ishr
     126: aaload
     127: aload_3
     128: iload         4
     130: aaload
     131: invokestatic  #52                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.divideP:([J[J)V
     134: aload_3
     135: iload         4
     137: aaload
     138: aload_3
     139: iconst_1
     140: aaload
     141: aload_3
     142: iload         4
     144: iconst_1
     145: iadd
     146: aaload
     147: invokestatic  #55                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([J[J[J)V
     150: iinc          4, 2
     153: goto          113
     156: iinc          2, 1
     159: goto          55
     162: return

  public void multiplyH(byte[]);
    Code:
       0: aload_0
       1: getfield      #47                 // Field T:[[[J
       4: bipush        15
       6: aaload
       7: aload_1
       8: bipush        15
      10: baload
      11: sipush        255
      14: iand
      15: aaload
      16: astore_2
      17: aload_2
      18: iconst_0
      19: laload
      20: lstore_3
      21: aload_2
      22: iconst_1
      23: laload
      24: lstore        5
      26: bipush        14
      28: istore        7
      30: iload         7
      32: iflt          72
      35: aload_0
      36: getfield      #47                 // Field T:[[[J
      39: iload         7
      41: aaload
      42: aload_1
      43: iload         7
      45: baload
      46: sipush        255
      49: iand
      50: aaload
      51: astore_2
      52: lload_3
      53: aload_2
      54: iconst_0
      55: laload
      56: lxor
      57: lstore_3
      58: lload         5
      60: aload_2
      61: iconst_1
      62: laload
      63: lxor
      64: lstore        5
      66: iinc          7, -1
      69: goto          30
      72: lload_3
      73: aload_1
      74: iconst_0
      75: invokestatic  #56                 // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
      78: lload         5
      80: aload_1
      81: bipush        8
      83: invokestatic  #56                 // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
      86: return
}
