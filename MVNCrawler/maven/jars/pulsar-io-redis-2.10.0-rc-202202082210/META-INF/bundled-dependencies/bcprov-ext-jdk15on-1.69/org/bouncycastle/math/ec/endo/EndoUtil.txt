public abstract class org.bouncycastle.math.ec.endo.EndoUtil {
  public static final java.lang.String PRECOMP_NAME;

  public org.bouncycastle.math.ec.endo.EndoUtil();
    Code:
       0: aload_0
       1: invokespecial #83                 // Method java/lang/Object."<init>":()V
       4: return

  public static java.math.BigInteger[] decomposeScalar(org.bouncycastle.math.ec.endo.ScalarSplitParameters, java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method org/bouncycastle/math/ec/endo/ScalarSplitParameters.getBits:()I
       4: istore_2
       5: aload_1
       6: aload_0
       7: invokevirtual #98                 // Method org/bouncycastle/math/ec/endo/ScalarSplitParameters.getG1:()Ljava/math/BigInteger;
      10: iload_2
      11: invokestatic  #95                 // Method calculateB:(Ljava/math/BigInteger;Ljava/math/BigInteger;I)Ljava/math/BigInteger;
      14: astore_3
      15: aload_1
      16: aload_0
      17: invokevirtual #99                 // Method org/bouncycastle/math/ec/endo/ScalarSplitParameters.getG2:()Ljava/math/BigInteger;
      20: iload_2
      21: invokestatic  #95                 // Method calculateB:(Ljava/math/BigInteger;Ljava/math/BigInteger;I)Ljava/math/BigInteger;
      24: astore        4
      26: aload_1
      27: aload_3
      28: aload_0
      29: invokevirtual #100                // Method org/bouncycastle/math/ec/endo/ScalarSplitParameters.getV1A:()Ljava/math/BigInteger;
      32: invokevirtual #90                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      35: aload         4
      37: aload_0
      38: invokevirtual #102                // Method org/bouncycastle/math/ec/endo/ScalarSplitParameters.getV2A:()Ljava/math/BigInteger;
      41: invokevirtual #90                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      44: invokevirtual #89                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      47: invokevirtual #91                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      50: astore        5
      52: aload_3
      53: aload_0
      54: invokevirtual #101                // Method org/bouncycastle/math/ec/endo/ScalarSplitParameters.getV1B:()Ljava/math/BigInteger;
      57: invokevirtual #90                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      60: aload         4
      62: aload_0
      63: invokevirtual #103                // Method org/bouncycastle/math/ec/endo/ScalarSplitParameters.getV2B:()Ljava/math/BigInteger;
      66: invokevirtual #90                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      69: invokevirtual #89                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      72: invokevirtual #87                 // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      75: astore        6
      77: iconst_2
      78: anewarray     #40                 // class java/math/BigInteger
      81: dup
      82: iconst_0
      83: aload         5
      85: aastore
      86: dup
      87: iconst_1
      88: aload         6
      90: aastore
      91: areturn

  public static org.bouncycastle.math.ec.ECPoint mapPoint(org.bouncycastle.math.ec.endo.ECEndomorphism, org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aload_1
       1: invokevirtual #93                 // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       4: astore_2
       5: aload_2
       6: aload_1
       7: ldc           #1                  // String bc_endo
       9: new           #46                 // class org/bouncycastle/math/ec/endo/EndoUtil$1
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #96                 // Method org/bouncycastle/math/ec/endo/EndoUtil$1."<init>":(Lorg/bouncycastle/math/ec/endo/ECEndomorphism;Lorg/bouncycastle/math/ec/ECPoint;)V
      18: invokevirtual #92                 // Method org/bouncycastle/math/ec/ECCurve.precompute:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/lang/String;Lorg/bouncycastle/math/ec/PreCompCallback;)Lorg/bouncycastle/math/ec/PreCompInfo;
      21: checkcast     #44                 // class org/bouncycastle/math/ec/endo/EndoPreCompInfo
      24: astore_3
      25: aload_3
      26: invokevirtual #94                 // Method org/bouncycastle/math/ec/endo/EndoPreCompInfo.getMappedPoint:()Lorg/bouncycastle/math/ec/ECPoint;
      29: areturn

  private static java.math.BigInteger calculateB(java.math.BigInteger, java.math.BigInteger, int);
    Code:
       0: aload_1
       1: invokevirtual #84                 // Method java/math/BigInteger.signum:()I
       4: ifge          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_3
      13: aload_0
      14: aload_1
      15: invokevirtual #86                 // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
      18: invokevirtual #90                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      21: astore        4
      23: aload         4
      25: iload_2
      26: iconst_1
      27: isub
      28: invokevirtual #85                 // Method java/math/BigInteger.testBit:(I)Z
      31: istore        5
      33: aload         4
      35: iload_2
      36: invokevirtual #88                 // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      39: astore        4
      41: iload         5
      43: ifeq          56
      46: aload         4
      48: getstatic     #82                 // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      51: invokevirtual #89                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      54: astore        4
      56: iload_3
      57: ifeq          68
      60: aload         4
      62: invokevirtual #87                 // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      65: goto          70
      68: aload         4
      70: areturn
}
