public class org.bouncycastle.math.ec.tools.DiscoverEndomorphisms {
  private static final int radix;

  public org.bouncycastle.math.ec.tools.DiscoverEndomorphisms();
    Code:
       0: aload_0
       1: invokespecial #349                // Method java/lang/Object."<init>":()V
       4: return

  public static void main(java.lang.String[]);
    Code:
       0: aload_0
       1: arraylength
       2: ifle          28
       5: iconst_0
       6: istore_1
       7: iload_1
       8: aload_0
       9: arraylength
      10: if_icmpge     25
      13: aload_0
      14: iload_1
      15: aaload
      16: invokestatic  #408                // Method discoverEndomorphisms:(Ljava/lang/String;)V
      19: iinc          1, 1
      22: goto          7
      25: goto          86
      28: new           #186                // class java/util/TreeSet
      31: dup
      32: invokestatic  #384                // Method org/bouncycastle/asn1/x9/ECNamedCurveTable.getNames:()Ljava/util/Enumeration;
      35: invokestatic  #421                // Method enumToList:(Ljava/util/Enumeration;)Ljava/util/ArrayList;
      38: invokespecial #383                // Method java/util/TreeSet."<init>":(Ljava/util/Collection;)V
      41: astore_1
      42: aload_1
      43: invokestatic  #389                // Method org/bouncycastle/crypto/ec/CustomNamedCurves.getNames:()Ljava/util/Enumeration;
      46: invokestatic  #421                // Method enumToList:(Ljava/util/Enumeration;)Ljava/util/ArrayList;
      49: invokeinterface #438,  2          // InterfaceMethod java/util/SortedSet.addAll:(Ljava/util/Collection;)Z
      54: pop
      55: aload_1
      56: invokeinterface #439,  1          // InterfaceMethod java/util/SortedSet.iterator:()Ljava/util/Iterator;
      61: astore_2
      62: aload_2
      63: invokeinterface #436,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          86
      71: aload_2
      72: invokeinterface #437,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      77: checkcast     #176                // class java/lang/String
      80: invokestatic  #408                // Method discoverEndomorphisms:(Ljava/lang/String;)V
      83: goto          62
      86: return

  public static void discoverEndomorphisms(org.bouncycastle.asn1.x9.X9ECParameters);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #174                // class java/lang/NullPointerException
       7: dup
       8: ldc           #27                 // String x9
      10: invokespecial #348                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: ldc           #10                 // String <UNKNOWN>
      17: invokestatic  #413                // Method discoverEndomorphisms:(Lorg/bouncycastle/asn1/x9/X9ECParameters;Ljava/lang/String;)V
      20: return

  private static void discoverEndomorphisms(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #390                // Method org/bouncycastle/crypto/ec/CustomNamedCurves.getByName:(Ljava/lang/String;)Lorg/bouncycastle/asn1/x9/X9ECParameters;
       4: astore_1
       5: aload_1
       6: ifnonnull     44
       9: aload_0
      10: invokestatic  #385                // Method org/bouncycastle/asn1/x9/ECNamedCurveTable.getByName:(Ljava/lang/String;)Lorg/bouncycastle/asn1/x9/X9ECParameters;
      13: astore_1
      14: aload_1
      15: ifnonnull     44
      18: getstatic     #337                // Field java/lang/System.err:Ljava/io/PrintStream;
      21: new           #178                // class java/lang/StringBuilder
      24: dup
      25: invokespecial #357                // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #18                 // String Unknown curve:
      30: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #358                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokevirtual #344                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      43: return
      44: aload_1
      45: aload_0
      46: invokestatic  #413                // Method discoverEndomorphisms:(Lorg/bouncycastle/asn1/x9/X9ECParameters;Ljava/lang/String;)V
      49: return

  private static void discoverEndomorphisms(org.bouncycastle.asn1.x9.X9ECParameters, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #387                // Method org/bouncycastle/asn1/x9/X9ECParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       4: astore_2
       5: aload_2
       6: invokestatic  #391                // Method org/bouncycastle/math/ec/ECAlgorithms.isFpCurve:(Lorg/bouncycastle/math/ec/ECCurve;)Z
       9: ifeq          142
      12: aload_2
      13: invokevirtual #394                // Method org/bouncycastle/math/ec/ECCurve.getField:()Lorg/bouncycastle/math/field/FiniteField;
      16: invokeinterface #440,  1          // InterfaceMethod org/bouncycastle/math/field/FiniteField.getCharacteristic:()Ljava/math/BigInteger;
      21: astore_3
      22: aload_2
      23: invokevirtual #393                // Method org/bouncycastle/math/ec/ECCurve.getB:()Lorg/bouncycastle/math/ec/ECFieldElement;
      26: invokevirtual #396                // Method org/bouncycastle/math/ec/ECFieldElement.isZero:()Z
      29: ifeq          82
      32: aload_3
      33: getstatic     #339                // Field org/bouncycastle/math/ec/ECConstants.FOUR:Ljava/math/BigInteger;
      36: invokevirtual #374                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      39: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      42: invokevirtual #362                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      45: ifeq          82
      48: getstatic     #338                // Field java/lang/System.out:Ljava/io/PrintStream;
      51: new           #178                // class java/lang/StringBuilder
      54: dup
      55: invokespecial #357                // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #12                 // String Curve \'
      60: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_1
      64: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #3                  // String \' has a \'GLV Type A\' endomorphism with these parameters:
      69: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #358                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokevirtual #344                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      78: aload_0
      79: invokestatic  #410                // Method printGLVTypeAParameters:(Lorg/bouncycastle/asn1/x9/X9ECParameters;)V
      82: aload_2
      83: invokevirtual #392                // Method org/bouncycastle/math/ec/ECCurve.getA:()Lorg/bouncycastle/math/ec/ECFieldElement;
      86: invokevirtual #396                // Method org/bouncycastle/math/ec/ECFieldElement.isZero:()Z
      89: ifeq          142
      92: aload_3
      93: getstatic     #341                // Field org/bouncycastle/math/ec/ECConstants.THREE:Ljava/math/BigInteger;
      96: invokevirtual #374                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      99: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
     102: invokevirtual #362                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     105: ifeq          142
     108: getstatic     #338                // Field java/lang/System.out:Ljava/io/PrintStream;
     111: new           #178                // class java/lang/StringBuilder
     114: dup
     115: invokespecial #357                // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #12                 // String Curve \'
     120: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_1
     124: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #4                  // String \' has a \'GLV Type B\' endomorphism with these parameters:
     129: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: invokevirtual #358                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokevirtual #344                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     138: aload_0
     139: invokestatic  #411                // Method printGLVTypeBParameters:(Lorg/bouncycastle/asn1/x9/X9ECParameters;)V
     142: return

  private static void printGLVTypeAParameters(org.bouncycastle.asn1.x9.X9ECParameters);
    Code:
       0: aload_0
       1: invokevirtual #386                // Method org/bouncycastle/asn1/x9/X9ECParameters.getN:()Ljava/math/BigInteger;
       4: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
       7: getstatic     #343                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
      10: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      13: invokestatic  #432                // Method solveQuadraticEquation:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)[Ljava/math/BigInteger;
      16: astore_1
      17: aload_0
      18: invokevirtual #387                // Method org/bouncycastle/asn1/x9/X9ECParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      21: invokestatic  #423                // Method findNonTrivialOrder4FieldElements:(Lorg/bouncycastle/math/ec/ECCurve;)[Lorg/bouncycastle/math/ec/ECFieldElement;
      24: astore_2
      25: aload_0
      26: aload_1
      27: iconst_0
      28: aaload
      29: aload_2
      30: invokestatic  #429                // Method printGLVTypeAParameters:(Lorg/bouncycastle/asn1/x9/X9ECParameters;Ljava/math/BigInteger;[Lorg/bouncycastle/math/ec/ECFieldElement;)V
      33: getstatic     #338                // Field java/lang/System.out:Ljava/io/PrintStream;
      36: ldc           #15                 // String OR
      38: invokevirtual #344                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      41: aload_0
      42: aload_1
      43: iconst_1
      44: aaload
      45: aload_2
      46: invokestatic  #429                // Method printGLVTypeAParameters:(Lorg/bouncycastle/asn1/x9/X9ECParameters;Ljava/math/BigInteger;[Lorg/bouncycastle/math/ec/ECFieldElement;)V
      49: return

  private static void printGLVTypeAParameters(org.bouncycastle.asn1.x9.X9ECParameters, java.math.BigInteger, org.bouncycastle.math.ec.ECFieldElement[]);
    Code:
       0: aload_0
       1: invokevirtual #388                // Method org/bouncycastle/asn1/x9/X9ECParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
       4: invokevirtual #406                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #407                // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      13: invokevirtual #406                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      16: astore        4
      18: aload_3
      19: invokevirtual #404                // Method org/bouncycastle/math/ec/ECPoint.getXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      22: invokevirtual #398                // Method org/bouncycastle/math/ec/ECFieldElement.negate:()Lorg/bouncycastle/math/ec/ECFieldElement;
      25: aload         4
      27: invokevirtual #404                // Method org/bouncycastle/math/ec/ECPoint.getXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      30: invokevirtual #350                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      33: ifne          46
      36: new           #172                // class java/lang/IllegalStateException
      39: dup
      40: ldc           #13                 // String Derivation of GLV Type A parameters failed unexpectedly
      42: invokespecial #346                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_2
      47: iconst_0
      48: aaload
      49: astore        5
      51: aload_3
      52: invokevirtual #405                // Method org/bouncycastle/math/ec/ECPoint.getYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      55: aload         5
      57: invokevirtual #401                // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      60: aload         4
      62: invokevirtual #405                // Method org/bouncycastle/math/ec/ECPoint.getYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      65: invokevirtual #350                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      68: ifne          106
      71: aload_2
      72: iconst_1
      73: aaload
      74: astore        5
      76: aload_3
      77: invokevirtual #405                // Method org/bouncycastle/math/ec/ECPoint.getYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      80: aload         5
      82: invokevirtual #401                // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      85: aload         4
      87: invokevirtual #405                // Method org/bouncycastle/math/ec/ECPoint.getYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      90: invokevirtual #350                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      93: ifne          106
      96: new           #172                // class java/lang/IllegalStateException
      99: dup
     100: ldc           #13                 // String Derivation of GLV Type A parameters failed unexpectedly
     102: invokespecial #346                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     105: athrow
     106: ldc           #16                 // String Point map
     108: ldc           #23                 // String lambda * (x, y) = (-x, i * y)
     110: invokestatic  #412                // Method printProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     113: ldc           #21                 // String i
     115: aload         5
     117: invokevirtual #397                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
     120: bipush        16
     122: invokevirtual #363                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
     125: invokestatic  #412                // Method printProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     128: ldc           #22                 // String lambda
     130: aload_1
     131: bipush        16
     133: invokevirtual #363                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
     136: invokestatic  #412                // Method printProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     139: aload_0
     140: invokevirtual #386                // Method org/bouncycastle/asn1/x9/X9ECParameters.getN:()Ljava/math/BigInteger;
     143: aload_1
     144: invokestatic  #415                // Method printScalarDecompositionParameters:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
     147: return

  private static void printGLVTypeBParameters(org.bouncycastle.asn1.x9.X9ECParameters);
    Code:
       0: aload_0
       1: invokevirtual #386                // Method org/bouncycastle/asn1/x9/X9ECParameters.getN:()Ljava/math/BigInteger;
       4: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
       7: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      10: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      13: invokestatic  #432                // Method solveQuadraticEquation:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)[Ljava/math/BigInteger;
      16: astore_1
      17: aload_0
      18: invokevirtual #387                // Method org/bouncycastle/asn1/x9/X9ECParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      21: invokestatic  #422                // Method findNonTrivialOrder3FieldElements:(Lorg/bouncycastle/math/ec/ECCurve;)[Lorg/bouncycastle/math/ec/ECFieldElement;
      24: astore_2
      25: aload_0
      26: aload_1
      27: iconst_0
      28: aaload
      29: aload_2
      30: invokestatic  #430                // Method printGLVTypeBParameters:(Lorg/bouncycastle/asn1/x9/X9ECParameters;Ljava/math/BigInteger;[Lorg/bouncycastle/math/ec/ECFieldElement;)V
      33: getstatic     #338                // Field java/lang/System.out:Ljava/io/PrintStream;
      36: ldc           #15                 // String OR
      38: invokevirtual #344                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      41: aload_0
      42: aload_1
      43: iconst_1
      44: aaload
      45: aload_2
      46: invokestatic  #430                // Method printGLVTypeBParameters:(Lorg/bouncycastle/asn1/x9/X9ECParameters;Ljava/math/BigInteger;[Lorg/bouncycastle/math/ec/ECFieldElement;)V
      49: return

  private static void printGLVTypeBParameters(org.bouncycastle.asn1.x9.X9ECParameters, java.math.BigInteger, org.bouncycastle.math.ec.ECFieldElement[]);
    Code:
       0: aload_0
       1: invokevirtual #388                // Method org/bouncycastle/asn1/x9/X9ECParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
       4: invokevirtual #406                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #407                // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      13: invokevirtual #406                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      16: astore        4
      18: aload_3
      19: invokevirtual #405                // Method org/bouncycastle/math/ec/ECPoint.getYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      22: aload         4
      24: invokevirtual #405                // Method org/bouncycastle/math/ec/ECPoint.getYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      27: invokevirtual #350                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      30: ifne          43
      33: new           #172                // class java/lang/IllegalStateException
      36: dup
      37: ldc           #14                 // String Derivation of GLV Type B parameters failed unexpectedly
      39: invokespecial #346                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_2
      44: iconst_0
      45: aaload
      46: astore        5
      48: aload_3
      49: invokevirtual #404                // Method org/bouncycastle/math/ec/ECPoint.getXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      52: aload         5
      54: invokevirtual #401                // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      57: aload         4
      59: invokevirtual #404                // Method org/bouncycastle/math/ec/ECPoint.getXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      62: invokevirtual #350                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      65: ifne          103
      68: aload_2
      69: iconst_1
      70: aaload
      71: astore        5
      73: aload_3
      74: invokevirtual #404                // Method org/bouncycastle/math/ec/ECPoint.getXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      77: aload         5
      79: invokevirtual #401                // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      82: aload         4
      84: invokevirtual #404                // Method org/bouncycastle/math/ec/ECPoint.getXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      87: invokevirtual #350                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      90: ifne          103
      93: new           #172                // class java/lang/IllegalStateException
      96: dup
      97: ldc           #14                 // String Derivation of GLV Type B parameters failed unexpectedly
      99: invokespecial #346                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: ldc           #16                 // String Point map
     105: ldc           #24                 // String lambda * (x, y) = (beta * x, y)
     107: invokestatic  #412                // Method printProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     110: ldc           #19                 // String beta
     112: aload         5
     114: invokevirtual #397                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
     117: bipush        16
     119: invokevirtual #363                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
     122: invokestatic  #412                // Method printProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     125: ldc           #22                 // String lambda
     127: aload_1
     128: bipush        16
     130: invokevirtual #363                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
     133: invokestatic  #412                // Method printProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     136: aload_0
     137: invokevirtual #386                // Method org/bouncycastle/asn1/x9/X9ECParameters.getN:()Ljava/math/BigInteger;
     140: aload_1
     141: invokestatic  #415                // Method printScalarDecompositionParameters:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
     144: return

  private static void printProperty(java.lang.String, java.lang.Object);
    Code:
       0: new           #177                // class java/lang/StringBuffer
       3: dup
       4: ldc           #1                  // String
       6: invokespecial #354                // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
       9: astore_2
      10: aload_2
      11: aload_0
      12: invokevirtual #356                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      15: pop
      16: aload_2
      17: invokevirtual #352                // Method java/lang/StringBuffer.length:()I
      20: bipush        20
      22: if_icmpge     35
      25: aload_2
      26: bipush        32
      28: invokevirtual #355                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      31: pop
      32: goto          16
      35: aload_2
      36: ldc           #9                  // String :
      38: invokevirtual #356                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      41: pop
      42: aload_2
      43: aload_1
      44: invokevirtual #351                // Method java/lang/Object.toString:()Ljava/lang/String;
      47: invokevirtual #356                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      50: pop
      51: getstatic     #338                // Field java/lang/System.out:Ljava/io/PrintStream;
      54: aload_2
      55: invokevirtual #353                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      58: invokevirtual #344                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      61: return

  private static void printScalarDecompositionParameters(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aload_0
       5: aload_1
       6: invokestatic  #425                // Method extEuclidGLV:(Ljava/math/BigInteger;Ljava/math/BigInteger;)[Ljava/math/BigInteger;
       9: astore        4
      11: iconst_2
      12: anewarray     #180                // class java/math/BigInteger
      15: dup
      16: iconst_0
      17: aload         4
      19: iconst_2
      20: aaload
      21: aastore
      22: dup
      23: iconst_1
      24: aload         4
      26: iconst_3
      27: aaload
      28: invokevirtual #365                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      31: aastore
      32: astore_2
      33: iconst_2
      34: anewarray     #180                // class java/math/BigInteger
      37: dup
      38: iconst_0
      39: aload         4
      41: iconst_0
      42: aaload
      43: aastore
      44: dup
      45: iconst_1
      46: aload         4
      48: iconst_1
      49: aaload
      50: invokevirtual #365                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      53: aastore
      54: iconst_2
      55: anewarray     #180                // class java/math/BigInteger
      58: dup
      59: iconst_0
      60: aload         4
      62: iconst_4
      63: aaload
      64: aastore
      65: dup
      66: iconst_1
      67: aload         4
      69: iconst_5
      70: aaload
      71: invokevirtual #365                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      74: aastore
      75: invokestatic  #427                // Method chooseShortest:([Ljava/math/BigInteger;[Ljava/math/BigInteger;)[Ljava/math/BigInteger;
      78: astore_3
      79: aload_3
      80: aload_0
      81: invokestatic  #419                // Method isVectorBoundedBySqrt:([Ljava/math/BigInteger;Ljava/math/BigInteger;)Z
      84: ifne          400
      87: aload_2
      88: iconst_0
      89: aaload
      90: aload_2
      91: iconst_1
      92: aaload
      93: invokestatic  #416                // Method areRelativelyPrime:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Z
      96: ifeq          400
      99: aload_2
     100: iconst_0
     101: aaload
     102: astore        5
     104: aload_2
     105: iconst_1
     106: aaload
     107: astore        6
     109: aload         5
     111: aload         6
     113: aload_1
     114: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     117: invokevirtual #369                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     120: aload_0
     121: invokevirtual #370                // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     124: astore        7
     126: iconst_2
     127: anewarray     #180                // class java/math/BigInteger
     130: dup
     131: iconst_0
     132: aload         7
     134: invokevirtual #364                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
     137: aastore
     138: dup
     139: iconst_1
     140: aload         6
     142: invokevirtual #364                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
     145: aastore
     146: invokestatic  #418                // Method extEuclidBezout:([Ljava/math/BigInteger;)[Ljava/math/BigInteger;
     149: astore        8
     151: aload         8
     153: ifnull        400
     156: aload         8
     158: iconst_0
     159: aaload
     160: astore        9
     162: aload         8
     164: iconst_1
     165: aaload
     166: astore        10
     168: aload         7
     170: invokevirtual #361                // Method java/math/BigInteger.signum:()I
     173: ifge          183
     176: aload         9
     178: invokevirtual #365                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
     181: astore        9
     183: aload         6
     185: invokevirtual #361                // Method java/math/BigInteger.signum:()I
     188: ifle          198
     191: aload         10
     193: invokevirtual #365                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
     196: astore        10
     198: aload         7
     200: aload         9
     202: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     205: aload         6
     207: aload         10
     209: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     212: invokevirtual #377                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     215: astore        11
     217: aload         11
     219: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
     222: invokevirtual #362                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     225: ifne          236
     228: new           #172                // class java/lang/IllegalStateException
     231: dup
     232: invokespecial #345                // Method java/lang/IllegalStateException."<init>":()V
     235: athrow
     236: aload         10
     238: aload_0
     239: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     242: aload         9
     244: aload_1
     245: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     248: invokevirtual #377                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     251: astore        12
     253: aload         9
     255: invokevirtual #365                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
     258: astore        13
     260: aload         12
     262: invokevirtual #365                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
     265: astore        14
     267: aload_0
     268: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
     271: invokevirtual #377                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     274: invokestatic  #414                // Method isqrt:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     277: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
     280: invokevirtual #369                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     283: astore        15
     285: aload         13
     287: aload         15
     289: aload         6
     291: invokestatic  #431                // Method calculateRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)[Ljava/math/BigInteger;
     294: astore        16
     296: aload         14
     298: aload         15
     300: aload         5
     302: invokestatic  #431                // Method calculateRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)[Ljava/math/BigInteger;
     305: astore        17
     307: aload         16
     309: aload         17
     311: invokestatic  #428                // Method intersect:([Ljava/math/BigInteger;[Ljava/math/BigInteger;)[Ljava/math/BigInteger;
     314: astore        18
     316: aload         18
     318: ifnull        400
     321: aload         18
     323: iconst_0
     324: aaload
     325: astore        19
     327: aload         19
     329: aload         18
     331: iconst_1
     332: aaload
     333: invokevirtual #368                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     336: ifgt          400
     339: iconst_2
     340: anewarray     #180                // class java/math/BigInteger
     343: dup
     344: iconst_0
     345: aload         12
     347: aload         19
     349: aload         5
     351: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     354: invokevirtual #369                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     357: aastore
     358: dup
     359: iconst_1
     360: aload         9
     362: aload         19
     364: aload         6
     366: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     369: invokevirtual #369                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     372: aastore
     373: astore        20
     375: aload         20
     377: aload_3
     378: invokestatic  #420                // Method isShorter:([Ljava/math/BigInteger;[Ljava/math/BigInteger;)Z
     381: ifeq          387
     384: aload         20
     386: astore_3
     387: aload         19
     389: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
     392: invokevirtual #369                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     395: astore        19
     397: goto          327
     400: aload_2
     401: iconst_0
     402: aaload
     403: aload_3
     404: iconst_1
     405: aaload
     406: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     409: aload_2
     410: iconst_1
     411: aaload
     412: aload_3
     413: iconst_0
     414: aaload
     415: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     418: invokevirtual #377                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     421: astore        5
     423: aload_0
     424: invokevirtual #360                // Method java/math/BigInteger.bitLength:()I
     427: bipush        16
     429: iadd
     430: aload_0
     431: invokevirtual #360                // Method java/math/BigInteger.bitLength:()I
     434: bipush        7
     436: iand
     437: isub
     438: istore        6
     440: aload_3
     441: iconst_1
     442: aaload
     443: iload         6
     445: invokevirtual #366                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
     448: aload         5
     450: invokestatic  #424                // Method roundQuotient:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
     453: astore        7
     455: aload_2
     456: iconst_1
     457: aaload
     458: iload         6
     460: invokevirtual #366                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
     463: aload         5
     465: invokestatic  #424                // Method roundQuotient:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
     468: invokevirtual #365                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
     471: astore        8
     473: ldc           #25                 // String v1
     475: new           #178                // class java/lang/StringBuilder
     478: dup
     479: invokespecial #357                // Method java/lang/StringBuilder."<init>":()V
     482: ldc           #28                 // String {
     484: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     487: aload_2
     488: iconst_0
     489: aaload
     490: bipush        16
     492: invokevirtual #363                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
     495: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     498: ldc           #8                  // String ,
     500: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     503: aload_2
     504: iconst_1
     505: aaload
     506: bipush        16
     508: invokevirtual #363                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
     511: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     514: ldc           #2                  // String  }
     516: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     519: invokevirtual #358                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     522: invokestatic  #412                // Method printProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     525: ldc           #26                 // String v2
     527: new           #178                // class java/lang/StringBuilder
     530: dup
     531: invokespecial #357                // Method java/lang/StringBuilder."<init>":()V
     534: ldc           #28                 // String {
     536: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     539: aload_3
     540: iconst_0
     541: aaload
     542: bipush        16
     544: invokevirtual #363                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
     547: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     550: ldc           #8                  // String ,
     552: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     555: aload_3
     556: iconst_1
     557: aaload
     558: bipush        16
     560: invokevirtual #363                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
     563: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     566: ldc           #2                  // String  }
     568: invokevirtual #359                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     571: invokevirtual #358                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     574: invokestatic  #412                // Method printProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     577: ldc           #20                 // String d
     579: aload         5
     581: bipush        16
     583: invokevirtual #363                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
     586: invokestatic  #412                // Method printProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     589: ldc           #6                  // String (OPT) g1
     591: aload         7
     593: bipush        16
     595: invokevirtual #363                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
     598: invokestatic  #412                // Method printProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     601: ldc           #7                  // String (OPT) g2
     603: aload         8
     605: bipush        16
     607: invokevirtual #363                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
     610: invokestatic  #412                // Method printProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     613: ldc           #5                  // String (OPT) bits
     615: iload         6
     617: invokestatic  #347                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     620: invokestatic  #412                // Method printProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     623: return

  private static boolean areRelativelyPrime(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #371                // Method java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       5: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
       8: invokevirtual #362                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      11: ireturn

  private static java.math.BigInteger[] calculateRange(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #377                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       5: aload_2
       6: invokevirtual #370                // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       9: astore_3
      10: aload_0
      11: aload_1
      12: invokevirtual #369                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      15: aload_2
      16: invokevirtual #370                // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      19: astore        4
      21: aload_3
      22: aload         4
      24: invokestatic  #426                // Method order:(Ljava/math/BigInteger;Ljava/math/BigInteger;)[Ljava/math/BigInteger;
      27: areturn

  private static java.util.ArrayList enumToList(java.util.Enumeration);
    Code:
       0: new           #182                // class java/util/ArrayList
       3: dup
       4: invokespecial #381                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #434,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      14: ifeq          31
      17: aload_1
      18: aload_0
      19: invokeinterface #435,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      24: invokevirtual #382                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      27: pop
      28: goto          8
      31: aload_1
      32: areturn

  private static java.math.BigInteger[] extEuclidBezout(java.math.BigInteger[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aaload
       3: aload_0
       4: iconst_1
       5: aaload
       6: invokevirtual #368                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
       9: ifge          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: istore_1
      18: iload_1
      19: ifeq          26
      22: aload_0
      23: invokestatic  #409                // Method swap:([Ljava/math/BigInteger;)V
      26: aload_0
      27: iconst_0
      28: aaload
      29: astore_2
      30: aload_0
      31: iconst_1
      32: aaload
      33: astore_3
      34: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      37: astore        4
      39: getstatic     #343                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
      42: astore        5
      44: getstatic     #343                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
      47: astore        6
      49: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      52: astore        7
      54: aload_3
      55: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      58: invokevirtual #368                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      61: ifle          135
      64: aload_2
      65: aload_3
      66: invokevirtual #378                // Method java/math/BigInteger.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
      69: astore        8
      71: aload         8
      73: iconst_0
      74: aaload
      75: astore        9
      77: aload         8
      79: iconst_1
      80: aaload
      81: astore        10
      83: aload         4
      85: aload         9
      87: aload         5
      89: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      92: invokevirtual #377                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      95: astore        11
      97: aload         6
      99: aload         9
     101: aload         7
     103: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     106: invokevirtual #377                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     109: astore        12
     111: aload_3
     112: astore_2
     113: aload         10
     115: astore_3
     116: aload         5
     118: astore        4
     120: aload         11
     122: astore        5
     124: aload         7
     126: astore        6
     128: aload         12
     130: astore        7
     132: goto          54
     135: aload_3
     136: invokevirtual #361                // Method java/math/BigInteger.signum:()I
     139: ifgt          144
     142: aconst_null
     143: areturn
     144: iconst_2
     145: anewarray     #180                // class java/math/BigInteger
     148: dup
     149: iconst_0
     150: aload         5
     152: aastore
     153: dup
     154: iconst_1
     155: aload         7
     157: aastore
     158: astore        8
     160: iload_1
     161: ifeq          169
     164: aload         8
     166: invokestatic  #409                // Method swap:([Ljava/math/BigInteger;)V
     169: aload         8
     171: areturn

  private static java.math.BigInteger[] extEuclidGLV(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: astore_3
       4: getstatic     #343                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
       7: astore        4
       9: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      12: astore        5
      14: aload_2
      15: aload_3
      16: invokevirtual #378                // Method java/math/BigInteger.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
      19: astore        6
      21: aload         6
      23: iconst_0
      24: aaload
      25: astore        7
      27: aload         6
      29: iconst_1
      30: aaload
      31: astore        8
      33: aload         4
      35: aload         7
      37: aload         5
      39: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      42: invokevirtual #377                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      45: astore        9
      47: aload_3
      48: aload_0
      49: invokestatic  #417                // Method isLessThanSqrt:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Z
      52: ifeq          89
      55: bipush        6
      57: anewarray     #180                // class java/math/BigInteger
      60: dup
      61: iconst_0
      62: aload_2
      63: aastore
      64: dup
      65: iconst_1
      66: aload         4
      68: aastore
      69: dup
      70: iconst_2
      71: aload_3
      72: aastore
      73: dup
      74: iconst_3
      75: aload         5
      77: aastore
      78: dup
      79: iconst_4
      80: aload         8
      82: aastore
      83: dup
      84: iconst_5
      85: aload         9
      87: aastore
      88: areturn
      89: aload_3
      90: astore_2
      91: aload         8
      93: astore_3
      94: aload         5
      96: astore        4
      98: aload         9
     100: astore        5
     102: goto          14

  private static java.math.BigInteger[] chooseShortest(java.math.BigInteger[], java.math.BigInteger[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #420                // Method isShorter:([Ljava/math/BigInteger;[Ljava/math/BigInteger;)Z
       5: ifeq          12
       8: aload_0
       9: goto          13
      12: aload_1
      13: areturn

  private static java.math.BigInteger[] intersect(java.math.BigInteger[], java.math.BigInteger[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aaload
       3: aload_1
       4: iconst_0
       5: aaload
       6: invokevirtual #372                // Method java/math/BigInteger.max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       9: astore_2
      10: aload_0
      11: iconst_1
      12: aaload
      13: aload_1
      14: iconst_1
      15: aaload
      16: invokevirtual #373                // Method java/math/BigInteger.min:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      19: astore_3
      20: aload_2
      21: aload_3
      22: invokevirtual #368                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      25: ifle          30
      28: aconst_null
      29: areturn
      30: iconst_2
      31: anewarray     #180                // class java/math/BigInteger
      34: dup
      35: iconst_0
      36: aload_2
      37: aastore
      38: dup
      39: iconst_1
      40: aload_3
      41: aastore
      42: areturn

  private static boolean isLessThanSqrt(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #364                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
       4: astore_0
       5: aload_1
       6: invokevirtual #364                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
       9: astore_1
      10: aload_1
      11: invokevirtual #360                // Method java/math/BigInteger.bitLength:()I
      14: istore_2
      15: aload_0
      16: invokevirtual #360                // Method java/math/BigInteger.bitLength:()I
      19: iconst_2
      20: imul
      21: istore_3
      22: iload_3
      23: iconst_1
      24: isub
      25: istore        4
      27: iload         4
      29: iload_2
      30: if_icmpgt     54
      33: iload_3
      34: iload_2
      35: if_icmplt     50
      38: aload_0
      39: aload_0
      40: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      43: aload_1
      44: invokevirtual #368                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      47: ifge          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn

  private static boolean isShorter(java.math.BigInteger[], java.math.BigInteger[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aaload
       3: invokevirtual #364                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
       6: astore_2
       7: aload_0
       8: iconst_1
       9: aaload
      10: invokevirtual #364                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
      13: astore_3
      14: aload_1
      15: iconst_0
      16: aaload
      17: invokevirtual #364                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
      20: astore        4
      22: aload_1
      23: iconst_1
      24: aaload
      25: invokevirtual #364                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
      28: astore        5
      30: aload_2
      31: aload         4
      33: invokevirtual #368                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      36: ifge          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: istore        6
      46: aload_3
      47: aload         5
      49: invokevirtual #368                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      52: ifge          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: istore        7
      62: iload         6
      64: iload         7
      66: if_icmpne     72
      69: iload         6
      71: ireturn
      72: aload_2
      73: aload_2
      74: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      77: aload_3
      78: aload_3
      79: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      82: invokevirtual #369                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      85: astore        8
      87: aload         4
      89: aload         4
      91: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      94: aload         5
      96: aload         5
      98: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     101: invokevirtual #369                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     104: astore        9
     106: aload         8
     108: aload         9
     110: invokevirtual #368                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     113: ifge          120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: ireturn

  private static boolean isVectorBoundedBySqrt(java.math.BigInteger[], java.math.BigInteger);
    Code:
       0: aload_0
       1: iconst_0
       2: aaload
       3: invokevirtual #364                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
       6: aload_0
       7: iconst_1
       8: aaload
       9: invokevirtual #364                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
      12: invokevirtual #372                // Method java/math/BigInteger.max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      15: astore_2
      16: aload_2
      17: aload_1
      18: invokestatic  #417                // Method isLessThanSqrt:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Z
      21: ireturn

  private static java.math.BigInteger[] order(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #368                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
       5: ifgt          21
       8: iconst_2
       9: anewarray     #180                // class java/math/BigInteger
      12: dup
      13: iconst_0
      14: aload_0
      15: aastore
      16: dup
      17: iconst_1
      18: aload_1
      19: aastore
      20: areturn
      21: iconst_2
      22: anewarray     #180                // class java/math/BigInteger
      25: dup
      26: iconst_0
      27: aload_1
      28: aastore
      29: dup
      30: iconst_1
      31: aload_0
      32: aastore
      33: areturn

  private static java.math.BigInteger roundQuotient(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #361                // Method java/math/BigInteger.signum:()I
       4: aload_1
       5: invokevirtual #361                // Method java/math/BigInteger.signum:()I
       8: if_icmpeq     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: istore_2
      17: aload_0
      18: invokevirtual #364                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
      21: astore_0
      22: aload_1
      23: invokevirtual #364                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
      26: astore_1
      27: aload_0
      28: aload_1
      29: iconst_1
      30: invokevirtual #367                // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      33: invokevirtual #369                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      36: aload_1
      37: invokevirtual #370                // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      40: astore_3
      41: iload_2
      42: ifeq          52
      45: aload_3
      46: invokevirtual #365                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      49: goto          53
      52: aload_3
      53: areturn

  private static java.math.BigInteger[] solveQuadraticEquation(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_2
       1: aload_2
       2: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       5: aload_1
       6: aload_3
       7: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      10: iconst_2
      11: invokevirtual #366                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      14: invokevirtual #377                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      17: aload_0
      18: invokevirtual #374                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      21: astore        4
      23: new           #194                // class org/bouncycastle/math/ec/ECFieldElement$Fp
      26: dup
      27: aload_0
      28: aload         4
      30: invokespecial #403                // Method org/bouncycastle/math/ec/ECFieldElement$Fp."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      33: invokevirtual #402                // Method org/bouncycastle/math/ec/ECFieldElement$Fp.sqrt:()Lorg/bouncycastle/math/ec/ECFieldElement;
      36: astore        5
      38: aload         5
      40: ifnonnull     53
      43: new           #172                // class java/lang/IllegalStateException
      46: dup
      47: ldc           #17                 // String Solving quadratic equation failed unexpectedly
      49: invokespecial #346                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload         5
      55: invokevirtual #397                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      58: astore        6
      60: aload_1
      61: iconst_1
      62: invokevirtual #366                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      65: aload_0
      66: invokevirtual #375                // Method java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      69: astore        7
      71: aload         6
      73: aload_2
      74: invokevirtual #377                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      77: aload         7
      79: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      82: aload_0
      83: invokevirtual #374                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      86: astore        8
      88: aload         6
      90: invokevirtual #365                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      93: aload_2
      94: invokevirtual #377                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      97: aload         7
      99: invokevirtual #376                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     102: aload_0
     103: invokevirtual #374                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     106: astore        9
     108: iconst_2
     109: anewarray     #180                // class java/math/BigInteger
     112: dup
     113: iconst_0
     114: aload         8
     116: aastore
     117: dup
     118: iconst_1
     119: aload         9
     121: aastore
     122: areturn

  private static org.bouncycastle.math.ec.ECFieldElement[] findNonTrivialOrder3FieldElements(org.bouncycastle.math.ec.ECCurve);
    Code:
       0: aload_0
       1: invokevirtual #394                // Method org/bouncycastle/math/ec/ECCurve.getField:()Lorg/bouncycastle/math/field/FiniteField;
       4: invokeinterface #440,  1          // InterfaceMethod org/bouncycastle/math/field/FiniteField.getCharacteristic:()Ljava/math/BigInteger;
       9: astore_1
      10: aload_1
      11: getstatic     #341                // Field org/bouncycastle/math/ec/ECConstants.THREE:Ljava/math/BigInteger;
      14: invokevirtual #370                // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      17: astore_2
      18: new           #181                // class java/security/SecureRandom
      21: dup
      22: invokespecial #380                // Method java/security/SecureRandom."<init>":()V
      25: astore_3
      26: getstatic     #342                // Field org/bouncycastle/math/ec/ECConstants.TWO:Ljava/math/BigInteger;
      29: aload_1
      30: getstatic     #342                // Field org/bouncycastle/math/ec/ECConstants.TWO:Ljava/math/BigInteger;
      33: invokevirtual #377                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      36: aload_3
      37: invokestatic  #433                // Method org/bouncycastle/util/BigIntegers.createRandomInRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      40: astore        5
      42: aload         5
      44: aload_2
      45: aload_1
      46: invokevirtual #379                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      49: astore        4
      51: aload         4
      53: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      56: invokevirtual #362                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      59: ifne          26
      62: aload_0
      63: aload         4
      65: invokevirtual #395                // Method org/bouncycastle/math/ec/ECCurve.fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      68: astore        5
      70: iconst_2
      71: anewarray     #193                // class org/bouncycastle/math/ec/ECFieldElement
      74: dup
      75: iconst_0
      76: aload         5
      78: aastore
      79: dup
      80: iconst_1
      81: aload         5
      83: invokevirtual #400                // Method org/bouncycastle/math/ec/ECFieldElement.square:()Lorg/bouncycastle/math/ec/ECFieldElement;
      86: aastore
      87: areturn

  private static org.bouncycastle.math.ec.ECFieldElement[] findNonTrivialOrder4FieldElements(org.bouncycastle.math.ec.ECCurve);
    Code:
       0: aload_0
       1: getstatic     #340                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
       4: invokevirtual #395                // Method org/bouncycastle/math/ec/ECCurve.fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
       7: invokevirtual #398                // Method org/bouncycastle/math/ec/ECFieldElement.negate:()Lorg/bouncycastle/math/ec/ECFieldElement;
      10: invokevirtual #399                // Method org/bouncycastle/math/ec/ECFieldElement.sqrt:()Lorg/bouncycastle/math/ec/ECFieldElement;
      13: astore_1
      14: aload_1
      15: ifnonnull     28
      18: new           #172                // class java/lang/IllegalStateException
      21: dup
      22: ldc           #11                 // String Calculation of non-trivial order-4  field elements failed unexpectedly
      24: invokespecial #346                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: iconst_2
      29: anewarray     #193                // class org/bouncycastle/math/ec/ECFieldElement
      32: dup
      33: iconst_0
      34: aload_1
      35: aastore
      36: dup
      37: iconst_1
      38: aload_1
      39: invokevirtual #398                // Method org/bouncycastle/math/ec/ECFieldElement.negate:()Lorg/bouncycastle/math/ec/ECFieldElement;
      42: aastore
      43: areturn

  private static java.math.BigInteger isqrt(java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #360                // Method java/math/BigInteger.bitLength:()I
       5: iconst_2
       6: idiv
       7: invokevirtual #367                // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      10: astore_1
      11: aload_1
      12: aload_0
      13: aload_1
      14: invokevirtual #370                // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      17: invokevirtual #369                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      20: iconst_1
      21: invokevirtual #367                // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      24: astore_2
      25: aload_2
      26: aload_1
      27: invokevirtual #362                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      30: ifeq          35
      33: aload_2
      34: areturn
      35: aload_2
      36: astore_1
      37: goto          11

  private static void swap(java.math.BigInteger[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aaload
       3: astore_1
       4: aload_0
       5: iconst_0
       6: aload_0
       7: iconst_1
       8: aaload
       9: aastore
      10: aload_0
      11: iconst_1
      12: aload_1
      13: aastore
      14: return
}
