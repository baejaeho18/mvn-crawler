public class org.bouncycastle.crypto.engines.XTEAEngine implements org.bouncycastle.crypto.BlockCipher {
  private static final int rounds;

  private static final int block_size;

  private static final int delta;

  private int[] _S;

  private int[] _sum0;

  private int[] _sum1;

  private boolean _initialised;

  private boolean _forEncryption;

  public org.bouncycastle.crypto.engines.XTEAEngine();
    Code:
       0: aload_0
       1: invokespecial #102                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_4
       6: newarray       int
       8: putfield      #96                 // Field _S:[I
      11: aload_0
      12: bipush        32
      14: newarray       int
      16: putfield      #97                 // Field _sum0:[I
      19: aload_0
      20: bipush        32
      22: newarray       int
      24: putfield      #98                 // Field _sum1:[I
      27: aload_0
      28: iconst_0
      29: putfield      #95                 // Field _initialised:Z
      32: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #4                  // String XTEA
       2: areturn

  public int getBlockSize();
    Code:
       0: bipush        8
       2: ireturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #70                 // class org/bouncycastle/crypto/params/KeyParameter
       4: ifne          40
       7: new           #62                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #65                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #6                  // String invalid parameter passed to TEA init -
      20: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #103                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #99                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #100                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: iload_1
      42: putfield      #94                 // Field _forEncryption:Z
      45: aload_0
      46: iconst_1
      47: putfield      #95                 // Field _initialised:Z
      50: aload_2
      51: checkcast     #70                 // class org/bouncycastle/crypto/params/KeyParameter
      54: astore_3
      55: aload_0
      56: aload_3
      57: invokevirtual #115                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      60: invokespecial #110                // Method setKey:([B)V
      63: return

  public int processBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: getfield      #95                 // Field _initialised:Z
       4: ifne          37
       7: new           #63                 // class java/lang/IllegalStateException
      10: dup
      11: new           #65                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
      18: aload_0
      19: invokevirtual #114                // Method getAlgorithmName:()Ljava/lang/String;
      22: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #2                  // String  not initialised
      27: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #101                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_2
      38: bipush        8
      40: iadd
      41: aload_1
      42: arraylength
      43: if_icmple     56
      46: new           #67                 // class org/bouncycastle/crypto/DataLengthException
      49: dup
      50: ldc           #5                  // String input buffer too short
      52: invokespecial #107                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: iload         4
      58: bipush        8
      60: iadd
      61: aload_3
      62: arraylength
      63: if_icmple     76
      66: new           #68                 // class org/bouncycastle/crypto/OutputLengthException
      69: dup
      70: ldc           #7                  // String output buffer too short
      72: invokespecial #108                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_0
      77: getfield      #94                 // Field _forEncryption:Z
      80: ifeq          95
      83: aload_0
      84: aload_1
      85: iload_2
      86: aload_3
      87: iload         4
      89: invokespecial #113                // Method encryptBlock:([BI[BI)I
      92: goto          104
      95: aload_0
      96: aload_1
      97: iload_2
      98: aload_3
      99: iload         4
     101: invokespecial #112                // Method decryptBlock:([BI[BI)I
     104: ireturn

  public void reset();
    Code:
       0: return

  private void setKey(byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: bipush        16
       4: if_icmpeq     17
       7: new           #62                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #3                  // String Key size must be 128 bits.
      13: invokespecial #100                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iconst_0
      18: dup
      19: istore_3
      20: istore_2
      21: iload_2
      22: iconst_4
      23: if_icmpge     47
      26: aload_0
      27: getfield      #96                 // Field _S:[I
      30: iload_2
      31: aload_0
      32: aload_1
      33: iload_3
      34: invokespecial #111                // Method bytesToInt:([BI)I
      37: iastore
      38: iinc          2, 1
      41: iinc          3, 4
      44: goto          21
      47: iconst_0
      48: dup
      49: istore_3
      50: istore_2
      51: iload_2
      52: bipush        32
      54: if_icmpge     103
      57: aload_0
      58: getfield      #97                 // Field _sum0:[I
      61: iload_2
      62: iload_3
      63: aload_0
      64: getfield      #96                 // Field _S:[I
      67: iload_3
      68: iconst_3
      69: iand
      70: iaload
      71: iadd
      72: iastore
      73: iload_3
      74: ldc           #1                  // int 1640531527
      76: isub
      77: istore_3
      78: aload_0
      79: getfield      #98                 // Field _sum1:[I
      82: iload_2
      83: iload_3
      84: aload_0
      85: getfield      #96                 // Field _S:[I
      88: iload_3
      89: bipush        11
      91: iushr
      92: iconst_3
      93: iand
      94: iaload
      95: iadd
      96: iastore
      97: iinc          2, 1
     100: goto          51
     103: return

  private int encryptBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #111                // Method bytesToInt:([BI)I
       6: istore        5
       8: aload_0
       9: aload_1
      10: iload_2
      11: iconst_4
      12: iadd
      13: invokespecial #111                // Method bytesToInt:([BI)I
      16: istore        6
      18: iconst_0
      19: istore        7
      21: iload         7
      23: bipush        32
      25: if_icmpge     84
      28: iload         5
      30: iload         6
      32: iconst_4
      33: ishl
      34: iload         6
      36: iconst_5
      37: iushr
      38: ixor
      39: iload         6
      41: iadd
      42: aload_0
      43: getfield      #97                 // Field _sum0:[I
      46: iload         7
      48: iaload
      49: ixor
      50: iadd
      51: istore        5
      53: iload         6
      55: iload         5
      57: iconst_4
      58: ishl
      59: iload         5
      61: iconst_5
      62: iushr
      63: ixor
      64: iload         5
      66: iadd
      67: aload_0
      68: getfield      #98                 // Field _sum1:[I
      71: iload         7
      73: iaload
      74: ixor
      75: iadd
      76: istore        6
      78: iinc          7, 1
      81: goto          21
      84: aload_0
      85: iload         5
      87: aload_3
      88: iload         4
      90: invokespecial #109                // Method unpackInt:(I[BI)V
      93: aload_0
      94: iload         6
      96: aload_3
      97: iload         4
      99: iconst_4
     100: iadd
     101: invokespecial #109                // Method unpackInt:(I[BI)V
     104: bipush        8
     106: ireturn

  private int decryptBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #111                // Method bytesToInt:([BI)I
       6: istore        5
       8: aload_0
       9: aload_1
      10: iload_2
      11: iconst_4
      12: iadd
      13: invokespecial #111                // Method bytesToInt:([BI)I
      16: istore        6
      18: bipush        31
      20: istore        7
      22: iload         7
      24: iflt          83
      27: iload         6
      29: iload         5
      31: iconst_4
      32: ishl
      33: iload         5
      35: iconst_5
      36: iushr
      37: ixor
      38: iload         5
      40: iadd
      41: aload_0
      42: getfield      #98                 // Field _sum1:[I
      45: iload         7
      47: iaload
      48: ixor
      49: isub
      50: istore        6
      52: iload         5
      54: iload         6
      56: iconst_4
      57: ishl
      58: iload         6
      60: iconst_5
      61: iushr
      62: ixor
      63: iload         6
      65: iadd
      66: aload_0
      67: getfield      #97                 // Field _sum0:[I
      70: iload         7
      72: iaload
      73: ixor
      74: isub
      75: istore        5
      77: iinc          7, -1
      80: goto          22
      83: aload_0
      84: iload         5
      86: aload_3
      87: iload         4
      89: invokespecial #109                // Method unpackInt:(I[BI)V
      92: aload_0
      93: iload         6
      95: aload_3
      96: iload         4
      98: iconst_4
      99: iadd
     100: invokespecial #109                // Method unpackInt:(I[BI)V
     103: bipush        8
     105: ireturn

  private int bytesToInt(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iinc          2, 1
       5: baload
       6: bipush        24
       8: ishl
       9: aload_1
      10: iload_2
      11: iinc          2, 1
      14: baload
      15: sipush        255
      18: iand
      19: bipush        16
      21: ishl
      22: ior
      23: aload_1
      24: iload_2
      25: iinc          2, 1
      28: baload
      29: sipush        255
      32: iand
      33: bipush        8
      35: ishl
      36: ior
      37: aload_1
      38: iload_2
      39: baload
      40: sipush        255
      43: iand
      44: ior
      45: ireturn

  private void unpackInt(int, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: iinc          3, 1
       5: iload_1
       6: bipush        24
       8: iushr
       9: i2b
      10: bastore
      11: aload_2
      12: iload_3
      13: iinc          3, 1
      16: iload_1
      17: bipush        16
      19: iushr
      20: i2b
      21: bastore
      22: aload_2
      23: iload_3
      24: iinc          3, 1
      27: iload_1
      28: bipush        8
      30: iushr
      31: i2b
      32: bastore
      33: aload_2
      34: iload_3
      35: iload_1
      36: i2b
      37: bastore
      38: return
}
