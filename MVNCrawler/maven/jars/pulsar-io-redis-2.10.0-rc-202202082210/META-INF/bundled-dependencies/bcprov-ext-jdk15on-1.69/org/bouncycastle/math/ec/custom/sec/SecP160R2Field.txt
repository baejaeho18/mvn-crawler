public class org.bouncycastle.math.ec.custom.sec.SecP160R2Field {
  static final int[] P;

  private static final int[] PExt;

  private static final int[] PExtInv;

  private static final int P4;

  private static final int PExt9;

  private static final int PInv33;

  public org.bouncycastle.math.ec.custom.sec.SecP160R2Field();
    Code:
       0: aload_0
       1: invokespecial #135                // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #162                // Method org/bouncycastle/math/raw/Nat160.add:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          28
      11: aload_2
      12: iconst_4
      13: iaload
      14: iconst_m1
      15: if_icmpne     37
      18: aload_2
      19: getstatic     #132                // Field P:[I
      22: invokestatic  #161                // Method org/bouncycastle/math/raw/Nat160.gte:([I[I)Z
      25: ifeq          37
      28: iconst_5
      29: sipush        21389
      32: aload_2
      33: invokestatic  #141                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      36: pop
      37: return

  public static void addExt(int[], int[], int[]);
    Code:
       0: bipush        10
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #153                // Method org/bouncycastle/math/raw/Nat.add:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifne          33
      13: aload_2
      14: bipush        9
      16: iaload
      17: iconst_m1
      18: if_icmpne     58
      21: bipush        10
      23: aload_2
      24: getstatic     #133                // Field PExt:[I
      27: invokestatic  #152                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      30: ifeq          58
      33: getstatic     #134                // Field PExtInv:[I
      36: arraylength
      37: getstatic     #134                // Field PExtInv:[I
      40: aload_2
      41: invokestatic  #148                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      44: ifeq          58
      47: bipush        10
      49: aload_2
      50: getstatic     #134                // Field PExtInv:[I
      53: arraylength
      54: invokestatic  #144                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      57: pop
      58: return

  public static void addOne(int[], int[]);
    Code:
       0: iconst_5
       1: aload_0
       2: aload_1
       3: invokestatic  #149                // Method org/bouncycastle/math/raw/Nat.inc:(I[I[I)I
       6: istore_2
       7: iload_2
       8: ifne          28
      11: aload_1
      12: iconst_4
      13: iaload
      14: iconst_m1
      15: if_icmpne     37
      18: aload_1
      19: getstatic     #132                // Field P:[I
      22: invokestatic  #161                // Method org/bouncycastle/math/raw/Nat160.gte:([I[I)Z
      25: ifeq          37
      28: iconst_5
      29: sipush        21389
      32: aload_1
      33: invokestatic  #141                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      36: pop
      37: return

  public static int[] fromBigInteger(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #166                // Method org/bouncycastle/math/raw/Nat160.fromBigInteger:(Ljava/math/BigInteger;)[I
       4: astore_1
       5: aload_1
       6: iconst_4
       7: iaload
       8: iconst_m1
       9: if_icmpne     30
      12: aload_1
      13: getstatic     #132                // Field P:[I
      16: invokestatic  #161                // Method org/bouncycastle/math/raw/Nat160.gte:([I[I)Z
      19: ifeq          30
      22: getstatic     #132                // Field P:[I
      25: aload_1
      26: invokestatic  #159                // Method org/bouncycastle/math/raw/Nat160.subFrom:([I[I)I
      29: pop
      30: aload_1
      31: areturn

  public static void half(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: iconst_1
       4: iand
       5: ifne          19
       8: iconst_5
       9: aload_0
      10: iconst_0
      11: aload_1
      12: invokestatic  #146                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II[I)I
      15: pop
      16: goto          35
      19: aload_0
      20: getstatic     #132                // Field P:[I
      23: aload_1
      24: invokestatic  #162                // Method org/bouncycastle/math/raw/Nat160.add:([I[I[I)I
      27: istore_2
      28: iconst_5
      29: aload_1
      30: iload_2
      31: invokestatic  #145                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II)I
      34: pop
      35: return

  public static void inv(int[], int[]);
    Code:
       0: getstatic     #132                // Field P:[I
       3: aload_0
       4: aload_1
       5: invokestatic  #140                // Method org/bouncycastle/math/raw/Mod.checkedModOddInverse:([I[I[I)V
       8: return

  public static int isZero(int[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: iconst_5
       6: if_icmpge     21
       9: iload_1
      10: aload_0
      11: iload_2
      12: iaload
      13: ior
      14: istore_1
      15: iinc          2, 1
      18: goto          4
      21: iload_1
      22: iconst_1
      23: iushr
      24: iload_1
      25: iconst_1
      26: iand
      27: ior
      28: istore_1
      29: iload_1
      30: iconst_1
      31: isub
      32: bipush        31
      34: ishr
      35: ireturn

  public static void multiply(int[], int[], int[]);
    Code:
       0: invokestatic  #155                // Method org/bouncycastle/math/raw/Nat160.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #165                // Method org/bouncycastle/math/raw/Nat160.mul:([I[I[I)V
      10: aload_3
      11: aload_2
      12: invokestatic  #138                // Method reduce:([I[I)V
      15: return

  public static void multiplyAddToExt(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat160.mulAddTo:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          31
      11: aload_2
      12: bipush        9
      14: iaload
      15: iconst_m1
      16: if_icmpne     56
      19: bipush        10
      21: aload_2
      22: getstatic     #133                // Field PExt:[I
      25: invokestatic  #152                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      28: ifeq          56
      31: getstatic     #134                // Field PExtInv:[I
      34: arraylength
      35: getstatic     #134                // Field PExtInv:[I
      38: aload_2
      39: invokestatic  #148                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      42: ifeq          56
      45: bipush        10
      47: aload_2
      48: getstatic     #134                // Field PExtInv:[I
      51: arraylength
      52: invokestatic  #144                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      55: pop
      56: return

  public static void negate(int[], int[]);
    Code:
       0: iconst_0
       1: aload_0
       2: invokestatic  #137                // Method isZero:([I)I
       5: if_icmpeq     22
       8: getstatic     #132                // Field P:[I
      11: getstatic     #132                // Field P:[I
      14: aload_1
      15: invokestatic  #164                // Method org/bouncycastle/math/raw/Nat160.sub:([I[I[I)I
      18: pop
      19: goto          31
      22: getstatic     #132                // Field P:[I
      25: aload_0
      26: aload_1
      27: invokestatic  #164                // Method org/bouncycastle/math/raw/Nat160.sub:([I[I[I)I
      30: pop
      31: return

  public static void random(java.security.SecureRandom, int[]);
    Code:
       0: bipush        20
       2: newarray       byte
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #136                // Method java/security/SecureRandom.nextBytes:([B)V
      10: aload_2
      11: iconst_0
      12: aload_1
      13: iconst_0
      14: iconst_5
      15: invokestatic  #167                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI[III)V
      18: iconst_0
      19: iconst_5
      20: aload_1
      21: getstatic     #132                // Field P:[I
      24: invokestatic  #150                // Method org/bouncycastle/math/raw/Nat.lessThan:(I[I[I)I
      27: if_icmpeq     5
      30: return

  public static void randomMult(java.security.SecureRandom, int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #139                // Method random:(Ljava/security/SecureRandom;[I)V
       5: iconst_0
       6: aload_1
       7: invokestatic  #137                // Method isZero:([I)I
      10: if_icmpne     0
      13: return

  public static void reduce(int[], int[]);
    Code:
       0: sipush        21389
       3: aload_0
       4: iconst_5
       5: aload_0
       6: iconst_0
       7: aload_1
       8: iconst_0
       9: invokestatic  #158                // Method org/bouncycastle/math/raw/Nat160.mul33Add:(I[II[II[II)J
      12: lstore_2
      13: sipush        21389
      16: lload_2
      17: aload_1
      18: iconst_0
      19: invokestatic  #157                // Method org/bouncycastle/math/raw/Nat160.mul33DWordAdd:(IJ[II)I
      22: istore        4
      24: iload         4
      26: ifne          46
      29: aload_1
      30: iconst_4
      31: iaload
      32: iconst_m1
      33: if_icmpne     55
      36: aload_1
      37: getstatic     #132                // Field P:[I
      40: invokestatic  #161                // Method org/bouncycastle/math/raw/Nat160.gte:([I[I)Z
      43: ifeq          55
      46: iconst_5
      47: sipush        21389
      50: aload_1
      51: invokestatic  #141                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      54: pop
      55: return

  public static void reduce32(int, int[]);
    Code:
       0: iload_0
       1: ifeq          16
       4: sipush        21389
       7: iload_0
       8: aload_1
       9: iconst_0
      10: invokestatic  #156                // Method org/bouncycastle/math/raw/Nat160.mul33WordAdd:(II[II)I
      13: ifne          33
      16: aload_1
      17: iconst_4
      18: iaload
      19: iconst_m1
      20: if_icmpne     42
      23: aload_1
      24: getstatic     #132                // Field P:[I
      27: invokestatic  #161                // Method org/bouncycastle/math/raw/Nat160.gte:([I[I)Z
      30: ifeq          42
      33: iconst_5
      34: sipush        21389
      37: aload_1
      38: invokestatic  #141                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      41: pop
      42: return

  public static void square(int[], int[]);
    Code:
       0: invokestatic  #155                // Method org/bouncycastle/math/raw/Nat160.createExt:()[I
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #160                // Method org/bouncycastle/math/raw/Nat160.square:([I[I)V
       9: aload_2
      10: aload_1
      11: invokestatic  #138                // Method reduce:([I[I)V
      14: return

  public static void squareN(int[], int, int[]);
    Code:
       0: invokestatic  #155                // Method org/bouncycastle/math/raw/Nat160.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokestatic  #160                // Method org/bouncycastle/math/raw/Nat160.square:([I[I)V
       9: aload_3
      10: aload_2
      11: invokestatic  #138                // Method reduce:([I[I)V
      14: iinc          1, -1
      17: iload_1
      18: ifle          34
      21: aload_2
      22: aload_3
      23: invokestatic  #160                // Method org/bouncycastle/math/raw/Nat160.square:([I[I)V
      26: aload_3
      27: aload_2
      28: invokestatic  #138                // Method reduce:([I[I)V
      31: goto          14
      34: return

  public static void subtract(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #164                // Method org/bouncycastle/math/raw/Nat160.sub:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifeq          20
      11: iconst_5
      12: sipush        21389
      15: aload_2
      16: invokestatic  #142                // Method org/bouncycastle/math/raw/Nat.sub33From:(II[I)I
      19: pop
      20: return

  public static void subtractExt(int[], int[], int[]);
    Code:
       0: bipush        10
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #154                // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifeq          38
      13: getstatic     #134                // Field PExtInv:[I
      16: arraylength
      17: getstatic     #134                // Field PExtInv:[I
      20: aload_2
      21: invokestatic  #151                // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      24: ifeq          38
      27: bipush        10
      29: aload_2
      30: getstatic     #134                // Field PExtInv:[I
      33: arraylength
      34: invokestatic  #143                // Method org/bouncycastle/math/raw/Nat.decAt:(I[II)I
      37: pop
      38: return

  public static void twice(int[], int[]);
    Code:
       0: iconst_5
       1: aload_0
       2: iconst_0
       3: aload_1
       4: invokestatic  #147                // Method org/bouncycastle/math/raw/Nat.shiftUpBit:(I[II[I)I
       7: istore_2
       8: iload_2
       9: ifne          29
      12: aload_1
      13: iconst_4
      14: iaload
      15: iconst_m1
      16: if_icmpne     38
      19: aload_1
      20: getstatic     #132                // Field P:[I
      23: invokestatic  #161                // Method org/bouncycastle/math/raw/Nat160.gte:([I[I)Z
      26: ifeq          38
      29: iconst_5
      30: sipush        21389
      33: aload_1
      34: invokestatic  #141                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      37: pop
      38: return

  static {};
    Code:
       0: iconst_5
       1: newarray       int
       3: dup
       4: iconst_0
       5: sipush        -21389
       8: iastore
       9: dup
      10: iconst_1
      11: bipush        -2
      13: iastore
      14: dup
      15: iconst_2
      16: iconst_m1
      17: iastore
      18: dup
      19: iconst_3
      20: iconst_m1
      21: iastore
      22: dup
      23: iconst_4
      24: iconst_m1
      25: iastore
      26: putstatic     #132                // Field P:[I
      29: bipush        10
      31: newarray       int
      33: dup
      34: iconst_0
      35: ldc           #6                  // int 457489321
      37: iastore
      38: dup
      39: iconst_1
      40: ldc           #5                  // int 42778
      42: iastore
      43: dup
      44: iconst_2
      45: iconst_1
      46: iastore
      47: dup
      48: iconst_3
      49: iconst_0
      50: iastore
      51: dup
      52: iconst_4
      53: iconst_0
      54: iastore
      55: dup
      56: iconst_5
      57: ldc           #3                  // int -42778
      59: iastore
      60: dup
      61: bipush        6
      63: bipush        -3
      65: iastore
      66: dup
      67: bipush        7
      69: iconst_m1
      70: iastore
      71: dup
      72: bipush        8
      74: iconst_m1
      75: iastore
      76: dup
      77: bipush        9
      79: iconst_m1
      80: iastore
      81: putstatic     #133                // Field PExt:[I
      84: bipush        7
      86: newarray       int
      88: dup
      89: iconst_0
      90: ldc           #1                  // int -457489321
      92: iastore
      93: dup
      94: iconst_1
      95: ldc           #2                  // int -42779
      97: iastore
      98: dup
      99: iconst_2
     100: bipush        -2
     102: iastore
     103: dup
     104: iconst_3
     105: iconst_m1
     106: iastore
     107: dup
     108: iconst_4
     109: iconst_m1
     110: iastore
     111: dup
     112: iconst_5
     113: ldc           #4                  // int 42777
     115: iastore
     116: dup
     117: bipush        6
     119: iconst_2
     120: iastore
     121: putstatic     #134                // Field PExtInv:[I
     124: return
}
