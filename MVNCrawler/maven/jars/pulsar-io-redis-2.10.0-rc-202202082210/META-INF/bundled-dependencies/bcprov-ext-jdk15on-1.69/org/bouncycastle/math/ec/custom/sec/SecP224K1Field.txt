public class org.bouncycastle.math.ec.custom.sec.SecP224K1Field {
  static final int[] P;

  private static final int[] PExt;

  private static final int[] PExtInv;

  private static final int P6;

  private static final int PExt13;

  private static final int PInv33;

  public org.bouncycastle.math.ec.custom.sec.SecP224K1Field();
    Code:
       0: aload_0
       1: invokespecial #129                // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #155                // Method org/bouncycastle/math/raw/Nat224.add:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          29
      11: aload_2
      12: bipush        6
      14: iaload
      15: iconst_m1
      16: if_icmpne     39
      19: aload_2
      20: getstatic     #126                // Field P:[I
      23: invokestatic  #154                // Method org/bouncycastle/math/raw/Nat224.gte:([I[I)Z
      26: ifeq          39
      29: bipush        7
      31: sipush        6803
      34: aload_2
      35: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      38: pop
      39: return

  public static void addExt(int[], int[], int[]);
    Code:
       0: bipush        14
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #147                // Method org/bouncycastle/math/raw/Nat.add:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifne          33
      13: aload_2
      14: bipush        13
      16: iaload
      17: iconst_m1
      18: if_icmpne     58
      21: bipush        14
      23: aload_2
      24: getstatic     #127                // Field PExt:[I
      27: invokestatic  #146                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      30: ifeq          58
      33: getstatic     #128                // Field PExtInv:[I
      36: arraylength
      37: getstatic     #128                // Field PExtInv:[I
      40: aload_2
      41: invokestatic  #142                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      44: ifeq          58
      47: bipush        14
      49: aload_2
      50: getstatic     #128                // Field PExtInv:[I
      53: arraylength
      54: invokestatic  #138                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      57: pop
      58: return

  public static void addOne(int[], int[]);
    Code:
       0: bipush        7
       2: aload_0
       3: aload_1
       4: invokestatic  #143                // Method org/bouncycastle/math/raw/Nat.inc:(I[I[I)I
       7: istore_2
       8: iload_2
       9: ifne          30
      12: aload_1
      13: bipush        6
      15: iaload
      16: iconst_m1
      17: if_icmpne     40
      20: aload_1
      21: getstatic     #126                // Field P:[I
      24: invokestatic  #154                // Method org/bouncycastle/math/raw/Nat224.gte:([I[I)Z
      27: ifeq          40
      30: bipush        7
      32: sipush        6803
      35: aload_1
      36: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      39: pop
      40: return

  public static int[] fromBigInteger(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #159                // Method org/bouncycastle/math/raw/Nat224.fromBigInteger:(Ljava/math/BigInteger;)[I
       4: astore_1
       5: aload_1
       6: bipush        6
       8: iaload
       9: iconst_m1
      10: if_icmpne     33
      13: aload_1
      14: getstatic     #126                // Field P:[I
      17: invokestatic  #154                // Method org/bouncycastle/math/raw/Nat224.gte:([I[I)Z
      20: ifeq          33
      23: bipush        7
      25: sipush        6803
      28: aload_1
      29: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      32: pop
      33: aload_1
      34: areturn

  public static void half(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: iconst_1
       4: iand
       5: ifne          20
       8: bipush        7
      10: aload_0
      11: iconst_0
      12: aload_1
      13: invokestatic  #140                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II[I)I
      16: pop
      17: goto          37
      20: aload_0
      21: getstatic     #126                // Field P:[I
      24: aload_1
      25: invokestatic  #155                // Method org/bouncycastle/math/raw/Nat224.add:([I[I[I)I
      28: istore_2
      29: bipush        7
      31: aload_1
      32: iload_2
      33: invokestatic  #139                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II)I
      36: pop
      37: return

  public static void inv(int[], int[]);
    Code:
       0: getstatic     #126                // Field P:[I
       3: aload_0
       4: aload_1
       5: invokestatic  #134                // Method org/bouncycastle/math/raw/Mod.checkedModOddInverse:([I[I[I)V
       8: return

  public static int isZero(int[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: bipush        7
       7: if_icmpge     22
      10: iload_1
      11: aload_0
      12: iload_2
      13: iaload
      14: ior
      15: istore_1
      16: iinc          2, 1
      19: goto          4
      22: iload_1
      23: iconst_1
      24: iushr
      25: iload_1
      26: iconst_1
      27: iand
      28: ior
      29: istore_1
      30: iload_1
      31: iconst_1
      32: isub
      33: bipush        31
      35: ishr
      36: ireturn

  public static void multiply(int[], int[], int[]);
    Code:
       0: invokestatic  #149                // Method org/bouncycastle/math/raw/Nat224.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #158                // Method org/bouncycastle/math/raw/Nat224.mul:([I[I[I)V
      10: aload_3
      11: aload_2
      12: invokestatic  #132                // Method reduce:([I[I)V
      15: return

  public static void multiplyAddToExt(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #156                // Method org/bouncycastle/math/raw/Nat224.mulAddTo:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          31
      11: aload_2
      12: bipush        13
      14: iaload
      15: iconst_m1
      16: if_icmpne     56
      19: bipush        14
      21: aload_2
      22: getstatic     #127                // Field PExt:[I
      25: invokestatic  #146                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      28: ifeq          56
      31: getstatic     #128                // Field PExtInv:[I
      34: arraylength
      35: getstatic     #128                // Field PExtInv:[I
      38: aload_2
      39: invokestatic  #142                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      42: ifeq          56
      45: bipush        14
      47: aload_2
      48: getstatic     #128                // Field PExtInv:[I
      51: arraylength
      52: invokestatic  #138                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      55: pop
      56: return

  public static void negate(int[], int[]);
    Code:
       0: iconst_0
       1: aload_0
       2: invokestatic  #131                // Method isZero:([I)I
       5: if_icmpeq     22
       8: getstatic     #126                // Field P:[I
      11: getstatic     #126                // Field P:[I
      14: aload_1
      15: invokestatic  #157                // Method org/bouncycastle/math/raw/Nat224.sub:([I[I[I)I
      18: pop
      19: goto          31
      22: getstatic     #126                // Field P:[I
      25: aload_0
      26: aload_1
      27: invokestatic  #157                // Method org/bouncycastle/math/raw/Nat224.sub:([I[I[I)I
      30: pop
      31: return

  public static void random(java.security.SecureRandom, int[]);
    Code:
       0: bipush        28
       2: newarray       byte
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #130                // Method java/security/SecureRandom.nextBytes:([B)V
      10: aload_2
      11: iconst_0
      12: aload_1
      13: iconst_0
      14: bipush        7
      16: invokestatic  #160                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI[III)V
      19: iconst_0
      20: bipush        7
      22: aload_1
      23: getstatic     #126                // Field P:[I
      26: invokestatic  #144                // Method org/bouncycastle/math/raw/Nat.lessThan:(I[I[I)I
      29: if_icmpeq     5
      32: return

  public static void randomMult(java.security.SecureRandom, int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method random:(Ljava/security/SecureRandom;[I)V
       5: iconst_0
       6: aload_1
       7: invokestatic  #131                // Method isZero:([I)I
      10: if_icmpne     0
      13: return

  public static void reduce(int[], int[]);
    Code:
       0: sipush        6803
       3: aload_0
       4: bipush        7
       6: aload_0
       7: iconst_0
       8: aload_1
       9: iconst_0
      10: invokestatic  #152                // Method org/bouncycastle/math/raw/Nat224.mul33Add:(I[II[II[II)J
      13: lstore_2
      14: sipush        6803
      17: lload_2
      18: aload_1
      19: iconst_0
      20: invokestatic  #151                // Method org/bouncycastle/math/raw/Nat224.mul33DWordAdd:(IJ[II)I
      23: istore        4
      25: iload         4
      27: ifne          48
      30: aload_1
      31: bipush        6
      33: iaload
      34: iconst_m1
      35: if_icmpne     58
      38: aload_1
      39: getstatic     #126                // Field P:[I
      42: invokestatic  #154                // Method org/bouncycastle/math/raw/Nat224.gte:([I[I)Z
      45: ifeq          58
      48: bipush        7
      50: sipush        6803
      53: aload_1
      54: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      57: pop
      58: return

  public static void reduce32(int, int[]);
    Code:
       0: iload_0
       1: ifeq          16
       4: sipush        6803
       7: iload_0
       8: aload_1
       9: iconst_0
      10: invokestatic  #150                // Method org/bouncycastle/math/raw/Nat224.mul33WordAdd:(II[II)I
      13: ifne          34
      16: aload_1
      17: bipush        6
      19: iaload
      20: iconst_m1
      21: if_icmpne     44
      24: aload_1
      25: getstatic     #126                // Field P:[I
      28: invokestatic  #154                // Method org/bouncycastle/math/raw/Nat224.gte:([I[I)Z
      31: ifeq          44
      34: bipush        7
      36: sipush        6803
      39: aload_1
      40: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      43: pop
      44: return

  public static void square(int[], int[]);
    Code:
       0: invokestatic  #149                // Method org/bouncycastle/math/raw/Nat224.createExt:()[I
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #153                // Method org/bouncycastle/math/raw/Nat224.square:([I[I)V
       9: aload_2
      10: aload_1
      11: invokestatic  #132                // Method reduce:([I[I)V
      14: return

  public static void squareN(int[], int, int[]);
    Code:
       0: invokestatic  #149                // Method org/bouncycastle/math/raw/Nat224.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokestatic  #153                // Method org/bouncycastle/math/raw/Nat224.square:([I[I)V
       9: aload_3
      10: aload_2
      11: invokestatic  #132                // Method reduce:([I[I)V
      14: iinc          1, -1
      17: iload_1
      18: ifle          34
      21: aload_2
      22: aload_3
      23: invokestatic  #153                // Method org/bouncycastle/math/raw/Nat224.square:([I[I)V
      26: aload_3
      27: aload_2
      28: invokestatic  #132                // Method reduce:([I[I)V
      31: goto          14
      34: return

  public static void subtract(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #157                // Method org/bouncycastle/math/raw/Nat224.sub:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifeq          21
      11: bipush        7
      13: sipush        6803
      16: aload_2
      17: invokestatic  #136                // Method org/bouncycastle/math/raw/Nat.sub33From:(II[I)I
      20: pop
      21: return

  public static void subtractExt(int[], int[], int[]);
    Code:
       0: bipush        14
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #148                // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifeq          38
      13: getstatic     #128                // Field PExtInv:[I
      16: arraylength
      17: getstatic     #128                // Field PExtInv:[I
      20: aload_2
      21: invokestatic  #145                // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      24: ifeq          38
      27: bipush        14
      29: aload_2
      30: getstatic     #128                // Field PExtInv:[I
      33: arraylength
      34: invokestatic  #137                // Method org/bouncycastle/math/raw/Nat.decAt:(I[II)I
      37: pop
      38: return

  public static void twice(int[], int[]);
    Code:
       0: bipush        7
       2: aload_0
       3: iconst_0
       4: aload_1
       5: invokestatic  #141                // Method org/bouncycastle/math/raw/Nat.shiftUpBit:(I[II[I)I
       8: istore_2
       9: iload_2
      10: ifne          31
      13: aload_1
      14: bipush        6
      16: iaload
      17: iconst_m1
      18: if_icmpne     41
      21: aload_1
      22: getstatic     #126                // Field P:[I
      25: invokestatic  #154                // Method org/bouncycastle/math/raw/Nat224.gte:([I[I)Z
      28: ifeq          41
      31: bipush        7
      33: sipush        6803
      36: aload_1
      37: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      40: pop
      41: return

  static {};
    Code:
       0: bipush        7
       2: newarray       int
       4: dup
       5: iconst_0
       6: sipush        -6803
       9: iastore
      10: dup
      11: iconst_1
      12: bipush        -2
      14: iastore
      15: dup
      16: iconst_2
      17: iconst_m1
      18: iastore
      19: dup
      20: iconst_3
      21: iconst_m1
      22: iastore
      23: dup
      24: iconst_4
      25: iconst_m1
      26: iastore
      27: dup
      28: iconst_5
      29: iconst_m1
      30: iastore
      31: dup
      32: bipush        6
      34: iconst_m1
      35: iastore
      36: putstatic     #126                // Field P:[I
      39: bipush        14
      41: newarray       int
      43: dup
      44: iconst_0
      45: ldc           #2                  // int 46280809
      47: iastore
      48: dup
      49: iconst_1
      50: sipush        13606
      53: iastore
      54: dup
      55: iconst_2
      56: iconst_1
      57: iastore
      58: dup
      59: iconst_3
      60: iconst_0
      61: iastore
      62: dup
      63: iconst_4
      64: iconst_0
      65: iastore
      66: dup
      67: iconst_5
      68: iconst_0
      69: iastore
      70: dup
      71: bipush        6
      73: iconst_0
      74: iastore
      75: dup
      76: bipush        7
      78: sipush        -13606
      81: iastore
      82: dup
      83: bipush        8
      85: bipush        -3
      87: iastore
      88: dup
      89: bipush        9
      91: iconst_m1
      92: iastore
      93: dup
      94: bipush        10
      96: iconst_m1
      97: iastore
      98: dup
      99: bipush        11
     101: iconst_m1
     102: iastore
     103: dup
     104: bipush        12
     106: iconst_m1
     107: iastore
     108: dup
     109: bipush        13
     111: iconst_m1
     112: iastore
     113: putstatic     #127                // Field PExt:[I
     116: bipush        9
     118: newarray       int
     120: dup
     121: iconst_0
     122: ldc           #1                  // int -46280809
     124: iastore
     125: dup
     126: iconst_1
     127: sipush        -13607
     130: iastore
     131: dup
     132: iconst_2
     133: bipush        -2
     135: iastore
     136: dup
     137: iconst_3
     138: iconst_m1
     139: iastore
     140: dup
     141: iconst_4
     142: iconst_m1
     143: iastore
     144: dup
     145: iconst_5
     146: iconst_m1
     147: iastore
     148: dup
     149: bipush        6
     151: iconst_m1
     152: iastore
     153: dup
     154: bipush        7
     156: sipush        13605
     159: iastore
     160: dup
     161: bipush        8
     163: iconst_2
     164: iastore
     165: putstatic     #128                // Field PExtInv:[I
     168: return
}
