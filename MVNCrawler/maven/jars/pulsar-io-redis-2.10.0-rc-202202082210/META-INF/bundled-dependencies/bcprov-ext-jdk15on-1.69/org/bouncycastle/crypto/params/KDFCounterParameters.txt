public final class org.bouncycastle.crypto.params.KDFCounterParameters implements org.bouncycastle.crypto.DerivationParameters {
  private byte[] ki;

  private byte[] fixedInputDataCounterPrefix;

  private byte[] fixedInputDataCounterSuffix;

  private int r;

  public org.bouncycastle.crypto.params.KDFCounterParameters(byte[], byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: iload_3
       5: invokespecial #49                 // Method "<init>":([B[B[BI)V
       8: return

  public org.bouncycastle.crypto.params.KDFCounterParameters(byte[], byte[], byte[], int);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #29                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #1                  // String A KDF requires Ki (a seed) as input
      14: invokespecial #47                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: invokestatic  #50                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      23: putfield      #46                 // Field ki:[B
      26: aload_2
      27: ifnonnull     40
      30: aload_0
      31: iconst_0
      32: newarray       byte
      34: putfield      #44                 // Field fixedInputDataCounterPrefix:[B
      37: goto          48
      40: aload_0
      41: aload_2
      42: invokestatic  #50                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      45: putfield      #44                 // Field fixedInputDataCounterPrefix:[B
      48: aload_3
      49: ifnonnull     62
      52: aload_0
      53: iconst_0
      54: newarray       byte
      56: putfield      #45                 // Field fixedInputDataCounterSuffix:[B
      59: goto          70
      62: aload_0
      63: aload_3
      64: invokestatic  #50                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      67: putfield      #45                 // Field fixedInputDataCounterSuffix:[B
      70: iload         4
      72: bipush        8
      74: if_icmpeq     108
      77: iload         4
      79: bipush        16
      81: if_icmpeq     108
      84: iload         4
      86: bipush        24
      88: if_icmpeq     108
      91: iload         4
      93: bipush        32
      95: if_icmpeq     108
      98: new           #29                 // class java/lang/IllegalArgumentException
     101: dup
     102: ldc           #2                  // String Length of counter should be 8, 16, 24 or 32
     104: invokespecial #47                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload_0
     109: iload         4
     111: putfield      #43                 // Field r:I
     114: return

  public byte[] getKI();
    Code:
       0: aload_0
       1: getfield      #46                 // Field ki:[B
       4: areturn

  public byte[] getFixedInputData();
    Code:
       0: aload_0
       1: getfield      #45                 // Field fixedInputDataCounterSuffix:[B
       4: invokestatic  #50                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public byte[] getFixedInputDataCounterPrefix();
    Code:
       0: aload_0
       1: getfield      #44                 // Field fixedInputDataCounterPrefix:[B
       4: invokestatic  #50                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public byte[] getFixedInputDataCounterSuffix();
    Code:
       0: aload_0
       1: getfield      #45                 // Field fixedInputDataCounterSuffix:[B
       4: invokestatic  #50                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public int getR();
    Code:
       0: aload_0
       1: getfield      #43                 // Field r:I
       4: ireturn
}
