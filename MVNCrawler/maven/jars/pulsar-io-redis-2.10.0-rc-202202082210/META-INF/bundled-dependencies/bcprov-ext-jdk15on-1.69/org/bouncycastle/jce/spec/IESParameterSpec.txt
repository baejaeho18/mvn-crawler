public class org.bouncycastle.jce.spec.IESParameterSpec implements java.security.spec.AlgorithmParameterSpec {
  private byte[] derivation;

  private byte[] encoding;

  private int macKeySize;

  private int cipherKeySize;

  private byte[] nonce;

  private boolean usePointCompression;

  public org.bouncycastle.jce.spec.IESParameterSpec(byte[], byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_m1
       5: aconst_null
       6: iconst_0
       7: invokespecial #58                 // Method "<init>":([B[BII[BZ)V
      10: return

  public org.bouncycastle.jce.spec.IESParameterSpec(byte[], byte[], int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: iconst_0
       9: invokespecial #58                 // Method "<init>":([B[BII[BZ)V
      12: return

  public org.bouncycastle.jce.spec.IESParameterSpec(byte[], byte[], int, int, byte[], boolean);
    Code:
       0: aload_0
       1: invokespecial #56                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        31
       8: aload_0
       9: aload_1
      10: arraylength
      11: newarray       byte
      13: putfield      #53                 // Field derivation:[B
      16: aload_1
      17: iconst_0
      18: aload_0
      19: getfield      #53                 // Field derivation:[B
      22: iconst_0
      23: aload_1
      24: arraylength
      25: invokestatic  #57                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      28: goto          36
      31: aload_0
      32: aconst_null
      33: putfield      #53                 // Field derivation:[B
      36: aload_2
      37: ifnull        63
      40: aload_0
      41: aload_2
      42: arraylength
      43: newarray       byte
      45: putfield      #54                 // Field encoding:[B
      48: aload_2
      49: iconst_0
      50: aload_0
      51: getfield      #54                 // Field encoding:[B
      54: iconst_0
      55: aload_2
      56: arraylength
      57: invokestatic  #57                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      60: goto          68
      63: aload_0
      64: aconst_null
      65: putfield      #54                 // Field encoding:[B
      68: aload_0
      69: iload_3
      70: putfield      #51                 // Field macKeySize:I
      73: aload_0
      74: iload         4
      76: putfield      #50                 // Field cipherKeySize:I
      79: aload_0
      80: aload         5
      82: invokestatic  #59                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      85: putfield      #55                 // Field nonce:[B
      88: aload_0
      89: iload         6
      91: putfield      #52                 // Field usePointCompression:Z
      94: return

  public byte[] getDerivationV();
    Code:
       0: aload_0
       1: getfield      #53                 // Field derivation:[B
       4: invokestatic  #59                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public byte[] getEncodingV();
    Code:
       0: aload_0
       1: getfield      #54                 // Field encoding:[B
       4: invokestatic  #59                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public int getMacKeySize();
    Code:
       0: aload_0
       1: getfield      #51                 // Field macKeySize:I
       4: ireturn

  public int getCipherKeySize();
    Code:
       0: aload_0
       1: getfield      #50                 // Field cipherKeySize:I
       4: ireturn

  public byte[] getNonce();
    Code:
       0: aload_0
       1: getfield      #55                 // Field nonce:[B
       4: invokestatic  #59                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public void setPointCompression(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #52                 // Field usePointCompression:Z
       5: return

  public boolean getPointCompression();
    Code:
       0: aload_0
       1: getfield      #52                 // Field usePointCompression:Z
       4: ireturn
}
