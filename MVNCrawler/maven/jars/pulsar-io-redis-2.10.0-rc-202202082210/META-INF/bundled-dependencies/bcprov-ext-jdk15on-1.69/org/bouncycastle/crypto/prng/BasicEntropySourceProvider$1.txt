class org.bouncycastle.crypto.prng.BasicEntropySourceProvider$1 implements org.bouncycastle.crypto.prng.EntropySource {
  final int val$bitsRequired;

  final org.bouncycastle.crypto.prng.BasicEntropySourceProvider this$0;

  org.bouncycastle.crypto.prng.BasicEntropySourceProvider$1(org.bouncycastle.crypto.prng.BasicEntropySourceProvider, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field this$0:Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;
       5: aload_0
       6: iload_2
       7: putfield      #46                 // Field val$bitsRequired:I
      10: aload_0
      11: invokespecial #48                 // Method java/lang/Object."<init>":()V
      14: return

  public boolean isPredictionResistant();
    Code:
       0: aload_0
       1: getfield      #47                 // Field this$0:Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;
       4: invokestatic  #51                 // Method org/bouncycastle/crypto/prng/BasicEntropySourceProvider.access$000:(Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;)Z
       7: ireturn

  public byte[] getEntropy();
    Code:
       0: aload_0
       1: getfield      #47                 // Field this$0:Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;
       4: invokestatic  #52                 // Method org/bouncycastle/crypto/prng/BasicEntropySourceProvider.access$100:(Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;)Ljava/security/SecureRandom;
       7: instanceof    #31                 // class org/bouncycastle/crypto/prng/SP800SecureRandom
      10: ifne          26
      13: aload_0
      14: getfield      #47                 // Field this$0:Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;
      17: invokestatic  #52                 // Method org/bouncycastle/crypto/prng/BasicEntropySourceProvider.access$100:(Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;)Ljava/security/SecureRandom;
      20: instanceof    #32                 // class org/bouncycastle/crypto/prng/X931SecureRandom
      23: ifeq          52
      26: aload_0
      27: getfield      #46                 // Field val$bitsRequired:I
      30: bipush        7
      32: iadd
      33: bipush        8
      35: idiv
      36: newarray       byte
      38: astore_1
      39: aload_0
      40: getfield      #47                 // Field this$0:Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;
      43: invokestatic  #52                 // Method org/bouncycastle/crypto/prng/BasicEntropySourceProvider.access$100:(Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;)Ljava/security/SecureRandom;
      46: aload_1
      47: invokevirtual #50                 // Method java/security/SecureRandom.nextBytes:([B)V
      50: aload_1
      51: areturn
      52: aload_0
      53: getfield      #47                 // Field this$0:Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;
      56: invokestatic  #52                 // Method org/bouncycastle/crypto/prng/BasicEntropySourceProvider.access$100:(Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;)Ljava/security/SecureRandom;
      59: aload_0
      60: getfield      #46                 // Field val$bitsRequired:I
      63: bipush        7
      65: iadd
      66: bipush        8
      68: idiv
      69: invokevirtual #49                 // Method java/security/SecureRandom.generateSeed:(I)[B
      72: areturn

  public int entropySize();
    Code:
       0: aload_0
       1: getfield      #46                 // Field val$bitsRequired:I
       4: ireturn
}
