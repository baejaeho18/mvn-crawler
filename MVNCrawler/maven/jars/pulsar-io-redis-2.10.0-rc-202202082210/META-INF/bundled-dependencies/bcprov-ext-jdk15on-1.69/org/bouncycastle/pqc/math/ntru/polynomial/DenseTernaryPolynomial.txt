public class org.bouncycastle.pqc.math.ntru.polynomial.DenseTernaryPolynomial extends org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial implements org.bouncycastle.pqc.math.ntru.polynomial.TernaryPolynomial {
  org.bouncycastle.pqc.math.ntru.polynomial.DenseTernaryPolynomial(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #88                 // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial."<init>":(I)V
       5: aload_0
       6: invokespecial #85                 // Method checkTernarity:()V
       9: return

  public org.bouncycastle.pqc.math.ntru.polynomial.DenseTernaryPolynomial(org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #78                 // Field org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.coeffs:[I
       5: invokespecial #87                 // Method "<init>":([I)V
       8: return

  public org.bouncycastle.pqc.math.ntru.polynomial.DenseTernaryPolynomial(int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #90                 // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial."<init>":([I)V
       5: aload_0
       6: invokespecial #85                 // Method checkTernarity:()V
       9: return

  private void checkTernarity();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #77                 // Field coeffs:[I
       7: arraylength
       8: if_icmpeq     66
      11: aload_0
      12: getfield      #77                 // Field coeffs:[I
      15: iload_1
      16: iaload
      17: istore_2
      18: iload_2
      19: iconst_m1
      20: if_icmplt     28
      23: iload_2
      24: iconst_1
      25: if_icmple     60
      28: new           #38                 // class java/lang/IllegalStateException
      31: dup
      32: new           #39                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #2                  // String Illegal value:
      41: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: iload_2
      45: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #1                  // String , must be one of {-1, 0, 1}
      50: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #79                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: iinc          1, 1
      63: goto          2
      66: return

  public static org.bouncycastle.pqc.math.ntru.polynomial.DenseTernaryPolynomial generateRandom(int, int, int, java.security.SecureRandom);
    Code:
       0: iload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: invokestatic  #96                 // Method org/bouncycastle/pqc/math/ntru/util/Util.generateRandomTernary:(IIILjava/security/SecureRandom;)[I
       7: astore        4
       9: new           #41                 // class org/bouncycastle/pqc/math/ntru/polynomial/DenseTernaryPolynomial
      12: dup
      13: aload         4
      15: invokespecial #87                 // Method "<init>":([I)V
      18: areturn

  public static org.bouncycastle.pqc.math.ntru.polynomial.DenseTernaryPolynomial generateRandom(int, java.security.SecureRandom);
    Code:
       0: new           #41                 // class org/bouncycastle/pqc/math/ntru/polynomial/DenseTernaryPolynomial
       3: dup
       4: iload_0
       5: invokespecial #86                 // Method "<init>":(I)V
       8: astore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: iload_0
      13: if_icmpge     35
      16: aload_2
      17: getfield      #77                 // Field coeffs:[I
      20: iload_3
      21: aload_1
      22: iconst_3
      23: invokevirtual #84                 // Method java/security/SecureRandom.nextInt:(I)I
      26: iconst_1
      27: isub
      28: iastore
      29: iinc          3, 1
      32: goto          11
      35: aload_2
      36: areturn

  public org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial mult(org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial, int);
    Code:
       0: iload_2
       1: sipush        2048
       4: if_icmpne     42
       7: aload_1
       8: invokevirtual #91                 // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.clone:()Ljava/lang/Object;
      11: checkcast     #42                 // class org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial
      14: astore_3
      15: aload_3
      16: sipush        2048
      19: invokevirtual #89                 // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.modPositive:(I)V
      22: new           #43                 // class org/bouncycastle/pqc/math/ntru/polynomial/LongPolynomial5
      25: dup
      26: aload_3
      27: invokespecial #94                 // Method org/bouncycastle/pqc/math/ntru/polynomial/LongPolynomial5."<init>":(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
      30: astore        4
      32: aload         4
      34: aload_0
      35: invokevirtual #95                 // Method org/bouncycastle/pqc/math/ntru/polynomial/LongPolynomial5.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/TernaryPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/LongPolynomial5;
      38: invokevirtual #93                 // Method org/bouncycastle/pqc/math/ntru/polynomial/LongPolynomial5.toIntegerPolynomial:()Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      41: areturn
      42: aload_0
      43: aload_1
      44: iload_2
      45: invokespecial #92                 // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;I)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      48: areturn

  public int[] getOnes();
    Code:
       0: aload_0
       1: getfield      #77                 // Field coeffs:[I
       4: arraylength
       5: istore_1
       6: iload_1
       7: newarray       int
       9: astore_2
      10: iconst_0
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_1
      18: if_icmpge     50
      21: aload_0
      22: getfield      #77                 // Field coeffs:[I
      25: iload         4
      27: iaload
      28: istore        5
      30: iload         5
      32: iconst_1
      33: if_icmpne     44
      36: aload_2
      37: iload_3
      38: iinc          3, 1
      41: iload         4
      43: iastore
      44: iinc          4, 1
      47: goto          15
      50: aload_2
      51: iload_3
      52: invokestatic  #97                 // Method org/bouncycastle/util/Arrays.copyOf:([II)[I
      55: areturn

  public int[] getNegOnes();
    Code:
       0: aload_0
       1: getfield      #77                 // Field coeffs:[I
       4: arraylength
       5: istore_1
       6: iload_1
       7: newarray       int
       9: astore_2
      10: iconst_0
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_1
      18: if_icmpge     50
      21: aload_0
      22: getfield      #77                 // Field coeffs:[I
      25: iload         4
      27: iaload
      28: istore        5
      30: iload         5
      32: iconst_m1
      33: if_icmpne     44
      36: aload_2
      37: iload_3
      38: iinc          3, 1
      41: iload         4
      43: iastore
      44: iinc          4, 1
      47: goto          15
      50: aload_2
      51: iload_3
      52: invokestatic  #97                 // Method org/bouncycastle/util/Arrays.copyOf:([II)[I
      55: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #77                 // Field coeffs:[I
       4: arraylength
       5: ireturn
}
