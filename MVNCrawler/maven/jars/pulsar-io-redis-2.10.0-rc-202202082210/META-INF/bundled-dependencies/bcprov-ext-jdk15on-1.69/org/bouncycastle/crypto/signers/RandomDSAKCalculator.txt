public class org.bouncycastle.crypto.signers.RandomDSAKCalculator implements org.bouncycastle.crypto.signers.DSAKCalculator {
  private static final java.math.BigInteger ZERO;

  private java.math.BigInteger q;

  private java.security.SecureRandom random;

  public org.bouncycastle.crypto.signers.RandomDSAKCalculator();
    Code:
       0: aload_0
       1: invokespecial #55                 // Method java/lang/Object."<init>":()V
       4: return

  public boolean isDeterministic();
    Code:
       0: iconst_0
       1: ireturn

  public void init(java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field q:Ljava/math/BigInteger;
       5: aload_0
       6: aload_2
       7: putfield      #53                 // Field random:Ljava/security/SecureRandom;
      10: return

  public void init(java.math.BigInteger, java.math.BigInteger, byte[]);
    Code:
       0: new           #25                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #1                  // String Operation not supported
       6: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.math.BigInteger nextK();
    Code:
       0: aload_0
       1: getfield      #52                 // Field q:Ljava/math/BigInteger;
       4: invokevirtual #56                 // Method java/math/BigInteger.bitLength:()I
       7: istore_1
       8: iload_1
       9: aload_0
      10: getfield      #53                 // Field random:Ljava/security/SecureRandom;
      13: invokestatic  #60                 // Method org/bouncycastle/util/BigIntegers.createRandomBigInteger:(ILjava/security/SecureRandom;)Ljava/math/BigInteger;
      16: astore_2
      17: aload_2
      18: getstatic     #51                 // Field ZERO:Ljava/math/BigInteger;
      21: invokevirtual #57                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      24: ifne          8
      27: aload_2
      28: aload_0
      29: getfield      #52                 // Field q:Ljava/math/BigInteger;
      32: invokevirtual #59                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      35: ifge          8
      38: aload_2
      39: areturn

  static {};
    Code:
       0: lconst_0
       1: invokestatic  #58                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #51                 // Field ZERO:Ljava/math/BigInteger;
       7: return
}
