public class org.bouncycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters extends org.bouncycastle.crypto.params.AsymmetricKeyParameter {
  private org.bouncycastle.pqc.crypto.ntru.NTRUSigningParameters params;

  public org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial h;

  public org.bouncycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters(org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial, org.bouncycastle.pqc.crypto.ntru.NTRUSigningParameters);
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #64                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: aload_1
       7: putfield      #60                 // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      10: aload_0
      11: aload_2
      12: putfield      #59                 // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      15: return

  public org.bouncycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters(byte[], org.bouncycastle.pqc.crypto.ntru.NTRUSigningParameters);
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #64                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: getfield      #57                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.N:I
      11: aload_2
      12: getfield      #58                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.q:I
      15: invokestatic  #70                 // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.fromBinary:([BII)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      18: putfield      #60                 // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      21: aload_0
      22: aload_2
      23: putfield      #59                 // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      26: return

  public org.bouncycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters(java.io.InputStream, org.bouncycastle.pqc.crypto.ntru.NTRUSigningParameters) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #64                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: getfield      #57                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.N:I
      11: aload_2
      12: getfield      #58                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.q:I
      15: invokestatic  #71                 // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.fromBinary:(Ljava/io/InputStream;II)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      18: putfield      #60                 // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      21: aload_0
      22: aload_2
      23: putfield      #59                 // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      26: return

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: getfield      #60                 // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
       4: aload_0
       5: getfield      #59                 // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
       8: getfield      #58                 // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.q:I
      11: invokevirtual #68                 // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.toBinary:(I)[B
      14: areturn

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #67                 // Method getEncoded:()[B
       5: invokevirtual #61                 // Method java/io/OutputStream.write:([B)V
       8: return

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_2
       2: bipush        31
       4: iload_2
       5: imul
       6: aload_0
       7: getfield      #60                 // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      10: ifnonnull     17
      13: iconst_0
      14: goto          24
      17: aload_0
      18: getfield      #60                 // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      21: invokevirtual #62                 // Method java/lang/Object.hashCode:()I
      24: iadd
      25: istore_2
      26: bipush        31
      28: iload_2
      29: imul
      30: aload_0
      31: getfield      #59                 // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      34: ifnonnull     41
      37: iconst_0
      38: goto          48
      41: aload_0
      42: getfield      #59                 // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      45: invokevirtual #65                 // Method org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.hashCode:()I
      48: iadd
      49: istore_2
      50: iload_2
      51: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #63                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #63                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #32                 // class org/bouncycastle/pqc/crypto/ntru/NTRUSigningPublicKeyParameters
      30: astore_2
      31: aload_0
      32: getfield      #60                 // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      35: ifnonnull     47
      38: aload_2
      39: getfield      #60                 // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      42: ifnull        63
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #60                 // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      51: aload_2
      52: getfield      #60                 // Field h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      55: invokevirtual #69                 // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.equals:(Ljava/lang/Object;)Z
      58: ifne          63
      61: iconst_0
      62: ireturn
      63: aload_0
      64: getfield      #59                 // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      67: ifnonnull     79
      70: aload_2
      71: getfield      #59                 // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      74: ifnull        95
      77: iconst_0
      78: ireturn
      79: aload_0
      80: getfield      #59                 // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      83: aload_2
      84: getfield      #59                 // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      87: invokevirtual #66                 // Method org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.equals:(Ljava/lang/Object;)Z
      90: ifne          95
      93: iconst_0
      94: ireturn
      95: iconst_1
      96: ireturn
}
