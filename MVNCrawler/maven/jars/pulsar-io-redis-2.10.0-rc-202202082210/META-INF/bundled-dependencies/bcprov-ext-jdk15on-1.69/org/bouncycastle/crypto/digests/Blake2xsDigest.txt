public class org.bouncycastle.crypto.digests.Blake2xsDigest implements org.bouncycastle.crypto.Xof {
  public static final int UNKNOWN_DIGEST_LENGTH;

  private static final int DIGEST_LENGTH;

  private static final long MAX_NUMBER_BLOCKS;

  private int digestLength;

  private org.bouncycastle.crypto.digests.Blake2sDigest hash;

  private byte[] h0;

  private byte[] buf;

  private int bufPos;

  private int digestPos;

  private long blockPos;

  private long nodeOffset;

  public org.bouncycastle.crypto.digests.Blake2xsDigest();
    Code:
       0: aload_0
       1: ldc           #1                  // int 65535
       3: invokespecial #130                // Method "<init>":(I)V
       6: return

  public org.bouncycastle.crypto.digests.Blake2xsDigest(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: aconst_null
       4: aconst_null
       5: invokespecial #131                // Method "<init>":(I[B[B[B)V
       8: return

  public org.bouncycastle.crypto.digests.Blake2xsDigest(int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: invokespecial #131                // Method "<init>":(I[B[B[B)V
       8: return

  public org.bouncycastle.crypto.digests.Blake2xsDigest(int, byte[], byte[], byte[]);
    Code:
       0: aload_0
       1: invokespecial #116                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #112                // Field h0:[B
       9: aload_0
      10: bipush        32
      12: newarray       byte
      14: putfield      #111                // Field buf:[B
      17: aload_0
      18: bipush        32
      20: putfield      #106                // Field bufPos:I
      23: aload_0
      24: iconst_0
      25: putfield      #108                // Field digestPos:I
      28: aload_0
      29: lconst_0
      30: putfield      #109                // Field blockPos:J
      33: iload_1
      34: iconst_1
      35: if_icmplt     44
      38: iload_1
      39: ldc           #1                  // int 65535
      41: if_icmple     54
      44: new           #65                 // class java/lang/IllegalArgumentException
      47: dup
      48: ldc           #3                  // String BLAKE2xs digest length must be between 1 and 2^16-1
      50: invokespecial #114                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: iload_1
      56: putfield      #107                // Field digestLength:I
      59: aload_0
      60: aload_0
      61: invokespecial #127                // Method computeNodeOffset:()J
      64: putfield      #110                // Field nodeOffset:J
      67: aload_0
      68: new           #69                 // class org/bouncycastle/crypto/digests/Blake2sDigest
      71: dup
      72: bipush        32
      74: aload_2
      75: aload_3
      76: aload         4
      78: aload_0
      79: getfield      #110                // Field nodeOffset:J
      82: invokespecial #122                // Method org/bouncycastle/crypto/digests/Blake2sDigest."<init>":(I[B[B[BJ)V
      85: putfield      #113                // Field hash:Lorg/bouncycastle/crypto/digests/Blake2sDigest;
      88: return

  public org.bouncycastle.crypto.digests.Blake2xsDigest(org.bouncycastle.crypto.digests.Blake2xsDigest);
    Code:
       0: aload_0
       1: invokespecial #116                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #112                // Field h0:[B
       9: aload_0
      10: bipush        32
      12: newarray       byte
      14: putfield      #111                // Field buf:[B
      17: aload_0
      18: bipush        32
      20: putfield      #106                // Field bufPos:I
      23: aload_0
      24: iconst_0
      25: putfield      #108                // Field digestPos:I
      28: aload_0
      29: lconst_0
      30: putfield      #109                // Field blockPos:J
      33: aload_0
      34: aload_1
      35: getfield      #107                // Field digestLength:I
      38: putfield      #107                // Field digestLength:I
      41: aload_0
      42: new           #69                 // class org/bouncycastle/crypto/digests/Blake2sDigest
      45: dup
      46: aload_1
      47: getfield      #113                // Field hash:Lorg/bouncycastle/crypto/digests/Blake2sDigest;
      50: invokespecial #125                // Method org/bouncycastle/crypto/digests/Blake2sDigest."<init>":(Lorg/bouncycastle/crypto/digests/Blake2sDigest;)V
      53: putfield      #113                // Field hash:Lorg/bouncycastle/crypto/digests/Blake2sDigest;
      56: aload_0
      57: aload_1
      58: getfield      #112                // Field h0:[B
      61: invokestatic  #134                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      64: putfield      #112                // Field h0:[B
      67: aload_0
      68: aload_1
      69: getfield      #111                // Field buf:[B
      72: invokestatic  #134                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      75: putfield      #111                // Field buf:[B
      78: aload_0
      79: aload_1
      80: getfield      #106                // Field bufPos:I
      83: putfield      #106                // Field bufPos:I
      86: aload_0
      87: aload_1
      88: getfield      #108                // Field digestPos:I
      91: putfield      #108                // Field digestPos:I
      94: aload_0
      95: aload_1
      96: getfield      #109                // Field blockPos:J
      99: putfield      #109                // Field blockPos:J
     102: aload_0
     103: aload_1
     104: getfield      #110                // Field nodeOffset:J
     107: putfield      #110                // Field nodeOffset:J
     110: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #2                  // String BLAKE2xs
       2: areturn

  public int getDigestSize();
    Code:
       0: aload_0
       1: getfield      #107                // Field digestLength:I
       4: ireturn

  public int getByteLength();
    Code:
       0: aload_0
       1: getfield      #113                // Field hash:Lorg/bouncycastle/crypto/digests/Blake2sDigest;
       4: invokevirtual #117                // Method org/bouncycastle/crypto/digests/Blake2sDigest.getByteLength:()I
       7: ireturn

  public long getUnknownMaxLength();
    Code:
       0: ldc2_w        #63                 // long 137438953472l
       3: lreturn

  public void update(byte);
    Code:
       0: aload_0
       1: getfield      #113                // Field hash:Lorg/bouncycastle/crypto/digests/Blake2sDigest;
       4: iload_1
       5: invokevirtual #120                // Method org/bouncycastle/crypto/digests/Blake2sDigest.update:(B)V
       8: return

  public void update(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #113                // Field hash:Lorg/bouncycastle/crypto/digests/Blake2sDigest;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #124                // Method org/bouncycastle/crypto/digests/Blake2sDigest.update:([BII)V
      10: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #113                // Field hash:Lorg/bouncycastle/crypto/digests/Blake2sDigest;
       4: invokevirtual #119                // Method org/bouncycastle/crypto/digests/Blake2sDigest.reset:()V
       7: aload_0
       8: aconst_null
       9: putfield      #112                // Field h0:[B
      12: aload_0
      13: bipush        32
      15: putfield      #106                // Field bufPos:I
      18: aload_0
      19: iconst_0
      20: putfield      #108                // Field digestPos:I
      23: aload_0
      24: lconst_0
      25: putfield      #109                // Field blockPos:J
      28: aload_0
      29: aload_0
      30: invokespecial #127                // Method computeNodeOffset:()J
      33: putfield      #110                // Field nodeOffset:J
      36: return

  public int doFinal(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_1
       4: arraylength
       5: invokevirtual #132                // Method doFinal:([BII)I
       8: ireturn

  public int doFinal(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #133                // Method doOutput:([BII)I
       7: istore        4
       9: aload_0
      10: invokevirtual #129                // Method reset:()V
      13: iload         4
      15: ireturn

  public int doOutput(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #112                // Field h0:[B
       4: ifnonnull     33
       7: aload_0
       8: aload_0
       9: getfield      #113                // Field hash:Lorg/bouncycastle/crypto/digests/Blake2sDigest;
      12: invokevirtual #118                // Method org/bouncycastle/crypto/digests/Blake2sDigest.getDigestSize:()I
      15: newarray       byte
      17: putfield      #112                // Field h0:[B
      20: aload_0
      21: getfield      #113                // Field hash:Lorg/bouncycastle/crypto/digests/Blake2sDigest;
      24: aload_0
      25: getfield      #112                // Field h0:[B
      28: iconst_0
      29: invokevirtual #123                // Method org/bouncycastle/crypto/digests/Blake2sDigest.doFinal:([BI)I
      32: pop
      33: aload_0
      34: getfield      #107                // Field digestLength:I
      37: ldc           #1                  // int 65535
      39: if_icmpeq     65
      42: aload_0
      43: getfield      #108                // Field digestPos:I
      46: iload_3
      47: iadd
      48: aload_0
      49: getfield      #107                // Field digestLength:I
      52: if_icmple     89
      55: new           #65                 // class java/lang/IllegalArgumentException
      58: dup
      59: ldc           #5                  // String Output length is above the digest length
      61: invokespecial #114                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_0
      66: getfield      #109                // Field blockPos:J
      69: iconst_5
      70: lshl
      71: aload_0
      72: invokevirtual #128                // Method getUnknownMaxLength:()J
      75: lcmp
      76: iflt          89
      79: new           #65                 // class java/lang/IllegalArgumentException
      82: dup
      83: ldc           #4                  // String Maximum length is 2^32 blocks of 32 bytes
      85: invokespecial #114                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: iconst_0
      90: istore        4
      92: iload         4
      94: iload_3
      95: if_icmpge     224
      98: aload_0
      99: getfield      #106                // Field bufPos:I
     102: bipush        32
     104: if_icmplt     185
     107: new           #69                 // class org/bouncycastle/crypto/digests/Blake2sDigest
     110: dup
     111: aload_0
     112: invokespecial #126                // Method computeStepLength:()I
     115: bipush        32
     117: aload_0
     118: getfield      #110                // Field nodeOffset:J
     121: invokespecial #121                // Method org/bouncycastle/crypto/digests/Blake2sDigest."<init>":(IIJ)V
     124: astore        5
     126: aload         5
     128: aload_0
     129: getfield      #112                // Field h0:[B
     132: iconst_0
     133: aload_0
     134: getfield      #112                // Field h0:[B
     137: arraylength
     138: invokevirtual #124                // Method org/bouncycastle/crypto/digests/Blake2sDigest.update:([BII)V
     141: aload_0
     142: getfield      #111                // Field buf:[B
     145: iconst_0
     146: invokestatic  #135                // Method org/bouncycastle/util/Arrays.fill:([BB)V
     149: aload         5
     151: aload_0
     152: getfield      #111                // Field buf:[B
     155: iconst_0
     156: invokevirtual #123                // Method org/bouncycastle/crypto/digests/Blake2sDigest.doFinal:([BI)I
     159: pop
     160: aload_0
     161: iconst_0
     162: putfield      #106                // Field bufPos:I
     165: aload_0
     166: dup
     167: getfield      #110                // Field nodeOffset:J
     170: lconst_1
     171: ladd
     172: putfield      #110                // Field nodeOffset:J
     175: aload_0
     176: dup
     177: getfield      #109                // Field blockPos:J
     180: lconst_1
     181: ladd
     182: putfield      #109                // Field blockPos:J
     185: aload_1
     186: iload         4
     188: aload_0
     189: getfield      #111                // Field buf:[B
     192: aload_0
     193: getfield      #106                // Field bufPos:I
     196: baload
     197: bastore
     198: aload_0
     199: dup
     200: getfield      #106                // Field bufPos:I
     203: iconst_1
     204: iadd
     205: putfield      #106                // Field bufPos:I
     208: aload_0
     209: dup
     210: getfield      #108                // Field digestPos:I
     213: iconst_1
     214: iadd
     215: putfield      #108                // Field digestPos:I
     218: iinc          4, 1
     221: goto          92
     224: iload_3
     225: ireturn

  private int computeStepLength();
    Code:
       0: aload_0
       1: getfield      #107                // Field digestLength:I
       4: ldc           #1                  // int 65535
       6: if_icmpne     12
       9: bipush        32
      11: ireturn
      12: bipush        32
      14: aload_0
      15: getfield      #107                // Field digestLength:I
      18: aload_0
      19: getfield      #108                // Field digestPos:I
      22: isub
      23: invokestatic  #115                // Method java/lang/Math.min:(II)I
      26: ireturn

  private long computeNodeOffset();
    Code:
       0: aload_0
       1: getfield      #107                // Field digestLength:I
       4: i2l
       5: ldc2_w        #61                 // long 4294967296l
       8: lmul
       9: lreturn
}
