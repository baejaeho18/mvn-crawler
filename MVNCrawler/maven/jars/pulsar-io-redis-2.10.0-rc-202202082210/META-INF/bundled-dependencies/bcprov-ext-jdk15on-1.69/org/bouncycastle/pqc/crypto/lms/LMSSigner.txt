public class org.bouncycastle.pqc.crypto.lms.LMSSigner implements org.bouncycastle.pqc.crypto.MessageSigner {
  private org.bouncycastle.pqc.crypto.lms.LMSPrivateKeyParameters privKey;

  private org.bouncycastle.pqc.crypto.lms.LMSPublicKeyParameters pubKey;

  public org.bouncycastle.pqc.crypto.lms.LMSSigner();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: iload_1
       1: ifeq          15
       4: aload_0
       5: aload_2
       6: checkcast     #37                 // class org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters
       9: putfield      #61                 // Field privKey:Lorg/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters;
      12: goto          23
      15: aload_0
      16: aload_2
      17: checkcast     #38                 // class org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters
      20: putfield      #62                 // Field pubKey:Lorg/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters;
      23: return

  public byte[] generateSignature(byte[]);
    Code:
       0: aload_0
       1: getfield      #61                 // Field privKey:Lorg/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters;
       4: aload_1
       5: invokestatic  #69                 // Method org/bouncycastle/pqc/crypto/lms/LMS.generateSign:(Lorg/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters;[B)Lorg/bouncycastle/pqc/crypto/lms/LMSSignature;
       8: invokevirtual #71                 // Method org/bouncycastle/pqc/crypto/lms/LMSSignature.getEncoded:()[B
      11: areturn
      12: astore_2
      13: new           #32                 // class java/lang/IllegalStateException
      16: dup
      17: new           #34                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #2                  // String unable to encode signature:
      26: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_2
      30: invokevirtual #63                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      33: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #64                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
    Exception table:
       from    to  target type
           0    11    12   Class java/io/IOException

  public boolean verifySignature(byte[], byte[]);
    Code:
       0: aload_0
       1: getfield      #62                 // Field pubKey:Lorg/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters;
       4: aload_2
       5: invokestatic  #72                 // Method org/bouncycastle/pqc/crypto/lms/LMSSignature.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/pqc/crypto/lms/LMSSignature;
       8: aload_1
       9: invokestatic  #70                 // Method org/bouncycastle/pqc/crypto/lms/LMS.verifySignature:(Lorg/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters;Lorg/bouncycastle/pqc/crypto/lms/LMSSignature;[B)Z
      12: ireturn
      13: astore_3
      14: new           #32                 // class java/lang/IllegalStateException
      17: dup
      18: new           #34                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #1                  // String unable to decode signature:
      27: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_3
      31: invokevirtual #63                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      34: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #64                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      43: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/io/IOException
}
