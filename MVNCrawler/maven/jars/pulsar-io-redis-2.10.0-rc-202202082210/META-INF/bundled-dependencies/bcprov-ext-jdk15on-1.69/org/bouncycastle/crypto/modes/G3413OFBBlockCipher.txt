public class org.bouncycastle.crypto.modes.G3413OFBBlockCipher extends org.bouncycastle.crypto.StreamBlockCipher {
  private int m;

  private int blockSize;

  private byte[] R;

  private byte[] R_init;

  private byte[] Y;

  private org.bouncycastle.crypto.BlockCipher cipher;

  private int byteCount;

  private boolean initialized;

  public org.bouncycastle.crypto.modes.G3413OFBBlockCipher(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #119                // Method org/bouncycastle/crypto/StreamBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
       5: aload_0
       6: iconst_0
       7: putfield      #109                // Field initialized:Z
      10: aload_0
      11: aload_1
      12: invokeinterface #132,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      17: putfield      #106                // Field blockSize:I
      20: aload_0
      21: aload_1
      22: putfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      25: aload_0
      26: aload_0
      27: getfield      #106                // Field blockSize:I
      30: newarray       byte
      32: putfield      #112                // Field Y:[B
      35: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_2
       1: instanceof    #66                 // class org/bouncycastle/crypto/params/ParametersWithIV
       4: ifeq          100
       7: aload_2
       8: checkcast     #66                 // class org/bouncycastle/crypto/params/ParametersWithIV
      11: astore_3
      12: aload_3
      13: invokevirtual #128                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      16: astore        4
      18: aload         4
      20: arraylength
      21: aload_0
      22: getfield      #106                // Field blockSize:I
      25: if_icmpge     38
      28: new           #57                 // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #2                  // String Parameter m must blockSize <= m
      34: invokespecial #114                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aload         4
      41: arraylength
      42: putfield      #108                // Field m:I
      45: aload_0
      46: invokespecial #123                // Method initArrays:()V
      49: aload_0
      50: aload         4
      52: invokestatic  #131                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      55: putfield      #111                // Field R_init:[B
      58: aload_0
      59: getfield      #111                // Field R_init:[B
      62: iconst_0
      63: aload_0
      64: getfield      #110                // Field R:[B
      67: iconst_0
      68: aload_0
      69: getfield      #111                // Field R_init:[B
      72: arraylength
      73: invokestatic  #118                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      76: aload_3
      77: invokevirtual #129                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      80: ifnull        97
      83: aload_0
      84: getfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      87: iconst_1
      88: aload_3
      89: invokevirtual #129                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      92: invokeinterface #136,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      97: goto          141
     100: aload_0
     101: invokespecial #124                // Method setupDefaultParams:()V
     104: aload_0
     105: invokespecial #123                // Method initArrays:()V
     108: aload_0
     109: getfield      #111                // Field R_init:[B
     112: iconst_0
     113: aload_0
     114: getfield      #110                // Field R:[B
     117: iconst_0
     118: aload_0
     119: getfield      #111                // Field R_init:[B
     122: arraylength
     123: invokestatic  #118                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     126: aload_2
     127: ifnull        141
     130: aload_0
     131: getfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     134: iconst_1
     135: aload_2
     136: invokeinterface #136,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     141: aload_0
     142: iconst_1
     143: putfield      #109                // Field initialized:Z
     146: return

  private void initArrays();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #108                // Field m:I
       5: newarray       byte
       7: putfield      #110                // Field R:[B
      10: aload_0
      11: aload_0
      12: getfield      #108                // Field m:I
      15: newarray       byte
      17: putfield      #111                // Field R_init:[B
      20: return

  private void setupDefaultParams();
    Code:
       0: aload_0
       1: iconst_2
       2: aload_0
       3: getfield      #106                // Field blockSize:I
       6: imul
       7: putfield      #108                // Field m:I
      10: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #59                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #115                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: invokeinterface #135,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      16: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #1                  // String /OFB
      21: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #106                // Field blockSize:I
       4: ireturn

  public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #106                // Field blockSize:I
       7: aload_3
       8: iload         4
      10: invokevirtual #125                // Method processBytes:([BII[BI)I
      13: pop
      14: aload_0
      15: getfield      #106                // Field blockSize:I
      18: ireturn

  protected byte calculateByte(byte);
    Code:
       0: aload_0
       1: getfield      #107                // Field byteCount:I
       4: ifne          11
       7: aload_0
       8: invokespecial #122                // Method generateY:()V
      11: aload_0
      12: getfield      #112                // Field Y:[B
      15: aload_0
      16: getfield      #107                // Field byteCount:I
      19: baload
      20: iload_1
      21: ixor
      22: i2b
      23: istore_2
      24: aload_0
      25: dup
      26: getfield      #107                // Field byteCount:I
      29: iconst_1
      30: iadd
      31: putfield      #107                // Field byteCount:I
      34: aload_0
      35: getfield      #107                // Field byteCount:I
      38: aload_0
      39: invokevirtual #120                // Method getBlockSize:()I
      42: if_icmpne     54
      45: aload_0
      46: iconst_0
      47: putfield      #107                // Field byteCount:I
      50: aload_0
      51: invokespecial #121                // Method generateR:()V
      54: iload_2
      55: ireturn

  private void generateY();
    Code:
       0: aload_0
       1: getfield      #110                // Field R:[B
       4: aload_0
       5: getfield      #106                // Field blockSize:I
       8: invokestatic  #127                // Method org/bouncycastle/crypto/modes/GOST3413CipherUtil.MSB:([BI)[B
      11: astore_1
      12: aload_0
      13: getfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      16: aload_1
      17: iconst_0
      18: aload_0
      19: getfield      #112                // Field Y:[B
      22: iconst_0
      23: invokeinterface #134,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      28: pop
      29: return

  private void generateR();
    Code:
       0: aload_0
       1: getfield      #110                // Field R:[B
       4: aload_0
       5: getfield      #108                // Field m:I
       8: aload_0
       9: getfield      #106                // Field blockSize:I
      12: isub
      13: invokestatic  #126                // Method org/bouncycastle/crypto/modes/GOST3413CipherUtil.LSB:([BI)[B
      16: astore_1
      17: aload_1
      18: iconst_0
      19: aload_0
      20: getfield      #110                // Field R:[B
      23: iconst_0
      24: aload_1
      25: arraylength
      26: invokestatic  #118                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      29: aload_0
      30: getfield      #112                // Field Y:[B
      33: iconst_0
      34: aload_0
      35: getfield      #110                // Field R:[B
      38: aload_1
      39: arraylength
      40: aload_0
      41: getfield      #108                // Field m:I
      44: aload_1
      45: arraylength
      46: isub
      47: invokestatic  #118                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      50: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #109                // Field initialized:Z
       4: ifeq          46
       7: aload_0
       8: getfield      #111                // Field R_init:[B
      11: iconst_0
      12: aload_0
      13: getfield      #110                // Field R:[B
      16: iconst_0
      17: aload_0
      18: getfield      #111                // Field R_init:[B
      21: arraylength
      22: invokestatic  #118                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: aload_0
      26: getfield      #112                // Field Y:[B
      29: invokestatic  #130                // Method org/bouncycastle/util/Arrays.clear:([B)V
      32: aload_0
      33: iconst_0
      34: putfield      #107                // Field byteCount:I
      37: aload_0
      38: getfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      41: invokeinterface #133,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
      46: return
}
