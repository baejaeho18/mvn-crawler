public class org.bouncycastle.crypto.engines.ThreefishEngine implements org.bouncycastle.crypto.BlockCipher {
  public static final int BLOCKSIZE_256;

  public static final int BLOCKSIZE_512;

  public static final int BLOCKSIZE_1024;

  private static final int TWEAK_SIZE_BYTES;

  private static final int TWEAK_SIZE_WORDS;

  private static final int ROUNDS_256;

  private static final int ROUNDS_512;

  private static final int ROUNDS_1024;

  private static final int MAX_ROUNDS;

  private static final long C_240;

  private static int[] MOD9;

  private static int[] MOD17;

  private static int[] MOD5;

  private static int[] MOD3;

  private int blocksizeBytes;

  private int blocksizeWords;

  private long[] currentBlock;

  private long[] t;

  private long[] kw;

  private org.bouncycastle.crypto.engines.ThreefishEngine$ThreefishCipher cipher;

  private boolean forEncryption;

  public org.bouncycastle.crypto.engines.ThreefishEngine(int);
    Code:
       0: aload_0
       1: invokespecial #186                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_5
       6: newarray       long
       8: putfield      #180                // Field t:[J
      11: aload_0
      12: iload_1
      13: bipush        8
      15: idiv
      16: putfield      #171                // Field blocksizeBytes:I
      19: aload_0
      20: aload_0
      21: getfield      #171                // Field blocksizeBytes:I
      24: bipush        8
      26: idiv
      27: putfield      #172                // Field blocksizeWords:I
      30: aload_0
      31: aload_0
      32: getfield      #172                // Field blocksizeWords:I
      35: newarray       long
      37: putfield      #178                // Field currentBlock:[J
      40: aload_0
      41: iconst_2
      42: aload_0
      43: getfield      #172                // Field blocksizeWords:I
      46: imul
      47: iconst_1
      48: iadd
      49: newarray       long
      51: putfield      #179                // Field kw:[J
      54: iload_1
      55: lookupswitch  { // 3
                   256: 88
                   512: 110
                  1024: 132
               default: 154
          }
      88: aload_0
      89: new           #126                // class org/bouncycastle/crypto/engines/ThreefishEngine$Threefish256Cipher
      92: dup
      93: aload_0
      94: getfield      #179                // Field kw:[J
      97: aload_0
      98: getfield      #180                // Field t:[J
     101: invokespecial #202                // Method org/bouncycastle/crypto/engines/ThreefishEngine$Threefish256Cipher."<init>":([J[J)V
     104: putfield      #181                // Field cipher:Lorg/bouncycastle/crypto/engines/ThreefishEngine$ThreefishCipher;
     107: goto          164
     110: aload_0
     111: new           #127                // class org/bouncycastle/crypto/engines/ThreefishEngine$Threefish512Cipher
     114: dup
     115: aload_0
     116: getfield      #179                // Field kw:[J
     119: aload_0
     120: getfield      #180                // Field t:[J
     123: invokespecial #203                // Method org/bouncycastle/crypto/engines/ThreefishEngine$Threefish512Cipher."<init>":([J[J)V
     126: putfield      #181                // Field cipher:Lorg/bouncycastle/crypto/engines/ThreefishEngine$ThreefishCipher;
     129: goto          164
     132: aload_0
     133: new           #125                // class org/bouncycastle/crypto/engines/ThreefishEngine$Threefish1024Cipher
     136: dup
     137: aload_0
     138: getfield      #179                // Field kw:[J
     141: aload_0
     142: getfield      #180                // Field t:[J
     145: invokespecial #201                // Method org/bouncycastle/crypto/engines/ThreefishEngine$Threefish1024Cipher."<init>":([J[J)V
     148: putfield      #181                // Field cipher:Lorg/bouncycastle/crypto/engines/ThreefishEngine$ThreefishCipher;
     151: goto          164
     154: new           #116                // class java/lang/IllegalArgumentException
     157: dup
     158: ldc           #4                  // String Invalid blocksize - Threefish is defined with block size of 256, 512, or 1024 bits
     160: invokespecial #184                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     163: athrow
     164: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_2
       1: instanceof    #130                // class org/bouncycastle/crypto/params/TweakableBlockCipherParameters
       4: ifeq          32
       7: aload_2
       8: checkcast     #130                // class org/bouncycastle/crypto/params/TweakableBlockCipherParameters
      11: astore        5
      13: aload         5
      15: invokevirtual #208                // Method org/bouncycastle/crypto/params/TweakableBlockCipherParameters.getKey:()Lorg/bouncycastle/crypto/params/KeyParameter;
      18: invokevirtual #206                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      21: astore_3
      22: aload         5
      24: invokevirtual #207                // Method org/bouncycastle/crypto/params/TweakableBlockCipherParameters.getTweak:()[B
      27: astore        4
      29: goto          86
      32: aload_2
      33: instanceof    #129                // class org/bouncycastle/crypto/params/KeyParameter
      36: ifeq          53
      39: aload_2
      40: checkcast     #129                // class org/bouncycastle/crypto/params/KeyParameter
      43: invokevirtual #206                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      46: astore_3
      47: aconst_null
      48: astore        4
      50: goto          86
      53: new           #116                // class java/lang/IllegalArgumentException
      56: dup
      57: new           #119                // class java/lang/StringBuilder
      60: dup
      61: invokespecial #188                // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #5                  // String Invalid parameter passed to Threefish init -
      66: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_2
      70: invokevirtual #187                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      73: invokevirtual #182                // Method java/lang/Class.getName:()Ljava/lang/String;
      76: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokespecial #184                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: aconst_null
      87: astore        5
      89: aconst_null
      90: astore        6
      92: aload_3
      93: ifnull        179
      96: aload_3
      97: arraylength
      98: aload_0
      99: getfield      #171                // Field blocksizeBytes:I
     102: if_icmpeq     140
     105: new           #116                // class java/lang/IllegalArgumentException
     108: dup
     109: new           #119                // class java/lang/StringBuilder
     112: dup
     113: invokespecial #188                // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #8                  // String Threefish key must be same size as block (
     118: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_0
     122: getfield      #171                // Field blocksizeBytes:I
     125: invokevirtual #190                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     128: ldc           #1                  // String  bytes)
     130: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokespecial #184                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     139: athrow
     140: aload_0
     141: getfield      #172                // Field blocksizeWords:I
     144: newarray       long
     146: astore        5
     148: iconst_0
     149: istore        7
     151: iload         7
     153: aload         5
     155: arraylength
     156: if_icmpge     179
     159: aload         5
     161: iload         7
     163: aload_3
     164: iload         7
     166: bipush        8
     168: imul
     169: invokestatic  #197                // Method bytesToWord:([BI)J
     172: lastore
     173: iinc          7, 1
     176: goto          151
     179: aload         4
     181: ifnull        226
     184: aload         4
     186: arraylength
     187: bipush        16
     189: if_icmpeq     202
     192: new           #116                // class java/lang/IllegalArgumentException
     195: dup
     196: ldc           #9                  // String Threefish tweak must be 16 bytes
     198: invokespecial #184                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     201: athrow
     202: iconst_2
     203: newarray       long
     205: dup
     206: iconst_0
     207: aload         4
     209: iconst_0
     210: invokestatic  #197                // Method bytesToWord:([BI)J
     213: lastore
     214: dup
     215: iconst_1
     216: aload         4
     218: bipush        8
     220: invokestatic  #197                // Method bytesToWord:([BI)J
     223: lastore
     224: astore        6
     226: aload_0
     227: iload_1
     228: aload         5
     230: aload         6
     232: invokevirtual #196                // Method init:(Z[J[J)V
     235: return

  public void init(boolean, long[], long[]);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #173                // Field forEncryption:Z
       5: aload_2
       6: ifnull        14
       9: aload_0
      10: aload_2
      11: invokespecial #198                // Method setKey:([J)V
      14: aload_3
      15: ifnull        23
      18: aload_0
      19: aload_3
      20: invokespecial #199                // Method setTweak:([J)V
      23: return

  private void setKey(long[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: getfield      #172                // Field blocksizeWords:I
       6: if_icmpeq     44
       9: new           #116                // class java/lang/IllegalArgumentException
      12: dup
      13: new           #119                // class java/lang/StringBuilder
      16: dup
      17: invokespecial #188                // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #8                  // String Threefish key must be same size as block (
      22: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #172                // Field blocksizeWords:I
      29: invokevirtual #190                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: ldc           #2                  // String  words)
      34: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #184                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: ldc2_w        #113                // long 2004413935125273122l
      47: lstore_2
      48: iconst_0
      49: istore        4
      51: iload         4
      53: aload_0
      54: getfield      #172                // Field blocksizeWords:I
      57: if_icmpge     87
      60: aload_0
      61: getfield      #179                // Field kw:[J
      64: iload         4
      66: aload_1
      67: iload         4
      69: laload
      70: lastore
      71: lload_2
      72: aload_0
      73: getfield      #179                // Field kw:[J
      76: iload         4
      78: laload
      79: lxor
      80: lstore_2
      81: iinc          4, 1
      84: goto          51
      87: aload_0
      88: getfield      #179                // Field kw:[J
      91: aload_0
      92: getfield      #172                // Field blocksizeWords:I
      95: lload_2
      96: lastore
      97: aload_0
      98: getfield      #179                // Field kw:[J
     101: iconst_0
     102: aload_0
     103: getfield      #179                // Field kw:[J
     106: aload_0
     107: getfield      #172                // Field blocksizeWords:I
     110: iconst_1
     111: iadd
     112: aload_0
     113: getfield      #172                // Field blocksizeWords:I
     116: invokestatic  #192                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     119: return

  private void setTweak(long[]);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_2
       3: if_icmpeq     16
       6: new           #116                // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #11                 // String Tweak must be 2 words.
      12: invokespecial #184                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: getfield      #180                // Field t:[J
      20: iconst_0
      21: aload_1
      22: iconst_0
      23: laload
      24: lastore
      25: aload_0
      26: getfield      #180                // Field t:[J
      29: iconst_1
      30: aload_1
      31: iconst_1
      32: laload
      33: lastore
      34: aload_0
      35: getfield      #180                // Field t:[J
      38: iconst_2
      39: aload_0
      40: getfield      #180                // Field t:[J
      43: iconst_0
      44: laload
      45: aload_0
      46: getfield      #180                // Field t:[J
      49: iconst_1
      50: laload
      51: lxor
      52: lastore
      53: aload_0
      54: getfield      #180                // Field t:[J
      57: iconst_3
      58: aload_0
      59: getfield      #180                // Field t:[J
      62: iconst_0
      63: laload
      64: lastore
      65: aload_0
      66: getfield      #180                // Field t:[J
      69: iconst_4
      70: aload_0
      71: getfield      #180                // Field t:[J
      74: iconst_1
      75: laload
      76: lastore
      77: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #119                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #188                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #10                 // String Threefish-
       9: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #171                // Field blocksizeBytes:I
      16: bipush        8
      18: imul
      19: invokevirtual #190                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      22: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  public int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #171                // Field blocksizeBytes:I
       4: ireturn

  public void reset();
    Code:
       0: return

  public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #171                // Field blocksizeBytes:I
       5: iadd
       6: aload_1
       7: arraylength
       8: if_icmple     21
      11: new           #122                // class org/bouncycastle/crypto/DataLengthException
      14: dup
      15: ldc           #3                  // String Input buffer too short
      17: invokespecial #193                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload         4
      23: aload_0
      24: getfield      #171                // Field blocksizeBytes:I
      27: iadd
      28: aload_3
      29: arraylength
      30: if_icmple     43
      33: new           #123                // class org/bouncycastle/crypto/OutputLengthException
      36: dup
      37: ldc           #6                  // String Output buffer too short
      39: invokespecial #194                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iconst_0
      44: istore        5
      46: iload         5
      48: aload_0
      49: getfield      #171                // Field blocksizeBytes:I
      52: if_icmpge     78
      55: aload_0
      56: getfield      #178                // Field currentBlock:[J
      59: iload         5
      61: iconst_3
      62: ishr
      63: aload_1
      64: iload_2
      65: iload         5
      67: iadd
      68: invokestatic  #197                // Method bytesToWord:([BI)J
      71: lastore
      72: iinc          5, 8
      75: goto          46
      78: aload_0
      79: aload_0
      80: getfield      #178                // Field currentBlock:[J
      83: aload_0
      84: getfield      #178                // Field currentBlock:[J
      87: invokevirtual #200                // Method processBlock:([J[J)I
      90: pop
      91: iconst_0
      92: istore        5
      94: iload         5
      96: aload_0
      97: getfield      #171                // Field blocksizeBytes:I
     100: if_icmpge     127
     103: aload_0
     104: getfield      #178                // Field currentBlock:[J
     107: iload         5
     109: iconst_3
     110: ishr
     111: laload
     112: aload_3
     113: iload         4
     115: iload         5
     117: iadd
     118: invokestatic  #195                // Method wordToBytes:(J[BI)V
     121: iinc          5, 8
     124: goto          94
     127: aload_0
     128: getfield      #171                // Field blocksizeBytes:I
     131: ireturn

  public int processBlock(long[], long[]) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #179                // Field kw:[J
       4: aload_0
       5: getfield      #172                // Field blocksizeWords:I
       8: laload
       9: lconst_0
      10: lcmp
      11: ifne          24
      14: new           #117                // class java/lang/IllegalStateException
      17: dup
      18: ldc           #7                  // String Threefish engine not initialised
      20: invokespecial #185                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_1
      25: arraylength
      26: aload_0
      27: getfield      #172                // Field blocksizeWords:I
      30: if_icmpeq     43
      33: new           #122                // class org/bouncycastle/crypto/DataLengthException
      36: dup
      37: ldc           #3                  // String Input buffer too short
      39: invokespecial #193                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_2
      44: arraylength
      45: aload_0
      46: getfield      #172                // Field blocksizeWords:I
      49: if_icmpeq     62
      52: new           #123                // class org/bouncycastle/crypto/OutputLengthException
      55: dup
      56: ldc           #6                  // String Output buffer too short
      58: invokespecial #194                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: getfield      #173                // Field forEncryption:Z
      66: ifeq          81
      69: aload_0
      70: getfield      #181                // Field cipher:Lorg/bouncycastle/crypto/engines/ThreefishEngine$ThreefishCipher;
      73: aload_1
      74: aload_2
      75: invokevirtual #205                // Method org/bouncycastle/crypto/engines/ThreefishEngine$ThreefishCipher.encryptBlock:([J[J)V
      78: goto          90
      81: aload_0
      82: getfield      #181                // Field cipher:Lorg/bouncycastle/crypto/engines/ThreefishEngine$ThreefishCipher;
      85: aload_1
      86: aload_2
      87: invokevirtual #204                // Method org/bouncycastle/crypto/engines/ThreefishEngine$ThreefishCipher.decryptBlock:([J[J)V
      90: aload_0
      91: getfield      #172                // Field blocksizeWords:I
      94: ireturn

  public static long bytesToWord(byte[], int);
    Code:
       0: iload_1
       1: bipush        8
       3: iadd
       4: aload_0
       5: arraylength
       6: if_icmple     17
       9: new           #116                // class java/lang/IllegalArgumentException
      12: dup
      13: invokespecial #183                // Method java/lang/IllegalArgumentException."<init>":()V
      16: athrow
      17: lconst_0
      18: lstore_2
      19: iload_1
      20: istore        4
      22: aload_0
      23: iload         4
      25: iinc          4, 1
      28: baload
      29: i2l
      30: ldc2_w        #111                // long 255l
      33: land
      34: lstore_2
      35: lload_2
      36: aload_0
      37: iload         4
      39: iinc          4, 1
      42: baload
      43: i2l
      44: ldc2_w        #111                // long 255l
      47: land
      48: bipush        8
      50: lshl
      51: lor
      52: lstore_2
      53: lload_2
      54: aload_0
      55: iload         4
      57: iinc          4, 1
      60: baload
      61: i2l
      62: ldc2_w        #111                // long 255l
      65: land
      66: bipush        16
      68: lshl
      69: lor
      70: lstore_2
      71: lload_2
      72: aload_0
      73: iload         4
      75: iinc          4, 1
      78: baload
      79: i2l
      80: ldc2_w        #111                // long 255l
      83: land
      84: bipush        24
      86: lshl
      87: lor
      88: lstore_2
      89: lload_2
      90: aload_0
      91: iload         4
      93: iinc          4, 1
      96: baload
      97: i2l
      98: ldc2_w        #111                // long 255l
     101: land
     102: bipush        32
     104: lshl
     105: lor
     106: lstore_2
     107: lload_2
     108: aload_0
     109: iload         4
     111: iinc          4, 1
     114: baload
     115: i2l
     116: ldc2_w        #111                // long 255l
     119: land
     120: bipush        40
     122: lshl
     123: lor
     124: lstore_2
     125: lload_2
     126: aload_0
     127: iload         4
     129: iinc          4, 1
     132: baload
     133: i2l
     134: ldc2_w        #111                // long 255l
     137: land
     138: bipush        48
     140: lshl
     141: lor
     142: lstore_2
     143: lload_2
     144: aload_0
     145: iload         4
     147: iinc          4, 1
     150: baload
     151: i2l
     152: ldc2_w        #111                // long 255l
     155: land
     156: bipush        56
     158: lshl
     159: lor
     160: lstore_2
     161: lload_2
     162: lreturn

  public static void wordToBytes(long, byte[], int);
    Code:
       0: iload_3
       1: bipush        8
       3: iadd
       4: aload_2
       5: arraylength
       6: if_icmple     17
       9: new           #116                // class java/lang/IllegalArgumentException
      12: dup
      13: invokespecial #183                // Method java/lang/IllegalArgumentException."<init>":()V
      16: athrow
      17: iload_3
      18: istore        4
      20: aload_2
      21: iload         4
      23: iinc          4, 1
      26: lload_0
      27: l2i
      28: i2b
      29: bastore
      30: aload_2
      31: iload         4
      33: iinc          4, 1
      36: lload_0
      37: bipush        8
      39: lshr
      40: l2i
      41: i2b
      42: bastore
      43: aload_2
      44: iload         4
      46: iinc          4, 1
      49: lload_0
      50: bipush        16
      52: lshr
      53: l2i
      54: i2b
      55: bastore
      56: aload_2
      57: iload         4
      59: iinc          4, 1
      62: lload_0
      63: bipush        24
      65: lshr
      66: l2i
      67: i2b
      68: bastore
      69: aload_2
      70: iload         4
      72: iinc          4, 1
      75: lload_0
      76: bipush        32
      78: lshr
      79: l2i
      80: i2b
      81: bastore
      82: aload_2
      83: iload         4
      85: iinc          4, 1
      88: lload_0
      89: bipush        40
      91: lshr
      92: l2i
      93: i2b
      94: bastore
      95: aload_2
      96: iload         4
      98: iinc          4, 1
     101: lload_0
     102: bipush        48
     104: lshr
     105: l2i
     106: i2b
     107: bastore
     108: aload_2
     109: iload         4
     111: iinc          4, 1
     114: lload_0
     115: bipush        56
     117: lshr
     118: l2i
     119: i2b
     120: bastore
     121: return

  static long rotlXor(long, int, long);
    Code:
       0: lload_0
       1: iload_2
       2: lshl
       3: lload_0
       4: iload_2
       5: ineg
       6: lushr
       7: lor
       8: lload_3
       9: lxor
      10: lreturn

  static long xorRotr(long, int, long);
    Code:
       0: lload_0
       1: lload_3
       2: lxor
       3: lstore        5
       5: lload         5
       7: iload_2
       8: lushr
       9: lload         5
      11: iload_2
      12: ineg
      13: lshl
      14: lor
      15: lreturn

  static int[] access$000();
    Code:
       0: getstatic     #176                // Field MOD5:[I
       3: areturn

  static int[] access$100();
    Code:
       0: getstatic     #175                // Field MOD3:[I
       3: areturn

  static int[] access$200();
    Code:
       0: getstatic     #177                // Field MOD9:[I
       3: areturn

  static int[] access$300();
    Code:
       0: getstatic     #174                // Field MOD17:[I
       3: areturn

  static {};
    Code:
       0: bipush        80
       2: newarray       int
       4: putstatic     #177                // Field MOD9:[I
       7: getstatic     #177                // Field MOD9:[I
      10: arraylength
      11: newarray       int
      13: putstatic     #174                // Field MOD17:[I
      16: getstatic     #177                // Field MOD9:[I
      19: arraylength
      20: newarray       int
      22: putstatic     #176                // Field MOD5:[I
      25: getstatic     #177                // Field MOD9:[I
      28: arraylength
      29: newarray       int
      31: putstatic     #175                // Field MOD3:[I
      34: iconst_0
      35: istore_0
      36: iload_0
      37: getstatic     #177                // Field MOD9:[I
      40: arraylength
      41: if_icmpge     84
      44: getstatic     #174                // Field MOD17:[I
      47: iload_0
      48: iload_0
      49: bipush        17
      51: irem
      52: iastore
      53: getstatic     #177                // Field MOD9:[I
      56: iload_0
      57: iload_0
      58: bipush        9
      60: irem
      61: iastore
      62: getstatic     #176                // Field MOD5:[I
      65: iload_0
      66: iload_0
      67: iconst_5
      68: irem
      69: iastore
      70: getstatic     #175                // Field MOD3:[I
      73: iload_0
      74: iload_0
      75: iconst_3
      76: irem
      77: iastore
      78: iinc          0, 1
      81: goto          36
      84: return
}
