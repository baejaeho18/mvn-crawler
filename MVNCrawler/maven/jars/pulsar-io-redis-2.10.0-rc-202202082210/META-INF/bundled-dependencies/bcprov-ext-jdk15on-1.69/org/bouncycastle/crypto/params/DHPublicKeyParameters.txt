public class org.bouncycastle.crypto.params.DHPublicKeyParameters extends org.bouncycastle.crypto.params.DHKeyParameters {
  private static final java.math.BigInteger ONE;

  private static final java.math.BigInteger TWO;

  private java.math.BigInteger y;

  public org.bouncycastle.crypto.params.DHPublicKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.DHParameters);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_2
       3: invokespecial #116                // Method org/bouncycastle/crypto/params/DHKeyParameters."<init>":(ZLorg/bouncycastle/crypto/params/DHParameters;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #121                // Method validate:(Ljava/math/BigInteger;Lorg/bouncycastle/crypto/params/DHParameters;)Ljava/math/BigInteger;
      13: putfield      #102                // Field y:Ljava/math/BigInteger;
      16: return

  private java.math.BigInteger validate(java.math.BigInteger, org.bouncycastle.crypto.params.DHParameters);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #53                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #3                  // String y value cannot be null
      10: invokespecial #104                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: invokevirtual #117                // Method org/bouncycastle/crypto/params/DHParameters.getP:()Ljava/math/BigInteger;
      18: astore_3
      19: aload_1
      20: getstatic     #101                // Field TWO:Ljava/math/BigInteger;
      23: invokevirtual #111                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      26: iflt          43
      29: aload_1
      30: aload_3
      31: getstatic     #101                // Field TWO:Ljava/math/BigInteger;
      34: invokevirtual #112                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      37: invokevirtual #111                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      40: ifle          53
      43: new           #52                 // class java/lang/IllegalArgumentException
      46: dup
      47: ldc           #2                  // String invalid DH public key
      49: invokespecial #103                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_2
      54: invokevirtual #118                // Method org/bouncycastle/crypto/params/DHParameters.getQ:()Ljava/math/BigInteger;
      57: astore        4
      59: aload         4
      61: ifnonnull     66
      64: aload_1
      65: areturn
      66: aload_3
      67: iconst_0
      68: invokevirtual #107                // Method java/math/BigInteger.testBit:(I)Z
      71: ifeq          112
      74: aload_3
      75: invokevirtual #105                // Method java/math/BigInteger.bitLength:()I
      78: iconst_1
      79: isub
      80: aload         4
      82: invokevirtual #105                // Method java/math/BigInteger.bitLength:()I
      85: if_icmpne     112
      88: aload_3
      89: iconst_1
      90: invokevirtual #109                // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      93: aload         4
      95: invokevirtual #108                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      98: ifeq          112
     101: iconst_1
     102: aload_1
     103: aload_3
     104: invokestatic  #120                // Method legendre:(Ljava/math/BigInteger;Ljava/math/BigInteger;)I
     107: if_icmpne     130
     110: aload_1
     111: areturn
     112: getstatic     #100                // Field ONE:Ljava/math/BigInteger;
     115: aload_1
     116: aload         4
     118: aload_3
     119: invokevirtual #113                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
     122: invokevirtual #108                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     125: ifeq          130
     128: aload_1
     129: areturn
     130: new           #52                 // class java/lang/IllegalArgumentException
     133: dup
     134: ldc           #1                  // String Y value does not appear to be in correct group
     136: invokespecial #103                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     139: athrow

  public java.math.BigInteger getY();
    Code:
       0: aload_0
       1: getfield      #102                // Field y:Ljava/math/BigInteger;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #102                // Field y:Ljava/math/BigInteger;
       4: invokevirtual #106                // Method java/math/BigInteger.hashCode:()I
       7: aload_0
       8: invokespecial #114                // Method org/bouncycastle/crypto/params/DHKeyParameters.hashCode:()I
      11: ixor
      12: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #57                 // class org/bouncycastle/crypto/params/DHPublicKeyParameters
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #57                 // class org/bouncycastle/crypto/params/DHPublicKeyParameters
      13: astore_2
      14: aload_2
      15: invokevirtual #119                // Method getY:()Ljava/math/BigInteger;
      18: aload_0
      19: getfield      #102                // Field y:Ljava/math/BigInteger;
      22: invokevirtual #108                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      25: ifeq          40
      28: aload_0
      29: aload_1
      30: invokespecial #115                // Method org/bouncycastle/crypto/params/DHKeyParameters.equals:(Ljava/lang/Object;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private static int legendre(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #105                // Method java/math/BigInteger.bitLength:()I
       4: istore_2
       5: iload_2
       6: aload_0
       7: invokestatic  #127                // Method org/bouncycastle/math/raw/Nat.fromBigInteger:(ILjava/math/BigInteger;)[I
      10: astore_3
      11: iload_2
      12: aload_1
      13: invokestatic  #127                // Method org/bouncycastle/math/raw/Nat.fromBigInteger:(ILjava/math/BigInteger;)[I
      16: astore        4
      18: iconst_0
      19: istore        5
      21: aload         4
      23: arraylength
      24: istore        6
      26: aload_3
      27: iconst_0
      28: iaload
      29: ifne          43
      32: iload         6
      34: aload_3
      35: iconst_0
      36: invokestatic  #123                // Method org/bouncycastle/math/raw/Nat.shiftDownWord:(I[II)I
      39: pop
      40: goto          26
      43: aload_3
      44: iconst_0
      45: iaload
      46: invokestatic  #128                // Method org/bouncycastle/util/Integers.numberOfTrailingZeros:(I)I
      49: istore        7
      51: iload         7
      53: ifle          89
      56: iload         6
      58: aload_3
      59: iload         7
      61: iconst_0
      62: invokestatic  #124                // Method org/bouncycastle/math/raw/Nat.shiftDownBits:(I[III)I
      65: pop
      66: aload         4
      68: iconst_0
      69: iaload
      70: istore        8
      72: iload         5
      74: iload         8
      76: iload         8
      78: iconst_1
      79: iushr
      80: ixor
      81: iload         7
      83: iconst_1
      84: ishl
      85: iand
      86: ixor
      87: istore        5
      89: iload         6
      91: aload_3
      92: aload         4
      94: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat.compare:(I[I[I)I
      97: istore        8
      99: iload         8
     101: ifne          107
     104: goto          166
     107: iload         8
     109: ifge          135
     112: iload         5
     114: aload_3
     115: iconst_0
     116: iaload
     117: aload         4
     119: iconst_0
     120: iaload
     121: iand
     122: ixor
     123: istore        5
     125: aload_3
     126: astore        9
     128: aload         4
     130: astore_3
     131: aload         9
     133: astore        4
     135: aload_3
     136: iload         6
     138: iconst_1
     139: isub
     140: iaload
     141: ifne          153
     144: iload         6
     146: iconst_1
     147: isub
     148: istore        6
     150: goto          135
     153: iload         6
     155: aload_3
     156: aload         4
     158: aload_3
     159: invokestatic  #126                // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
     162: pop
     163: goto          26
     166: iload         6
     168: aload         4
     170: invokestatic  #122                // Method org/bouncycastle/math/raw/Nat.isOne:(I[I)Z
     173: ifeq          185
     176: iconst_1
     177: iload         5
     179: iconst_2
     180: iand
     181: isub
     182: goto          186
     185: iconst_0
     186: ireturn

  static {};
    Code:
       0: lconst_1
       1: invokestatic  #110                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #100                // Field ONE:Ljava/math/BigInteger;
       7: ldc2_w        #50                 // long 2l
      10: invokestatic  #110                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      13: putstatic     #101                // Field TWO:Ljava/math/BigInteger;
      16: return
}
