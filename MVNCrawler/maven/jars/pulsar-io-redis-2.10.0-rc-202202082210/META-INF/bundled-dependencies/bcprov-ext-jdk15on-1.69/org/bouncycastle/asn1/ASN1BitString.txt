public abstract class org.bouncycastle.asn1.ASN1BitString extends org.bouncycastle.asn1.ASN1Primitive implements org.bouncycastle.asn1.ASN1String {
  private static final char[] table;

  protected final byte[] data;

  protected final int padBits;

  protected static int getPadBits(int);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_3
       3: istore_2
       4: iload_2
       5: iflt          54
       8: iload_2
       9: ifeq          35
      12: iload_0
      13: iload_2
      14: bipush        8
      16: imul
      17: ishr
      18: ifeq          48
      21: iload_0
      22: iload_2
      23: bipush        8
      25: imul
      26: ishr
      27: sipush        255
      30: iand
      31: istore_1
      32: goto          54
      35: iload_0
      36: ifeq          48
      39: iload_0
      40: sipush        255
      43: iand
      44: istore_1
      45: goto          54
      48: iinc          2, -1
      51: goto          4
      54: iload_1
      55: ifne          60
      58: iconst_0
      59: ireturn
      60: iconst_1
      61: istore_2
      62: iload_1
      63: iconst_1
      64: ishl
      65: dup
      66: istore_1
      67: sipush        255
      70: iand
      71: ifeq          80
      74: iinc          2, 1
      77: goto          62
      80: bipush        8
      82: iload_2
      83: isub
      84: ireturn

  protected static byte[] getBytes(int);
    Code:
       0: iload_0
       1: ifne          8
       4: iconst_0
       5: newarray       byte
       7: areturn
       8: iconst_4
       9: istore_1
      10: iconst_3
      11: istore_2
      12: iload_2
      13: iconst_1
      14: if_icmplt     42
      17: iload_0
      18: sipush        255
      21: iload_2
      22: bipush        8
      24: imul
      25: ishl
      26: iand
      27: ifeq          33
      30: goto          42
      33: iinc          1, -1
      36: iinc          2, -1
      39: goto          12
      42: iload_1
      43: newarray       byte
      45: astore_2
      46: iconst_0
      47: istore_3
      48: iload_3
      49: iload_1
      50: if_icmpge     73
      53: aload_2
      54: iload_3
      55: iload_0
      56: iload_3
      57: bipush        8
      59: imul
      60: ishr
      61: sipush        255
      64: iand
      65: i2b
      66: bastore
      67: iinc          3, 1
      70: goto          48
      73: aload_2
      74: areturn

  protected org.bouncycastle.asn1.ASN1BitString(byte, int);
    Code:
       0: aload_0
       1: invokespecial #139                // Method org/bouncycastle/asn1/ASN1Primitive."<init>":()V
       4: iload_2
       5: bipush        7
       7: if_icmpgt     14
      10: iload_2
      11: ifge          24
      14: new           #76                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #6                  // String pad bits cannot be greater than 7 or less than 0
      20: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: iconst_1
      26: newarray       byte
      28: dup
      29: iconst_0
      30: iload_1
      31: bastore
      32: putfield      #120                // Field data:[B
      35: aload_0
      36: iload_2
      37: putfield      #119                // Field padBits:I
      40: return

  public org.bouncycastle.asn1.ASN1BitString(byte[], int);
    Code:
       0: aload_0
       1: invokespecial #139                // Method org/bouncycastle/asn1/ASN1Primitive."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #79                 // class java/lang/NullPointerException
      11: dup
      12: ldc           #2                  // String \'data\' cannot be null
      14: invokespecial #128                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: arraylength
      20: ifne          37
      23: iload_2
      24: ifeq          37
      27: new           #76                 // class java/lang/IllegalArgumentException
      30: dup
      31: ldc           #8                  // String zero length data with non-zero pad bits
      33: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_2
      38: bipush        7
      40: if_icmpgt     47
      43: iload_2
      44: ifge          57
      47: new           #76                 // class java/lang/IllegalArgumentException
      50: dup
      51: ldc           #6                  // String pad bits cannot be greater than 7 or less than 0
      53: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: aload_1
      59: invokestatic  #142                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      62: putfield      #120                // Field data:[B
      65: aload_0
      66: iload_2
      67: putfield      #119                // Field padBits:I
      70: return

  public java.lang.String getString();
    Code:
       0: new           #80                 // class java/lang/StringBuffer
       3: dup
       4: ldc           #1                  // String #
       6: invokespecial #130                // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_0
      11: invokevirtual #135                // Method getEncoded:()[B
      14: astore_2
      15: goto          50
      18: astore_3
      19: new           #83                 // class org/bouncycastle/asn1/ASN1ParsingException
      22: dup
      23: new           #81                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #132                // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #4                  // String Internal error encoding BitString:
      32: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_3
      36: invokevirtual #123                // Method java/io/IOException.getMessage:()Ljava/lang/String;
      39: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #133                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: aload_3
      46: invokespecial #138                // Method org/bouncycastle/asn1/ASN1ParsingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      49: athrow
      50: iconst_0
      51: istore_3
      52: iload_3
      53: aload_2
      54: arraylength
      55: if_icmpeq     96
      58: aload_1
      59: getstatic     #121                // Field table:[C
      62: aload_2
      63: iload_3
      64: baload
      65: iconst_4
      66: iushr
      67: bipush        15
      69: iand
      70: caload
      71: invokevirtual #131                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      74: pop
      75: aload_1
      76: getstatic     #121                // Field table:[C
      79: aload_2
      80: iload_3
      81: baload
      82: bipush        15
      84: iand
      85: caload
      86: invokevirtual #131                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      89: pop
      90: iinc          3, 1
      93: goto          52
      96: aload_1
      97: invokevirtual #129                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     100: areturn
    Exception table:
       from    to  target type
          10    15    18   Class java/io/IOException

  public int intValue();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_4
       3: aload_0
       4: getfield      #120                // Field data:[B
       7: arraylength
       8: iconst_1
       9: isub
      10: invokestatic  #127                // Method java/lang/Math.min:(II)I
      13: istore_2
      14: iconst_0
      15: istore_3
      16: iload_3
      17: iload_2
      18: if_icmpge     45
      21: iload_1
      22: aload_0
      23: getfield      #120                // Field data:[B
      26: iload_3
      27: baload
      28: sipush        255
      31: iand
      32: bipush        8
      34: iload_3
      35: imul
      36: ishl
      37: ior
      38: istore_1
      39: iinc          3, 1
      42: goto          16
      45: iconst_0
      46: iload_2
      47: if_icmpgt     85
      50: iload_2
      51: iconst_4
      52: if_icmpge     85
      55: aload_0
      56: getfield      #120                // Field data:[B
      59: iload_2
      60: baload
      61: sipush        255
      64: aload_0
      65: getfield      #119                // Field padBits:I
      68: ishl
      69: iand
      70: i2b
      71: istore_3
      72: iload_1
      73: iload_3
      74: sipush        255
      77: iand
      78: bipush        8
      80: iload_2
      81: imul
      82: ishl
      83: ior
      84: istore_1
      85: iload_1
      86: ireturn

  public byte[] getOctets();
    Code:
       0: aload_0
       1: getfield      #119                // Field padBits:I
       4: ifeq          17
       7: new           #77                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #5                  // String attempt to get non-octet aligned data from BIT STRING
      13: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #120                // Field data:[B
      21: invokestatic  #142                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      24: areturn

  public byte[] getBytes();
    Code:
       0: iconst_0
       1: aload_0
       2: getfield      #120                // Field data:[B
       5: arraylength
       6: if_icmpne     14
       9: aload_0
      10: getfield      #120                // Field data:[B
      13: areturn
      14: aload_0
      15: getfield      #120                // Field data:[B
      18: invokestatic  #142                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      21: astore_1
      22: aload_1
      23: aload_0
      24: getfield      #120                // Field data:[B
      27: arraylength
      28: iconst_1
      29: isub
      30: dup2
      31: baload
      32: sipush        255
      35: aload_0
      36: getfield      #119                // Field padBits:I
      39: ishl
      40: iand
      41: i2b
      42: bastore
      43: aload_1
      44: areturn

  public int getPadBits();
    Code:
       0: aload_0
       1: getfield      #119                // Field padBits:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #136                // Method getString:()Ljava/lang/String;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #120                // Field data:[B
       4: arraylength
       5: istore_1
       6: iinc          1, -1
       9: iload_1
      10: ifge          15
      13: iconst_1
      14: ireturn
      15: aload_0
      16: getfield      #120                // Field data:[B
      19: iload_1
      20: baload
      21: sipush        255
      24: aload_0
      25: getfield      #119                // Field padBits:I
      28: ishl
      29: iand
      30: i2b
      31: istore_2
      32: aload_0
      33: getfield      #120                // Field data:[B
      36: iconst_0
      37: iload_1
      38: invokestatic  #143                // Method org/bouncycastle/util/Arrays.hashCode:([BII)I
      41: istore_3
      42: iload_3
      43: sipush        257
      46: imul
      47: istore_3
      48: iload_3
      49: iload_2
      50: ixor
      51: istore_3
      52: iload_3
      53: aload_0
      54: getfield      #119                // Field padBits:I
      57: ixor
      58: ireturn

  boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive);
    Code:
       0: aload_1
       1: instanceof    #82                 // class org/bouncycastle/asn1/ASN1BitString
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #82                 // class org/bouncycastle/asn1/ASN1BitString
      13: astore_2
      14: aload_0
      15: getfield      #119                // Field padBits:I
      18: aload_2
      19: getfield      #119                // Field padBits:I
      22: if_icmpeq     27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: getfield      #120                // Field data:[B
      31: astore_3
      32: aload_2
      33: getfield      #120                // Field data:[B
      36: astore        4
      38: aload_3
      39: arraylength
      40: istore        5
      42: iload         5
      44: aload         4
      46: arraylength
      47: if_icmpeq     52
      50: iconst_0
      51: ireturn
      52: iinc          5, -1
      55: iload         5
      57: ifge          62
      60: iconst_1
      61: ireturn
      62: iconst_0
      63: istore        6
      65: iload         6
      67: iload         5
      69: if_icmpge     92
      72: aload_3
      73: iload         6
      75: baload
      76: aload         4
      78: iload         6
      80: baload
      81: if_icmpeq     86
      84: iconst_0
      85: ireturn
      86: iinc          6, 1
      89: goto          65
      92: aload_3
      93: iload         5
      95: baload
      96: sipush        255
      99: aload_0
     100: getfield      #119                // Field padBits:I
     103: ishl
     104: iand
     105: i2b
     106: istore        6
     108: aload         4
     110: iload         5
     112: baload
     113: sipush        255
     116: aload_0
     117: getfield      #119                // Field padBits:I
     120: ishl
     121: iand
     122: i2b
     123: istore        7
     125: iload         6
     127: iload         7
     129: if_icmpne     136
     132: iconst_1
     133: goto          137
     136: iconst_0
     137: ireturn

  static org.bouncycastle.asn1.ASN1BitString fromInputStream(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     15
       5: new           #76                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #7                  // String truncated BIT STRING detected
      11: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_1
      16: invokevirtual #124                // Method java/io/InputStream.read:()I
      19: istore_2
      20: iload_0
      21: iconst_1
      22: isub
      23: newarray       byte
      25: astore_3
      26: aload_3
      27: arraylength
      28: ifeq          93
      31: aload_1
      32: aload_3
      33: invokestatic  #144                // Method org/bouncycastle/util/io/Streams.readFully:(Ljava/io/InputStream;[B)I
      36: aload_3
      37: arraylength
      38: if_icmpeq     51
      41: new           #73                 // class java/io/EOFException
      44: dup
      45: ldc           #3                  // String EOF encountered in middle of BIT STRING
      47: invokespecial #122                // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: iload_2
      52: ifle          93
      55: iload_2
      56: bipush        8
      58: if_icmpge     93
      61: aload_3
      62: aload_3
      63: arraylength
      64: iconst_1
      65: isub
      66: baload
      67: aload_3
      68: aload_3
      69: arraylength
      70: iconst_1
      71: isub
      72: baload
      73: sipush        255
      76: iload_2
      77: ishl
      78: iand
      79: i2b
      80: if_icmpeq     93
      83: new           #87                 // class org/bouncycastle/asn1/DLBitString
      86: dup
      87: aload_3
      88: iload_2
      89: invokespecial #141                // Method org/bouncycastle/asn1/DLBitString."<init>":([BI)V
      92: areturn
      93: new           #86                 // class org/bouncycastle/asn1/DERBitString
      96: dup
      97: aload_3
      98: iload_2
      99: invokespecial #140                // Method org/bouncycastle/asn1/DERBitString."<init>":([BI)V
     102: areturn

  public org.bouncycastle.asn1.ASN1Primitive getLoadedObject();
    Code:
       0: aload_0
       1: invokevirtual #137                // Method toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
       4: areturn

  org.bouncycastle.asn1.ASN1Primitive toDERObject();
    Code:
       0: new           #86                 // class org/bouncycastle/asn1/DERBitString
       3: dup
       4: aload_0
       5: getfield      #120                // Field data:[B
       8: aload_0
       9: getfield      #119                // Field padBits:I
      12: invokespecial #140                // Method org/bouncycastle/asn1/DERBitString."<init>":([BI)V
      15: areturn

  org.bouncycastle.asn1.ASN1Primitive toDLObject();
    Code:
       0: new           #87                 // class org/bouncycastle/asn1/DLBitString
       3: dup
       4: aload_0
       5: getfield      #120                // Field data:[B
       8: aload_0
       9: getfield      #119                // Field padBits:I
      12: invokespecial #141                // Method org/bouncycastle/asn1/DLBitString."<init>":([BI)V
      15: areturn

  abstract void encode(org.bouncycastle.asn1.ASN1OutputStream, boolean) throws java.io.IOException;

  static {};
    Code:
       0: bipush        16
       2: newarray       char
       4: dup
       5: iconst_0
       6: bipush        48
       8: castore
       9: dup
      10: iconst_1
      11: bipush        49
      13: castore
      14: dup
      15: iconst_2
      16: bipush        50
      18: castore
      19: dup
      20: iconst_3
      21: bipush        51
      23: castore
      24: dup
      25: iconst_4
      26: bipush        52
      28: castore
      29: dup
      30: iconst_5
      31: bipush        53
      33: castore
      34: dup
      35: bipush        6
      37: bipush        54
      39: castore
      40: dup
      41: bipush        7
      43: bipush        55
      45: castore
      46: dup
      47: bipush        8
      49: bipush        56
      51: castore
      52: dup
      53: bipush        9
      55: bipush        57
      57: castore
      58: dup
      59: bipush        10
      61: bipush        65
      63: castore
      64: dup
      65: bipush        11
      67: bipush        66
      69: castore
      70: dup
      71: bipush        12
      73: bipush        67
      75: castore
      76: dup
      77: bipush        13
      79: bipush        68
      81: castore
      82: dup
      83: bipush        14
      85: bipush        69
      87: castore
      88: dup
      89: bipush        15
      91: bipush        70
      93: castore
      94: putstatic     #121                // Field table:[C
      97: return
}
