public class org.bouncycastle.pqc.math.linearalgebra.GF2nONBField extends org.bouncycastle.pqc.math.linearalgebra.GF2nField {
  private static final int MAXLONG;

  private int mLength;

  private int mBit;

  private int mType;

  int[][] mMult;

  public org.bouncycastle.pqc.math.linearalgebra.GF2nONBField(int, java.security.SecureRandom) throws java.lang.RuntimeException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #202                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nField."<init>":(Ljava/security/SecureRandom;)V
       5: iload_1
       6: iconst_3
       7: if_icmpge     20
      10: new           #85                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #8                  // String k must be at least 3
      16: invokespecial #183                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: iload_1
      22: putfield      #175                // Field mDegree:I
      25: aload_0
      26: aload_0
      27: getfield      #175                // Field mDegree:I
      30: bipush        64
      32: idiv
      33: putfield      #176                // Field mLength:I
      36: aload_0
      37: aload_0
      38: getfield      #175                // Field mDegree:I
      41: bipush        63
      43: iand
      44: putfield      #174                // Field mBit:I
      47: aload_0
      48: getfield      #174                // Field mBit:I
      51: ifne          63
      54: aload_0
      55: bipush        64
      57: putfield      #174                // Field mBit:I
      60: goto          73
      63: aload_0
      64: dup
      65: getfield      #176                // Field mLength:I
      68: iconst_1
      69: iadd
      70: putfield      #176                // Field mLength:I
      73: aload_0
      74: invokespecial #208                // Method computeType:()V
      77: aload_0
      78: getfield      #177                // Field mType:I
      81: iconst_3
      82: if_icmpge     139
      85: aload_0
      86: aload_0
      87: getfield      #175                // Field mDegree:I
      90: iconst_2
      91: multianewarray #84,  2            // class "[[I"
      95: putfield      #178                // Field mMult:[[I
      98: iconst_0
      99: istore_3
     100: iload_3
     101: aload_0
     102: getfield      #175                // Field mDegree:I
     105: if_icmpge     132
     108: aload_0
     109: getfield      #178                // Field mMult:[[I
     112: iload_3
     113: aaload
     114: iconst_0
     115: iconst_m1
     116: iastore
     117: aload_0
     118: getfield      #178                // Field mMult:[[I
     121: iload_3
     122: aaload
     123: iconst_1
     124: iconst_m1
     125: iastore
     126: iinc          3, 1
     129: goto          100
     132: aload_0
     133: invokespecial #207                // Method computeMultMatrix:()V
     136: goto          169
     139: new           #86                 // class java/lang/RuntimeException
     142: dup
     143: new           #87                 // class java/lang/StringBuilder
     146: dup
     147: invokespecial #185                // Method java/lang/StringBuilder."<init>":()V
     150: ldc           #1                  // String \nThe type of this field is
     152: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload_0
     156: getfield      #177                // Field mType:I
     159: invokevirtual #187                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     162: invokevirtual #186                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: invokespecial #184                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     168: athrow
     169: aload_0
     170: invokevirtual #206                // Method computeFieldPolynomial:()V
     173: aload_0
     174: new           #89                 // class java/util/Vector
     177: dup
     178: invokespecial #191                // Method java/util/Vector."<init>":()V
     181: putfield      #180                // Field fields:Ljava/util/Vector;
     184: aload_0
     185: new           #89                 // class java/util/Vector
     188: dup
     189: invokespecial #191                // Method java/util/Vector."<init>":()V
     192: putfield      #181                // Field matrices:Ljava/util/Vector;
     195: return

  int getONBLength();
    Code:
       0: aload_0
       1: getfield      #176                // Field mLength:I
       4: ireturn

  int getONBBit();
    Code:
       0: aload_0
       1: getfield      #174                // Field mBit:I
       4: ireturn

  protected org.bouncycastle.pqc.math.linearalgebra.GF2nElement getRandomRoot(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial);
    Code:
       0: new           #95                 // class org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #216                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial."<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2Polynomial;Lorg/bouncycastle/pqc/math/linearalgebra/GF2nField;)V
       9: astore        7
      11: aload         7
      13: invokevirtual #211                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial.getDegree:()I
      16: istore        8
      18: iload         8
      20: iconst_1
      21: if_icmple     177
      24: new           #93                 // class org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement
      27: dup
      28: aload_0
      29: aload_0
      30: getfield      #179                // Field random:Ljava/security/SecureRandom;
      33: invokespecial #204                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement."<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBField;Ljava/security/SecureRandom;)V
      36: astore        4
      38: new           #95                 // class org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial
      41: dup
      42: iconst_2
      43: aload_0
      44: invokestatic  #205                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement.ZERO:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBField;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2nONBElement;
      47: invokespecial #213                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial."<init>":(ILorg/bouncycastle/pqc/math/linearalgebra/GF2nElement;)V
      50: astore_3
      51: aload_3
      52: iconst_1
      53: aload         4
      55: invokevirtual #214                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial.set:(ILorg/bouncycastle/pqc/math/linearalgebra/GF2nElement;)V
      58: new           #95                 // class org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial
      61: dup
      62: aload_3
      63: invokespecial #215                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial."<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial;)V
      66: astore_2
      67: iconst_1
      68: istore        9
      70: iload         9
      72: aload_0
      73: getfield      #175                // Field mDegree:I
      76: iconst_1
      77: isub
      78: if_icmpgt     101
      81: aload_2
      82: aload_2
      83: aload         7
      85: invokevirtual #220                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial.multiplyAndReduce:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial;Lorg/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial;
      88: astore_2
      89: aload_2
      90: aload_3
      91: invokevirtual #217                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial.add:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial;
      94: astore_2
      95: iinc          9, 1
      98: goto          70
     101: aload_2
     102: aload         7
     104: invokevirtual #218                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial.gcd:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial;
     107: astore        5
     109: aload         5
     111: invokevirtual #211                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial.getDegree:()I
     114: istore        6
     116: aload         7
     118: invokevirtual #211                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial.getDegree:()I
     121: istore        8
     123: iload         6
     125: ifeq          24
     128: iload         6
     130: iload         8
     132: if_icmpeq     24
     135: iload         6
     137: iconst_1
     138: ishl
     139: iload         8
     141: if_icmple     156
     144: aload         7
     146: aload         5
     148: invokevirtual #219                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial.quotient:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial;
     151: astore        7
     153: goto          167
     156: new           #95                 // class org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial
     159: dup
     160: aload         5
     162: invokespecial #215                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial."<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial;)V
     165: astore        7
     167: aload         7
     169: invokevirtual #211                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial.getDegree:()I
     172: istore        8
     174: goto          18
     177: aload         7
     179: iconst_0
     180: invokevirtual #212                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial.at:(I)Lorg/bouncycastle/pqc/math/linearalgebra/GF2nElement;
     183: areturn

  protected void computeCOBMatrix(org.bouncycastle.pqc.math.linearalgebra.GF2nField);
    Code:
       0: aload_0
       1: getfield      #175                // Field mDegree:I
       4: aload_1
       5: getfield      #171                // Field org/bouncycastle/pqc/math/linearalgebra/GF2nField.mDegree:I
       8: if_icmpeq     21
      11: new           #85                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #3                  // String GF2nField.computeCOBMatrix: B1 has a different degree and thus cannot be coverted to!
      17: invokespecial #183                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #175                // Field mDegree:I
      25: anewarray     #90                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial
      28: astore        6
      30: iconst_0
      31: istore_2
      32: iload_2
      33: aload_0
      34: getfield      #175                // Field mDegree:I
      37: if_icmpge     61
      40: aload         6
      42: iload_2
      43: new           #90                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial
      46: dup
      47: aload_0
      48: getfield      #175                // Field mDegree:I
      51: invokespecial #193                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial."<init>":(I)V
      54: aastore
      55: iinc          2, 1
      58: goto          32
      61: aload_1
      62: aload_0
      63: getfield      #182                // Field fieldPolynomial:Lorg/bouncycastle/pqc/math/linearalgebra/GF2Polynomial;
      66: invokevirtual #203                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nField.getRandomRoot:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2Polynomial;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2nElement;
      69: astore        5
      71: aload         5
      73: invokevirtual #198                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement.isZero:()Z
      76: ifne          61
      79: aload_0
      80: getfield      #175                // Field mDegree:I
      83: anewarray     #96                 // class org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomialElement
      86: astore        4
      88: aload         4
      90: iconst_0
      91: aload         5
      93: invokevirtual #200                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement.clone:()Ljava/lang/Object;
      96: checkcast     #91                 // class org/bouncycastle/pqc/math/linearalgebra/GF2nElement
      99: aastore
     100: iconst_1
     101: istore_2
     102: iload_2
     103: aload_0
     104: getfield      #175                // Field mDegree:I
     107: if_icmpge     129
     110: aload         4
     112: iload_2
     113: aload         4
     115: iload_2
     116: iconst_1
     117: isub
     118: aaload
     119: invokevirtual #201                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement.square:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2nElement;
     122: aastore
     123: iinc          2, 1
     126: goto          102
     129: iconst_0
     130: istore_2
     131: iload_2
     132: aload_0
     133: getfield      #175                // Field mDegree:I
     136: if_icmpge     194
     139: iconst_0
     140: istore_3
     141: iload_3
     142: aload_0
     143: getfield      #175                // Field mDegree:I
     146: if_icmpge     188
     149: aload         4
     151: iload_2
     152: aaload
     153: iload_3
     154: invokevirtual #199                // Method org/bouncycastle/pqc/math/linearalgebra/GF2nElement.testBit:(I)Z
     157: ifeq          182
     160: aload         6
     162: aload_0
     163: getfield      #175                // Field mDegree:I
     166: iload_3
     167: isub
     168: iconst_1
     169: isub
     170: aaload
     171: aload_0
     172: getfield      #175                // Field mDegree:I
     175: iload_2
     176: isub
     177: iconst_1
     178: isub
     179: invokevirtual #194                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial.setBit:(I)V
     182: iinc          3, 1
     185: goto          141
     188: iinc          2, 1
     191: goto          131
     194: aload_0
     195: getfield      #180                // Field fields:Ljava/util/Vector;
     198: aload_1
     199: invokevirtual #192                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     202: aload_0
     203: getfield      #181                // Field matrices:Ljava/util/Vector;
     206: aload         6
     208: invokevirtual #192                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     211: aload_1
     212: getfield      #172                // Field org/bouncycastle/pqc/math/linearalgebra/GF2nField.fields:Ljava/util/Vector;
     215: aload_0
     216: invokevirtual #192                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     219: aload_1
     220: getfield      #173                // Field org/bouncycastle/pqc/math/linearalgebra/GF2nField.matrices:Ljava/util/Vector;
     223: aload_0
     224: aload         6
     226: invokevirtual #210                // Method invertMatrix:([Lorg/bouncycastle/pqc/math/linearalgebra/GF2Polynomial;)[Lorg/bouncycastle/pqc/math/linearalgebra/GF2Polynomial;
     229: invokevirtual #192                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     232: return

  protected void computeFieldPolynomial();
    Code:
       0: aload_0
       1: getfield      #177                // Field mType:I
       4: iconst_1
       5: if_icmpne     30
       8: aload_0
       9: new           #90                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial
      12: dup
      13: aload_0
      14: getfield      #175                // Field mDegree:I
      17: iconst_1
      18: iadd
      19: ldc           #2                  // String ALL
      21: invokespecial #195                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial."<init>":(ILjava/lang/String;)V
      24: putfield      #182                // Field fieldPolynomial:Lorg/bouncycastle/pqc/math/linearalgebra/GF2Polynomial;
      27: goto          112
      30: aload_0
      31: getfield      #177                // Field mType:I
      34: iconst_2
      35: if_icmpne     112
      38: new           #90                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial
      41: dup
      42: aload_0
      43: getfield      #175                // Field mDegree:I
      46: iconst_1
      47: iadd
      48: ldc           #4                  // String ONE
      50: invokespecial #195                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial."<init>":(ILjava/lang/String;)V
      53: astore_1
      54: new           #90                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial
      57: dup
      58: aload_0
      59: getfield      #175                // Field mDegree:I
      62: iconst_1
      63: iadd
      64: ldc           #6                  // String X
      66: invokespecial #195                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial."<init>":(ILjava/lang/String;)V
      69: astore_2
      70: aload_2
      71: aload_1
      72: invokevirtual #197                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial.addToThis:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2Polynomial;)V
      75: iconst_1
      76: istore        4
      78: iload         4
      80: aload_0
      81: getfield      #175                // Field mDegree:I
      84: if_icmpge     107
      87: aload_1
      88: astore_3
      89: aload_2
      90: astore_1
      91: aload_1
      92: invokevirtual #196                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial.shiftLeft:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2Polynomial;
      95: astore_2
      96: aload_2
      97: aload_3
      98: invokevirtual #197                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial.addToThis:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2Polynomial;)V
     101: iinc          4, 1
     104: goto          78
     107: aload_0
     108: aload_2
     109: putfield      #182                // Field fieldPolynomial:Lorg/bouncycastle/pqc/math/linearalgebra/GF2Polynomial;
     112: return

  int[][] invMatrix(int[][]);
    Code:
       0: aload_0
       1: getfield      #175                // Field mDegree:I
       4: aload_0
       5: getfield      #175                // Field mDegree:I
       8: multianewarray #84,  2            // class "[[I"
      12: astore_2
      13: aload_1
      14: astore_2
      15: aload_0
      16: getfield      #175                // Field mDegree:I
      19: aload_0
      20: getfield      #175                // Field mDegree:I
      23: multianewarray #84,  2            // class "[[I"
      27: astore_3
      28: iconst_0
      29: istore        4
      31: iload         4
      33: aload_0
      34: getfield      #175                // Field mDegree:I
      37: if_icmpge     54
      40: aload_3
      41: iload         4
      43: aaload
      44: iload         4
      46: iconst_1
      47: iastore
      48: iinc          4, 1
      51: goto          31
      54: iconst_0
      55: istore        4
      57: iload         4
      59: aload_0
      60: getfield      #175                // Field mDegree:I
      63: if_icmpge     112
      66: iload         4
      68: istore        5
      70: iload         5
      72: aload_0
      73: getfield      #175                // Field mDegree:I
      76: if_icmpge     106
      79: aload_2
      80: aload_0
      81: getfield      #175                // Field mDegree:I
      84: iconst_1
      85: isub
      86: iload         4
      88: isub
      89: aaload
      90: iload         5
      92: aload_2
      93: iload         4
      95: aaload
      96: iload         4
      98: iaload
      99: iastore
     100: iinc          5, 1
     103: goto          70
     106: iinc          4, 1
     109: goto          57
     112: aconst_null
     113: checkcast     #84                 // class "[[I"
     116: areturn

  private void computeType() throws java.lang.RuntimeException;
    Code:
       0: aload_0
       1: getfield      #175                // Field mDegree:I
       4: bipush        7
       6: iand
       7: ifne          20
      10: new           #86                 // class java/lang/RuntimeException
      13: dup
      14: ldc           #5                  // String The extension degree is divisible by 8!
      16: invokespecial #184                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: iconst_0
      21: istore_1
      22: iconst_0
      23: istore_2
      24: aload_0
      25: iconst_1
      26: putfield      #177                // Field mType:I
      29: iconst_0
      30: istore_3
      31: iload_3
      32: iconst_1
      33: if_icmpeq     93
      36: aload_0
      37: getfield      #177                // Field mType:I
      40: aload_0
      41: getfield      #175                // Field mDegree:I
      44: imul
      45: iconst_1
      46: iadd
      47: istore_1
      48: iload_1
      49: invokestatic  #221                // Method org/bouncycastle/pqc/math/linearalgebra/IntegerFunctions.isPrime:(I)Z
      52: ifeq          80
      55: iconst_2
      56: iload_1
      57: invokestatic  #223                // Method org/bouncycastle/pqc/math/linearalgebra/IntegerFunctions.order:(II)I
      60: istore_2
      61: aload_0
      62: getfield      #177                // Field mType:I
      65: aload_0
      66: getfield      #175                // Field mDegree:I
      69: imul
      70: iload_2
      71: idiv
      72: aload_0
      73: getfield      #175                // Field mDegree:I
      76: invokestatic  #222                // Method org/bouncycastle/pqc/math/linearalgebra/IntegerFunctions.gcd:(II)I
      79: istore_3
      80: aload_0
      81: dup
      82: getfield      #177                // Field mType:I
      85: iconst_1
      86: iadd
      87: putfield      #177                // Field mType:I
      90: goto          31
      93: aload_0
      94: dup
      95: getfield      #177                // Field mType:I
      98: iconst_1
      99: isub
     100: putfield      #177                // Field mType:I
     103: aload_0
     104: getfield      #177                // Field mType:I
     107: iconst_1
     108: if_icmpne     164
     111: aload_0
     112: getfield      #175                // Field mDegree:I
     115: iconst_1
     116: ishl
     117: iconst_1
     118: iadd
     119: istore_1
     120: iload_1
     121: invokestatic  #221                // Method org/bouncycastle/pqc/math/linearalgebra/IntegerFunctions.isPrime:(I)Z
     124: ifeq          164
     127: iconst_2
     128: iload_1
     129: invokestatic  #223                // Method org/bouncycastle/pqc/math/linearalgebra/IntegerFunctions.order:(II)I
     132: istore_2
     133: aload_0
     134: getfield      #175                // Field mDegree:I
     137: iconst_1
     138: ishl
     139: iload_2
     140: idiv
     141: aload_0
     142: getfield      #175                // Field mDegree:I
     145: invokestatic  #222                // Method org/bouncycastle/pqc/math/linearalgebra/IntegerFunctions.gcd:(II)I
     148: istore_3
     149: iload_3
     150: iconst_1
     151: if_icmpne     164
     154: aload_0
     155: dup
     156: getfield      #177                // Field mType:I
     159: iconst_1
     160: iadd
     161: putfield      #177                // Field mType:I
     164: return

  private void computeMultMatrix();
    Code:
       0: aload_0
       1: getfield      #177                // Field mType:I
       4: bipush        7
       6: iand
       7: ifeq          471
      10: aload_0
      11: getfield      #177                // Field mType:I
      14: aload_0
      15: getfield      #175                // Field mDegree:I
      18: imul
      19: iconst_1
      20: iadd
      21: istore_1
      22: iload_1
      23: newarray       int
      25: astore_2
      26: aload_0
      27: getfield      #177                // Field mType:I
      30: iconst_1
      31: if_icmpne     39
      34: iconst_1
      35: istore_3
      36: goto          64
      39: aload_0
      40: getfield      #177                // Field mType:I
      43: iconst_2
      44: if_icmpne     54
      47: iload_1
      48: iconst_1
      49: isub
      50: istore_3
      51: goto          64
      54: aload_0
      55: aload_0
      56: getfield      #177                // Field mType:I
      59: iload_1
      60: invokespecial #209                // Method elementOfOrder:(II)I
      63: istore_3
      64: iconst_1
      65: istore        4
      67: iconst_0
      68: istore        6
      70: iload         6
      72: aload_0
      73: getfield      #177                // Field mType:I
      76: if_icmpge     151
      79: iload         4
      81: istore        5
      83: iconst_0
      84: istore        7
      86: iload         7
      88: aload_0
      89: getfield      #175                // Field mDegree:I
      92: if_icmpge     126
      95: aload_2
      96: iload         5
      98: iload         7
     100: iastore
     101: iload         5
     103: iconst_1
     104: ishl
     105: iload_1
     106: irem
     107: istore        5
     109: iload         5
     111: ifge          120
     114: iload         5
     116: iload_1
     117: iadd
     118: istore        5
     120: iinc          7, 1
     123: goto          86
     126: iload_3
     127: iload         4
     129: imul
     130: iload_1
     131: irem
     132: istore        4
     134: iload         4
     136: ifge          145
     139: iload         4
     141: iload_1
     142: iadd
     143: istore        4
     145: iinc          6, 1
     148: goto          70
     151: aload_0
     152: getfield      #177                // Field mType:I
     155: iconst_1
     156: if_icmpne     372
     159: iconst_1
     160: istore        6
     162: iload         6
     164: iload_1
     165: iconst_1
     166: isub
     167: if_icmpge     234
     170: aload_0
     171: getfield      #178                // Field mMult:[[I
     174: aload_2
     175: iload         6
     177: iconst_1
     178: iadd
     179: iaload
     180: aaload
     181: iconst_0
     182: iaload
     183: iconst_m1
     184: if_icmpne     209
     187: aload_0
     188: getfield      #178                // Field mMult:[[I
     191: aload_2
     192: iload         6
     194: iconst_1
     195: iadd
     196: iaload
     197: aaload
     198: iconst_0
     199: aload_2
     200: iload_1
     201: iload         6
     203: isub
     204: iaload
     205: iastore
     206: goto          228
     209: aload_0
     210: getfield      #178                // Field mMult:[[I
     213: aload_2
     214: iload         6
     216: iconst_1
     217: iadd
     218: iaload
     219: aaload
     220: iconst_1
     221: aload_2
     222: iload_1
     223: iload         6
     225: isub
     226: iaload
     227: iastore
     228: iinc          6, 1
     231: goto          162
     234: aload_0
     235: getfield      #175                // Field mDegree:I
     238: iconst_1
     239: ishr
     240: istore        6
     242: iconst_1
     243: istore        7
     245: iload         7
     247: iload         6
     249: if_icmpgt     369
     252: aload_0
     253: getfield      #178                // Field mMult:[[I
     256: iload         7
     258: iconst_1
     259: isub
     260: aaload
     261: iconst_0
     262: iaload
     263: iconst_m1
     264: if_icmpne     288
     267: aload_0
     268: getfield      #178                // Field mMult:[[I
     271: iload         7
     273: iconst_1
     274: isub
     275: aaload
     276: iconst_0
     277: iload         6
     279: iload         7
     281: iadd
     282: iconst_1
     283: isub
     284: iastore
     285: goto          306
     288: aload_0
     289: getfield      #178                // Field mMult:[[I
     292: iload         7
     294: iconst_1
     295: isub
     296: aaload
     297: iconst_1
     298: iload         6
     300: iload         7
     302: iadd
     303: iconst_1
     304: isub
     305: iastore
     306: aload_0
     307: getfield      #178                // Field mMult:[[I
     310: iload         6
     312: iload         7
     314: iadd
     315: iconst_1
     316: isub
     317: aaload
     318: iconst_0
     319: iaload
     320: iconst_m1
     321: if_icmpne     345
     324: aload_0
     325: getfield      #178                // Field mMult:[[I
     328: iload         6
     330: iload         7
     332: iadd
     333: iconst_1
     334: isub
     335: aaload
     336: iconst_0
     337: iload         7
     339: iconst_1
     340: isub
     341: iastore
     342: goto          363
     345: aload_0
     346: getfield      #178                // Field mMult:[[I
     349: iload         6
     351: iload         7
     353: iadd
     354: iconst_1
     355: isub
     356: aaload
     357: iconst_1
     358: iload         7
     360: iconst_1
     361: isub
     362: iastore
     363: iinc          7, 1
     366: goto          245
     369: goto          468
     372: aload_0
     373: getfield      #177                // Field mType:I
     376: iconst_2
     377: if_icmpne     458
     380: iconst_1
     381: istore        6
     383: iload         6
     385: iload_1
     386: iconst_1
     387: isub
     388: if_icmpge     455
     391: aload_0
     392: getfield      #178                // Field mMult:[[I
     395: aload_2
     396: iload         6
     398: iconst_1
     399: iadd
     400: iaload
     401: aaload
     402: iconst_0
     403: iaload
     404: iconst_m1
     405: if_icmpne     430
     408: aload_0
     409: getfield      #178                // Field mMult:[[I
     412: aload_2
     413: iload         6
     415: iconst_1
     416: iadd
     417: iaload
     418: aaload
     419: iconst_0
     420: aload_2
     421: iload_1
     422: iload         6
     424: isub
     425: iaload
     426: iastore
     427: goto          449
     430: aload_0
     431: getfield      #178                // Field mMult:[[I
     434: aload_2
     435: iload         6
     437: iconst_1
     438: iadd
     439: iaload
     440: aaload
     441: iconst_1
     442: aload_2
     443: iload_1
     444: iload         6
     446: isub
     447: iaload
     448: iastore
     449: iinc          6, 1
     452: goto          383
     455: goto          468
     458: new           #86                 // class java/lang/RuntimeException
     461: dup
     462: ldc           #9                  // String only type 1 or type 2 implemented
     464: invokespecial #184                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     467: athrow
     468: goto          481
     471: new           #86                 // class java/lang/RuntimeException
     474: dup
     475: ldc           #7                  // String bisher nur fuer Gausssche Normalbasen implementiert
     477: invokespecial #184                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     480: athrow
     481: return

  private int elementOfOrder(int, int);
    Code:
       0: new           #88                 // class java/util/Random
       3: dup
       4: invokespecial #190                // Method java/util/Random."<init>":()V
       7: astore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: ifne          46
      16: aload_3
      17: invokevirtual #189                // Method java/util/Random.nextInt:()I
      20: istore        4
      22: iload         4
      24: iload_2
      25: iconst_1
      26: isub
      27: irem
      28: istore        4
      30: iload         4
      32: ifge          11
      35: iload         4
      37: iload_2
      38: iconst_1
      39: isub
      40: iadd
      41: istore        4
      43: goto          11
      46: iload         4
      48: iload_2
      49: invokestatic  #223                // Method org/bouncycastle/pqc/math/linearalgebra/IntegerFunctions.order:(II)I
      52: istore        5
      54: iload         5
      56: iload_1
      57: irem
      58: ifne          66
      61: iload         5
      63: ifne          112
      66: iload         4
      68: ifne          101
      71: aload_3
      72: invokevirtual #189                // Method java/util/Random.nextInt:()I
      75: istore        4
      77: iload         4
      79: iload_2
      80: iconst_1
      81: isub
      82: irem
      83: istore        4
      85: iload         4
      87: ifge          66
      90: iload         4
      92: iload_2
      93: iconst_1
      94: isub
      95: iadd
      96: istore        4
      98: goto          66
     101: iload         4
     103: iload_2
     104: invokestatic  #223                // Method org/bouncycastle/pqc/math/linearalgebra/IntegerFunctions.order:(II)I
     107: istore        5
     109: goto          54
     112: iload         4
     114: istore        6
     116: iload_1
     117: iload         5
     119: idiv
     120: istore        5
     122: iconst_2
     123: istore        7
     125: iload         7
     127: iload         5
     129: if_icmpgt     145
     132: iload         6
     134: iload         4
     136: imul
     137: istore        6
     139: iinc          7, 1
     142: goto          125
     145: iload         6
     147: ireturn
}
