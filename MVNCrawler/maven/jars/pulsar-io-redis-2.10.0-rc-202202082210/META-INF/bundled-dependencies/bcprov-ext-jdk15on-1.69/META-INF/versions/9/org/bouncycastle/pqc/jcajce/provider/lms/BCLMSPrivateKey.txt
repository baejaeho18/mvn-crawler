Compiled from "BCLMSPrivateKey.java"
public class org.bouncycastle.pqc.jcajce.provider.lms.BCLMSPrivateKey implements java.security.PrivateKey,org.bouncycastle.pqc.jcajce.interfaces.LMSPrivateKey {
  private static final long serialVersionUID;

  private transient org.bouncycastle.pqc.crypto.lms.LMSKeyParameters keyParams;

  private transient org.bouncycastle.asn1.ASN1Set attributes;

  public org.bouncycastle.pqc.jcajce.provider.lms.BCLMSPrivateKey(org.bouncycastle.pqc.crypto.lms.LMSKeyParameters);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
       9: return

  public org.bouncycastle.pqc.jcajce.provider.lms.BCLMSPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #3                  // Method init:(Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;)V
       9: return

  private void init(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getAttributes:()Lorg/bouncycastle/asn1/ASN1Set;
       5: putfield      #5                  // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
       8: aload_0
       9: aload_1
      10: invokestatic  #6                  // Method org/bouncycastle/pqc/crypto/util/PrivateKeyFactory.createKey:(Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;)Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      13: checkcast     #7                  // class org/bouncycastle/pqc/crypto/lms/LMSKeyParameters
      16: putfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
      19: return

  public long getIndex();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getUsagesRemaining:()J
       4: lconst_0
       5: lcmp
       6: ifne          19
       9: new           #9                  // class java/lang/IllegalStateException
      12: dup
      13: ldc           #10                 // String key exhausted
      15: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
      23: instanceof    #12                 // class org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters
      26: ifeq          41
      29: aload_0
      30: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
      33: checkcast     #12                 // class org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters
      36: invokevirtual #13                 // Method org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters.getIndex:()I
      39: i2l
      40: lreturn
      41: aload_0
      42: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
      45: checkcast     #14                 // class org/bouncycastle/pqc/crypto/lms/HSSPrivateKeyParameters
      48: invokevirtual #15                 // Method org/bouncycastle/pqc/crypto/lms/HSSPrivateKeyParameters.getIndex:()J
      51: lreturn

  public long getUsagesRemaining();
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
       4: instanceof    #12                 // class org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters
       7: ifeq          21
      10: aload_0
      11: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
      14: checkcast     #12                 // class org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters
      17: invokevirtual #16                 // Method org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters.getUsagesRemaining:()J
      20: lreturn
      21: aload_0
      22: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
      25: checkcast     #14                 // class org/bouncycastle/pqc/crypto/lms/HSSPrivateKeyParameters
      28: invokevirtual #17                 // Method org/bouncycastle/pqc/crypto/lms/HSSPrivateKeyParameters.getUsagesRemaining:()J
      31: lreturn

  public org.bouncycastle.pqc.jcajce.interfaces.LMSPrivateKey extractKeyShard(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
       4: instanceof    #12                 // class org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters
       7: ifeq          29
      10: new           #18                 // class org/bouncycastle/pqc/jcajce/provider/lms/BCLMSPrivateKey
      13: dup
      14: aload_0
      15: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
      18: checkcast     #12                 // class org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters
      21: iload_1
      22: invokevirtual #19                 // Method org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters.extractKeyShard:(I)Lorg/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters;
      25: invokespecial #20                 // Method "<init>":(Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;)V
      28: areturn
      29: new           #18                 // class org/bouncycastle/pqc/jcajce/provider/lms/BCLMSPrivateKey
      32: dup
      33: aload_0
      34: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
      37: checkcast     #14                 // class org/bouncycastle/pqc/crypto/lms/HSSPrivateKeyParameters
      40: iload_1
      41: invokevirtual #21                 // Method org/bouncycastle/pqc/crypto/lms/HSSPrivateKeyParameters.extractKeyShard:(I)Lorg/bouncycastle/pqc/crypto/lms/HSSPrivateKeyParameters;
      44: invokespecial #20                 // Method "<init>":(Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;)V
      47: areturn

  public java.lang.String getAlgorithm();
    Code:
       0: ldc           #22                 // String LMS
       2: areturn

  public java.lang.String getFormat();
    Code:
       0: ldc           #23                 // String PKCS#8
       2: areturn

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
       4: aload_0
       5: getfield      #5                  // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
       8: invokestatic  #24                 // Method org/bouncycastle/pqc/crypto/util/PrivateKeyInfoFactory.createPrivateKeyInfo:(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;Lorg/bouncycastle/asn1/ASN1Set;)Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;
      11: astore_1
      12: aload_1
      13: invokevirtual #25                 // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getEncoded:()[B
      16: areturn
      17: astore_1
      18: aconst_null
      19: areturn
    Exception table:
       from    to  target type
           0    16    17   Class java/io/IOException

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #18                 // class org/bouncycastle/pqc/jcajce/provider/lms/BCLMSPrivateKey
      11: ifeq          48
      14: aload_1
      15: checkcast     #18                 // class org/bouncycastle/pqc/jcajce/provider/lms/BCLMSPrivateKey
      18: astore_2
      19: aload_0
      20: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
      23: invokevirtual #27                 // Method org/bouncycastle/pqc/crypto/lms/LMSKeyParameters.getEncoded:()[B
      26: aload_2
      27: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
      30: invokevirtual #27                 // Method org/bouncycastle/pqc/crypto/lms/LMSKeyParameters.getEncoded:()[B
      33: invokestatic  #28                 // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      36: ireturn
      37: astore_3
      38: new           #9                  // class java/lang/IllegalStateException
      41: dup
      42: ldc           #29                 // String unable to perform equals
      44: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: iconst_0
      49: ireturn
    Exception table:
       from    to  target type
          19    36    37   Class java/io/IOException

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
       4: invokevirtual #27                 // Method org/bouncycastle/pqc/crypto/lms/LMSKeyParameters.getEncoded:()[B
       7: invokestatic  #30                 // Method org/bouncycastle/util/Arrays.hashCode:([B)I
      10: ireturn
      11: astore_1
      12: new           #9                  // class java/lang/IllegalStateException
      15: dup
      16: ldc           #31                 // String unable to calculate hashCode
      18: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/io/IOException

  org.bouncycastle.crypto.CipherParameters getKeyParams();
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
       4: areturn

  public int getLevels();
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
       4: instanceof    #12                 // class org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters
       7: ifeq          12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: getfield      #2                  // Field keyParams:Lorg/bouncycastle/pqc/crypto/lms/LMSKeyParameters;
      16: checkcast     #14                 // class org/bouncycastle/pqc/crypto/lms/HSSPrivateKeyParameters
      19: invokevirtual #32                 // Method org/bouncycastle/pqc/crypto/lms/HSSPrivateKeyParameters.getL:()I
      22: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_1
       5: invokevirtual #34                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       8: checkcast     #35                 // class "[B"
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokestatic  #36                 // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;
      17: invokespecial #3                  // Method init:(Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;)V
      20: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #38                 // Method getEncoded:()[B
       9: invokevirtual #39                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      12: return
}
