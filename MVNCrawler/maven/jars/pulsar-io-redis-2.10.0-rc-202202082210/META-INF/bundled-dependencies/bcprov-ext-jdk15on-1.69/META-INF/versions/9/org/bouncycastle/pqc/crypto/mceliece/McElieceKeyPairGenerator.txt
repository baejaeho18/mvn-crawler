Compiled from "McElieceKeyPairGenerator.java"
public class org.bouncycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator implements org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator {
  private static final java.lang.String OID;

  private org.bouncycastle.pqc.crypto.mceliece.McElieceKeyGenerationParameters mcElieceParams;

  private int m;

  private int n;

  private int t;

  private int fieldPoly;

  private java.security.SecureRandom random;

  private boolean initialized;

  public org.bouncycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field initialized:Z
       9: return

  private void initializeDefault();
    Code:
       0: new           #3                  // class org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters
       3: dup
       4: aconst_null
       5: new           #4                  // class org/bouncycastle/pqc/crypto/mceliece/McElieceParameters
       8: dup
       9: invokespecial #5                  // Method org/bouncycastle/pqc/crypto/mceliece/McElieceParameters."<init>":()V
      12: invokespecial #6                  // Method org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters."<init>":(Ljava/security/SecureRandom;Lorg/bouncycastle/pqc/crypto/mceliece/McElieceParameters;)V
      15: astore_1
      16: aload_0
      17: aload_1
      18: invokespecial #7                  // Method initialize:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V
      21: return

  private void initialize(org.bouncycastle.crypto.KeyGenerationParameters);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters
       5: putfield      #8                  // Field mcElieceParams:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters;
       8: aload_0
       9: aload_1
      10: invokevirtual #9                  // Method org/bouncycastle/crypto/KeyGenerationParameters.getRandom:()Ljava/security/SecureRandom;
      13: putfield      #10                 // Field random:Ljava/security/SecureRandom;
      16: aload_0
      17: aload_0
      18: getfield      #8                  // Field mcElieceParams:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters;
      21: invokevirtual #11                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters.getParameters:()Lorg/bouncycastle/pqc/crypto/mceliece/McElieceParameters;
      24: invokevirtual #12                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceParameters.getM:()I
      27: putfield      #13                 // Field m:I
      30: aload_0
      31: aload_0
      32: getfield      #8                  // Field mcElieceParams:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters;
      35: invokevirtual #11                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters.getParameters:()Lorg/bouncycastle/pqc/crypto/mceliece/McElieceParameters;
      38: invokevirtual #14                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceParameters.getN:()I
      41: putfield      #15                 // Field n:I
      44: aload_0
      45: aload_0
      46: getfield      #8                  // Field mcElieceParams:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters;
      49: invokevirtual #11                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters.getParameters:()Lorg/bouncycastle/pqc/crypto/mceliece/McElieceParameters;
      52: invokevirtual #16                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceParameters.getT:()I
      55: putfield      #17                 // Field t:I
      58: aload_0
      59: aload_0
      60: getfield      #8                  // Field mcElieceParams:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters;
      63: invokevirtual #11                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters.getParameters:()Lorg/bouncycastle/pqc/crypto/mceliece/McElieceParameters;
      66: invokevirtual #18                 // Method org/bouncycastle/pqc/crypto/mceliece/McElieceParameters.getFieldPoly:()I
      69: putfield      #19                 // Field fieldPoly:I
      72: aload_0
      73: iconst_1
      74: putfield      #2                  // Field initialized:Z
      77: return

  private org.bouncycastle.crypto.AsymmetricCipherKeyPair genKeyPair();
    Code:
       0: aload_0
       1: getfield      #2                  // Field initialized:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #20                 // Method initializeDefault:()V
      11: new           #21                 // class org/bouncycastle/pqc/math/linearalgebra/GF2mField
      14: dup
      15: aload_0
      16: getfield      #13                 // Field m:I
      19: aload_0
      20: getfield      #19                 // Field fieldPoly:I
      23: invokespecial #22                 // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField."<init>":(II)V
      26: astore_1
      27: new           #23                 // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      30: dup
      31: aload_1
      32: aload_0
      33: getfield      #17                 // Field t:I
      36: bipush        73
      38: aload_0
      39: getfield      #10                 // Field random:Ljava/security/SecureRandom;
      42: invokespecial #24                 // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM."<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;ICLjava/security/SecureRandom;)V
      45: astore_2
      46: new           #25                 // class org/bouncycastle/pqc/math/linearalgebra/PolynomialRingGF2m
      49: dup
      50: aload_1
      51: aload_2
      52: invokespecial #26                 // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialRingGF2m."<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)V
      55: astore_3
      56: aload_3
      57: invokevirtual #27                 // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialRingGF2m.getSquareRootMatrix:()[Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
      60: astore        4
      62: aload_1
      63: aload_2
      64: invokestatic  #28                 // Method org/bouncycastle/pqc/math/linearalgebra/GoppaCode.createCanonicalCheckMatrix:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
      67: astore        5
      69: aload         5
      71: aload_0
      72: getfield      #10                 // Field random:Ljava/security/SecureRandom;
      75: invokestatic  #29                 // Method org/bouncycastle/pqc/math/linearalgebra/GoppaCode.computeSystematicForm:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;Ljava/security/SecureRandom;)Lorg/bouncycastle/pqc/math/linearalgebra/GoppaCode$MaMaPe;
      78: astore        6
      80: aload         6
      82: invokevirtual #30                 // Method org/bouncycastle/pqc/math/linearalgebra/GoppaCode$MaMaPe.getSecondMatrix:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
      85: astore        7
      87: aload         6
      89: invokevirtual #31                 // Method org/bouncycastle/pqc/math/linearalgebra/GoppaCode$MaMaPe.getPermutation:()Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;
      92: astore        8
      94: aload         7
      96: invokevirtual #32                 // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.computeTranspose:()Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
      99: checkcast     #33                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     102: astore        9
     104: aload         9
     106: invokevirtual #34                 // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.extendLeftCompactForm:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
     109: astore        10
     111: aload         9
     113: invokevirtual #35                 // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.getNumRows:()I
     116: istore        11
     118: iload         11
     120: aload_0
     121: getfield      #10                 // Field random:Ljava/security/SecureRandom;
     124: invokestatic  #36                 // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.createRandomRegularMatrixAndItsInverse:(ILjava/security/SecureRandom;)[Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
     127: astore        12
     129: new           #37                 // class org/bouncycastle/pqc/math/linearalgebra/Permutation
     132: dup
     133: aload_0
     134: getfield      #15                 // Field n:I
     137: aload_0
     138: getfield      #10                 // Field random:Ljava/security/SecureRandom;
     141: invokespecial #38                 // Method org/bouncycastle/pqc/math/linearalgebra/Permutation."<init>":(ILjava/security/SecureRandom;)V
     144: astore        13
     146: aload         12
     148: iconst_0
     149: aaload
     150: aload         10
     152: invokevirtual #39                 // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;)Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
     155: checkcast     #33                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     158: astore        14
     160: aload         14
     162: aload         13
     164: invokevirtual #40                 // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;)Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
     167: checkcast     #33                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     170: astore        14
     172: new           #41                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters
     175: dup
     176: aload_0
     177: getfield      #15                 // Field n:I
     180: aload_0
     181: getfield      #17                 // Field t:I
     184: aload         14
     186: invokespecial #42                 // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters."<init>":(IILorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;)V
     189: astore        15
     191: new           #43                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters
     194: dup
     195: aload_0
     196: getfield      #15                 // Field n:I
     199: iload         11
     201: aload_1
     202: aload_2
     203: aload         8
     205: aload         13
     207: aload         12
     209: iconst_1
     210: aaload
     211: invokespecial #44                 // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters."<init>":(IILorg/bouncycastle/pqc/math/linearalgebra/GF2mField;Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;)V
     214: astore        16
     216: new           #45                 // class org/bouncycastle/crypto/AsymmetricCipherKeyPair
     219: dup
     220: aload         15
     222: aload         16
     224: invokespecial #46                 // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair."<init>":(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)V
     227: areturn

  public void init(org.bouncycastle.crypto.KeyGenerationParameters);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method initialize:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V
       5: return

  public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method genKeyPair:()Lorg/bouncycastle/crypto/AsymmetricCipherKeyPair;
       4: areturn
}
