Compiled from "WNafUtil.java"
class org.bouncycastle.math.ec.WNafUtil$2 implements org.bouncycastle.math.ec.PreCompCallback {
  final int val$minWidth;

  final boolean val$includeNegated;

  final org.bouncycastle.math.ec.ECPoint val$p;

  final org.bouncycastle.math.ec.ECCurve val$c;

  org.bouncycastle.math.ec.WNafUtil$2(int, boolean, org.bouncycastle.math.ec.ECPoint, org.bouncycastle.math.ec.ECCurve);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field val$minWidth:I
       5: aload_0
       6: iload_2
       7: putfield      #3                  // Field val$includeNegated:Z
      10: aload_0
      11: aload_3
      12: putfield      #4                  // Field val$p:Lorg/bouncycastle/math/ec/ECPoint;
      15: aload_0
      16: aload         4
      18: putfield      #5                  // Field val$c:Lorg/bouncycastle/math/ec/ECCurve;
      21: aload_0
      22: invokespecial #6                  // Method java/lang/Object."<init>":()V
      25: return

  public org.bouncycastle.math.ec.PreCompInfo precompute(org.bouncycastle.math.ec.PreCompInfo);
    Code:
       0: aload_1
       1: instanceof    #7                  // class org/bouncycastle/math/ec/WNafPreCompInfo
       4: ifeq          14
       7: aload_1
       8: checkcast     #7                  // class org/bouncycastle/math/ec/WNafPreCompInfo
      11: goto          15
      14: aconst_null
      15: astore_2
      16: iconst_2
      17: bipush        16
      19: aload_0
      20: getfield      #2                  // Field val$minWidth:I
      23: invokestatic  #8                  // Method java/lang/Math.min:(II)I
      26: invokestatic  #9                  // Method java/lang/Math.max:(II)I
      29: istore_3
      30: iconst_1
      31: iload_3
      32: iconst_2
      33: isub
      34: ishl
      35: istore        4
      37: aload_0
      38: aload_2
      39: iload_3
      40: iload         4
      42: aload_0
      43: getfield      #3                  // Field val$includeNegated:Z
      46: invokespecial #10                 // Method checkExisting:(Lorg/bouncycastle/math/ec/WNafPreCompInfo;IIZ)Z
      49: ifeq          59
      52: aload_2
      53: invokevirtual #11                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.decrementPromotionCountdown:()I
      56: pop
      57: aload_2
      58: areturn
      59: new           #7                  // class org/bouncycastle/math/ec/WNafPreCompInfo
      62: dup
      63: invokespecial #12                 // Method org/bouncycastle/math/ec/WNafPreCompInfo."<init>":()V
      66: astore        5
      68: aconst_null
      69: astore        6
      71: aconst_null
      72: astore        7
      74: aconst_null
      75: astore        8
      77: aconst_null
      78: aload_2
      79: if_acmpeq     126
      82: aload_2
      83: invokevirtual #11                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.decrementPromotionCountdown:()I
      86: istore        9
      88: aload         5
      90: iload         9
      92: invokevirtual #13                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.setPromotionCountdown:(I)V
      95: aload_2
      96: invokevirtual #14                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.getConfWidth:()I
      99: istore        10
     101: aload         5
     103: iload         10
     105: invokevirtual #15                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.setConfWidth:(I)V
     108: aload_2
     109: invokevirtual #16                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.getPreComp:()[Lorg/bouncycastle/math/ec/ECPoint;
     112: astore        6
     114: aload_2
     115: invokevirtual #17                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.getPreCompNeg:()[Lorg/bouncycastle/math/ec/ECPoint;
     118: astore        7
     120: aload_2
     121: invokevirtual #18                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.getTwice:()Lorg/bouncycastle/math/ec/ECPoint;
     124: astore        8
     126: bipush        16
     128: aload         5
     130: invokevirtual #14                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.getConfWidth:()I
     133: iload_3
     134: invokestatic  #9                  // Method java/lang/Math.max:(II)I
     137: invokestatic  #8                  // Method java/lang/Math.min:(II)I
     140: istore_3
     141: iconst_1
     142: iload_3
     143: iconst_2
     144: isub
     145: ishl
     146: istore        4
     148: iconst_0
     149: istore        9
     151: aconst_null
     152: aload         6
     154: if_acmpne     165
     157: invokestatic  #19                 // Method org/bouncycastle/math/ec/WNafUtil.access$000:()[Lorg/bouncycastle/math/ec/ECPoint;
     160: astore        6
     162: goto          170
     165: aload         6
     167: arraylength
     168: istore        9
     170: iload         9
     172: iload         4
     174: if_icmpge     467
     177: aload         6
     179: iload         4
     181: invokestatic  #20                 // Method org/bouncycastle/math/ec/WNafUtil.access$100:([Lorg/bouncycastle/math/ec/ECPoint;I)[Lorg/bouncycastle/math/ec/ECPoint;
     184: astore        6
     186: iload         4
     188: iconst_1
     189: if_icmpne     206
     192: aload         6
     194: iconst_0
     195: aload_0
     196: getfield      #4                  // Field val$p:Lorg/bouncycastle/math/ec/ECPoint;
     199: invokevirtual #21                 // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
     202: aastore
     203: goto          467
     206: iload         9
     208: istore        10
     210: iload         10
     212: ifne          226
     215: aload         6
     217: iconst_0
     218: aload_0
     219: getfield      #4                  // Field val$p:Lorg/bouncycastle/math/ec/ECPoint;
     222: aastore
     223: iconst_1
     224: istore        10
     226: aconst_null
     227: astore        11
     229: iload         4
     231: iconst_2
     232: if_icmpne     249
     235: aload         6
     237: iconst_1
     238: aload_0
     239: getfield      #4                  // Field val$p:Lorg/bouncycastle/math/ec/ECPoint;
     242: invokevirtual #22                 // Method org/bouncycastle/math/ec/ECPoint.threeTimes:()Lorg/bouncycastle/math/ec/ECPoint;
     245: aastore
     246: goto          449
     249: aload         8
     251: astore        12
     253: aload         6
     255: iload         10
     257: iconst_1
     258: isub
     259: aaload
     260: astore        13
     262: aconst_null
     263: aload         12
     265: if_acmpne     421
     268: aload         6
     270: iconst_0
     271: aaload
     272: invokevirtual #23                 // Method org/bouncycastle/math/ec/ECPoint.twice:()Lorg/bouncycastle/math/ec/ECPoint;
     275: astore        12
     277: aload         12
     279: astore        8
     281: aload         8
     283: invokevirtual #24                 // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
     286: ifne          421
     289: aload_0
     290: getfield      #5                  // Field val$c:Lorg/bouncycastle/math/ec/ECCurve;
     293: invokestatic  #25                 // Method org/bouncycastle/math/ec/ECAlgorithms.isFpCurve:(Lorg/bouncycastle/math/ec/ECCurve;)Z
     296: ifeq          421
     299: aload_0
     300: getfield      #5                  // Field val$c:Lorg/bouncycastle/math/ec/ECCurve;
     303: invokevirtual #26                 // Method org/bouncycastle/math/ec/ECCurve.getFieldSize:()I
     306: bipush        64
     308: if_icmplt     421
     311: aload_0
     312: getfield      #5                  // Field val$c:Lorg/bouncycastle/math/ec/ECCurve;
     315: invokevirtual #27                 // Method org/bouncycastle/math/ec/ECCurve.getCoordinateSystem:()I
     318: tableswitch   { // 2 to 4
                     2: 344
                     3: 344
                     4: 344
               default: 421
          }
     344: aload         8
     346: iconst_0
     347: invokevirtual #28                 // Method org/bouncycastle/math/ec/ECPoint.getZCoord:(I)Lorg/bouncycastle/math/ec/ECFieldElement;
     350: astore        11
     352: aload_0
     353: getfield      #5                  // Field val$c:Lorg/bouncycastle/math/ec/ECCurve;
     356: aload         8
     358: invokevirtual #29                 // Method org/bouncycastle/math/ec/ECPoint.getXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
     361: invokevirtual #30                 // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
     364: aload         8
     366: invokevirtual #31                 // Method org/bouncycastle/math/ec/ECPoint.getYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
     369: invokevirtual #30                 // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
     372: invokevirtual #32                 // Method org/bouncycastle/math/ec/ECCurve.createPoint:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     375: astore        12
     377: aload         11
     379: invokevirtual #33                 // Method org/bouncycastle/math/ec/ECFieldElement.square:()Lorg/bouncycastle/math/ec/ECFieldElement;
     382: astore        14
     384: aload         14
     386: aload         11
     388: invokevirtual #34                 // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
     391: astore        15
     393: aload         13
     395: aload         14
     397: invokevirtual #35                 // Method org/bouncycastle/math/ec/ECPoint.scaleX:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECPoint;
     400: aload         15
     402: invokevirtual #36                 // Method org/bouncycastle/math/ec/ECPoint.scaleY:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECPoint;
     405: astore        13
     407: iload         9
     409: ifne          421
     412: aload         6
     414: iconst_0
     415: aload         13
     417: aastore
     418: goto          421
     421: iload         10
     423: iload         4
     425: if_icmpge     449
     428: aload         6
     430: iload         10
     432: iinc          10, 1
     435: aload         13
     437: aload         12
     439: invokevirtual #37                 // Method org/bouncycastle/math/ec/ECPoint.add:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
     442: dup
     443: astore        13
     445: aastore
     446: goto          421
     449: aload_0
     450: getfield      #5                  // Field val$c:Lorg/bouncycastle/math/ec/ECCurve;
     453: aload         6
     455: iload         9
     457: iload         4
     459: iload         9
     461: isub
     462: aload         11
     464: invokevirtual #38                 // Method org/bouncycastle/math/ec/ECCurve.normalizeAll:([Lorg/bouncycastle/math/ec/ECPoint;IILorg/bouncycastle/math/ec/ECFieldElement;)V
     467: aload_0
     468: getfield      #3                  // Field val$includeNegated:Z
     471: ifeq          540
     474: aconst_null
     475: aload         7
     477: if_acmpne     493
     480: iconst_0
     481: istore        10
     483: iload         4
     485: anewarray     #39                 // class org/bouncycastle/math/ec/ECPoint
     488: astore        7
     490: goto          514
     493: aload         7
     495: arraylength
     496: istore        10
     498: iload         10
     500: iload         4
     502: if_icmpge     514
     505: aload         7
     507: iload         4
     509: invokestatic  #20                 // Method org/bouncycastle/math/ec/WNafUtil.access$100:([Lorg/bouncycastle/math/ec/ECPoint;I)[Lorg/bouncycastle/math/ec/ECPoint;
     512: astore        7
     514: iload         10
     516: iload         4
     518: if_icmpge     540
     521: aload         7
     523: iload         10
     525: aload         6
     527: iload         10
     529: aaload
     530: invokevirtual #40                 // Method org/bouncycastle/math/ec/ECPoint.negate:()Lorg/bouncycastle/math/ec/ECPoint;
     533: aastore
     534: iinc          10, 1
     537: goto          514
     540: aload         5
     542: aload         6
     544: invokevirtual #41                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.setPreComp:([Lorg/bouncycastle/math/ec/ECPoint;)V
     547: aload         5
     549: aload         7
     551: invokevirtual #42                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.setPreCompNeg:([Lorg/bouncycastle/math/ec/ECPoint;)V
     554: aload         5
     556: aload         8
     558: invokevirtual #43                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.setTwice:(Lorg/bouncycastle/math/ec/ECPoint;)V
     561: aload         5
     563: iload_3
     564: invokevirtual #44                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.setWidth:(I)V
     567: aload         5
     569: areturn

  private boolean checkExisting(org.bouncycastle.math.ec.WNafPreCompInfo, int, int, boolean);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     53
       5: aload_1
       6: invokevirtual #45                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.getWidth:()I
       9: aload_1
      10: invokevirtual #14                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.getConfWidth:()I
      13: iload_2
      14: invokestatic  #9                  // Method java/lang/Math.max:(II)I
      17: if_icmplt     53
      20: aload_0
      21: aload_1
      22: invokevirtual #16                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.getPreComp:()[Lorg/bouncycastle/math/ec/ECPoint;
      25: iload_3
      26: invokespecial #46                 // Method checkTable:([Lorg/bouncycastle/math/ec/ECPoint;I)Z
      29: ifeq          53
      32: iload         4
      34: ifeq          49
      37: aload_0
      38: aload_1
      39: invokevirtual #17                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.getPreCompNeg:()[Lorg/bouncycastle/math/ec/ECPoint;
      42: iload_3
      43: invokespecial #46                 // Method checkTable:([Lorg/bouncycastle/math/ec/ECPoint;I)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn

  private boolean checkTable(org.bouncycastle.math.ec.ECPoint[], int);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     15
       5: aload_1
       6: arraylength
       7: iload_2
       8: if_icmplt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn
}
