Compiled from "DERBitString.java"
public class org.bouncycastle.asn1.DERBitString extends org.bouncycastle.asn1.ASN1BitString {
  public static org.bouncycastle.asn1.DERBitString getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: instanceof    #1                  // class org/bouncycastle/asn1/DERBitString
       8: ifeq          16
      11: aload_0
      12: checkcast     #1                  // class org/bouncycastle/asn1/DERBitString
      15: areturn
      16: aload_0
      17: instanceof    #2                  // class org/bouncycastle/asn1/DLBitString
      20: ifeq          45
      23: new           #1                  // class org/bouncycastle/asn1/DERBitString
      26: dup
      27: aload_0
      28: checkcast     #2                  // class org/bouncycastle/asn1/DLBitString
      31: getfield      #3                  // Field org/bouncycastle/asn1/DLBitString.data:[B
      34: aload_0
      35: checkcast     #2                  // class org/bouncycastle/asn1/DLBitString
      38: getfield      #4                  // Field org/bouncycastle/asn1/DLBitString.padBits:I
      41: invokespecial #5                  // Method "<init>":([BI)V
      44: areturn
      45: aload_0
      46: instanceof    #6                  // class "[B"
      49: ifeq          81
      52: aload_0
      53: checkcast     #6                  // class "[B"
      56: invokestatic  #7                  // Method fromByteArray:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
      59: checkcast     #1                  // class org/bouncycastle/asn1/DERBitString
      62: areturn
      63: astore_1
      64: new           #9                  // class java/lang/IllegalArgumentException
      67: dup
      68: aload_1
      69: invokevirtual #10                 // Method java/lang/Exception.toString:()Ljava/lang/String;
      72: invokedynamic #11,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      77: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: new           #9                  // class java/lang/IllegalArgumentException
      84: dup
      85: aload_0
      86: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      89: invokevirtual #14                 // Method java/lang/Class.getName:()Ljava/lang/String;
      92: invokedynamic #15,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      97: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     100: athrow
    Exception table:
       from    to  target type
          52    62    63   Class java/lang/Exception

  public static org.bouncycastle.asn1.DERBitString getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method org/bouncycastle/asn1/ASN1TaggedObject.getObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
       4: astore_2
       5: iload_1
       6: ifne          16
       9: aload_2
      10: instanceof    #1                  // class org/bouncycastle/asn1/DERBitString
      13: ifeq          21
      16: aload_2
      17: invokestatic  #17                 // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/DERBitString;
      20: areturn
      21: aload_2
      22: invokestatic  #18                 // Method org/bouncycastle/asn1/ASN1OctetString.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1OctetString;
      25: invokevirtual #19                 // Method org/bouncycastle/asn1/ASN1OctetString.getOctets:()[B
      28: invokestatic  #20                 // Method fromOctetString:([B)Lorg/bouncycastle/asn1/DERBitString;
      31: areturn

  protected org.bouncycastle.asn1.DERBitString(byte, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #21                 // Method org/bouncycastle/asn1/ASN1BitString."<init>":(BI)V
       6: return

  public org.bouncycastle.asn1.DERBitString(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #22                 // Method org/bouncycastle/asn1/ASN1BitString."<init>":([BI)V
       6: return

  public org.bouncycastle.asn1.DERBitString(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #5                  // Method "<init>":([BI)V
       6: return

  public org.bouncycastle.asn1.DERBitString(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #23                 // Method getBytes:(I)[B
       5: iload_1
       6: invokestatic  #24                 // Method getPadBits:(I)I
       9: invokespecial #22                 // Method org/bouncycastle/asn1/ASN1BitString."<init>":([BI)V
      12: return

  public org.bouncycastle.asn1.DERBitString(org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #25,  1           // InterfaceMethod org/bouncycastle/asn1/ASN1Encodable.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
       7: ldc           #27                 // String DER
       9: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Primitive.getEncoded:(Ljava/lang/String;)[B
      12: iconst_0
      13: invokespecial #22                 // Method org/bouncycastle/asn1/ASN1BitString."<init>":([BI)V
      16: return

  boolean isConstructed();
    Code:
       0: iconst_0
       1: ireturn

  int encodedLength();
    Code:
       0: iconst_1
       1: aload_0
       2: getfield      #29                 // Field data:[B
       5: arraylength
       6: iconst_1
       7: iadd
       8: invokestatic  #30                 // Method org/bouncycastle/asn1/StreamUtil.calculateBodyLength:(I)I
      11: iadd
      12: aload_0
      13: getfield      #29                 // Field data:[B
      16: arraylength
      17: iadd
      18: iconst_1
      19: iadd
      20: ireturn

  void encode(org.bouncycastle.asn1.ASN1OutputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field data:[B
       4: arraylength
       5: istore_3
       6: iconst_0
       7: iload_3
       8: if_icmpeq     48
      11: iconst_0
      12: aload_0
      13: getfield      #31                 // Field padBits:I
      16: if_icmpeq     48
      19: aload_0
      20: getfield      #29                 // Field data:[B
      23: iload_3
      24: iconst_1
      25: isub
      26: baload
      27: aload_0
      28: getfield      #29                 // Field data:[B
      31: iload_3
      32: iconst_1
      33: isub
      34: baload
      35: sipush        255
      38: aload_0
      39: getfield      #31                 // Field padBits:I
      42: ishl
      43: iand
      44: i2b
      45: if_icmpne     66
      48: aload_1
      49: iload_2
      50: iconst_3
      51: aload_0
      52: getfield      #31                 // Field padBits:I
      55: i2b
      56: aload_0
      57: getfield      #29                 // Field data:[B
      60: invokevirtual #33                 // Method org/bouncycastle/asn1/ASN1OutputStream.writeEncoded:(ZIB[B)V
      63: goto          107
      66: aload_0
      67: getfield      #29                 // Field data:[B
      70: iload_3
      71: iconst_1
      72: isub
      73: baload
      74: sipush        255
      77: aload_0
      78: getfield      #31                 // Field padBits:I
      81: ishl
      82: iand
      83: i2b
      84: istore        4
      86: aload_1
      87: iload_2
      88: iconst_3
      89: aload_0
      90: getfield      #31                 // Field padBits:I
      93: i2b
      94: aload_0
      95: getfield      #29                 // Field data:[B
      98: iconst_0
      99: iload_3
     100: iconst_1
     101: isub
     102: iload         4
     104: invokevirtual #34                 // Method org/bouncycastle/asn1/ASN1OutputStream.writeEncoded:(ZIB[BIIB)V
     107: return

  org.bouncycastle.asn1.ASN1Primitive toDERObject();
    Code:
       0: aload_0
       1: areturn

  org.bouncycastle.asn1.ASN1Primitive toDLObject();
    Code:
       0: aload_0
       1: areturn

  static org.bouncycastle.asn1.DERBitString fromOctetString(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: if_icmpge     16
       6: new           #9                  // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #35                 // String truncated BIT STRING detected
      12: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: iconst_0
      18: baload
      19: istore_1
      20: aload_0
      21: arraylength
      22: iconst_1
      23: isub
      24: newarray       byte
      26: astore_2
      27: aload_2
      28: arraylength
      29: ifeq          43
      32: aload_0
      33: iconst_1
      34: aload_2
      35: iconst_0
      36: aload_0
      37: arraylength
      38: iconst_1
      39: isub
      40: invokestatic  #36                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: new           #1                  // class org/bouncycastle/asn1/DERBitString
      46: dup
      47: aload_2
      48: iload_1
      49: invokespecial #5                  // Method "<init>":([BI)V
      52: areturn
}
