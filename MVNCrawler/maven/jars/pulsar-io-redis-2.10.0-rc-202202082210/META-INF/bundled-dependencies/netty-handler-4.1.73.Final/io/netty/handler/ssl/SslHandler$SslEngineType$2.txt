Compiled from "SslHandler.java"
final class io.netty.handler.ssl.SslHandler$SslEngineType$2 extends io.netty.handler.ssl.SslHandler$SslEngineType {
  io.netty.handler.ssl.SslHandler$SslEngineType$2(java.lang.String, int, boolean, io.netty.handler.codec.ByteToMessageDecoder$Cumulator);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aconst_null
       7: invokespecial #1                  // Method io/netty/handler/ssl/SslHandler$SslEngineType."<init>":(Ljava/lang/String;IZLio/netty/handler/codec/ByteToMessageDecoder$Cumulator;Lio/netty/handler/ssl/SslHandler$1;)V
      10: return

  javax.net.ssl.SSLEngineResult unwrap(io.netty.handler.ssl.SslHandler, io.netty.buffer.ByteBuf, int, io.netty.buffer.ByteBuf) throws javax.net.ssl.SSLException;
    Code:
       0: aload_2
       1: invokevirtual #2                  // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
       4: istore        5
       6: aload         4
       8: invokevirtual #3                  // Method io/netty/buffer/ByteBuf.writerIndex:()I
      11: istore        6
      13: iload         5
      15: iconst_1
      16: if_icmple     87
      19: aload_1
      20: invokestatic  #4                  // Method io/netty/handler/ssl/SslHandler.access$200:(Lio/netty/handler/ssl/SslHandler;)[Ljava/nio/ByteBuffer;
      23: iconst_0
      24: aload         4
      26: iload         6
      28: aload         4
      30: invokevirtual #5                  // Method io/netty/buffer/ByteBuf.writableBytes:()I
      33: invokestatic  #6                  // Method io/netty/handler/ssl/SslHandler.access$300:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
      36: aastore
      37: aload_1
      38: invokestatic  #7                  // Method io/netty/handler/ssl/SslHandler.access$100:(Lio/netty/handler/ssl/SslHandler;)Ljavax/net/ssl/SSLEngine;
      41: checkcast     #8                  // class io/netty/handler/ssl/ConscryptAlpnSslEngine
      44: aload_2
      45: aload_2
      46: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      49: iload_3
      50: invokevirtual #10                 // Method io/netty/buffer/ByteBuf.nioBuffers:(II)[Ljava/nio/ByteBuffer;
      53: aload_1
      54: invokestatic  #4                  // Method io/netty/handler/ssl/SslHandler.access$200:(Lio/netty/handler/ssl/SslHandler;)[Ljava/nio/ByteBuffer;
      57: invokevirtual #11                 // Method io/netty/handler/ssl/ConscryptAlpnSslEngine.unwrap:([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
      60: astore        7
      62: aload_1
      63: invokestatic  #4                  // Method io/netty/handler/ssl/SslHandler.access$200:(Lio/netty/handler/ssl/SslHandler;)[Ljava/nio/ByteBuffer;
      66: iconst_0
      67: aconst_null
      68: aastore
      69: goto          84
      72: astore        8
      74: aload_1
      75: invokestatic  #4                  // Method io/netty/handler/ssl/SslHandler.access$200:(Lio/netty/handler/ssl/SslHandler;)[Ljava/nio/ByteBuffer;
      78: iconst_0
      79: aconst_null
      80: aastore
      81: aload         8
      83: athrow
      84: goto          117
      87: aload_1
      88: invokestatic  #7                  // Method io/netty/handler/ssl/SslHandler.access$100:(Lio/netty/handler/ssl/SslHandler;)Ljavax/net/ssl/SSLEngine;
      91: aload_2
      92: aload_2
      93: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      96: iload_3
      97: invokestatic  #6                  // Method io/netty/handler/ssl/SslHandler.access$300:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
     100: aload         4
     102: iload         6
     104: aload         4
     106: invokevirtual #5                  // Method io/netty/buffer/ByteBuf.writableBytes:()I
     109: invokestatic  #6                  // Method io/netty/handler/ssl/SslHandler.access$300:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
     112: invokevirtual #12                 // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     115: astore        7
     117: aload         4
     119: iload         6
     121: aload         7
     123: invokevirtual #13                 // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     126: iadd
     127: invokevirtual #14                 // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
     130: pop
     131: aload         7
     133: areturn
    Exception table:
       from    to  target type
          19    62    72   any
          72    74    72   any

  io.netty.buffer.ByteBuf allocateWrapBuffer(io.netty.handler.ssl.SslHandler, io.netty.buffer.ByteBufAllocator, int, int);
    Code:
       0: aload_2
       1: aload_1
       2: invokestatic  #7                  // Method io/netty/handler/ssl/SslHandler.access$100:(Lio/netty/handler/ssl/SslHandler;)Ljavax/net/ssl/SSLEngine;
       5: checkcast     #8                  // class io/netty/handler/ssl/ConscryptAlpnSslEngine
       8: iload_3
       9: iload         4
      11: invokevirtual #15                 // Method io/netty/handler/ssl/ConscryptAlpnSslEngine.calculateOutNetBufSize:(II)I
      14: invokeinterface #16,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      19: areturn

  int calculatePendingData(io.netty.handler.ssl.SslHandler, int);
    Code:
       0: iload_2
       1: ireturn

  boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine);
    Code:
       0: iconst_1
       1: ireturn
}
