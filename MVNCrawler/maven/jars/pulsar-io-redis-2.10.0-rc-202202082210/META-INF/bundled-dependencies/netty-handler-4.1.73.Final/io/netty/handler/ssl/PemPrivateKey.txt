Compiled from "PemPrivateKey.java"
public final class io.netty.handler.ssl.PemPrivateKey extends io.netty.util.AbstractReferenceCounted implements java.security.PrivateKey,io.netty.handler.ssl.PemEncoded {
  private static final long serialVersionUID;

  private static final byte[] BEGIN_PRIVATE_KEY;

  private static final byte[] END_PRIVATE_KEY;

  private static final java.lang.String PKCS8_FORMAT;

  private final io.netty.buffer.ByteBuf content;

  static io.netty.handler.ssl.PemEncoded toPEM(io.netty.buffer.ByteBufAllocator, boolean, java.security.PrivateKey);
    Code:
       0: aload_2
       1: instanceof    #1                  // class io/netty/handler/ssl/PemEncoded
       4: ifeq          17
       7: aload_2
       8: checkcast     #1                  // class io/netty/handler/ssl/PemEncoded
      11: invokeinterface #2,  1            // InterfaceMethod io/netty/handler/ssl/PemEncoded.retain:()Lio/netty/handler/ssl/PemEncoded;
      16: areturn
      17: aload_2
      18: invokeinterface #3,  1            // InterfaceMethod java/security/PrivateKey.getEncoded:()[B
      23: astore_3
      24: aload_3
      25: ifnonnull     61
      28: new           #4                  // class java/lang/IllegalArgumentException
      31: dup
      32: new           #5                  // class java/lang/StringBuilder
      35: dup
      36: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      39: aload_2
      40: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      43: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      46: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #10                 // String  does not support encoding
      51: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: iload_1
      63: aload_3
      64: invokestatic  #13                 // Method toPEM:(Lio/netty/buffer/ByteBufAllocator;Z[B)Lio/netty/handler/ssl/PemEncoded;
      67: areturn

  static io.netty.handler.ssl.PemEncoded toPEM(io.netty.buffer.ByteBufAllocator, boolean, byte[]);
    Code:
       0: aload_2
       1: invokestatic  #14                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokestatic  #15                 // Method io/netty/handler/ssl/SslUtils.toBase64:(Lio/netty/buffer/ByteBufAllocator;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      10: astore        4
      12: getstatic     #16                 // Field BEGIN_PRIVATE_KEY:[B
      15: arraylength
      16: aload         4
      18: invokevirtual #17                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      21: iadd
      22: getstatic     #18                 // Field END_PRIVATE_KEY:[B
      25: arraylength
      26: iadd
      27: istore        5
      29: iconst_0
      30: istore        6
      32: iload_1
      33: ifeq          47
      36: aload_0
      37: iload         5
      39: invokeinterface #19,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      44: goto          55
      47: aload_0
      48: iload         5
      50: invokeinterface #20,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
      55: astore        7
      57: aload         7
      59: getstatic     #16                 // Field BEGIN_PRIVATE_KEY:[B
      62: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.writeBytes:([B)Lio/netty/buffer/ByteBuf;
      65: pop
      66: aload         7
      68: aload         4
      70: invokevirtual #22                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      73: pop
      74: aload         7
      76: getstatic     #18                 // Field END_PRIVATE_KEY:[B
      79: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.writeBytes:([B)Lio/netty/buffer/ByteBuf;
      82: pop
      83: new           #23                 // class io/netty/handler/ssl/PemValue
      86: dup
      87: aload         7
      89: iconst_1
      90: invokespecial #24                 // Method io/netty/handler/ssl/PemValue."<init>":(Lio/netty/buffer/ByteBuf;Z)V
      93: astore        8
      95: iconst_1
      96: istore        6
      98: aload         8
     100: astore        9
     102: iload         6
     104: ifne          112
     107: aload         7
     109: invokestatic  #25                 // Method io/netty/handler/ssl/SslUtils.zerooutAndRelease:(Lio/netty/buffer/ByteBuf;)V
     112: aload         4
     114: invokestatic  #25                 // Method io/netty/handler/ssl/SslUtils.zerooutAndRelease:(Lio/netty/buffer/ByteBuf;)V
     117: aload_3
     118: invokestatic  #25                 // Method io/netty/handler/ssl/SslUtils.zerooutAndRelease:(Lio/netty/buffer/ByteBuf;)V
     121: aload         9
     123: areturn
     124: astore        10
     126: iload         6
     128: ifne          136
     131: aload         7
     133: invokestatic  #25                 // Method io/netty/handler/ssl/SslUtils.zerooutAndRelease:(Lio/netty/buffer/ByteBuf;)V
     136: aload         10
     138: athrow
     139: astore        11
     141: aload         4
     143: invokestatic  #25                 // Method io/netty/handler/ssl/SslUtils.zerooutAndRelease:(Lio/netty/buffer/ByteBuf;)V
     146: aload         11
     148: athrow
     149: astore        12
     151: aload_3
     152: invokestatic  #25                 // Method io/netty/handler/ssl/SslUtils.zerooutAndRelease:(Lio/netty/buffer/ByteBuf;)V
     155: aload         12
     157: athrow
    Exception table:
       from    to  target type
          57   102   124   any
         124   126   124   any
          12   112   139   any
         124   141   139   any
           5   117   149   any
         124   151   149   any

  public static io.netty.handler.ssl.PemPrivateKey valueOf(byte[]);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
       4: invokestatic  #26                 // Method valueOf:(Lio/netty/buffer/ByteBuf;)Lio/netty/handler/ssl/PemPrivateKey;
       7: areturn

  public static io.netty.handler.ssl.PemPrivateKey valueOf(io.netty.buffer.ByteBuf);
    Code:
       0: new           #27                 // class io/netty/handler/ssl/PemPrivateKey
       3: dup
       4: aload_0
       5: invokespecial #28                 // Method "<init>":(Lio/netty/buffer/ByteBuf;)V
       8: areturn

  private io.netty.handler.ssl.PemPrivateKey(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method io/netty/util/AbstractReferenceCounted."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #30                 // String content
       8: invokestatic  #31                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #32                 // class io/netty/buffer/ByteBuf
      14: putfield      #33                 // Field content:Lio/netty/buffer/ByteBuf;
      17: return

  public boolean isSensitive();
    Code:
       0: iconst_1
       1: ireturn

  public io.netty.buffer.ByteBuf content();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method refCnt:()I
       4: istore_1
       5: iload_1
       6: ifgt          18
       9: new           #35                 // class io/netty/util/IllegalReferenceCountException
      12: dup
      13: iload_1
      14: invokespecial #36                 // Method io/netty/util/IllegalReferenceCountException."<init>":(I)V
      17: athrow
      18: aload_0
      19: getfield      #33                 // Field content:Lio/netty/buffer/ByteBuf;
      22: areturn

  public io.netty.handler.ssl.PemPrivateKey copy();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #33                 // Field content:Lio/netty/buffer/ByteBuf;
       5: invokevirtual #37                 // Method io/netty/buffer/ByteBuf.copy:()Lio/netty/buffer/ByteBuf;
       8: invokevirtual #38                 // Method replace:(Lio/netty/buffer/ByteBuf;)Lio/netty/handler/ssl/PemPrivateKey;
      11: areturn

  public io.netty.handler.ssl.PemPrivateKey duplicate();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #33                 // Field content:Lio/netty/buffer/ByteBuf;
       5: invokevirtual #39                 // Method io/netty/buffer/ByteBuf.duplicate:()Lio/netty/buffer/ByteBuf;
       8: invokevirtual #38                 // Method replace:(Lio/netty/buffer/ByteBuf;)Lio/netty/handler/ssl/PemPrivateKey;
      11: areturn

  public io.netty.handler.ssl.PemPrivateKey retainedDuplicate();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #33                 // Field content:Lio/netty/buffer/ByteBuf;
       5: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.retainedDuplicate:()Lio/netty/buffer/ByteBuf;
       8: invokevirtual #38                 // Method replace:(Lio/netty/buffer/ByteBuf;)Lio/netty/handler/ssl/PemPrivateKey;
      11: areturn

  public io.netty.handler.ssl.PemPrivateKey replace(io.netty.buffer.ByteBuf);
    Code:
       0: new           #27                 // class io/netty/handler/ssl/PemPrivateKey
       3: dup
       4: aload_1
       5: invokespecial #28                 // Method "<init>":(Lio/netty/buffer/ByteBuf;)V
       8: areturn

  public io.netty.handler.ssl.PemPrivateKey touch();
    Code:
       0: aload_0
       1: getfield      #33                 // Field content:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.touch:()Lio/netty/buffer/ByteBuf;
       7: pop
       8: aload_0
       9: areturn

  public io.netty.handler.ssl.PemPrivateKey touch(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #33                 // Field content:Lio/netty/buffer/ByteBuf;
       4: aload_1
       5: invokevirtual #42                 // Method io/netty/buffer/ByteBuf.touch:(Ljava/lang/Object;)Lio/netty/buffer/ByteBuf;
       8: pop
       9: aload_0
      10: areturn

  public io.netty.handler.ssl.PemPrivateKey retain();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method io/netty/util/AbstractReferenceCounted.retain:()Lio/netty/util/ReferenceCounted;
       4: checkcast     #27                 // class io/netty/handler/ssl/PemPrivateKey
       7: areturn

  public io.netty.handler.ssl.PemPrivateKey retain(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #44                 // Method io/netty/util/AbstractReferenceCounted.retain:(I)Lio/netty/util/ReferenceCounted;
       5: checkcast     #27                 // class io/netty/handler/ssl/PemPrivateKey
       8: areturn

  protected void deallocate();
    Code:
       0: aload_0
       1: getfield      #33                 // Field content:Lio/netty/buffer/ByteBuf;
       4: invokestatic  #25                 // Method io/netty/handler/ssl/SslUtils.zerooutAndRelease:(Lio/netty/buffer/ByteBuf;)V
       7: return

  public byte[] getEncoded();
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #46                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String getAlgorithm();
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #46                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String getFormat();
    Code:
       0: ldc           #47                 // String PKCS#8
       2: areturn

  public void destroy();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #34                 // Method refCnt:()I
       5: invokevirtual #48                 // Method release:(I)Z
       8: pop
       9: return

  public boolean isDestroyed();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method refCnt:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public io.netty.util.ReferenceCounted touch();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method touch:()Lio/netty/handler/ssl/PemPrivateKey;
       4: areturn

  public io.netty.util.ReferenceCounted retain(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #50                 // Method retain:(I)Lio/netty/handler/ssl/PemPrivateKey;
       5: areturn

  public io.netty.util.ReferenceCounted retain();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method retain:()Lio/netty/handler/ssl/PemPrivateKey;
       4: areturn

  public io.netty.util.ReferenceCounted touch(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method touch:(Ljava/lang/Object;)Lio/netty/handler/ssl/PemPrivateKey;
       5: areturn

  public io.netty.handler.ssl.PemEncoded touch(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method touch:(Ljava/lang/Object;)Lio/netty/handler/ssl/PemPrivateKey;
       5: areturn

  public io.netty.handler.ssl.PemEncoded touch();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method touch:()Lio/netty/handler/ssl/PemPrivateKey;
       4: areturn

  public io.netty.handler.ssl.PemEncoded retain(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #50                 // Method retain:(I)Lio/netty/handler/ssl/PemPrivateKey;
       5: areturn

  public io.netty.handler.ssl.PemEncoded retain();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method retain:()Lio/netty/handler/ssl/PemPrivateKey;
       4: areturn

  public io.netty.handler.ssl.PemEncoded replace(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method replace:(Lio/netty/buffer/ByteBuf;)Lio/netty/handler/ssl/PemPrivateKey;
       5: areturn

  public io.netty.handler.ssl.PemEncoded retainedDuplicate();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method retainedDuplicate:()Lio/netty/handler/ssl/PemPrivateKey;
       4: areturn

  public io.netty.handler.ssl.PemEncoded duplicate();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method duplicate:()Lio/netty/handler/ssl/PemPrivateKey;
       4: areturn

  public io.netty.handler.ssl.PemEncoded copy();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method copy:()Lio/netty/handler/ssl/PemPrivateKey;
       4: areturn

  public io.netty.buffer.ByteBufHolder touch(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method touch:(Ljava/lang/Object;)Lio/netty/handler/ssl/PemPrivateKey;
       5: areturn

  public io.netty.buffer.ByteBufHolder touch();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method touch:()Lio/netty/handler/ssl/PemPrivateKey;
       4: areturn

  public io.netty.buffer.ByteBufHolder retain(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #50                 // Method retain:(I)Lio/netty/handler/ssl/PemPrivateKey;
       5: areturn

  public io.netty.buffer.ByteBufHolder retain();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method retain:()Lio/netty/handler/ssl/PemPrivateKey;
       4: areturn

  public io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method replace:(Lio/netty/buffer/ByteBuf;)Lio/netty/handler/ssl/PemPrivateKey;
       5: areturn

  public io.netty.buffer.ByteBufHolder retainedDuplicate();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method retainedDuplicate:()Lio/netty/handler/ssl/PemPrivateKey;
       4: areturn

  public io.netty.buffer.ByteBufHolder duplicate();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method duplicate:()Lio/netty/handler/ssl/PemPrivateKey;
       4: areturn

  public io.netty.buffer.ByteBufHolder copy();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method copy:()Lio/netty/handler/ssl/PemPrivateKey;
       4: areturn

  static {};
    Code:
       0: ldc           #56                 // String -----BEGIN PRIVATE KEY-----\n
       2: getstatic     #57                 // Field io/netty/util/CharsetUtil.US_ASCII:Ljava/nio/charset/Charset;
       5: invokevirtual #58                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: putstatic     #16                 // Field BEGIN_PRIVATE_KEY:[B
      11: ldc           #59                 // String \n-----END PRIVATE KEY-----\n
      13: getstatic     #57                 // Field io/netty/util/CharsetUtil.US_ASCII:Ljava/nio/charset/Charset;
      16: invokevirtual #58                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      19: putstatic     #18                 // Field END_PRIVATE_KEY:[B
      22: return
}
