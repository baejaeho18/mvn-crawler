Compiled from "AbstractTrafficShapingHandler.java"
public abstract class io.netty.handler.traffic.AbstractTrafficShapingHandler extends io.netty.channel.ChannelDuplexHandler {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  public static final long DEFAULT_CHECK_INTERVAL;

  public static final long DEFAULT_MAX_TIME;

  static final long DEFAULT_MAX_SIZE;

  static final long MINIMAL_WAIT;

  protected io.netty.handler.traffic.TrafficCounter trafficCounter;

  private volatile long writeLimit;

  private volatile long readLimit;

  protected volatile long maxTime;

  protected volatile long checkInterval;

  static final io.netty.util.AttributeKey<java.lang.Boolean> READ_SUSPENDED;

  static final io.netty.util.AttributeKey<java.lang.Runnable> REOPEN_TASK;

  volatile long maxWriteDelay;

  volatile long maxWriteSize;

  final int userDefinedWritabilityIndex;

  static final int CHANNEL_DEFAULT_USER_DEFINED_WRITABILITY_INDEX;

  static final int GLOBAL_DEFAULT_USER_DEFINED_WRITABILITY_INDEX;

  static final int GLOBALCHANNEL_DEFAULT_USER_DEFINED_WRITABILITY_INDEX;

  void setTrafficCounter(io.netty.handler.traffic.TrafficCounter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       5: return

  protected int userDefinedWritabilityIndex();
    Code:
       0: iconst_1
       1: ireturn

  protected io.netty.handler.traffic.AbstractTrafficShapingHandler(long, long, long, long);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method io/netty/channel/ChannelDuplexHandler."<init>":()V
       4: aload_0
       5: ldc2_w        #5                  // long 15000l
       8: putfield      #7                  // Field maxTime:J
      11: aload_0
      12: ldc2_w        #8                  // long 1000l
      15: putfield      #10                 // Field checkInterval:J
      18: aload_0
      19: ldc2_w        #11                 // long 4000l
      22: putfield      #13                 // Field maxWriteDelay:J
      25: aload_0
      26: ldc2_w        #14                 // long 4194304l
      29: putfield      #16                 // Field maxWriteSize:J
      32: aload_0
      33: lload         7
      35: ldc           #17                 // String maxTime
      37: invokestatic  #18                 // Method io/netty/util/internal/ObjectUtil.checkPositive:(JLjava/lang/String;)J
      40: putfield      #7                  // Field maxTime:J
      43: aload_0
      44: aload_0
      45: invokevirtual #19                 // Method userDefinedWritabilityIndex:()I
      48: putfield      #20                 // Field userDefinedWritabilityIndex:I
      51: aload_0
      52: lload_1
      53: putfield      #21                 // Field writeLimit:J
      56: aload_0
      57: lload_3
      58: putfield      #22                 // Field readLimit:J
      61: aload_0
      62: lload         5
      64: putfield      #10                 // Field checkInterval:J
      67: return

  protected io.netty.handler.traffic.AbstractTrafficShapingHandler(long, long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: lload         5
       5: ldc2_w        #5                  // long 15000l
       8: invokespecial #23                 // Method "<init>":(JJJJ)V
      11: return

  protected io.netty.handler.traffic.AbstractTrafficShapingHandler(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: ldc2_w        #8                  // long 1000l
       6: ldc2_w        #5                  // long 15000l
       9: invokespecial #23                 // Method "<init>":(JJJJ)V
      12: return

  protected io.netty.handler.traffic.AbstractTrafficShapingHandler();
    Code:
       0: aload_0
       1: lconst_0
       2: lconst_0
       3: ldc2_w        #8                  // long 1000l
       6: ldc2_w        #5                  // long 15000l
       9: invokespecial #23                 // Method "<init>":(JJJJ)V
      12: return

  protected io.netty.handler.traffic.AbstractTrafficShapingHandler(long);
    Code:
       0: aload_0
       1: lconst_0
       2: lconst_0
       3: lload_1
       4: ldc2_w        #5                  // long 15000l
       7: invokespecial #23                 // Method "<init>":(JJJJ)V
      10: return

  public void configure(long, long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #24                 // Method configure:(JJ)V
       6: aload_0
       7: lload         5
       9: invokevirtual #25                 // Method configure:(J)V
      12: return

  public void configure(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #21                 // Field writeLimit:J
       5: aload_0
       6: lload_3
       7: putfield      #22                 // Field readLimit:J
      10: aload_0
      11: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      14: ifnull        27
      17: aload_0
      18: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      21: invokestatic  #26                 // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
      24: invokevirtual #27                 // Method io/netty/handler/traffic/TrafficCounter.resetAccounting:(J)V
      27: return

  public void configure(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field checkInterval:J
       5: aload_0
       6: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       9: ifnull        23
      12: aload_0
      13: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      16: aload_0
      17: getfield      #10                 // Field checkInterval:J
      20: invokevirtual #28                 // Method io/netty/handler/traffic/TrafficCounter.configure:(J)V
      23: return

  public long getWriteLimit();
    Code:
       0: aload_0
       1: getfield      #21                 // Field writeLimit:J
       4: lreturn

  public void setWriteLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #21                 // Field writeLimit:J
       5: aload_0
       6: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       9: ifnull        22
      12: aload_0
      13: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      16: invokestatic  #26                 // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
      19: invokevirtual #27                 // Method io/netty/handler/traffic/TrafficCounter.resetAccounting:(J)V
      22: return

  public long getReadLimit();
    Code:
       0: aload_0
       1: getfield      #22                 // Field readLimit:J
       4: lreturn

  public void setReadLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #22                 // Field readLimit:J
       5: aload_0
       6: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       9: ifnull        22
      12: aload_0
      13: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      16: invokestatic  #26                 // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
      19: invokevirtual #27                 // Method io/netty/handler/traffic/TrafficCounter.resetAccounting:(J)V
      22: return

  public long getCheckInterval();
    Code:
       0: aload_0
       1: getfield      #10                 // Field checkInterval:J
       4: lreturn

  public void setCheckInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field checkInterval:J
       5: aload_0
       6: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       9: ifnull        20
      12: aload_0
      13: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      16: lload_1
      17: invokevirtual #28                 // Method io/netty/handler/traffic/TrafficCounter.configure:(J)V
      20: return

  public void setMaxTimeWait(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc           #17                 // String maxTime
       4: invokestatic  #18                 // Method io/netty/util/internal/ObjectUtil.checkPositive:(JLjava/lang/String;)J
       7: putfield      #7                  // Field maxTime:J
      10: return

  public long getMaxTimeWait();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxTime:J
       4: lreturn

  public long getMaxWriteDelay();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxWriteDelay:J
       4: lreturn

  public void setMaxWriteDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc           #29                 // String maxWriteDelay
       4: invokestatic  #18                 // Method io/netty/util/internal/ObjectUtil.checkPositive:(JLjava/lang/String;)J
       7: putfield      #13                 // Field maxWriteDelay:J
      10: return

  public long getMaxWriteSize();
    Code:
       0: aload_0
       1: getfield      #16                 // Field maxWriteSize:J
       4: lreturn

  public void setMaxWriteSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #16                 // Field maxWriteSize:J
       5: return

  protected void doAccounting(io.netty.handler.traffic.TrafficCounter);
    Code:
       0: return

  void releaseReadSuspended(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: astore_2
       7: aload_2
       8: getstatic     #31                 // Field READ_SUSPENDED:Lio/netty/util/AttributeKey;
      11: invokeinterface #32,  2           // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      16: iconst_0
      17: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      20: invokeinterface #34,  2           // InterfaceMethod io/netty/util/Attribute.set:(Ljava/lang/Object;)V
      25: aload_2
      26: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      31: iconst_1
      32: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/ChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
      37: pop
      38: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #37                 // Method calculateSize:(Ljava/lang/Object;)J
       5: lstore_3
       6: invokestatic  #26                 // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
       9: lstore        5
      11: lload_3
      12: lconst_0
      13: lcmp
      14: ifle          318
      17: aload_0
      18: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      21: lload_3
      22: aload_0
      23: getfield      #22                 // Field readLimit:J
      26: aload_0
      27: getfield      #7                  // Field maxTime:J
      30: lload         5
      32: invokevirtual #38                 // Method io/netty/handler/traffic/TrafficCounter.readTimeToWait:(JJJJ)J
      35: lstore        7
      37: aload_0
      38: aload_1
      39: lload         7
      41: lload         5
      43: invokevirtual #39                 // Method checkWaitReadTime:(Lio/netty/channel/ChannelHandlerContext;JJ)J
      46: lstore        7
      48: lload         7
      50: ldc2_w        #40                 // long 10l
      53: lcmp
      54: iflt          318
      57: aload_1
      58: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      63: astore        9
      65: aload         9
      67: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      72: astore        10
      74: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      77: invokeinterface #42,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      82: ifeq          140
      85: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      88: new           #43                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      95: ldc           #45                 // String Read suspend:
      97: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: lload         7
     102: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     105: bipush        58
     107: invokevirtual #48                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     110: aload         10
     112: invokeinterface #49,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     117: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     120: bipush        58
     122: invokevirtual #48                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     125: aload_1
     126: invokestatic  #51                 // Method isHandlerActive:(Lio/netty/channel/ChannelHandlerContext;)Z
     129: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     132: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokeinterface #53,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
     140: aload         10
     142: invokeinterface #49,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     147: ifeq          318
     150: aload_1
     151: invokestatic  #51                 // Method isHandlerActive:(Lio/netty/channel/ChannelHandlerContext;)Z
     154: ifeq          318
     157: aload         10
     159: iconst_0
     160: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/ChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
     165: pop
     166: aload         9
     168: getstatic     #31                 // Field READ_SUSPENDED:Lio/netty/util/AttributeKey;
     171: invokeinterface #32,  2           // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
     176: iconst_1
     177: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     180: invokeinterface #34,  2           // InterfaceMethod io/netty/util/Attribute.set:(Ljava/lang/Object;)V
     185: aload         9
     187: getstatic     #54                 // Field REOPEN_TASK:Lio/netty/util/AttributeKey;
     190: invokeinterface #32,  2           // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
     195: astore        11
     197: aload         11
     199: invokeinterface #55,  1           // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
     204: checkcast     #56                 // class java/lang/Runnable
     207: astore        12
     209: aload         12
     211: ifnonnull     233
     214: new           #57                 // class io/netty/handler/traffic/AbstractTrafficShapingHandler$ReopenReadTimerTask
     217: dup
     218: aload_1
     219: invokespecial #58                 // Method io/netty/handler/traffic/AbstractTrafficShapingHandler$ReopenReadTimerTask."<init>":(Lio/netty/channel/ChannelHandlerContext;)V
     222: astore        12
     224: aload         11
     226: aload         12
     228: invokeinterface #34,  2           // InterfaceMethod io/netty/util/Attribute.set:(Ljava/lang/Object;)V
     233: aload_1
     234: invokeinterface #59,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
     239: aload         12
     241: lload         7
     243: getstatic     #60                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     246: invokeinterface #61,  5           // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     251: pop
     252: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     255: invokeinterface #42,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
     260: ifeq          318
     263: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     266: new           #43                 // class java/lang/StringBuilder
     269: dup
     270: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     273: ldc           #62                 // String Suspend final status =>
     275: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     278: aload         10
     280: invokeinterface #49,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     285: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     288: bipush        58
     290: invokevirtual #48                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     293: aload_1
     294: invokestatic  #51                 // Method isHandlerActive:(Lio/netty/channel/ChannelHandlerContext;)Z
     297: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     300: ldc           #63                 // String  will reopened at:
     302: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     305: lload         7
     307: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     310: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     313: invokeinterface #53,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
     318: aload_0
     319: aload_1
     320: lload         5
     322: invokevirtual #64                 // Method informReadOperation:(Lio/netty/channel/ChannelHandlerContext;J)V
     325: aload_1
     326: aload_2
     327: invokeinterface #65,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     332: pop
     333: return

  public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: astore_2
       7: aload_2
       8: getstatic     #54                 // Field REOPEN_TASK:Lio/netty/util/AttributeKey;
      11: invokeinterface #66,  2           // InterfaceMethod io/netty/channel/Channel.hasAttr:(Lio/netty/util/AttributeKey;)Z
      16: ifeq          34
      19: aload_2
      20: getstatic     #54                 // Field REOPEN_TASK:Lio/netty/util/AttributeKey;
      23: invokeinterface #32,  2           // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      28: aconst_null
      29: invokeinterface #34,  2           // InterfaceMethod io/netty/util/Attribute.set:(Ljava/lang/Object;)V
      34: aload_0
      35: aload_1
      36: invokespecial #67                 // Method io/netty/channel/ChannelDuplexHandler.handlerRemoved:(Lio/netty/channel/ChannelHandlerContext;)V
      39: return

  long checkWaitReadTime(io.netty.channel.ChannelHandlerContext, long, long);
    Code:
       0: lload_2
       1: lreturn

  void informReadOperation(io.netty.channel.ChannelHandlerContext, long);
    Code:
       0: return

  protected static boolean isHandlerActive(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: getstatic     #31                 // Field READ_SUSPENDED:Lio/netty/util/AttributeKey;
       9: invokeinterface #32,  2           // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      14: invokeinterface #55,  1           // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
      19: checkcast     #68                 // class java/lang/Boolean
      22: astore_1
      23: aload_1
      24: ifnull        37
      27: getstatic     #69                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      30: aload_1
      31: invokevirtual #70                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public void read(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokestatic  #51                 // Method isHandlerActive:(Lio/netty/channel/ChannelHandlerContext;)Z
       4: ifeq          14
       7: aload_1
       8: invokeinterface #71,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      13: pop
      14: return

  public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #37                 // Method calculateSize:(Ljava/lang/Object;)J
       5: lstore        4
       7: invokestatic  #26                 // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
      10: lstore        6
      12: lload         4
      14: lconst_0
      15: lcmp
      16: ifle          138
      19: aload_0
      20: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      23: lload         4
      25: aload_0
      26: getfield      #21                 // Field writeLimit:J
      29: aload_0
      30: getfield      #7                  // Field maxTime:J
      33: lload         6
      35: invokevirtual #72                 // Method io/netty/handler/traffic/TrafficCounter.writeTimeToWait:(JJJJ)J
      38: lstore        8
      40: lload         8
      42: ldc2_w        #40                 // long 10l
      45: lcmp
      46: iflt          138
      49: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      52: invokeinterface #42,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      57: ifeq          124
      60: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      63: new           #43                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #73                 // String Write suspend:
      72: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: lload         8
      77: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      80: bipush        58
      82: invokevirtual #48                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      85: aload_1
      86: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      91: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      96: invokeinterface #49,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     101: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     104: bipush        58
     106: invokevirtual #48                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     109: aload_1
     110: invokestatic  #51                 // Method isHandlerActive:(Lio/netty/channel/ChannelHandlerContext;)Z
     113: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     116: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokeinterface #53,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
     124: aload_0
     125: aload_1
     126: aload_2
     127: lload         4
     129: lload         8
     131: lload         6
     133: aload_3
     134: invokevirtual #74                 // Method submitWrite:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;JJJLio/netty/channel/ChannelPromise;)V
     137: return
     138: aload_0
     139: aload_1
     140: aload_2
     141: lload         4
     143: lconst_0
     144: lload         6
     146: aload_3
     147: invokevirtual #74                 // Method submitWrite:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;JJJLio/netty/channel/ChannelPromise;)V
     150: return

  protected void submitWrite(io.netty.channel.ChannelHandlerContext, java.lang.Object, long, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: aload_2
       5: invokevirtual #37                 // Method calculateSize:(Ljava/lang/Object;)J
       8: lload_3
       9: invokestatic  #26                 // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
      12: aload         5
      14: invokevirtual #74                 // Method submitWrite:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;JJJLio/netty/channel/ChannelPromise;)V
      17: return

  abstract void submitWrite(io.netty.channel.ChannelHandlerContext, java.lang.Object, long, long, long, io.netty.channel.ChannelPromise);

  public void channelRegistered(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #75                 // Method setUserDefinedWritability:(Lio/netty/channel/ChannelHandlerContext;Z)V
       6: aload_0
       7: aload_1
       8: invokespecial #76                 // Method io/netty/channel/ChannelDuplexHandler.channelRegistered:(Lio/netty/channel/ChannelHandlerContext;)V
      11: return

  void setUserDefinedWritability(io.netty.channel.ChannelHandlerContext, boolean);
    Code:
       0: aload_1
       1: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #77,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      11: invokeinterface #78,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
      16: astore_3
      17: aload_3
      18: ifnull        30
      21: aload_3
      22: aload_0
      23: getfield      #20                 // Field userDefinedWritabilityIndex:I
      26: iload_2
      27: invokevirtual #79                 // Method io/netty/channel/ChannelOutboundBuffer.setUserDefinedWritability:(IZ)V
      30: return

  void checkWriteSuspend(io.netty.channel.ChannelHandlerContext, long, long);
    Code:
       0: lload         4
       2: aload_0
       3: getfield      #16                 // Field maxWriteSize:J
       6: lcmp
       7: ifgt          19
      10: lload_2
      11: aload_0
      12: getfield      #13                 // Field maxWriteDelay:J
      15: lcmp
      16: ifle          25
      19: aload_0
      20: aload_1
      21: iconst_0
      22: invokevirtual #75                 // Method setUserDefinedWritability:(Lio/netty/channel/ChannelHandlerContext;Z)V
      25: return

  void releaseWriteSuspended(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #75                 // Method setUserDefinedWritability:(Lio/netty/channel/ChannelHandlerContext;Z)V
       6: return

  public io.netty.handler.traffic.TrafficCounter trafficCounter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: sipush        290
       7: invokespecial #80                 // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc           #81                 // String TrafficShaping with Write Limit:
      12: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: getfield      #21                 // Field writeLimit:J
      19: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      22: ldc           #82                 // String  Read Limit:
      24: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #22                 // Field readLimit:J
      31: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      34: ldc           #83                 // String  CheckInterval:
      36: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #10                 // Field checkInterval:J
      43: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      46: ldc           #84                 // String  maxDelay:
      48: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #13                 // Field maxWriteDelay:J
      55: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      58: ldc           #85                 // String  maxSize:
      60: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: getfield      #16                 // Field maxWriteSize:J
      67: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      70: ldc           #86                 // String  and Counter:
      72: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: astore_1
      76: aload_0
      77: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      80: ifnull        95
      83: aload_1
      84: aload_0
      85: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      88: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: pop
      92: goto          102
      95: aload_1
      96: ldc           #88                 // String none
      98: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: pop
     102: aload_1
     103: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: areturn

  protected long calculateSize(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #89                 // class io/netty/buffer/ByteBuf
       4: ifeq          16
       7: aload_1
       8: checkcast     #89                 // class io/netty/buffer/ByteBuf
      11: invokevirtual #90                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      14: i2l
      15: lreturn
      16: aload_1
      17: instanceof    #91                 // class io/netty/buffer/ByteBufHolder
      20: ifeq          37
      23: aload_1
      24: checkcast     #91                 // class io/netty/buffer/ByteBufHolder
      27: invokeinterface #92,  1           // InterfaceMethod io/netty/buffer/ByteBufHolder.content:()Lio/netty/buffer/ByteBuf;
      32: invokevirtual #90                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      35: i2l
      36: lreturn
      37: aload_1
      38: instanceof    #93                 // class io/netty/channel/FileRegion
      41: ifeq          54
      44: aload_1
      45: checkcast     #93                 // class io/netty/channel/FileRegion
      48: invokeinterface #94,  1           // InterfaceMethod io/netty/channel/FileRegion.count:()J
      53: lreturn
      54: ldc2_w        #95                 // long -1l
      57: lreturn

  static io.netty.util.internal.logging.InternalLogger access$000();
    Code:
       0: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static {};
    Code:
       0: ldc           #3                  // class io/netty/handler/traffic/AbstractTrafficShapingHandler
       2: invokestatic  #97                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: new           #43                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #3                  // class io/netty/handler/traffic/AbstractTrafficShapingHandler
      17: invokevirtual #98                 // Method java/lang/Class.getName:()Ljava/lang/String;
      20: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #99                 // String .READ_SUSPENDED
      25: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokestatic  #100                // Method io/netty/util/AttributeKey.valueOf:(Ljava/lang/String;)Lio/netty/util/AttributeKey;
      34: putstatic     #31                 // Field READ_SUSPENDED:Lio/netty/util/AttributeKey;
      37: new           #43                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #3                  // class io/netty/handler/traffic/AbstractTrafficShapingHandler
      46: invokevirtual #98                 // Method java/lang/Class.getName:()Ljava/lang/String;
      49: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #101                // String .REOPEN_TASK
      54: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokestatic  #100                // Method io/netty/util/AttributeKey.valueOf:(Ljava/lang/String;)Lio/netty/util/AttributeKey;
      63: putstatic     #54                 // Field REOPEN_TASK:Lio/netty/util/AttributeKey;
      66: return
}
