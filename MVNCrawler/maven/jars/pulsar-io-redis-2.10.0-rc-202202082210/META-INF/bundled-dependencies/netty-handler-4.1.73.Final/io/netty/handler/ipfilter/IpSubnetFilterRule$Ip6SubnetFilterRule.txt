Compiled from "IpSubnetFilterRule.java"
final class io.netty.handler.ipfilter.IpSubnetFilterRule$Ip6SubnetFilterRule implements io.netty.handler.ipfilter.IpFilterRule {
  private static final java.math.BigInteger MINUS_ONE;

  private final java.math.BigInteger networkAddress;

  private final java.math.BigInteger subnetMask;

  private final io.netty.handler.ipfilter.IpFilterRuleType ruleType;

  static final boolean $assertionsDisabled;

  private io.netty.handler.ipfilter.IpSubnetFilterRule$Ip6SubnetFilterRule(java.net.Inet6Address, int, io.netty.handler.ipfilter.IpFilterRuleType);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: iload_2
       5: iflt          15
       8: iload_2
       9: sipush        128
      12: if_icmple     39
      15: new           #5                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #6                  // String IPv6 requires the subnet prefix to be in range of [0,128]. The prefix was: %d
      21: iconst_1
      22: anewarray     #7                  // class java/lang/Object
      25: dup
      26: iconst_0
      27: iload_2
      28: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aastore
      32: invokestatic  #9                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      35: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: iload_2
      41: invokestatic  #11                 // Method prefixToSubnetMask:(I)Ljava/math/BigInteger;
      44: putfield      #12                 // Field subnetMask:Ljava/math/BigInteger;
      47: aload_0
      48: aload_1
      49: invokestatic  #1                  // Method ipToInt:(Ljava/net/Inet6Address;)Ljava/math/BigInteger;
      52: aload_0
      53: getfield      #12                 // Field subnetMask:Ljava/math/BigInteger;
      56: invokevirtual #13                 // Method java/math/BigInteger.and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      59: putfield      #2                  // Field networkAddress:Ljava/math/BigInteger;
      62: aload_0
      63: aload_3
      64: putfield      #14                 // Field ruleType:Lio/netty/handler/ipfilter/IpFilterRuleType;
      67: return

  public boolean matches(java.net.InetSocketAddress);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
       4: astore_2
       5: aload_2
       6: instanceof    #16                 // class java/net/Inet6Address
       9: ifeq          62
      12: aload_2
      13: checkcast     #16                 // class java/net/Inet6Address
      16: invokestatic  #1                  // Method ipToInt:(Ljava/net/Inet6Address;)Ljava/math/BigInteger;
      19: astore_3
      20: aload_3
      21: aload_0
      22: getfield      #12                 // Field subnetMask:Ljava/math/BigInteger;
      25: invokevirtual #13                 // Method java/math/BigInteger.and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      28: aload_0
      29: getfield      #12                 // Field subnetMask:Ljava/math/BigInteger;
      32: invokevirtual #17                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      35: ifne          56
      38: aload_3
      39: aload_0
      40: getfield      #12                 // Field subnetMask:Ljava/math/BigInteger;
      43: invokevirtual #13                 // Method java/math/BigInteger.and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      46: aload_0
      47: getfield      #2                  // Field networkAddress:Ljava/math/BigInteger;
      50: invokevirtual #17                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      53: ifeq          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn
      62: iconst_0
      63: ireturn

  public io.netty.handler.ipfilter.IpFilterRuleType ruleType();
    Code:
       0: aload_0
       1: getfield      #14                 // Field ruleType:Lio/netty/handler/ipfilter/IpFilterRuleType;
       4: areturn

  private static java.math.BigInteger ipToInt(java.net.Inet6Address);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method java/net/Inet6Address.getAddress:()[B
       4: astore_1
       5: getstatic     #19                 // Field $assertionsDisabled:Z
       8: ifne          26
      11: aload_1
      12: arraylength
      13: bipush        16
      15: if_icmpeq     26
      18: new           #20                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #21                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: new           #22                 // class java/math/BigInteger
      29: dup
      30: aload_1
      31: invokespecial #23                 // Method java/math/BigInteger."<init>":([B)V
      34: areturn

  private static java.math.BigInteger prefixToSubnetMask(int);
    Code:
       0: getstatic     #24                 // Field MINUS_ONE:Ljava/math/BigInteger;
       3: sipush        128
       6: iload_0
       7: isub
       8: invokevirtual #25                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      11: areturn

  io.netty.handler.ipfilter.IpSubnetFilterRule$Ip6SubnetFilterRule(java.net.Inet6Address, int, io.netty.handler.ipfilter.IpFilterRuleType, io.netty.handler.ipfilter.IpSubnetFilterRule$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #3                  // Method "<init>":(Ljava/net/Inet6Address;ILio/netty/handler/ipfilter/IpFilterRuleType;)V
       7: return

  static java.math.BigInteger access$300(io.netty.handler.ipfilter.IpSubnetFilterRule$Ip6SubnetFilterRule);
    Code:
       0: aload_0
       1: getfield      #2                  // Field networkAddress:Ljava/math/BigInteger;
       4: areturn

  static java.math.BigInteger access$500(java.net.Inet6Address);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method ipToInt:(Ljava/net/Inet6Address;)Ljava/math/BigInteger;
       4: areturn

  static {};
    Code:
       0: ldc           #26                 // class io/netty/handler/ipfilter/IpSubnetFilterRule
       2: invokevirtual #27                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #19                 // Field $assertionsDisabled:Z
      16: ldc2_w        #28                 // long -1l
      19: invokestatic  #30                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      22: putstatic     #24                 // Field MINUS_ONE:Ljava/math/BigInteger;
      25: return
}
