Compiled from "ChunkedNioStream.java"
public class io.netty.handler.stream.ChunkedNioStream implements io.netty.handler.stream.ChunkedInput<io.netty.buffer.ByteBuf> {
  private final java.nio.channels.ReadableByteChannel in;

  private final int chunkSize;

  private long offset;

  private final java.nio.ByteBuffer byteBuffer;

  public io.netty.handler.stream.ChunkedNioStream(java.nio.channels.ReadableByteChannel);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: invokespecial #2                  // Method "<init>":(Ljava/nio/channels/ReadableByteChannel;I)V
       8: return

  public io.netty.handler.stream.ChunkedNioStream(java.nio.channels.ReadableByteChannel, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #4                  // String in
       8: invokestatic  #5                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #6                  // class java/nio/channels/ReadableByteChannel
      14: putfield      #7                  // Field in:Ljava/nio/channels/ReadableByteChannel;
      17: aload_0
      18: iload_2
      19: ldc           #8                  // String chunkSize
      21: invokestatic  #9                  // Method io/netty/util/internal/ObjectUtil.checkPositive:(ILjava/lang/String;)I
      24: putfield      #10                 // Field chunkSize:I
      27: aload_0
      28: iload_2
      29: invokestatic  #11                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      32: putfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      35: return

  public long transferredBytes();
    Code:
       0: aload_0
       1: getfield      #13                 // Field offset:J
       4: lreturn

  public boolean isEndOfInput() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
       7: ifle          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #7                  // Field in:Ljava/nio/channels/ReadableByteChannel;
      16: invokeinterface #15,  1           // InterfaceMethod java/nio/channels/ReadableByteChannel.isOpen:()Z
      21: ifeq          57
      24: aload_0
      25: getfield      #7                  // Field in:Ljava/nio/channels/ReadableByteChannel;
      28: aload_0
      29: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      32: invokeinterface #16,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      37: istore_1
      38: iload_1
      39: ifge          44
      42: iconst_1
      43: ireturn
      44: aload_0
      45: dup
      46: getfield      #13                 // Field offset:J
      49: iload_1
      50: i2l
      51: ladd
      52: putfield      #13                 // Field offset:J
      55: iconst_0
      56: ireturn
      57: iconst_1
      58: ireturn

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Ljava/nio/channels/ReadableByteChannel;
       4: invokeinterface #17,  1           // InterfaceMethod java/nio/channels/ReadableByteChannel.close:()V
       9: return

  public io.netty.buffer.ByteBuf readChunk(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       7: invokevirtual #19                 // Method readChunk:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
      10: areturn

  public io.netty.buffer.ByteBuf readChunk(io.netty.buffer.ByteBufAllocator) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method isEndOfInput:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      13: invokevirtual #14                 // Method java/nio/ByteBuffer.position:()I
      16: istore_2
      17: aload_0
      18: getfield      #7                  // Field in:Ljava/nio/channels/ReadableByteChannel;
      21: aload_0
      22: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      25: invokeinterface #16,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      30: istore_3
      31: iload_3
      32: ifge          38
      35: goto          67
      38: iload_2
      39: iload_3
      40: iadd
      41: istore_2
      42: aload_0
      43: dup
      44: getfield      #13                 // Field offset:J
      47: iload_3
      48: i2l
      49: ladd
      50: putfield      #13                 // Field offset:J
      53: iload_2
      54: aload_0
      55: getfield      #10                 // Field chunkSize:I
      58: if_icmpne     64
      61: goto          67
      64: goto          17
      67: aload_0
      68: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      71: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      74: pop
      75: iconst_1
      76: istore_3
      77: aload_1
      78: aload_0
      79: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      82: invokevirtual #22                 // Method java/nio/ByteBuffer.remaining:()I
      85: invokeinterface #23,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
      90: astore        4
      92: aload         4
      94: aload_0
      95: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      98: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.writeBytes:(Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;
     101: pop
     102: aload_0
     103: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
     106: invokevirtual #25                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     109: pop
     110: iconst_0
     111: istore_3
     112: aload         4
     114: astore        5
     116: iload_3
     117: ifeq          126
     120: aload         4
     122: invokevirtual #26                 // Method io/netty/buffer/ByteBuf.release:()Z
     125: pop
     126: aload         5
     128: areturn
     129: astore        6
     131: iload_3
     132: ifeq          141
     135: aload         4
     137: invokevirtual #26                 // Method io/netty/buffer/ByteBuf.release:()Z
     140: pop
     141: aload         6
     143: athrow
    Exception table:
       from    to  target type
          92   116   129   any
         129   131   129   any

  public long length();
    Code:
       0: ldc2_w        #27                 // long -1l
       3: lreturn

  public long progress();
    Code:
       0: aload_0
       1: getfield      #13                 // Field offset:J
       4: lreturn

  public java.lang.Object readChunk(io.netty.buffer.ByteBufAllocator) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method readChunk:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
       5: areturn

  public java.lang.Object readChunk(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method readChunk:(Lio/netty/channel/ChannelHandlerContext;)Lio/netty/buffer/ByteBuf;
       5: areturn
}
