Compiled from "DefaultHttpRequestRetryHandler.java"
public class org.apache.http.impl.client.DefaultHttpRequestRetryHandler implements org.apache.http.client.HttpRequestRetryHandler {
  public static final org.apache.http.impl.client.DefaultHttpRequestRetryHandler INSTANCE;

  private final int retryCount;

  private final boolean requestSentRetryEnabled;

  private final java.util.Set<java.lang.Class<? extends java.io.IOException>> nonRetriableClasses;

  protected org.apache.http.impl.client.DefaultHttpRequestRetryHandler(int, boolean, java.util.Collection<java.lang.Class<? extends java.io.IOException>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field retryCount:I
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field requestSentRetryEnabled:Z
      14: aload_0
      15: new           #4                  // class java/util/HashSet
      18: dup
      19: invokespecial #5                  // Method java/util/HashSet."<init>":()V
      22: putfield      #6                  // Field nonRetriableClasses:Ljava/util/Set;
      25: aload_3
      26: invokeinterface #7,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      31: astore        4
      33: aload         4
      35: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          70
      43: aload         4
      45: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #10                 // class java/lang/Class
      53: astore        5
      55: aload_0
      56: getfield      #6                  // Field nonRetriableClasses:Ljava/util/Set;
      59: aload         5
      61: invokeinterface #11,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          33
      70: return

  public org.apache.http.impl.client.DefaultHttpRequestRetryHandler(int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_4
       4: anewarray     #10                 // class java/lang/Class
       7: dup
       8: iconst_0
       9: ldc_w         #12                 // class java/io/InterruptedIOException
      12: aastore
      13: dup
      14: iconst_1
      15: ldc_w         #13                 // class java/net/UnknownHostException
      18: aastore
      19: dup
      20: iconst_2
      21: ldc_w         #14                 // class java/net/ConnectException
      24: aastore
      25: dup
      26: iconst_3
      27: ldc_w         #15                 // class javax/net/ssl/SSLException
      30: aastore
      31: invokestatic  #16                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      34: invokespecial #17                 // Method "<init>":(IZLjava/util/Collection;)V
      37: return

  public org.apache.http.impl.client.DefaultHttpRequestRetryHandler();
    Code:
       0: aload_0
       1: iconst_3
       2: iconst_0
       3: invokespecial #18                 // Method "<init>":(IZ)V
       6: return

  public boolean retryRequest(java.io.IOException, int, org.apache.http.protocol.HttpContext);
    Code:
       0: aload_1
       1: ldc           #19                 // String Exception parameter
       3: invokestatic  #20                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: ldc           #21                 // String HTTP context
      10: invokestatic  #20                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: iload_2
      15: aload_0
      16: getfield      #2                  // Field retryCount:I
      19: if_icmple     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #6                  // Field nonRetriableClasses:Ljava/util/Set;
      28: aload_1
      29: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokeinterface #23,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #6                  // Field nonRetriableClasses:Ljava/util/Set;
      46: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      51: astore        4
      53: aload         4
      55: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          89
      63: aload         4
      65: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #10                 // class java/lang/Class
      73: astore        5
      75: aload         5
      77: aload_1
      78: invokevirtual #25                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      81: ifeq          86
      84: iconst_0
      85: ireturn
      86: goto          53
      89: aload_3
      90: invokestatic  #26                 // Method org/apache/http/client/protocol/HttpClientContext.adapt:(Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/client/protocol/HttpClientContext;
      93: astore        4
      95: aload         4
      97: invokevirtual #27                 // Method org/apache/http/client/protocol/HttpClientContext.getRequest:()Lorg/apache/http/HttpRequest;
     100: astore        5
     102: aload_0
     103: aload         5
     105: invokevirtual #28                 // Method requestIsAborted:(Lorg/apache/http/HttpRequest;)Z
     108: ifeq          113
     111: iconst_0
     112: ireturn
     113: aload_0
     114: aload         5
     116: invokevirtual #29                 // Method handleAsIdempotent:(Lorg/apache/http/HttpRequest;)Z
     119: ifeq          124
     122: iconst_1
     123: ireturn
     124: aload         4
     126: invokevirtual #30                 // Method org/apache/http/client/protocol/HttpClientContext.isRequestSent:()Z
     129: ifeq          139
     132: aload_0
     133: getfield      #3                  // Field requestSentRetryEnabled:Z
     136: ifeq          141
     139: iconst_1
     140: ireturn
     141: iconst_0
     142: ireturn

  public boolean isRequestSentRetryEnabled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field requestSentRetryEnabled:Z
       4: ireturn

  public int getRetryCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field retryCount:I
       4: ireturn

  protected boolean handleAsIdempotent(org.apache.http.HttpRequest);
    Code:
       0: aload_1
       1: instanceof    #31                 // class org/apache/http/HttpEntityEnclosingRequest
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected boolean requestIsAborted(org.apache.http.HttpRequest);
    Code:
       0: aload_1
       1: astore_2
       2: aload_1
       3: instanceof    #32                 // class org/apache/http/impl/client/RequestWrapper
       6: ifeq          17
       9: aload_1
      10: checkcast     #32                 // class org/apache/http/impl/client/RequestWrapper
      13: invokevirtual #33                 // Method org/apache/http/impl/client/RequestWrapper.getOriginal:()Lorg/apache/http/HttpRequest;
      16: astore_2
      17: aload_2
      18: instanceof    #34                 // class org/apache/http/client/methods/HttpUriRequest
      21: ifeq          40
      24: aload_2
      25: checkcast     #34                 // class org/apache/http/client/methods/HttpUriRequest
      28: invokeinterface #35,  1           // InterfaceMethod org/apache/http/client/methods/HttpUriRequest.isAborted:()Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  static {};
    Code:
       0: new           #36                 // class org/apache/http/impl/client/DefaultHttpRequestRetryHandler
       3: dup
       4: invokespecial #37                 // Method "<init>":()V
       7: putstatic     #38                 // Field INSTANCE:Lorg/apache/http/impl/client/DefaultHttpRequestRetryHandler;
      10: return
}
