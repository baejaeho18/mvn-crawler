Compiled from "Memory.java"
public class com.sun.jna.Memory extends com.sun.jna.Pointer {
  private static final java.util.Map buffers;

  private static final java.util.Map allocatedMemory;

  protected long size;

  public static void purge();
    Code:
       0: getstatic     #1                  // Field buffers:Ljava/util/Map;
       3: invokeinterface #2,  1            // InterfaceMethod java/util/Map.size:()I
       8: pop
       9: return

  public static void disposeAll();
    Code:
       0: getstatic     #3                  // Field allocatedMemory:Ljava/util/Map;
       3: invokeinterface #4,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       8: invokeinterface #5,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_0
      14: aload_0
      15: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          38
      23: aload_0
      24: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #8                  // class com/sun/jna/Memory
      32: invokevirtual #9                  // Method dispose:()V
      35: goto          14
      38: return

  public com.sun.jna.Memory(long);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method com/sun/jna/Pointer."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #11                 // Field size:J
       9: lload_1
      10: lconst_0
      11: lcmp
      12: ifgt          25
      15: new           #12                 // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #13                 // String Allocation size must be greater than zero
      21: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: lload_1
      27: invokestatic  #15                 // Method malloc:(J)J
      30: putfield      #16                 // Field peer:J
      33: aload_0
      34: getfield      #16                 // Field peer:J
      37: lconst_0
      38: lcmp
      39: ifne          74
      42: new           #17                 // class java/lang/OutOfMemoryError
      45: dup
      46: new           #18                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #20                 // String Cannot allocate
      55: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: lload_1
      59: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      62: ldc           #23                 // String  bytes
      64: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #25                 // Method java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
      73: athrow
      74: getstatic     #3                  // Field allocatedMemory:Ljava/util/Map;
      77: aload_0
      78: new           #26                 // class java/lang/ref/WeakReference
      81: dup
      82: aload_0
      83: invokespecial #27                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      86: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      91: pop
      92: return

  protected com.sun.jna.Memory();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method com/sun/jna/Pointer."<init>":()V
       4: return

  public com.sun.jna.Pointer share(long);
    Code:
       0: aload_0
       1: lload_1
       2: aload_0
       3: invokevirtual #29                 // Method size:()J
       6: lload_1
       7: lsub
       8: invokevirtual #30                 // Method share:(JJ)Lcom/sun/jna/Pointer;
      11: areturn

  public com.sun.jna.Pointer share(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #31                 // Method boundsCheck:(JJ)V
       6: new           #32                 // class com/sun/jna/Memory$SharedMemory
       9: dup
      10: aload_0
      11: lload_1
      12: lload_3
      13: invokespecial #33                 // Method com/sun/jna/Memory$SharedMemory."<init>":(Lcom/sun/jna/Memory;JJ)V
      16: areturn

  public com.sun.jna.Memory align(int);
    Code:
       0: iload_1
       1: ifgt          31
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #18                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #34                 // String Byte boundary must be positive:
      17: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iconst_0
      32: istore_2
      33: iload_2
      34: bipush        32
      36: if_icmpge     138
      39: iload_1
      40: iconst_1
      41: iload_2
      42: ishl
      43: if_icmpne     132
      46: iload_1
      47: i2l
      48: lconst_1
      49: lsub
      50: ldc2_w        #36                 // long -1l
      53: lxor
      54: lstore_3
      55: aload_0
      56: getfield      #16                 // Field peer:J
      59: lload_3
      60: land
      61: aload_0
      62: getfield      #16                 // Field peer:J
      65: lcmp
      66: ifeq          130
      69: aload_0
      70: getfield      #16                 // Field peer:J
      73: iload_1
      74: i2l
      75: ladd
      76: lconst_1
      77: lsub
      78: lload_3
      79: land
      80: lstore        5
      82: aload_0
      83: getfield      #16                 // Field peer:J
      86: aload_0
      87: getfield      #11                 // Field size:J
      90: ladd
      91: lload         5
      93: lsub
      94: lstore        7
      96: lload         7
      98: lconst_0
      99: lcmp
     100: ifgt          113
     103: new           #12                 // class java/lang/IllegalArgumentException
     106: dup
     107: ldc           #38                 // String Insufficient memory to align to the requested boundary
     109: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: aload_0
     114: lload         5
     116: aload_0
     117: getfield      #16                 // Field peer:J
     120: lsub
     121: lload         7
     123: invokevirtual #30                 // Method share:(JJ)Lcom/sun/jna/Pointer;
     126: checkcast     #8                  // class com/sun/jna/Memory
     129: areturn
     130: aload_0
     131: areturn
     132: iinc          2, 1
     135: goto          33
     138: new           #12                 // class java/lang/IllegalArgumentException
     141: dup
     142: ldc           #39                 // String Byte boundary must be a power of two
     144: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     147: athrow

  protected void finalize();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method dispose:()V
       4: return

  protected synchronized void dispose();
    Code:
       0: aload_0
       1: getfield      #16                 // Field peer:J
       4: invokestatic  #40                 // Method free:(J)V
       7: aload_0
       8: lconst_0
       9: putfield      #16                 // Field peer:J
      12: getstatic     #3                  // Field allocatedMemory:Ljava/util/Map;
      15: aload_0
      16: invokeinterface #41,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: return

  public void clear();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field size:J
       5: invokevirtual #42                 // Method clear:(J)V
       8: return

  public boolean valid();
    Code:
       0: aload_0
       1: getfield      #16                 // Field peer:J
       4: lconst_0
       5: lcmp
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public long size();
    Code:
       0: aload_0
       1: getfield      #11                 // Field size:J
       4: lreturn

  protected void boundsCheck(long, long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          33
       6: new           #43                 // class java/lang/IndexOutOfBoundsException
       9: dup
      10: new           #18                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #44                 // String Invalid offset:
      19: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #45                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: lload_1
      34: lload_3
      35: ladd
      36: aload_0
      37: getfield      #11                 // Field size:J
      40: lcmp
      41: ifle          89
      44: new           #18                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #46                 // String Bounds exceeds available space : size=
      53: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: getfield      #11                 // Field size:J
      60: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      63: ldc           #47                 // String , offset=
      65: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: lload_1
      69: lload_3
      70: ladd
      71: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      74: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: astore        5
      79: new           #43                 // class java/lang/IndexOutOfBoundsException
      82: dup
      83: aload         5
      85: invokespecial #45                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: return

  public void read(long, byte[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: lconst_1
       6: lmul
       7: invokevirtual #31                 // Method boundsCheck:(JJ)V
      10: aload_0
      11: lload_1
      12: aload_3
      13: iload         4
      15: iload         5
      17: invokespecial #48                 // Method com/sun/jna/Pointer.read:(J[BII)V
      20: return

  public void read(long, short[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: ldc2_w        #49                 // long 2l
       8: lmul
       9: invokevirtual #31                 // Method boundsCheck:(JJ)V
      12: aload_0
      13: lload_1
      14: aload_3
      15: iload         4
      17: iload         5
      19: invokespecial #51                 // Method com/sun/jna/Pointer.read:(J[SII)V
      22: return

  public void read(long, char[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: ldc2_w        #49                 // long 2l
       8: lmul
       9: invokevirtual #31                 // Method boundsCheck:(JJ)V
      12: aload_0
      13: lload_1
      14: aload_3
      15: iload         4
      17: iload         5
      19: invokespecial #52                 // Method com/sun/jna/Pointer.read:(J[CII)V
      22: return

  public void read(long, int[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: ldc2_w        #53                 // long 4l
       8: lmul
       9: invokevirtual #31                 // Method boundsCheck:(JJ)V
      12: aload_0
      13: lload_1
      14: aload_3
      15: iload         4
      17: iload         5
      19: invokespecial #55                 // Method com/sun/jna/Pointer.read:(J[III)V
      22: return

  public void read(long, long[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: ldc2_w        #56                 // long 8l
       8: lmul
       9: invokevirtual #31                 // Method boundsCheck:(JJ)V
      12: aload_0
      13: lload_1
      14: aload_3
      15: iload         4
      17: iload         5
      19: invokespecial #58                 // Method com/sun/jna/Pointer.read:(J[JII)V
      22: return

  public void read(long, float[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: ldc2_w        #53                 // long 4l
       8: lmul
       9: invokevirtual #31                 // Method boundsCheck:(JJ)V
      12: aload_0
      13: lload_1
      14: aload_3
      15: iload         4
      17: iload         5
      19: invokespecial #59                 // Method com/sun/jna/Pointer.read:(J[FII)V
      22: return

  public void read(long, double[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: ldc2_w        #56                 // long 8l
       8: lmul
       9: invokevirtual #31                 // Method boundsCheck:(JJ)V
      12: aload_0
      13: lload_1
      14: aload_3
      15: iload         4
      17: iload         5
      19: invokespecial #60                 // Method com/sun/jna/Pointer.read:(J[DII)V
      22: return

  public void write(long, byte[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: lconst_1
       6: lmul
       7: invokevirtual #31                 // Method boundsCheck:(JJ)V
      10: aload_0
      11: lload_1
      12: aload_3
      13: iload         4
      15: iload         5
      17: invokespecial #61                 // Method com/sun/jna/Pointer.write:(J[BII)V
      20: return

  public void write(long, short[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: ldc2_w        #49                 // long 2l
       8: lmul
       9: invokevirtual #31                 // Method boundsCheck:(JJ)V
      12: aload_0
      13: lload_1
      14: aload_3
      15: iload         4
      17: iload         5
      19: invokespecial #62                 // Method com/sun/jna/Pointer.write:(J[SII)V
      22: return

  public void write(long, char[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: ldc2_w        #49                 // long 2l
       8: lmul
       9: invokevirtual #31                 // Method boundsCheck:(JJ)V
      12: aload_0
      13: lload_1
      14: aload_3
      15: iload         4
      17: iload         5
      19: invokespecial #63                 // Method com/sun/jna/Pointer.write:(J[CII)V
      22: return

  public void write(long, int[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: ldc2_w        #53                 // long 4l
       8: lmul
       9: invokevirtual #31                 // Method boundsCheck:(JJ)V
      12: aload_0
      13: lload_1
      14: aload_3
      15: iload         4
      17: iload         5
      19: invokespecial #64                 // Method com/sun/jna/Pointer.write:(J[III)V
      22: return

  public void write(long, long[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: ldc2_w        #56                 // long 8l
       8: lmul
       9: invokevirtual #31                 // Method boundsCheck:(JJ)V
      12: aload_0
      13: lload_1
      14: aload_3
      15: iload         4
      17: iload         5
      19: invokespecial #65                 // Method com/sun/jna/Pointer.write:(J[JII)V
      22: return

  public void write(long, float[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: ldc2_w        #53                 // long 4l
       8: lmul
       9: invokevirtual #31                 // Method boundsCheck:(JJ)V
      12: aload_0
      13: lload_1
      14: aload_3
      15: iload         4
      17: iload         5
      19: invokespecial #66                 // Method com/sun/jna/Pointer.write:(J[FII)V
      22: return

  public void write(long, double[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: ldc2_w        #56                 // long 8l
       8: lmul
       9: invokevirtual #31                 // Method boundsCheck:(JJ)V
      12: aload_0
      13: lload_1
      14: aload_3
      15: iload         4
      17: iload         5
      19: invokespecial #67                 // Method com/sun/jna/Pointer.write:(J[DII)V
      22: return

  public byte getByte(long);
    Code:
       0: aload_0
       1: lload_1
       2: lconst_1
       3: invokevirtual #31                 // Method boundsCheck:(JJ)V
       6: aload_0
       7: lload_1
       8: invokespecial #68                 // Method com/sun/jna/Pointer.getByte:(J)B
      11: ireturn

  public char getChar(long);
    Code:
       0: aload_0
       1: lload_1
       2: lconst_1
       3: invokevirtual #31                 // Method boundsCheck:(JJ)V
       6: aload_0
       7: lload_1
       8: invokespecial #69                 // Method com/sun/jna/Pointer.getChar:(J)C
      11: ireturn

  public short getShort(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #49                 // long 2l
       5: invokevirtual #31                 // Method boundsCheck:(JJ)V
       8: aload_0
       9: lload_1
      10: invokespecial #70                 // Method com/sun/jna/Pointer.getShort:(J)S
      13: ireturn

  public int getInt(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #53                 // long 4l
       5: invokevirtual #31                 // Method boundsCheck:(JJ)V
       8: aload_0
       9: lload_1
      10: invokespecial #71                 // Method com/sun/jna/Pointer.getInt:(J)I
      13: ireturn

  public long getLong(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #56                 // long 8l
       5: invokevirtual #31                 // Method boundsCheck:(JJ)V
       8: aload_0
       9: lload_1
      10: invokespecial #72                 // Method com/sun/jna/Pointer.getLong:(J)J
      13: lreturn

  public float getFloat(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #53                 // long 4l
       5: invokevirtual #31                 // Method boundsCheck:(JJ)V
       8: aload_0
       9: lload_1
      10: invokespecial #73                 // Method com/sun/jna/Pointer.getFloat:(J)F
      13: freturn

  public double getDouble(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #56                 // long 8l
       5: invokevirtual #31                 // Method boundsCheck:(JJ)V
       8: aload_0
       9: lload_1
      10: invokespecial #74                 // Method com/sun/jna/Pointer.getDouble:(J)D
      13: dreturn

  public com.sun.jna.Pointer getPointer(long);
    Code:
       0: aload_0
       1: lload_1
       2: getstatic     #75                 // Field com/sun/jna/Pointer.SIZE:I
       5: i2l
       6: invokevirtual #31                 // Method boundsCheck:(JJ)V
       9: aload_0
      10: lload_1
      11: invokespecial #76                 // Method com/sun/jna/Pointer.getPointer:(J)Lcom/sun/jna/Pointer;
      14: areturn

  public java.nio.ByteBuffer getByteBuffer(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #31                 // Method boundsCheck:(JJ)V
       6: aload_0
       7: lload_1
       8: lload_3
       9: invokespecial #77                 // Method com/sun/jna/Pointer.getByteBuffer:(JJ)Ljava/nio/ByteBuffer;
      12: astore        5
      14: getstatic     #1                  // Field buffers:Ljava/util/Map;
      17: aload         5
      19: aload_0
      20: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload         5
      28: areturn

  public java.lang.String getString(long, java.lang.String);
    Code:
       0: aload_0
       1: lload_1
       2: lconst_0
       3: invokevirtual #31                 // Method boundsCheck:(JJ)V
       6: aload_0
       7: lload_1
       8: aload_3
       9: invokespecial #78                 // Method com/sun/jna/Pointer.getString:(JLjava/lang/String;)Ljava/lang/String;
      12: areturn

  public java.lang.String getWideString(long);
    Code:
       0: aload_0
       1: lload_1
       2: lconst_0
       3: invokevirtual #31                 // Method boundsCheck:(JJ)V
       6: aload_0
       7: lload_1
       8: invokespecial #79                 // Method com/sun/jna/Pointer.getWideString:(J)Ljava/lang/String;
      11: areturn

  public void setByte(long, byte);
    Code:
       0: aload_0
       1: lload_1
       2: lconst_1
       3: invokevirtual #31                 // Method boundsCheck:(JJ)V
       6: aload_0
       7: lload_1
       8: iload_3
       9: invokespecial #80                 // Method com/sun/jna/Pointer.setByte:(JB)V
      12: return

  public void setChar(long, char);
    Code:
       0: aload_0
       1: lload_1
       2: getstatic     #81                 // Field com/sun/jna/Native.WCHAR_SIZE:I
       5: i2l
       6: invokevirtual #31                 // Method boundsCheck:(JJ)V
       9: aload_0
      10: lload_1
      11: iload_3
      12: invokespecial #82                 // Method com/sun/jna/Pointer.setChar:(JC)V
      15: return

  public void setShort(long, short);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #49                 // long 2l
       5: invokevirtual #31                 // Method boundsCheck:(JJ)V
       8: aload_0
       9: lload_1
      10: iload_3
      11: invokespecial #83                 // Method com/sun/jna/Pointer.setShort:(JS)V
      14: return

  public void setInt(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #53                 // long 4l
       5: invokevirtual #31                 // Method boundsCheck:(JJ)V
       8: aload_0
       9: lload_1
      10: iload_3
      11: invokespecial #84                 // Method com/sun/jna/Pointer.setInt:(JI)V
      14: return

  public void setLong(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #56                 // long 8l
       5: invokevirtual #31                 // Method boundsCheck:(JJ)V
       8: aload_0
       9: lload_1
      10: lload_3
      11: invokespecial #85                 // Method com/sun/jna/Pointer.setLong:(JJ)V
      14: return

  public void setFloat(long, float);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #53                 // long 4l
       5: invokevirtual #31                 // Method boundsCheck:(JJ)V
       8: aload_0
       9: lload_1
      10: fload_3
      11: invokespecial #86                 // Method com/sun/jna/Pointer.setFloat:(JF)V
      14: return

  public void setDouble(long, double);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #56                 // long 8l
       5: invokevirtual #31                 // Method boundsCheck:(JJ)V
       8: aload_0
       9: lload_1
      10: dload_3
      11: invokespecial #87                 // Method com/sun/jna/Pointer.setDouble:(JD)V
      14: return

  public void setPointer(long, com.sun.jna.Pointer);
    Code:
       0: aload_0
       1: lload_1
       2: getstatic     #75                 // Field com/sun/jna/Pointer.SIZE:I
       5: i2l
       6: invokevirtual #31                 // Method boundsCheck:(JJ)V
       9: aload_0
      10: lload_1
      11: aload_3
      12: invokespecial #88                 // Method com/sun/jna/Pointer.setPointer:(JLcom/sun/jna/Pointer;)V
      15: return

  public void setString(long, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: aload         4
       5: invokestatic  #89                 // Method com/sun/jna/Native.getBytes:(Ljava/lang/String;Ljava/lang/String;)[B
       8: arraylength
       9: i2l
      10: lconst_1
      11: ladd
      12: invokevirtual #31                 // Method boundsCheck:(JJ)V
      15: aload_0
      16: lload_1
      17: aload_3
      18: aload         4
      20: invokespecial #90                 // Method com/sun/jna/Pointer.setString:(JLjava/lang/String;Ljava/lang/String;)V
      23: return

  public void setWideString(long, java.lang.String);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokevirtual #91                 // Method java/lang/String.length:()I
       6: i2l
       7: lconst_1
       8: ladd
       9: getstatic     #81                 // Field com/sun/jna/Native.WCHAR_SIZE:I
      12: i2l
      13: lmul
      14: invokevirtual #31                 // Method boundsCheck:(JJ)V
      17: aload_0
      18: lload_1
      19: aload_3
      20: invokespecial #92                 // Method com/sun/jna/Pointer.setWideString:(JLjava/lang/String;)V
      23: return

  public java.lang.String toString();
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #93                 // String allocated@0x
       9: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #16                 // Field peer:J
      16: invokestatic  #94                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      19: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #95                 // String  (
      24: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #11                 // Field size:J
      31: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      34: ldc           #96                 // String  bytes)
      36: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn

  protected static void free(long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifeq          10
       6: lload_0
       7: invokestatic  #97                 // Method com/sun/jna/Native.free:(J)V
      10: return

  protected static long malloc(long);
    Code:
       0: lload_0
       1: invokestatic  #98                 // Method com/sun/jna/Native.malloc:(J)J
       4: lreturn

  public java.lang.String dump();
    Code:
       0: aload_0
       1: lconst_0
       2: aload_0
       3: invokevirtual #29                 // Method size:()J
       6: l2i
       7: invokevirtual #99                 // Method dump:(JI)Ljava/lang/String;
      10: areturn

  static {};
    Code:
       0: getstatic     #100                // Field com/sun/jna/Platform.HAS_BUFFERS:Z
       3: ifeq          16
       6: new           #101                // class com/sun/jna/WeakIdentityHashMap
       9: dup
      10: invokespecial #102                // Method com/sun/jna/WeakIdentityHashMap."<init>":()V
      13: goto          23
      16: new           #103                // class java/util/HashMap
      19: dup
      20: invokespecial #104                // Method java/util/HashMap."<init>":()V
      23: invokestatic  #105                // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      26: putstatic     #1                  // Field buffers:Ljava/util/Map;
      29: new           #106                // class java/util/WeakHashMap
      32: dup
      33: invokespecial #107                // Method java/util/WeakHashMap."<init>":()V
      36: invokestatic  #105                // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      39: putstatic     #3                  // Field allocatedMemory:Ljava/util/Map;
      42: return
}
