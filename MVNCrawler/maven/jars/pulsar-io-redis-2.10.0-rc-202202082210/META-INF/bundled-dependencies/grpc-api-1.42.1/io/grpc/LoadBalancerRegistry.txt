Compiled from "LoadBalancerRegistry.java"
public final class io.grpc.LoadBalancerRegistry {
  private static final java.util.logging.Logger logger;

  private static io.grpc.LoadBalancerRegistry instance;

  private static final java.lang.Iterable<java.lang.Class<?>> HARDCODED_CLASSES;

  private final java.util.LinkedHashSet<io.grpc.LoadBalancerProvider> allProviders;

  private final java.util.LinkedHashMap<java.lang.String, io.grpc.LoadBalancerProvider> effectiveProviders;

  public io.grpc.LoadBalancerRegistry();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashSet
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashSet."<init>":()V
      12: putfield      #4                  // Field allProviders:Ljava/util/LinkedHashSet;
      15: aload_0
      16: new           #5                  // class java/util/LinkedHashMap
      19: dup
      20: invokespecial #6                  // Method java/util/LinkedHashMap."<init>":()V
      23: putfield      #7                  // Field effectiveProviders:Ljava/util/LinkedHashMap;
      26: return

  public synchronized void register(io.grpc.LoadBalancerProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method addProvider:(Lio/grpc/LoadBalancerProvider;)V
       5: aload_0
       6: invokespecial #9                  // Method refreshProviderMap:()V
       9: return

  private synchronized void addProvider(io.grpc.LoadBalancerProvider);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method io/grpc/LoadBalancerProvider.isAvailable:()Z
       4: ldc           #11                 // String isAvailable() returned false
       6: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
       9: aload_0
      10: getfield      #4                  // Field allProviders:Ljava/util/LinkedHashSet;
      13: aload_1
      14: invokevirtual #13                 // Method java/util/LinkedHashSet.add:(Ljava/lang/Object;)Z
      17: pop
      18: return

  public synchronized void deregister(io.grpc.LoadBalancerProvider);
    Code:
       0: aload_0
       1: getfield      #4                  // Field allProviders:Ljava/util/LinkedHashSet;
       4: aload_1
       5: invokevirtual #14                 // Method java/util/LinkedHashSet.remove:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: invokespecial #9                  // Method refreshProviderMap:()V
      13: return

  private synchronized void refreshProviderMap();
    Code:
       0: aload_0
       1: getfield      #7                  // Field effectiveProviders:Ljava/util/LinkedHashMap;
       4: invokevirtual #15                 // Method java/util/LinkedHashMap.clear:()V
       7: aload_0
       8: getfield      #4                  // Field allProviders:Ljava/util/LinkedHashSet;
      11: invokevirtual #16                 // Method java/util/LinkedHashSet.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          82
      24: aload_1
      25: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #19                 // class io/grpc/LoadBalancerProvider
      33: astore_2
      34: aload_2
      35: invokevirtual #20                 // Method io/grpc/LoadBalancerProvider.getPolicyName:()Ljava/lang/String;
      38: astore_3
      39: aload_0
      40: getfield      #7                  // Field effectiveProviders:Ljava/util/LinkedHashMap;
      43: aload_3
      44: invokevirtual #21                 // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #19                 // class io/grpc/LoadBalancerProvider
      50: astore        4
      52: aload         4
      54: ifnull        69
      57: aload         4
      59: invokevirtual #22                 // Method io/grpc/LoadBalancerProvider.getPriority:()I
      62: aload_2
      63: invokevirtual #22                 // Method io/grpc/LoadBalancerProvider.getPriority:()I
      66: if_icmpge     79
      69: aload_0
      70: getfield      #7                  // Field effectiveProviders:Ljava/util/LinkedHashMap;
      73: aload_3
      74: aload_2
      75: invokevirtual #23                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: goto          15
      82: return

  public static synchronized io.grpc.LoadBalancerRegistry getDefaultRegistry();
    Code:
       0: getstatic     #24                 // Field instance:Lio/grpc/LoadBalancerRegistry;
       3: ifnonnull     111
       6: ldc           #19                 // class io/grpc/LoadBalancerProvider
       8: getstatic     #25                 // Field HARDCODED_CLASSES:Ljava/lang/Iterable;
      11: ldc           #19                 // class io/grpc/LoadBalancerProvider
      13: invokevirtual #26                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      16: new           #27                 // class io/grpc/LoadBalancerRegistry$LoadBalancerPriorityAccessor
      19: dup
      20: invokespecial #28                 // Method io/grpc/LoadBalancerRegistry$LoadBalancerPriorityAccessor."<init>":()V
      23: invokestatic  #29                 // Method io/grpc/ServiceProviders.loadAll:(Ljava/lang/Class;Ljava/lang/Iterable;Ljava/lang/ClassLoader;Lio/grpc/ServiceProviders$PriorityAccessor;)Ljava/util/List;
      26: astore_0
      27: new           #30                 // class io/grpc/LoadBalancerRegistry
      30: dup
      31: invokespecial #31                 // Method "<init>":()V
      34: putstatic     #24                 // Field instance:Lio/grpc/LoadBalancerRegistry;
      37: aload_0
      38: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      43: astore_1
      44: aload_1
      45: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          105
      53: aload_1
      54: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #19                 // class io/grpc/LoadBalancerProvider
      62: astore_2
      63: getstatic     #33                 // Field logger:Ljava/util/logging/Logger;
      66: new           #34                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #36                 // String Service loader found
      75: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_2
      79: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokevirtual #40                 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
      88: aload_2
      89: invokevirtual #10                 // Method io/grpc/LoadBalancerProvider.isAvailable:()Z
      92: ifeq          102
      95: getstatic     #24                 // Field instance:Lio/grpc/LoadBalancerRegistry;
      98: aload_2
      99: invokespecial #8                  // Method addProvider:(Lio/grpc/LoadBalancerProvider;)V
     102: goto          44
     105: getstatic     #24                 // Field instance:Lio/grpc/LoadBalancerRegistry;
     108: invokespecial #9                  // Method refreshProviderMap:()V
     111: getstatic     #24                 // Field instance:Lio/grpc/LoadBalancerRegistry;
     114: areturn

  public synchronized io.grpc.LoadBalancerProvider getProvider(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field effectiveProviders:Ljava/util/LinkedHashMap;
       4: aload_1
       5: ldc           #41                 // String policy
       7: invokestatic  #42                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: invokevirtual #21                 // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #19                 // class io/grpc/LoadBalancerProvider
      16: areturn

  synchronized java.util.Map<java.lang.String, io.grpc.LoadBalancerProvider> providers();
    Code:
       0: new           #5                  // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: getfield      #7                  // Field effectiveProviders:Ljava/util/LinkedHashMap;
       8: invokespecial #43                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      11: areturn

  static java.util.List<java.lang.Class<?>> getHardCodedClasses();
    Code:
       0: new           #44                 // class java/util/ArrayList
       3: dup
       4: invokespecial #45                 // Method java/util/ArrayList."<init>":()V
       7: astore_0
       8: aload_0
       9: ldc           #46                 // String io.grpc.internal.PickFirstLoadBalancerProvider
      11: invokestatic  #47                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      14: invokevirtual #48                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      17: pop
      18: goto          34
      21: astore_1
      22: getstatic     #33                 // Field logger:Ljava/util/logging/Logger;
      25: getstatic     #50                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      28: ldc           #51                 // String Unable to find pick-first LoadBalancer
      30: aload_1
      31: invokevirtual #52                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      34: aload_0
      35: ldc           #53                 // String io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider
      37: invokestatic  #47                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      40: invokevirtual #48                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      43: pop
      44: goto          60
      47: astore_1
      48: getstatic     #33                 // Field logger:Ljava/util/logging/Logger;
      51: getstatic     #54                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      54: ldc           #55                 // String Unable to find round-robin LoadBalancer
      56: aload_1
      57: invokevirtual #52                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      60: aload_0
      61: invokestatic  #56                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      64: areturn
    Exception table:
       from    to  target type
           8    18    21   Class java/lang/ClassNotFoundException
          34    44    47   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: ldc           #30                 // class io/grpc/LoadBalancerRegistry
       2: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #58                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #33                 // Field logger:Ljava/util/logging/Logger;
      11: invokestatic  #59                 // Method getHardCodedClasses:()Ljava/util/List;
      14: putstatic     #25                 // Field HARDCODED_CLASSES:Ljava/lang/Iterable;
      17: return
}
