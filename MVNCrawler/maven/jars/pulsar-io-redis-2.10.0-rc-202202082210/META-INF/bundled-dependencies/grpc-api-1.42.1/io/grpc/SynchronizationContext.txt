Compiled from "SynchronizationContext.java"
public final class io.grpc.SynchronizationContext implements java.util.concurrent.Executor {
  private final java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler;

  private final java.util.Queue<java.lang.Runnable> queue;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Thread> drainingThread;

  public io.grpc.SynchronizationContext(java.lang.Thread$UncaughtExceptionHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #4                  // Field queue:Ljava/util/Queue;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #7                  // Field drainingThread:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_0
      27: aload_1
      28: ldc           #8                  // String uncaughtExceptionHandler
      30: invokestatic  #9                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #10                 // class java/lang/Thread$UncaughtExceptionHandler
      36: putfield      #11                 // Field uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      39: return

  public final void drain();
    Code:
       0: aload_0
       1: getfield      #7                  // Field drainingThread:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokestatic  #12                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       8: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ifne          15
      14: return
      15: aload_0
      16: getfield      #4                  // Field queue:Ljava/util/Queue;
      19: invokeinterface #14,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      24: checkcast     #15                 // class java/lang/Runnable
      27: dup
      28: astore_1
      29: ifnull        58
      32: aload_1
      33: invokeinterface #16,  1           // InterfaceMethod java/lang/Runnable.run:()V
      38: goto          15
      41: astore_2
      42: aload_0
      43: getfield      #11                 // Field uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      46: invokestatic  #12                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      49: aload_2
      50: invokeinterface #18,  3           // InterfaceMethod java/lang/Thread$UncaughtExceptionHandler.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V
      55: goto          15
      58: aload_0
      59: getfield      #7                  // Field drainingThread:Ljava/util/concurrent/atomic/AtomicReference;
      62: aconst_null
      63: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      66: goto          80
      69: astore_3
      70: aload_0
      71: getfield      #7                  // Field drainingThread:Ljava/util/concurrent/atomic/AtomicReference;
      74: aconst_null
      75: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      78: aload_3
      79: athrow
      80: aload_0
      81: getfield      #4                  // Field queue:Ljava/util/Queue;
      84: invokeinterface #20,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      89: ifeq          0
      92: return
    Exception table:
       from    to  target type
          32    38    41   Class java/lang/Throwable
          15    58    69   any

  public final void executeLater(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/util/Queue;
       4: aload_1
       5: ldc           #21                 // String runnable is null
       7: invokestatic  #9                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: invokeinterface #22,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      15: pop
      16: return

  public final void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method executeLater:(Ljava/lang/Runnable;)V
       5: aload_0
       6: invokevirtual #24                 // Method drain:()V
       9: return

  public void throwIfNotInThisSynchronizationContext();
    Code:
       0: invokestatic  #12                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: getfield      #7                  // Field drainingThread:Ljava/util/concurrent/atomic/AtomicReference;
       7: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ldc           #26                 // String Not called from the SynchronizationContext
      20: invokestatic  #27                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      23: return

  public final io.grpc.SynchronizationContext$ScheduledHandle schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: new           #28                 // class io/grpc/SynchronizationContext$ManagedRunnable
       3: dup
       4: aload_1
       5: invokespecial #29                 // Method io/grpc/SynchronizationContext$ManagedRunnable."<init>":(Ljava/lang/Runnable;)V
       8: astore        6
      10: aload         5
      12: new           #30                 // class io/grpc/SynchronizationContext$1
      15: dup
      16: aload_0
      17: aload         6
      19: aload_1
      20: invokespecial #31                 // Method io/grpc/SynchronizationContext$1."<init>":(Lio/grpc/SynchronizationContext;Lio/grpc/SynchronizationContext$ManagedRunnable;Ljava/lang/Runnable;)V
      23: lload_2
      24: aload         4
      26: invokeinterface #32,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      31: astore        7
      33: new           #33                 // class io/grpc/SynchronizationContext$ScheduledHandle
      36: dup
      37: aload         6
      39: aload         7
      41: aconst_null
      42: invokespecial #34                 // Method io/grpc/SynchronizationContext$ScheduledHandle."<init>":(Lio/grpc/SynchronizationContext$ManagedRunnable;Ljava/util/concurrent/ScheduledFuture;Lio/grpc/SynchronizationContext$1;)V
      45: areturn
}
