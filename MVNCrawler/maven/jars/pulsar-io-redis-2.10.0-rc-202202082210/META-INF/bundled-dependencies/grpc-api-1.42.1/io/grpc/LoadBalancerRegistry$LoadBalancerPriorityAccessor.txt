Compiled from "LoadBalancerRegistry.java"
final class io.grpc.LoadBalancerRegistry$LoadBalancerPriorityAccessor implements io.grpc.ServiceProviders$PriorityAccessor<io.grpc.LoadBalancerProvider> {
  io.grpc.LoadBalancerRegistry$LoadBalancerPriorityAccessor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean isAvailable(io.grpc.LoadBalancerProvider);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method io/grpc/LoadBalancerProvider.isAvailable:()Z
       4: ireturn

  public int getPriority(io.grpc.LoadBalancerProvider);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method io/grpc/LoadBalancerProvider.getPriority:()I
       4: ireturn

  public int getPriority(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class io/grpc/LoadBalancerProvider
       5: invokevirtual #5                  // Method getPriority:(Lio/grpc/LoadBalancerProvider;)I
       8: ireturn

  public boolean isAvailable(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class io/grpc/LoadBalancerProvider
       5: invokevirtual #6                  // Method isAvailable:(Lio/grpc/LoadBalancerProvider;)Z
       8: ireturn
}
