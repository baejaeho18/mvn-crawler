Compiled from "MethodDescriptor.java"
public final class io.grpc.MethodDescriptor<ReqT, RespT> {
  private final io.grpc.MethodDescriptor$MethodType type;

  private final java.lang.String fullMethodName;

  private final java.lang.String serviceName;

  private final io.grpc.MethodDescriptor$Marshaller<ReqT> requestMarshaller;

  private final io.grpc.MethodDescriptor$Marshaller<RespT> responseMarshaller;

  private final java.lang.Object schemaDescriptor;

  private final boolean idempotent;

  private final boolean safe;

  private final boolean sampledToLocalTracing;

  private final java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object> rawMethodNames;

  static final boolean $assertionsDisabled;

  final java.lang.Object getRawMethodName(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field rawMethodNames:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: iload_1
       5: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
       8: areturn

  final void setRawMethodName(int, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field rawMethodNames:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: iload_1
       5: aload_2
       6: invokevirtual #4                  // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
       9: return

  public static <RequestT, ResponseT> io.grpc.MethodDescriptor<RequestT, ResponseT> create(io.grpc.MethodDescriptor$MethodType, java.lang.String, io.grpc.MethodDescriptor$Marshaller<RequestT>, io.grpc.MethodDescriptor$Marshaller<ResponseT>);
    Code:
       0: new           #5                  // class io/grpc/MethodDescriptor
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: aconst_null
       9: iconst_0
      10: iconst_0
      11: iconst_0
      12: invokespecial #1                  // Method "<init>":(Lio/grpc/MethodDescriptor$MethodType;Ljava/lang/String;Lio/grpc/MethodDescriptor$Marshaller;Lio/grpc/MethodDescriptor$Marshaller;Ljava/lang/Object;ZZZ)V
      15: areturn

  private io.grpc.MethodDescriptor(io.grpc.MethodDescriptor$MethodType, java.lang.String, io.grpc.MethodDescriptor$Marshaller<ReqT>, io.grpc.MethodDescriptor$Marshaller<RespT>, java.lang.Object, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/atomic/AtomicReferenceArray
       8: dup
       9: iconst_2
      10: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      13: putfield      #2                  // Field rawMethodNames:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      16: getstatic     #9                  // Field $assertionsDisabled:Z
      19: ifne          42
      22: iload         7
      24: ifeq          42
      27: iload         6
      29: ifne          42
      32: new           #10                 // class java/lang/AssertionError
      35: dup
      36: ldc           #11                 // String safe should imply idempotent
      38: invokespecial #12                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      41: athrow
      42: aload_0
      43: aload_1
      44: ldc           #13                 // String type
      46: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #15                 // class io/grpc/MethodDescriptor$MethodType
      52: putfield      #16                 // Field type:Lio/grpc/MethodDescriptor$MethodType;
      55: aload_0
      56: aload_2
      57: ldc           #17                 // String fullMethodName
      59: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #18                 // class java/lang/String
      65: putfield      #19                 // Field fullMethodName:Ljava/lang/String;
      68: aload_0
      69: aload_2
      70: invokestatic  #20                 // Method extractFullServiceName:(Ljava/lang/String;)Ljava/lang/String;
      73: putfield      #21                 // Field serviceName:Ljava/lang/String;
      76: aload_0
      77: aload_3
      78: ldc           #22                 // String requestMarshaller
      80: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: checkcast     #23                 // class io/grpc/MethodDescriptor$Marshaller
      86: putfield      #24                 // Field requestMarshaller:Lio/grpc/MethodDescriptor$Marshaller;
      89: aload_0
      90: aload         4
      92: ldc           #25                 // String responseMarshaller
      94: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: checkcast     #23                 // class io/grpc/MethodDescriptor$Marshaller
     100: putfield      #26                 // Field responseMarshaller:Lio/grpc/MethodDescriptor$Marshaller;
     103: aload_0
     104: aload         5
     106: putfield      #27                 // Field schemaDescriptor:Ljava/lang/Object;
     109: aload_0
     110: iload         6
     112: putfield      #28                 // Field idempotent:Z
     115: aload_0
     116: iload         7
     118: putfield      #29                 // Field safe:Z
     121: aload_0
     122: iload         8
     124: putfield      #30                 // Field sampledToLocalTracing:Z
     127: return

  public io.grpc.MethodDescriptor$MethodType getType();
    Code:
       0: aload_0
       1: getfield      #16                 // Field type:Lio/grpc/MethodDescriptor$MethodType;
       4: areturn

  public java.lang.String getFullMethodName();
    Code:
       0: aload_0
       1: getfield      #19                 // Field fullMethodName:Ljava/lang/String;
       4: areturn

  public java.lang.String getServiceName();
    Code:
       0: aload_0
       1: getfield      #21                 // Field serviceName:Ljava/lang/String;
       4: areturn

  public java.lang.String getBareMethodName();
    Code:
       0: aload_0
       1: getfield      #19                 // Field fullMethodName:Ljava/lang/String;
       4: invokestatic  #31                 // Method extractBareMethodName:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public RespT parseResponse(java.io.InputStream);
    Code:
       0: aload_0
       1: getfield      #26                 // Field responseMarshaller:Lio/grpc/MethodDescriptor$Marshaller;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod io/grpc/MethodDescriptor$Marshaller.parse:(Ljava/io/InputStream;)Ljava/lang/Object;
      10: areturn

  public java.io.InputStream streamRequest(ReqT);
    Code:
       0: aload_0
       1: getfield      #24                 // Field requestMarshaller:Lio/grpc/MethodDescriptor$Marshaller;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod io/grpc/MethodDescriptor$Marshaller.stream:(Ljava/lang/Object;)Ljava/io/InputStream;
      10: areturn

  public ReqT parseRequest(java.io.InputStream);
    Code:
       0: aload_0
       1: getfield      #24                 // Field requestMarshaller:Lio/grpc/MethodDescriptor$Marshaller;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod io/grpc/MethodDescriptor$Marshaller.parse:(Ljava/io/InputStream;)Ljava/lang/Object;
      10: areturn

  public java.io.InputStream streamResponse(RespT);
    Code:
       0: aload_0
       1: getfield      #26                 // Field responseMarshaller:Lio/grpc/MethodDescriptor$Marshaller;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod io/grpc/MethodDescriptor$Marshaller.stream:(Ljava/lang/Object;)Ljava/io/InputStream;
      10: areturn

  public io.grpc.MethodDescriptor$Marshaller<ReqT> getRequestMarshaller();
    Code:
       0: aload_0
       1: getfield      #24                 // Field requestMarshaller:Lio/grpc/MethodDescriptor$Marshaller;
       4: areturn

  public io.grpc.MethodDescriptor$Marshaller<RespT> getResponseMarshaller();
    Code:
       0: aload_0
       1: getfield      #26                 // Field responseMarshaller:Lio/grpc/MethodDescriptor$Marshaller;
       4: areturn

  public java.lang.Object getSchemaDescriptor();
    Code:
       0: aload_0
       1: getfield      #27                 // Field schemaDescriptor:Ljava/lang/Object;
       4: areturn

  public boolean isIdempotent();
    Code:
       0: aload_0
       1: getfield      #28                 // Field idempotent:Z
       4: ireturn

  public boolean isSafe();
    Code:
       0: aload_0
       1: getfield      #29                 // Field safe:Z
       4: ireturn

  public boolean isSampledToLocalTracing();
    Code:
       0: aload_0
       1: getfield      #30                 // Field sampledToLocalTracing:Z
       4: ireturn

  public static java.lang.String generateFullMethodName(java.lang.String, java.lang.String);
    Code:
       0: new           #34                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: ldc           #36                 // String fullServiceName
      10: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #18                 // class java/lang/String
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #38                 // String /
      21: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: ldc           #39                 // String methodName
      27: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #18                 // class java/lang/String
      33: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public static java.lang.String extractFullServiceName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #17                 // String fullMethodName
       3: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #18                 // class java/lang/String
       9: bipush        47
      11: invokevirtual #41                 // Method java/lang/String.lastIndexOf:(I)I
      14: istore_1
      15: iload_1
      16: iconst_m1
      17: if_icmpne     22
      20: aconst_null
      21: areturn
      22: aload_0
      23: iconst_0
      24: iload_1
      25: invokevirtual #42                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      28: areturn

  public static java.lang.String extractBareMethodName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #17                 // String fullMethodName
       3: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #18                 // class java/lang/String
       9: bipush        47
      11: invokevirtual #41                 // Method java/lang/String.lastIndexOf:(I)I
      14: istore_1
      15: iload_1
      16: iconst_m1
      17: if_icmpne     22
      20: aconst_null
      21: areturn
      22: aload_0
      23: iload_1
      24: iconst_1
      25: iadd
      26: invokevirtual #43                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      29: areturn

  public static <ReqT, RespT> io.grpc.MethodDescriptor$Builder<ReqT, RespT> newBuilder();
    Code:
       0: aconst_null
       1: aconst_null
       2: invokestatic  #44                 // Method newBuilder:(Lio/grpc/MethodDescriptor$Marshaller;Lio/grpc/MethodDescriptor$Marshaller;)Lio/grpc/MethodDescriptor$Builder;
       5: areturn

  public static <ReqT, RespT> io.grpc.MethodDescriptor$Builder<ReqT, RespT> newBuilder(io.grpc.MethodDescriptor$Marshaller<ReqT>, io.grpc.MethodDescriptor$Marshaller<RespT>);
    Code:
       0: new           #45                 // class io/grpc/MethodDescriptor$Builder
       3: dup
       4: aconst_null
       5: invokespecial #46                 // Method io/grpc/MethodDescriptor$Builder."<init>":(Lio/grpc/MethodDescriptor$1;)V
       8: aload_0
       9: invokevirtual #47                 // Method io/grpc/MethodDescriptor$Builder.setRequestMarshaller:(Lio/grpc/MethodDescriptor$Marshaller;)Lio/grpc/MethodDescriptor$Builder;
      12: aload_1
      13: invokevirtual #48                 // Method io/grpc/MethodDescriptor$Builder.setResponseMarshaller:(Lio/grpc/MethodDescriptor$Marshaller;)Lio/grpc/MethodDescriptor$Builder;
      16: areturn

  public io.grpc.MethodDescriptor$Builder<ReqT, RespT> toBuilder();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #24                 // Field requestMarshaller:Lio/grpc/MethodDescriptor$Marshaller;
       5: aload_0
       6: getfield      #26                 // Field responseMarshaller:Lio/grpc/MethodDescriptor$Marshaller;
       9: invokevirtual #49                 // Method toBuilder:(Lio/grpc/MethodDescriptor$Marshaller;Lio/grpc/MethodDescriptor$Marshaller;)Lio/grpc/MethodDescriptor$Builder;
      12: areturn

  public <NewReqT, NewRespT> io.grpc.MethodDescriptor$Builder<NewReqT, NewRespT> toBuilder(io.grpc.MethodDescriptor$Marshaller<NewReqT>, io.grpc.MethodDescriptor$Marshaller<NewRespT>);
    Code:
       0: invokestatic  #50                 // Method newBuilder:()Lio/grpc/MethodDescriptor$Builder;
       3: aload_1
       4: invokevirtual #47                 // Method io/grpc/MethodDescriptor$Builder.setRequestMarshaller:(Lio/grpc/MethodDescriptor$Marshaller;)Lio/grpc/MethodDescriptor$Builder;
       7: aload_2
       8: invokevirtual #48                 // Method io/grpc/MethodDescriptor$Builder.setResponseMarshaller:(Lio/grpc/MethodDescriptor$Marshaller;)Lio/grpc/MethodDescriptor$Builder;
      11: aload_0
      12: getfield      #16                 // Field type:Lio/grpc/MethodDescriptor$MethodType;
      15: invokevirtual #51                 // Method io/grpc/MethodDescriptor$Builder.setType:(Lio/grpc/MethodDescriptor$MethodType;)Lio/grpc/MethodDescriptor$Builder;
      18: aload_0
      19: getfield      #19                 // Field fullMethodName:Ljava/lang/String;
      22: invokevirtual #52                 // Method io/grpc/MethodDescriptor$Builder.setFullMethodName:(Ljava/lang/String;)Lio/grpc/MethodDescriptor$Builder;
      25: aload_0
      26: getfield      #28                 // Field idempotent:Z
      29: invokevirtual #53                 // Method io/grpc/MethodDescriptor$Builder.setIdempotent:(Z)Lio/grpc/MethodDescriptor$Builder;
      32: aload_0
      33: getfield      #29                 // Field safe:Z
      36: invokevirtual #54                 // Method io/grpc/MethodDescriptor$Builder.setSafe:(Z)Lio/grpc/MethodDescriptor$Builder;
      39: aload_0
      40: getfield      #30                 // Field sampledToLocalTracing:Z
      43: invokevirtual #55                 // Method io/grpc/MethodDescriptor$Builder.setSampledToLocalTracing:(Z)Lio/grpc/MethodDescriptor$Builder;
      46: aload_0
      47: getfield      #27                 // Field schemaDescriptor:Ljava/lang/Object;
      50: invokevirtual #56                 // Method io/grpc/MethodDescriptor$Builder.setSchemaDescriptor:(Ljava/lang/Object;)Lio/grpc/MethodDescriptor$Builder;
      53: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #57                 // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       4: ldc           #17                 // String fullMethodName
       6: aload_0
       7: getfield      #19                 // Field fullMethodName:Ljava/lang/String;
      10: invokevirtual #58                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      13: ldc           #13                 // String type
      15: aload_0
      16: getfield      #16                 // Field type:Lio/grpc/MethodDescriptor$MethodType;
      19: invokevirtual #58                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      22: ldc           #59                 // String idempotent
      24: aload_0
      25: getfield      #28                 // Field idempotent:Z
      28: invokevirtual #60                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Z)Lcom/google/common/base/MoreObjects$ToStringHelper;
      31: ldc           #61                 // String safe
      33: aload_0
      34: getfield      #29                 // Field safe:Z
      37: invokevirtual #60                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Z)Lcom/google/common/base/MoreObjects$ToStringHelper;
      40: ldc           #62                 // String sampledToLocalTracing
      42: aload_0
      43: getfield      #30                 // Field sampledToLocalTracing:Z
      46: invokevirtual #60                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Z)Lcom/google/common/base/MoreObjects$ToStringHelper;
      49: ldc           #22                 // String requestMarshaller
      51: aload_0
      52: getfield      #24                 // Field requestMarshaller:Lio/grpc/MethodDescriptor$Marshaller;
      55: invokevirtual #58                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      58: ldc           #25                 // String responseMarshaller
      60: aload_0
      61: getfield      #26                 // Field responseMarshaller:Lio/grpc/MethodDescriptor$Marshaller;
      64: invokevirtual #58                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      67: ldc           #63                 // String schemaDescriptor
      69: aload_0
      70: getfield      #27                 // Field schemaDescriptor:Ljava/lang/Object;
      73: invokevirtual #58                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      76: invokevirtual #64                 // Method com/google/common/base/MoreObjects$ToStringHelper.omitNullValues:()Lcom/google/common/base/MoreObjects$ToStringHelper;
      79: invokevirtual #65                 // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      82: areturn

  io.grpc.MethodDescriptor(io.grpc.MethodDescriptor$MethodType, java.lang.String, io.grpc.MethodDescriptor$Marshaller, io.grpc.MethodDescriptor$Marshaller, java.lang.Object, boolean, boolean, boolean, io.grpc.MethodDescriptor$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: iload         7
      12: iload         8
      14: invokespecial #1                  // Method "<init>":(Lio/grpc/MethodDescriptor$MethodType;Ljava/lang/String;Lio/grpc/MethodDescriptor$Marshaller;Lio/grpc/MethodDescriptor$Marshaller;Ljava/lang/Object;ZZZ)V
      17: return

  static {};
    Code:
       0: ldc           #5                  // class io/grpc/MethodDescriptor
       2: invokevirtual #66                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #9                  // Field $assertionsDisabled:Z
      16: return
}
