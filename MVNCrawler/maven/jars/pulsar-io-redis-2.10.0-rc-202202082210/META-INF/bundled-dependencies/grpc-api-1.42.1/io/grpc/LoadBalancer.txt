Compiled from "LoadBalancer.java"
public abstract class io.grpc.LoadBalancer {
  public static final io.grpc.Attributes$Key<java.util.Map<java.lang.String, ?>> ATTR_HEALTH_CHECKING_CONFIG;

  private int recursionCount;

  public io.grpc.LoadBalancer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void handleResolvedAddressGroups(java.util.List<io.grpc.EquivalentAddressGroup>, io.grpc.Attributes);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field recursionCount:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #2                  // Field recursionCount:I
      11: ifne          32
      14: aload_0
      15: invokestatic  #3                  // Method io/grpc/LoadBalancer$ResolvedAddresses.newBuilder:()Lio/grpc/LoadBalancer$ResolvedAddresses$Builder;
      18: aload_1
      19: invokevirtual #4                  // Method io/grpc/LoadBalancer$ResolvedAddresses$Builder.setAddresses:(Ljava/util/List;)Lio/grpc/LoadBalancer$ResolvedAddresses$Builder;
      22: aload_2
      23: invokevirtual #5                  // Method io/grpc/LoadBalancer$ResolvedAddresses$Builder.setAttributes:(Lio/grpc/Attributes;)Lio/grpc/LoadBalancer$ResolvedAddresses$Builder;
      26: invokevirtual #6                  // Method io/grpc/LoadBalancer$ResolvedAddresses$Builder.build:()Lio/grpc/LoadBalancer$ResolvedAddresses;
      29: invokevirtual #7                  // Method handleResolvedAddresses:(Lio/grpc/LoadBalancer$ResolvedAddresses;)V
      32: aload_0
      33: iconst_0
      34: putfield      #2                  // Field recursionCount:I
      37: return

  public void handleResolvedAddresses(io.grpc.LoadBalancer$ResolvedAddresses);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field recursionCount:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #2                  // Field recursionCount:I
      11: ifne          26
      14: aload_0
      15: aload_1
      16: invokevirtual #8                  // Method io/grpc/LoadBalancer$ResolvedAddresses.getAddresses:()Ljava/util/List;
      19: aload_1
      20: invokevirtual #9                  // Method io/grpc/LoadBalancer$ResolvedAddresses.getAttributes:()Lio/grpc/Attributes;
      23: invokevirtual #10                 // Method handleResolvedAddressGroups:(Ljava/util/List;Lio/grpc/Attributes;)V
      26: aload_0
      27: iconst_0
      28: putfield      #2                  // Field recursionCount:I
      31: return

  public abstract void handleNameResolutionError(io.grpc.Status);

  public void handleSubchannelState(io.grpc.LoadBalancer$Subchannel, io.grpc.ConnectivityStateInfo);
    Code:
       0: return

  public abstract void shutdown();

  public boolean canHandleEmptyAddressListFromNameResolution();
    Code:
       0: iconst_0
       1: ireturn

  public void requestConnection();
    Code:
       0: return

  static {};
    Code:
       0: ldc           #11                 // String health-checking-config
       2: invokestatic  #12                 // Method io/grpc/Attributes$Key.create:(Ljava/lang/String;)Lio/grpc/Attributes$Key;
       5: putstatic     #13                 // Field ATTR_HEALTH_CHECKING_CONFIG:Lio/grpc/Attributes$Key;
       8: return
}
