Compiled from "VerGen.java"
public class org.apache.zookeeper.version.util.VerGen {
  private static final java.lang.String PACKAGE_NAME;

  private static final java.lang.String VERSION_CLASS_NAME;

  private static final java.lang.String VERSION_INTERFACE_NAME;

  public org.apache.zookeeper.version.util.VerGen();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static void printUsage();
    Code:
       0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
       3: ldc           #3                  // String Usage:\tjava  -cp <classpath> org.apache.zookeeper.version.util.VerGen maj.min.micro[-qualifier] [rev] buildDate outputDirectory
       5: invokevirtual #4                  // Method java/io/PrintStream.print:(Ljava/lang/String;)V
       8: getstatic     #5                  // Field org/apache/zookeeper/server/ExitCode.UNEXPECTED_ERROR:Lorg/apache/zookeeper/server/ExitCode;
      11: invokevirtual #6                  // Method org/apache/zookeeper/server/ExitCode.getValue:()I
      14: invokestatic  #7                  // Method java/lang/System.exit:(I)V
      17: return

  public static void generateFile(java.io.File, org.apache.zookeeper.version.util.VerGen$Version, java.lang.String, java.lang.String);
    Code:
       0: ldc           #9                  // String org.apache.zookeeper.version
       2: ldc           #10                 // String \\.
       4: ldc           #11                 // String /
       6: invokevirtual #12                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       9: astore        4
      11: new           #13                 // class java/io/File
      14: dup
      15: aload_0
      16: aload         4
      18: invokespecial #14                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      21: astore        5
      23: aload         5
      25: invokevirtual #15                 // Method java/io/File.exists:()Z
      28: ifne          81
      31: aload         5
      33: invokevirtual #16                 // Method java/io/File.mkdirs:()Z
      36: istore        6
      38: iload         6
      40: ifne          78
      43: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
      46: new           #17                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #19                 // String Cannnot create directory:
      55: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload         4
      60: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokevirtual #22                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      69: getstatic     #5                  // Field org/apache/zookeeper/server/ExitCode.UNEXPECTED_ERROR:Lorg/apache/zookeeper/server/ExitCode;
      72: invokevirtual #6                  // Method org/apache/zookeeper/server/ExitCode.getValue:()I
      75: invokestatic  #7                  // Method java/lang/System.exit:(I)V
      78: goto          124
      81: aload         5
      83: invokevirtual #23                 // Method java/io/File.isDirectory:()Z
      86: ifne          124
      89: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
      92: new           #17                 // class java/lang/StringBuilder
      95: dup
      96: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      99: aload         4
     101: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc           #24                 // String  is not a directory.
     106: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokevirtual #22                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     115: getstatic     #5                  // Field org/apache/zookeeper/server/ExitCode.UNEXPECTED_ERROR:Lorg/apache/zookeeper/server/ExitCode;
     118: invokevirtual #6                  // Method org/apache/zookeeper/server/ExitCode.getValue:()I
     121: invokestatic  #7                  // Method java/lang/System.exit:(I)V
     124: new           #25                 // class java/io/FileWriter
     127: dup
     128: new           #13                 // class java/io/File
     131: dup
     132: aload         5
     134: ldc           #26                 // String Info.java
     136: invokespecial #14                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     139: invokespecial #27                 // Method java/io/FileWriter."<init>":(Ljava/io/File;)V
     142: astore        6
     144: aconst_null
     145: astore        7
     147: aload         6
     149: ldc           #28                 // String // Do not edit!\n// File generated by org.apache.zookeeper.version.util.VerGen.\n
     151: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     154: aload         6
     156: ldc           #30                 // String /**\n
     158: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     161: aload         6
     163: ldc           #31                 // String * Licensed to the Apache Software Foundation (ASF) under one\n
     165: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     168: aload         6
     170: ldc           #32                 // String * or more contributor license agreements.  See the NOTICE file\n
     172: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     175: aload         6
     177: ldc           #33                 // String * distributed with this work for additional information\n
     179: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     182: aload         6
     184: ldc           #34                 // String * regarding copyright ownership.  The ASF licenses this file\n
     186: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     189: aload         6
     191: ldc           #35                 // String * to you under the Apache License, Version 2.0 (the\n
     193: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     196: aload         6
     198: ldc           #36                 // String * \"License\"); you may not use this file except in compliance\n
     200: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     203: aload         6
     205: ldc           #37                 // String * with the License.  You may obtain a copy of the License at\n
     207: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     210: aload         6
     212: ldc           #38                 // String *\n
     214: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     217: aload         6
     219: ldc           #39                 // String *     http://www.apache.org/licenses/LICENSE-2.0\n
     221: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     224: aload         6
     226: ldc           #38                 // String *\n
     228: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     231: aload         6
     233: ldc           #40                 // String * Unless required by applicable law or agreed to in writing, software\n
     235: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     238: aload         6
     240: ldc           #41                 // String * distributed under the License is distributed on an \"AS IS\" BASIS,\n
     242: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     245: aload         6
     247: ldc           #42                 // String * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
     249: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     252: aload         6
     254: ldc           #43                 // String * See the License for the specific language governing permissions and\n
     256: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     259: aload         6
     261: ldc           #44                 // String * limitations under the License.\n
     263: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     266: aload         6
     268: ldc           #45                 // String */\n
     270: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     273: aload         6
     275: ldc           #46                 // String \n
     277: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     280: aload         6
     282: ldc           #47                 // String package org.apache.zookeeper.version;\n\n
     284: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     287: aload         6
     289: ldc           #48                 // String public interface Info {\n
     291: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     294: aload         6
     296: new           #17                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #49                 // String     int MAJOR=
     305: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_1
     309: getfield      #50                 // Field org/apache/zookeeper/version/util/VerGen$Version.maj:I
     312: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     315: ldc           #52                 // String ;\n
     317: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     326: aload         6
     328: new           #17                 // class java/lang/StringBuilder
     331: dup
     332: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     335: ldc           #53                 // String     int MINOR=
     337: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     340: aload_1
     341: getfield      #54                 // Field org/apache/zookeeper/version/util/VerGen$Version.min:I
     344: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     347: ldc           #52                 // String ;\n
     349: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     352: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     355: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     358: aload         6
     360: new           #17                 // class java/lang/StringBuilder
     363: dup
     364: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     367: ldc           #55                 // String     int MICRO=
     369: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     372: aload_1
     373: getfield      #56                 // Field org/apache/zookeeper/version/util/VerGen$Version.micro:I
     376: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     379: ldc           #52                 // String ;\n
     381: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     384: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     387: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     390: aload         6
     392: new           #17                 // class java/lang/StringBuilder
     395: dup
     396: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     399: ldc           #57                 // String     String QUALIFIER=
     401: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: aload_1
     405: getfield      #58                 // Field org/apache/zookeeper/version/util/VerGen$Version.qualifier:Ljava/lang/String;
     408: ifnonnull     416
     411: ldc           #59                 // String \"\"
     413: goto          443
     416: new           #17                 // class java/lang/StringBuilder
     419: dup
     420: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     423: ldc           #60                 // String \"
     425: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     428: aload_1
     429: getfield      #58                 // Field org/apache/zookeeper/version/util/VerGen$Version.qualifier:Ljava/lang/String;
     432: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     435: ldc           #60                 // String \"
     437: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     440: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     443: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     446: ldc           #52                 // String ;\n
     448: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     451: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     454: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     457: aload_2
     458: ldc           #61                 // String -1
     460: invokevirtual #62                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     463: ifeq          491
     466: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
     469: new           #17                 // class java/lang/StringBuilder
     472: dup
     473: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     476: ldc           #63                 // String Unknown REVISION number, using
     478: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     481: aload_2
     482: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     485: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     488: invokevirtual #22                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     491: aload         6
     493: ldc           #64                 // String     int REVISION=-1; //@deprecated, please use REVISION_HASH\n
     495: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     498: aload         6
     500: new           #17                 // class java/lang/StringBuilder
     503: dup
     504: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     507: ldc           #65                 // String     String REVISION_HASH=\"
     509: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     512: aload_2
     513: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     516: ldc           #66                 // String \";\n
     518: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     524: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     527: aload         6
     529: new           #17                 // class java/lang/StringBuilder
     532: dup
     533: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     536: ldc           #67                 // String     String BUILD_DATE=\"
     538: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     541: aload_3
     542: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     545: ldc           #66                 // String \";\n
     547: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     550: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     553: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     556: aload         6
     558: ldc           #68                 // String }\n
     560: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     563: aload         6
     565: ifnull        650
     568: aload         7
     570: ifnull        593
     573: aload         6
     575: invokevirtual #69                 // Method java/io/FileWriter.close:()V
     578: goto          650
     581: astore        8
     583: aload         7
     585: aload         8
     587: invokevirtual #71                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     590: goto          650
     593: aload         6
     595: invokevirtual #69                 // Method java/io/FileWriter.close:()V
     598: goto          650
     601: astore        8
     603: aload         8
     605: astore        7
     607: aload         8
     609: athrow
     610: astore        9
     612: aload         6
     614: ifnull        647
     617: aload         7
     619: ifnull        642
     622: aload         6
     624: invokevirtual #69                 // Method java/io/FileWriter.close:()V
     627: goto          647
     630: astore        10
     632: aload         7
     634: aload         10
     636: invokevirtual #71                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     639: goto          647
     642: aload         6
     644: invokevirtual #69                 // Method java/io/FileWriter.close:()V
     647: aload         9
     649: athrow
     650: goto          693
     653: astore        6
     655: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
     658: new           #17                 // class java/lang/StringBuilder
     661: dup
     662: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     665: ldc           #73                 // String Unable to generate version.Info file:
     667: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     670: aload         6
     672: invokevirtual #74                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     675: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     678: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     681: invokevirtual #22                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     684: getstatic     #5                  // Field org/apache/zookeeper/server/ExitCode.UNEXPECTED_ERROR:Lorg/apache/zookeeper/server/ExitCode;
     687: invokevirtual #6                  // Method org/apache/zookeeper/server/ExitCode.getValue:()I
     690: invokestatic  #7                  // Method java/lang/System.exit:(I)V
     693: new           #25                 // class java/io/FileWriter
     696: dup
     697: new           #13                 // class java/io/File
     700: dup
     701: aload         5
     703: ldc           #75                 // String VersionInfoMain.java
     705: invokespecial #14                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     708: invokespecial #27                 // Method java/io/FileWriter."<init>":(Ljava/io/File;)V
     711: astore        6
     713: aconst_null
     714: astore        7
     716: aload         6
     718: ldc           #28                 // String // Do not edit!\n// File generated by org.apache.zookeeper.version.util.VerGen.\n
     720: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     723: aload         6
     725: ldc           #30                 // String /**\n
     727: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     730: aload         6
     732: ldc           #31                 // String * Licensed to the Apache Software Foundation (ASF) under one\n
     734: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     737: aload         6
     739: ldc           #32                 // String * or more contributor license agreements.  See the NOTICE file\n
     741: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     744: aload         6
     746: ldc           #33                 // String * distributed with this work for additional information\n
     748: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     751: aload         6
     753: ldc           #34                 // String * regarding copyright ownership.  The ASF licenses this file\n
     755: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     758: aload         6
     760: ldc           #35                 // String * to you under the Apache License, Version 2.0 (the\n
     762: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     765: aload         6
     767: ldc           #36                 // String * \"License\"); you may not use this file except in compliance\n
     769: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     772: aload         6
     774: ldc           #37                 // String * with the License.  You may obtain a copy of the License at\n
     776: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     779: aload         6
     781: ldc           #38                 // String *\n
     783: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     786: aload         6
     788: ldc           #39                 // String *     http://www.apache.org/licenses/LICENSE-2.0\n
     790: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     793: aload         6
     795: ldc           #38                 // String *\n
     797: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     800: aload         6
     802: ldc           #40                 // String * Unless required by applicable law or agreed to in writing, software\n
     804: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     807: aload         6
     809: ldc           #41                 // String * distributed under the License is distributed on an \"AS IS\" BASIS,\n
     811: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     814: aload         6
     816: ldc           #42                 // String * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
     818: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     821: aload         6
     823: ldc           #43                 // String * See the License for the specific language governing permissions and\n
     825: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     828: aload         6
     830: ldc           #44                 // String * limitations under the License.\n
     832: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     835: aload         6
     837: ldc           #45                 // String */\n
     839: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     842: aload         6
     844: ldc           #46                 // String \n
     846: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     849: aload         6
     851: ldc           #47                 // String package org.apache.zookeeper.version;\n\n
     853: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     856: aload         6
     858: ldc           #76                 // String public class VersionInfoMain implements org.apache.zookeeper.version.Info {\n
     860: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     863: aload         6
     865: ldc           #77                 // String     public static void main(String[] args) {\n
     867: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     870: aload         6
     872: ldc           #78                 // String         final String VER_STRING = MAJOR + \".\" + MINOR + \".\" + MICRO +
     874: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     877: aload         6
     879: ldc           #79                 // String             (QUALIFIER == null || QUALIFIER.isEmpty() ? \"\" : \"-\" + QUALIFIER)  + \" \" +
     881: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     884: aload         6
     886: ldc           #80                 // String             BUILD_DATE;\n
     888: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     891: aload         6
     893: ldc           #81                 // String         System.out.println(\"Apache ZooKeeper, version \" + VER_STRING);\n
     895: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     898: aload         6
     900: ldc           #82                 // String     }\n
     902: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     905: aload         6
     907: ldc           #68                 // String }\n
     909: invokevirtual #29                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     912: aload         6
     914: ifnull        999
     917: aload         7
     919: ifnull        942
     922: aload         6
     924: invokevirtual #69                 // Method java/io/FileWriter.close:()V
     927: goto          999
     930: astore        8
     932: aload         7
     934: aload         8
     936: invokevirtual #71                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     939: goto          999
     942: aload         6
     944: invokevirtual #69                 // Method java/io/FileWriter.close:()V
     947: goto          999
     950: astore        8
     952: aload         8
     954: astore        7
     956: aload         8
     958: athrow
     959: astore        11
     961: aload         6
     963: ifnull        996
     966: aload         7
     968: ifnull        991
     971: aload         6
     973: invokevirtual #69                 // Method java/io/FileWriter.close:()V
     976: goto          996
     979: astore        12
     981: aload         7
     983: aload         12
     985: invokevirtual #71                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     988: goto          996
     991: aload         6
     993: invokevirtual #69                 // Method java/io/FileWriter.close:()V
     996: aload         11
     998: athrow
     999: goto          1042
    1002: astore        6
    1004: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
    1007: new           #17                 // class java/lang/StringBuilder
    1010: dup
    1011: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
    1014: ldc           #83                 // String Unable to generate version.VersionInfoMain file:
    1016: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1019: aload         6
    1021: invokevirtual #74                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
    1024: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1027: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1030: invokevirtual #22                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1033: getstatic     #5                  // Field org/apache/zookeeper/server/ExitCode.UNEXPECTED_ERROR:Lorg/apache/zookeeper/server/ExitCode;
    1036: invokevirtual #6                  // Method org/apache/zookeeper/server/ExitCode.getValue:()I
    1039: invokestatic  #7                  // Method java/lang/System.exit:(I)V
    1042: return
    Exception table:
       from    to  target type
         573   578   581   Class java/lang/Throwable
         147   563   601   Class java/lang/Throwable
         147   563   610   any
         622   627   630   Class java/lang/Throwable
         601   612   610   any
         124   650   653   Class java/io/IOException
         922   927   930   Class java/lang/Throwable
         716   912   950   Class java/lang/Throwable
         716   912   959   any
         971   976   979   Class java/lang/Throwable
         950   961   959   any
         693   999  1002   Class java/io/IOException

  public static org.apache.zookeeper.version.util.VerGen$Version parseVersionString(java.lang.String);
    Code:
       0: new           #84                 // class org/apache/zookeeper/version/util/VerGen$Version
       3: dup
       4: invokespecial #85                 // Method org/apache/zookeeper/version/util/VerGen$Version."<init>":()V
       7: astore_1
       8: ldc           #86                 // String ^(\\d+)\\.(\\d+)\\.(\\d+)((\\.\\d+)*)(-(.+))?$
      10: invokestatic  #87                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: astore_2
      14: aload_2
      15: aload_0
      16: invokevirtual #88                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      19: astore_3
      20: aload_3
      21: invokevirtual #89                 // Method java/util/regex/Matcher.matches:()Z
      24: ifne          29
      27: aconst_null
      28: areturn
      29: aload_1
      30: aload_3
      31: iconst_1
      32: invokevirtual #90                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      35: invokestatic  #91                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      38: putfield      #50                 // Field org/apache/zookeeper/version/util/VerGen$Version.maj:I
      41: aload_1
      42: aload_3
      43: iconst_2
      44: invokevirtual #90                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      47: invokestatic  #91                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      50: putfield      #54                 // Field org/apache/zookeeper/version/util/VerGen$Version.min:I
      53: aload_1
      54: aload_3
      55: iconst_3
      56: invokevirtual #90                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      59: invokestatic  #91                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      62: putfield      #56                 // Field org/apache/zookeeper/version/util/VerGen$Version.micro:I
      65: aload_3
      66: invokevirtual #92                 // Method java/util/regex/Matcher.groupCount:()I
      69: bipush        7
      71: if_icmpne     87
      74: aload_1
      75: aload_3
      76: bipush        7
      78: invokevirtual #90                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      81: putfield      #58                 // Field org/apache/zookeeper/version/util/VerGen$Version.qualifier:Ljava/lang/String;
      84: goto          92
      87: aload_1
      88: aconst_null
      89: putfield      #58                 // Field org/apache/zookeeper/version/util/VerGen$Version.qualifier:Ljava/lang/String;
      92: aload_1
      93: areturn

  public static void main(java.lang.String[]);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_3
       3: if_icmpeq     15
       6: aload_0
       7: arraylength
       8: iconst_4
       9: if_icmpeq     15
      12: invokestatic  #93                 // Method printUsage:()V
      15: aload_0
      16: arraylength
      17: iconst_3
      18: if_icmpne     48
      21: iconst_4
      22: anewarray     #94                 // class java/lang/String
      25: dup
      26: iconst_0
      27: aload_0
      28: iconst_0
      29: aaload
      30: aastore
      31: dup
      32: iconst_1
      33: aconst_null
      34: aastore
      35: dup
      36: iconst_2
      37: aload_0
      38: iconst_1
      39: aaload
      40: aastore
      41: dup
      42: iconst_3
      43: aload_0
      44: iconst_2
      45: aaload
      46: aastore
      47: astore_0
      48: aload_0
      49: iconst_0
      50: aaload
      51: invokestatic  #95                 // Method parseVersionString:(Ljava/lang/String;)Lorg/apache/zookeeper/version/util/VerGen$Version;
      54: astore_1
      55: aload_1
      56: ifnonnull     76
      59: getstatic     #96                 // Field java/lang/System.err:Ljava/io/PrintStream;
      62: ldc           #97                 // String Invalid version number format, must be \"x.y.z(-.*)?\"
      64: invokevirtual #22                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      67: getstatic     #5                  // Field org/apache/zookeeper/server/ExitCode.UNEXPECTED_ERROR:Lorg/apache/zookeeper/server/ExitCode;
      70: invokevirtual #6                  // Method org/apache/zookeeper/server/ExitCode.getValue:()I
      73: invokestatic  #7                  // Method java/lang/System.exit:(I)V
      76: aload_0
      77: iconst_1
      78: aaload
      79: astore_2
      80: aload_2
      81: ifnull        94
      84: aload_2
      85: invokevirtual #98                 // Method java/lang/String.trim:()Ljava/lang/String;
      88: invokevirtual #99                 // Method java/lang/String.isEmpty:()Z
      91: ifeq          100
      94: ldc           #61                 // String -1
      96: astore_2
      97: goto          105
     100: aload_2
     101: invokevirtual #98                 // Method java/lang/String.trim:()Ljava/lang/String;
     104: astore_2
     105: new           #13                 // class java/io/File
     108: dup
     109: aload_0
     110: iconst_3
     111: aaload
     112: invokespecial #100                // Method java/io/File."<init>":(Ljava/lang/String;)V
     115: aload_1
     116: aload_2
     117: aload_0
     118: iconst_2
     119: aaload
     120: invokestatic  #101                // Method generateFile:(Ljava/io/File;Lorg/apache/zookeeper/version/util/VerGen$Version;Ljava/lang/String;Ljava/lang/String;)V
     123: goto          137
     126: astore_1
     127: getstatic     #96                 // Field java/lang/System.err:Ljava/io/PrintStream;
     130: ldc           #103                // String All version-related parameters must be valid integers!
     132: invokevirtual #22                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     135: aload_1
     136: athrow
     137: return
    Exception table:
       from    to  target type
          48   123   126   Class java/lang/NumberFormatException
}
