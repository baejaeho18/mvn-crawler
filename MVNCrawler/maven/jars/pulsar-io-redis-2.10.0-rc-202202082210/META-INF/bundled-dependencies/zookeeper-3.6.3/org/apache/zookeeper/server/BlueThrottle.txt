Compiled from "BlueThrottle.java"
public class org.apache.zookeeper.server.BlueThrottle {
  private static final org.slf4j.Logger LOG;

  private int maxTokens;

  private int fillTime;

  private int fillCount;

  private int tokens;

  private long lastTime;

  private int freezeTime;

  private long lastFreeze;

  private double dropIncrease;

  private double dropDecrease;

  private double decreasePoint;

  private double drop;

  java.util.Random rng;

  public static final java.lang.String CONNECTION_THROTTLE_TOKENS;

  private static final int DEFAULT_CONNECTION_THROTTLE_TOKENS;

  public static final java.lang.String CONNECTION_THROTTLE_FILL_TIME;

  private static final int DEFAULT_CONNECTION_THROTTLE_FILL_TIME;

  public static final java.lang.String CONNECTION_THROTTLE_FILL_COUNT;

  private static final int DEFAULT_CONNECTION_THROTTLE_FILL_COUNT;

  public static final java.lang.String CONNECTION_THROTTLE_FREEZE_TIME;

  private static final int DEFAULT_CONNECTION_THROTTLE_FREEZE_TIME;

  public static final java.lang.String CONNECTION_THROTTLE_DROP_INCREASE;

  private static final double DEFAULT_CONNECTION_THROTTLE_DROP_INCREASE;

  public static final java.lang.String CONNECTION_THROTTLE_DROP_DECREASE;

  private static final double DEFAULT_CONNECTION_THROTTLE_DROP_DECREASE;

  public static final java.lang.String CONNECTION_THROTTLE_DECREASE_RATIO;

  private static final double DEFAULT_CONNECTION_THROTTLE_DECREASE_RATIO;

  public static final java.lang.String WEIGHED_CONNECTION_THROTTLE;

  private static boolean connectionWeightEnabled;

  public static final java.lang.String GLOBAL_SESSION_WEIGHT;

  private static final int DEFAULT_GLOBAL_SESSION_WEIGHT;

  public static final java.lang.String LOCAL_SESSION_WEIGHT;

  private static final int DEFAULT_LOCAL_SESSION_WEIGHT;

  public static final java.lang.String RENEW_SESSION_WEIGHT;

  private static final int DEFAULT_RENEW_SESSION_WEIGHT;

  protected static void setConnectionWeightEnabled(boolean);
    Code:
       0: iload_0
       1: putstatic     #1                  // Field connectionWeightEnabled:Z
       4: invokestatic  #2                  // Method logWeighedThrottlingSetting:()V
       7: return

  private static void logWeighedThrottlingSetting();
    Code:
       0: getstatic     #1                  // Field connectionWeightEnabled:Z
       3: ifeq          60
       6: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       9: ldc           #4                  // String Weighed connection throttling is enabled. But it will only be effective if connection throttling is enabled
      11: invokeinterface #5,  2            // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      16: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      19: ldc           #6                  // String The weights for different session types are: global {} renew {} local {}
      21: iconst_3
      22: anewarray     #7                  // class java/lang/Object
      25: dup
      26: iconst_0
      27: getstatic     #8                  // Field DEFAULT_GLOBAL_SESSION_WEIGHT:I
      30: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: aastore
      34: dup
      35: iconst_1
      36: getstatic     #10                 // Field DEFAULT_RENEW_SESSION_WEIGHT:I
      39: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: aastore
      43: dup
      44: iconst_2
      45: getstatic     #11                 // Field DEFAULT_LOCAL_SESSION_WEIGHT:I
      48: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: aastore
      52: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      57: goto          70
      60: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      63: ldc           #13                 // String Weighed connection throttling is disabled
      65: invokeinterface #5,  2            // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      70: return

  private static double getDoubleProp(java.lang.String, double);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_3
       5: aload_3
       6: ifnull        14
       9: aload_3
      10: invokestatic  #15                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      13: dreturn
      14: dload_1
      15: dreturn

  public org.apache.zookeeper.server.BlueThrottle();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #17                 // Field DEFAULT_CONNECTION_THROTTLE_TOKENS:I
       8: putfield      #18                 // Field maxTokens:I
      11: aload_0
      12: getstatic     #19                 // Field DEFAULT_CONNECTION_THROTTLE_FILL_TIME:I
      15: putfield      #20                 // Field fillTime:I
      18: aload_0
      19: getstatic     #21                 // Field DEFAULT_CONNECTION_THROTTLE_FILL_COUNT:I
      22: putfield      #22                 // Field fillCount:I
      25: aload_0
      26: aload_0
      27: getfield      #18                 // Field maxTokens:I
      30: putfield      #23                 // Field tokens:I
      33: aload_0
      34: invokestatic  #24                 // Method org/apache/zookeeper/common/Time.currentElapsedTime:()J
      37: putfield      #25                 // Field lastTime:J
      40: aload_0
      41: getstatic     #26                 // Field DEFAULT_CONNECTION_THROTTLE_FREEZE_TIME:I
      44: putfield      #27                 // Field freezeTime:I
      47: aload_0
      48: invokestatic  #24                 // Method org/apache/zookeeper/common/Time.currentElapsedTime:()J
      51: putfield      #28                 // Field lastFreeze:J
      54: aload_0
      55: getstatic     #29                 // Field DEFAULT_CONNECTION_THROTTLE_DROP_INCREASE:D
      58: putfield      #30                 // Field dropIncrease:D
      61: aload_0
      62: getstatic     #31                 // Field DEFAULT_CONNECTION_THROTTLE_DROP_DECREASE:D
      65: putfield      #32                 // Field dropDecrease:D
      68: aload_0
      69: getstatic     #33                 // Field DEFAULT_CONNECTION_THROTTLE_DECREASE_RATIO:D
      72: putfield      #34                 // Field decreasePoint:D
      75: aload_0
      76: dconst_0
      77: putfield      #35                 // Field drop:D
      80: aload_0
      81: new           #36                 // class java/util/Random
      84: dup
      85: invokespecial #37                 // Method java/util/Random."<init>":()V
      88: putfield      #38                 // Field rng:Ljava/util/Random;
      91: return

  public synchronized void setMaxTokens(int);
    Code:
       0: aload_0
       1: getfield      #18                 // Field maxTokens:I
       4: aload_0
       5: getfield      #23                 // Field tokens:I
       8: isub
       9: istore_2
      10: aload_0
      11: iload_1
      12: putfield      #18                 // Field maxTokens:I
      15: aload_0
      16: iload_1
      17: iload_2
      18: isub
      19: putfield      #23                 // Field tokens:I
      22: return

  public synchronized void setFillTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field fillTime:I
       5: return

  public synchronized void setFillCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field fillCount:I
       5: return

  public synchronized void setFreezeTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field freezeTime:I
       5: return

  public synchronized void setDropIncrease(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #30                 // Field dropIncrease:D
       5: return

  public synchronized void setDropDecrease(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #32                 // Field dropDecrease:D
       5: return

  public synchronized void setDecreasePoint(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #34                 // Field decreasePoint:D
       5: return

  public synchronized int getMaxTokens();
    Code:
       0: aload_0
       1: getfield      #18                 // Field maxTokens:I
       4: ireturn

  public synchronized int getFillTime();
    Code:
       0: aload_0
       1: getfield      #20                 // Field fillTime:I
       4: ireturn

  public synchronized int getFillCount();
    Code:
       0: aload_0
       1: getfield      #22                 // Field fillCount:I
       4: ireturn

  public synchronized int getFreezeTime();
    Code:
       0: aload_0
       1: getfield      #27                 // Field freezeTime:I
       4: ireturn

  public synchronized double getDropIncrease();
    Code:
       0: aload_0
       1: getfield      #30                 // Field dropIncrease:D
       4: dreturn

  public synchronized double getDropDecrease();
    Code:
       0: aload_0
       1: getfield      #32                 // Field dropDecrease:D
       4: dreturn

  public synchronized double getDecreasePoint();
    Code:
       0: aload_0
       1: getfield      #34                 // Field decreasePoint:D
       4: dreturn

  public synchronized double getDropChance();
    Code:
       0: aload_0
       1: getfield      #35                 // Field drop:D
       4: dreturn

  public synchronized int getDeficit();
    Code:
       0: aload_0
       1: getfield      #18                 // Field maxTokens:I
       4: aload_0
       5: getfield      #23                 // Field tokens:I
       8: isub
       9: ireturn

  public int getRequiredTokensForGlobal();
    Code:
       0: getstatic     #8                  // Field DEFAULT_GLOBAL_SESSION_WEIGHT:I
       3: ireturn

  public int getRequiredTokensForLocal();
    Code:
       0: getstatic     #11                 // Field DEFAULT_LOCAL_SESSION_WEIGHT:I
       3: ireturn

  public int getRequiredTokensForRenew();
    Code:
       0: getstatic     #10                 // Field DEFAULT_RENEW_SESSION_WEIGHT:I
       3: ireturn

  public boolean isConnectionWeightEnabled();
    Code:
       0: getstatic     #1                  // Field connectionWeightEnabled:Z
       3: ireturn

  public synchronized boolean checkLimit(int);
    Code:
       0: aload_0
       1: getfield      #18                 // Field maxTokens:I
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: invokestatic  #24                 // Method org/apache/zookeeper/common/Time.currentElapsedTime:()J
      12: lstore_2
      13: lload_2
      14: aload_0
      15: getfield      #25                 // Field lastTime:J
      18: lsub
      19: lstore        4
      21: lload         4
      23: aload_0
      24: getfield      #20                 // Field fillTime:I
      27: i2l
      28: lcmp
      29: ifle          72
      32: lload         4
      34: aload_0
      35: getfield      #22                 // Field fillCount:I
      38: i2l
      39: lmul
      40: aload_0
      41: getfield      #20                 // Field fillTime:I
      44: i2l
      45: ldiv
      46: l2i
      47: istore        6
      49: aload_0
      50: aload_0
      51: getfield      #23                 // Field tokens:I
      54: iload         6
      56: iadd
      57: aload_0
      58: getfield      #18                 // Field maxTokens:I
      61: invokestatic  #39                 // Method java/lang/Math.min:(II)I
      64: putfield      #23                 // Field tokens:I
      67: aload_0
      68: lload_2
      69: putfield      #25                 // Field lastTime:J
      72: aload_0
      73: getfield      #27                 // Field freezeTime:I
      76: iconst_m1
      77: if_icmpeq     90
      80: aload_0
      81: lload_2
      82: invokevirtual #40                 // Method checkBlue:(J)Z
      85: ifne          90
      88: iconst_0
      89: ireturn
      90: aload_0
      91: getfield      #23                 // Field tokens:I
      94: iload_1
      95: if_icmpge     100
      98: iconst_0
      99: ireturn
     100: aload_0
     101: dup
     102: getfield      #23                 // Field tokens:I
     105: iload_1
     106: isub
     107: putfield      #23                 // Field tokens:I
     110: iconst_1
     111: ireturn

  public synchronized boolean checkBlue(long);
    Code:
       0: aload_0
       1: getfield      #18                 // Field maxTokens:I
       4: aload_0
       5: getfield      #23                 // Field tokens:I
       8: isub
       9: istore_3
      10: aload_0
      11: getfield      #18                 // Field maxTokens:I
      14: istore        4
      16: lload_1
      17: aload_0
      18: getfield      #28                 // Field lastFreeze:J
      21: lsub
      22: lstore        5
      24: aload_0
      25: getfield      #18                 // Field maxTokens:I
      28: i2d
      29: aload_0
      30: getfield      #34                 // Field decreasePoint:D
      33: dmul
      34: invokestatic  #41                 // Method java/lang/Math.round:(D)J
      37: lstore        7
      39: lload         5
      41: aload_0
      42: getfield      #27                 // Field freezeTime:I
      45: i2l
      46: lcmp
      47: ifle          124
      50: iload_3
      51: iload         4
      53: if_icmpne     85
      56: aload_0
      57: getfield      #35                 // Field drop:D
      60: dconst_1
      61: dcmpg
      62: ifge          85
      65: aload_0
      66: aload_0
      67: getfield      #35                 // Field drop:D
      70: aload_0
      71: getfield      #30                 // Field dropIncrease:D
      74: dadd
      75: dconst_1
      76: invokestatic  #42                 // Method java/lang/Math.min:(DD)D
      79: putfield      #35                 // Field drop:D
      82: goto          119
      85: iload_3
      86: i2l
      87: lload         7
      89: lcmp
      90: ifgt          119
      93: aload_0
      94: getfield      #35                 // Field drop:D
      97: dconst_0
      98: dcmpl
      99: ifle          119
     102: aload_0
     103: aload_0
     104: getfield      #35                 // Field drop:D
     107: aload_0
     108: getfield      #32                 // Field dropDecrease:D
     111: dsub
     112: dconst_0
     113: invokestatic  #43                 // Method java/lang/Math.max:(DD)D
     116: putfield      #35                 // Field drop:D
     119: aload_0
     120: lload_1
     121: putfield      #28                 // Field lastFreeze:J
     124: aload_0
     125: getfield      #38                 // Field rng:Ljava/util/Random;
     128: invokevirtual #44                 // Method java/util/Random.nextDouble:()D
     131: aload_0
     132: getfield      #35                 // Field drop:D
     135: dcmpg
     136: iflt          143
     139: iconst_1
     140: goto          144
     143: iconst_0
     144: ireturn

  static {};
    Code:
       0: ldc           #45                 // class org/apache/zookeeper/server/BlueThrottle
       2: invokestatic  #46                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #47                 // String zookeeper.connection_throttle_tokens
      10: iconst_0
      11: invokestatic  #48                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      14: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
      17: istore_0
      18: ldc           #50                 // String zookeeper.connection_throttle_fill_count
      20: iconst_1
      21: invokestatic  #48                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      24: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
      27: istore_1
      28: ldc           #51                 // String zookeeper.connection_throttle_weight_enabled
      30: invokestatic  #52                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      33: putstatic     #1                  // Field connectionWeightEnabled:Z
      36: ldc           #53                 // String zookeeper.connection_throttle_global_session_weight
      38: iconst_3
      39: invokestatic  #48                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      42: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
      45: istore_2
      46: ldc           #54                 // String zookeeper.connection_throttle_local_session_weight
      48: iconst_1
      49: invokestatic  #48                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      52: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
      55: istore_3
      56: ldc           #55                 // String zookeeper.connection_throttle_renew_session_weight
      58: iconst_2
      59: invokestatic  #48                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      62: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
      65: istore        4
      67: iload_2
      68: ifgt          92
      71: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      74: ldc           #56                 // String Invalid global session weight {}. It should be larger than 0
      76: iload_2
      77: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      80: invokeinterface #57,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      85: iconst_3
      86: putstatic     #8                  // Field DEFAULT_GLOBAL_SESSION_WEIGHT:I
      89: goto          126
      92: iload_2
      93: iload_3
      94: if_icmpge     122
      97: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     100: ldc           #58                 // String The global session weight {} is less than the local session weight {}. Use the local session weight.
     102: iload_2
     103: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     106: iload_3
     107: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     110: invokeinterface #59,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     115: iload_3
     116: putstatic     #8                  // Field DEFAULT_GLOBAL_SESSION_WEIGHT:I
     119: goto          126
     122: iload_2
     123: putstatic     #8                  // Field DEFAULT_GLOBAL_SESSION_WEIGHT:I
     126: iload_3
     127: ifgt          151
     130: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     133: ldc           #60                 // String Invalid local session weight {}. It should be larger than 0
     135: iload_3
     136: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     139: invokeinterface #57,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     144: iconst_1
     145: putstatic     #11                 // Field DEFAULT_LOCAL_SESSION_WEIGHT:I
     148: goto          155
     151: iload_3
     152: putstatic     #11                 // Field DEFAULT_LOCAL_SESSION_WEIGHT:I
     155: iload         4
     157: ifgt          182
     160: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     163: ldc           #61                 // String Invalid renew session weight {}. It should be larger than 0
     165: iload         4
     167: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     170: invokeinterface #57,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     175: iconst_2
     176: putstatic     #10                 // Field DEFAULT_RENEW_SESSION_WEIGHT:I
     179: goto          219
     182: iload         4
     184: iload_3
     185: if_icmpge     214
     188: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     191: ldc           #62                 // String The renew session weight {} is less than the local session weight {}. Use the local session weight.
     193: iload         4
     195: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     198: iload_3
     199: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     202: invokeinterface #59,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     207: iload_3
     208: putstatic     #10                 // Field DEFAULT_RENEW_SESSION_WEIGHT:I
     211: goto          219
     214: iload         4
     216: putstatic     #10                 // Field DEFAULT_RENEW_SESSION_WEIGHT:I
     219: getstatic     #1                  // Field connectionWeightEnabled:Z
     222: ifeq          233
     225: getstatic     #8                  // Field DEFAULT_GLOBAL_SESSION_WEIGHT:I
     228: iload_0
     229: imul
     230: goto          234
     233: iload_0
     234: putstatic     #17                 // Field DEFAULT_CONNECTION_THROTTLE_TOKENS:I
     237: ldc           #63                 // String zookeeper.connection_throttle_fill_time
     239: iconst_1
     240: invokestatic  #48                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
     243: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
     246: putstatic     #19                 // Field DEFAULT_CONNECTION_THROTTLE_FILL_TIME:I
     249: getstatic     #1                  // Field connectionWeightEnabled:Z
     252: ifeq          263
     255: getstatic     #8                  // Field DEFAULT_GLOBAL_SESSION_WEIGHT:I
     258: iload_1
     259: imul
     260: goto          264
     263: iload_1
     264: putstatic     #21                 // Field DEFAULT_CONNECTION_THROTTLE_FILL_COUNT:I
     267: ldc           #64                 // String zookeeper.connection_throttle_freeze_time
     269: iconst_m1
     270: invokestatic  #48                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
     273: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
     276: putstatic     #26                 // Field DEFAULT_CONNECTION_THROTTLE_FREEZE_TIME:I
     279: ldc           #65                 // String zookeeper.connection_throttle_drop_increase
     281: ldc2_w        #66                 // double 0.02d
     284: invokestatic  #68                 // Method getDoubleProp:(Ljava/lang/String;D)D
     287: putstatic     #29                 // Field DEFAULT_CONNECTION_THROTTLE_DROP_INCREASE:D
     290: ldc           #69                 // String zookeeper.connection_throttle_drop_decrease
     292: ldc2_w        #70                 // double 0.002d
     295: invokestatic  #68                 // Method getDoubleProp:(Ljava/lang/String;D)D
     298: putstatic     #31                 // Field DEFAULT_CONNECTION_THROTTLE_DROP_DECREASE:D
     301: ldc           #72                 // String zookeeper.connection_throttle_decrease_ratio
     303: dconst_0
     304: invokestatic  #68                 // Method getDoubleProp:(Ljava/lang/String;D)D
     307: putstatic     #33                 // Field DEFAULT_CONNECTION_THROTTLE_DECREASE_RATIO:D
     310: invokestatic  #2                  // Method logWeighedThrottlingSetting:()V
     313: return
}
