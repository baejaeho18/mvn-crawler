Compiled from "UpgradeableSessionTracker.java"
public abstract class org.apache.zookeeper.server.quorum.UpgradeableSessionTracker implements org.apache.zookeeper.server.SessionTracker {
  private static final org.slf4j.Logger LOG;

  private java.util.concurrent.ConcurrentMap<java.lang.Long, java.lang.Integer> localSessionsWithTimeouts;

  private java.util.concurrent.ConcurrentMap<java.lang.Long, java.lang.Integer> upgradingSessions;

  protected org.apache.zookeeper.server.quorum.LocalSessionTracker localSessionTracker;

  protected boolean localSessionsEnabled;

  public org.apache.zookeeper.server.quorum.UpgradeableSessionTracker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void start();
    Code:
       0: return

  public void createLocalSessionTracker(org.apache.zookeeper.server.SessionTracker$SessionExpirer, int, long, org.apache.zookeeper.server.ZooKeeperServerListener);
    Code:
       0: aload_0
       1: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       4: dup
       5: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       8: putfield      #4                  // Field localSessionsWithTimeouts:Ljava/util/concurrent/ConcurrentMap;
      11: aload_0
      12: new           #5                  // class org/apache/zookeeper/server/quorum/LocalSessionTracker
      15: dup
      16: aload_1
      17: aload_0
      18: getfield      #4                  // Field localSessionsWithTimeouts:Ljava/util/concurrent/ConcurrentMap;
      21: iload_2
      22: lload_3
      23: aload         5
      25: invokespecial #6                  // Method org/apache/zookeeper/server/quorum/LocalSessionTracker."<init>":(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
      28: putfield      #7                  // Field localSessionTracker:Lorg/apache/zookeeper/server/quorum/LocalSessionTracker;
      31: aload_0
      32: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      35: dup
      36: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      39: putfield      #8                  // Field upgradingSessions:Ljava/util/concurrent/ConcurrentMap;
      42: return

  public boolean isTrackingSession(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #9                  // Method isLocalSession:(J)Z
       5: ifne          16
       8: aload_0
       9: lload_1
      10: invokevirtual #10                 // Method isGlobalSession:(J)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean isLocalSession(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field localSessionTracker:Lorg/apache/zookeeper/server/quorum/LocalSessionTracker;
       4: ifnull        22
       7: aload_0
       8: getfield      #7                  // Field localSessionTracker:Lorg/apache/zookeeper/server/quorum/LocalSessionTracker;
      11: lload_1
      12: invokevirtual #11                 // Method org/apache/zookeeper/server/quorum/LocalSessionTracker.isTrackingSession:(J)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean isLocalSessionsEnabled();
    Code:
       0: aload_0
       1: getfield      #12                 // Field localSessionsEnabled:Z
       4: ireturn

  public boolean isUpgradingSession(long);
    Code:
       0: aload_0
       1: getfield      #8                  // Field upgradingSessions:Ljava/util/concurrent/ConcurrentMap;
       4: ifnull        27
       7: aload_0
       8: getfield      #8                  // Field upgradingSessions:Ljava/util/concurrent/ConcurrentMap;
      11: lload_1
      12: invokestatic  #13                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public void finishedUpgrading(long);
    Code:
       0: aload_0
       1: getfield      #8                  // Field upgradingSessions:Ljava/util/concurrent/ConcurrentMap;
       4: ifnull        21
       7: aload_0
       8: getfield      #8                  // Field upgradingSessions:Ljava/util/concurrent/ConcurrentMap;
      11: lload_1
      12: invokestatic  #13                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: return

  public abstract boolean isGlobalSession(long);

  public int upgradeSession(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field localSessionsWithTimeouts:Ljava/util/concurrent/ConcurrentMap;
       4: ifnonnull     9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #4                  // Field localSessionsWithTimeouts:Ljava/util/concurrent/ConcurrentMap;
      13: lload_1
      14: invokestatic  #13                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      17: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #16                 // class java/lang/Integer
      25: astore_3
      26: aload_3
      27: ifnull        82
      30: getstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
      33: ldc           #18                 // String Upgrading session 0x{}
      35: lload_1
      36: invokestatic  #19                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      39: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      44: aload_0
      45: lload_1
      46: aload_3
      47: invokevirtual #21                 // Method java/lang/Integer.intValue:()I
      50: invokevirtual #22                 // Method trackSession:(JI)Z
      53: pop
      54: aload_0
      55: getfield      #8                  // Field upgradingSessions:Ljava/util/concurrent/ConcurrentMap;
      58: lload_1
      59: invokestatic  #13                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      62: aload_3
      63: invokeinterface #23,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: aload_0
      70: getfield      #7                  // Field localSessionTracker:Lorg/apache/zookeeper/server/quorum/LocalSessionTracker;
      73: lload_1
      74: invokevirtual #24                 // Method org/apache/zookeeper/server/quorum/LocalSessionTracker.removeSession:(J)V
      77: aload_3
      78: invokevirtual #21                 // Method java/lang/Integer.intValue:()I
      81: ireturn
      82: iconst_m1
      83: ireturn

  protected void removeLocalSession(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field localSessionTracker:Lorg/apache/zookeeper/server/quorum/LocalSessionTracker;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #7                  // Field localSessionTracker:Lorg/apache/zookeeper/server/quorum/LocalSessionTracker;
      12: lload_1
      13: invokevirtual #24                 // Method org/apache/zookeeper/server/quorum/LocalSessionTracker.removeSession:(J)V
      16: return

  public void checkGlobalSession(long, java.lang.Object) throws org.apache.zookeeper.KeeperException$SessionExpiredException, org.apache.zookeeper.KeeperException$SessionMovedException;
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #26                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public long getLocalSessionCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field localSessionsWithTimeouts:Ljava/util/concurrent/ConcurrentMap;
       4: ifnonnull     9
       7: lconst_0
       8: lreturn
       9: aload_0
      10: getfield      #4                  // Field localSessionsWithTimeouts:Ljava/util/concurrent/ConcurrentMap;
      13: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      18: i2l
      19: lreturn

  static {};
    Code:
       0: ldc           #28                 // class org/apache/zookeeper/server/quorum/UpgradeableSessionTracker
       2: invokestatic  #29                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
