Compiled from "DefaultMetricsProvider.java"
final class org.apache.zookeeper.metrics.impl.DefaultMetricsProvider$DefaultMetricsContext implements org.apache.zookeeper.metrics.MetricsContext {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.zookeeper.metrics.Gauge> gauges;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.zookeeper.server.metric.SimpleCounter> counters;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.zookeeper.server.metric.AvgMinMaxCounter> basicSummaries;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.zookeeper.server.metric.AvgMinMaxPercentileCounter> summaries;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.zookeeper.server.metric.AvgMinMaxCounterSet> basicSummarySets;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.zookeeper.server.metric.AvgMinMaxPercentileCounterSet> summarySets;

  private org.apache.zookeeper.metrics.impl.DefaultMetricsProvider$DefaultMetricsContext();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #1                  // Field gauges:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #4                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #6                  // Field counters:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: new           #4                  // class java/util/concurrent/ConcurrentHashMap
      30: dup
      31: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      34: putfield      #7                  // Field basicSummaries:Ljava/util/concurrent/ConcurrentMap;
      37: aload_0
      38: new           #4                  // class java/util/concurrent/ConcurrentHashMap
      41: dup
      42: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      45: putfield      #8                  // Field summaries:Ljava/util/concurrent/ConcurrentMap;
      48: aload_0
      49: new           #4                  // class java/util/concurrent/ConcurrentHashMap
      52: dup
      53: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      56: putfield      #9                  // Field basicSummarySets:Ljava/util/concurrent/ConcurrentMap;
      59: aload_0
      60: new           #4                  // class java/util/concurrent/ConcurrentHashMap
      63: dup
      64: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      67: putfield      #10                 // Field summarySets:Ljava/util/concurrent/ConcurrentMap;
      70: return

  public org.apache.zookeeper.metrics.MetricsContext getContext(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public org.apache.zookeeper.metrics.Counter getCounter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field counters:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: invokeinterface #12,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #13                 // class org/apache/zookeeper/metrics/Counter
      18: areturn

  public void registerGauge(java.lang.String, org.apache.zookeeper.metrics.Gauge);
    Code:
       0: aload_2
       1: new           #14                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #16                 // String Cannot register a null Gauge for
      10: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      20: invokestatic  #19                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: getfield      #1                  // Field gauges:Ljava/util/concurrent/ConcurrentMap;
      28: aload_1
      29: aload_2
      30: invokeinterface #20,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: return

  public void unregisterGauge(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field gauges:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public org.apache.zookeeper.metrics.Summary getSummary(java.lang.String, org.apache.zookeeper.metrics.MetricsContext$DetailLevel);
    Code:
       0: aload_2
       1: getstatic     #22                 // Field org/apache/zookeeper/metrics/MetricsContext$DetailLevel.BASIC:Lorg/apache/zookeeper/metrics/MetricsContext$DetailLevel;
       4: if_acmpne     28
       7: aload_0
       8: getfield      #7                  // Field basicSummaries:Ljava/util/concurrent/ConcurrentMap;
      11: aload_1
      12: aload_0
      13: aload_1
      14: invokedynamic #23,  0             // InvokeDynamic #1:apply:(Lorg/apache/zookeeper/metrics/impl/DefaultMetricsProvider$DefaultMetricsContext;Ljava/lang/String;)Ljava/util/function/Function;
      19: invokeinterface #12,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      24: checkcast     #24                 // class org/apache/zookeeper/metrics/Summary
      27: areturn
      28: aload_0
      29: getfield      #8                  // Field summaries:Ljava/util/concurrent/ConcurrentMap;
      32: aload_1
      33: aload_0
      34: aload_1
      35: invokedynamic #25,  0             // InvokeDynamic #2:apply:(Lorg/apache/zookeeper/metrics/impl/DefaultMetricsProvider$DefaultMetricsContext;Ljava/lang/String;)Ljava/util/function/Function;
      40: invokeinterface #12,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      45: checkcast     #24                 // class org/apache/zookeeper/metrics/Summary
      48: areturn

  public org.apache.zookeeper.metrics.SummarySet getSummarySet(java.lang.String, org.apache.zookeeper.metrics.MetricsContext$DetailLevel);
    Code:
       0: aload_2
       1: getstatic     #22                 // Field org/apache/zookeeper/metrics/MetricsContext$DetailLevel.BASIC:Lorg/apache/zookeeper/metrics/MetricsContext$DetailLevel;
       4: if_acmpne     28
       7: aload_0
       8: getfield      #9                  // Field basicSummarySets:Ljava/util/concurrent/ConcurrentMap;
      11: aload_1
      12: aload_0
      13: aload_1
      14: invokedynamic #26,  0             // InvokeDynamic #3:apply:(Lorg/apache/zookeeper/metrics/impl/DefaultMetricsProvider$DefaultMetricsContext;Ljava/lang/String;)Ljava/util/function/Function;
      19: invokeinterface #12,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      24: checkcast     #27                 // class org/apache/zookeeper/metrics/SummarySet
      27: areturn
      28: aload_0
      29: getfield      #10                 // Field summarySets:Ljava/util/concurrent/ConcurrentMap;
      32: aload_1
      33: aload_0
      34: aload_1
      35: invokedynamic #28,  0             // InvokeDynamic #4:apply:(Lorg/apache/zookeeper/metrics/impl/DefaultMetricsProvider$DefaultMetricsContext;Ljava/lang/String;)Ljava/util/function/Function;
      40: invokeinterface #12,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      45: checkcast     #27                 // class org/apache/zookeeper/metrics/SummarySet
      48: areturn

  void dump(java.util.function.BiConsumer<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field gauges:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokedynamic #29,  0             // InvokeDynamic #5:accept:(Ljava/util/function/BiConsumer;)Ljava/util/function/BiConsumer;
      10: invokeinterface #30,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.forEach:(Ljava/util/function/BiConsumer;)V
      15: aload_0
      16: getfield      #6                  // Field counters:Ljava/util/concurrent/ConcurrentMap;
      19: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      24: aload_1
      25: invokedynamic #32,  0             // InvokeDynamic #6:accept:(Ljava/util/function/BiConsumer;)Ljava/util/function/Consumer;
      30: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      35: aload_0
      36: getfield      #7                  // Field basicSummaries:Ljava/util/concurrent/ConcurrentMap;
      39: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      44: aload_1
      45: invokedynamic #34,  0             // InvokeDynamic #7:accept:(Ljava/util/function/BiConsumer;)Ljava/util/function/Consumer;
      50: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      55: aload_0
      56: getfield      #8                  // Field summaries:Ljava/util/concurrent/ConcurrentMap;
      59: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      64: aload_1
      65: invokedynamic #35,  0             // InvokeDynamic #8:accept:(Ljava/util/function/BiConsumer;)Ljava/util/function/Consumer;
      70: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      75: aload_0
      76: getfield      #9                  // Field basicSummarySets:Ljava/util/concurrent/ConcurrentMap;
      79: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      84: aload_1
      85: invokedynamic #36,  0             // InvokeDynamic #9:accept:(Ljava/util/function/BiConsumer;)Ljava/util/function/Consumer;
      90: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      95: aload_0
      96: getfield      #10                 // Field summarySets:Ljava/util/concurrent/ConcurrentMap;
      99: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     104: aload_1
     105: invokedynamic #37,  0             // InvokeDynamic #10:accept:(Ljava/util/function/BiConsumer;)Ljava/util/function/Consumer;
     110: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
     115: return

  void reset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field counters:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokedynamic #38,  0             // InvokeDynamic #11:accept:()Ljava/util/function/Consumer;
      14: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      19: aload_0
      20: getfield      #7                  // Field basicSummaries:Ljava/util/concurrent/ConcurrentMap;
      23: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      28: invokedynamic #39,  0             // InvokeDynamic #12:accept:()Ljava/util/function/Consumer;
      33: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      38: aload_0
      39: getfield      #8                  // Field summaries:Ljava/util/concurrent/ConcurrentMap;
      42: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      47: invokedynamic #40,  0             // InvokeDynamic #13:accept:()Ljava/util/function/Consumer;
      52: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      57: aload_0
      58: getfield      #9                  // Field basicSummarySets:Ljava/util/concurrent/ConcurrentMap;
      61: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      66: invokedynamic #41,  0             // InvokeDynamic #14:accept:()Ljava/util/function/Consumer;
      71: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      76: aload_0
      77: getfield      #10                 // Field summarySets:Ljava/util/concurrent/ConcurrentMap;
      80: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      85: invokedynamic #42,  0             // InvokeDynamic #15:accept:()Ljava/util/function/Consumer;
      90: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      95: return

  private static void lambda$reset$15(org.apache.zookeeper.server.metric.AvgMinMaxPercentileCounterSet);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounterSet.reset:()V
       4: return

  private static void lambda$reset$14(org.apache.zookeeper.server.metric.AvgMinMaxCounterSet);
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method org/apache/zookeeper/server/metric/AvgMinMaxCounterSet.reset:()V
       4: return

  private static void lambda$reset$13(org.apache.zookeeper.server.metric.AvgMinMaxPercentileCounter);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounter.reset:()V
       4: return

  private static void lambda$reset$12(org.apache.zookeeper.server.metric.AvgMinMaxCounter);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method org/apache/zookeeper/server/metric/AvgMinMaxCounter.reset:()V
       4: return

  private static void lambda$reset$11(org.apache.zookeeper.server.metric.SimpleCounter);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method org/apache/zookeeper/server/metric/SimpleCounter.reset:()V
       4: return

  private static void lambda$dump$10(java.util.function.BiConsumer, org.apache.zookeeper.server.metric.AvgMinMaxPercentileCounterSet);
    Code:
       0: aload_1
       1: invokevirtual #48                 // Method org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounterSet.values:()Ljava/util/Map;
       4: aload_0
       5: invokeinterface #49,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      10: return

  private static void lambda$dump$9(java.util.function.BiConsumer, org.apache.zookeeper.server.metric.AvgMinMaxCounterSet);
    Code:
       0: aload_1
       1: invokevirtual #50                 // Method org/apache/zookeeper/server/metric/AvgMinMaxCounterSet.values:()Ljava/util/Map;
       4: aload_0
       5: invokeinterface #49,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      10: return

  private static void lambda$dump$8(java.util.function.BiConsumer, org.apache.zookeeper.server.metric.AvgMinMaxPercentileCounter);
    Code:
       0: aload_1
       1: invokevirtual #51                 // Method org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounter.values:()Ljava/util/Map;
       4: aload_0
       5: invokeinterface #49,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      10: return

  private static void lambda$dump$7(java.util.function.BiConsumer, org.apache.zookeeper.server.metric.AvgMinMaxCounter);
    Code:
       0: aload_1
       1: invokevirtual #52                 // Method org/apache/zookeeper/server/metric/AvgMinMaxCounter.values:()Ljava/util/Map;
       4: aload_0
       5: invokeinterface #49,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      10: return

  private static void lambda$dump$6(java.util.function.BiConsumer, org.apache.zookeeper.server.metric.SimpleCounter);
    Code:
       0: aload_1
       1: invokevirtual #53                 // Method org/apache/zookeeper/server/metric/SimpleCounter.values:()Ljava/util/Map;
       4: aload_0
       5: invokeinterface #49,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      10: return

  private static void lambda$dump$5(java.util.function.BiConsumer, java.lang.String, org.apache.zookeeper.metrics.Gauge);
    Code:
       0: aload_2
       1: invokeinterface #54,  1           // InterfaceMethod org/apache/zookeeper/metrics/Gauge.get:()Ljava/lang/Number;
       6: astore_3
       7: aload_3
       8: ifnull        19
      11: aload_0
      12: aload_1
      13: aload_3
      14: invokeinterface #55,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      19: return

  private org.apache.zookeeper.server.metric.AvgMinMaxPercentileCounterSet lambda$getSummarySet$4(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field basicSummarySets:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #56,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          40
      13: new           #57                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #14                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #58                 // String Already registered a basic summary set as
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_2
      30: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: new           #60                 // class org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounterSet
      43: dup
      44: aload_1
      45: invokespecial #61                 // Method org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounterSet."<init>":(Ljava/lang/String;)V
      48: areturn

  private org.apache.zookeeper.server.metric.AvgMinMaxCounterSet lambda$getSummarySet$3(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field summarySets:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #56,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          40
      13: new           #57                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #14                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #62                 // String Already registered a non basic summary set as
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_2
      30: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: new           #63                 // class org/apache/zookeeper/server/metric/AvgMinMaxCounterSet
      43: dup
      44: aload_1
      45: invokespecial #64                 // Method org/apache/zookeeper/server/metric/AvgMinMaxCounterSet."<init>":(Ljava/lang/String;)V
      48: areturn

  private org.apache.zookeeper.server.metric.AvgMinMaxPercentileCounter lambda$getSummary$2(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field basicSummaries:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #56,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          40
      13: new           #57                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #14                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #65                 // String Already registered a basic summary as
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_2
      30: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: new           #66                 // class org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounter
      43: dup
      44: aload_1
      45: invokespecial #67                 // Method org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounter."<init>":(Ljava/lang/String;)V
      48: areturn

  private org.apache.zookeeper.server.metric.AvgMinMaxCounter lambda$getSummary$1(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field summaries:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #56,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          40
      13: new           #57                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #14                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #68                 // String Already registered a non basic summary as
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_2
      30: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: new           #69                 // class org/apache/zookeeper/server/metric/AvgMinMaxCounter
      43: dup
      44: aload_1
      45: invokespecial #70                 // Method org/apache/zookeeper/server/metric/AvgMinMaxCounter."<init>":(Ljava/lang/String;)V
      48: areturn

  private static org.apache.zookeeper.server.metric.SimpleCounter lambda$getCounter$0(java.lang.String);
    Code:
       0: new           #71                 // class org/apache/zookeeper/server/metric/SimpleCounter
       3: dup
       4: aload_0
       5: invokespecial #72                 // Method org/apache/zookeeper/server/metric/SimpleCounter."<init>":(Ljava/lang/String;)V
       8: areturn

  org.apache.zookeeper.metrics.impl.DefaultMetricsProvider$DefaultMetricsContext(org.apache.zookeeper.metrics.impl.DefaultMetricsProvider$1);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method "<init>":()V
       4: return

  static java.util.concurrent.ConcurrentMap access$100(org.apache.zookeeper.metrics.impl.DefaultMetricsProvider$DefaultMetricsContext);
    Code:
       0: aload_0
       1: getfield      #1                  // Field gauges:Ljava/util/concurrent/ConcurrentMap;
       4: areturn
}
