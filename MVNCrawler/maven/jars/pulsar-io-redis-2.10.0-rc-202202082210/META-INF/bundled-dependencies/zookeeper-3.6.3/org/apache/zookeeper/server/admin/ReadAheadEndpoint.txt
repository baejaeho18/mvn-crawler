Compiled from "ReadAheadEndpoint.java"
public class org.apache.zookeeper.server.admin.ReadAheadEndpoint implements org.eclipse.jetty.io.EndPoint {
  private final org.eclipse.jetty.io.EndPoint endPoint;

  private final java.nio.ByteBuffer start;

  private final byte[] bytes;

  private int leftToRead;

  private java.io.IOException pendingException;

  public java.net.InetSocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #2,  1            // InterfaceMethod org/eclipse/jetty/io/EndPoint.getLocalAddress:()Ljava/net/InetSocketAddress;
       9: areturn

  public java.net.InetSocketAddress getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #3,  1            // InterfaceMethod org/eclipse/jetty/io/EndPoint.getRemoteAddress:()Ljava/net/InetSocketAddress;
       9: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #4,  1            // InterfaceMethod org/eclipse/jetty/io/EndPoint.isOpen:()Z
       9: ireturn

  public long getCreatedTimeStamp();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #5,  1            // InterfaceMethod org/eclipse/jetty/io/EndPoint.getCreatedTimeStamp:()J
       9: lreturn

  public boolean isOutputShutdown();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #6,  1            // InterfaceMethod org/eclipse/jetty/io/EndPoint.isOutputShutdown:()Z
       9: ireturn

  public boolean isInputShutdown();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #7,  1            // InterfaceMethod org/eclipse/jetty/io/EndPoint.isInputShutdown:()Z
       9: ireturn

  public void shutdownOutput();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #8,  1            // InterfaceMethod org/eclipse/jetty/io/EndPoint.shutdownOutput:()V
       9: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #9,  1            // InterfaceMethod org/eclipse/jetty/io/EndPoint.close:()V
       9: return

  public java.lang.Object getTransport();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #10,  1           // InterfaceMethod org/eclipse/jetty/io/EndPoint.getTransport:()Ljava/lang/Object;
       9: areturn

  public long getIdleTimeout();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #11,  1           // InterfaceMethod org/eclipse/jetty/io/EndPoint.getIdleTimeout:()J
       9: lreturn

  public org.eclipse.jetty.io.Connection getConnection();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #12,  1           // InterfaceMethod org/eclipse/jetty/io/EndPoint.getConnection:()Lorg/eclipse/jetty/io/Connection;
       9: areturn

  public void onOpen();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #13,  1           // InterfaceMethod org/eclipse/jetty/io/EndPoint.onOpen:()V
       9: return

  public void onClose();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #14,  1           // InterfaceMethod org/eclipse/jetty/io/EndPoint.onClose:()V
       9: return

  public boolean isOptimizedForDirectBuffers();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #15,  1           // InterfaceMethod org/eclipse/jetty/io/EndPoint.isOptimizedForDirectBuffers:()Z
       9: ireturn

  public boolean isFillInterested();
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: invokeinterface #16,  1           // InterfaceMethod org/eclipse/jetty/io/EndPoint.isFillInterested:()Z
       9: ireturn

  public boolean tryFillInterested(org.eclipse.jetty.util.Callback);
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod org/eclipse/jetty/io/EndPoint.tryFillInterested:(Lorg/eclipse/jetty/util/Callback;)Z
      10: ireturn

  public boolean flush(java.nio.ByteBuffer...) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod org/eclipse/jetty/io/EndPoint.flush:([Ljava/nio/ByteBuffer;)Z
      10: ireturn

  public void setIdleTimeout(long);
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: lload_1
       5: invokeinterface #19,  3           // InterfaceMethod org/eclipse/jetty/io/EndPoint.setIdleTimeout:(J)V
      10: return

  public void write(org.eclipse.jetty.util.Callback, java.nio.ByteBuffer...) throws java.nio.channels.WritePendingException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: aload_1
       5: aload_2
       6: invokeinterface #20,  3           // InterfaceMethod org/eclipse/jetty/io/EndPoint.write:(Lorg/eclipse/jetty/util/Callback;[Ljava/nio/ByteBuffer;)V
      11: return

  public void setConnection(org.eclipse.jetty.io.Connection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod org/eclipse/jetty/io/EndPoint.setConnection:(Lorg/eclipse/jetty/io/Connection;)V
      10: return

  public void upgrade(org.eclipse.jetty.io.Connection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod org/eclipse/jetty/io/EndPoint.upgrade:(Lorg/eclipse/jetty/io/Connection;)V
      10: return

  public void fillInterested(org.eclipse.jetty.util.Callback) throws java.nio.channels.ReadPendingException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod org/eclipse/jetty/io/EndPoint.fillInterested:(Lorg/eclipse/jetty/util/Callback;)V
      10: return

  public org.apache.zookeeper.server.admin.ReadAheadEndpoint(org.eclipse.jetty.io.EndPoint, int);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #25                 // Field pendingException:Ljava/io/IOException;
       9: aload_1
      10: ifnonnull     23
      13: new           #26                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #27                 // String channel cannot be null
      19: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
      28: aload_0
      29: aload_0
      30: iload_2
      31: newarray       byte
      33: dup_x1
      34: putfield      #29                 // Field bytes:[B
      37: invokestatic  #30                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      40: putfield      #31                 // Field start:Ljava/nio/ByteBuffer;
      43: aload_0
      44: getfield      #31                 // Field start:Ljava/nio/ByteBuffer;
      47: invokevirtual #32                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      50: pop
      51: aload_0
      52: iload_2
      53: putfield      #33                 // Field leftToRead:I
      56: return

  private synchronized void readAhead() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field leftToRead:I
       4: ifle          89
       7: iconst_0
       8: istore_1
       9: aload_0
      10: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
      13: aload_0
      14: getfield      #31                 // Field start:Ljava/nio/ByteBuffer;
      17: invokeinterface #34,  2           // InterfaceMethod org/eclipse/jetty/io/EndPoint.fill:(Ljava/nio/ByteBuffer;)I
      22: istore_1
      23: iload_1
      24: ifne          51
      27: aload_0
      28: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
      31: invokeinterface #4,  1            // InterfaceMethod org/eclipse/jetty/io/EndPoint.isOpen:()Z
      36: ifeq          51
      39: aload_0
      40: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
      43: invokeinterface #7,  1            // InterfaceMethod org/eclipse/jetty/io/EndPoint.isInputShutdown:()Z
      48: ifeq          9
      51: iload_1
      52: iconst_m1
      53: if_icmpne     64
      56: aload_0
      57: iconst_m1
      58: putfield      #33                 // Field leftToRead:I
      61: goto          74
      64: aload_0
      65: dup
      66: getfield      #33                 // Field leftToRead:I
      69: iload_1
      70: isub
      71: putfield      #33                 // Field leftToRead:I
      74: aload_0
      75: getfield      #33                 // Field leftToRead:I
      78: ifgt          89
      81: aload_0
      82: getfield      #31                 // Field start:Ljava/nio/ByteBuffer;
      85: invokevirtual #35                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      88: pop
      89: return

  private int readFromStart(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/nio/ByteBuffer.remaining:()I
       4: aload_0
       5: getfield      #31                 // Field start:Ljava/nio/ByteBuffer;
       8: invokevirtual #36                 // Method java/nio/ByteBuffer.remaining:()I
      11: invokestatic  #37                 // Method java/lang/Math.min:(II)I
      14: istore_2
      15: iload_2
      16: ifle          58
      19: aload_1
      20: aload_0
      21: getfield      #29                 // Field bytes:[B
      24: aload_0
      25: getfield      #31                 // Field start:Ljava/nio/ByteBuffer;
      28: invokevirtual #38                 // Method java/nio/ByteBuffer.position:()I
      31: iload_2
      32: invokevirtual #39                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      35: pop
      36: aload_0
      37: getfield      #31                 // Field start:Ljava/nio/ByteBuffer;
      40: aload_0
      41: getfield      #31                 // Field start:Ljava/nio/ByteBuffer;
      44: invokevirtual #38                 // Method java/nio/ByteBuffer.position:()I
      47: iload_2
      48: iadd
      49: invokevirtual #40                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      52: pop
      53: aload_1
      54: invokevirtual #32                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      57: pop
      58: iload_2
      59: ireturn

  public synchronized int fill(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #41                 // Method throwPendingException:()V
       4: aload_0
       5: getfield      #33                 // Field leftToRead:I
       8: ifle          15
      11: aload_0
      12: invokespecial #42                 // Method readAhead:()V
      15: aload_0
      16: getfield      #33                 // Field leftToRead:I
      19: ifle          24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #31                 // Field start:Ljava/nio/ByteBuffer;
      28: invokevirtual #36                 // Method java/nio/ByteBuffer.remaining:()I
      31: istore_2
      32: iload_2
      33: ifle          54
      36: aload_1
      37: invokevirtual #43                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      40: pop
      41: aload_0
      42: aload_1
      43: invokespecial #44                 // Method readFromStart:(Ljava/nio/ByteBuffer;)I
      46: istore_3
      47: iload_3
      48: iload_2
      49: if_icmpge     54
      52: iload_3
      53: ireturn
      54: iload_2
      55: aload_0
      56: getfield      #1                  // Field endPoint:Lorg/eclipse/jetty/io/EndPoint;
      59: aload_1
      60: invokeinterface #34,  2           // InterfaceMethod org/eclipse/jetty/io/EndPoint.fill:(Ljava/nio/ByteBuffer;)I
      65: iadd
      66: ireturn

  public byte[] getBytes();
    Code:
       0: aload_0
       1: getfield      #25                 // Field pendingException:Ljava/io/IOException;
       4: ifnonnull     20
       7: aload_0
       8: invokespecial #42                 // Method readAhead:()V
      11: goto          20
      14: astore_1
      15: aload_0
      16: aload_1
      17: putfield      #25                 // Field pendingException:Ljava/io/IOException;
      20: aload_0
      21: getfield      #29                 // Field bytes:[B
      24: arraylength
      25: newarray       byte
      27: astore_1
      28: aload_0
      29: getfield      #29                 // Field bytes:[B
      32: iconst_0
      33: aload_1
      34: iconst_0
      35: aload_1
      36: arraylength
      37: invokestatic  #46                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: aload_1
      41: areturn
    Exception table:
       from    to  target type
           7    11    14   Class java/io/IOException

  private void throwPendingException() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field pendingException:Ljava/io/IOException;
       4: ifnull        19
       7: aload_0
       8: getfield      #25                 // Field pendingException:Ljava/io/IOException;
      11: astore_1
      12: aload_0
      13: aconst_null
      14: putfield      #25                 // Field pendingException:Ljava/io/IOException;
      17: aload_1
      18: athrow
      19: return
}
