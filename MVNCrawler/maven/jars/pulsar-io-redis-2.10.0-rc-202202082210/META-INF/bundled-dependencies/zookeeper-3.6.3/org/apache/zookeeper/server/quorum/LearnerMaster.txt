Compiled from "LearnerMaster.java"
public abstract class org.apache.zookeeper.server.quorum.LearnerMaster {
  private static final org.slf4j.Logger LOG;

  private static final java.lang.String MAX_CONCURRENT_SNAPSYNCS;

  private static final int DEFAULT_CONCURRENT_SNAPSYNCS;

  private static final java.lang.String MAX_CONCURRENT_DIFF_SYNCS;

  private static final int DEFAULT_CONCURRENT_DIFF_SYNCS;

  private volatile int maxConcurrentSnapSyncs;

  private volatile int maxConcurrentDiffSyncs;

  private final org.apache.zookeeper.server.quorum.LearnerSyncThrottler learnerSnapSyncThrottler;

  private final org.apache.zookeeper.server.quorum.LearnerSyncThrottler learnerDiffSyncThrottler;

  public org.apache.zookeeper.server.quorum.LearnerMaster();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field DEFAULT_CONCURRENT_SNAPSYNCS:I
       8: putfield      #3                  // Field maxConcurrentSnapSyncs:I
      11: aload_0
      12: getstatic     #4                  // Field DEFAULT_CONCURRENT_DIFF_SYNCS:I
      15: putfield      #5                  // Field maxConcurrentDiffSyncs:I
      18: aload_0
      19: new           #6                  // class org/apache/zookeeper/server/quorum/LearnerSyncThrottler
      22: dup
      23: aload_0
      24: getfield      #3                  // Field maxConcurrentSnapSyncs:I
      27: getstatic     #7                  // Field org/apache/zookeeper/server/quorum/LearnerSyncThrottler$SyncType.SNAP:Lorg/apache/zookeeper/server/quorum/LearnerSyncThrottler$SyncType;
      30: invokespecial #8                  // Method org/apache/zookeeper/server/quorum/LearnerSyncThrottler."<init>":(ILorg/apache/zookeeper/server/quorum/LearnerSyncThrottler$SyncType;)V
      33: putfield      #9                  // Field learnerSnapSyncThrottler:Lorg/apache/zookeeper/server/quorum/LearnerSyncThrottler;
      36: aload_0
      37: new           #6                  // class org/apache/zookeeper/server/quorum/LearnerSyncThrottler
      40: dup
      41: aload_0
      42: getfield      #5                  // Field maxConcurrentDiffSyncs:I
      45: getstatic     #10                 // Field org/apache/zookeeper/server/quorum/LearnerSyncThrottler$SyncType.DIFF:Lorg/apache/zookeeper/server/quorum/LearnerSyncThrottler$SyncType;
      48: invokespecial #8                  // Method org/apache/zookeeper/server/quorum/LearnerSyncThrottler."<init>":(ILorg/apache/zookeeper/server/quorum/LearnerSyncThrottler$SyncType;)V
      51: putfield      #11                 // Field learnerDiffSyncThrottler:Lorg/apache/zookeeper/server/quorum/LearnerSyncThrottler;
      54: return

  public int getMaxConcurrentSnapSyncs();
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxConcurrentSnapSyncs:I
       4: ireturn

  public void setMaxConcurrentSnapSyncs(int);
    Code:
       0: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #13                 // String Set maxConcurrentSnapSyncs to {}
       5: iload_1
       6: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: iload_1
      16: putfield      #3                  // Field maxConcurrentSnapSyncs:I
      19: aload_0
      20: getfield      #9                  // Field learnerSnapSyncThrottler:Lorg/apache/zookeeper/server/quorum/LearnerSyncThrottler;
      23: iload_1
      24: invokevirtual #16                 // Method org/apache/zookeeper/server/quorum/LearnerSyncThrottler.setMaxConcurrentSyncs:(I)V
      27: return

  public int getMaxConcurrentDiffSyncs();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxConcurrentDiffSyncs:I
       4: ireturn

  public void setMaxConcurrentDiffSyncs(int);
    Code:
       0: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #17                 // String Set maxConcurrentDiffSyncs to {}
       5: iload_1
       6: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: iload_1
      16: putfield      #5                  // Field maxConcurrentDiffSyncs:I
      19: aload_0
      20: getfield      #11                 // Field learnerDiffSyncThrottler:Lorg/apache/zookeeper/server/quorum/LearnerSyncThrottler;
      23: iload_1
      24: invokevirtual #16                 // Method org/apache/zookeeper/server/quorum/LearnerSyncThrottler.setMaxConcurrentSyncs:(I)V
      27: return

  public org.apache.zookeeper.server.quorum.LearnerSyncThrottler getLearnerSnapSyncThrottler();
    Code:
       0: aload_0
       1: getfield      #9                  // Field learnerSnapSyncThrottler:Lorg/apache/zookeeper/server/quorum/LearnerSyncThrottler;
       4: areturn

  public org.apache.zookeeper.server.quorum.LearnerSyncThrottler getLearnerDiffSyncThrottler();
    Code:
       0: aload_0
       1: getfield      #11                 // Field learnerDiffSyncThrottler:Lorg/apache/zookeeper/server/quorum/LearnerSyncThrottler;
       4: areturn

  abstract void addLearnerHandler(org.apache.zookeeper.server.quorum.LearnerHandler);

  abstract void removeLearnerHandler(org.apache.zookeeper.server.quorum.LearnerHandler);

  abstract void waitForEpochAck(long, org.apache.zookeeper.server.quorum.StateSummary) throws java.io.IOException, java.lang.InterruptedException;

  abstract void waitForStartup() throws java.lang.InterruptedException;

  abstract long getEpochToPropose(long, long) throws java.lang.InterruptedException, java.io.IOException;

  abstract org.apache.zookeeper.server.ZKDatabase getZKDatabase();

  abstract void waitForNewLeaderAck(long, long) throws java.lang.InterruptedException;

  abstract long getLastProposed();

  abstract int getCurrentTick();

  abstract int syncTimeout();

  abstract int getTickOfNextAckDeadline();

  abstract int getTickOfInitialAckDeadline();

  abstract long getAndDecrementFollowerCounter();

  abstract void processAck(long, long, java.net.SocketAddress);

  abstract void touch(long, int);

  abstract void revalidateSession(org.apache.zookeeper.server.quorum.QuorumPacket, org.apache.zookeeper.server.quorum.LearnerHandler) throws java.io.IOException;

  abstract void submitLearnerRequest(org.apache.zookeeper.server.Request);

  abstract long startForwarding(org.apache.zookeeper.server.quorum.LearnerHandler, long);

  abstract long getQuorumVerifierVersion();

  abstract java.lang.String getPeerInfo(long);

  abstract byte[] getQuorumVerifierBytes();

  abstract org.apache.zookeeper.server.quorum.auth.QuorumAuthServer getQuorumAuthServer();

  abstract void registerLearnerHandlerBean(org.apache.zookeeper.server.quorum.LearnerHandler, java.net.Socket);

  abstract void unregisterLearnerHandlerBean(org.apache.zookeeper.server.quorum.LearnerHandler);

  static {};
    Code:
       0: ldc           #18                 // class org/apache/zookeeper/server/quorum/LearnerMaster
       2: invokestatic  #19                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #20                 // String zookeeper.leader.maxConcurrentSnapSyncs
      10: bipush        10
      12: invokestatic  #21                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      15: invokevirtual #22                 // Method java/lang/Integer.intValue:()I
      18: putstatic     #2                  // Field DEFAULT_CONCURRENT_SNAPSYNCS:I
      21: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #23                 // String {} = {}
      26: ldc           #20                 // String zookeeper.leader.maxConcurrentSnapSyncs
      28: getstatic     #2                  // Field DEFAULT_CONCURRENT_SNAPSYNCS:I
      31: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: invokeinterface #24,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      39: ldc           #25                 // String zookeeper.leader.maxConcurrentDiffSyncs
      41: bipush        100
      43: invokestatic  #21                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      46: invokevirtual #22                 // Method java/lang/Integer.intValue:()I
      49: putstatic     #4                  // Field DEFAULT_CONCURRENT_DIFF_SYNCS:I
      52: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      55: ldc           #23                 // String {} = {}
      57: ldc           #25                 // String zookeeper.leader.maxConcurrentDiffSyncs
      59: getstatic     #4                  // Field DEFAULT_CONCURRENT_DIFF_SYNCS:I
      62: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: invokeinterface #24,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      70: return
}
