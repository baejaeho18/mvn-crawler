Compiled from "ReadOnlyZooKeeperServer.java"
public class org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer extends org.apache.zookeeper.server.ZooKeeperServer {
  protected final org.apache.zookeeper.server.quorum.QuorumPeer self;

  private volatile boolean shutdown;

  org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer(org.apache.zookeeper.server.persistence.FileTxnSnapLog, org.apache.zookeeper.server.quorum.QuorumPeer, org.apache.zookeeper.server.ZKDatabase);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getfield      #1                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.tickTime:I
       6: aload_2
       7: getfield      #2                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.minSessionTimeout:I
      10: aload_2
      11: getfield      #3                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.maxSessionTimeout:I
      14: aload_2
      15: getfield      #4                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.clientPortListenBacklog:I
      18: aload_3
      19: aload_2
      20: invokevirtual #5                  // Method org/apache/zookeeper/server/quorum/QuorumPeer.getInitialConfig:()Ljava/lang/String;
      23: aload_2
      24: invokevirtual #6                  // Method org/apache/zookeeper/server/quorum/QuorumPeer.isReconfigEnabled:()Z
      27: invokespecial #7                  // Method org/apache/zookeeper/server/ZooKeeperServer."<init>":(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIIILorg/apache/zookeeper/server/ZKDatabase;Ljava/lang/String;Z)V
      30: aload_0
      31: iconst_0
      32: putfield      #8                  // Field shutdown:Z
      35: aload_0
      36: aload_2
      37: putfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      40: return

  protected void setupRequestProcessors();
    Code:
       0: new           #10                 // class org/apache/zookeeper/server/FinalRequestProcessor
       3: dup
       4: aload_0
       5: invokespecial #11                 // Method org/apache/zookeeper/server/FinalRequestProcessor."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
       8: astore_1
       9: new           #12                 // class org/apache/zookeeper/server/PrepRequestProcessor
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #13                 // Method org/apache/zookeeper/server/PrepRequestProcessor."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
      18: astore_2
      19: aload_2
      20: checkcast     #12                 // class org/apache/zookeeper/server/PrepRequestProcessor
      23: invokevirtual #14                 // Method org/apache/zookeeper/server/PrepRequestProcessor.start:()V
      26: aload_0
      27: new           #15                 // class org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor
      30: dup
      31: aload_0
      32: aload_2
      33: invokespecial #16                 // Method org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
      36: putfield      #17                 // Field firstProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      39: aload_0
      40: getfield      #17                 // Field firstProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      43: checkcast     #15                 // class org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor
      46: invokevirtual #18                 // Method org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor.start:()V
      49: return

  public synchronized void startup();
    Code:
       0: aload_0
       1: getfield      #8                  // Field shutdown:Z
       4: ifeq          18
       7: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      10: ldc           #20                 // String Not starting Read-only server as startup follows shutdown!
      12: invokeinterface #21,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      17: return
      18: aload_0
      19: new           #22                 // class org/apache/zookeeper/server/quorum/ReadOnlyBean
      22: dup
      23: aload_0
      24: invokespecial #23                 // Method org/apache/zookeeper/server/quorum/ReadOnlyBean."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
      27: aload_0
      28: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      31: getfield      #24                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.jmxLocalPeerBean:Lorg/apache/zookeeper/server/quorum/LocalPeerBean;
      34: invokevirtual #25                 // Method registerJMX:(Lorg/apache/zookeeper/server/ZooKeeperServerBean;Lorg/apache/zookeeper/server/quorum/LocalPeerBean;)V
      37: aload_0
      38: invokespecial #26                 // Method org/apache/zookeeper/server/ZooKeeperServer.startup:()V
      41: aload_0
      42: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      45: aload_0
      46: invokevirtual #27                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.setZooKeeperServer:(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
      49: aload_0
      50: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      53: getfield      #28                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.adminServer:Lorg/apache/zookeeper/server/admin/AdminServer;
      56: aload_0
      57: invokeinterface #29,  2           // InterfaceMethod org/apache/zookeeper/server/admin/AdminServer.setZooKeeperServer:(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
      62: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      65: ldc           #30                 // String Read-only server started
      67: invokeinterface #31,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      72: return

  protected void registerJMX();
    Code:
       0: aload_0
       1: new           #32                 // class org/apache/zookeeper/server/DataTreeBean
       4: dup
       5: aload_0
       6: invokevirtual #33                 // Method getZKDatabase:()Lorg/apache/zookeeper/server/ZKDatabase;
       9: invokevirtual #34                 // Method org/apache/zookeeper/server/ZKDatabase.getDataTree:()Lorg/apache/zookeeper/server/DataTree;
      12: invokespecial #35                 // Method org/apache/zookeeper/server/DataTreeBean."<init>":(Lorg/apache/zookeeper/server/DataTree;)V
      15: putfield      #36                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      18: invokestatic  #37                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      21: aload_0
      22: getfield      #36                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      25: aload_0
      26: getfield      #38                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      29: invokevirtual #39                 // Method org/apache/zookeeper/jmx/MBeanRegistry.register:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      32: goto          52
      35: astore_1
      36: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      39: ldc           #41                 // String Failed to register with JMX
      41: aload_1
      42: invokeinterface #42,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: aload_0
      48: aconst_null
      49: putfield      #36                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      52: return
    Exception table:
       from    to  target type
           0    32    35   Class java/lang/Exception

  public void registerJMX(org.apache.zookeeper.server.ZooKeeperServerBean, org.apache.zookeeper.server.quorum.LocalPeerBean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
       5: invokestatic  #37                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
       8: aload_1
       9: aload_2
      10: invokevirtual #39                 // Method org/apache/zookeeper/jmx/MBeanRegistry.register:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      13: goto          33
      16: astore_3
      17: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      20: ldc           #41                 // String Failed to register with JMX
      22: aload_3
      23: invokeinterface #42,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      28: aload_0
      29: aconst_null
      30: putfield      #38                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      33: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/Exception

  protected void unregisterJMX();
    Code:
       0: aload_0
       1: getfield      #36                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
       4: ifnull        17
       7: invokestatic  #37                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      10: aload_0
      11: getfield      #36                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      14: invokevirtual #43                 // Method org/apache/zookeeper/jmx/MBeanRegistry.unregister:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      17: goto          32
      20: astore_1
      21: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #44                 // String Failed to unregister with JMX
      26: aload_1
      27: invokeinterface #42,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: aload_0
      33: aconst_null
      34: putfield      #36                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      37: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/Exception

  protected void unregisterJMX(org.apache.zookeeper.server.ZooKeeperServer);
    Code:
       0: aload_0
       1: getfield      #38                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
       4: ifnull        17
       7: invokestatic  #37                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      10: aload_0
      11: getfield      #38                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      14: invokevirtual #43                 // Method org/apache/zookeeper/jmx/MBeanRegistry.unregister:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      17: goto          32
      20: astore_2
      21: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #44                 // String Failed to unregister with JMX
      26: aload_2
      27: invokeinterface #42,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: aload_0
      33: aconst_null
      34: putfield      #38                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      37: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/Exception

  public java.lang.String getState();
    Code:
       0: ldc           #45                 // String read-only
       2: areturn

  public long getServerId();
    Code:
       0: aload_0
       1: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       4: invokevirtual #46                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getId:()J
       7: lreturn

  public synchronized void shutdown();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method canShutdown:()Z
       4: ifne          18
       7: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      10: ldc           #48                 // String ZooKeeper server is not running, so not proceeding to shutdown!
      12: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      17: return
      18: aload_0
      19: iconst_1
      20: putfield      #8                  // Field shutdown:Z
      23: aload_0
      24: aload_0
      25: invokevirtual #50                 // Method unregisterJMX:(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
      28: aload_0
      29: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      32: aconst_null
      33: invokevirtual #27                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.setZooKeeperServer:(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
      36: aload_0
      37: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      40: invokevirtual #51                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.closeAllConnections:()V
      43: aload_0
      44: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      47: getfield      #28                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.adminServer:Lorg/apache/zookeeper/server/admin/AdminServer;
      50: aconst_null
      51: invokeinterface #29,  2           // InterfaceMethod org/apache/zookeeper/server/admin/AdminServer.setZooKeeperServer:(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
      56: aload_0
      57: invokespecial #52                 // Method org/apache/zookeeper/server/ZooKeeperServer.shutdown:()V
      60: return

  public void dumpConf(java.io.PrintWriter);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #53                 // Method org/apache/zookeeper/server/ZooKeeperServer.dumpConf:(Ljava/io/PrintWriter;)V
       5: aload_1
       6: ldc           #54                 // String initLimit=
       8: invokevirtual #55                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      11: aload_1
      12: aload_0
      13: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      16: invokevirtual #56                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getInitLimit:()I
      19: invokevirtual #57                 // Method java/io/PrintWriter.println:(I)V
      22: aload_1
      23: ldc           #58                 // String syncLimit=
      25: invokevirtual #55                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      28: aload_1
      29: aload_0
      30: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      33: invokevirtual #59                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getSyncLimit:()I
      36: invokevirtual #57                 // Method java/io/PrintWriter.println:(I)V
      39: aload_1
      40: ldc           #60                 // String electionAlg=
      42: invokevirtual #55                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      45: aload_1
      46: aload_0
      47: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      50: invokevirtual #61                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getElectionType:()I
      53: invokevirtual #57                 // Method java/io/PrintWriter.println:(I)V
      56: aload_1
      57: ldc           #62                 // String electionPort=
      59: invokevirtual #55                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      62: aload_1
      63: aload_0
      64: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      67: invokevirtual #63                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getElectionAddress:()Lorg/apache/zookeeper/server/quorum/MultipleAddresses;
      70: invokevirtual #64                 // Method org/apache/zookeeper/server/quorum/MultipleAddresses.getAllPorts:()Ljava/util/List;
      73: invokeinterface #65,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      78: invokedynamic #66,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      83: invokeinterface #67,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      88: ldc           #68                 // String |
      90: invokestatic  #69                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      93: invokeinterface #70,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      98: checkcast     #71                 // class java/lang/String
     101: invokevirtual #72                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     104: aload_1
     105: ldc           #73                 // String quorumPort=
     107: invokevirtual #55                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
     110: aload_1
     111: aload_0
     112: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
     115: invokevirtual #74                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getQuorumAddress:()Lorg/apache/zookeeper/server/quorum/MultipleAddresses;
     118: invokevirtual #64                 // Method org/apache/zookeeper/server/quorum/MultipleAddresses.getAllPorts:()Ljava/util/List;
     121: invokeinterface #65,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     126: invokedynamic #66,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     131: invokeinterface #67,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     136: ldc           #68                 // String |
     138: invokestatic  #69                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
     141: invokeinterface #70,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     146: checkcast     #71                 // class java/lang/String
     149: invokevirtual #72                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     152: aload_1
     153: ldc           #75                 // String peerType=
     155: invokevirtual #55                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
     158: aload_1
     159: aload_0
     160: getfield      #9                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
     163: invokevirtual #76                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getLearnerType:()Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;
     166: invokevirtual #77                 // Method org/apache/zookeeper/server/quorum/QuorumPeer$LearnerType.ordinal:()I
     169: invokevirtual #57                 // Method java/io/PrintWriter.println:(I)V
     172: return

  protected void setState(org.apache.zookeeper.server.ZooKeeperServer$State);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #78                 // Field state:Lorg/apache/zookeeper/server/ZooKeeperServer$State;
       5: return
}
