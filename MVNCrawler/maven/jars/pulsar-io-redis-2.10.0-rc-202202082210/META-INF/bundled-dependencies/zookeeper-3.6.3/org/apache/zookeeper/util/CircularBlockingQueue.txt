Compiled from "CircularBlockingQueue.java"
public class org.apache.zookeeper.util.CircularBlockingQueue<E> implements java.util.concurrent.BlockingQueue<E> {
  private static final org.slf4j.Logger LOG;

  private final java.util.concurrent.locks.ReentrantLock lock;

  private final java.util.concurrent.locks.Condition notEmpty;

  private final java.util.ArrayDeque<E> queue;

  private final int maxSize;

  private long droppedCount;

  public org.apache.zookeeper.util.CircularBlockingQueue(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayDeque
       8: dup
       9: iload_1
      10: invokespecial #3                  // Method java/util/ArrayDeque."<init>":(I)V
      13: putfield      #4                  // Field queue:Ljava/util/ArrayDeque;
      16: aload_0
      17: iload_1
      18: putfield      #5                  // Field maxSize:I
      21: aload_0
      22: new           #6                  // class java/util/concurrent/locks/ReentrantLock
      25: dup
      26: invokespecial #7                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      29: putfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      32: aload_0
      33: aload_0
      34: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      37: invokevirtual #9                  // Method java/util/concurrent/locks/ReentrantLock.newCondition:()Ljava/util/concurrent/locks/Condition;
      40: putfield      #10                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
      43: aload_0
      44: lconst_0
      45: putfield      #11                 // Field droppedCount:J
      48: return

  public boolean offer(E);
    Code:
       0: aload_1
       1: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       9: astore_2
      10: aload_2
      11: invokevirtual #13                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      14: aload_0
      15: getfield      #4                  // Field queue:Ljava/util/ArrayDeque;
      18: invokevirtual #14                 // Method java/util/ArrayDeque.size:()I
      21: aload_0
      22: getfield      #5                  // Field maxSize:I
      25: if_icmpne     64
      28: aload_0
      29: getfield      #4                  // Field queue:Ljava/util/ArrayDeque;
      32: invokevirtual #15                 // Method java/util/ArrayDeque.remove:()Ljava/lang/Object;
      35: astore_3
      36: aload_0
      37: dup
      38: getfield      #11                 // Field droppedCount:J
      41: lconst_1
      42: ladd
      43: putfield      #11                 // Field droppedCount:J
      46: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      49: ldc           #17                 // String Queue is full. Discarding oldest element [count={}]: {}
      51: aload_0
      52: getfield      #11                 // Field droppedCount:J
      55: invokestatic  #18                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      58: aload_3
      59: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      64: aload_0
      65: getfield      #4                  // Field queue:Ljava/util/ArrayDeque;
      68: aload_1
      69: invokevirtual #20                 // Method java/util/ArrayDeque.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload_0
      74: getfield      #10                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
      77: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      82: aload_2
      83: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      86: goto          98
      89: astore        4
      91: aload_2
      92: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      95: aload         4
      97: athrow
      98: iconst_1
      99: ireturn
    Exception table:
       from    to  target type
          14    82    89   any
          89    91    89   any

  public E poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_3
       1: lload_1
       2: invokevirtual #23                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       5: lstore        4
       7: aload_0
       8: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      11: astore        6
      13: aload         6
      15: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
      18: aload_0
      19: getfield      #4                  // Field queue:Ljava/util/ArrayDeque;
      22: invokevirtual #25                 // Method java/util/ArrayDeque.isEmpty:()Z
      25: ifeq          62
      28: lload         4
      30: lconst_0
      31: lcmp
      32: ifgt          46
      35: aconst_null
      36: astore        7
      38: aload         6
      40: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      43: aload         7
      45: areturn
      46: aload_0
      47: getfield      #10                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
      50: lload         4
      52: invokeinterface #26,  3           // InterfaceMethod java/util/concurrent/locks/Condition.awaitNanos:(J)J
      57: lstore        4
      59: goto          18
      62: aload_0
      63: getfield      #4                  // Field queue:Ljava/util/ArrayDeque;
      66: invokevirtual #27                 // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
      69: astore        7
      71: aload         6
      73: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      76: aload         7
      78: areturn
      79: astore        8
      81: aload         6
      83: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      86: aload         8
      88: athrow
    Exception table:
       from    to  target type
          18    38    79   any
          46    71    79   any
          79    81    79   any

  public E take() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: astore_1
       5: aload_1
       6: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
       9: aload_0
      10: getfield      #4                  // Field queue:Ljava/util/ArrayDeque;
      13: invokevirtual #25                 // Method java/util/ArrayDeque.isEmpty:()Z
      16: ifeq          31
      19: aload_0
      20: getfield      #10                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
      23: invokeinterface #28,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      28: goto          9
      31: aload_0
      32: getfield      #4                  // Field queue:Ljava/util/ArrayDeque;
      35: invokevirtual #27                 // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
      38: astore_2
      39: aload_1
      40: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      43: aload_2
      44: areturn
      45: astore_3
      46: aload_1
      47: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      50: aload_3
      51: athrow
    Exception table:
       from    to  target type
           9    39    45   any

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: astore_1
       5: aload_1
       6: invokevirtual #13                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       9: aload_0
      10: getfield      #4                  // Field queue:Ljava/util/ArrayDeque;
      13: invokevirtual #25                 // Method java/util/ArrayDeque.isEmpty:()Z
      16: istore_2
      17: aload_1
      18: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      21: iload_2
      22: ireturn
      23: astore_3
      24: aload_1
      25: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      28: aload_3
      29: athrow
    Exception table:
       from    to  target type
           9    17    23   any

  public int size();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: astore_1
       5: aload_1
       6: invokevirtual #13                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       9: aload_0
      10: getfield      #4                  // Field queue:Ljava/util/ArrayDeque;
      13: invokevirtual #14                 // Method java/util/ArrayDeque.size:()I
      16: istore_2
      17: aload_1
      18: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      21: iload_2
      22: ireturn
      23: astore_3
      24: aload_1
      25: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      28: aload_3
      29: athrow
    Exception table:
       from    to  target type
           9    17    23   any

  public long getDroppedCount();
    Code:
       0: aload_0
       1: getfield      #11                 // Field droppedCount:J
       4: lreturn

  boolean isConsumerThreadBlocked();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: astore_1
       5: aload_1
       6: invokevirtual #13                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       9: aload_1
      10: aload_0
      11: getfield      #10                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
      14: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantLock.getWaitQueueLength:(Ljava/util/concurrent/locks/Condition;)I
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: istore_2
      26: aload_1
      27: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      30: iload_2
      31: ireturn
      32: astore_3
      33: aload_1
      34: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      37: aload_3
      38: athrow
    Exception table:
       from    to  target type
           9    26    32   any

  public int drainTo(java.util.Collection<? super E>);
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public E poll();
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public E element();
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public E peek();
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public E remove();
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void clear();
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.util.Iterator<E> iterator();
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object[] toArray();
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public <T> T[] toArray(T[]);
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean add(E);
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean contains(java.lang.Object);
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int drainTo(java.util.Collection<? super E>, int);
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean offer(E, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void put(E) throws java.lang.InterruptedException;
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int remainingCapacity();
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean remove(java.lang.Object);
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  static {};
    Code:
       0: ldc           #32                 // class org/apache/zookeeper/util/CircularBlockingQueue
       2: invokestatic  #33                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
