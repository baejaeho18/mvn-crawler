Compiled from "ObserverZooKeeperServer.java"
public class org.apache.zookeeper.server.quorum.ObserverZooKeeperServer extends org.apache.zookeeper.server.quorum.LearnerZooKeeperServer {
  private static final org.slf4j.Logger LOG;

  private boolean syncRequestProcessorEnabled;

  java.util.concurrent.ConcurrentLinkedQueue<org.apache.zookeeper.server.Request> pendingSyncs;

  org.apache.zookeeper.server.quorum.ObserverZooKeeperServer(org.apache.zookeeper.server.persistence.FileTxnSnapLog, org.apache.zookeeper.server.quorum.QuorumPeer, org.apache.zookeeper.server.ZKDatabase) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getfield      #1                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.tickTime:I
       6: aload_2
       7: getfield      #2                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.minSessionTimeout:I
      10: aload_2
      11: getfield      #3                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.maxSessionTimeout:I
      14: aload_2
      15: getfield      #4                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.clientPortListenBacklog:I
      18: aload_3
      19: aload_2
      20: invokespecial #5                  // Method org/apache/zookeeper/server/quorum/LearnerZooKeeperServer."<init>":(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIIILorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
      23: aload_0
      24: aload_0
      25: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      28: invokevirtual #7                  // Method org/apache/zookeeper/server/quorum/QuorumPeer.getSyncEnabled:()Z
      31: putfield      #8                  // Field syncRequestProcessorEnabled:Z
      34: aload_0
      35: new           #9                  // class java/util/concurrent/ConcurrentLinkedQueue
      38: dup
      39: invokespecial #10                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      42: putfield      #11                 // Field pendingSyncs:Ljava/util/concurrent/ConcurrentLinkedQueue;
      45: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      48: ldc           #13                 // String syncEnabled ={}
      50: aload_0
      51: getfield      #8                  // Field syncRequestProcessorEnabled:Z
      54: invokestatic  #14                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      57: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      62: return

  public org.apache.zookeeper.server.quorum.Observer getObserver();
    Code:
       0: aload_0
       1: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       4: getfield      #16                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.observer:Lorg/apache/zookeeper/server/quorum/Observer;
       7: areturn

  public org.apache.zookeeper.server.quorum.Learner getLearner();
    Code:
       0: aload_0
       1: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       4: getfield      #16                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.observer:Lorg/apache/zookeeper/server/quorum/Observer;
       7: areturn

  public void commitRequest(org.apache.zookeeper.server.Request);
    Code:
       0: aload_0
       1: getfield      #8                  // Field syncRequestProcessorEnabled:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #17                 // Field syncProcessor:Lorg/apache/zookeeper/server/SyncRequestProcessor;
      11: aload_1
      12: invokevirtual #18                 // Method org/apache/zookeeper/server/SyncRequestProcessor.processRequest:(Lorg/apache/zookeeper/server/Request;)V
      15: aload_0
      16: getfield      #19                 // Field commitProcessor:Lorg/apache/zookeeper/server/quorum/CommitProcessor;
      19: aload_1
      20: invokevirtual #20                 // Method org/apache/zookeeper/server/quorum/CommitProcessor.commit:(Lorg/apache/zookeeper/server/Request;)V
      23: return

  protected void setupRequestProcessors();
    Code:
       0: new           #21                 // class org/apache/zookeeper/server/FinalRequestProcessor
       3: dup
       4: aload_0
       5: invokespecial #22                 // Method org/apache/zookeeper/server/FinalRequestProcessor."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
       8: astore_1
       9: aload_0
      10: new           #23                 // class org/apache/zookeeper/server/quorum/CommitProcessor
      13: dup
      14: aload_1
      15: aload_0
      16: invokevirtual #24                 // Method getServerId:()J
      19: invokestatic  #25                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      22: iconst_1
      23: aload_0
      24: invokevirtual #26                 // Method getZooKeeperServerListener:()Lorg/apache/zookeeper/server/ZooKeeperServerListener;
      27: invokespecial #27                 // Method org/apache/zookeeper/server/quorum/CommitProcessor."<init>":(Lorg/apache/zookeeper/server/RequestProcessor;Ljava/lang/String;ZLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
      30: putfield      #19                 // Field commitProcessor:Lorg/apache/zookeeper/server/quorum/CommitProcessor;
      33: aload_0
      34: getfield      #19                 // Field commitProcessor:Lorg/apache/zookeeper/server/quorum/CommitProcessor;
      37: invokevirtual #28                 // Method org/apache/zookeeper/server/quorum/CommitProcessor.start:()V
      40: aload_0
      41: new           #29                 // class org/apache/zookeeper/server/quorum/ObserverRequestProcessor
      44: dup
      45: aload_0
      46: aload_0
      47: getfield      #19                 // Field commitProcessor:Lorg/apache/zookeeper/server/quorum/CommitProcessor;
      50: invokespecial #30                 // Method org/apache/zookeeper/server/quorum/ObserverRequestProcessor."<init>":(Lorg/apache/zookeeper/server/quorum/ObserverZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
      53: putfield      #31                 // Field firstProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      56: aload_0
      57: getfield      #31                 // Field firstProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
      60: checkcast     #29                 // class org/apache/zookeeper/server/quorum/ObserverRequestProcessor
      63: invokevirtual #32                 // Method org/apache/zookeeper/server/quorum/ObserverRequestProcessor.start:()V
      66: aload_0
      67: getfield      #8                  // Field syncRequestProcessorEnabled:Z
      70: ifeq          93
      73: aload_0
      74: new           #33                 // class org/apache/zookeeper/server/SyncRequestProcessor
      77: dup
      78: aload_0
      79: aconst_null
      80: invokespecial #34                 // Method org/apache/zookeeper/server/SyncRequestProcessor."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
      83: putfield      #17                 // Field syncProcessor:Lorg/apache/zookeeper/server/SyncRequestProcessor;
      86: aload_0
      87: getfield      #17                 // Field syncProcessor:Lorg/apache/zookeeper/server/SyncRequestProcessor;
      90: invokevirtual #35                 // Method org/apache/zookeeper/server/SyncRequestProcessor.start:()V
      93: return

  public synchronized void sync();
    Code:
       0: aload_0
       1: getfield      #11                 // Field pendingSyncs:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #36                 // Method java/util/concurrent/ConcurrentLinkedQueue.size:()I
       7: ifne          21
      10: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      13: ldc           #37                 // String Not expecting a sync.
      15: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      20: return
      21: aload_0
      22: getfield      #11                 // Field pendingSyncs:Ljava/util/concurrent/ConcurrentLinkedQueue;
      25: invokevirtual #39                 // Method java/util/concurrent/ConcurrentLinkedQueue.remove:()Ljava/lang/Object;
      28: checkcast     #40                 // class org/apache/zookeeper/server/Request
      31: astore_1
      32: aload_0
      33: getfield      #19                 // Field commitProcessor:Lorg/apache/zookeeper/server/quorum/CommitProcessor;
      36: aload_1
      37: invokevirtual #20                 // Method org/apache/zookeeper/server/quorum/CommitProcessor.commit:(Lorg/apache/zookeeper/server/Request;)V
      40: return

  public java.lang.String getState();
    Code:
       0: ldc           #41                 // String observer
       2: areturn

  public synchronized void shutdown();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method canShutdown:()Z
       4: ifne          18
       7: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      10: ldc           #43                 // String ZooKeeper server is not running, so not proceeding to shutdown!
      12: invokeinterface #44,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      17: return
      18: aload_0
      19: invokespecial #45                 // Method org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.shutdown:()V
      22: aload_0
      23: getfield      #8                  // Field syncRequestProcessorEnabled:Z
      26: ifeq          43
      29: aload_0
      30: getfield      #17                 // Field syncProcessor:Lorg/apache/zookeeper/server/SyncRequestProcessor;
      33: ifnull        43
      36: aload_0
      37: getfield      #17                 // Field syncProcessor:Lorg/apache/zookeeper/server/SyncRequestProcessor;
      40: invokevirtual #46                 // Method org/apache/zookeeper/server/SyncRequestProcessor.shutdown:()V
      43: return

  public void dumpMonitorValues(java.util.function.BiConsumer<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #47                 // Method org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.dumpMonitorValues:(Ljava/util/function/BiConsumer;)V
       5: aload_1
       6: ldc           #48                 // String observer_master_id
       8: aload_0
       9: invokevirtual #49                 // Method getObserver:()Lorg/apache/zookeeper/server/quorum/Observer;
      12: invokevirtual #50                 // Method org/apache/zookeeper/server/quorum/Observer.getLearnerMasterId:()J
      15: invokestatic  #51                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      18: invokeinterface #52,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      23: return

  static {};
    Code:
       0: ldc           #53                 // class org/apache/zookeeper/server/quorum/ObserverZooKeeperServer
       2: invokestatic  #54                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
