Compiled from "ContainerManager.java"
class org.apache.zookeeper.server.ContainerManager$1 extends java.util.TimerTask {
  final org.apache.zookeeper.server.ContainerManager this$0;

  org.apache.zookeeper.server.ContainerManager$1(org.apache.zookeeper.server.ContainerManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/zookeeper/server/ContainerManager;
       5: aload_0
       6: invokespecial #2                  // Method java/util/TimerTask."<init>":()V
       9: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/zookeeper/server/ContainerManager;
       4: invokevirtual #3                  // Method org/apache/zookeeper/server/ContainerManager.checkContainers:()V
       7: goto          47
      10: astore_1
      11: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      14: invokevirtual #6                  // Method java/lang/Thread.interrupt:()V
      17: invokestatic  #7                  // Method org/apache/zookeeper/server/ContainerManager.access$000:()Lorg/slf4j/Logger;
      20: ldc           #8                  // String interrupted
      22: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      27: aload_0
      28: invokevirtual #10                 // Method cancel:()Z
      31: pop
      32: goto          47
      35: astore_1
      36: invokestatic  #7                  // Method org/apache/zookeeper/server/ContainerManager.access$000:()Lorg/slf4j/Logger;
      39: ldc           #12                 // String Error checking containers
      41: aload_1
      42: invokeinterface #13,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: return
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/InterruptedException
           0     7    35   Class java/lang/Throwable
}
