Compiled from "LeaderZooKeeperServer.java"
public class org.apache.zookeeper.server.quorum.LeaderZooKeeperServer extends org.apache.zookeeper.server.quorum.QuorumZooKeeperServer {
  private org.apache.zookeeper.server.ContainerManager containerManager;

  org.apache.zookeeper.server.quorum.CommitProcessor commitProcessor;

  org.apache.zookeeper.server.PrepRequestProcessor prepRequestProcessor;

  public org.apache.zookeeper.server.quorum.LeaderZooKeeperServer(org.apache.zookeeper.server.persistence.FileTxnSnapLog, org.apache.zookeeper.server.quorum.QuorumPeer, org.apache.zookeeper.server.ZKDatabase) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getfield      #1                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.tickTime:I
       6: aload_2
       7: getfield      #2                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.minSessionTimeout:I
      10: aload_2
      11: getfield      #3                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.maxSessionTimeout:I
      14: aload_2
      15: getfield      #4                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.clientPortListenBacklog:I
      18: aload_3
      19: aload_2
      20: invokespecial #5                  // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer."<init>":(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIIILorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
      23: return

  public org.apache.zookeeper.server.quorum.Leader getLeader();
    Code:
       0: aload_0
       1: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       4: getfield      #7                  // Field org/apache/zookeeper/server/quorum/QuorumPeer.leader:Lorg/apache/zookeeper/server/quorum/Leader;
       7: areturn

  protected void setupRequestProcessors();
    Code:
       0: new           #8                  // class org/apache/zookeeper/server/FinalRequestProcessor
       3: dup
       4: aload_0
       5: invokespecial #9                  // Method org/apache/zookeeper/server/FinalRequestProcessor."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
       8: astore_1
       9: new           #10                 // class org/apache/zookeeper/server/quorum/Leader$ToBeAppliedRequestProcessor
      12: dup
      13: aload_1
      14: aload_0
      15: invokevirtual #11                 // Method getLeader:()Lorg/apache/zookeeper/server/quorum/Leader;
      18: invokespecial #12                 // Method org/apache/zookeeper/server/quorum/Leader$ToBeAppliedRequestProcessor."<init>":(Lorg/apache/zookeeper/server/RequestProcessor;Lorg/apache/zookeeper/server/quorum/Leader;)V
      21: astore_2
      22: aload_0
      23: new           #13                 // class org/apache/zookeeper/server/quorum/CommitProcessor
      26: dup
      27: aload_2
      28: aload_0
      29: invokevirtual #14                 // Method getServerId:()J
      32: invokestatic  #15                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      35: iconst_0
      36: aload_0
      37: invokevirtual #16                 // Method getZooKeeperServerListener:()Lorg/apache/zookeeper/server/ZooKeeperServerListener;
      40: invokespecial #17                 // Method org/apache/zookeeper/server/quorum/CommitProcessor."<init>":(Lorg/apache/zookeeper/server/RequestProcessor;Ljava/lang/String;ZLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
      43: putfield      #18                 // Field commitProcessor:Lorg/apache/zookeeper/server/quorum/CommitProcessor;
      46: aload_0
      47: getfield      #18                 // Field commitProcessor:Lorg/apache/zookeeper/server/quorum/CommitProcessor;
      50: invokevirtual #19                 // Method org/apache/zookeeper/server/quorum/CommitProcessor.start:()V
      53: new           #20                 // class org/apache/zookeeper/server/quorum/ProposalRequestProcessor
      56: dup
      57: aload_0
      58: aload_0
      59: getfield      #18                 // Field commitProcessor:Lorg/apache/zookeeper/server/quorum/CommitProcessor;
      62: invokespecial #21                 // Method org/apache/zookeeper/server/quorum/ProposalRequestProcessor."<init>":(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
      65: astore_3
      66: aload_3
      67: invokevirtual #22                 // Method org/apache/zookeeper/server/quorum/ProposalRequestProcessor.initialize:()V
      70: aload_0
      71: new           #23                 // class org/apache/zookeeper/server/PrepRequestProcessor
      74: dup
      75: aload_0
      76: aload_3
      77: invokespecial #24                 // Method org/apache/zookeeper/server/PrepRequestProcessor."<init>":(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
      80: putfield      #25                 // Field prepRequestProcessor:Lorg/apache/zookeeper/server/PrepRequestProcessor;
      83: aload_0
      84: getfield      #25                 // Field prepRequestProcessor:Lorg/apache/zookeeper/server/PrepRequestProcessor;
      87: invokevirtual #26                 // Method org/apache/zookeeper/server/PrepRequestProcessor.start:()V
      90: aload_0
      91: new           #27                 // class org/apache/zookeeper/server/quorum/LeaderRequestProcessor
      94: dup
      95: aload_0
      96: aload_0
      97: getfield      #25                 // Field prepRequestProcessor:Lorg/apache/zookeeper/server/PrepRequestProcessor;
     100: invokespecial #28                 // Method org/apache/zookeeper/server/quorum/LeaderRequestProcessor."<init>":(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
     103: putfield      #29                 // Field firstProcessor:Lorg/apache/zookeeper/server/RequestProcessor;
     106: aload_0
     107: invokespecial #30                 // Method setupContainerManager:()V
     110: return

  private synchronized void setupContainerManager();
    Code:
       0: aload_0
       1: new           #31                 // class org/apache/zookeeper/server/ContainerManager
       4: dup
       5: aload_0
       6: invokevirtual #32                 // Method getZKDatabase:()Lorg/apache/zookeeper/server/ZKDatabase;
       9: aload_0
      10: getfield      #25                 // Field prepRequestProcessor:Lorg/apache/zookeeper/server/PrepRequestProcessor;
      13: ldc           #33                 // String znode.container.checkIntervalMs
      15: getstatic     #34                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      18: lconst_1
      19: invokevirtual #35                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      22: l2i
      23: invokestatic  #36                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      26: invokevirtual #37                 // Method java/lang/Integer.intValue:()I
      29: ldc           #38                 // String znode.container.maxPerMinute
      31: sipush        10000
      34: invokestatic  #36                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      37: invokevirtual #37                 // Method java/lang/Integer.intValue:()I
      40: ldc           #39                 // String znode.container.maxNeverUsedIntervalMs
      42: lconst_0
      43: invokestatic  #40                 // Method java/lang/Long.getLong:(Ljava/lang/String;J)Ljava/lang/Long;
      46: invokevirtual #41                 // Method java/lang/Long.longValue:()J
      49: invokespecial #42                 // Method org/apache/zookeeper/server/ContainerManager."<init>":(Lorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/RequestProcessor;IIJ)V
      52: putfield      #43                 // Field containerManager:Lorg/apache/zookeeper/server/ContainerManager;
      55: return

  public synchronized void startup();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.startup:()V
       4: aload_0
       5: getfield      #43                 // Field containerManager:Lorg/apache/zookeeper/server/ContainerManager;
       8: ifnull        18
      11: aload_0
      12: getfield      #43                 // Field containerManager:Lorg/apache/zookeeper/server/ContainerManager;
      15: invokevirtual #45                 // Method org/apache/zookeeper/server/ContainerManager.start:()V
      18: return

  protected void registerMetrics();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.registerMetrics:()V
       4: invokestatic  #47                 // Method org/apache/zookeeper/server/ServerMetrics.getMetrics:()Lorg/apache/zookeeper/server/ServerMetrics;
       7: invokevirtual #48                 // Method org/apache/zookeeper/server/ServerMetrics.getMetricsProvider:()Lorg/apache/zookeeper/metrics/MetricsProvider;
      10: invokeinterface #49,  1           // InterfaceMethod org/apache/zookeeper/metrics/MetricsProvider.getRootContext:()Lorg/apache/zookeeper/metrics/MetricsContext;
      15: astore_1
      16: aload_1
      17: ldc           #50                 // String learners
      19: aload_0
      20: invokedynamic #51,  0             // InvokeDynamic #0:get:(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;)Lorg/apache/zookeeper/metrics/Gauge;
      25: invokeinterface #52,  3           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.registerGauge:(Ljava/lang/String;Lorg/apache/zookeeper/metrics/Gauge;)V
      30: aload_1
      31: ldc           #53                 // String synced_followers
      33: aload_0
      34: invokedynamic #54,  0             // InvokeDynamic #1:get:(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;)Lorg/apache/zookeeper/metrics/Gauge;
      39: invokeinterface #52,  3           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.registerGauge:(Ljava/lang/String;Lorg/apache/zookeeper/metrics/Gauge;)V
      44: aload_1
      45: ldc           #55                 // String synced_non_voting_followers
      47: aload_0
      48: invokedynamic #56,  0             // InvokeDynamic #2:get:(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;)Lorg/apache/zookeeper/metrics/Gauge;
      53: invokeinterface #52,  3           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.registerGauge:(Ljava/lang/String;Lorg/apache/zookeeper/metrics/Gauge;)V
      58: aload_1
      59: ldc           #57                 // String synced_observers
      61: aload_0
      62: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      65: dup
      66: invokevirtual #58                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      69: pop
      70: invokedynamic #59,  0             // InvokeDynamic #3:get:(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)Lorg/apache/zookeeper/metrics/Gauge;
      75: invokeinterface #52,  3           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.registerGauge:(Ljava/lang/String;Lorg/apache/zookeeper/metrics/Gauge;)V
      80: aload_1
      81: ldc           #60                 // String pending_syncs
      83: aload_0
      84: invokedynamic #61,  0             // InvokeDynamic #4:get:(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;)Lorg/apache/zookeeper/metrics/Gauge;
      89: invokeinterface #52,  3           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.registerGauge:(Ljava/lang/String;Lorg/apache/zookeeper/metrics/Gauge;)V
      94: aload_1
      95: ldc           #62                 // String leader_uptime
      97: aload_0
      98: invokedynamic #63,  0             // InvokeDynamic #5:get:(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;)Lorg/apache/zookeeper/metrics/Gauge;
     103: invokeinterface #52,  3           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.registerGauge:(Ljava/lang/String;Lorg/apache/zookeeper/metrics/Gauge;)V
     108: aload_1
     109: ldc           #64                 // String last_proposal_size
     111: aload_0
     112: invokedynamic #65,  0             // InvokeDynamic #6:get:(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;)Lorg/apache/zookeeper/metrics/Gauge;
     117: invokeinterface #52,  3           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.registerGauge:(Ljava/lang/String;Lorg/apache/zookeeper/metrics/Gauge;)V
     122: aload_1
     123: ldc           #66                 // String max_proposal_size
     125: aload_0
     126: invokedynamic #67,  0             // InvokeDynamic #7:get:(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;)Lorg/apache/zookeeper/metrics/Gauge;
     131: invokeinterface #52,  3           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.registerGauge:(Ljava/lang/String;Lorg/apache/zookeeper/metrics/Gauge;)V
     136: aload_1
     137: ldc           #68                 // String min_proposal_size
     139: aload_0
     140: invokedynamic #69,  0             // InvokeDynamic #8:get:(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;)Lorg/apache/zookeeper/metrics/Gauge;
     145: invokeinterface #52,  3           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.registerGauge:(Ljava/lang/String;Lorg/apache/zookeeper/metrics/Gauge;)V
     150: return

  protected void unregisterMetrics();
    Code:
       0: aload_0
       1: invokespecial #70                 // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.unregisterMetrics:()V
       4: invokestatic  #47                 // Method org/apache/zookeeper/server/ServerMetrics.getMetrics:()Lorg/apache/zookeeper/server/ServerMetrics;
       7: invokevirtual #48                 // Method org/apache/zookeeper/server/ServerMetrics.getMetricsProvider:()Lorg/apache/zookeeper/metrics/MetricsProvider;
      10: invokeinterface #49,  1           // InterfaceMethod org/apache/zookeeper/metrics/MetricsProvider.getRootContext:()Lorg/apache/zookeeper/metrics/MetricsContext;
      15: astore_1
      16: aload_1
      17: ldc           #50                 // String learners
      19: invokeinterface #71,  2           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.unregisterGauge:(Ljava/lang/String;)V
      24: aload_1
      25: ldc           #53                 // String synced_followers
      27: invokeinterface #71,  2           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.unregisterGauge:(Ljava/lang/String;)V
      32: aload_1
      33: ldc           #55                 // String synced_non_voting_followers
      35: invokeinterface #71,  2           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.unregisterGauge:(Ljava/lang/String;)V
      40: aload_1
      41: ldc           #57                 // String synced_observers
      43: invokeinterface #71,  2           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.unregisterGauge:(Ljava/lang/String;)V
      48: aload_1
      49: ldc           #60                 // String pending_syncs
      51: invokeinterface #71,  2           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.unregisterGauge:(Ljava/lang/String;)V
      56: aload_1
      57: ldc           #62                 // String leader_uptime
      59: invokeinterface #71,  2           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.unregisterGauge:(Ljava/lang/String;)V
      64: aload_1
      65: ldc           #64                 // String last_proposal_size
      67: invokeinterface #71,  2           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.unregisterGauge:(Ljava/lang/String;)V
      72: aload_1
      73: ldc           #66                 // String max_proposal_size
      75: invokeinterface #71,  2           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.unregisterGauge:(Ljava/lang/String;)V
      80: aload_1
      81: ldc           #68                 // String min_proposal_size
      83: invokeinterface #71,  2           // InterfaceMethod org/apache/zookeeper/metrics/MetricsContext.unregisterGauge:(Ljava/lang/String;)V
      88: return

  public synchronized void shutdown();
    Code:
       0: aload_0
       1: getfield      #43                 // Field containerManager:Lorg/apache/zookeeper/server/ContainerManager;
       4: ifnull        14
       7: aload_0
       8: getfield      #43                 // Field containerManager:Lorg/apache/zookeeper/server/ContainerManager;
      11: invokevirtual #72                 // Method org/apache/zookeeper/server/ContainerManager.stop:()V
      14: aload_0
      15: invokespecial #73                 // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.shutdown:()V
      18: return

  public int getGlobalOutstandingLimit();
    Code:
       0: aload_0
       1: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       4: invokevirtual #74                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getQuorumSize:()I
       7: iconst_2
       8: if_icmple     23
      11: aload_0
      12: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      15: invokevirtual #74                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getQuorumSize:()I
      18: iconst_1
      19: isub
      20: goto          24
      23: iconst_1
      24: istore_1
      25: aload_0
      26: invokespecial #75                 // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.getGlobalOutstandingLimit:()I
      29: iload_1
      30: idiv
      31: istore_2
      32: iload_2
      33: ireturn

  public void createSessionTracker();
    Code:
       0: aload_0
       1: new           #76                 // class org/apache/zookeeper/server/quorum/LeaderSessionTracker
       4: dup
       5: aload_0
       6: aload_0
       7: invokevirtual #32                 // Method getZKDatabase:()Lorg/apache/zookeeper/server/ZKDatabase;
      10: invokevirtual #77                 // Method org/apache/zookeeper/server/ZKDatabase.getSessionWithTimeOuts:()Ljava/util/concurrent/ConcurrentHashMap;
      13: aload_0
      14: getfield      #78                 // Field tickTime:I
      17: aload_0
      18: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      21: invokevirtual #79                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getId:()J
      24: aload_0
      25: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      28: invokevirtual #80                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.areLocalSessionsEnabled:()Z
      31: aload_0
      32: invokevirtual #16                 // Method getZooKeeperServerListener:()Lorg/apache/zookeeper/server/ZooKeeperServerListener;
      35: invokespecial #81                 // Method org/apache/zookeeper/server/quorum/LeaderSessionTracker."<init>":(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJZLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
      38: putfield      #82                 // Field sessionTracker:Lorg/apache/zookeeper/server/SessionTracker;
      41: return

  public boolean touch(long, int);
    Code:
       0: aload_0
       1: getfield      #82                 // Field sessionTracker:Lorg/apache/zookeeper/server/SessionTracker;
       4: lload_1
       5: iload_3
       6: invokeinterface #83,  4           // InterfaceMethod org/apache/zookeeper/server/SessionTracker.touchSession:(JI)Z
      11: ireturn

  public boolean checkIfValidGlobalSession(long, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       4: invokevirtual #80                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.areLocalSessionsEnabled:()Z
       7: ifeq          23
      10: aload_0
      11: getfield      #84                 // Field upgradeableSessionTracker:Lorg/apache/zookeeper/server/quorum/UpgradeableSessionTracker;
      14: lload_1
      15: invokevirtual #85                 // Method org/apache/zookeeper/server/quorum/UpgradeableSessionTracker.isGlobalSession:(J)Z
      18: ifne          23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #82                 // Field sessionTracker:Lorg/apache/zookeeper/server/SessionTracker;
      27: lload_1
      28: iload_3
      29: invokeinterface #83,  4           // InterfaceMethod org/apache/zookeeper/server/SessionTracker.touchSession:(JI)Z
      34: ireturn

  public void submitLearnerRequest(org.apache.zookeeper.server.Request);
    Code:
       0: aload_0
       1: getfield      #25                 // Field prepRequestProcessor:Lorg/apache/zookeeper/server/PrepRequestProcessor;
       4: aload_1
       5: invokevirtual #86                 // Method org/apache/zookeeper/server/PrepRequestProcessor.processRequest:(Lorg/apache/zookeeper/server/Request;)V
       8: return

  protected void registerJMX();
    Code:
       0: aload_0
       1: new           #87                 // class org/apache/zookeeper/server/DataTreeBean
       4: dup
       5: aload_0
       6: invokevirtual #32                 // Method getZKDatabase:()Lorg/apache/zookeeper/server/ZKDatabase;
       9: invokevirtual #88                 // Method org/apache/zookeeper/server/ZKDatabase.getDataTree:()Lorg/apache/zookeeper/server/DataTree;
      12: invokespecial #89                 // Method org/apache/zookeeper/server/DataTreeBean."<init>":(Lorg/apache/zookeeper/server/DataTree;)V
      15: putfield      #90                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      18: invokestatic  #91                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      21: aload_0
      22: getfield      #90                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      25: aload_0
      26: getfield      #92                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      29: invokevirtual #93                 // Method org/apache/zookeeper/jmx/MBeanRegistry.register:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      32: goto          52
      35: astore_1
      36: getstatic     #95                 // Field LOG:Lorg/slf4j/Logger;
      39: ldc           #96                 // String Failed to register with JMX
      41: aload_1
      42: invokeinterface #97,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: aload_0
      48: aconst_null
      49: putfield      #90                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      52: return
    Exception table:
       from    to  target type
           0    32    35   Class java/lang/Exception

  public void registerJMX(org.apache.zookeeper.server.quorum.LeaderBean, org.apache.zookeeper.server.quorum.LocalPeerBean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       4: getfield      #98                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.jmxLeaderElectionBean:Lorg/apache/zookeeper/server/quorum/LeaderElectionBean;
       7: ifnull        46
      10: invokestatic  #91                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      13: aload_0
      14: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      17: getfield      #98                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.jmxLeaderElectionBean:Lorg/apache/zookeeper/server/quorum/LeaderElectionBean;
      20: invokevirtual #99                 // Method org/apache/zookeeper/jmx/MBeanRegistry.unregister:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      23: goto          38
      26: astore_3
      27: getstatic     #95                 // Field LOG:Lorg/slf4j/Logger;
      30: ldc           #96                 // String Failed to register with JMX
      32: aload_3
      33: invokeinterface #97,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      38: aload_0
      39: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
      42: aconst_null
      43: putfield      #98                 // Field org/apache/zookeeper/server/quorum/QuorumPeer.jmxLeaderElectionBean:Lorg/apache/zookeeper/server/quorum/LeaderElectionBean;
      46: aload_0
      47: aload_1
      48: putfield      #92                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      51: invokestatic  #91                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      54: aload_1
      55: aload_2
      56: invokevirtual #93                 // Method org/apache/zookeeper/jmx/MBeanRegistry.register:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      59: goto          79
      62: astore_3
      63: getstatic     #95                 // Field LOG:Lorg/slf4j/Logger;
      66: ldc           #96                 // String Failed to register with JMX
      68: aload_3
      69: invokeinterface #97,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: aload_0
      75: aconst_null
      76: putfield      #92                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      79: return
    Exception table:
       from    to  target type
          10    23    26   Class java/lang/Exception
          46    59    62   Class java/lang/Exception

  boolean registerJMX(org.apache.zookeeper.server.quorum.LearnerHandlerBean);
    Code:
       0: invokestatic  #91                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
       3: aload_1
       4: aload_0
       5: getfield      #92                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
       8: invokevirtual #93                 // Method org/apache/zookeeper/jmx/MBeanRegistry.register:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      11: iconst_1
      12: ireturn
      13: astore_2
      14: getstatic     #95                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #101                // String Could not register connection
      19: aload_2
      20: invokeinterface #97,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: iconst_0
      26: ireturn
    Exception table:
       from    to  target type
           0    12    13   Class javax/management/JMException

  protected void unregisterJMX();
    Code:
       0: aload_0
       1: getfield      #90                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
       4: ifnull        17
       7: invokestatic  #91                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      10: aload_0
      11: getfield      #90                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      14: invokevirtual #99                 // Method org/apache/zookeeper/jmx/MBeanRegistry.unregister:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      17: goto          32
      20: astore_1
      21: getstatic     #95                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #102                // String Failed to unregister with JMX
      26: aload_1
      27: invokeinterface #97,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: aload_0
      33: aconst_null
      34: putfield      #90                 // Field jmxDataTreeBean:Lorg/apache/zookeeper/server/DataTreeBean;
      37: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/Exception

  protected void unregisterJMX(org.apache.zookeeper.server.quorum.Leader);
    Code:
       0: aload_0
       1: getfield      #92                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
       4: ifnull        17
       7: invokestatic  #91                 // Method org/apache/zookeeper/jmx/MBeanRegistry.getInstance:()Lorg/apache/zookeeper/jmx/MBeanRegistry;
      10: aload_0
      11: getfield      #92                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      14: invokevirtual #99                 // Method org/apache/zookeeper/jmx/MBeanRegistry.unregister:(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
      17: goto          32
      20: astore_2
      21: getstatic     #95                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #102                // String Failed to unregister with JMX
      26: aload_2
      27: invokeinterface #97,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: aload_0
      33: aconst_null
      34: putfield      #92                 // Field jmxServerBean:Lorg/apache/zookeeper/server/ZooKeeperServerBean;
      37: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/Exception

  public java.lang.String getState();
    Code:
       0: ldc           #103                // String leader
       2: areturn

  public long getServerId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field self:Lorg/apache/zookeeper/server/quorum/QuorumPeer;
       4: invokevirtual #79                 // Method org/apache/zookeeper/server/quorum/QuorumPeer.getId:()J
       7: lreturn

  protected void revalidateSession(org.apache.zookeeper.server.ServerCnxn, long, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iload         4
       5: invokespecial #104                // Method org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.revalidateSession:(Lorg/apache/zookeeper/server/ServerCnxn;JI)V
       8: aload_0
       9: lload_2
      10: getstatic     #105                // Field org/apache/zookeeper/server/ServerCnxn.me:Ljava/lang/Object;
      13: invokevirtual #106                // Method setOwner:(JLjava/lang/Object;)V
      16: goto          21
      19: astore        5
      21: return
    Exception table:
       from    to  target type
           8    16    19   Class org/apache/zookeeper/KeeperException$SessionExpiredException

  private java.lang.Number lambda$registerMetrics$7();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getLeader:()Lorg/apache/zookeeper/server/quorum/Leader;
       4: invokevirtual #108                // Method org/apache/zookeeper/server/quorum/Leader.getProposalStats:()Lorg/apache/zookeeper/server/quorum/BufferStats;
       7: invokevirtual #109                // Method org/apache/zookeeper/server/quorum/BufferStats.getMinBufferSize:()I
      10: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: areturn

  private java.lang.Number lambda$registerMetrics$6();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getLeader:()Lorg/apache/zookeeper/server/quorum/Leader;
       4: invokevirtual #108                // Method org/apache/zookeeper/server/quorum/Leader.getProposalStats:()Lorg/apache/zookeeper/server/quorum/BufferStats;
       7: invokevirtual #111                // Method org/apache/zookeeper/server/quorum/BufferStats.getMaxBufferSize:()I
      10: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: areturn

  private java.lang.Number lambda$registerMetrics$5();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getLeader:()Lorg/apache/zookeeper/server/quorum/Leader;
       4: invokevirtual #108                // Method org/apache/zookeeper/server/quorum/Leader.getProposalStats:()Lorg/apache/zookeeper/server/quorum/BufferStats;
       7: invokevirtual #112                // Method org/apache/zookeeper/server/quorum/BufferStats.getLastBufferSize:()I
      10: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: areturn

  private java.lang.Number lambda$registerMetrics$4();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getLeader:()Lorg/apache/zookeeper/server/quorum/Leader;
       4: invokevirtual #113                // Method org/apache/zookeeper/server/quorum/Leader.getUptime:()J
       7: invokestatic  #114                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      10: areturn

  private java.lang.Number lambda$registerMetrics$3();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getLeader:()Lorg/apache/zookeeper/server/quorum/Leader;
       4: invokevirtual #115                // Method org/apache/zookeeper/server/quorum/Leader.getNumPendingSyncs:()I
       7: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: areturn

  private java.lang.Number lambda$registerMetrics$2();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getLeader:()Lorg/apache/zookeeper/server/quorum/Leader;
       4: invokevirtual #116                // Method org/apache/zookeeper/server/quorum/Leader.getNonVotingFollowers:()Ljava/util/List;
       7: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I
      12: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: areturn

  private java.lang.Number lambda$registerMetrics$1();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getLeader:()Lorg/apache/zookeeper/server/quorum/Leader;
       4: invokevirtual #118                // Method org/apache/zookeeper/server/quorum/Leader.getForwardingFollowers:()Ljava/util/List;
       7: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I
      12: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: areturn

  private java.lang.Number lambda$registerMetrics$0();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getLeader:()Lorg/apache/zookeeper/server/quorum/Leader;
       4: invokevirtual #119                // Method org/apache/zookeeper/server/quorum/Leader.getLearners:()Ljava/util/List;
       7: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I
      12: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: areturn
}
