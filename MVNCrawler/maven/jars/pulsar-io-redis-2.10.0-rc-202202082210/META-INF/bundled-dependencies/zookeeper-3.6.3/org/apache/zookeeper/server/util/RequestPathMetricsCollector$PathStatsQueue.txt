Compiled from "RequestPathMetricsCollector.java"
class org.apache.zookeeper.server.util.RequestPathMetricsCollector$PathStatsQueue {
  private final java.lang.String requestTypeName;

  private final java.util.concurrent.atomic.AtomicReference<java.util.concurrent.ConcurrentLinkedQueue<java.lang.String>> currentSlot;

  private final java.util.concurrent.LinkedBlockingQueue<java.util.Map<java.lang.String, java.lang.Integer>> requestPathStats;

  private final boolean isWriteOperation;

  final org.apache.zookeeper.server.util.RequestPathMetricsCollector this$0;

  public org.apache.zookeeper.server.util.RequestPathMetricsCollector$PathStatsQueue(org.apache.zookeeper.server.util.RequestPathMetricsCollector, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iload_2
      11: invokestatic  #4                  // Method org/apache/zookeeper/server/Request.op2String:(I)Ljava/lang/String;
      14: putfield      #5                  // Field requestTypeName:Ljava/lang/String;
      17: aload_0
      18: iload_2
      19: invokestatic  #6                  // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.isWriteOp:(I)Z
      22: putfield      #1                  // Field isWriteOperation:Z
      25: aload_0
      26: new           #7                  // class java/util/concurrent/LinkedBlockingQueue
      29: dup
      30: aload_1
      31: invokestatic  #8                  // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.access$000:(Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;)I
      34: invokespecial #9                  // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      37: putfield      #10                 // Field requestPathStats:Ljava/util/concurrent/LinkedBlockingQueue;
      40: aload_0
      41: new           #11                 // class java/util/concurrent/atomic/AtomicReference
      44: dup
      45: new           #12                 // class java/util/concurrent/ConcurrentLinkedQueue
      48: dup
      49: invokespecial #13                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      52: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      55: putfield      #15                 // Field currentSlot:Ljava/util/concurrent/atomic/AtomicReference;
      58: return

  public void registerRequest(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;
       4: invokestatic  #16                 // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.access$100:(Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;)Z
       7: ifne          11
      10: return
      11: aload_0
      12: getfield      #15                 // Field currentSlot:Ljava/util/concurrent/atomic/AtomicReference;
      15: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      18: checkcast     #12                 // class java/util/concurrent/ConcurrentLinkedQueue
      21: aload_1
      22: invokevirtual #18                 // Method java/util/concurrent/ConcurrentLinkedQueue.offer:(Ljava/lang/Object;)Z
      25: pop
      26: return

  java.util.concurrent.ConcurrentLinkedQueue<java.lang.String> getCurrentSlot();
    Code:
       0: aload_0
       1: getfield      #15                 // Field currentSlot:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #12                 // class java/util/concurrent/ConcurrentLinkedQueue
      10: areturn

  java.util.Map<java.lang.String, java.lang.Integer> mapReducePaths(int, java.util.Collection<java.lang.String>);
    Code:
       0: new           #19                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #20                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: astore_3
       8: aload_2
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #22,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      19: invokeinterface #23,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      24: iload_1
      25: aload_3
      26: invokedynamic #24,  0             // InvokeDynamic #1:accept:(ILjava/util/Map;)Ljava/util/function/Consumer;
      31: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      36: aload_3
      37: areturn

  public java.util.Map<java.lang.String, java.lang.Integer> collectStats(int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #15                 // Field currentSlot:Ljava/util/concurrent/atomic/AtomicReference;
       6: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       9: checkcast     #12                 // class java/util/concurrent/ConcurrentLinkedQueue
      12: iconst_0
      13: anewarray     #26                 // class java/lang/String
      16: invokevirtual #27                 // Method java/util/concurrent/ConcurrentLinkedQueue.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      19: invokestatic  #28                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      22: invokevirtual #29                 // Method mapReducePaths:(ILjava/util/Collection;)Ljava/util/Map;
      25: astore_3
      26: aload_0
      27: getfield      #2                  // Field this$0:Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;
      30: invokestatic  #30                 // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.access$200:(Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;)Z
      33: ifeq          43
      36: aload_0
      37: getfield      #10                 // Field requestPathStats:Ljava/util/concurrent/LinkedBlockingQueue;
      40: goto          50
      43: new           #31                 // class java/lang/Object
      46: dup
      47: invokespecial #3                  // Method java/lang/Object."<init>":()V
      50: dup
      51: astore        4
      53: monitorenter
      54: aload_0
      55: getfield      #10                 // Field requestPathStats:Ljava/util/concurrent/LinkedBlockingQueue;
      58: invokevirtual #32                 // Method java/util/concurrent/LinkedBlockingQueue.stream:()Ljava/util/stream/Stream;
      61: aload_3
      62: iload_1
      63: invokedynamic #33,  0             // InvokeDynamic #2:apply:(I)Ljava/util/function/BinaryOperator;
      68: invokeinterface #34,  3           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
      73: checkcast     #35                 // class java/util/Map
      76: astore_2
      77: aload         4
      79: monitorexit
      80: goto          91
      83: astore        5
      85: aload         4
      87: monitorexit
      88: aload         5
      90: athrow
      91: aload_2
      92: areturn
    Exception table:
       from    to  target type
          54    80    83   any
          83    88    83   any

  public void start();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;
       4: invokestatic  #16                 // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.access$100:(Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;)Z
       7: ifne          11
      10: return
      11: invokestatic  #36                 // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
      14: aload_0
      15: getfield      #2                  // Field this$0:Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;
      18: invokestatic  #37                 // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.access$300:(Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;)I
      21: invokevirtual #38                 // Method java/util/concurrent/ThreadLocalRandom.nextInt:(I)I
      24: istore_1
      25: aload_0
      26: getfield      #2                  // Field this$0:Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;
      29: invokestatic  #39                 // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.access$400:(Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;)Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      32: aload_0
      33: invokedynamic #40,  0             // InvokeDynamic #3:run:(Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector$PathStatsQueue;)Ljava/lang/Runnable;
      38: iload_1
      39: i2l
      40: aload_0
      41: getfield      #2                  // Field this$0:Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;
      44: invokestatic  #37                 // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.access$300:(Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;)I
      47: i2l
      48: getstatic     #41                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      51: invokevirtual #42                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      54: pop
      55: return

  boolean isWriteOperation();
    Code:
       0: aload_0
       1: getfield      #1                  // Field isWriteOperation:Z
       4: ireturn

  private void lambda$start$4();
    Code:
       0: aload_0
       1: getfield      #15                 // Field currentSlot:Ljava/util/concurrent/atomic/AtomicReference;
       4: new           #12                 // class java/util/concurrent/ConcurrentLinkedQueue
       7: dup
       8: invokespecial #13                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      11: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #12                 // class java/util/concurrent/ConcurrentLinkedQueue
      17: astore_1
      18: aload_0
      19: aload_0
      20: getfield      #2                  // Field this$0:Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;
      23: invokestatic  #44                 // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.access$500:(Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;)I
      26: aload_1
      27: invokevirtual #29                 // Method mapReducePaths:(ILjava/util/Collection;)Ljava/util/Map;
      30: astore_2
      31: aload_0
      32: getfield      #2                  // Field this$0:Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;
      35: invokestatic  #30                 // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.access$200:(Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;)Z
      38: ifeq          48
      41: aload_0
      42: getfield      #10                 // Field requestPathStats:Ljava/util/concurrent/LinkedBlockingQueue;
      45: goto          55
      48: new           #31                 // class java/lang/Object
      51: dup
      52: invokespecial #3                  // Method java/lang/Object."<init>":()V
      55: dup
      56: astore_3
      57: monitorenter
      58: aload_0
      59: getfield      #10                 // Field requestPathStats:Ljava/util/concurrent/LinkedBlockingQueue;
      62: invokevirtual #45                 // Method java/util/concurrent/LinkedBlockingQueue.remainingCapacity:()I
      65: ifgt          76
      68: aload_0
      69: getfield      #10                 // Field requestPathStats:Ljava/util/concurrent/LinkedBlockingQueue;
      72: invokevirtual #46                 // Method java/util/concurrent/LinkedBlockingQueue.poll:()Ljava/lang/Object;
      75: pop
      76: aload_0
      77: getfield      #10                 // Field requestPathStats:Ljava/util/concurrent/LinkedBlockingQueue;
      80: aload_2
      81: invokevirtual #47                 // Method java/util/concurrent/LinkedBlockingQueue.offer:(Ljava/lang/Object;)Z
      84: ifne          101
      87: invokestatic  #48                 // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.access$600:()Lorg/slf4j/Logger;
      90: ldc           #49                 // String Failed to insert the new request path stats for {}
      92: aload_0
      93: getfield      #5                  // Field requestTypeName:Ljava/lang/String;
      96: invokeinterface #50,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     101: aload_3
     102: monitorexit
     103: goto          113
     106: astore        4
     108: aload_3
     109: monitorexit
     110: aload         4
     112: athrow
     113: goto          132
     116: astore_2
     117: invokestatic  #48                 // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.access$600:()Lorg/slf4j/Logger;
     120: ldc           #52                 // String Failed to insert the new request path stats for {} with exception {}
     122: aload_0
     123: getfield      #5                  // Field requestTypeName:Ljava/lang/String;
     126: aload_2
     127: invokeinterface #53,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     132: return
    Exception table:
       from    to  target type
          58   103   106   any
         106   110   106   any
          18   113   116   Class java/lang/Exception

  private static java.util.Map lambda$collectStats$3(int, java.util.Map, java.util.Map);
    Code:
       0: aload_2
       1: iload_0
       2: aload_1
       3: invokedynamic #54,  0             // InvokeDynamic #4:accept:(ILjava/util/Map;)Ljava/util/function/BiConsumer;
       8: invokeinterface #55,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      13: aload_1
      14: areturn

  private static void lambda$null$2(int, java.util.Map, java.lang.String, java.lang.Integer);
    Code:
       0: aload_2
       1: iload_0
       2: invokestatic  #56                 // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.trimPathDepth:(Ljava/lang/String;I)Ljava/lang/String;
       5: astore        4
       7: aload_1
       8: aload         4
      10: aload_1
      11: aload         4
      13: iconst_0
      14: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: invokeinterface #58,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #59                 // class java/lang/Integer
      25: invokevirtual #60                 // Method java/lang/Integer.intValue:()I
      28: aload_3
      29: invokevirtual #60                 // Method java/lang/Integer.intValue:()I
      32: iadd
      33: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: invokeinterface #61,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: return

  private static void lambda$mapReducePaths$1(int, java.util.Map, java.lang.String);
    Code:
       0: aload_2
       1: iload_0
       2: invokestatic  #56                 // Method org/apache/zookeeper/server/util/RequestPathMetricsCollector.trimPathDepth:(Ljava/lang/String;I)Ljava/lang/String;
       5: astore_2
       6: aload_1
       7: aload_2
       8: aload_1
       9: aload_2
      10: iconst_0
      11: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokeinterface #58,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #59                 // class java/lang/Integer
      22: invokevirtual #60                 // Method java/lang/Integer.intValue:()I
      25: iconst_1
      26: iadd
      27: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: invokeinterface #61,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: return

  private static boolean lambda$mapReducePaths$0(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ireturn

  static boolean access$700(org.apache.zookeeper.server.util.RequestPathMetricsCollector$PathStatsQueue);
    Code:
       0: aload_0
       1: getfield      #1                  // Field isWriteOperation:Z
       4: ireturn
}
