Compiled from "HTTPServer.java"
class io.prometheus.client.exporter.HTTPServer$DaemonThreadFactory implements java.util.concurrent.ThreadFactory {
  private java.util.concurrent.ThreadFactory delegate;

  private final boolean daemon;

  io.prometheus.client.exporter.HTTPServer$DaemonThreadFactory(java.util.concurrent.ThreadFactory, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Ljava/util/concurrent/ThreadFactory;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field daemon:Z
      14: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljava/util/concurrent/ThreadFactory;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
      10: astore_2
      11: aload_2
      12: aload_0
      13: getfield      #3                  // Field daemon:Z
      16: invokevirtual #5                  // Method java/lang/Thread.setDaemon:(Z)V
      19: aload_2
      20: areturn

  static java.util.concurrent.ThreadFactory defaultThreadFactory(boolean);
    Code:
       0: new           #6                  // class io/prometheus/client/exporter/HTTPServer$DaemonThreadFactory
       3: dup
       4: invokestatic  #7                  // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       7: iload_0
       8: invokespecial #8                  // Method "<init>":(Ljava/util/concurrent/ThreadFactory;Z)V
      11: areturn
}
