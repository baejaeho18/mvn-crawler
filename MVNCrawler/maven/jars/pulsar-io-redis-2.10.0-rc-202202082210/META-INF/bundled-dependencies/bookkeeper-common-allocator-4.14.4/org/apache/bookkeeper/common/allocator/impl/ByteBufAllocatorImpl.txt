Compiled from "ByteBufAllocatorImpl.java"
public class org.apache.bookkeeper.common.allocator.impl.ByteBufAllocatorImpl extends io.netty.buffer.AbstractByteBufAllocator implements io.netty.buffer.ByteBufAllocator {
  private static final org.slf4j.Logger log;

  private static final int DEFAULT_INITIAL_CAPACITY;

  private static final int DEFAULT_MAX_CAPACITY;

  private final io.netty.buffer.ByteBufAllocator pooledAllocator;

  private final io.netty.buffer.ByteBufAllocator unpooledAllocator;

  private final org.apache.bookkeeper.common.allocator.PoolingPolicy poolingPolicy;

  private final org.apache.bookkeeper.common.allocator.OutOfMemoryPolicy outOfMemoryPolicy;

  private final java.util.function.Consumer<java.lang.OutOfMemoryError> outOfMemoryListener;

  org.apache.bookkeeper.common.allocator.impl.ByteBufAllocatorImpl(io.netty.buffer.ByteBufAllocator, io.netty.buffer.ByteBufAllocator, org.apache.bookkeeper.common.allocator.PoolingPolicy, int, org.apache.bookkeeper.common.allocator.OutOfMemoryPolicy, java.util.function.Consumer<java.lang.OutOfMemoryError>, org.apache.bookkeeper.common.allocator.LeakDetectionPolicy);
    Code:
       0: aload_0
       1: aload_3
       2: getstatic     #2                  // Field org/apache/bookkeeper/common/allocator/PoolingPolicy.PooledDirect:Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokespecial #3                  // Method io/netty/buffer/AbstractByteBufAllocator."<init>":(Z)V
      16: aload_0
      17: aload_3
      18: putfield      #4                  // Field poolingPolicy:Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field outOfMemoryPolicy:Lorg/apache/bookkeeper/common/allocator/OutOfMemoryPolicy;
      27: aload         6
      29: ifnonnull     44
      32: aload_0
      33: invokedynamic #6,  0              // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      38: putfield      #7                  // Field outOfMemoryListener:Ljava/util/function/Consumer;
      41: goto          50
      44: aload_0
      45: aload         6
      47: putfield      #7                  // Field outOfMemoryListener:Ljava/util/function/Consumer;
      50: aload_3
      51: getstatic     #2                  // Field org/apache/bookkeeper/common/allocator/PoolingPolicy.PooledDirect:Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;
      54: if_acmpne     121
      57: aload_1
      58: ifnonnull     113
      61: iload         4
      63: invokestatic  #8                  // Method io/netty/buffer/PooledByteBufAllocator.defaultNumDirectArena:()I
      66: if_icmpne     79
      69: aload_0
      70: getstatic     #9                  // Field io/netty/buffer/PooledByteBufAllocator.DEFAULT:Lio/netty/buffer/PooledByteBufAllocator;
      73: putfield      #10                 // Field pooledAllocator:Lio/netty/buffer/ByteBufAllocator;
      76: goto          126
      79: aload_0
      80: new           #11                 // class io/netty/buffer/PooledByteBufAllocator
      83: dup
      84: iconst_1
      85: iload         4
      87: iload         4
      89: invokestatic  #12                 // Method io/netty/buffer/PooledByteBufAllocator.defaultPageSize:()I
      92: invokestatic  #13                 // Method io/netty/buffer/PooledByteBufAllocator.defaultMaxOrder:()I
      95: invokestatic  #14                 // Method io/netty/buffer/PooledByteBufAllocator.defaultSmallCacheSize:()I
      98: invokestatic  #15                 // Method io/netty/buffer/PooledByteBufAllocator.defaultNormalCacheSize:()I
     101: invokestatic  #16                 // Method io/netty/buffer/PooledByteBufAllocator.defaultUseCacheForAllThreads:()Z
     104: invokespecial #17                 // Method io/netty/buffer/PooledByteBufAllocator."<init>":(ZIIIIIIZ)V
     107: putfield      #10                 // Field pooledAllocator:Lio/netty/buffer/ByteBufAllocator;
     110: goto          126
     113: aload_0
     114: aload_1
     115: putfield      #10                 // Field pooledAllocator:Lio/netty/buffer/ByteBufAllocator;
     118: goto          126
     121: aload_0
     122: aconst_null
     123: putfield      #10                 // Field pooledAllocator:Lio/netty/buffer/ByteBufAllocator;
     126: aload_0
     127: aload_2
     128: ifnull        135
     131: aload_2
     132: goto          138
     135: getstatic     #18                 // Field io/netty/buffer/UnpooledByteBufAllocator.DEFAULT:Lio/netty/buffer/UnpooledByteBufAllocator;
     138: putfield      #19                 // Field unpooledAllocator:Lio/netty/buffer/ByteBufAllocator;
     141: getstatic     #20                 // Field org/apache/bookkeeper/common/allocator/impl/ByteBufAllocatorImpl$1.$SwitchMap$org$apache$bookkeeper$common$allocator$LeakDetectionPolicy:[I
     144: aload         7
     146: invokevirtual #21                 // Method org/apache/bookkeeper/common/allocator/LeakDetectionPolicy.ordinal:()I
     149: iaload
     150: tableswitch   { // 1 to 4
                     1: 180
                     2: 210
                     3: 229
                     4: 248
               default: 264
          }
     180: getstatic     #22                 // Field log:Lorg/slf4j/Logger;
     183: invokeinterface #23,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     188: ifeq          201
     191: getstatic     #22                 // Field log:Lorg/slf4j/Logger;
     194: ldc           #24                 // String Disable Netty allocator leak detector
     196: invokeinterface #25,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     201: getstatic     #26                 // Field io/netty/util/ResourceLeakDetector$Level.DISABLED:Lio/netty/util/ResourceLeakDetector$Level;
     204: invokestatic  #27                 // Method io/netty/util/ResourceLeakDetector.setLevel:(Lio/netty/util/ResourceLeakDetector$Level;)V
     207: goto          264
     210: getstatic     #22                 // Field log:Lorg/slf4j/Logger;
     213: ldc           #28                 // String Setting Netty allocator leak detector to Simple
     215: invokeinterface #29,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     220: getstatic     #30                 // Field io/netty/util/ResourceLeakDetector$Level.SIMPLE:Lio/netty/util/ResourceLeakDetector$Level;
     223: invokestatic  #27                 // Method io/netty/util/ResourceLeakDetector.setLevel:(Lio/netty/util/ResourceLeakDetector$Level;)V
     226: goto          264
     229: getstatic     #22                 // Field log:Lorg/slf4j/Logger;
     232: ldc           #31                 // String Setting Netty allocator leak detector to Advanced
     234: invokeinterface #29,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     239: getstatic     #32                 // Field io/netty/util/ResourceLeakDetector$Level.ADVANCED:Lio/netty/util/ResourceLeakDetector$Level;
     242: invokestatic  #27                 // Method io/netty/util/ResourceLeakDetector.setLevel:(Lio/netty/util/ResourceLeakDetector$Level;)V
     245: goto          264
     248: getstatic     #22                 // Field log:Lorg/slf4j/Logger;
     251: ldc           #33                 // String Setting Netty allocator leak detector to Paranoid
     253: invokeinterface #29,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     258: getstatic     #34                 // Field io/netty/util/ResourceLeakDetector$Level.PARANOID:Lio/netty/util/ResourceLeakDetector$Level;
     261: invokestatic  #27                 // Method io/netty/util/ResourceLeakDetector.setLevel:(Lio/netty/util/ResourceLeakDetector$Level;)V
     264: return

  public io.netty.buffer.ByteBuf buffer();
    Code:
       0: aload_0
       1: sipush        256
       4: invokevirtual #36                 // Method buffer:(I)Lio/netty/buffer/ByteBuf;
       7: areturn

  public io.netty.buffer.ByteBuf buffer(int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #37                 // int 2147483647
       4: invokevirtual #38                 // Method buffer:(II)Lio/netty/buffer/ByteBuf;
       7: areturn

  public io.netty.buffer.ByteBuf buffer(int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field poolingPolicy:Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;
       4: getstatic     #2                  // Field org/apache/bookkeeper/common/allocator/PoolingPolicy.PooledDirect:Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;
       7: if_acmpne     18
      10: aload_0
      11: iload_1
      12: iload_2
      13: iconst_1
      14: invokespecial #39                 // Method newDirectBuffer:(IIZ)Lio/netty/buffer/ByteBuf;
      17: areturn
      18: aload_0
      19: iload_1
      20: iload_2
      21: invokevirtual #40                 // Method newHeapBuffer:(II)Lio/netty/buffer/ByteBuf;
      24: areturn

  protected io.netty.buffer.ByteBuf newHeapBuffer(int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field poolingPolicy:Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;
       4: getstatic     #2                  // Field org/apache/bookkeeper/common/allocator/PoolingPolicy.PooledDirect:Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;
       7: if_acmpne     17
      10: aload_0
      11: getfield      #10                 // Field pooledAllocator:Lio/netty/buffer/ByteBufAllocator;
      14: goto          21
      17: aload_0
      18: getfield      #19                 // Field unpooledAllocator:Lio/netty/buffer/ByteBufAllocator;
      21: astore_3
      22: aload_3
      23: iload_1
      24: iload_2
      25: invokeinterface #41,  3           // InterfaceMethod io/netty/buffer/ByteBufAllocator.heapBuffer:(II)Lio/netty/buffer/ByteBuf;
      30: areturn
      31: astore_3
      32: aload_0
      33: getfield      #7                  // Field outOfMemoryListener:Ljava/util/function/Consumer;
      36: aload_3
      37: invokeinterface #43,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      42: aload_3
      43: athrow
    Exception table:
       from    to  target type
           0    30    31   Class java/lang/OutOfMemoryError

  protected io.netty.buffer.ByteBuf newDirectBuffer(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #39                 // Method newDirectBuffer:(IIZ)Lio/netty/buffer/ByteBuf;
       7: areturn

  private io.netty.buffer.ByteBuf newDirectBuffer(int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field poolingPolicy:Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;
       4: getstatic     #2                  // Field org/apache/bookkeeper/common/allocator/PoolingPolicy.PooledDirect:Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;
       7: if_acmpne     80
      10: aload_0
      11: getfield      #10                 // Field pooledAllocator:Lio/netty/buffer/ByteBufAllocator;
      14: iload_1
      15: iload_2
      16: invokeinterface #44,  3           // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(II)Lio/netty/buffer/ByteBuf;
      21: areturn
      22: astore        4
      24: iload_3
      25: ifeq          66
      28: aload_0
      29: getfield      #5                  // Field outOfMemoryPolicy:Lorg/apache/bookkeeper/common/allocator/OutOfMemoryPolicy;
      32: getstatic     #45                 // Field org/apache/bookkeeper/common/allocator/OutOfMemoryPolicy.FallbackToHeap:Lorg/apache/bookkeeper/common/allocator/OutOfMemoryPolicy;
      35: if_acmpne     66
      38: aload_0
      39: getfield      #19                 // Field unpooledAllocator:Lio/netty/buffer/ByteBufAllocator;
      42: iload_1
      43: iload_2
      44: invokeinterface #41,  3           // InterfaceMethod io/netty/buffer/ByteBufAllocator.heapBuffer:(II)Lio/netty/buffer/ByteBuf;
      49: areturn
      50: astore        5
      52: aload_0
      53: getfield      #7                  // Field outOfMemoryListener:Ljava/util/function/Consumer;
      56: aload         5
      58: invokeinterface #43,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      63: aload         5
      65: athrow
      66: aload_0
      67: getfield      #7                  // Field outOfMemoryListener:Ljava/util/function/Consumer;
      70: aload         4
      72: invokeinterface #43,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      77: aload         4
      79: athrow
      80: aload_0
      81: getfield      #19                 // Field unpooledAllocator:Lio/netty/buffer/ByteBufAllocator;
      84: iload_1
      85: iload_2
      86: invokeinterface #44,  3           // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(II)Lio/netty/buffer/ByteBuf;
      91: areturn
      92: astore        4
      94: aload_0
      95: getfield      #7                  // Field outOfMemoryListener:Ljava/util/function/Consumer;
      98: aload         4
     100: invokeinterface #43,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
     105: aload         4
     107: athrow
    Exception table:
       from    to  target type
          10    21    22   Class java/lang/OutOfMemoryError
          38    49    50   Class java/lang/OutOfMemoryError
          80    91    92   Class java/lang/OutOfMemoryError

  public boolean isDirectBufferPooled();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pooledAllocator:Lio/netty/buffer/ByteBufAllocator;
       4: ifnull        23
       7: aload_0
       8: getfield      #10                 // Field pooledAllocator:Lio/netty/buffer/ByteBufAllocator;
      11: invokeinterface #46,  1           // InterfaceMethod io/netty/buffer/ByteBufAllocator.isDirectBufferPooled:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private static void lambda$new$0(java.lang.OutOfMemoryError);
    Code:
       0: getstatic     #22                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #47                 // String Unable to allocate memory
       5: aload_0
       6: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      11: return

  static {};
    Code:
       0: ldc           #35                 // class org/apache/bookkeeper/common/allocator/impl/ByteBufAllocatorImpl
       2: invokestatic  #49                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #22                 // Field log:Lorg/slf4j/Logger;
       8: return
}
