Compiled from "LeaseImpl.java"
final class io.etcd.jetcd.LeaseImpl implements io.etcd.jetcd.Lease {
  private static final org.slf4j.Logger LOG;

  private static final int FIRST_KEEPALIVE_TIMEOUT_MS;

  private final io.etcd.jetcd.ClientConnectionManager connectionManager;

  private final io.etcd.jetcd.api.LeaseGrpc$LeaseFutureStub stub;

  private final io.etcd.jetcd.api.LeaseGrpc$LeaseStub leaseStub;

  private final java.util.Map<java.lang.Long, io.etcd.jetcd.LeaseImpl$KeepAlive> keepAlives;

  private final com.google.common.util.concurrent.ListeningScheduledExecutorService scheduledExecutorService;

  private java.util.concurrent.ScheduledFuture<?> keepAliveFuture;

  private java.util.concurrent.ScheduledFuture<?> deadlineFuture;

  private io.grpc.stub.StreamObserver<io.etcd.jetcd.api.LeaseKeepAliveRequest> keepAliveRequestObserver;

  private io.grpc.stub.StreamObserver<io.etcd.jetcd.api.LeaseKeepAliveResponse> keepAliveResponseObserver;

  private volatile boolean hasKeepAliveServiceStarted;

  private volatile boolean closed;

  io.etcd.jetcd.LeaseImpl(io.etcd.jetcd.ClientConnectionManager);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field connectionManager:Lio/etcd/jetcd/ClientConnectionManager;
       9: aload_0
      10: aload_1
      11: invokedynamic #5,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      16: invokevirtual #6                  // Method io/etcd/jetcd/ClientConnectionManager.newStub:(Ljava/util/function/Function;)Lio/grpc/stub/AbstractStub;
      19: checkcast     #7                  // class io/etcd/jetcd/api/LeaseGrpc$LeaseFutureStub
      22: putfield      #8                  // Field stub:Lio/etcd/jetcd/api/LeaseGrpc$LeaseFutureStub;
      25: aload_0
      26: iconst_1
      27: aload_1
      28: invokedynamic #9,  0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      33: invokevirtual #6                  // Method io/etcd/jetcd/ClientConnectionManager.newStub:(Ljava/util/function/Function;)Lio/grpc/stub/AbstractStub;
      36: invokestatic  #10                 // Method io/etcd/jetcd/Util.applyRequireLeader:(ZLio/grpc/stub/AbstractStub;)Lio/grpc/stub/AbstractStub;
      39: checkcast     #11                 // class io/etcd/jetcd/api/LeaseGrpc$LeaseStub
      42: putfield      #12                 // Field leaseStub:Lio/etcd/jetcd/api/LeaseGrpc$LeaseStub;
      45: aload_0
      46: new           #13                 // class java/util/concurrent/ConcurrentHashMap
      49: dup
      50: invokespecial #14                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      53: putfield      #15                 // Field keepAlives:Ljava/util/Map;
      56: aload_0
      57: iconst_2
      58: invokestatic  #16                 // Method java/util/concurrent/Executors.newScheduledThreadPool:(I)Ljava/util/concurrent/ScheduledExecutorService;
      61: invokestatic  #17                 // Method com/google/common/util/concurrent/MoreExecutors.listeningDecorator:(Ljava/util/concurrent/ScheduledExecutorService;)Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
      64: putfield      #18                 // Field scheduledExecutorService:Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
      67: return

  public java.util.concurrent.CompletableFuture<io.etcd.jetcd.lease.LeaseGrantResponse> grant(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionManager:Lio/etcd/jetcd/ClientConnectionManager;
       4: aload_0
       5: lload_1
       6: invokedynamic #19,  0             // InvokeDynamic #2:call:(Lio/etcd/jetcd/LeaseImpl;J)Ljava/util/concurrent/Callable;
      11: invokedynamic #20,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      16: invokevirtual #21                 // Method io/etcd/jetcd/ClientConnectionManager.execute:(Ljava/util/concurrent/Callable;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      19: areturn

  public java.util.concurrent.CompletableFuture<io.etcd.jetcd.lease.LeaseGrantResponse> grant(long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionManager:Lio/etcd/jetcd/ClientConnectionManager;
       4: aload_0
       5: lload_3
       6: aload         5
       8: lload_1
       9: invokedynamic #22,  0             // InvokeDynamic #4:call:(Lio/etcd/jetcd/LeaseImpl;JLjava/util/concurrent/TimeUnit;J)Ljava/util/concurrent/Callable;
      14: invokedynamic #20,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      19: invokevirtual #21                 // Method io/etcd/jetcd/ClientConnectionManager.execute:(Ljava/util/concurrent/Callable;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      22: areturn

  public java.util.concurrent.CompletableFuture<io.etcd.jetcd.lease.LeaseRevokeResponse> revoke(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionManager:Lio/etcd/jetcd/ClientConnectionManager;
       4: aload_0
       5: lload_1
       6: invokedynamic #23,  0             // InvokeDynamic #5:call:(Lio/etcd/jetcd/LeaseImpl;J)Ljava/util/concurrent/Callable;
      11: invokedynamic #24,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      16: invokevirtual #21                 // Method io/etcd/jetcd/ClientConnectionManager.execute:(Ljava/util/concurrent/Callable;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      19: areturn

  public synchronized io.etcd.jetcd.support.CloseableClient keepAlive(long, io.grpc.stub.StreamObserver<io.etcd.jetcd.lease.LeaseKeepAliveResponse>);
    Code:
       0: aload_0
       1: getfield      #25                 // Field closed:Z
       4: ifeq          11
       7: invokestatic  #26                 // Method io/etcd/jetcd/common/exception/EtcdExceptionFactory.newClosedLeaseClientException:()Lio/etcd/jetcd/common/exception/ClosedClientException;
      10: athrow
      11: aload_0
      12: getfield      #15                 // Field keepAlives:Ljava/util/Map;
      15: lload_1
      16: invokestatic  #27                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: aload_0
      20: lload_1
      21: invokedynamic #28,  0             // InvokeDynamic #7:apply:(Lio/etcd/jetcd/LeaseImpl;J)Ljava/util/function/Function;
      26: invokeinterface #29,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      31: checkcast     #30                 // class io/etcd/jetcd/LeaseImpl$KeepAlive
      34: astore        4
      36: aload         4
      38: aload_3
      39: invokevirtual #31                 // Method io/etcd/jetcd/LeaseImpl$KeepAlive.addObserver:(Lio/grpc/stub/StreamObserver;)V
      42: aload_0
      43: getfield      #32                 // Field hasKeepAliveServiceStarted:Z
      46: ifne          58
      49: aload_0
      50: iconst_1
      51: putfield      #32                 // Field hasKeepAliveServiceStarted:Z
      54: aload_0
      55: invokespecial #33                 // Method start:()V
      58: new           #34                 // class io/etcd/jetcd/LeaseImpl$1
      61: dup
      62: aload_0
      63: aload         4
      65: aload_3
      66: invokespecial #35                 // Method io/etcd/jetcd/LeaseImpl$1."<init>":(Lio/etcd/jetcd/LeaseImpl;Lio/etcd/jetcd/LeaseImpl$KeepAlive;Lio/grpc/stub/StreamObserver;)V
      69: areturn

  public synchronized void close();
    Code:
       0: aload_0
       1: getfield      #25                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #25                 // Field closed:Z
      13: aload_0
      14: getfield      #32                 // Field hasKeepAliveServiceStarted:Z
      17: ifne          21
      20: return
      21: aload_0
      22: getfield      #36                 // Field keepAliveFuture:Ljava/util/concurrent/ScheduledFuture;
      25: iconst_1
      26: invokeinterface #37,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      31: pop
      32: aload_0
      33: getfield      #38                 // Field deadlineFuture:Ljava/util/concurrent/ScheduledFuture;
      36: iconst_1
      37: invokeinterface #37,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      42: pop
      43: aload_0
      44: getfield      #39                 // Field keepAliveRequestObserver:Lio/grpc/stub/StreamObserver;
      47: invokeinterface #40,  1           // InterfaceMethod io/grpc/stub/StreamObserver.onCompleted:()V
      52: aload_0
      53: getfield      #41                 // Field keepAliveResponseObserver:Lio/grpc/stub/StreamObserver;
      56: invokeinterface #40,  1           // InterfaceMethod io/grpc/stub/StreamObserver.onCompleted:()V
      61: aload_0
      62: getfield      #18                 // Field scheduledExecutorService:Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
      65: invokeinterface #42,  1           // InterfaceMethod com/google/common/util/concurrent/ListeningScheduledExecutorService.shutdownNow:()Ljava/util/List;
      70: pop
      71: invokestatic  #26                 // Method io/etcd/jetcd/common/exception/EtcdExceptionFactory.newClosedLeaseClientException:()Lio/etcd/jetcd/common/exception/ClosedClientException;
      74: astore_1
      75: aload_0
      76: getfield      #15                 // Field keepAlives:Ljava/util/Map;
      79: aload_1
      80: invokedynamic #43,  0             // InvokeDynamic #8:accept:(Ljava/lang/Throwable;)Ljava/util/function/BiConsumer;
      85: invokeinterface #44,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      90: aload_0
      91: getfield      #15                 // Field keepAlives:Ljava/util/Map;
      94: invokeinterface #45,  1           // InterfaceMethod java/util/Map.clear:()V
      99: return

  private synchronized void removeKeepAlive(long);
    Code:
       0: aload_0
       1: getfield      #15                 // Field keepAlives:Ljava/util/Map;
       4: lload_1
       5: invokestatic  #27                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokeinterface #46,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return

  private void start();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method sendKeepAliveExecutor:()V
       4: aload_0
       5: invokespecial #48                 // Method deadLineExecutor:()V
       8: return

  private void reset();
    Code:
       0: aload_0
       1: getfield      #36                 // Field keepAliveFuture:Ljava/util/concurrent/ScheduledFuture;
       4: iconst_1
       5: invokeinterface #37,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      10: pop
      11: aload_0
      12: getfield      #39                 // Field keepAliveRequestObserver:Lio/grpc/stub/StreamObserver;
      15: invokeinterface #40,  1           // InterfaceMethod io/grpc/stub/StreamObserver.onCompleted:()V
      20: aload_0
      21: getfield      #41                 // Field keepAliveResponseObserver:Lio/grpc/stub/StreamObserver;
      24: invokeinterface #40,  1           // InterfaceMethod io/grpc/stub/StreamObserver.onCompleted:()V
      29: aload_0
      30: invokespecial #47                 // Method sendKeepAliveExecutor:()V
      33: return

  private void sendKeepAliveExecutor();
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #49,  0             // InvokeDynamic #9:accept:(Lio/etcd/jetcd/LeaseImpl;)Ljava/util/function/Consumer;
       7: aload_0
       8: invokedynamic #50,  0             // InvokeDynamic #10:accept:(Lio/etcd/jetcd/LeaseImpl;)Ljava/util/function/Consumer;
      13: invokestatic  #51                 // Method io/etcd/jetcd/support/Observers.observer:(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lio/grpc/stub/StreamObserver;
      16: putfield      #41                 // Field keepAliveResponseObserver:Lio/grpc/stub/StreamObserver;
      19: aload_0
      20: aload_0
      21: getfield      #12                 // Field leaseStub:Lio/etcd/jetcd/api/LeaseGrpc$LeaseStub;
      24: aload_0
      25: getfield      #41                 // Field keepAliveResponseObserver:Lio/grpc/stub/StreamObserver;
      28: invokevirtual #52                 // Method io/etcd/jetcd/api/LeaseGrpc$LeaseStub.leaseKeepAlive:(Lio/grpc/stub/StreamObserver;)Lio/grpc/stub/StreamObserver;
      31: putfield      #39                 // Field keepAliveRequestObserver:Lio/grpc/stub/StreamObserver;
      34: aload_0
      35: aload_0
      36: getfield      #18                 // Field scheduledExecutorService:Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
      39: aload_0
      40: invokedynamic #53,  0             // InvokeDynamic #11:run:(Lio/etcd/jetcd/LeaseImpl;)Ljava/lang/Runnable;
      45: lconst_0
      46: ldc2_w        #54                 // long 500l
      49: getstatic     #56                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      52: invokeinterface #57,  7           // InterfaceMethod com/google/common/util/concurrent/ListeningScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lcom/google/common/util/concurrent/ListenableScheduledFuture;
      57: putfield      #36                 // Field keepAliveFuture:Ljava/util/concurrent/ScheduledFuture;
      60: return

  private synchronized void processOnError();
    Code:
       0: aload_0
       1: getfield      #25                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #18                 // Field scheduledExecutorService:Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
      12: aload_0
      13: invokedynamic #58,  0             // InvokeDynamic #12:run:(Lio/etcd/jetcd/LeaseImpl;)Ljava/lang/Runnable;
      18: ldc2_w        #54                 // long 500l
      21: getstatic     #56                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      24: invokeinterface #59,  5           // InterfaceMethod com/google/common/util/concurrent/ListeningScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lcom/google/common/util/concurrent/ListenableScheduledFuture;
      29: new           #60                 // class io/etcd/jetcd/LeaseImpl$2
      32: dup
      33: aload_0
      34: invokespecial #61                 // Method io/etcd/jetcd/LeaseImpl$2."<init>":(Lio/etcd/jetcd/LeaseImpl;)V
      37: aload_0
      38: getfield      #18                 // Field scheduledExecutorService:Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
      41: invokestatic  #62                 // Method com/google/common/util/concurrent/Futures.addCallback:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/FutureCallback;Ljava/util/concurrent/Executor;)V
      44: return

  private synchronized void processKeepAliveResponse(io.etcd.jetcd.api.LeaseKeepAliveResponse);
    Code:
       0: aload_0
       1: getfield      #25                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_1
       9: invokevirtual #63                 // Method io/etcd/jetcd/api/LeaseKeepAliveResponse.getID:()J
      12: lstore_2
      13: aload_1
      14: invokevirtual #64                 // Method io/etcd/jetcd/api/LeaseKeepAliveResponse.getTTL:()J
      17: lstore        4
      19: aload_0
      20: getfield      #15                 // Field keepAlives:Ljava/util/Map;
      23: lload_2
      24: invokestatic  #27                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      27: invokeinterface #65,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #30                 // class io/etcd/jetcd/LeaseImpl$KeepAlive
      35: astore        6
      37: aload         6
      39: ifnonnull     43
      42: return
      43: lload         4
      45: lconst_0
      46: lcmp
      47: ifle          97
      50: invokestatic  #66                 // Method java/lang/System.currentTimeMillis:()J
      53: lload         4
      55: ldc2_w        #67                 // long 1000l
      58: lmul
      59: ldc2_w        #69                 // long 3l
      62: ldiv
      63: ladd
      64: lstore        7
      66: aload         6
      68: lload         7
      70: invokevirtual #71                 // Method io/etcd/jetcd/LeaseImpl$KeepAlive.setNextKeepAlive:(J)V
      73: aload         6
      75: invokestatic  #66                 // Method java/lang/System.currentTimeMillis:()J
      78: lload         4
      80: ldc2_w        #67                 // long 1000l
      83: lmul
      84: ladd
      85: invokevirtual #72                 // Method io/etcd/jetcd/LeaseImpl$KeepAlive.setDeadLine:(J)V
      88: aload         6
      90: aload_1
      91: invokevirtual #73                 // Method io/etcd/jetcd/LeaseImpl$KeepAlive.onNext:(Lio/etcd/jetcd/api/LeaseKeepAliveResponse;)V
      94: goto          115
      97: aload_0
      98: lload_2
      99: invokespecial #1                  // Method removeKeepAlive:(J)V
     102: aload         6
     104: getstatic     #74                 // Field io/etcd/jetcd/common/exception/ErrorCode.NOT_FOUND:Lio/etcd/jetcd/common/exception/ErrorCode;
     107: ldc           #75                 // String etcdserver: requested lease not found
     109: invokestatic  #76                 // Method io/etcd/jetcd/common/exception/EtcdExceptionFactory.newEtcdException:(Lio/etcd/jetcd/common/exception/ErrorCode;Ljava/lang/String;)Lio/etcd/jetcd/common/exception/EtcdException;
     112: invokevirtual #77                 // Method io/etcd/jetcd/LeaseImpl$KeepAlive.onError:(Ljava/lang/Throwable;)V
     115: return

  private void deadLineExecutor();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field scheduledExecutorService:Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
       5: aload_0
       6: invokedynamic #78,  0             // InvokeDynamic #13:run:(Lio/etcd/jetcd/LeaseImpl;)Ljava/lang/Runnable;
      11: lconst_0
      12: ldc2_w        #67                 // long 1000l
      15: getstatic     #56                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokeinterface #57,  7           // InterfaceMethod com/google/common/util/concurrent/ListeningScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lcom/google/common/util/concurrent/ListenableScheduledFuture;
      23: putfield      #38                 // Field deadlineFuture:Ljava/util/concurrent/ScheduledFuture;
      26: return

  public java.util.concurrent.CompletableFuture<io.etcd.jetcd.lease.LeaseKeepAliveResponse> keepAliveOnce(long);
    Code:
       0: new           #79                 // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #80                 // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #12                 // Field leaseStub:Lio/etcd/jetcd/api/LeaseGrpc$LeaseStub;
      12: dup
      13: invokevirtual #81                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: pop
      17: invokedynamic #82,  0             // InvokeDynamic #14:apply:(Lio/etcd/jetcd/api/LeaseGrpc$LeaseStub;)Ljava/util/function/Function;
      22: aload_3
      23: invokedynamic #83,  0             // InvokeDynamic #15:accept:(Ljava/util/concurrent/CompletableFuture;)Ljava/util/function/Consumer;
      28: aload_3
      29: invokedynamic #84,  0             // InvokeDynamic #16:accept:(Ljava/util/concurrent/CompletableFuture;)Ljava/util/function/Consumer;
      34: invokestatic  #85                 // Method io/etcd/jetcd/support/Observers.observe:(Ljava/util/function/Function;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lio/grpc/stub/StreamObserver;
      37: astore        4
      39: aload_3
      40: aload         4
      42: invokedynamic #86,  0             // InvokeDynamic #17:accept:(Lio/grpc/stub/StreamObserver;)Ljava/util/function/BiConsumer;
      47: aload_0
      48: getfield      #4                  // Field connectionManager:Lio/etcd/jetcd/ClientConnectionManager;
      51: invokevirtual #87                 // Method io/etcd/jetcd/ClientConnectionManager.getExecutorService:()Ljava/util/concurrent/ExecutorService;
      54: invokevirtual #88                 // Method java/util/concurrent/CompletableFuture.whenCompleteAsync:(Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      57: astore        5
      59: aload         4
      61: invokestatic  #89                 // Method io/etcd/jetcd/api/LeaseKeepAliveRequest.newBuilder:()Lio/etcd/jetcd/api/LeaseKeepAliveRequest$Builder;
      64: lload_1
      65: invokevirtual #90                 // Method io/etcd/jetcd/api/LeaseKeepAliveRequest$Builder.setID:(J)Lio/etcd/jetcd/api/LeaseKeepAliveRequest$Builder;
      68: invokevirtual #91                 // Method io/etcd/jetcd/api/LeaseKeepAliveRequest$Builder.build:()Lio/etcd/jetcd/api/LeaseKeepAliveRequest;
      71: invokeinterface #92,  2           // InterfaceMethod io/grpc/stub/StreamObserver.onNext:(Ljava/lang/Object;)V
      76: aload         5
      78: areturn

  public java.util.concurrent.CompletableFuture<io.etcd.jetcd.lease.LeaseTimeToLiveResponse> timeToLive(long, io.etcd.jetcd.options.LeaseOption);
    Code:
       0: aload_3
       1: ldc           #93                 // String LeaseOption should not be null
       3: invokestatic  #94                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: invokestatic  #95                 // Method io/etcd/jetcd/api/LeaseTimeToLiveRequest.newBuilder:()Lio/etcd/jetcd/api/LeaseTimeToLiveRequest$Builder;
      10: lload_1
      11: invokevirtual #96                 // Method io/etcd/jetcd/api/LeaseTimeToLiveRequest$Builder.setID:(J)Lio/etcd/jetcd/api/LeaseTimeToLiveRequest$Builder;
      14: aload_3
      15: invokevirtual #97                 // Method io/etcd/jetcd/options/LeaseOption.isAttachedKeys:()Z
      18: invokevirtual #98                 // Method io/etcd/jetcd/api/LeaseTimeToLiveRequest$Builder.setKeys:(Z)Lio/etcd/jetcd/api/LeaseTimeToLiveRequest$Builder;
      21: invokevirtual #99                 // Method io/etcd/jetcd/api/LeaseTimeToLiveRequest$Builder.build:()Lio/etcd/jetcd/api/LeaseTimeToLiveRequest;
      24: astore        4
      26: aload_0
      27: getfield      #4                  // Field connectionManager:Lio/etcd/jetcd/ClientConnectionManager;
      30: aload_0
      31: aload         4
      33: invokedynamic #100,  0            // InvokeDynamic #18:call:(Lio/etcd/jetcd/LeaseImpl;Lio/etcd/jetcd/api/LeaseTimeToLiveRequest;)Ljava/util/concurrent/Callable;
      38: invokedynamic #101,  0            // InvokeDynamic #19:apply:()Ljava/util/function/Function;
      43: invokevirtual #21                 // Method io/etcd/jetcd/ClientConnectionManager.execute:(Ljava/util/concurrent/Callable;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      46: areturn

  private com.google.common.util.concurrent.ListenableFuture lambda$timeToLive$14(io.etcd.jetcd.api.LeaseTimeToLiveRequest) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field stub:Lio/etcd/jetcd/api/LeaseGrpc$LeaseFutureStub;
       4: aload_1
       5: invokevirtual #102                // Method io/etcd/jetcd/api/LeaseGrpc$LeaseFutureStub.leaseTimeToLive:(Lio/etcd/jetcd/api/LeaseTimeToLiveRequest;)Lcom/google/common/util/concurrent/ListenableFuture;
       8: areturn

  private static void lambda$keepAliveOnce$13(io.grpc.stub.StreamObserver, io.etcd.jetcd.lease.LeaseKeepAliveResponse, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokeinterface #40,  1           // InterfaceMethod io/grpc/stub/StreamObserver.onCompleted:()V
       6: return

  private static void lambda$keepAliveOnce$12(java.util.concurrent.CompletableFuture, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // Method io/etcd/jetcd/common/exception/EtcdExceptionFactory.toEtcdException:(Ljava/lang/Throwable;)Lio/etcd/jetcd/common/exception/EtcdException;
       5: invokevirtual #104                // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
       8: pop
       9: return

  private static void lambda$keepAliveOnce$11(java.util.concurrent.CompletableFuture, io.etcd.jetcd.api.LeaseKeepAliveResponse);
    Code:
       0: aload_0
       1: new           #105                // class io/etcd/jetcd/lease/LeaseKeepAliveResponse
       4: dup
       5: aload_1
       6: invokespecial #106                // Method io/etcd/jetcd/lease/LeaseKeepAliveResponse."<init>":(Lio/etcd/jetcd/api/LeaseKeepAliveResponse;)V
       9: invokevirtual #107                // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      12: pop
      13: return

  private void lambda$deadLineExecutor$10();
    Code:
       0: invokestatic  #66                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: aload_0
       5: getfield      #15                 // Field keepAlives:Ljava/util/Map;
       8: invokeinterface #108,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: lload_1
      14: invokedynamic #109,  0            // InvokeDynamic #20:test:(J)Ljava/util/function/Predicate;
      19: invokeinterface #110,  2          // InterfaceMethod java/util/Collection.removeIf:(Ljava/util/function/Predicate;)Z
      24: pop
      25: return

  private static boolean lambda$null$9(long, io.etcd.jetcd.LeaseImpl$KeepAlive);
    Code:
       0: aload_2
       1: invokevirtual #111                // Method io/etcd/jetcd/LeaseImpl$KeepAlive.getDeadLine:()J
       4: lload_0
       5: lcmp
       6: ifge          15
       9: aload_2
      10: invokevirtual #112                // Method io/etcd/jetcd/LeaseImpl$KeepAlive.onCompleted:()V
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  private void lambda$sendKeepAliveExecutor$8();
    Code:
       0: aload_0
       1: getfield      #15                 // Field keepAlives:Ljava/util/Map;
       4: invokeinterface #113,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #114,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #115,  0            // InvokeDynamic #21:test:()Ljava/util/function/Predicate;
      19: invokeinterface #116,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      24: invokedynamic #117,  0            // InvokeDynamic #22:apply:()Ljava/util/function/Function;
      29: invokeinterface #118,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      34: invokedynamic #119,  0            // InvokeDynamic #23:apply:()Ljava/util/function/Function;
      39: invokeinterface #118,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      44: aload_0
      45: getfield      #39                 // Field keepAliveRequestObserver:Lio/grpc/stub/StreamObserver;
      48: dup
      49: invokevirtual #81                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      52: pop
      53: invokedynamic #120,  0            // InvokeDynamic #24:accept:(Lio/grpc/stub/StreamObserver;)Ljava/util/function/Consumer;
      58: invokeinterface #121,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      63: return

  private static io.etcd.jetcd.api.LeaseKeepAliveRequest lambda$null$7(java.lang.Long);
    Code:
       0: invokestatic  #89                 // Method io/etcd/jetcd/api/LeaseKeepAliveRequest.newBuilder:()Lio/etcd/jetcd/api/LeaseKeepAliveRequest$Builder;
       3: aload_0
       4: invokevirtual #122                // Method java/lang/Long.longValue:()J
       7: invokevirtual #90                 // Method io/etcd/jetcd/api/LeaseKeepAliveRequest$Builder.setID:(J)Lio/etcd/jetcd/api/LeaseKeepAliveRequest$Builder;
      10: invokevirtual #91                 // Method io/etcd/jetcd/api/LeaseKeepAliveRequest$Builder.build:()Lio/etcd/jetcd/api/LeaseKeepAliveRequest;
      13: areturn

  private static boolean lambda$null$6(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokeinterface #123,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       6: checkcast     #30                 // class io/etcd/jetcd/LeaseImpl$KeepAlive
       9: invokevirtual #124                // Method io/etcd/jetcd/LeaseImpl$KeepAlive.getNextKeepAlive:()J
      12: invokestatic  #66                 // Method java/lang/System.currentTimeMillis:()J
      15: lcmp
      16: ifge          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private void lambda$sendKeepAliveExecutor$5(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #125                // Method processOnError:()V
       4: return

  private static void lambda$close$4(java.lang.Throwable, java.lang.Long, io.etcd.jetcd.LeaseImpl$KeepAlive);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #77                 // Method io/etcd/jetcd/LeaseImpl$KeepAlive.onError:(Ljava/lang/Throwable;)V
       5: return

  private io.etcd.jetcd.LeaseImpl$KeepAlive lambda$keepAlive$3(long, java.lang.Long);
    Code:
       0: new           #30                 // class io/etcd/jetcd/LeaseImpl$KeepAlive
       3: dup
       4: aload_0
       5: lload_1
       6: invokespecial #126                // Method io/etcd/jetcd/LeaseImpl$KeepAlive."<init>":(Lio/etcd/jetcd/LeaseImpl;J)V
       9: areturn

  private com.google.common.util.concurrent.ListenableFuture lambda$revoke$2(long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field stub:Lio/etcd/jetcd/api/LeaseGrpc$LeaseFutureStub;
       4: invokestatic  #127                // Method io/etcd/jetcd/api/LeaseRevokeRequest.newBuilder:()Lio/etcd/jetcd/api/LeaseRevokeRequest$Builder;
       7: lload_1
       8: invokevirtual #128                // Method io/etcd/jetcd/api/LeaseRevokeRequest$Builder.setID:(J)Lio/etcd/jetcd/api/LeaseRevokeRequest$Builder;
      11: invokevirtual #129                // Method io/etcd/jetcd/api/LeaseRevokeRequest$Builder.build:()Lio/etcd/jetcd/api/LeaseRevokeRequest;
      14: invokevirtual #130                // Method io/etcd/jetcd/api/LeaseGrpc$LeaseFutureStub.leaseRevoke:(Lio/etcd/jetcd/api/LeaseRevokeRequest;)Lcom/google/common/util/concurrent/ListenableFuture;
      17: areturn

  private com.google.common.util.concurrent.ListenableFuture lambda$grant$1(long, java.util.concurrent.TimeUnit, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field stub:Lio/etcd/jetcd/api/LeaseGrpc$LeaseFutureStub;
       4: lload_1
       5: aload_3
       6: invokevirtual #131                // Method io/etcd/jetcd/api/LeaseGrpc$LeaseFutureStub.withDeadlineAfter:(JLjava/util/concurrent/TimeUnit;)Lio/grpc/stub/AbstractStub;
       9: checkcast     #7                  // class io/etcd/jetcd/api/LeaseGrpc$LeaseFutureStub
      12: invokestatic  #132                // Method io/etcd/jetcd/api/LeaseGrantRequest.newBuilder:()Lio/etcd/jetcd/api/LeaseGrantRequest$Builder;
      15: lload         4
      17: invokevirtual #133                // Method io/etcd/jetcd/api/LeaseGrantRequest$Builder.setTTL:(J)Lio/etcd/jetcd/api/LeaseGrantRequest$Builder;
      20: invokevirtual #134                // Method io/etcd/jetcd/api/LeaseGrantRequest$Builder.build:()Lio/etcd/jetcd/api/LeaseGrantRequest;
      23: invokevirtual #135                // Method io/etcd/jetcd/api/LeaseGrpc$LeaseFutureStub.leaseGrant:(Lio/etcd/jetcd/api/LeaseGrantRequest;)Lcom/google/common/util/concurrent/ListenableFuture;
      26: areturn

  private com.google.common.util.concurrent.ListenableFuture lambda$grant$0(long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field stub:Lio/etcd/jetcd/api/LeaseGrpc$LeaseFutureStub;
       4: invokestatic  #132                // Method io/etcd/jetcd/api/LeaseGrantRequest.newBuilder:()Lio/etcd/jetcd/api/LeaseGrantRequest$Builder;
       7: lload_1
       8: invokevirtual #133                // Method io/etcd/jetcd/api/LeaseGrantRequest$Builder.setTTL:(J)Lio/etcd/jetcd/api/LeaseGrantRequest$Builder;
      11: invokevirtual #134                // Method io/etcd/jetcd/api/LeaseGrantRequest$Builder.build:()Lio/etcd/jetcd/api/LeaseGrantRequest;
      14: invokevirtual #135                // Method io/etcd/jetcd/api/LeaseGrpc$LeaseFutureStub.leaseGrant:(Lio/etcd/jetcd/api/LeaseGrantRequest;)Lcom/google/common/util/concurrent/ListenableFuture;
      17: areturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static void access$100(io.etcd.jetcd.LeaseImpl, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #1                  // Method removeKeepAlive:(J)V
       5: return

  static {};
    Code:
       0: ldc           #136                // class io/etcd/jetcd/LeaseImpl
       2: invokestatic  #137                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
