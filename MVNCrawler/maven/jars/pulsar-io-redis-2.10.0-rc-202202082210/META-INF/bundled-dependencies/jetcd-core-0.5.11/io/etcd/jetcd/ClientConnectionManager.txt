Compiled from "ClientConnectionManager.java"
final class io.etcd.jetcd.ClientConnectionManager {
  private static final org.slf4j.Logger LOGGER;

  private final java.lang.Object lock;

  private final io.etcd.jetcd.ClientBuilder builder;

  private final java.util.concurrent.ExecutorService executorService;

  private final io.etcd.jetcd.auth.AuthInterceptor authInterceptor;

  private volatile io.grpc.ManagedChannel managedChannel;

  io.etcd.jetcd.ClientConnectionManager(io.etcd.jetcd.ClientBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #2                  // Method "<init>":(Lio/etcd/jetcd/ClientBuilder;Lio/grpc/ManagedChannel;)V
       6: return

  io.etcd.jetcd.ClientConnectionManager(io.etcd.jetcd.ClientBuilder, io.grpc.ManagedChannel);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/lang/Object
       8: dup
       9: invokespecial #3                  // Method java/lang/Object."<init>":()V
      12: putfield      #5                  // Field lock:Ljava/lang/Object;
      15: aload_0
      16: aload_1
      17: putfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
      20: aload_0
      21: new           #6                  // class io/etcd/jetcd/auth/AuthInterceptor
      24: dup
      25: aload_1
      26: invokespecial #7                  // Method io/etcd/jetcd/auth/AuthInterceptor."<init>":(Lio/etcd/jetcd/ClientBuilder;)V
      29: putfield      #8                  // Field authInterceptor:Lio/etcd/jetcd/auth/AuthInterceptor;
      32: aload_0
      33: aload_2
      34: putfield      #9                  // Field managedChannel:Lio/grpc/ManagedChannel;
      37: aload_1
      38: invokevirtual #10                 // Method io/etcd/jetcd/ClientBuilder.executorService:()Ljava/util/concurrent/ExecutorService;
      41: ifnonnull     54
      44: aload_0
      45: invokestatic  #11                 // Method java/util/concurrent/Executors.newCachedThreadPool:()Ljava/util/concurrent/ExecutorService;
      48: putfield      #12                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      51: goto          62
      54: aload_0
      55: aload_1
      56: invokevirtual #10                 // Method io/etcd/jetcd/ClientBuilder.executorService:()Ljava/util/concurrent/ExecutorService;
      59: putfield      #12                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      62: return

  io.grpc.ManagedChannel getChannel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field managedChannel:Lio/grpc/ManagedChannel;
       4: ifnonnull     42
       7: aload_0
       8: getfield      #5                  // Field lock:Ljava/lang/Object;
      11: dup
      12: astore_1
      13: monitorenter
      14: aload_0
      15: getfield      #9                  // Field managedChannel:Lio/grpc/ManagedChannel;
      18: ifnonnull     32
      21: aload_0
      22: aload_0
      23: invokevirtual #13                 // Method defaultChannelBuilder:()Lio/grpc/ManagedChannelBuilder;
      26: invokevirtual #14                 // Method io/grpc/ManagedChannelBuilder.build:()Lio/grpc/ManagedChannel;
      29: putfield      #9                  // Field managedChannel:Lio/grpc/ManagedChannel;
      32: aload_1
      33: monitorexit
      34: goto          42
      37: astore_2
      38: aload_1
      39: monitorexit
      40: aload_2
      41: athrow
      42: aload_0
      43: getfield      #9                  // Field managedChannel:Lio/grpc/ManagedChannel;
      46: areturn
    Exception table:
       from    to  target type
          14    34    37   any
          37    40    37   any

  io.etcd.jetcd.ByteSequence getNamespace();
    Code:
       0: aload_0
       1: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
       4: invokevirtual #15                 // Method io/etcd/jetcd/ClientBuilder.namespace:()Lio/etcd/jetcd/ByteSequence;
       7: areturn

  java.util.concurrent.ExecutorService getExecutorService();
    Code:
       0: aload_0
       1: getfield      #12                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: areturn

  io.etcd.jetcd.auth.AuthInterceptor authInterceptor();
    Code:
       0: aload_0
       1: getfield      #8                  // Field authInterceptor:Lio/etcd/jetcd/auth/AuthInterceptor;
       4: areturn

  <T extends io.grpc.stub.AbstractStub<T>> T newStub(java.util.function.Function<io.grpc.ManagedChannel, T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #16                 // Method getChannel:()Lio/grpc/ManagedChannel;
       6: invokespecial #17                 // Method newStub:(Ljava/util/function/Function;Lio/grpc/ManagedChannel;)Lio/grpc/stub/AbstractStub;
       9: areturn

  private <T extends io.grpc.stub.AbstractStub<T>> T newStub(java.util.function.Function<io.grpc.ManagedChannel, T>, io.grpc.ManagedChannel);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #18,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #19                 // class io/grpc/stub/AbstractStub
      10: astore_3
      11: aload_0
      12: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
      15: invokevirtual #20                 // Method io/etcd/jetcd/ClientBuilder.waitForReady:()Z
      18: ifeq          26
      21: aload_3
      22: invokevirtual #21                 // Method io/grpc/stub/AbstractStub.withWaitForReady:()Lio/grpc/stub/AbstractStub;
      25: areturn
      26: aload_3
      27: areturn

  void close();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field managedChannel:Lio/grpc/ManagedChannel;
      11: ifnull        22
      14: aload_0
      15: getfield      #9                  // Field managedChannel:Lio/grpc/ManagedChannel;
      18: invokevirtual #22                 // Method io/grpc/ManagedChannel.shutdownNow:()Lio/grpc/ManagedChannel;
      21: pop
      22: aload_1
      23: monitorexit
      24: goto          32
      27: astore_2
      28: aload_1
      29: monitorexit
      30: aload_2
      31: athrow
      32: aload_0
      33: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
      36: invokevirtual #10                 // Method io/etcd/jetcd/ClientBuilder.executorService:()Ljava/util/concurrent/ExecutorService;
      39: ifnonnull     52
      42: aload_0
      43: getfield      #12                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      46: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
      51: pop
      52: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    30    27   any

  <T extends io.grpc.stub.AbstractStub<T>, R> java.util.concurrent.CompletableFuture<R> withNewChannel(java.net.URI, java.util.function.Function<io.grpc.ManagedChannel, T>, java.util.function.Function<T, java.util.concurrent.CompletableFuture<R>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       5: invokevirtual #25                 // Method defaultChannelBuilder:(Ljava/util/Collection;)Lio/grpc/ManagedChannelBuilder;
       8: invokevirtual #14                 // Method io/grpc/ManagedChannelBuilder.build:()Lio/grpc/ManagedChannel;
      11: astore        4
      13: aload_0
      14: aload_2
      15: aload         4
      17: invokespecial #17                 // Method newStub:(Ljava/util/function/Function;Lio/grpc/ManagedChannel;)Lio/grpc/stub/AbstractStub;
      20: astore        5
      22: aload_3
      23: aload         5
      25: invokeinterface #18,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #26                 // class java/util/concurrent/CompletableFuture
      33: aload         4
      35: invokedynamic #27,  0             // InvokeDynamic #0:accept:(Lio/grpc/ManagedChannel;)Ljava/util/function/BiConsumer;
      40: invokevirtual #28                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      43: areturn
      44: astore        6
      46: aload         4
      48: invokevirtual #30                 // Method io/grpc/ManagedChannel.shutdown:()Lio/grpc/ManagedChannel;
      51: pop
      52: aload         6
      54: invokestatic  #31                 // Method io/etcd/jetcd/common/exception/EtcdExceptionFactory.toEtcdException:(Ljava/lang/Throwable;)Lio/etcd/jetcd/common/exception/EtcdException;
      57: athrow
    Exception table:
       from    to  target type
          22    43    44   Class java/lang/Exception

  protected io.grpc.ManagedChannelBuilder<?> defaultChannelBuilder();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
       5: invokevirtual #32                 // Method io/etcd/jetcd/ClientBuilder.endpoints:()Ljava/util/Collection;
       8: invokevirtual #25                 // Method defaultChannelBuilder:(Ljava/util/Collection;)Lio/grpc/ManagedChannelBuilder;
      11: areturn

  protected io.grpc.ManagedChannelBuilder<?> defaultChannelBuilder(java.util.Collection<java.net.URI>);
    Code:
       0: aload_1
       1: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
       6: ifeq          19
       9: new           #34                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #35                 // String At least one endpoint should be provided
      15: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
      23: invokevirtual #37                 // Method io/etcd/jetcd/ClientBuilder.discovery:()Z
      26: ifeq          75
      29: aload_1
      30: invokeinterface #38,  1           // InterfaceMethod java/util/Collection.size:()I
      35: iconst_1
      36: if_icmpeq     49
      39: new           #34                 // class java/lang/IllegalArgumentException
      42: dup
      43: ldc           #39                 // String When configured for discovery, there should be only a single endpoint
      45: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: ldc           #40                 // String %s:///%s
      51: iconst_2
      52: anewarray     #4                  // class java/lang/Object
      55: dup
      56: iconst_0
      57: ldc           #42                 // String dns+srv
      59: aastore
      60: dup
      61: iconst_1
      62: aload_1
      63: iconst_0
      64: invokestatic  #43                 // Method com/google/common/collect/Iterables.get:(Ljava/lang/Iterable;I)Ljava/lang/Object;
      67: aastore
      68: invokestatic  #44                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      71: astore_2
      72: goto          144
      75: ldc           #45                 // String %s://%s/%s
      77: iconst_3
      78: anewarray     #4                  // class java/lang/Object
      81: dup
      82: iconst_0
      83: ldc           #47                 // String ip
      85: aastore
      86: dup
      87: iconst_1
      88: aload_0
      89: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
      92: invokevirtual #48                 // Method io/etcd/jetcd/ClientBuilder.authority:()Ljava/lang/String;
      95: ifnull        108
      98: aload_0
      99: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     102: invokevirtual #48                 // Method io/etcd/jetcd/ClientBuilder.authority:()Ljava/lang/String;
     105: goto          110
     108: ldc           #49                 // String
     110: aastore
     111: dup
     112: iconst_2
     113: aload_1
     114: invokeinterface #50,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
     119: invokedynamic #51,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
     124: invokeinterface #52,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     129: ldc           #53                 // String ,
     131: invokestatic  #54                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
     134: invokeinterface #55,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     139: aastore
     140: invokestatic  #44                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     143: astore_2
     144: aload_2
     145: invokestatic  #56                 // Method io/grpc/netty/NettyChannelBuilder.forTarget:(Ljava/lang/String;)Lio/grpc/netty/NettyChannelBuilder;
     148: astore_3
     149: aload_0
     150: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     153: invokevirtual #48                 // Method io/etcd/jetcd/ClientBuilder.authority:()Ljava/lang/String;
     156: ifnull        171
     159: aload_3
     160: aload_0
     161: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     164: invokevirtual #48                 // Method io/etcd/jetcd/ClientBuilder.authority:()Ljava/lang/String;
     167: invokevirtual #57                 // Method io/grpc/netty/NettyChannelBuilder.overrideAuthority:(Ljava/lang/String;)Lio/grpc/ManagedChannelBuilder;
     170: pop
     171: aload_0
     172: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     175: invokevirtual #58                 // Method io/etcd/jetcd/ClientBuilder.maxInboundMessageSize:()Ljava/lang/Integer;
     178: ifnull        196
     181: aload_3
     182: aload_0
     183: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     186: invokevirtual #58                 // Method io/etcd/jetcd/ClientBuilder.maxInboundMessageSize:()Ljava/lang/Integer;
     189: invokevirtual #59                 // Method java/lang/Integer.intValue:()I
     192: invokevirtual #60                 // Method io/grpc/netty/NettyChannelBuilder.maxInboundMessageSize:(I)Lio/grpc/netty/NettyChannelBuilder;
     195: pop
     196: aload_0
     197: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     200: invokevirtual #61                 // Method io/etcd/jetcd/ClientBuilder.sslContext:()Lio/netty/handler/ssl/SslContext;
     203: ifnull        229
     206: aload_3
     207: getstatic     #62                 // Field io/grpc/netty/NegotiationType.TLS:Lio/grpc/netty/NegotiationType;
     210: invokevirtual #63                 // Method io/grpc/netty/NettyChannelBuilder.negotiationType:(Lio/grpc/netty/NegotiationType;)Lio/grpc/netty/NettyChannelBuilder;
     213: pop
     214: aload_3
     215: aload_0
     216: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     219: invokevirtual #61                 // Method io/etcd/jetcd/ClientBuilder.sslContext:()Lio/netty/handler/ssl/SslContext;
     222: invokevirtual #64                 // Method io/grpc/netty/NettyChannelBuilder.sslContext:(Lio/netty/handler/ssl/SslContext;)Lio/grpc/netty/NettyChannelBuilder;
     225: pop
     226: goto          237
     229: aload_3
     230: getstatic     #65                 // Field io/grpc/netty/NegotiationType.PLAINTEXT:Lio/grpc/netty/NegotiationType;
     233: invokevirtual #63                 // Method io/grpc/netty/NettyChannelBuilder.negotiationType:(Lio/grpc/netty/NegotiationType;)Lio/grpc/netty/NettyChannelBuilder;
     236: pop
     237: aload_0
     238: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     241: invokevirtual #66                 // Method io/etcd/jetcd/ClientBuilder.keepaliveTime:()Ljava/time/Duration;
     244: ifnull        265
     247: aload_3
     248: aload_0
     249: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     252: invokevirtual #66                 // Method io/etcd/jetcd/ClientBuilder.keepaliveTime:()Ljava/time/Duration;
     255: invokevirtual #67                 // Method java/time/Duration.toMillis:()J
     258: getstatic     #68                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     261: invokevirtual #69                 // Method io/grpc/netty/NettyChannelBuilder.keepAliveTime:(JLjava/util/concurrent/TimeUnit;)Lio/grpc/netty/NettyChannelBuilder;
     264: pop
     265: aload_0
     266: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     269: invokevirtual #70                 // Method io/etcd/jetcd/ClientBuilder.keepaliveTimeout:()Ljava/time/Duration;
     272: ifnull        293
     275: aload_3
     276: aload_0
     277: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     280: invokevirtual #70                 // Method io/etcd/jetcd/ClientBuilder.keepaliveTimeout:()Ljava/time/Duration;
     283: invokevirtual #67                 // Method java/time/Duration.toMillis:()J
     286: getstatic     #68                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     289: invokevirtual #71                 // Method io/grpc/netty/NettyChannelBuilder.keepAliveTimeout:(JLjava/util/concurrent/TimeUnit;)Lio/grpc/netty/NettyChannelBuilder;
     292: pop
     293: aload_0
     294: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     297: invokevirtual #72                 // Method io/etcd/jetcd/ClientBuilder.keepaliveWithoutCalls:()Ljava/lang/Boolean;
     300: ifnull        318
     303: aload_3
     304: aload_0
     305: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     308: invokevirtual #72                 // Method io/etcd/jetcd/ClientBuilder.keepaliveWithoutCalls:()Ljava/lang/Boolean;
     311: invokevirtual #73                 // Method java/lang/Boolean.booleanValue:()Z
     314: invokevirtual #74                 // Method io/grpc/netty/NettyChannelBuilder.keepAliveWithoutCalls:(Z)Lio/grpc/netty/NettyChannelBuilder;
     317: pop
     318: aload_0
     319: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     322: invokevirtual #75                 // Method io/etcd/jetcd/ClientBuilder.connectTimeout:()Ljava/time/Duration;
     325: ifnull        350
     328: aload_3
     329: getstatic     #76                 // Field io/netty/channel/ChannelOption.CONNECT_TIMEOUT_MILLIS:Lio/netty/channel/ChannelOption;
     332: aload_0
     333: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     336: invokevirtual #75                 // Method io/etcd/jetcd/ClientBuilder.connectTimeout:()Ljava/time/Duration;
     339: invokevirtual #67                 // Method java/time/Duration.toMillis:()J
     342: l2i
     343: invokestatic  #77                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     346: invokevirtual #78                 // Method io/grpc/netty/NettyChannelBuilder.withOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/grpc/netty/NettyChannelBuilder;
     349: pop
     350: aload_0
     351: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     354: invokevirtual #79                 // Method io/etcd/jetcd/ClientBuilder.loadBalancerPolicy:()Ljava/lang/String;
     357: ifnull        375
     360: aload_3
     361: aload_0
     362: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     365: invokevirtual #79                 // Method io/etcd/jetcd/ClientBuilder.loadBalancerPolicy:()Ljava/lang/String;
     368: invokevirtual #80                 // Method io/grpc/netty/NettyChannelBuilder.defaultLoadBalancingPolicy:(Ljava/lang/String;)Lio/grpc/ManagedChannelBuilder;
     371: pop
     372: goto          382
     375: aload_3
     376: ldc           #81                 // String pick_first
     378: invokevirtual #80                 // Method io/grpc/netty/NettyChannelBuilder.defaultLoadBalancingPolicy:(Ljava/lang/String;)Lio/grpc/ManagedChannelBuilder;
     381: pop
     382: aload_3
     383: iconst_1
     384: anewarray     #82                 // class io/grpc/ClientInterceptor
     387: dup
     388: iconst_0
     389: aload_0
     390: getfield      #8                  // Field authInterceptor:Lio/etcd/jetcd/auth/AuthInterceptor;
     393: aastore
     394: invokevirtual #83                 // Method io/grpc/netty/NettyChannelBuilder.intercept:([Lio/grpc/ClientInterceptor;)Lio/grpc/ManagedChannelBuilder;
     397: pop
     398: aload_0
     399: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     402: invokevirtual #84                 // Method io/etcd/jetcd/ClientBuilder.headers:()Ljava/util/Map;
     405: ifnull        428
     408: aload_3
     409: iconst_1
     410: anewarray     #82                 // class io/grpc/ClientInterceptor
     413: dup
     414: iconst_0
     415: new           #85                 // class io/etcd/jetcd/ClientConnectionManager$1
     418: dup
     419: aload_0
     420: invokespecial #86                 // Method io/etcd/jetcd/ClientConnectionManager$1."<init>":(Lio/etcd/jetcd/ClientConnectionManager;)V
     423: aastore
     424: invokevirtual #83                 // Method io/grpc/netty/NettyChannelBuilder.intercept:([Lio/grpc/ClientInterceptor;)Lio/grpc/ManagedChannelBuilder;
     427: pop
     428: aload_0
     429: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     432: invokevirtual #87                 // Method io/etcd/jetcd/ClientBuilder.interceptors:()Ljava/util/List;
     435: ifnull        450
     438: aload_3
     439: aload_0
     440: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
     443: invokevirtual #87                 // Method io/etcd/jetcd/ClientBuilder.interceptors:()Ljava/util/List;
     446: invokevirtual #88                 // Method io/grpc/netty/NettyChannelBuilder.intercept:(Ljava/util/List;)Lio/grpc/ManagedChannelBuilder;
     449: pop
     450: aload_3
     451: areturn

  public <S, T> java.util.concurrent.CompletableFuture<T> execute(java.util.concurrent.Callable<com.google.common.util.concurrent.ListenableFuture<S>>, java.util.function.Function<S, T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #89,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
       8: invokevirtual #90                 // Method execute:(Ljava/util/concurrent/Callable;Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public <S, T> java.util.concurrent.CompletableFuture<T> execute(java.util.concurrent.Callable<com.google.common.util.concurrent.ListenableFuture<S>>, java.util.function.Function<S, T>, java.util.function.Predicate<java.lang.Throwable>);
    Code:
       0: new           #91                 // class net/jodah/failsafe/RetryPolicy
       3: dup
       4: invokespecial #92                 // Method net/jodah/failsafe/RetryPolicy."<init>":()V
       7: aload_3
       8: invokevirtual #93                 // Method net/jodah/failsafe/RetryPolicy.handleIf:(Ljava/util/function/Predicate;)Ljava/lang/Object;
      11: checkcast     #91                 // class net/jodah/failsafe/RetryPolicy
      14: invokedynamic #94,  0             // InvokeDynamic #3:accept:()Lnet/jodah/failsafe/function/CheckedConsumer;
      19: invokevirtual #95                 // Method net/jodah/failsafe/RetryPolicy.onRetriesExceeded:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/RetryPolicy;
      22: aload_0
      23: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
      26: invokevirtual #96                 // Method io/etcd/jetcd/ClientBuilder.retryDelay:()J
      29: aload_0
      30: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
      33: invokevirtual #97                 // Method io/etcd/jetcd/ClientBuilder.retryMaxDelay:()J
      36: aload_0
      37: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
      40: invokevirtual #98                 // Method io/etcd/jetcd/ClientBuilder.retryChronoUnit:()Ljava/time/temporal/ChronoUnit;
      43: invokevirtual #99                 // Method net/jodah/failsafe/RetryPolicy.withBackoff:(JJLjava/time/temporal/ChronoUnit;)Lnet/jodah/failsafe/RetryPolicy;
      46: astore        4
      48: aload_0
      49: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
      52: invokevirtual #100                // Method io/etcd/jetcd/ClientBuilder.retryMaxDuration:()Ljava/time/Duration;
      55: ifnull        72
      58: aload         4
      60: aload_0
      61: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
      64: invokevirtual #100                // Method io/etcd/jetcd/ClientBuilder.retryMaxDuration:()Ljava/time/Duration;
      67: invokevirtual #101                // Method net/jodah/failsafe/RetryPolicy.withMaxDuration:(Ljava/time/Duration;)Lnet/jodah/failsafe/RetryPolicy;
      70: astore        4
      72: aload         4
      74: iconst_0
      75: anewarray     #91                 // class net/jodah/failsafe/RetryPolicy
      78: invokestatic  #102                // Method net/jodah/failsafe/Failsafe.with:(Lnet/jodah/failsafe/Policy;[Lnet/jodah/failsafe/Policy;)Lnet/jodah/failsafe/FailsafeExecutor;
      81: aload_0
      82: getfield      #12                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      85: invokevirtual #103                // Method net/jodah/failsafe/FailsafeExecutor.with:(Ljava/util/concurrent/Executor;)Lnet/jodah/failsafe/FailsafeExecutor;
      88: aload_0
      89: aload_1
      90: invokedynamic #104,  0            // InvokeDynamic #4:run:(Lio/etcd/jetcd/ClientConnectionManager;Ljava/util/concurrent/Callable;)Lnet/jodah/failsafe/function/AsyncRunnable;
      95: invokevirtual #105                // Method net/jodah/failsafe/FailsafeExecutor.getAsyncExecution:(Lnet/jodah/failsafe/function/AsyncRunnable;)Ljava/util/concurrent/CompletableFuture;
      98: aload_2
      99: invokedynamic #106,  0            // InvokeDynamic #5:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
     104: invokevirtual #107                // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
     107: areturn

  private static java.util.concurrent.CompletionStage lambda$execute$5(java.util.function.Function, java.util.concurrent.CompletableFuture);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #108                // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
       5: areturn

  private void lambda$execute$4(java.util.concurrent.Callable, net.jodah.failsafe.AsyncExecution) throws java.lang.Exception;
    Code:
       0: new           #26                 // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #109                // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore_3
       8: aload_1
       9: invokeinterface #110,  1          // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      14: checkcast     #111                // class com/google/common/util/concurrent/ListenableFuture
      17: astore        4
      19: aload         4
      21: aload_3
      22: aload         4
      24: aload_2
      25: invokedynamic #112,  0            // InvokeDynamic #6:run:(Ljava/util/concurrent/CompletableFuture;Lcom/google/common/util/concurrent/ListenableFuture;Lnet/jodah/failsafe/AsyncExecution;)Ljava/lang/Runnable;
      30: aload_0
      31: getfield      #12                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      34: invokeinterface #113,  3          // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
      39: return

  private static void lambda$null$3(java.util.concurrent.CompletableFuture, com.google.common.util.concurrent.ListenableFuture, net.jodah.failsafe.AsyncExecution);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #114,  1          // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.get:()Ljava/lang/Object;
       7: invokevirtual #115                // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      10: pop
      11: aload_2
      12: aload_0
      13: invokevirtual #116                // Method net/jodah/failsafe/AsyncExecution.complete:(Ljava/lang/Object;)Z
      16: pop
      17: goto          35
      20: astore_3
      21: aload_2
      22: aload_3
      23: invokevirtual #117                // Method net/jodah/failsafe/AsyncExecution.retryOn:(Ljava/lang/Throwable;)Z
      26: ifne          35
      29: aload_0
      30: aload_3
      31: invokevirtual #118                // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      34: pop
      35: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/Exception

  private static void lambda$execute$2(net.jodah.failsafe.event.ExecutionCompletedEvent) throws java.lang.Throwable;
    Code:
       0: getstatic     #119                // Field LOGGER:Lorg/slf4j/Logger;
       3: ldc           #120                // String maximum number of auto retries reached
       5: invokeinterface #121,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  private static java.lang.String lambda$defaultChannelBuilder$1(java.net.URI);
    Code:
       0: new           #122                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #123                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #124                // Method java/net/URI.getHost:()Ljava/lang/String;
      11: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #126                // String :
      16: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #127                // Method java/net/URI.getPort:()I
      23: invokevirtual #128                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #129                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  private static void lambda$withNewChannel$0(io.grpc.ManagedChannel, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method io/grpc/ManagedChannel.shutdown:()Lio/grpc/ManagedChannel;
       4: pop
       5: return

  static io.etcd.jetcd.ClientBuilder access$000(io.etcd.jetcd.ClientConnectionManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field builder:Lio/etcd/jetcd/ClientBuilder;
       4: areturn

  static {};
    Code:
       0: ldc           #130                // class io/etcd/jetcd/ClientConnectionManager
       2: invokestatic  #131                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #119                // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
