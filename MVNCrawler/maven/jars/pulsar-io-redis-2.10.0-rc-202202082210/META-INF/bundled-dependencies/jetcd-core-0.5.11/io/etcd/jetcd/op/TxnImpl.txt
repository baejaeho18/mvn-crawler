Compiled from "TxnImpl.java"
public class io.etcd.jetcd.op.TxnImpl implements io.etcd.jetcd.Txn {
  private final io.etcd.jetcd.ByteSequence namespace;

  private java.util.List<io.etcd.jetcd.op.Cmp> cmpList;

  private java.util.List<io.etcd.jetcd.op.Op> successOpList;

  private java.util.List<io.etcd.jetcd.op.Op> failureOpList;

  private java.util.function.Function<io.etcd.jetcd.api.TxnRequest, java.util.concurrent.CompletableFuture<io.etcd.jetcd.kv.TxnResponse>> requestF;

  private boolean seenThen;

  private boolean seenElse;

  public static io.etcd.jetcd.op.TxnImpl newTxn(java.util.function.Function<io.etcd.jetcd.api.TxnRequest, java.util.concurrent.CompletableFuture<io.etcd.jetcd.kv.TxnResponse>>, io.etcd.jetcd.ByteSequence);
    Code:
       0: new           #1                  // class io/etcd/jetcd/op/TxnImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #2                  // Method "<init>":(Ljava/util/function/Function;Lio/etcd/jetcd/ByteSequence;)V
       9: areturn

  static io.etcd.jetcd.op.TxnImpl newTxn(java.util.function.Function<io.etcd.jetcd.api.TxnRequest, java.util.concurrent.CompletableFuture<io.etcd.jetcd.kv.TxnResponse>>);
    Code:
       0: aload_0
       1: getstatic     #3                  // Field io/etcd/jetcd/ByteSequence.EMPTY:Lio/etcd/jetcd/ByteSequence;
       4: invokestatic  #4                  // Method newTxn:(Ljava/util/function/Function;Lio/etcd/jetcd/ByteSequence;)Lio/etcd/jetcd/op/TxnImpl;
       7: areturn

  private io.etcd.jetcd.op.TxnImpl(java.util.function.Function<io.etcd.jetcd.api.TxnRequest, java.util.concurrent.CompletableFuture<io.etcd.jetcd.kv.TxnResponse>>, io.etcd.jetcd.ByteSequence);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/ArrayList
       8: dup
       9: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #8                  // Field cmpList:Ljava/util/List;
      15: aload_0
      16: new           #6                  // class java/util/ArrayList
      19: dup
      20: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #9                  // Field successOpList:Ljava/util/List;
      26: aload_0
      27: new           #6                  // class java/util/ArrayList
      30: dup
      31: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      34: putfield      #10                 // Field failureOpList:Ljava/util/List;
      37: aload_0
      38: iconst_0
      39: putfield      #11                 // Field seenThen:Z
      42: aload_0
      43: iconst_0
      44: putfield      #12                 // Field seenElse:Z
      47: aload_0
      48: aload_1
      49: putfield      #13                 // Field requestF:Ljava/util/function/Function;
      52: aload_0
      53: aload_2
      54: putfield      #14                 // Field namespace:Lio/etcd/jetcd/ByteSequence;
      57: return

  public io.etcd.jetcd.op.TxnImpl If(io.etcd.jetcd.op.Cmp...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       5: invokevirtual #16                 // Method If:(Ljava/util/List;)Lio/etcd/jetcd/op/TxnImpl;
       8: areturn

  io.etcd.jetcd.op.TxnImpl If(java.util.List<io.etcd.jetcd.op.Cmp>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field seenThen:Z
       4: ifeq          17
       7: new           #17                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #18                 // String cannot call If after Then!
      13: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #12                 // Field seenElse:Z
      21: ifeq          34
      24: new           #17                 // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #20                 // String cannot call If after Else!
      30: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #8                  // Field cmpList:Ljava/util/List;
      38: aload_1
      39: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      44: pop
      45: aload_0
      46: areturn

  public io.etcd.jetcd.op.TxnImpl Then(io.etcd.jetcd.op.Op...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       5: invokevirtual #22                 // Method Then:(Ljava/util/List;)Lio/etcd/jetcd/op/TxnImpl;
       8: areturn

  io.etcd.jetcd.op.TxnImpl Then(java.util.List<io.etcd.jetcd.op.Op>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field seenElse:Z
       4: ifeq          17
       7: new           #17                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #23                 // String cannot call Then after Else!
      13: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #11                 // Field seenThen:Z
      22: aload_0
      23: getfield      #9                  // Field successOpList:Ljava/util/List;
      26: aload_1
      27: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      32: pop
      33: aload_0
      34: areturn

  public io.etcd.jetcd.op.TxnImpl Else(io.etcd.jetcd.op.Op...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       5: invokevirtual #24                 // Method Else:(Ljava/util/List;)Lio/etcd/jetcd/op/TxnImpl;
       8: areturn

  io.etcd.jetcd.op.TxnImpl Else(java.util.List<io.etcd.jetcd.op.Op>);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field seenElse:Z
       5: aload_0
       6: getfield      #10                 // Field failureOpList:Ljava/util/List;
       9: aload_1
      10: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      15: pop
      16: aload_0
      17: areturn

  public java.util.concurrent.CompletableFuture<io.etcd.jetcd.kv.TxnResponse> commit();
    Code:
       0: aload_0
       1: getfield      #13                 // Field requestF:Ljava/util/function/Function;
       4: aload_0
       5: invokespecial #25                 // Method toTxnRequest:()Lio/etcd/jetcd/api/TxnRequest;
       8: invokeinterface #26,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #27                 // class java/util/concurrent/CompletableFuture
      16: areturn

  private io.etcd.jetcd.api.TxnRequest toTxnRequest();
    Code:
       0: invokestatic  #28                 // Method io/etcd/jetcd/api/TxnRequest.newBuilder:()Lio/etcd/jetcd/api/TxnRequest$Builder;
       3: astore_1
       4: aload_0
       5: getfield      #8                  // Field cmpList:Ljava/util/List;
       8: invokeinterface #29,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          49
      23: aload_2
      24: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #32                 // class io/etcd/jetcd/op/Cmp
      32: astore_3
      33: aload_1
      34: aload_3
      35: aload_0
      36: getfield      #14                 // Field namespace:Lio/etcd/jetcd/ByteSequence;
      39: invokevirtual #33                 // Method io/etcd/jetcd/op/Cmp.toCompare:(Lio/etcd/jetcd/ByteSequence;)Lio/etcd/jetcd/api/Compare;
      42: invokevirtual #34                 // Method io/etcd/jetcd/api/TxnRequest$Builder.addCompare:(Lio/etcd/jetcd/api/Compare;)Lio/etcd/jetcd/api/TxnRequest$Builder;
      45: pop
      46: goto          14
      49: aload_0
      50: getfield      #9                  // Field successOpList:Ljava/util/List;
      53: invokeinterface #29,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      58: astore_2
      59: aload_2
      60: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          94
      68: aload_2
      69: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: checkcast     #35                 // class io/etcd/jetcd/op/Op
      77: astore_3
      78: aload_1
      79: aload_3
      80: aload_0
      81: getfield      #14                 // Field namespace:Lio/etcd/jetcd/ByteSequence;
      84: invokevirtual #36                 // Method io/etcd/jetcd/op/Op.toRequestOp:(Lio/etcd/jetcd/ByteSequence;)Lio/etcd/jetcd/api/RequestOp;
      87: invokevirtual #37                 // Method io/etcd/jetcd/api/TxnRequest$Builder.addSuccess:(Lio/etcd/jetcd/api/RequestOp;)Lio/etcd/jetcd/api/TxnRequest$Builder;
      90: pop
      91: goto          59
      94: aload_0
      95: getfield      #10                 // Field failureOpList:Ljava/util/List;
      98: invokeinterface #29,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     103: astore_2
     104: aload_2
     105: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          139
     113: aload_2
     114: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     119: checkcast     #35                 // class io/etcd/jetcd/op/Op
     122: astore_3
     123: aload_1
     124: aload_3
     125: aload_0
     126: getfield      #14                 // Field namespace:Lio/etcd/jetcd/ByteSequence;
     129: invokevirtual #36                 // Method io/etcd/jetcd/op/Op.toRequestOp:(Lio/etcd/jetcd/ByteSequence;)Lio/etcd/jetcd/api/RequestOp;
     132: invokevirtual #38                 // Method io/etcd/jetcd/api/TxnRequest$Builder.addFailure:(Lio/etcd/jetcd/api/RequestOp;)Lio/etcd/jetcd/api/TxnRequest$Builder;
     135: pop
     136: goto          104
     139: aload_1
     140: invokevirtual #39                 // Method io/etcd/jetcd/api/TxnRequest$Builder.build:()Lio/etcd/jetcd/api/TxnRequest;
     143: areturn

  public io.etcd.jetcd.Txn Else(io.etcd.jetcd.op.Op[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method Else:([Lio/etcd/jetcd/op/Op;)Lio/etcd/jetcd/op/TxnImpl;
       5: areturn

  public io.etcd.jetcd.Txn Then(io.etcd.jetcd.op.Op[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method Then:([Lio/etcd/jetcd/op/Op;)Lio/etcd/jetcd/op/TxnImpl;
       5: areturn

  public io.etcd.jetcd.Txn If(io.etcd.jetcd.op.Cmp[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method If:([Lio/etcd/jetcd/op/Cmp;)Lio/etcd/jetcd/op/TxnImpl;
       5: areturn
}
