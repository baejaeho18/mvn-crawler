Compiled from "WatchImpl.java"
final class io.etcd.jetcd.WatchImpl implements io.etcd.jetcd.Watch {
  private static final org.slf4j.Logger LOG;

  private final java.lang.Object lock;

  private final io.etcd.jetcd.ClientConnectionManager connectionManager;

  private final io.etcd.jetcd.api.WatchGrpc$WatchStub stub;

  private final com.google.common.util.concurrent.ListeningScheduledExecutorService executor;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private final java.util.List<io.etcd.jetcd.WatchImpl$WatcherImpl> watchers;

  private final io.etcd.jetcd.ByteSequence namespace;

  io.etcd.jetcd.WatchImpl(io.etcd.jetcd.ClientConnectionManager);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #10                 // class java/lang/Object
       8: dup
       9: invokespecial #9                  // Method java/lang/Object."<init>":()V
      12: putfield      #5                  // Field lock:Ljava/lang/Object;
      15: aload_0
      16: aload_1
      17: putfield      #3                  // Field connectionManager:Lio/etcd/jetcd/ClientConnectionManager;
      20: aload_0
      21: aload_1
      22: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      27: invokevirtual #12                 // Method io/etcd/jetcd/ClientConnectionManager.newStub:(Ljava/util/function/Function;)Lio/grpc/stub/AbstractStub;
      30: checkcast     #13                 // class io/etcd/jetcd/api/WatchGrpc$WatchStub
      33: putfield      #6                  // Field stub:Lio/etcd/jetcd/api/WatchGrpc$WatchStub;
      36: aload_0
      37: iconst_1
      38: invokestatic  #14                 // Method java/util/concurrent/Executors.newScheduledThreadPool:(I)Ljava/util/concurrent/ScheduledExecutorService;
      41: invokestatic  #15                 // Method com/google/common/util/concurrent/MoreExecutors.listeningDecorator:(Ljava/util/concurrent/ScheduledExecutorService;)Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
      44: putfield      #2                  // Field executor:Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
      47: aload_0
      48: new           #16                 // class java/util/concurrent/atomic/AtomicBoolean
      51: dup
      52: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      55: putfield      #8                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      58: aload_0
      59: new           #18                 // class java/util/concurrent/CopyOnWriteArrayList
      62: dup
      63: invokespecial #19                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      66: putfield      #4                  // Field watchers:Ljava/util/List;
      69: aload_0
      70: aload_1
      71: invokevirtual #20                 // Method io/etcd/jetcd/ClientConnectionManager.getNamespace:()Lio/etcd/jetcd/ByteSequence;
      74: putfield      #7                  // Field namespace:Lio/etcd/jetcd/ByteSequence;
      77: return

  public io.etcd.jetcd.Watch$Watcher watch(io.etcd.jetcd.ByteSequence, io.etcd.jetcd.options.WatchOption, io.etcd.jetcd.Watch$Listener);
    Code:
       0: aload_0
       1: getfield      #8                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          14
      10: invokestatic  #22                 // Method io/etcd/jetcd/common/exception/EtcdExceptionFactory.newClosedWatchClientException:()Lio/etcd/jetcd/common/exception/ClosedClientException;
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field lock:Ljava/lang/Object;
      18: dup
      19: astore        5
      21: monitorenter
      22: new           #23                 // class io/etcd/jetcd/WatchImpl$WatcherImpl
      25: dup
      26: aload_0
      27: aload_1
      28: aload_2
      29: aload_3
      30: invokespecial #24                 // Method io/etcd/jetcd/WatchImpl$WatcherImpl."<init>":(Lio/etcd/jetcd/WatchImpl;Lio/etcd/jetcd/ByteSequence;Lio/etcd/jetcd/options/WatchOption;Lio/etcd/jetcd/Watch$Listener;)V
      33: astore        4
      35: aload         4
      37: invokevirtual #25                 // Method io/etcd/jetcd/WatchImpl$WatcherImpl.resume:()V
      40: aload_0
      41: getfield      #4                  // Field watchers:Ljava/util/List;
      44: aload         4
      46: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload         5
      54: monitorexit
      55: goto          66
      58: astore        6
      60: aload         5
      62: monitorexit
      63: aload         6
      65: athrow
      66: aload         4
      68: areturn
    Exception table:
       from    to  target type
          22    55    58   any
          58    63    58   any

  public void close();
    Code:
       0: aload_0
       1: getfield      #8                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          53
      12: aload_0
      13: getfield      #5                  // Field lock:Ljava/lang/Object;
      16: dup
      17: astore_1
      18: monitorenter
      19: aload_0
      20: getfield      #2                  // Field executor:Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
      23: invokeinterface #28,  1           // InterfaceMethod com/google/common/util/concurrent/ListeningScheduledExecutorService.shutdownNow:()Ljava/util/List;
      28: pop
      29: aload_0
      30: getfield      #4                  // Field watchers:Ljava/util/List;
      33: invokedynamic #29,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
      38: invokeinterface #30,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      43: aload_1
      44: monitorexit
      45: goto          53
      48: astore_2
      49: aload_1
      50: monitorexit
      51: aload_2
      52: athrow
      53: return
    Exception table:
       from    to  target type
          19    45    48   any
          48    51    48   any

  public void requestProgress();
    Code:
       0: aload_0
       1: getfield      #8                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          41
      10: aload_0
      11: getfield      #5                  // Field lock:Ljava/lang/Object;
      14: dup
      15: astore_1
      16: monitorenter
      17: aload_0
      18: getfield      #4                  // Field watchers:Ljava/util/List;
      21: invokedynamic #31,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
      26: invokeinterface #30,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      31: aload_1
      32: monitorexit
      33: goto          41
      36: astore_2
      37: aload_1
      38: monitorexit
      39: aload_2
      40: athrow
      41: return
    Exception table:
       from    to  target type
          17    33    36   any
          36    39    36   any

  static java.util.concurrent.atomic.AtomicBoolean access$000(io.etcd.jetcd.WatchImpl);
    Code:
       0: aload_0
       1: getfield      #8                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static io.etcd.jetcd.ByteSequence access$100(io.etcd.jetcd.WatchImpl);
    Code:
       0: aload_0
       1: getfield      #7                  // Field namespace:Lio/etcd/jetcd/ByteSequence;
       4: areturn

  static io.etcd.jetcd.api.WatchGrpc$WatchStub access$200(io.etcd.jetcd.WatchImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field stub:Lio/etcd/jetcd/api/WatchGrpc$WatchStub;
       4: areturn

  static java.lang.Object access$300(io.etcd.jetcd.WatchImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/lang/Object;
       4: areturn

  static java.util.List access$400(io.etcd.jetcd.WatchImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field watchers:Ljava/util/List;
       4: areturn

  static io.etcd.jetcd.ClientConnectionManager access$500(io.etcd.jetcd.WatchImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectionManager:Lio/etcd/jetcd/ClientConnectionManager;
       4: areturn

  static com.google.common.util.concurrent.ListeningScheduledExecutorService access$600(io.etcd.jetcd.WatchImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
       4: areturn

  static org.slf4j.Logger access$700();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #32                 // class io/etcd/jetcd/WatchImpl
       2: invokestatic  #33                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
