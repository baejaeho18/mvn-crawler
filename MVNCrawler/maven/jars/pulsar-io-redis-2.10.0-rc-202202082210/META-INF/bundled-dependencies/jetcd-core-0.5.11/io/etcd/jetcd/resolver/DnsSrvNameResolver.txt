Compiled from "DnsSrvNameResolver.java"
public class io.etcd.jetcd.resolver.DnsSrvNameResolver extends io.grpc.NameResolver {
  public static final java.lang.String SCHEME;

  private static final org.slf4j.Logger LOGGER;

  private static final java.lang.String[] ATTRIBUTE_IDS;

  private static final java.util.Hashtable<java.lang.String, java.lang.String> ENV;

  private final java.lang.Object lock;

  private final java.lang.String authority;

  private final java.net.URI targetUri;

  private volatile boolean shutdown;

  private volatile boolean resolving;

  private java.util.concurrent.Executor executor;

  private io.grpc.NameResolver$Listener listener;

  public io.etcd.jetcd.resolver.DnsSrvNameResolver(java.net.URI);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/grpc/NameResolver."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/Object
       8: dup
       9: invokespecial #3                  // Method java/lang/Object."<init>":()V
      12: putfield      #4                  // Field lock:Ljava/lang/Object;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field targetUri:Ljava/net/URI;
      20: aload_0
      21: aload_1
      22: invokevirtual #6                  // Method java/net/URI.getAuthority:()Ljava/lang/String;
      25: ifnull        35
      28: aload_1
      29: invokevirtual #6                  // Method java/net/URI.getAuthority:()Ljava/lang/String;
      32: goto          37
      35: ldc           #8                  // String dns+srv
      37: putfield      #9                  // Field authority:Ljava/lang/String;
      40: return

  public java.lang.String getServiceAuthority();
    Code:
       0: aload_0
       1: getfield      #9                  // Field authority:Ljava/lang/String;
       4: areturn

  public void start(io.grpc.NameResolver$Listener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #10                 // Field listener:Lio/grpc/NameResolver$Listener;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #11                 // String already started
      21: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      24: aload_0
      25: getstatic     #13                 // Field io/grpc/internal/GrpcUtil.SHARED_CHANNEL_EXECUTOR:Lio/grpc/internal/SharedResourceHolder$Resource;
      28: invokestatic  #14                 // Method io/grpc/internal/SharedResourceHolder.get:(Lio/grpc/internal/SharedResourceHolder$Resource;)Ljava/lang/Object;
      31: checkcast     #15                 // class java/util/concurrent/Executor
      34: putfield      #16                 // Field executor:Ljava/util/concurrent/Executor;
      37: aload_0
      38: aload_1
      39: ldc           #17                 // String listener
      41: invokestatic  #18                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #19                 // class io/grpc/NameResolver$Listener
      47: putfield      #10                 // Field listener:Lio/grpc/NameResolver$Listener;
      50: aload_0
      51: invokespecial #20                 // Method resolve:()V
      54: aload_2
      55: monitorexit
      56: goto          64
      59: astore_3
      60: aload_2
      61: monitorexit
      62: aload_3
      63: athrow
      64: return
    Exception table:
       from    to  target type
           7    56    59   any
          59    62    59   any

  public final synchronized void refresh();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method resolve:()V
       4: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #21                 // Field shutdown:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #21                 // Field shutdown:Z
      13: aload_0
      14: getfield      #4                  // Field lock:Ljava/lang/Object;
      17: dup
      18: astore_1
      19: monitorenter
      20: aload_0
      21: getfield      #16                 // Field executor:Ljava/util/concurrent/Executor;
      24: ifnull        44
      27: aload_0
      28: getstatic     #13                 // Field io/grpc/internal/GrpcUtil.SHARED_CHANNEL_EXECUTOR:Lio/grpc/internal/SharedResourceHolder$Resource;
      31: aload_0
      32: getfield      #16                 // Field executor:Ljava/util/concurrent/Executor;
      35: invokestatic  #22                 // Method io/grpc/internal/SharedResourceHolder.release:(Lio/grpc/internal/SharedResourceHolder$Resource;Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #15                 // class java/util/concurrent/Executor
      41: putfield      #16                 // Field executor:Ljava/util/concurrent/Executor;
      44: aload_1
      45: monitorexit
      46: goto          54
      49: astore_2
      50: aload_1
      51: monitorexit
      52: aload_2
      53: athrow
      54: return
    Exception table:
       from    to  target type
          20    46    49   any
          49    52    49   any

  private void resolve();
    Code:
       0: aload_0
       1: getfield      #23                 // Field resolving:Z
       4: ifne          14
       7: aload_0
       8: getfield      #21                 // Field shutdown:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: getfield      #4                  // Field lock:Ljava/lang/Object;
      19: dup
      20: astore_1
      21: monitorenter
      22: aload_0
      23: getfield      #16                 // Field executor:Ljava/util/concurrent/Executor;
      26: aload_0
      27: invokedynamic #24,  0             // InvokeDynamic #0:run:(Lio/etcd/jetcd/resolver/DnsSrvNameResolver;)Ljava/lang/Runnable;
      32: invokeinterface #25,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      37: aload_1
      38: monitorexit
      39: goto          47
      42: astore_2
      43: aload_1
      44: monitorexit
      45: aload_2
      46: athrow
      47: return
    Exception table:
       from    to  target type
          22    39    42   any
          42    45    42   any

  private void doResolve();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #21                 // Field shutdown:Z
      11: ifeq          17
      14: aload_2
      15: monitorexit
      16: return
      17: aload_0
      18: iconst_1
      19: putfield      #23                 // Field resolving:Z
      22: aload_0
      23: getfield      #10                 // Field listener:Lio/grpc/NameResolver$Listener;
      26: astore_1
      27: aload_2
      28: monitorexit
      29: goto          37
      32: astore_3
      33: aload_2
      34: monitorexit
      35: aload_3
      36: athrow
      37: new           #26                 // class java/util/ArrayList
      40: dup
      41: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
      44: astore_2
      45: aload_0
      46: invokespecial #28                 // Method resolveAddresses:()Ljava/util/List;
      49: invokeinterface #29,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      54: astore_3
      55: aload_3
      56: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          97
      64: aload_3
      65: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #32                 // class java/net/SocketAddress
      73: astore        4
      75: aload_2
      76: new           #33                 // class io/grpc/EquivalentAddressGroup
      79: dup
      80: aload         4
      82: getstatic     #34                 // Field io/grpc/Attributes.EMPTY:Lio/grpc/Attributes;
      85: invokespecial #35                 // Method io/grpc/EquivalentAddressGroup."<init>":(Ljava/net/SocketAddress;Lio/grpc/Attributes;)V
      88: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      93: pop
      94: goto          55
      97: aload_2
      98: invokeinterface #37,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     103: ifeq          135
     106: getstatic     #38                 // Field io/etcd/jetcd/common/exception/ErrorCode.INVALID_ARGUMENT:Lio/etcd/jetcd/common/exception/ErrorCode;
     109: new           #39                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #41                 // String Unable to resolve endpoint
     118: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_0
     122: getfield      #5                  // Field targetUri:Ljava/net/URI;
     125: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     128: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokestatic  #45                 // Method io/etcd/jetcd/common/exception/EtcdExceptionFactory.newEtcdException:(Lio/etcd/jetcd/common/exception/ErrorCode;Ljava/lang/String;)Lio/etcd/jetcd/common/exception/EtcdException;
     134: athrow
     135: aload_1
     136: aload_2
     137: getstatic     #34                 // Field io/grpc/Attributes.EMPTY:Lio/grpc/Attributes;
     140: invokeinterface #46,  3           // InterfaceMethod io/grpc/NameResolver$Listener.onAddresses:(Ljava/util/List;Lio/grpc/Attributes;)V
     145: aload_0
     146: iconst_0
     147: putfield      #23                 // Field resolving:Z
     150: goto          192
     153: astore_2
     154: getstatic     #48                 // Field LOGGER:Lorg/slf4j/Logger;
     157: ldc           #49                 // String Error wile getting list of servers
     159: aload_2
     160: invokeinterface #50,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     165: aload_1
     166: getstatic     #51                 // Field io/grpc/Status.NOT_FOUND:Lio/grpc/Status;
     169: invokeinterface #52,  2           // InterfaceMethod io/grpc/NameResolver$Listener.onError:(Lio/grpc/Status;)V
     174: aload_0
     175: iconst_0
     176: putfield      #23                 // Field resolving:Z
     179: goto          192
     182: astore        5
     184: aload_0
     185: iconst_0
     186: putfield      #23                 // Field resolving:Z
     189: aload         5
     191: athrow
     192: return
    Exception table:
       from    to  target type
           7    16    32   any
          17    29    32   any
          32    35    32   any
          37   145   153   Class java/lang/Exception
          37   145   182   any
         153   174   182   any
         182   184   182   any

  private java.util.List<java.net.SocketAddress> resolveAddresses();
    Code:
       0: new           #53                 // class java/util/LinkedList
       3: dup
       4: invokespecial #54                 // Method java/util/LinkedList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field targetUri:Ljava/net/URI;
      12: invokevirtual #55                 // Method java/net/URI.getPath:()Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: ldc           #56                 // String /
      19: invokevirtual #57                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      22: ifeq          31
      25: aload_2
      26: iconst_1
      27: invokevirtual #58                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      30: astore_2
      31: new           #59                 // class javax/naming/directory/InitialDirContext
      34: dup
      35: getstatic     #60                 // Field ENV:Ljava/util/Hashtable;
      38: invokespecial #61                 // Method javax/naming/directory/InitialDirContext."<init>":(Ljava/util/Hashtable;)V
      41: astore_3
      42: aload_3
      43: aload_2
      44: getstatic     #62                 // Field ATTRIBUTE_IDS:[Ljava/lang/String;
      47: invokeinterface #63,  3           // InterfaceMethod javax/naming/directory/DirContext.getAttributes:(Ljava/lang/String;[Ljava/lang/String;)Ljavax/naming/directory/Attributes;
      52: astore        4
      54: aload         4
      56: ldc           #64                 // String srv
      58: invokeinterface #65,  2           // InterfaceMethod javax/naming/directory/Attributes.get:(Ljava/lang/String;)Ljavax/naming/directory/Attribute;
      63: invokeinterface #66,  1           // InterfaceMethod javax/naming/directory/Attribute.getAll:()Ljavax/naming/NamingEnumeration;
      68: astore        5
      70: aload         5
      72: invokeinterface #67,  1           // InterfaceMethod javax/naming/NamingEnumeration.hasMore:()Z
      77: ifeq          171
      80: aload         5
      82: invokeinterface #68,  1           // InterfaceMethod javax/naming/NamingEnumeration.next:()Ljava/lang/Object;
      87: checkcast     #69                 // class java/lang/String
      90: astore        6
      92: bipush        32
      94: invokestatic  #70                 // Method com/google/common/base/Splitter.on:(C)Lcom/google/common/base/Splitter;
      97: aload         6
      99: invokevirtual #71                 // Method com/google/common/base/Splitter.splitToList:(Ljava/lang/CharSequence;)Ljava/util/List;
     102: astore        7
     104: aload         7
     106: invokeinterface #72,  1           // InterfaceMethod java/util/List.size:()I
     111: iconst_4
     112: if_icmplt     168
     115: aload         7
     117: iconst_3
     118: invokeinterface #73,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     123: checkcast     #69                 // class java/lang/String
     126: invokevirtual #74                 // Method java/lang/String.trim:()Ljava/lang/String;
     129: astore        8
     131: aload         7
     133: iconst_2
     134: invokeinterface #73,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     139: checkcast     #69                 // class java/lang/String
     142: invokevirtual #74                 // Method java/lang/String.trim:()Ljava/lang/String;
     145: astore        9
     147: aload_1
     148: new           #75                 // class java/net/InetSocketAddress
     151: dup
     152: aload         8
     154: aload         9
     156: invokestatic  #76                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     159: invokespecial #77                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     162: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     167: pop
     168: goto          70
     171: goto          180
     174: astore_2
     175: aload_2
     176: invokestatic  #78                 // Method io/etcd/jetcd/common/exception/EtcdExceptionFactory.toEtcdException:(Ljava/lang/Throwable;)Lio/etcd/jetcd/common/exception/EtcdException;
     179: athrow
     180: aload_1
     181: areturn
    Exception table:
       from    to  target type
           8   171   174   Class java/lang/Exception

  static {};
    Code:
       0: ldc           #7                  // class io/etcd/jetcd/resolver/DnsSrvNameResolver
       2: invokestatic  #79                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #48                 // Field LOGGER:Lorg/slf4j/Logger;
       8: iconst_1
       9: anewarray     #69                 // class java/lang/String
      12: dup
      13: iconst_0
      14: ldc           #80                 // String SRV
      16: aastore
      17: putstatic     #62                 // Field ATTRIBUTE_IDS:[Ljava/lang/String;
      20: new           #81                 // class java/util/Hashtable
      23: dup
      24: invokespecial #82                 // Method java/util/Hashtable."<init>":()V
      27: putstatic     #60                 // Field ENV:Ljava/util/Hashtable;
      30: getstatic     #60                 // Field ENV:Ljava/util/Hashtable;
      33: ldc           #83                 // String java.naming.factory.initial
      35: ldc           #84                 // String com.sun.jndi.dns.DnsContextFactory
      37: invokevirtual #85                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: getstatic     #60                 // Field ENV:Ljava/util/Hashtable;
      44: ldc           #86                 // String java.naming.provider.url
      46: ldc           #87                 // String dns:
      48: invokevirtual #85                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: return
}
