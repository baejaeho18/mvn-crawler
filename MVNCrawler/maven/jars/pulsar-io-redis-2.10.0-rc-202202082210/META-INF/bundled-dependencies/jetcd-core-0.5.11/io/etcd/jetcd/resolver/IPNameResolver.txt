Compiled from "IPNameResolver.java"
public class io.etcd.jetcd.resolver.IPNameResolver extends io.grpc.NameResolver {
  public static final java.lang.String SCHEME;

  private static final org.slf4j.Logger LOGGER;

  private static final java.lang.String ETCD_CLIENT_PORT;

  private final java.lang.Object lock;

  private final java.lang.String authority;

  private final java.net.URI targetUri;

  private final java.util.List<io.etcd.jetcd.resolver.IPNameResolver$HostAndPort> addresses;

  private volatile boolean shutdown;

  private volatile boolean resolving;

  private java.util.concurrent.Executor executor;

  private io.grpc.NameResolver$Listener listener;

  public io.etcd.jetcd.resolver.IPNameResolver(java.net.URI);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/grpc/NameResolver."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/Object
       8: dup
       9: invokespecial #3                  // Method java/lang/Object."<init>":()V
      12: putfield      #4                  // Field lock:Ljava/lang/Object;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field targetUri:Ljava/net/URI;
      20: aload_0
      21: aload_1
      22: invokevirtual #6                  // Method java/net/URI.getAuthority:()Ljava/lang/String;
      25: ifnull        35
      28: aload_1
      29: invokevirtual #6                  // Method java/net/URI.getAuthority:()Ljava/lang/String;
      32: goto          37
      35: ldc           #7                  // String
      37: putfield      #8                  // Field authority:Ljava/lang/String;
      40: aload_0
      41: aload_1
      42: invokevirtual #9                  // Method java/net/URI.getPath:()Ljava/lang/String;
      45: ldc           #10                 // String ,
      47: invokevirtual #11                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      50: invokestatic  #12                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      53: invokedynamic #13,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      58: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      63: invokedynamic #15,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      68: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      73: invokestatic  #16                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      76: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      81: checkcast     #18                 // class java/util/List
      84: putfield      #19                 // Field addresses:Ljava/util/List;
      87: return

  public java.lang.String getServiceAuthority();
    Code:
       0: aload_0
       1: getfield      #8                  // Field authority:Ljava/lang/String;
       4: areturn

  public void start(io.grpc.NameResolver$Listener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #20                 // Field listener:Lio/grpc/NameResolver$Listener;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #21                 // String already started
      21: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      24: aload_0
      25: getstatic     #23                 // Field io/grpc/internal/GrpcUtil.SHARED_CHANNEL_EXECUTOR:Lio/grpc/internal/SharedResourceHolder$Resource;
      28: invokestatic  #24                 // Method io/grpc/internal/SharedResourceHolder.get:(Lio/grpc/internal/SharedResourceHolder$Resource;)Ljava/lang/Object;
      31: checkcast     #25                 // class java/util/concurrent/Executor
      34: putfield      #26                 // Field executor:Ljava/util/concurrent/Executor;
      37: aload_0
      38: aload_1
      39: ldc           #27                 // String listener
      41: invokestatic  #28                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #29                 // class io/grpc/NameResolver$Listener
      47: putfield      #20                 // Field listener:Lio/grpc/NameResolver$Listener;
      50: aload_0
      51: invokespecial #30                 // Method resolve:()V
      54: aload_2
      55: monitorexit
      56: goto          64
      59: astore_3
      60: aload_2
      61: monitorexit
      62: aload_3
      63: athrow
      64: return
    Exception table:
       from    to  target type
           7    56    59   any
          59    62    59   any

  public final synchronized void refresh();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method resolve:()V
       4: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #31                 // Field shutdown:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #31                 // Field shutdown:Z
      13: aload_0
      14: getfield      #4                  // Field lock:Ljava/lang/Object;
      17: dup
      18: astore_1
      19: monitorenter
      20: aload_0
      21: getfield      #26                 // Field executor:Ljava/util/concurrent/Executor;
      24: ifnull        44
      27: aload_0
      28: getstatic     #23                 // Field io/grpc/internal/GrpcUtil.SHARED_CHANNEL_EXECUTOR:Lio/grpc/internal/SharedResourceHolder$Resource;
      31: aload_0
      32: getfield      #26                 // Field executor:Ljava/util/concurrent/Executor;
      35: invokestatic  #32                 // Method io/grpc/internal/SharedResourceHolder.release:(Lio/grpc/internal/SharedResourceHolder$Resource;Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #25                 // class java/util/concurrent/Executor
      41: putfield      #26                 // Field executor:Ljava/util/concurrent/Executor;
      44: aload_1
      45: monitorexit
      46: goto          54
      49: astore_2
      50: aload_1
      51: monitorexit
      52: aload_2
      53: athrow
      54: return
    Exception table:
       from    to  target type
          20    46    49   any
          49    52    49   any

  private void resolve();
    Code:
       0: aload_0
       1: getfield      #33                 // Field resolving:Z
       4: ifne          14
       7: aload_0
       8: getfield      #31                 // Field shutdown:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: getfield      #4                  // Field lock:Ljava/lang/Object;
      19: dup
      20: astore_1
      21: monitorenter
      22: aload_0
      23: getfield      #26                 // Field executor:Ljava/util/concurrent/Executor;
      26: aload_0
      27: invokedynamic #34,  0             // InvokeDynamic #2:run:(Lio/etcd/jetcd/resolver/IPNameResolver;)Ljava/lang/Runnable;
      32: invokeinterface #35,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      37: aload_1
      38: monitorexit
      39: goto          47
      42: astore_2
      43: aload_1
      44: monitorexit
      45: aload_2
      46: athrow
      47: return
    Exception table:
       from    to  target type
          22    39    42   any
          42    45    42   any

  private void doResolve();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #31                 // Field shutdown:Z
      11: ifeq          17
      14: aload_2
      15: monitorexit
      16: return
      17: aload_0
      18: iconst_1
      19: putfield      #33                 // Field resolving:Z
      22: aload_0
      23: getfield      #20                 // Field listener:Lio/grpc/NameResolver$Listener;
      26: astore_1
      27: aload_2
      28: monitorexit
      29: goto          37
      32: astore_3
      33: aload_2
      34: monitorexit
      35: aload_3
      36: athrow
      37: aload_0
      38: getfield      #19                 // Field addresses:Ljava/util/List;
      41: invokeinterface #36,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      46: ifeq          78
      49: getstatic     #37                 // Field io/etcd/jetcd/common/exception/ErrorCode.INVALID_ARGUMENT:Lio/etcd/jetcd/common/exception/ErrorCode;
      52: new           #38                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #40                 // String Unable to resolve endpoint
      61: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: getfield      #5                  // Field targetUri:Ljava/net/URI;
      68: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      71: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokestatic  #44                 // Method io/etcd/jetcd/common/exception/EtcdExceptionFactory.newEtcdException:(Lio/etcd/jetcd/common/exception/ErrorCode;Ljava/lang/String;)Lio/etcd/jetcd/common/exception/EtcdException;
      77: athrow
      78: aload_0
      79: getfield      #19                 // Field addresses:Ljava/util/List;
      82: invokeinterface #45,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      87: aload_0
      88: invokedynamic #46,  0             // InvokeDynamic #3:apply:(Lio/etcd/jetcd/resolver/IPNameResolver;)Ljava/util/function/Function;
      93: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      98: invokestatic  #16                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     101: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     106: checkcast     #18                 // class java/util/List
     109: astore_2
     110: aload_1
     111: aload_2
     112: getstatic     #47                 // Field io/grpc/Attributes.EMPTY:Lio/grpc/Attributes;
     115: invokeinterface #48,  3           // InterfaceMethod io/grpc/NameResolver$Listener.onAddresses:(Ljava/util/List;Lio/grpc/Attributes;)V
     120: aload_0
     121: iconst_0
     122: putfield      #33                 // Field resolving:Z
     125: goto          167
     128: astore_2
     129: getstatic     #50                 // Field LOGGER:Lorg/slf4j/Logger;
     132: ldc           #51                 // String Error wile getting list of servers
     134: aload_2
     135: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     140: aload_1
     141: getstatic     #53                 // Field io/grpc/Status.NOT_FOUND:Lio/grpc/Status;
     144: invokeinterface #54,  2           // InterfaceMethod io/grpc/NameResolver$Listener.onError:(Lio/grpc/Status;)V
     149: aload_0
     150: iconst_0
     151: putfield      #33                 // Field resolving:Z
     154: goto          167
     157: astore        4
     159: aload_0
     160: iconst_0
     161: putfield      #33                 // Field resolving:Z
     164: aload         4
     166: athrow
     167: return
    Exception table:
       from    to  target type
           7    16    32   any
          17    29    32   any
          32    35    32   any
          37   120   128   Class java/lang/Exception
          37   120   157   any
         128   149   157   any
         157   159   157   any

  private io.grpc.EquivalentAddressGroup lambda$doResolve$1(io.etcd.jetcd.resolver.IPNameResolver$HostAndPort);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field authority:Ljava/lang/String;
       5: invokevirtual #55                 // Method io/etcd/jetcd/resolver/IPNameResolver$HostAndPort.toAddressGroup:(Ljava/lang/String;)Lio/grpc/EquivalentAddressGroup;
       8: areturn

  private static java.lang.String lambda$new$0(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #56                 // String /
       3: invokevirtual #57                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          17
       9: aload_0
      10: iconst_1
      11: invokevirtual #58                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      14: goto          18
      17: aload_0
      18: areturn

  static {};
    Code:
       0: ldc           #59                 // class io/etcd/jetcd/resolver/IPNameResolver
       2: invokestatic  #60                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #50                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
