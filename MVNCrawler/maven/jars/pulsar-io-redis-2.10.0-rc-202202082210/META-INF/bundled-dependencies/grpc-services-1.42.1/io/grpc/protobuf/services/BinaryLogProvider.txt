Compiled from "BinaryLogProvider.java"
public abstract class io.grpc.protobuf.services.BinaryLogProvider extends io.grpc.BinaryLog {
  public static final io.grpc.MethodDescriptor$Marshaller<byte[]> BYTEARRAY_MARSHALLER;

  private final io.grpc.ClientInterceptor binaryLogShim;

  public io.grpc.protobuf.services.BinaryLogProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/grpc/BinaryLog."<init>":()V
       4: aload_0
       5: new           #2                  // class io/grpc/protobuf/services/BinaryLogProvider$BinaryLogShim
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #3                  // Method io/grpc/protobuf/services/BinaryLogProvider$BinaryLogShim."<init>":(Lio/grpc/protobuf/services/BinaryLogProvider;Lio/grpc/protobuf/services/BinaryLogProvider$1;)V
      14: putfield      #4                  // Field binaryLogShim:Lio/grpc/ClientInterceptor;
      17: return

  public final io.grpc.Channel wrapChannel(io.grpc.Channel);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #5                  // class io/grpc/ClientInterceptor
       5: dup
       6: iconst_0
       7: aload_0
       8: getfield      #4                  // Field binaryLogShim:Lio/grpc/ClientInterceptor;
      11: aastore
      12: invokestatic  #6                  // Method io/grpc/ClientInterceptors.intercept:(Lio/grpc/Channel;[Lio/grpc/ClientInterceptor;)Lio/grpc/Channel;
      15: areturn

  private static io.grpc.MethodDescriptor<byte[], byte[]> toByteBufferMethod(io.grpc.MethodDescriptor<?, ?>);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field BYTEARRAY_MARSHALLER:Lio/grpc/MethodDescriptor$Marshaller;
       4: getstatic     #7                  // Field BYTEARRAY_MARSHALLER:Lio/grpc/MethodDescriptor$Marshaller;
       7: invokevirtual #8                  // Method io/grpc/MethodDescriptor.toBuilder:(Lio/grpc/MethodDescriptor$Marshaller;Lio/grpc/MethodDescriptor$Marshaller;)Lio/grpc/MethodDescriptor$Builder;
      10: invokevirtual #9                  // Method io/grpc/MethodDescriptor$Builder.build:()Lio/grpc/MethodDescriptor;
      13: areturn

  public final <ReqT, RespT> io.grpc.ServerMethodDefinition<?, ?> wrapMethodDefinition(io.grpc.ServerMethodDefinition<ReqT, RespT>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method io/grpc/ServerMethodDefinition.getMethodDescriptor:()Lio/grpc/MethodDescriptor;
       5: invokevirtual #11                 // Method io/grpc/MethodDescriptor.getFullMethodName:()Ljava/lang/String;
       8: invokevirtual #12                 // Method getServerInterceptor:(Ljava/lang/String;)Lio/grpc/ServerInterceptor;
      11: astore_2
      12: aload_2
      13: ifnonnull     18
      16: aload_1
      17: areturn
      18: aload_1
      19: invokevirtual #10                 // Method io/grpc/ServerMethodDefinition.getMethodDescriptor:()Lio/grpc/MethodDescriptor;
      22: invokestatic  #13                 // Method toByteBufferMethod:(Lio/grpc/MethodDescriptor;)Lio/grpc/MethodDescriptor;
      25: astore_3
      26: aload_1
      27: aload_3
      28: invokestatic  #14                 // Method io/grpc/InternalServerInterceptors.wrapMethod:(Lio/grpc/ServerMethodDefinition;Lio/grpc/MethodDescriptor;)Lio/grpc/ServerMethodDefinition;
      31: astore        4
      33: aload_2
      34: aload         4
      36: invokevirtual #15                 // Method io/grpc/ServerMethodDefinition.getServerCallHandler:()Lio/grpc/ServerCallHandler;
      39: invokestatic  #16                 // Method io/grpc/InternalServerInterceptors.interceptCallHandlerCreate:(Lio/grpc/ServerInterceptor;Lio/grpc/ServerCallHandler;)Lio/grpc/ServerCallHandler;
      42: astore        5
      44: aload_3
      45: aload         5
      47: invokestatic  #17                 // Method io/grpc/ServerMethodDefinition.create:(Lio/grpc/MethodDescriptor;Lio/grpc/ServerCallHandler;)Lio/grpc/ServerMethodDefinition;
      50: areturn

  protected abstract io.grpc.ServerInterceptor getServerInterceptor(java.lang.String);

  protected abstract io.grpc.ClientInterceptor getClientInterceptor(java.lang.String, io.grpc.CallOptions);

  public void close() throws java.io.IOException;
    Code:
       0: return

  static {};
    Code:
       0: new           #18                 // class io/grpc/protobuf/services/BinaryLogProvider$ByteArrayMarshaller
       3: dup
       4: aconst_null
       5: invokespecial #19                 // Method io/grpc/protobuf/services/BinaryLogProvider$ByteArrayMarshaller."<init>":(Lio/grpc/protobuf/services/BinaryLogProvider$1;)V
       8: putstatic     #7                  // Field BYTEARRAY_MARSHALLER:Lio/grpc/MethodDescriptor$Marshaller;
      11: return
}
