Compiled from "BinaryLogProviderImpl.java"
class io.grpc.protobuf.services.BinaryLogProviderImpl extends io.grpc.protobuf.services.BinaryLogProvider {
  private static final java.util.concurrent.atomic.AtomicLong counter;

  private final io.grpc.protobuf.services.BinlogHelper$Factory factory;

  private final io.grpc.protobuf.services.BinaryLogSink sink;

  public io.grpc.protobuf.services.BinaryLogProviderImpl() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #1                  // class io/grpc/protobuf/services/TempFileSink
       4: dup
       5: invokespecial #2                  // Method io/grpc/protobuf/services/TempFileSink."<init>":()V
       8: ldc           #3                  // String GRPC_BINARY_LOG_CONFIG
      10: invokestatic  #4                  // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
      13: invokespecial #5                  // Method "<init>":(Lio/grpc/protobuf/services/BinaryLogSink;Ljava/lang/String;)V
      16: return

  public io.grpc.protobuf.services.BinaryLogProviderImpl(io.grpc.protobuf.services.BinaryLogSink) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #3                  // String GRPC_BINARY_LOG_CONFIG
       4: invokestatic  #4                  // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
       7: invokespecial #5                  // Method "<init>":(Lio/grpc/protobuf/services/BinaryLogSink;Ljava/lang/String;)V
      10: return

  public io.grpc.protobuf.services.BinaryLogProviderImpl(io.grpc.protobuf.services.BinaryLogSink, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method io/grpc/protobuf/services/BinaryLogProvider."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #8                  // class io/grpc/protobuf/services/BinaryLogSink
      12: putfield      #9                  // Field sink:Lio/grpc/protobuf/services/BinaryLogSink;
      15: aload_0
      16: new           #10                 // class io/grpc/protobuf/services/BinlogHelper$FactoryImpl
      19: dup
      20: aload_1
      21: aload_2
      22: invokespecial #11                 // Method io/grpc/protobuf/services/BinlogHelper$FactoryImpl."<init>":(Lio/grpc/protobuf/services/BinaryLogSink;Ljava/lang/String;)V
      25: putfield      #12                 // Field factory:Lio/grpc/protobuf/services/BinlogHelper$Factory;
      28: goto          49
      31: astore_3
      32: aload_1
      33: invokeinterface #14,  1           // InterfaceMethod io/grpc/protobuf/services/BinaryLogSink.close:()V
      38: new           #15                 // class java/io/IOException
      41: dup
      42: ldc           #16                 // String Can not initialize. The env variable GRPC_BINARY_LOG_CONFIG must be valid.
      44: aload_3
      45: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      48: athrow
      49: return
    Exception table:
       from    to  target type
          15    28    31   Class java/lang/RuntimeException

  public io.grpc.ServerInterceptor getServerInterceptor(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field factory:Lio/grpc/protobuf/services/BinlogHelper$Factory;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod io/grpc/protobuf/services/BinlogHelper$Factory.getLog:(Ljava/lang/String;)Lio/grpc/protobuf/services/BinlogHelper;
      10: astore_2
      11: aload_2
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_2
      18: getstatic     #19                 // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      21: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      24: invokevirtual #21                 // Method io/grpc/protobuf/services/BinlogHelper.getServerInterceptor:(J)Lio/grpc/ServerInterceptor;
      27: areturn

  public io.grpc.ClientInterceptor getClientInterceptor(java.lang.String, io.grpc.CallOptions);
    Code:
       0: aload_0
       1: getfield      #12                 // Field factory:Lio/grpc/protobuf/services/BinlogHelper$Factory;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod io/grpc/protobuf/services/BinlogHelper$Factory.getLog:(Ljava/lang/String;)Lio/grpc/protobuf/services/BinlogHelper;
      10: astore_3
      11: aload_3
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_3
      18: getstatic     #19                 // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      21: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      24: invokevirtual #22                 // Method io/grpc/protobuf/services/BinlogHelper.getClientInterceptor:(J)Lio/grpc/ClientInterceptor;
      27: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field sink:Lio/grpc/protobuf/services/BinaryLogSink;
       4: invokeinterface #14,  1           // InterfaceMethod io/grpc/protobuf/services/BinaryLogSink.close:()V
       9: return

  static {};
    Code:
       0: new           #23                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_1
       5: invokespecial #24                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #19                 // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      11: return
}
