Compiled from "HealthCheckingLoadBalancerFactory.java"
final class io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState implements io.grpc.LoadBalancer$SubchannelStateListener {
  private final java.lang.Runnable retryTask;

  private final io.grpc.SynchronizationContext syncContext;

  private final java.util.concurrent.ScheduledExecutorService timerService;

  private final io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HelperImpl helperImpl;

  private final io.grpc.LoadBalancer$Subchannel subchannel;

  private final io.grpc.ChannelLogger subchannelLogger;

  private io.grpc.LoadBalancer$SubchannelStateListener stateListener;

  private io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream activeRpc;

  private java.lang.String serviceName;

  private io.grpc.internal.BackoffPolicy backoffPolicy;

  private io.grpc.ConnectivityStateInfo rawState;

  private io.grpc.ConnectivityStateInfo concludedState;

  private boolean running;

  private boolean disabled;

  private io.grpc.SynchronizationContext$ScheduledHandle retryTimer;

  final io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory this$0;

  io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory, io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HelperImpl, io.grpc.LoadBalancer$Subchannel, io.grpc.SynchronizationContext, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field this$0:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory;
       5: aload_0
       6: invokespecial #16                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #17                 // class io/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$1
      13: dup
      14: aload_0
      15: invokespecial #18                 // Method io/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$1."<init>":(Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState;)V
      18: putfield      #2                  // Field retryTask:Ljava/lang/Runnable;
      21: aload_0
      22: getstatic     #19                 // Field io/grpc/ConnectivityState.IDLE:Lio/grpc/ConnectivityState;
      25: invokestatic  #20                 // Method io/grpc/ConnectivityStateInfo.forNonError:(Lio/grpc/ConnectivityState;)Lio/grpc/ConnectivityStateInfo;
      28: putfield      #5                  // Field rawState:Lio/grpc/ConnectivityStateInfo;
      31: aload_0
      32: getstatic     #19                 // Field io/grpc/ConnectivityState.IDLE:Lio/grpc/ConnectivityState;
      35: invokestatic  #20                 // Method io/grpc/ConnectivityStateInfo.forNonError:(Lio/grpc/ConnectivityState;)Lio/grpc/ConnectivityStateInfo;
      38: putfield      #21                 // Field concludedState:Lio/grpc/ConnectivityStateInfo;
      41: aload_0
      42: aload_2
      43: ldc           #22                 // String helperImpl
      45: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #24                 // class io/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HelperImpl
      51: putfield      #25                 // Field helperImpl:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HelperImpl;
      54: aload_0
      55: aload_3
      56: ldc           #26                 // String subchannel
      58: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #27                 // class io/grpc/LoadBalancer$Subchannel
      64: putfield      #12                 // Field subchannel:Lio/grpc/LoadBalancer$Subchannel;
      67: aload_0
      68: aload_3
      69: invokevirtual #28                 // Method io/grpc/LoadBalancer$Subchannel.getChannelLogger:()Lio/grpc/ChannelLogger;
      72: ldc           #29                 // String subchannelLogger
      74: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #30                 // class io/grpc/ChannelLogger
      80: putfield      #8                  // Field subchannelLogger:Lio/grpc/ChannelLogger;
      83: aload_0
      84: aload         4
      86: ldc           #31                 // String syncContext
      88: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      91: checkcast     #32                 // class io/grpc/SynchronizationContext
      94: putfield      #10                 // Field syncContext:Lio/grpc/SynchronizationContext;
      97: aload_0
      98: aload         5
     100: ldc           #33                 // String timerService
     102: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     105: checkcast     #34                 // class java/util/concurrent/ScheduledExecutorService
     108: putfield      #1                  // Field timerService:Ljava/util/concurrent/ScheduledExecutorService;
     111: return

  void init(io.grpc.LoadBalancer$SubchannelStateListener);
    Code:
       0: aload_0
       1: getfield      #35                 // Field stateListener:Lio/grpc/LoadBalancer$SubchannelStateListener;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #36                 // String init() already called
      14: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: aload_1
      19: ldc           #38                 // String listener
      21: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #39                 // class io/grpc/LoadBalancer$SubchannelStateListener
      27: putfield      #35                 // Field stateListener:Lio/grpc/LoadBalancer$SubchannelStateListener;
      30: return

  void setServiceName(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #13                 // Field serviceName:Ljava/lang/String;
       5: invokestatic  #40                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: aload_1
      14: putfield      #13                 // Field serviceName:Ljava/lang/String;
      17: aload_0
      18: getfield      #13                 // Field serviceName:Ljava/lang/String;
      21: ifnonnull     29
      24: ldc           #41                 // String Health check disabled by service config
      26: goto          48
      29: new           #42                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #44                 // String Switching to new service name:
      38: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: astore_2
      49: aload_0
      50: aload_2
      51: invokespecial #47                 // Method stopRpc:(Ljava/lang/String;)V
      54: aload_0
      55: invokespecial #48                 // Method adjustHealthCheck:()V
      58: return

  public void onSubchannelState(io.grpc.ConnectivityStateInfo);
    Code:
       0: aload_0
       1: getfield      #5                  // Field rawState:Lio/grpc/ConnectivityStateInfo;
       4: invokevirtual #49                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
       7: getstatic     #50                 // Field io/grpc/ConnectivityState.READY:Lio/grpc/ConnectivityState;
      10: invokestatic  #40                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: ifeq          34
      16: aload_1
      17: invokevirtual #49                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      20: getstatic     #50                 // Field io/grpc/ConnectivityState.READY:Lio/grpc/ConnectivityState;
      23: invokestatic  #40                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      26: ifne          34
      29: aload_0
      30: iconst_0
      31: putfield      #6                  // Field disabled:Z
      34: aload_1
      35: invokevirtual #49                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      38: getstatic     #51                 // Field io/grpc/ConnectivityState.SHUTDOWN:Lio/grpc/ConnectivityState;
      41: invokestatic  #40                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      44: ifeq          59
      47: aload_0
      48: getfield      #25                 // Field helperImpl:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HelperImpl;
      51: getfield      #52                 // Field io/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HelperImpl.hcStates:Ljava/util/HashSet;
      54: aload_0
      55: invokevirtual #53                 // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
      58: pop
      59: aload_0
      60: aload_1
      61: putfield      #5                  // Field rawState:Lio/grpc/ConnectivityStateInfo;
      64: aload_0
      65: invokespecial #48                 // Method adjustHealthCheck:()V
      68: return

  private boolean isRetryTimerPending();
    Code:
       0: aload_0
       1: getfield      #3                  // Field retryTimer:Lio/grpc/SynchronizationContext$ScheduledHandle;
       4: ifnull        21
       7: aload_0
       8: getfield      #3                  // Field retryTimer:Lio/grpc/SynchronizationContext$ScheduledHandle;
      11: invokevirtual #54                 // Method io/grpc/SynchronizationContext$ScheduledHandle.isPending:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  private void adjustHealthCheck();
    Code:
       0: aload_0
       1: getfield      #6                  // Field disabled:Z
       4: ifne          56
       7: aload_0
       8: getfield      #13                 // Field serviceName:Ljava/lang/String;
      11: ifnull        56
      14: aload_0
      15: getfield      #5                  // Field rawState:Lio/grpc/ConnectivityStateInfo;
      18: invokevirtual #49                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      21: getstatic     #50                 // Field io/grpc/ConnectivityState.READY:Lio/grpc/ConnectivityState;
      24: invokestatic  #40                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      27: ifeq          56
      30: aload_0
      31: iconst_1
      32: putfield      #55                 // Field running:Z
      35: aload_0
      36: getfield      #11                 // Field activeRpc:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream;
      39: ifnonnull     80
      42: aload_0
      43: invokespecial #4                  // Method isRetryTimerPending:()Z
      46: ifne          80
      49: aload_0
      50: invokespecial #14                 // Method startRpc:()V
      53: goto          80
      56: aload_0
      57: iconst_0
      58: putfield      #55                 // Field running:Z
      61: aload_0
      62: ldc           #56                 // String Client stops health check
      64: invokespecial #47                 // Method stopRpc:(Ljava/lang/String;)V
      67: aload_0
      68: aconst_null
      69: putfield      #9                  // Field backoffPolicy:Lio/grpc/internal/BackoffPolicy;
      72: aload_0
      73: aload_0
      74: getfield      #5                  // Field rawState:Lio/grpc/ConnectivityStateInfo;
      77: invokespecial #7                  // Method gotoState:(Lio/grpc/ConnectivityStateInfo;)V
      80: return

  private void startRpc();
    Code:
       0: aload_0
       1: getfield      #13                 // Field serviceName:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #57                 // String serviceName is null
      14: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: getfield      #11                 // Field activeRpc:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream;
      21: ifnonnull     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #58                 // String previous health-checking RPC has not been cleaned up
      31: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      34: aload_0
      35: getfield      #12                 // Field subchannel:Lio/grpc/LoadBalancer$Subchannel;
      38: ifnull        45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ldc           #59                 // String init() not called
      48: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      51: aload_0
      52: getfield      #21                 // Field concludedState:Lio/grpc/ConnectivityStateInfo;
      55: invokevirtual #49                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      58: getstatic     #50                 // Field io/grpc/ConnectivityState.READY:Lio/grpc/ConnectivityState;
      61: invokestatic  #40                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifne          100
      67: aload_0
      68: getfield      #8                  // Field subchannelLogger:Lio/grpc/ChannelLogger;
      71: getstatic     #60                 // Field io/grpc/ChannelLogger$ChannelLogLevel.INFO:Lio/grpc/ChannelLogger$ChannelLogLevel;
      74: ldc           #61                 // String CONNECTING: Starting health-check for \"{0}\"
      76: iconst_1
      77: anewarray     #62                 // class java/lang/Object
      80: dup
      81: iconst_0
      82: aload_0
      83: getfield      #13                 // Field serviceName:Ljava/lang/String;
      86: aastore
      87: invokevirtual #63                 // Method io/grpc/ChannelLogger.log:(Lio/grpc/ChannelLogger$ChannelLogLevel;Ljava/lang/String;[Ljava/lang/Object;)V
      90: aload_0
      91: getstatic     #64                 // Field io/grpc/ConnectivityState.CONNECTING:Lio/grpc/ConnectivityState;
      94: invokestatic  #20                 // Method io/grpc/ConnectivityStateInfo.forNonError:(Lio/grpc/ConnectivityState;)Lio/grpc/ConnectivityStateInfo;
      97: invokespecial #7                  // Method gotoState:(Lio/grpc/ConnectivityStateInfo;)V
     100: aload_0
     101: new           #65                 // class io/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream
     104: dup
     105: aload_0
     106: invokespecial #66                 // Method io/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream."<init>":(Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState;)V
     109: putfield      #11                 // Field activeRpc:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream;
     112: aload_0
     113: getfield      #11                 // Field activeRpc:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream;
     116: invokevirtual #67                 // Method io/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream.start:()V
     119: return

  private void stopRpc(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field activeRpc:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream;
       4: ifnull        20
       7: aload_0
       8: getfield      #11                 // Field activeRpc:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream;
      11: aload_1
      12: invokevirtual #68                 // Method io/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream.cancel:(Ljava/lang/String;)V
      15: aload_0
      16: aconst_null
      17: putfield      #11                 // Field activeRpc:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream;
      20: aload_0
      21: getfield      #3                  // Field retryTimer:Lio/grpc/SynchronizationContext$ScheduledHandle;
      24: ifnull        39
      27: aload_0
      28: getfield      #3                  // Field retryTimer:Lio/grpc/SynchronizationContext$ScheduledHandle;
      31: invokevirtual #69                 // Method io/grpc/SynchronizationContext$ScheduledHandle.cancel:()V
      34: aload_0
      35: aconst_null
      36: putfield      #3                  // Field retryTimer:Lio/grpc/SynchronizationContext$ScheduledHandle;
      39: return

  private void gotoState(io.grpc.ConnectivityStateInfo);
    Code:
       0: aload_0
       1: getfield      #12                 // Field subchannel:Lio/grpc/LoadBalancer$Subchannel;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #59                 // String init() not called
      14: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: getfield      #21                 // Field concludedState:Lio/grpc/ConnectivityStateInfo;
      21: aload_1
      22: invokestatic  #40                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      25: ifne          46
      28: aload_0
      29: aload_1
      30: putfield      #21                 // Field concludedState:Lio/grpc/ConnectivityStateInfo;
      33: aload_0
      34: getfield      #35                 // Field stateListener:Lio/grpc/LoadBalancer$SubchannelStateListener;
      37: aload_0
      38: getfield      #21                 // Field concludedState:Lio/grpc/ConnectivityStateInfo;
      41: invokeinterface #70,  2           // InterfaceMethod io/grpc/LoadBalancer$SubchannelStateListener.onSubchannelState:(Lio/grpc/ConnectivityStateInfo;)V
      46: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #71                 // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       4: ldc           #72                 // String running
       6: aload_0
       7: getfield      #55                 // Field running:Z
      10: invokevirtual #73                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Z)Lcom/google/common/base/MoreObjects$ToStringHelper;
      13: ldc           #74                 // String disabled
      15: aload_0
      16: getfield      #6                  // Field disabled:Z
      19: invokevirtual #73                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Z)Lcom/google/common/base/MoreObjects$ToStringHelper;
      22: ldc           #75                 // String activeRpc
      24: aload_0
      25: getfield      #11                 // Field activeRpc:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream;
      28: invokevirtual #76                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      31: ldc           #77                 // String serviceName
      33: aload_0
      34: getfield      #13                 // Field serviceName:Ljava/lang/String;
      37: invokevirtual #76                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      40: ldc           #78                 // String rawState
      42: aload_0
      43: getfield      #5                  // Field rawState:Lio/grpc/ConnectivityStateInfo;
      46: invokevirtual #76                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      49: ldc           #79                 // String concludedState
      51: aload_0
      52: getfield      #21                 // Field concludedState:Lio/grpc/ConnectivityStateInfo;
      55: invokevirtual #76                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      58: invokevirtual #80                 // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      61: areturn

  static void access$000(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method startRpc:()V
       4: return

  static java.lang.String access$200(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState);
    Code:
       0: aload_0
       1: getfield      #13                 // Field serviceName:Ljava/lang/String;
       4: areturn

  static io.grpc.LoadBalancer$Subchannel access$300(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState);
    Code:
       0: aload_0
       1: getfield      #12                 // Field subchannel:Lio/grpc/LoadBalancer$Subchannel;
       4: areturn

  static io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream access$400(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState);
    Code:
       0: aload_0
       1: getfield      #11                 // Field activeRpc:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream;
       4: areturn

  static io.grpc.SynchronizationContext access$500(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState);
    Code:
       0: aload_0
       1: getfield      #10                 // Field syncContext:Lio/grpc/SynchronizationContext;
       4: areturn

  static io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream access$402(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState, io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #11                 // Field activeRpc:Lio/grpc/protobuf/services/HealthCheckingLoadBalancerFactory$HealthCheckState$HcStream;
       6: areturn

  static io.grpc.internal.BackoffPolicy access$602(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState, io.grpc.internal.BackoffPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #9                  // Field backoffPolicy:Lio/grpc/internal/BackoffPolicy;
       6: areturn

  static io.grpc.ChannelLogger access$700(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState);
    Code:
       0: aload_0
       1: getfield      #8                  // Field subchannelLogger:Lio/grpc/ChannelLogger;
       4: areturn

  static void access$800(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState, io.grpc.ConnectivityStateInfo);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method gotoState:(Lio/grpc/ConnectivityStateInfo;)V
       5: return

  static boolean access$902(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field disabled:Z
       6: ireturn

  static io.grpc.ConnectivityStateInfo access$1100(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState);
    Code:
       0: aload_0
       1: getfield      #5                  // Field rawState:Lio/grpc/ConnectivityStateInfo;
       4: areturn

  static io.grpc.internal.BackoffPolicy access$600(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState);
    Code:
       0: aload_0
       1: getfield      #9                  // Field backoffPolicy:Lio/grpc/internal/BackoffPolicy;
       4: areturn

  static boolean access$1300(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method isRetryTimerPending:()Z
       4: ireturn

  static io.grpc.SynchronizationContext$ScheduledHandle access$1402(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState, io.grpc.SynchronizationContext$ScheduledHandle);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field retryTimer:Lio/grpc/SynchronizationContext$ScheduledHandle;
       6: areturn

  static java.lang.Runnable access$1500(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState);
    Code:
       0: aload_0
       1: getfield      #2                  // Field retryTask:Ljava/lang/Runnable;
       4: areturn

  static java.util.concurrent.ScheduledExecutorService access$1600(io.grpc.protobuf.services.HealthCheckingLoadBalancerFactory$HealthCheckState);
    Code:
       0: aload_0
       1: getfield      #1                  // Field timerService:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn
}
