Compiled from "CallMetricRecorder.java"
public final class io.grpc.services.CallMetricRecorder {
  private static final io.grpc.services.CallMetricRecorder NOOP;

  static final io.grpc.Context$Key<io.grpc.services.CallMetricRecorder> CONTEXT_KEY;

  private final java.util.concurrent.atomic.AtomicReference<java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Double>> metrics;

  private volatile boolean disabled;

  io.grpc.services.CallMetricRecorder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field metrics:Ljava/util/concurrent/atomic/AtomicReference;
      15: return

  public static io.grpc.services.CallMetricRecorder getCurrent();
    Code:
       0: getstatic     #5                  // Field CONTEXT_KEY:Lio/grpc/Context$Key;
       3: invokevirtual #6                  // Method io/grpc/Context$Key.get:()Ljava/lang/Object;
       6: checkcast     #7                  // class io/grpc/services/CallMetricRecorder
       9: astore_0
      10: aload_0
      11: ifnull        18
      14: aload_0
      15: goto          21
      18: getstatic     #8                  // Field NOOP:Lio/grpc/services/CallMetricRecorder;
      21: areturn

  public io.grpc.services.CallMetricRecorder recordCallMetric(java.lang.String, double);
    Code:
       0: aload_0
       1: getfield      #9                  // Field disabled:Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_0
      10: getfield      #4                  // Field metrics:Ljava/util/concurrent/atomic/AtomicReference;
      13: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      16: ifnonnull     35
      19: aload_0
      20: getfield      #4                  // Field metrics:Ljava/util/concurrent/atomic/AtomicReference;
      23: aconst_null
      24: new           #11                 // class java/util/concurrent/ConcurrentHashMap
      27: dup
      28: invokespecial #12                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      31: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      34: pop
      35: aload_0
      36: getfield      #4                  // Field metrics:Ljava/util/concurrent/atomic/AtomicReference;
      39: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      42: checkcast     #11                 // class java/util/concurrent/ConcurrentHashMap
      45: aload_1
      46: dload_2
      47: invokestatic  #14                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      50: invokevirtual #15                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: aload_0
      55: areturn

  java.util.Map<java.lang.String, java.lang.Double> finalizeAndDump();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field disabled:Z
       5: aload_0
       6: getfield      #4                  // Field metrics:Ljava/util/concurrent/atomic/AtomicReference;
       9: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      12: checkcast     #16                 // class java/util/Map
      15: astore_1
      16: aload_1
      17: ifnonnull     24
      20: invokestatic  #17                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      23: areturn
      24: aload_1
      25: invokestatic  #18                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      28: areturn

  boolean isDisabled();
    Code:
       0: aload_0
       1: getfield      #9                  // Field disabled:Z
       4: ireturn

  private io.grpc.services.CallMetricRecorder disable();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field disabled:Z
       5: aload_0
       6: areturn

  static {};
    Code:
       0: new           #7                  // class io/grpc/services/CallMetricRecorder
       3: dup
       4: invokespecial #19                 // Method "<init>":()V
       7: invokespecial #20                 // Method disable:()Lio/grpc/services/CallMetricRecorder;
      10: putstatic     #8                  // Field NOOP:Lio/grpc/services/CallMetricRecorder;
      13: ldc           #21                 // String io.grpc.services.CallMetricRecorder
      15: invokestatic  #22                 // Method io/grpc/Context.key:(Ljava/lang/String;)Lio/grpc/Context$Key;
      18: putstatic     #5                  // Field CONTEXT_KEY:Lio/grpc/Context$Key;
      21: return
}
