Compiled from "HealthCheckingRoundRobinLoadBalancerProvider.java"
public final class io.grpc.protobuf.services.internal.HealthCheckingRoundRobinLoadBalancerProvider extends io.grpc.LoadBalancerProvider {
  private final io.grpc.LoadBalancerProvider rrProvider;

  public io.grpc.protobuf.services.internal.HealthCheckingRoundRobinLoadBalancerProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/grpc/LoadBalancerProvider."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method newRoundRobinProvider:()Lio/grpc/LoadBalancerProvider;
       8: putfield      #3                  // Field rrProvider:Lio/grpc/LoadBalancerProvider;
      11: return

  public boolean isAvailable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field rrProvider:Lio/grpc/LoadBalancerProvider;
       4: invokevirtual #4                  // Method io/grpc/LoadBalancerProvider.isAvailable:()Z
       7: ireturn

  public int getPriority();
    Code:
       0: aload_0
       1: getfield      #3                  // Field rrProvider:Lio/grpc/LoadBalancerProvider;
       4: invokevirtual #5                  // Method io/grpc/LoadBalancerProvider.getPriority:()I
       7: iconst_1
       8: iadd
       9: ireturn

  public java.lang.String getPolicyName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field rrProvider:Lio/grpc/LoadBalancerProvider;
       4: invokevirtual #6                  // Method io/grpc/LoadBalancerProvider.getPolicyName:()Ljava/lang/String;
       7: areturn

  public io.grpc.LoadBalancer newLoadBalancer(io.grpc.LoadBalancer$Helper);
    Code:
       0: aload_0
       1: getfield      #3                  // Field rrProvider:Lio/grpc/LoadBalancerProvider;
       4: aload_1
       5: invokestatic  #7                  // Method io/grpc/protobuf/services/HealthCheckingLoadBalancerUtil.newHealthCheckingLoadBalancer:(Lio/grpc/LoadBalancer$Factory;Lio/grpc/LoadBalancer$Helper;)Lio/grpc/LoadBalancer;
       8: areturn

  public io.grpc.NameResolver$ConfigOrError parseLoadBalancingPolicyConfig(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field rrProvider:Lio/grpc/LoadBalancerProvider;
       4: aload_1
       5: invokevirtual #8                  // Method io/grpc/LoadBalancerProvider.parseLoadBalancingPolicyConfig:(Ljava/util/Map;)Lio/grpc/NameResolver$ConfigOrError;
       8: areturn

  static io.grpc.LoadBalancerProvider newRoundRobinProvider();
    Code:
       0: ldc           #9                  // String io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider
       2: invokestatic  #10                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       5: ldc           #11                 // class io/grpc/LoadBalancerProvider
       7: invokevirtual #12                 // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      10: astore_0
      11: aload_0
      12: iconst_0
      13: anewarray     #13                 // class java/lang/Class
      16: invokevirtual #14                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      19: iconst_0
      20: anewarray     #15                 // class java/lang/Object
      23: invokevirtual #16                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #11                 // class io/grpc/LoadBalancerProvider
      29: areturn
      30: astore_0
      31: aload_0
      32: invokestatic  #18                 // Method com/google/common/base/Throwables.throwIfUnchecked:(Ljava/lang/Throwable;)V
      35: new           #19                 // class java/lang/RuntimeException
      38: dup
      39: aload_0
      40: invokespecial #20                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      43: athrow
    Exception table:
       from    to  target type
           0    29    30   Class java/lang/Exception
}
