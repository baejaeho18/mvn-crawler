Compiled from "Schema.java"
abstract class org.apache.avro.Schema$NamedSchema extends org.apache.avro.Schema {
  final org.apache.avro.Schema$Name name;

  final java.lang.String doc;

  java.util.Set<org.apache.avro.Schema$Name> aliases;

  public org.apache.avro.Schema$NamedSchema(org.apache.avro.Schema$Type, org.apache.avro.Schema$Name, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/avro/Schema."<init>":(Lorg/apache/avro/Schema$Type;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field doc:Ljava/lang/String;
      15: getstatic     #4                  // Field PRIMITIVES:Ljava/util/Map;
      18: aload_2
      19: invokestatic  #5                  // Method org/apache/avro/Schema$Name.access$700:(Lorg/apache/avro/Schema$Name;)Ljava/lang/String;
      22: invokeinterface #6,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      27: ifeq          60
      30: new           #7                  // class org/apache/avro/AvroTypeException
      33: dup
      34: new           #8                  // class java/lang/StringBuilder
      37: dup
      38: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #10                 // String Schemas may not be named after primitives:
      43: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_2
      47: invokestatic  #5                  // Method org/apache/avro/Schema$Name.access$700:(Lorg/apache/avro/Schema$Name;)Ljava/lang/String;
      50: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #13                 // Method org/apache/avro/AvroTypeException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
       4: invokestatic  #14                 // Method org/apache/avro/Schema$Name.access$800:(Lorg/apache/avro/Schema$Name;)Ljava/lang/String;
       7: areturn

  public java.lang.String getDoc();
    Code:
       0: aload_0
       1: getfield      #3                  // Field doc:Ljava/lang/String;
       4: areturn

  public java.lang.String getNamespace();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
       4: invokestatic  #15                 // Method org/apache/avro/Schema$Name.access$900:(Lorg/apache/avro/Schema$Name;)Ljava/lang/String;
       7: areturn

  public java.lang.String getFullName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
       4: invokestatic  #5                  // Method org/apache/avro/Schema$Name.access$700:(Lorg/apache/avro/Schema$Name;)Ljava/lang/String;
       7: areturn

  public void addAlias(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #16                 // Method addAlias:(Ljava/lang/String;Ljava/lang/String;)V
       6: return

  public void addAlias(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field aliases:Ljava/util/Set;
       4: ifnonnull     18
       7: aload_0
       8: new           #18                 // class java/util/LinkedHashSet
      11: dup
      12: invokespecial #19                 // Method java/util/LinkedHashSet."<init>":()V
      15: putfield      #17                 // Field aliases:Ljava/util/Set;
      18: aload_2
      19: ifnonnull     30
      22: aload_0
      23: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
      26: invokestatic  #15                 // Method org/apache/avro/Schema$Name.access$900:(Lorg/apache/avro/Schema$Name;)Ljava/lang/String;
      29: astore_2
      30: aload_0
      31: getfield      #17                 // Field aliases:Ljava/util/Set;
      34: new           #20                 // class org/apache/avro/Schema$Name
      37: dup
      38: aload_1
      39: aload_2
      40: invokespecial #21                 // Method org/apache/avro/Schema$Name."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      43: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      48: pop
      49: return

  public java.util.Set<java.lang.String> getAliases();
    Code:
       0: new           #18                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #19                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #17                 // Field aliases:Ljava/util/Set;
      12: ifnull        58
      15: aload_0
      16: getfield      #17                 // Field aliases:Ljava/util/Set;
      19: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          58
      34: aload_2
      35: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #20                 // class org/apache/avro/Schema$Name
      43: astore_3
      44: aload_1
      45: aload_3
      46: invokestatic  #5                  // Method org/apache/avro/Schema$Name.access$700:(Lorg/apache/avro/Schema$Name;)Ljava/lang/String;
      49: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      54: pop
      55: goto          25
      58: aload_1
      59: areturn

  public boolean writeNameRef(org.apache.avro.Schema$Names, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
       6: invokevirtual #26                 // Method org/apache/avro/Schema$Names.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: invokevirtual #27                 // Method equals:(Ljava/lang/Object;)Z
      12: ifeq          32
      15: aload_2
      16: aload_0
      17: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
      20: aload_1
      21: invokevirtual #28                 // Method org/apache/avro/Schema$Names.space:()Ljava/lang/String;
      24: invokevirtual #29                 // Method org/apache/avro/Schema$Name.getQualified:(Ljava/lang/String;)Ljava/lang/String;
      27: invokevirtual #30                 // Method com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
      30: iconst_1
      31: ireturn
      32: aload_0
      33: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
      36: invokestatic  #14                 // Method org/apache/avro/Schema$Name.access$800:(Lorg/apache/avro/Schema$Name;)Ljava/lang/String;
      39: ifnull        52
      42: aload_1
      43: aload_0
      44: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
      47: aload_0
      48: invokevirtual #31                 // Method org/apache/avro/Schema$Names.put:(Lorg/apache/avro/Schema$Name;Lorg/apache/avro/Schema;)Lorg/apache/avro/Schema;
      51: pop
      52: iconst_0
      53: ireturn

  public void writeName(org.apache.avro.Schema$Names, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
       4: aload_1
       5: aload_2
       6: invokevirtual #32                 // Method org/apache/avro/Schema$Name.writeName:(Lorg/apache/avro/Schema$Names;Lcom/fasterxml/jackson/core/JsonGenerator;)V
       9: return

  public boolean equalNames(org.apache.avro.Schema$NamedSchema);
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
       4: aload_1
       5: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
       8: invokevirtual #33                 // Method org/apache/avro/Schema$Name.equals:(Ljava/lang/Object;)Z
      11: ireturn

  int computeHash();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method org/apache/avro/Schema.computeHash:()I
       4: aload_0
       5: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
       8: invokevirtual #35                 // Method org/apache/avro/Schema$Name.hashCode:()I
      11: iadd
      12: ireturn

  public void aliasesToJson(com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field aliases:Ljava/util/Set;
       4: ifnull        19
       7: aload_0
       8: getfield      #17                 // Field aliases:Ljava/util/Set;
      11: invokeinterface #36,  1           // InterfaceMethod java/util/Set.size:()I
      16: ifne          20
      19: return
      20: aload_1
      21: ldc           #37                 // String aliases
      23: invokevirtual #38                 // Method com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V
      26: aload_1
      27: invokevirtual #39                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V
      30: aload_0
      31: getfield      #17                 // Field aliases:Ljava/util/Set;
      34: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      39: astore_2
      40: aload_2
      41: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          77
      49: aload_2
      50: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #20                 // class org/apache/avro/Schema$Name
      58: astore_3
      59: aload_1
      60: aload_3
      61: aload_0
      62: getfield      #2                  // Field name:Lorg/apache/avro/Schema$Name;
      65: invokestatic  #15                 // Method org/apache/avro/Schema$Name.access$900:(Lorg/apache/avro/Schema$Name;)Ljava/lang/String;
      68: invokevirtual #29                 // Method org/apache/avro/Schema$Name.getQualified:(Ljava/lang/String;)Ljava/lang/String;
      71: invokevirtual #30                 // Method com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
      74: goto          40
      77: aload_1
      78: invokevirtual #40                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V
      81: return
}
