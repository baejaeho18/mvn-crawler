Compiled from "BinaryDecoder.java"
class org.apache.avro.io.BinaryDecoder$ByteArrayByteSource extends org.apache.avro.io.BinaryDecoder$ByteSource {
  private static final int MIN_SIZE;

  private byte[] data;

  private int position;

  private int max;

  private boolean compacted;

  private org.apache.avro.io.BinaryDecoder$ByteArrayByteSource(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/avro/io/BinaryDecoder$ByteSource."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field compacted:Z
       9: iload_3
      10: bipush        16
      12: if_icmpge     41
      15: aload_0
      16: aload_1
      17: iload_2
      18: iload_2
      19: bipush        16
      21: iadd
      22: invokestatic  #5                  // Method java/util/Arrays.copyOfRange:([BII)[B
      25: putfield      #6                  // Field data:[B
      28: aload_0
      29: iconst_0
      30: putfield      #7                  // Field position:I
      33: aload_0
      34: iload_3
      35: putfield      #8                  // Field max:I
      38: goto          58
      41: aload_0
      42: aload_1
      43: putfield      #6                  // Field data:[B
      46: aload_0
      47: iload_2
      48: putfield      #7                  // Field position:I
      51: aload_0
      52: iload_2
      53: iload_3
      54: iadd
      55: putfield      #8                  // Field max:I
      58: return

  protected void attach(int, org.apache.avro.io.BinaryDecoder);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #6                  // Field data:[B
       5: invokestatic  #9                  // Method org/apache/avro/io/BinaryDecoder.access$202:(Lorg/apache/avro/io/BinaryDecoder;[B)[B
       8: pop
       9: aload_2
      10: aload_0
      11: getfield      #7                  // Field position:I
      14: invokestatic  #10                 // Method org/apache/avro/io/BinaryDecoder.access$302:(Lorg/apache/avro/io/BinaryDecoder;I)I
      17: pop
      18: aload_2
      19: aload_0
      20: getfield      #7                  // Field position:I
      23: invokestatic  #11                 // Method org/apache/avro/io/BinaryDecoder.access$502:(Lorg/apache/avro/io/BinaryDecoder;I)I
      26: pop
      27: aload_2
      28: aload_0
      29: getfield      #8                  // Field max:I
      32: invokestatic  #12                 // Method org/apache/avro/io/BinaryDecoder.access$402:(Lorg/apache/avro/io/BinaryDecoder;I)I
      35: pop
      36: aload_0
      37: new           #13                 // class org/apache/avro/io/BinaryDecoder$BufferAccessor
      40: dup
      41: aload_2
      42: aconst_null
      43: invokespecial #14                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor."<init>":(Lorg/apache/avro/io/BinaryDecoder;Lorg/apache/avro/io/BinaryDecoder$1;)V
      46: putfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
      49: return

  protected void skipSourceBytes(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #16                 // Method trySkipBytes:(J)J
       5: lstore_3
       6: lload_3
       7: lload_1
       8: lcmp
       9: ifge          20
      12: new           #17                 // class java/io/EOFException
      15: dup
      16: invokespecial #18                 // Method java/io/EOFException."<init>":()V
      19: athrow
      20: return

  protected long trySkipBytes(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
       5: invokevirtual #19                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.getLim:()I
       8: putfield      #8                  // Field max:I
      11: aload_0
      12: aload_0
      13: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
      16: invokevirtual #20                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.getPos:()I
      19: putfield      #7                  // Field position:I
      22: aload_0
      23: getfield      #8                  // Field max:I
      26: i2l
      27: aload_0
      28: getfield      #7                  // Field position:I
      31: i2l
      32: lsub
      33: lstore_3
      34: lload_3
      35: lload_1
      36: lcmp
      37: iflt          65
      40: aload_0
      41: aload_0
      42: getfield      #7                  // Field position:I
      45: i2l
      46: lload_1
      47: ladd
      48: l2i
      49: putfield      #7                  // Field position:I
      52: aload_0
      53: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
      56: aload_0
      57: getfield      #7                  // Field position:I
      60: invokevirtual #21                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.setPos:(I)V
      63: lload_1
      64: lreturn
      65: aload_0
      66: dup
      67: getfield      #7                  // Field position:I
      70: i2l
      71: lload_3
      72: ladd
      73: l2i
      74: putfield      #7                  // Field position:I
      77: aload_0
      78: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
      81: aload_0
      82: getfield      #7                  // Field position:I
      85: invokevirtual #21                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.setPos:(I)V
      88: lload_3
      89: lreturn

  protected void readRaw(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #22                 // Method tryReadRaw:([BII)I
       7: istore        4
       9: iload         4
      11: iload_3
      12: if_icmpge     23
      15: new           #17                 // class java/io/EOFException
      18: dup
      19: invokespecial #18                 // Method java/io/EOFException."<init>":()V
      22: athrow
      23: return

  protected int tryReadRaw(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  protected void compactAndFill(byte[], int, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field compacted:Z
       4: ifne          43
       7: iload         4
       9: bipush        16
      11: iadd
      12: newarray       byte
      14: astore        5
      16: aload_1
      17: iload_2
      18: aload         5
      20: iconst_0
      21: iload         4
      23: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      26: aload_0
      27: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
      30: aload         5
      32: iconst_0
      33: iload         4
      35: invokevirtual #24                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.setBuf:([BII)V
      38: aload_0
      39: iconst_1
      40: putfield      #3                  // Field compacted:Z
      43: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
       5: invokevirtual #19                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.getLim:()I
       8: putfield      #8                  // Field max:I
      11: aload_0
      12: aload_0
      13: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
      16: invokevirtual #20                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.getPos:()I
      19: putfield      #7                  // Field position:I
      22: aload_0
      23: getfield      #7                  // Field position:I
      26: aload_0
      27: getfield      #8                  // Field max:I
      30: if_icmplt     35
      33: iconst_m1
      34: ireturn
      35: aload_0
      36: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
      39: invokevirtual #25                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.getBuf:()[B
      42: aload_0
      43: dup
      44: getfield      #7                  // Field position:I
      47: dup_x1
      48: iconst_1
      49: iadd
      50: putfield      #7                  // Field position:I
      53: baload
      54: sipush        255
      57: iand
      58: istore_1
      59: aload_0
      60: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
      63: aload_0
      64: getfield      #7                  // Field position:I
      67: invokevirtual #21                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.setPos:(I)V
      70: iload_1
      71: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
       4: aload_0
       5: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
       8: invokevirtual #19                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.getLim:()I
      11: invokevirtual #21                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.setPos:(I)V
      14: return

  public boolean isEof();
    Code:
       0: aload_0
       1: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
       4: invokevirtual #19                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.getLim:()I
       7: aload_0
       8: getfield      #15                 // Field ba:Lorg/apache/avro/io/BinaryDecoder$BufferAccessor;
      11: invokevirtual #20                 // Method org/apache/avro/io/BinaryDecoder$BufferAccessor.getPos:()I
      14: isub
      15: istore_1
      16: iload_1
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  org.apache.avro.io.BinaryDecoder$ByteArrayByteSource(byte[], int, int, org.apache.avro.io.BinaryDecoder$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #1                  // Method "<init>":([BII)V
       7: return
}
