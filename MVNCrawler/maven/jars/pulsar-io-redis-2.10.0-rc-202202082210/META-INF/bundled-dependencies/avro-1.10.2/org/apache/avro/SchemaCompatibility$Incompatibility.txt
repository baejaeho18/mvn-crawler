Compiled from "SchemaCompatibility.java"
public final class org.apache.avro.SchemaCompatibility$Incompatibility {
  private final org.apache.avro.SchemaCompatibility$SchemaIncompatibilityType mType;

  private final org.apache.avro.Schema mReaderFragment;

  private final org.apache.avro.Schema mWriterFragment;

  private final java.lang.String mMessage;

  private final java.util.List<java.lang.String> mLocation;

  org.apache.avro.SchemaCompatibility$Incompatibility(org.apache.avro.SchemaCompatibility$SchemaIncompatibilityType, org.apache.avro.Schema, org.apache.avro.Schema, java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaIncompatibilityType;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mReaderFragment:Lorg/apache/avro/Schema;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field mWriterFragment:Lorg/apache/avro/Schema;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field mMessage:Ljava/lang/String;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field mLocation:Ljava/util/List;
      31: return

  public org.apache.avro.SchemaCompatibility$SchemaIncompatibilityType getType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaIncompatibilityType;
       4: areturn

  public org.apache.avro.Schema getReaderFragment();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mReaderFragment:Lorg/apache/avro/Schema;
       4: areturn

  public org.apache.avro.Schema getWriterFragment();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mWriterFragment:Lorg/apache/avro/Schema;
       4: areturn

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mMessage:Ljava/lang/String;
       4: areturn

  public java.lang.String getLocation();
    Code:
       0: new           #7                  // class java/lang/StringBuilder
       3: dup
       4: ldc           #8                  // String /
       6: invokespecial #9                  // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: iconst_1
      11: istore_2
      12: aload_0
      13: getfield      #6                  // Field mLocation:Ljava/util/List;
      16: iconst_1
      17: aload_0
      18: getfield      #6                  // Field mLocation:Ljava/util/List;
      21: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      26: invokeinterface #11,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      31: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      36: astore_3
      37: aload_3
      38: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          97
      46: aload_3
      47: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #15                 // class java/lang/String
      55: astore        4
      57: iload_2
      58: ifeq          66
      61: iconst_0
      62: istore_2
      63: goto          73
      66: aload_1
      67: bipush        47
      69: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: pop
      73: aload_1
      74: aload         4
      76: ldc           #17                 // String ~
      78: ldc           #18                 // String ~0
      80: invokevirtual #19                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      83: ldc           #8                  // String /
      85: ldc           #20                 // String ~1
      87: invokevirtual #19                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      90: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: pop
      94: goto          37
      97: aload_1
      98: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: areturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: getfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaIncompatibilityType;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: getfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaIncompatibilityType;
      24: invokevirtual #23                 // Method org/apache/avro/SchemaCompatibility$SchemaIncompatibilityType.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: getfield      #3                  // Field mReaderFragment:Lorg/apache/avro/Schema;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: getfield      #3                  // Field mReaderFragment:Lorg/apache/avro/Schema;
      48: invokevirtual #24                 // Method org/apache/avro/Schema.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: getfield      #4                  // Field mWriterFragment:Lorg/apache/avro/Schema;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: getfield      #4                  // Field mWriterFragment:Lorg/apache/avro/Schema;
      72: invokevirtual #24                 // Method org/apache/avro/Schema.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: getfield      #5                  // Field mMessage:Ljava/lang/String;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: getfield      #5                  // Field mMessage:Ljava/lang/String;
      96: invokevirtual #25                 // Method java/lang/String.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: getfield      #6                  // Field mLocation:Ljava/util/List;
     109: ifnonnull     116
     112: iconst_0
     113: goto          125
     116: aload_0
     117: getfield      #6                  // Field mLocation:Ljava/util/List;
     120: invokeinterface #26,  1           // InterfaceMethod java/util/List.hashCode:()I
     125: iadd
     126: istore_2
     127: iload_2
     128: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #28                 // class org/apache/avro/SchemaCompatibility$Incompatibility
      30: astore_2
      31: aload_0
      32: getfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaIncompatibilityType;
      35: aload_2
      36: getfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaIncompatibilityType;
      39: if_acmpeq     44
      42: iconst_0
      43: ireturn
      44: aload_0
      45: getfield      #3                  // Field mReaderFragment:Lorg/apache/avro/Schema;
      48: ifnonnull     60
      51: aload_2
      52: getfield      #3                  // Field mReaderFragment:Lorg/apache/avro/Schema;
      55: ifnull        76
      58: iconst_0
      59: ireturn
      60: aload_0
      61: getfield      #3                  // Field mReaderFragment:Lorg/apache/avro/Schema;
      64: aload_2
      65: getfield      #3                  // Field mReaderFragment:Lorg/apache/avro/Schema;
      68: invokevirtual #29                 // Method org/apache/avro/Schema.equals:(Ljava/lang/Object;)Z
      71: ifne          76
      74: iconst_0
      75: ireturn
      76: aload_0
      77: getfield      #4                  // Field mWriterFragment:Lorg/apache/avro/Schema;
      80: ifnonnull     92
      83: aload_2
      84: getfield      #4                  // Field mWriterFragment:Lorg/apache/avro/Schema;
      87: ifnull        108
      90: iconst_0
      91: ireturn
      92: aload_0
      93: getfield      #4                  // Field mWriterFragment:Lorg/apache/avro/Schema;
      96: aload_2
      97: getfield      #4                  // Field mWriterFragment:Lorg/apache/avro/Schema;
     100: invokevirtual #29                 // Method org/apache/avro/Schema.equals:(Ljava/lang/Object;)Z
     103: ifne          108
     106: iconst_0
     107: ireturn
     108: aload_0
     109: getfield      #5                  // Field mMessage:Ljava/lang/String;
     112: ifnonnull     124
     115: aload_2
     116: getfield      #5                  // Field mMessage:Ljava/lang/String;
     119: ifnull        140
     122: iconst_0
     123: ireturn
     124: aload_0
     125: getfield      #5                  // Field mMessage:Ljava/lang/String;
     128: aload_2
     129: getfield      #5                  // Field mMessage:Ljava/lang/String;
     132: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     135: ifne          140
     138: iconst_0
     139: ireturn
     140: aload_0
     141: getfield      #6                  // Field mLocation:Ljava/util/List;
     144: ifnonnull     160
     147: aload_2
     148: getfield      #6                  // Field mLocation:Ljava/util/List;
     151: ifnonnull     158
     154: iconst_1
     155: goto          159
     158: iconst_0
     159: ireturn
     160: aload_0
     161: getfield      #6                  // Field mLocation:Ljava/util/List;
     164: aload_2
     165: getfield      #6                  // Field mLocation:Ljava/util/List;
     168: invokeinterface #31,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     173: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #32                 // String Incompatibility{type:%s, location:%s, message:%s, reader:%s, writer:%s}
       2: iconst_5
       3: anewarray     #33                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #2                  // Field mType:Lorg/apache/avro/SchemaCompatibility$SchemaIncompatibilityType;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: invokevirtual #34                 // Method getLocation:()Ljava/lang/String;
      19: aastore
      20: dup
      21: iconst_2
      22: aload_0
      23: getfield      #5                  // Field mMessage:Ljava/lang/String;
      26: aastore
      27: dup
      28: iconst_3
      29: aload_0
      30: getfield      #3                  // Field mReaderFragment:Lorg/apache/avro/Schema;
      33: aastore
      34: dup
      35: iconst_4
      36: aload_0
      37: getfield      #4                  // Field mWriterFragment:Lorg/apache/avro/Schema;
      40: aastore
      41: invokestatic  #35                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: areturn
}
