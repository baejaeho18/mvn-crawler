Compiled from "SchemaBuilder.java"
public final class org.apache.avro.SchemaBuilder$FieldAssembler<R> {
  private final java.util.List<org.apache.avro.Schema$Field> fields;

  private final org.apache.avro.SchemaBuilder$Completion<R> context;

  private final org.apache.avro.SchemaBuilder$NameContext names;

  private final org.apache.avro.Schema record;

  private org.apache.avro.SchemaBuilder$FieldAssembler(org.apache.avro.SchemaBuilder$Completion<R>, org.apache.avro.SchemaBuilder$NameContext, org.apache.avro.Schema);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/ArrayList
       8: dup
       9: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #6                  // Field fields:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field context:Lorg/apache/avro/SchemaBuilder$Completion;
      20: aload_0
      21: aload_2
      22: putfield      #8                  // Field names:Lorg/apache/avro/SchemaBuilder$NameContext;
      25: aload_0
      26: aload_3
      27: putfield      #9                  // Field record:Lorg/apache/avro/Schema;
      30: return

  public org.apache.avro.SchemaBuilder$FieldBuilder<R> name(java.lang.String);
    Code:
       0: new           #10                 // class org/apache/avro/SchemaBuilder$FieldBuilder
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #8                  // Field names:Lorg/apache/avro/SchemaBuilder$NameContext;
       9: aload_1
      10: aconst_null
      11: invokespecial #11                 // Method org/apache/avro/SchemaBuilder$FieldBuilder."<init>":(Lorg/apache/avro/SchemaBuilder$FieldAssembler;Lorg/apache/avro/SchemaBuilder$NameContext;Ljava/lang/String;Lorg/apache/avro/SchemaBuilder$1;)V
      14: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> requiredBoolean(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #14                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.booleanType:()Lorg/apache/avro/SchemaBuilder$BooleanDefault;
      11: invokevirtual #15                 // Method org/apache/avro/SchemaBuilder$BooleanDefault.noDefault:()Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      14: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> optionalBoolean(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #16                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.optional:()Lorg/apache/avro/SchemaBuilder$BaseTypeBuilder;
      11: invokevirtual #17                 // Method org/apache/avro/SchemaBuilder$BaseTypeBuilder.booleanType:()Ljava/lang/Object;
      14: checkcast     #18                 // class org/apache/avro/SchemaBuilder$FieldAssembler
      17: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> nullableBoolean(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #19                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.nullable:()Lorg/apache/avro/SchemaBuilder$BaseFieldTypeBuilder;
      11: invokevirtual #20                 // Method org/apache/avro/SchemaBuilder$BaseFieldTypeBuilder.booleanType:()Lorg/apache/avro/SchemaBuilder$BooleanDefault;
      14: iload_2
      15: invokevirtual #21                 // Method org/apache/avro/SchemaBuilder$BooleanDefault.booleanDefault:(Z)Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      18: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> requiredInt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #22                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.intType:()Lorg/apache/avro/SchemaBuilder$IntDefault;
      11: invokevirtual #23                 // Method org/apache/avro/SchemaBuilder$IntDefault.noDefault:()Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      14: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> optionalInt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #16                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.optional:()Lorg/apache/avro/SchemaBuilder$BaseTypeBuilder;
      11: invokevirtual #24                 // Method org/apache/avro/SchemaBuilder$BaseTypeBuilder.intType:()Ljava/lang/Object;
      14: checkcast     #18                 // class org/apache/avro/SchemaBuilder$FieldAssembler
      17: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> nullableInt(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #19                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.nullable:()Lorg/apache/avro/SchemaBuilder$BaseFieldTypeBuilder;
      11: invokevirtual #25                 // Method org/apache/avro/SchemaBuilder$BaseFieldTypeBuilder.intType:()Lorg/apache/avro/SchemaBuilder$IntDefault;
      14: iload_2
      15: invokevirtual #26                 // Method org/apache/avro/SchemaBuilder$IntDefault.intDefault:(I)Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      18: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> requiredLong(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #27                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.longType:()Lorg/apache/avro/SchemaBuilder$LongDefault;
      11: invokevirtual #28                 // Method org/apache/avro/SchemaBuilder$LongDefault.noDefault:()Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      14: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> optionalLong(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #16                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.optional:()Lorg/apache/avro/SchemaBuilder$BaseTypeBuilder;
      11: invokevirtual #29                 // Method org/apache/avro/SchemaBuilder$BaseTypeBuilder.longType:()Ljava/lang/Object;
      14: checkcast     #18                 // class org/apache/avro/SchemaBuilder$FieldAssembler
      17: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> nullableLong(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #19                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.nullable:()Lorg/apache/avro/SchemaBuilder$BaseFieldTypeBuilder;
      11: invokevirtual #30                 // Method org/apache/avro/SchemaBuilder$BaseFieldTypeBuilder.longType:()Lorg/apache/avro/SchemaBuilder$LongDefault;
      14: lload_2
      15: invokevirtual #31                 // Method org/apache/avro/SchemaBuilder$LongDefault.longDefault:(J)Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      18: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> requiredFloat(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #32                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.floatType:()Lorg/apache/avro/SchemaBuilder$FloatDefault;
      11: invokevirtual #33                 // Method org/apache/avro/SchemaBuilder$FloatDefault.noDefault:()Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      14: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> optionalFloat(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #16                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.optional:()Lorg/apache/avro/SchemaBuilder$BaseTypeBuilder;
      11: invokevirtual #34                 // Method org/apache/avro/SchemaBuilder$BaseTypeBuilder.floatType:()Ljava/lang/Object;
      14: checkcast     #18                 // class org/apache/avro/SchemaBuilder$FieldAssembler
      17: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> nullableFloat(java.lang.String, float);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #19                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.nullable:()Lorg/apache/avro/SchemaBuilder$BaseFieldTypeBuilder;
      11: invokevirtual #35                 // Method org/apache/avro/SchemaBuilder$BaseFieldTypeBuilder.floatType:()Lorg/apache/avro/SchemaBuilder$FloatDefault;
      14: fload_2
      15: invokevirtual #36                 // Method org/apache/avro/SchemaBuilder$FloatDefault.floatDefault:(F)Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      18: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> requiredDouble(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #37                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.doubleType:()Lorg/apache/avro/SchemaBuilder$DoubleDefault;
      11: invokevirtual #38                 // Method org/apache/avro/SchemaBuilder$DoubleDefault.noDefault:()Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      14: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> optionalDouble(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #16                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.optional:()Lorg/apache/avro/SchemaBuilder$BaseTypeBuilder;
      11: invokevirtual #39                 // Method org/apache/avro/SchemaBuilder$BaseTypeBuilder.doubleType:()Ljava/lang/Object;
      14: checkcast     #18                 // class org/apache/avro/SchemaBuilder$FieldAssembler
      17: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> nullableDouble(java.lang.String, double);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #19                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.nullable:()Lorg/apache/avro/SchemaBuilder$BaseFieldTypeBuilder;
      11: invokevirtual #40                 // Method org/apache/avro/SchemaBuilder$BaseFieldTypeBuilder.doubleType:()Lorg/apache/avro/SchemaBuilder$DoubleDefault;
      14: dload_2
      15: invokevirtual #41                 // Method org/apache/avro/SchemaBuilder$DoubleDefault.doubleDefault:(D)Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      18: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> requiredString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #42                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.stringType:()Lorg/apache/avro/SchemaBuilder$StringDefault;
      11: invokevirtual #43                 // Method org/apache/avro/SchemaBuilder$StringDefault.noDefault:()Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      14: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> optionalString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #16                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.optional:()Lorg/apache/avro/SchemaBuilder$BaseTypeBuilder;
      11: invokevirtual #44                 // Method org/apache/avro/SchemaBuilder$BaseTypeBuilder.stringType:()Ljava/lang/Object;
      14: checkcast     #18                 // class org/apache/avro/SchemaBuilder$FieldAssembler
      17: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> nullableString(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #19                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.nullable:()Lorg/apache/avro/SchemaBuilder$BaseFieldTypeBuilder;
      11: invokevirtual #45                 // Method org/apache/avro/SchemaBuilder$BaseFieldTypeBuilder.stringType:()Lorg/apache/avro/SchemaBuilder$StringDefault;
      14: aload_2
      15: invokevirtual #46                 // Method org/apache/avro/SchemaBuilder$StringDefault.stringDefault:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      18: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> requiredBytes(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #47                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.bytesType:()Lorg/apache/avro/SchemaBuilder$BytesDefault;
      11: invokevirtual #48                 // Method org/apache/avro/SchemaBuilder$BytesDefault.noDefault:()Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      14: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> optionalBytes(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #16                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.optional:()Lorg/apache/avro/SchemaBuilder$BaseTypeBuilder;
      11: invokevirtual #49                 // Method org/apache/avro/SchemaBuilder$BaseTypeBuilder.bytesType:()Ljava/lang/Object;
      14: checkcast     #18                 // class org/apache/avro/SchemaBuilder$FieldAssembler
      17: areturn

  public org.apache.avro.SchemaBuilder$FieldAssembler<R> nullableBytes(java.lang.String, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method name:(Ljava/lang/String;)Lorg/apache/avro/SchemaBuilder$FieldBuilder;
       5: invokevirtual #13                 // Method org/apache/avro/SchemaBuilder$FieldBuilder.type:()Lorg/apache/avro/SchemaBuilder$FieldTypeBuilder;
       8: invokevirtual #19                 // Method org/apache/avro/SchemaBuilder$FieldTypeBuilder.nullable:()Lorg/apache/avro/SchemaBuilder$BaseFieldTypeBuilder;
      11: invokevirtual #50                 // Method org/apache/avro/SchemaBuilder$BaseFieldTypeBuilder.bytesType:()Lorg/apache/avro/SchemaBuilder$BytesDefault;
      14: aload_2
      15: invokevirtual #51                 // Method org/apache/avro/SchemaBuilder$BytesDefault.bytesDefault:([B)Lorg/apache/avro/SchemaBuilder$FieldAssembler;
      18: areturn

  public R endRecord();
    Code:
       0: aload_0
       1: getfield      #9                  // Field record:Lorg/apache/avro/Schema;
       4: aload_0
       5: getfield      #6                  // Field fields:Ljava/util/List;
       8: invokevirtual #52                 // Method org/apache/avro/Schema.setFields:(Ljava/util/List;)V
      11: aload_0
      12: getfield      #7                  // Field context:Lorg/apache/avro/SchemaBuilder$Completion;
      15: aload_0
      16: getfield      #9                  // Field record:Lorg/apache/avro/Schema;
      19: invokevirtual #53                 // Method org/apache/avro/SchemaBuilder$Completion.complete:(Lorg/apache/avro/Schema;)Ljava/lang/Object;
      22: areturn

  private org.apache.avro.SchemaBuilder$FieldAssembler<R> addField(org.apache.avro.Schema$Field);
    Code:
       0: aload_0
       1: getfield      #6                  // Field fields:Ljava/util/List;
       4: aload_1
       5: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  org.apache.avro.SchemaBuilder$FieldAssembler(org.apache.avro.SchemaBuilder$Completion, org.apache.avro.SchemaBuilder$NameContext, org.apache.avro.Schema, org.apache.avro.SchemaBuilder$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2                  // Method "<init>":(Lorg/apache/avro/SchemaBuilder$Completion;Lorg/apache/avro/SchemaBuilder$NameContext;Lorg/apache/avro/Schema;)V
       7: return

  static org.apache.avro.SchemaBuilder$FieldAssembler access$4900(org.apache.avro.SchemaBuilder$FieldAssembler, org.apache.avro.Schema$Field);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method addField:(Lorg/apache/avro/Schema$Field;)Lorg/apache/avro/SchemaBuilder$FieldAssembler;
       5: areturn
}
