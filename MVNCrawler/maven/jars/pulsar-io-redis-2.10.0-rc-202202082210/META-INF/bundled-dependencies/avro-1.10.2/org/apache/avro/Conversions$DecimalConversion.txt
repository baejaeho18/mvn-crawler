Compiled from "Conversions.java"
public class org.apache.avro.Conversions$DecimalConversion extends org.apache.avro.Conversion<java.math.BigDecimal> {
  public org.apache.avro.Conversions$DecimalConversion();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/avro/Conversion."<init>":()V
       4: return

  public java.lang.Class<java.math.BigDecimal> getConvertedType();
    Code:
       0: ldc           #1                  // class java/math/BigDecimal
       2: areturn

  public org.apache.avro.Schema getRecommendedSchema();
    Code:
       0: new           #3                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #4                  // String No recommended schema for decimal (scale is required)
       6: invokespecial #5                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getLogicalTypeName();
    Code:
       0: ldc           #6                  // String decimal
       2: areturn

  public java.math.BigDecimal fromBytes(java.nio.ByteBuffer, org.apache.avro.Schema, org.apache.avro.LogicalType);
    Code:
       0: aload_3
       1: checkcast     #7                  // class org/apache/avro/LogicalTypes$Decimal
       4: invokevirtual #8                  // Method org/apache/avro/LogicalTypes$Decimal.getScale:()I
       7: istore        4
       9: aload_1
      10: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
      13: newarray       byte
      15: astore        5
      17: aload_1
      18: invokevirtual #10                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      21: aload         5
      23: invokevirtual #11                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      26: pop
      27: new           #1                  // class java/math/BigDecimal
      30: dup
      31: new           #12                 // class java/math/BigInteger
      34: dup
      35: aload         5
      37: invokespecial #13                 // Method java/math/BigInteger."<init>":([B)V
      40: iload         4
      42: invokespecial #14                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;I)V
      45: areturn

  public java.nio.ByteBuffer toBytes(java.math.BigDecimal, org.apache.avro.Schema, org.apache.avro.LogicalType);
    Code:
       0: aload_3
       1: checkcast     #7                  // class org/apache/avro/LogicalTypes$Decimal
       4: aload_1
       5: invokestatic  #15                 // Method validate:(Lorg/apache/avro/LogicalTypes$Decimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
       8: astore_1
       9: aload_1
      10: invokevirtual #16                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
      13: invokevirtual #17                 // Method java/math/BigInteger.toByteArray:()[B
      16: invokestatic  #18                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      19: areturn

  public java.math.BigDecimal fromFixed(org.apache.avro.generic.GenericFixed, org.apache.avro.Schema, org.apache.avro.LogicalType);
    Code:
       0: aload_3
       1: checkcast     #7                  // class org/apache/avro/LogicalTypes$Decimal
       4: invokevirtual #8                  // Method org/apache/avro/LogicalTypes$Decimal.getScale:()I
       7: istore        4
       9: new           #1                  // class java/math/BigDecimal
      12: dup
      13: new           #12                 // class java/math/BigInteger
      16: dup
      17: aload_1
      18: invokeinterface #19,  1           // InterfaceMethod org/apache/avro/generic/GenericFixed.bytes:()[B
      23: invokespecial #13                 // Method java/math/BigInteger."<init>":([B)V
      26: iload         4
      28: invokespecial #14                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;I)V
      31: areturn

  public org.apache.avro.generic.GenericFixed toFixed(java.math.BigDecimal, org.apache.avro.Schema, org.apache.avro.LogicalType);
    Code:
       0: aload_3
       1: checkcast     #7                  // class org/apache/avro/LogicalTypes$Decimal
       4: aload_1
       5: invokestatic  #15                 // Method validate:(Lorg/apache/avro/LogicalTypes$Decimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
       8: astore_1
       9: aload_1
      10: invokevirtual #20                 // Method java/math/BigDecimal.signum:()I
      13: ifge          22
      16: sipush        255
      19: goto          23
      22: iconst_0
      23: i2b
      24: istore        4
      26: aload_1
      27: invokevirtual #16                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
      30: invokevirtual #17                 // Method java/math/BigInteger.toByteArray:()[B
      33: astore        5
      35: aload_2
      36: invokevirtual #21                 // Method org/apache/avro/Schema.getFixedSize:()I
      39: newarray       byte
      41: astore        6
      43: aload         6
      45: arraylength
      46: aload         5
      48: arraylength
      49: isub
      50: istore        7
      52: aload         6
      54: iconst_0
      55: iload         7
      57: iload         4
      59: invokestatic  #22                 // Method java/util/Arrays.fill:([BIIB)V
      62: aload         5
      64: iconst_0
      65: aload         6
      67: iload         7
      69: aload         6
      71: arraylength
      72: iload         7
      74: isub
      75: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      78: new           #24                 // class org/apache/avro/generic/GenericData$Fixed
      81: dup
      82: aload_2
      83: aload         6
      85: invokespecial #25                 // Method org/apache/avro/generic/GenericData$Fixed."<init>":(Lorg/apache/avro/Schema;[B)V
      88: areturn

  private static java.math.BigDecimal validate(org.apache.avro.LogicalTypes$Decimal, java.math.BigDecimal);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method org/apache/avro/LogicalTypes$Decimal.getScale:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #26                 // Method java/math/BigDecimal.scale:()I
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload_3
      14: iload_2
      15: if_icmpeq     75
      18: aload_1
      19: iload_2
      20: bipush        7
      22: invokevirtual #27                 // Method java/math/BigDecimal.setScale:(II)Ljava/math/BigDecimal;
      25: astore_1
      26: iconst_1
      27: istore        4
      29: goto          75
      32: astore        5
      34: new           #29                 // class org/apache/avro/AvroTypeException
      37: dup
      38: new           #30                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #32                 // String Cannot encode decimal with scale
      47: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: iload_3
      51: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: ldc           #35                 // String  as scale
      56: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: iload_2
      60: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      63: ldc           #36                 // String  without rounding
      65: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #38                 // Method org/apache/avro/AvroTypeException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_0
      76: invokevirtual #39                 // Method org/apache/avro/LogicalTypes$Decimal.getPrecision:()I
      79: istore        5
      81: aload_1
      82: invokevirtual #40                 // Method java/math/BigDecimal.precision:()I
      85: istore        6
      87: iload         6
      89: iload         5
      91: if_icmple     193
      94: iload         4
      96: ifeq          155
      99: new           #29                 // class org/apache/avro/AvroTypeException
     102: dup
     103: new           #30                 // class java/lang/StringBuilder
     106: dup
     107: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     110: ldc           #41                 // String Cannot encode decimal with precision
     112: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: iload         6
     117: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     120: ldc           #42                 // String  as max precision
     122: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: iload         5
     127: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     130: ldc           #43                 // String . This is after safely adjusting scale from
     132: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: iload_3
     136: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     139: ldc           #44                 // String  to required
     141: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: iload_2
     145: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     148: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     151: invokespecial #38                 // Method org/apache/avro/AvroTypeException."<init>":(Ljava/lang/String;)V
     154: athrow
     155: new           #29                 // class org/apache/avro/AvroTypeException
     158: dup
     159: new           #30                 // class java/lang/StringBuilder
     162: dup
     163: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     166: ldc           #41                 // String Cannot encode decimal with precision
     168: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: iload         6
     173: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     176: ldc           #42                 // String  as max precision
     178: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: iload         5
     183: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     186: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     189: invokespecial #38                 // Method org/apache/avro/AvroTypeException."<init>":(Ljava/lang/String;)V
     192: athrow
     193: aload_1
     194: areturn
    Exception table:
       from    to  target type
          18    29    32   Class java/lang/ArithmeticException

  public java.nio.ByteBuffer toBytes(java.lang.Object, org.apache.avro.Schema, org.apache.avro.LogicalType);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/math/BigDecimal
       5: aload_2
       6: aload_3
       7: invokevirtual #45                 // Method toBytes:(Ljava/math/BigDecimal;Lorg/apache/avro/Schema;Lorg/apache/avro/LogicalType;)Ljava/nio/ByteBuffer;
      10: areturn

  public org.apache.avro.generic.GenericFixed toFixed(java.lang.Object, org.apache.avro.Schema, org.apache.avro.LogicalType);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/math/BigDecimal
       5: aload_2
       6: aload_3
       7: invokevirtual #46                 // Method toFixed:(Ljava/math/BigDecimal;Lorg/apache/avro/Schema;Lorg/apache/avro/LogicalType;)Lorg/apache/avro/generic/GenericFixed;
      10: areturn

  public java.lang.Object fromBytes(java.nio.ByteBuffer, org.apache.avro.Schema, org.apache.avro.LogicalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #47                 // Method fromBytes:(Ljava/nio/ByteBuffer;Lorg/apache/avro/Schema;Lorg/apache/avro/LogicalType;)Ljava/math/BigDecimal;
       7: areturn

  public java.lang.Object fromFixed(org.apache.avro.generic.GenericFixed, org.apache.avro.Schema, org.apache.avro.LogicalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #48                 // Method fromFixed:(Lorg/apache/avro/generic/GenericFixed;Lorg/apache/avro/Schema;Lorg/apache/avro/LogicalType;)Ljava/math/BigDecimal;
       7: areturn
}
