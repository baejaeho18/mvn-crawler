Compiled from "BlockingBinaryEncoder.java"
public class org.apache.avro.io.BlockingBinaryEncoder extends org.apache.avro.io.BufferedBinaryEncoder {
  private byte[] buf;

  private int pos;

  private org.apache.avro.io.BlockingBinaryEncoder$BlockedValue[] blockStack;

  private int stackTop;

  private static final int STACK_STEP;

  private byte[] headerBuffer;

  static final boolean $assertionsDisabled;

  private boolean check();
    Code:
       0: getstatic     #1                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #2                  // Field buf:[B
      10: ifnonnull     21
      13: new           #3                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: getstatic     #1                  // Field $assertionsDisabled:Z
      24: ifne          43
      27: iconst_0
      28: aload_0
      29: getfield      #5                  // Field pos:I
      32: if_icmple     43
      35: new           #3                  // class java/lang/AssertionError
      38: dup
      39: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      42: athrow
      43: getstatic     #1                  // Field $assertionsDisabled:Z
      46: ifne          99
      49: aload_0
      50: getfield      #5                  // Field pos:I
      53: aload_0
      54: getfield      #2                  // Field buf:[B
      57: arraylength
      58: if_icmple     99
      61: new           #3                  // class java/lang/AssertionError
      64: dup
      65: new           #6                  // class java/lang/StringBuilder
      68: dup
      69: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      72: aload_0
      73: getfield      #5                  // Field pos:I
      76: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: ldc           #9                  // String
      81: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #2                  // Field buf:[B
      88: arraylength
      89: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      92: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #12                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      98: athrow
      99: getstatic     #1                  // Field $assertionsDisabled:Z
     102: ifne          120
     105: aload_0
     106: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
     109: ifnonnull     120
     112: new           #3                  // class java/lang/AssertionError
     115: dup
     116: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
     119: athrow
     120: aconst_null
     121: astore_1
     122: iconst_0
     123: istore_2
     124: iload_2
     125: aload_0
     126: getfield      #14                 // Field stackTop:I
     129: if_icmpgt     157
     132: aload_0
     133: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
     136: iload_2
     137: aaload
     138: astore_3
     139: aload_3
     140: aload_1
     141: aload_0
     142: getfield      #5                  // Field pos:I
     145: invokevirtual #15                 // Method org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.check:(Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;I)Z
     148: pop
     149: aload_3
     150: astore_1
     151: iinc          2, 1
     154: goto          124
     157: iconst_1
     158: ireturn

  org.apache.avro.io.BlockingBinaryEncoder(java.io.OutputStream, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_3
       3: invokespecial #16                 // Method org/apache/avro/io/BufferedBinaryEncoder."<init>":(Ljava/io/OutputStream;I)V
       6: aload_0
       7: iconst_m1
       8: putfield      #14                 // Field stackTop:I
      11: aload_0
      12: bipush        12
      14: newarray       byte
      16: putfield      #17                 // Field headerBuffer:[B
      19: aload_0
      20: iload_2
      21: newarray       byte
      23: putfield      #2                  // Field buf:[B
      26: aload_0
      27: iconst_0
      28: putfield      #5                  // Field pos:I
      31: aload_0
      32: iconst_0
      33: anewarray     #18                 // class org/apache/avro/io/BlockingBinaryEncoder$BlockedValue
      36: putfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      39: aload_0
      40: invokespecial #19                 // Method expandStack:()V
      43: aload_0
      44: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      47: aload_0
      48: dup
      49: getfield      #14                 // Field stackTop:I
      52: iconst_1
      53: iadd
      54: dup_x1
      55: putfield      #14                 // Field stackTop:I
      58: aaload
      59: astore        4
      61: aload         4
      63: aconst_null
      64: putfield      #20                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.type:Lorg/apache/avro/Schema$Type;
      67: aload         4
      69: getstatic     #21                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.ROOT:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      72: putfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      75: aload         4
      77: aload         4
      79: iconst_0
      80: dup_x1
      81: putfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
      84: putfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
      87: aload         4
      89: iconst_1
      90: putfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
      93: getstatic     #1                  // Field $assertionsDisabled:Z
      96: ifne          114
      99: aload_0
     100: invokespecial #26                 // Method check:()Z
     103: ifne          114
     106: new           #3                  // class java/lang/AssertionError
     109: dup
     110: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
     113: athrow
     114: return

  private void expandStack();
    Code:
       0: aload_0
       1: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
       4: arraylength
       5: istore_1
       6: aload_0
       7: aload_0
       8: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      11: aload_0
      12: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      15: arraylength
      16: bipush        10
      18: iadd
      19: invokestatic  #28                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      22: checkcast     #29                 // class "[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;"
      25: putfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      28: iload_1
      29: istore_2
      30: iload_2
      31: aload_0
      32: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      35: arraylength
      36: if_icmpge     58
      39: aload_0
      40: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      43: iload_2
      44: new           #18                 // class org/apache/avro/io/BlockingBinaryEncoder$BlockedValue
      47: dup
      48: invokespecial #30                 // Method org/apache/avro/io/BlockingBinaryEncoder$BlockedValue."<init>":()V
      51: aastore
      52: iinc          2, 1
      55: goto          30
      58: return

  org.apache.avro.io.BlockingBinaryEncoder configure(java.io.OutputStream, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_3
       3: invokespecial #31                 // Method org/apache/avro/io/BufferedBinaryEncoder.configure:(Ljava/io/OutputStream;I)Lorg/apache/avro/io/BufferedBinaryEncoder;
       6: pop
       7: aload_0
       8: iconst_0
       9: putfield      #5                  // Field pos:I
      12: aload_0
      13: iconst_0
      14: putfield      #14                 // Field stackTop:I
      17: aconst_null
      18: aload_0
      19: getfield      #2                  // Field buf:[B
      22: if_acmpeq     34
      25: aload_0
      26: getfield      #2                  // Field buf:[B
      29: arraylength
      30: iload_2
      31: if_icmpeq     41
      34: aload_0
      35: iload_2
      36: newarray       byte
      38: putfield      #2                  // Field buf:[B
      41: getstatic     #1                  // Field $assertionsDisabled:Z
      44: ifne          62
      47: aload_0
      48: invokespecial #26                 // Method check:()Z
      51: ifne          62
      54: new           #3                  // class java/lang/AssertionError
      57: dup
      58: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      61: athrow
      62: aload_0
      63: areturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
       4: aload_0
       5: getfield      #14                 // Field stackTop:I
       8: aaload
       9: astore_1
      10: aload_1
      11: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      14: getstatic     #21                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.ROOT:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      17: if_acmpne     41
      20: aload_0
      21: aload_0
      22: getfield      #2                  // Field buf:[B
      25: iconst_0
      26: aload_0
      27: getfield      #5                  // Field pos:I
      30: invokespecial #32                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeFixed:([BII)V
      33: aload_0
      34: iconst_0
      35: putfield      #5                  // Field pos:I
      38: goto          58
      41: aload_1
      42: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      45: getstatic     #33                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.OVERFLOW:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      48: if_acmpeq     58
      51: aload_0
      52: invokespecial #34                 // Method compact:()V
      55: goto          41
      58: aload_0
      59: invokespecial #35                 // Method org/apache/avro/io/BufferedBinaryEncoder.flush:()V
      62: getstatic     #1                  // Field $assertionsDisabled:Z
      65: ifne          83
      68: aload_0
      69: invokespecial #26                 // Method check:()Z
      72: ifne          83
      75: new           #3                  // class java/lang/AssertionError
      78: dup
      79: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      82: athrow
      83: return

  public void writeBoolean(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #36                 // Method ensureBounds:(I)V
       5: aload_0
       6: dup
       7: getfield      #5                  // Field pos:I
      10: iload_1
      11: aload_0
      12: getfield      #2                  // Field buf:[B
      15: aload_0
      16: getfield      #5                  // Field pos:I
      19: invokestatic  #37                 // Method org/apache/avro/io/BinaryData.encodeBoolean:(Z[BI)I
      22: iadd
      23: putfield      #5                  // Field pos:I
      26: return

  public void writeInt(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_5
       2: invokespecial #36                 // Method ensureBounds:(I)V
       5: aload_0
       6: dup
       7: getfield      #5                  // Field pos:I
      10: iload_1
      11: aload_0
      12: getfield      #2                  // Field buf:[B
      15: aload_0
      16: getfield      #5                  // Field pos:I
      19: invokestatic  #38                 // Method org/apache/avro/io/BinaryData.encodeInt:(I[BI)I
      22: iadd
      23: putfield      #5                  // Field pos:I
      26: return

  public void writeLong(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        10
       3: invokespecial #36                 // Method ensureBounds:(I)V
       6: aload_0
       7: dup
       8: getfield      #5                  // Field pos:I
      11: lload_1
      12: aload_0
      13: getfield      #2                  // Field buf:[B
      16: aload_0
      17: getfield      #5                  // Field pos:I
      20: invokestatic  #39                 // Method org/apache/avro/io/BinaryData.encodeLong:(J[BI)I
      23: iadd
      24: putfield      #5                  // Field pos:I
      27: return

  public void writeFloat(float) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #36                 // Method ensureBounds:(I)V
       5: aload_0
       6: dup
       7: getfield      #5                  // Field pos:I
      10: fload_1
      11: aload_0
      12: getfield      #2                  // Field buf:[B
      15: aload_0
      16: getfield      #5                  // Field pos:I
      19: invokestatic  #40                 // Method org/apache/avro/io/BinaryData.encodeFloat:(F[BI)I
      22: iadd
      23: putfield      #5                  // Field pos:I
      26: return

  public void writeDouble(double) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #36                 // Method ensureBounds:(I)V
       6: aload_0
       7: dup
       8: getfield      #5                  // Field pos:I
      11: dload_1
      12: aload_0
      13: getfield      #2                  // Field buf:[B
      16: aload_0
      17: getfield      #5                  // Field pos:I
      20: invokestatic  #41                 // Method org/apache/avro/io/BinaryData.encodeDouble:(D[BI)I
      23: iadd
      24: putfield      #5                  // Field pos:I
      27: return

  public void writeFixed(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #42                 // Method doWriteBytes:([BII)V
       7: return

  public void writeFixed(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method java/nio/ByteBuffer.position:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #44                 // Method java/nio/ByteBuffer.remaining:()I
       9: istore_3
      10: aload_1
      11: invokevirtual #45                 // Method java/nio/ByteBuffer.hasArray:()Z
      14: ifeq          35
      17: aload_0
      18: aload_1
      19: invokevirtual #46                 // Method java/nio/ByteBuffer.array:()[B
      22: aload_1
      23: invokevirtual #47                 // Method java/nio/ByteBuffer.arrayOffset:()I
      26: iload_2
      27: iadd
      28: iload_3
      29: invokespecial #42                 // Method doWriteBytes:([BII)V
      32: goto          60
      35: iload_3
      36: newarray       byte
      38: astore        4
      40: aload_1
      41: invokevirtual #48                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      44: aload         4
      46: iconst_0
      47: iload_3
      48: invokevirtual #49                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      51: pop
      52: aload_0
      53: aload         4
      55: iconst_0
      56: iload_3
      57: invokespecial #42                 // Method doWriteBytes:([BII)V
      60: return

  protected void writeZero() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #36                 // Method ensureBounds:(I)V
       5: aload_0
       6: getfield      #2                  // Field buf:[B
       9: aload_0
      10: dup
      11: getfield      #5                  // Field pos:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #5                  // Field pos:I
      20: iconst_0
      21: bastore
      22: return

  public void writeArrayStart() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field stackTop:I
       4: iconst_1
       5: iadd
       6: aload_0
       7: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      10: arraylength
      11: if_icmpne     18
      14: aload_0
      15: invokespecial #19                 // Method expandStack:()V
      18: aload_0
      19: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      22: aload_0
      23: dup
      24: getfield      #14                 // Field stackTop:I
      27: iconst_1
      28: iadd
      29: dup_x1
      30: putfield      #14                 // Field stackTop:I
      33: aaload
      34: astore_1
      35: aload_1
      36: getstatic     #50                 // Field org/apache/avro/Schema$Type.ARRAY:Lorg/apache/avro/Schema$Type;
      39: putfield      #20                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.type:Lorg/apache/avro/Schema$Type;
      42: aload_1
      43: getstatic     #51                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.REGULAR:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      46: putfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      49: aload_1
      50: aload_1
      51: aload_0
      52: getfield      #5                  // Field pos:I
      55: dup_x1
      56: putfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
      59: putfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
      62: aload_1
      63: iconst_0
      64: putfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
      67: getstatic     #1                  // Field $assertionsDisabled:Z
      70: ifne          88
      73: aload_0
      74: invokespecial #26                 // Method check:()Z
      77: ifne          88
      80: new           #3                  // class java/lang/AssertionError
      83: dup
      84: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      87: athrow
      88: return

  public void setItemCount(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
       4: aload_0
       5: getfield      #14                 // Field stackTop:I
       8: aaload
       9: astore_3
      10: getstatic     #1                  // Field $assertionsDisabled:Z
      13: ifne          44
      16: aload_3
      17: getfield      #20                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.type:Lorg/apache/avro/Schema$Type;
      20: getstatic     #50                 // Field org/apache/avro/Schema$Type.ARRAY:Lorg/apache/avro/Schema$Type;
      23: if_acmpeq     44
      26: aload_3
      27: getfield      #20                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.type:Lorg/apache/avro/Schema$Type;
      30: getstatic     #52                 // Field org/apache/avro/Schema$Type.MAP:Lorg/apache/avro/Schema$Type;
      33: if_acmpeq     44
      36: new           #3                  // class java/lang/AssertionError
      39: dup
      40: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      43: athrow
      44: getstatic     #1                  // Field $assertionsDisabled:Z
      47: ifne          67
      50: aload_3
      51: getfield      #53                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.itemsLeftToWrite:J
      54: lconst_0
      55: lcmp
      56: ifeq          67
      59: new           #3                  // class java/lang/AssertionError
      62: dup
      63: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: aload_3
      68: lload_1
      69: putfield      #53                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.itemsLeftToWrite:J
      72: getstatic     #1                  // Field $assertionsDisabled:Z
      75: ifne          93
      78: aload_0
      79: invokespecial #26                 // Method check:()Z
      82: ifne          93
      85: new           #3                  // class java/lang/AssertionError
      88: dup
      89: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      92: athrow
      93: return

  public void startItem() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
       4: aload_0
       5: getfield      #14                 // Field stackTop:I
       8: aaload
       9: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      12: getstatic     #33                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.OVERFLOW:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      15: if_acmpne     22
      18: aload_0
      19: invokespecial #54                 // Method finishOverflow:()V
      22: aload_0
      23: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      26: aload_0
      27: getfield      #14                 // Field stackTop:I
      30: aaload
      31: astore_1
      32: aload_1
      33: dup
      34: getfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
      37: iconst_1
      38: iadd
      39: putfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
      42: aload_1
      43: aload_0
      44: getfield      #5                  // Field pos:I
      47: putfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
      50: aload_1
      51: dup
      52: getfield      #53                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.itemsLeftToWrite:J
      55: lconst_1
      56: lsub
      57: putfield      #53                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.itemsLeftToWrite:J
      60: getstatic     #1                  // Field $assertionsDisabled:Z
      63: ifne          81
      66: aload_0
      67: invokespecial #26                 // Method check:()Z
      70: ifne          81
      73: new           #3                  // class java/lang/AssertionError
      76: dup
      77: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      80: athrow
      81: return

  public void writeArrayEnd() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
       4: aload_0
       5: getfield      #14                 // Field stackTop:I
       8: aaload
       9: astore_1
      10: aload_1
      11: getfield      #20                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.type:Lorg/apache/avro/Schema$Type;
      14: getstatic     #50                 // Field org/apache/avro/Schema$Type.ARRAY:Lorg/apache/avro/Schema$Type;
      17: if_acmpeq     30
      20: new           #55                 // class org/apache/avro/AvroTypeException
      23: dup
      24: ldc           #56                 // String Called writeArrayEnd outside of an array.
      26: invokespecial #57                 // Method org/apache/avro/AvroTypeException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_1
      31: getfield      #53                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.itemsLeftToWrite:J
      34: lconst_0
      35: lcmp
      36: ifeq          49
      39: new           #55                 // class org/apache/avro/AvroTypeException
      42: dup
      43: ldc           #58                 // String Failed to write expected number of array elements.
      45: invokespecial #57                 // Method org/apache/avro/AvroTypeException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: invokespecial #59                 // Method endBlockedValue:()V
      53: getstatic     #1                  // Field $assertionsDisabled:Z
      56: ifne          74
      59: aload_0
      60: invokespecial #26                 // Method check:()Z
      63: ifne          74
      66: new           #3                  // class java/lang/AssertionError
      69: dup
      70: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      73: athrow
      74: return

  public void writeMapStart() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field stackTop:I
       4: iconst_1
       5: iadd
       6: aload_0
       7: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      10: arraylength
      11: if_icmpne     18
      14: aload_0
      15: invokespecial #19                 // Method expandStack:()V
      18: aload_0
      19: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      22: aload_0
      23: dup
      24: getfield      #14                 // Field stackTop:I
      27: iconst_1
      28: iadd
      29: dup_x1
      30: putfield      #14                 // Field stackTop:I
      33: aaload
      34: astore_1
      35: aload_1
      36: getstatic     #52                 // Field org/apache/avro/Schema$Type.MAP:Lorg/apache/avro/Schema$Type;
      39: putfield      #20                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.type:Lorg/apache/avro/Schema$Type;
      42: aload_1
      43: getstatic     #51                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.REGULAR:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      46: putfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      49: aload_1
      50: aload_1
      51: aload_0
      52: getfield      #5                  // Field pos:I
      55: dup_x1
      56: putfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
      59: putfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
      62: aload_1
      63: iconst_0
      64: putfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
      67: getstatic     #1                  // Field $assertionsDisabled:Z
      70: ifne          88
      73: aload_0
      74: invokespecial #26                 // Method check:()Z
      77: ifne          88
      80: new           #3                  // class java/lang/AssertionError
      83: dup
      84: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      87: athrow
      88: return

  public void writeMapEnd() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
       4: aload_0
       5: getfield      #14                 // Field stackTop:I
       8: aaload
       9: astore_1
      10: aload_1
      11: getfield      #20                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.type:Lorg/apache/avro/Schema$Type;
      14: getstatic     #52                 // Field org/apache/avro/Schema$Type.MAP:Lorg/apache/avro/Schema$Type;
      17: if_acmpeq     30
      20: new           #55                 // class org/apache/avro/AvroTypeException
      23: dup
      24: ldc           #60                 // String Called writeMapEnd outside of a map.
      26: invokespecial #57                 // Method org/apache/avro/AvroTypeException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_1
      31: getfield      #53                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.itemsLeftToWrite:J
      34: lconst_0
      35: lcmp
      36: ifeq          49
      39: new           #55                 // class org/apache/avro/AvroTypeException
      42: dup
      43: ldc           #61                 // String Failed to read write expected number of array elements.
      45: invokespecial #57                 // Method org/apache/avro/AvroTypeException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: invokespecial #59                 // Method endBlockedValue:()V
      53: getstatic     #1                  // Field $assertionsDisabled:Z
      56: ifne          74
      59: aload_0
      60: invokespecial #26                 // Method check:()Z
      63: ifne          74
      66: new           #3                  // class java/lang/AssertionError
      69: dup
      70: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      73: athrow
      74: return

  public void writeIndex(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_5
       2: invokespecial #36                 // Method ensureBounds:(I)V
       5: aload_0
       6: dup
       7: getfield      #5                  // Field pos:I
      10: iload_1
      11: aload_0
      12: getfield      #2                  // Field buf:[B
      15: aload_0
      16: getfield      #5                  // Field pos:I
      19: invokestatic  #38                 // Method org/apache/avro/io/BinaryData.encodeInt:(I[BI)I
      22: iadd
      23: putfield      #5                  // Field pos:I
      26: return

  public int bytesBuffered();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pos:I
       4: aload_0
       5: invokespecial #62                 // Method org/apache/avro/io/BufferedBinaryEncoder.bytesBuffered:()I
       8: iadd
       9: ireturn

  private void endBlockedValue() throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #26                 // Method check:()Z
      10: ifne          21
      13: new           #3                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      25: aload_0
      26: getfield      #14                 // Field stackTop:I
      29: aaload
      30: astore_1
      31: getstatic     #1                  // Field $assertionsDisabled:Z
      34: ifne          55
      37: aload_1
      38: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      41: getstatic     #21                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.ROOT:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      44: if_acmpne     55
      47: new           #3                  // class java/lang/AssertionError
      50: dup
      51: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      54: athrow
      55: aload_1
      56: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      59: getstatic     #33                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.OVERFLOW:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      62: if_acmpne     69
      65: aload_0
      66: invokespecial #54                 // Method finishOverflow:()V
      69: getstatic     #1                  // Field $assertionsDisabled:Z
      72: ifne          93
      75: aload_1
      76: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      79: getstatic     #51                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.REGULAR:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      82: if_acmpeq     93
      85: new           #3                  // class java/lang/AssertionError
      88: dup
      89: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      92: athrow
      93: iconst_0
      94: aload_1
      95: getfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
      98: if_icmpge     258
     101: aload_0
     102: getfield      #5                  // Field pos:I
     105: aload_1
     106: getfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
     109: isub
     110: istore_2
     111: aload_1
     112: getfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
     115: ifne          155
     118: aload_0
     119: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
     122: aload_0
     123: getfield      #14                 // Field stackTop:I
     126: iconst_1
     127: isub
     128: aaload
     129: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
     132: getstatic     #51                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.REGULAR:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
     135: if_acmpeq     155
     138: aload_0
     139: aload_1
     140: getfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
     143: ineg
     144: invokespecial #63                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeInt:(I)V
     147: aload_0
     148: iload_2
     149: invokespecial #63                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeInt:(I)V
     152: goto          258
     155: iconst_0
     156: istore_3
     157: iload_3
     158: aload_1
     159: getfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
     162: ineg
     163: aload_0
     164: getfield      #17                 // Field headerBuffer:[B
     167: iload_3
     168: invokestatic  #38                 // Method org/apache/avro/io/BinaryData.encodeInt:(I[BI)I
     171: iadd
     172: istore_3
     173: iload_3
     174: iload_2
     175: aload_0
     176: getfield      #17                 // Field headerBuffer:[B
     179: iload_3
     180: invokestatic  #38                 // Method org/apache/avro/io/BinaryData.encodeInt:(I[BI)I
     183: iadd
     184: istore_3
     185: aload_0
     186: getfield      #2                  // Field buf:[B
     189: arraylength
     190: aload_0
     191: getfield      #5                  // Field pos:I
     194: iload_3
     195: iadd
     196: if_icmplt     251
     199: aload_0
     200: dup
     201: getfield      #5                  // Field pos:I
     204: iload_3
     205: iadd
     206: putfield      #5                  // Field pos:I
     209: aload_1
     210: getfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
     213: istore        4
     215: aload_0
     216: getfield      #2                  // Field buf:[B
     219: iload         4
     221: aload_0
     222: getfield      #2                  // Field buf:[B
     225: iload         4
     227: iload_3
     228: iadd
     229: iload_2
     230: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     233: aload_0
     234: getfield      #17                 // Field headerBuffer:[B
     237: iconst_0
     238: aload_0
     239: getfield      #2                  // Field buf:[B
     242: iload         4
     244: iload_3
     245: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     248: goto          258
     251: aload_0
     252: invokespecial #34                 // Method compact:()V
     255: goto          0
     258: aload_0
     259: dup
     260: getfield      #14                 // Field stackTop:I
     263: iconst_1
     264: isub
     265: putfield      #14                 // Field stackTop:I
     268: aload_0
     269: iconst_1
     270: invokespecial #36                 // Method ensureBounds:(I)V
     273: aload_0
     274: getfield      #2                  // Field buf:[B
     277: aload_0
     278: dup
     279: getfield      #5                  // Field pos:I
     282: dup_x1
     283: iconst_1
     284: iadd
     285: putfield      #5                  // Field pos:I
     288: iconst_0
     289: bastore
     290: getstatic     #1                  // Field $assertionsDisabled:Z
     293: ifne          311
     296: aload_0
     297: invokespecial #26                 // Method check:()Z
     300: ifne          311
     303: new           #3                  // class java/lang/AssertionError
     306: dup
     307: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
     310: athrow
     311: aload_0
     312: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
     315: aload_0
     316: getfield      #14                 // Field stackTop:I
     319: aaload
     320: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
     323: getstatic     #21                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.ROOT:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
     326: if_acmpne     333
     329: aload_0
     330: invokevirtual #65                 // Method flush:()V
     333: return

  private void finishOverflow() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
       4: aload_0
       5: getfield      #14                 // Field stackTop:I
       8: aaload
       9: astore_1
      10: aload_1
      11: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      14: getstatic     #33                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.OVERFLOW:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      17: if_acmpeq     30
      20: new           #66                 // class java/lang/IllegalStateException
      23: dup
      24: ldc           #67                 // String Not an overflow block
      26: invokespecial #68                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: getstatic     #1                  // Field $assertionsDisabled:Z
      33: ifne          51
      36: aload_0
      37: invokespecial #26                 // Method check:()Z
      40: ifne          51
      43: new           #3                  // class java/lang/AssertionError
      46: dup
      47: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      50: athrow
      51: aload_0
      52: aload_0
      53: getfield      #2                  // Field buf:[B
      56: iconst_0
      57: aload_0
      58: getfield      #5                  // Field pos:I
      61: invokespecial #32                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeFixed:([BII)V
      64: aload_0
      65: iconst_0
      66: putfield      #5                  // Field pos:I
      69: aload_1
      70: getstatic     #51                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.REGULAR:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      73: putfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      76: aload_1
      77: aload_1
      78: iconst_0
      79: dup_x1
      80: putfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
      83: putfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
      86: aload_1
      87: iconst_0
      88: putfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
      91: getstatic     #1                  // Field $assertionsDisabled:Z
      94: ifne          112
      97: aload_0
      98: invokespecial #26                 // Method check:()Z
     101: ifne          112
     104: new           #3                  // class java/lang/AssertionError
     107: dup
     108: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
     111: athrow
     112: return

  private void ensureBounds(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field buf:[B
       4: arraylength
       5: aload_0
       6: getfield      #5                  // Field pos:I
       9: iload_1
      10: iadd
      11: if_icmpge     60
      14: aload_0
      15: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      18: aload_0
      19: getfield      #14                 // Field stackTop:I
      22: aaload
      23: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      26: getstatic     #51                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.REGULAR:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      29: if_acmpne     39
      32: aload_0
      33: invokespecial #34                 // Method compact:()V
      36: goto          0
      39: aload_0
      40: aload_0
      41: getfield      #2                  // Field buf:[B
      44: iconst_0
      45: aload_0
      46: getfield      #5                  // Field pos:I
      49: invokespecial #32                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeFixed:([BII)V
      52: aload_0
      53: iconst_0
      54: putfield      #5                  // Field pos:I
      57: goto          0
      60: return

  private void doWriteBytes(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #2                  // Field buf:[B
       5: arraylength
       6: if_icmpge     41
       9: aload_0
      10: iload_3
      11: invokespecial #36                 // Method ensureBounds:(I)V
      14: aload_1
      15: iload_2
      16: aload_0
      17: getfield      #2                  // Field buf:[B
      20: aload_0
      21: getfield      #5                  // Field pos:I
      24: iload_3
      25: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      28: aload_0
      29: dup
      30: getfield      #5                  // Field pos:I
      33: iload_3
      34: iadd
      35: putfield      #5                  // Field pos:I
      38: goto          107
      41: aload_0
      42: aload_0
      43: getfield      #2                  // Field buf:[B
      46: arraylength
      47: invokespecial #36                 // Method ensureBounds:(I)V
      50: getstatic     #1                  // Field $assertionsDisabled:Z
      53: ifne          100
      56: aload_0
      57: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      60: aload_0
      61: getfield      #14                 // Field stackTop:I
      64: aaload
      65: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      68: getstatic     #21                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.ROOT:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      71: if_acmpeq     100
      74: aload_0
      75: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      78: aload_0
      79: getfield      #14                 // Field stackTop:I
      82: aaload
      83: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      86: getstatic     #33                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.OVERFLOW:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      89: if_acmpeq     100
      92: new           #3                  // class java/lang/AssertionError
      95: dup
      96: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      99: athrow
     100: aload_0
     101: aload_1
     102: iload_2
     103: iload_3
     104: invokespecial #69                 // Method write:([BII)V
     107: return

  private void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
       4: aload_0
       5: getfield      #14                 // Field stackTop:I
       8: aaload
       9: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      12: getstatic     #21                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.ROOT:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      15: if_acmpne     28
      18: aload_0
      19: aload_1
      20: iload_2
      21: iload_3
      22: invokespecial #32                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeFixed:([BII)V
      25: goto          151
      28: getstatic     #1                  // Field $assertionsDisabled:Z
      31: ifne          49
      34: aload_0
      35: invokespecial #26                 // Method check:()Z
      38: ifne          49
      41: new           #3                  // class java/lang/AssertionError
      44: dup
      45: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      48: athrow
      49: aload_0
      50: getfield      #2                  // Field buf:[B
      53: arraylength
      54: aload_0
      55: getfield      #5                  // Field pos:I
      58: iload_3
      59: iadd
      60: if_icmpge     127
      63: aload_0
      64: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      67: aload_0
      68: getfield      #14                 // Field stackTop:I
      71: aaload
      72: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      75: getstatic     #51                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.REGULAR:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      78: if_acmpne     88
      81: aload_0
      82: invokespecial #34                 // Method compact:()V
      85: goto          49
      88: aload_0
      89: aload_0
      90: getfield      #2                  // Field buf:[B
      93: iconst_0
      94: aload_0
      95: getfield      #5                  // Field pos:I
      98: invokespecial #32                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeFixed:([BII)V
     101: aload_0
     102: iconst_0
     103: putfield      #5                  // Field pos:I
     106: aload_0
     107: getfield      #2                  // Field buf:[B
     110: arraylength
     111: iload_3
     112: if_icmpgt     49
     115: aload_0
     116: aload_1
     117: iload_2
     118: iload_3
     119: invokespecial #32                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeFixed:([BII)V
     122: iconst_0
     123: istore_3
     124: goto          49
     127: aload_1
     128: iload_2
     129: aload_0
     130: getfield      #2                  // Field buf:[B
     133: aload_0
     134: getfield      #5                  // Field pos:I
     137: iload_3
     138: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     141: aload_0
     142: dup
     143: getfield      #5                  // Field pos:I
     146: iload_3
     147: iadd
     148: putfield      #5                  // Field pos:I
     151: getstatic     #1                  // Field $assertionsDisabled:Z
     154: ifne          172
     157: aload_0
     158: invokespecial #26                 // Method check:()Z
     161: ifne          172
     164: new           #3                  // class java/lang/AssertionError
     167: dup
     168: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
     171: athrow
     172: return

  private void compact() throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokespecial #26                 // Method check:()Z
      10: ifne          21
      13: new           #3                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aconst_null
      22: astore_1
      23: iconst_1
      24: istore_2
      25: iload_2
      26: aload_0
      27: getfield      #14                 // Field stackTop:I
      30: if_icmpgt     59
      33: aload_0
      34: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
      37: iload_2
      38: aaload
      39: astore_1
      40: aload_1
      41: getfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      44: getstatic     #51                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.REGULAR:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
      47: if_acmpne     53
      50: goto          59
      53: iinc          2, 1
      56: goto          25
      59: getstatic     #1                  // Field $assertionsDisabled:Z
      62: ifne          77
      65: aload_1
      66: ifnonnull     77
      69: new           #3                  // class java/lang/AssertionError
      72: dup
      73: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      76: athrow
      77: aload_0
      78: aload_0
      79: getfield      #2                  // Field buf:[B
      82: iconst_0
      83: aload_1
      84: getfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
      87: invokespecial #32                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeFixed:([BII)V
      90: iconst_1
      91: aload_1
      92: getfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
      95: if_icmpge     156
      98: aload_0
      99: aload_1
     100: getfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
     103: iconst_1
     104: isub
     105: ineg
     106: invokespecial #63                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeInt:(I)V
     109: aload_0
     110: aload_1
     111: getfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
     114: aload_1
     115: getfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
     118: isub
     119: invokespecial #63                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeInt:(I)V
     122: aload_0
     123: aload_0
     124: getfield      #2                  // Field buf:[B
     127: aload_1
     128: getfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
     131: aload_1
     132: getfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
     135: aload_1
     136: getfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
     139: isub
     140: invokespecial #32                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeFixed:([BII)V
     143: aload_1
     144: aload_1
     145: getfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
     148: putfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
     151: aload_1
     152: iconst_1
     153: putfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
     156: aload_0
     157: iconst_1
     158: invokespecial #63                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeInt:(I)V
     161: iload_2
     162: iconst_1
     163: iadd
     164: aload_0
     165: getfield      #14                 // Field stackTop:I
     168: if_icmpgt     182
     171: aload_0
     172: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
     175: iload_2
     176: iconst_1
     177: iadd
     178: aaload
     179: goto          183
     182: aconst_null
     183: astore_3
     184: aload_3
     185: ifnonnull     195
     188: aload_0
     189: getfield      #5                  // Field pos:I
     192: goto          199
     195: aload_3
     196: getfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
     199: istore        4
     201: aload_0
     202: aload_0
     203: getfield      #2                  // Field buf:[B
     206: aload_1
     207: getfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
     210: iload         4
     212: aload_1
     213: getfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
     216: isub
     217: invokespecial #32                 // Method org/apache/avro/io/BufferedBinaryEncoder.writeFixed:([BII)V
     220: aload_0
     221: getfield      #2                  // Field buf:[B
     224: iload         4
     226: aload_0
     227: getfield      #2                  // Field buf:[B
     230: iconst_0
     231: aload_0
     232: getfield      #5                  // Field pos:I
     235: iload         4
     237: isub
     238: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     241: iload_2
     242: iconst_1
     243: iadd
     244: istore        5
     246: iload         5
     248: aload_0
     249: getfield      #14                 // Field stackTop:I
     252: if_icmpgt     291
     255: aload_0
     256: getfield      #13                 // Field blockStack:[Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue;
     259: iload         5
     261: aaload
     262: astore_3
     263: aload_3
     264: dup
     265: getfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
     268: iload         4
     270: isub
     271: putfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
     274: aload_3
     275: dup
     276: getfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
     279: iload         4
     281: isub
     282: putfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
     285: iinc          5, 1
     288: goto          246
     291: aload_0
     292: dup
     293: getfield      #5                  // Field pos:I
     296: iload         4
     298: isub
     299: putfield      #5                  // Field pos:I
     302: getstatic     #1                  // Field $assertionsDisabled:Z
     305: ifne          324
     308: aload_1
     309: getfield      #25                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.items:I
     312: iconst_1
     313: if_icmpeq     324
     316: new           #3                  // class java/lang/AssertionError
     319: dup
     320: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
     323: athrow
     324: aload_1
     325: aload_1
     326: iconst_0
     327: dup_x1
     328: putfield      #23                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.lastFullItem:I
     331: putfield      #24                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.start:I
     334: aload_1
     335: getstatic     #33                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State.OVERFLOW:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
     338: putfield      #22                 // Field org/apache/avro/io/BlockingBinaryEncoder$BlockedValue.state:Lorg/apache/avro/io/BlockingBinaryEncoder$BlockedValue$State;
     341: getstatic     #1                  // Field $assertionsDisabled:Z
     344: ifne          362
     347: aload_0
     348: invokespecial #26                 // Method check:()Z
     351: ifne          362
     354: new           #3                  // class java/lang/AssertionError
     357: dup
     358: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
     361: athrow
     362: return

  static {};
    Code:
       0: ldc           #27                 // class org/apache/avro/io/BlockingBinaryEncoder
       2: invokevirtual #70                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #1                  // Field $assertionsDisabled:Z
      16: return
}
