Compiled from "XZCodec.java"
public class org.apache.avro.file.XZCodec extends org.apache.avro.file.Codec {
  public static final int DEFAULT_COMPRESSION;

  private java.io.ByteArrayOutputStream outputBuffer;

  private int compressionLevel;

  public org.apache.avro.file.XZCodec(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/avro/file/Codec."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field compressionLevel:I
       9: return

  public java.lang.String getName();
    Code:
       0: ldc           #4                  // String xz
       2: areturn

  public java.nio.ByteBuffer compress(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method java/nio/ByteBuffer.remaining:()I
       5: invokespecial #6                  // Method getOutputBuffer:(I)Ljava/io/ByteArrayOutputStream;
       8: astore_2
       9: new           #7                  // class org/apache/commons/compress/compressors/xz/XZCompressorOutputStream
      12: dup
      13: aload_2
      14: aload_0
      15: getfield      #2                  // Field compressionLevel:I
      18: invokespecial #8                  // Method org/apache/commons/compress/compressors/xz/XZCompressorOutputStream."<init>":(Ljava/io/OutputStream;I)V
      21: astore_3
      22: aconst_null
      23: astore        4
      25: aload_3
      26: aload_1
      27: invokevirtual #9                  // Method java/nio/ByteBuffer.array:()[B
      30: aload_1
      31: invokestatic  #10                 // Method computeOffset:(Ljava/nio/ByteBuffer;)I
      34: aload_1
      35: invokevirtual #5                  // Method java/nio/ByteBuffer.remaining:()I
      38: invokevirtual #11                 // Method java/io/OutputStream.write:([BII)V
      41: aload_3
      42: ifnull        122
      45: aload         4
      47: ifnull        69
      50: aload_3
      51: invokevirtual #12                 // Method java/io/OutputStream.close:()V
      54: goto          122
      57: astore        5
      59: aload         4
      61: aload         5
      63: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      66: goto          122
      69: aload_3
      70: invokevirtual #12                 // Method java/io/OutputStream.close:()V
      73: goto          122
      76: astore        5
      78: aload         5
      80: astore        4
      82: aload         5
      84: athrow
      85: astore        6
      87: aload_3
      88: ifnull        119
      91: aload         4
      93: ifnull        115
      96: aload_3
      97: invokevirtual #12                 // Method java/io/OutputStream.close:()V
     100: goto          119
     103: astore        7
     105: aload         4
     107: aload         7
     109: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     112: goto          119
     115: aload_3
     116: invokevirtual #12                 // Method java/io/OutputStream.close:()V
     119: aload         6
     121: athrow
     122: aload_2
     123: invokevirtual #15                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     126: invokestatic  #16                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     129: areturn
    Exception table:
       from    to  target type
          50    54    57   Class java/lang/Throwable
          25    41    76   Class java/lang/Throwable
          25    41    85   any
          96   100   103   Class java/lang/Throwable
          76    87    85   any

  public java.nio.ByteBuffer decompress(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method java/nio/ByteBuffer.remaining:()I
       5: invokespecial #6                  // Method getOutputBuffer:(I)Ljava/io/ByteArrayOutputStream;
       8: astore_2
       9: new           #17                 // class java/io/ByteArrayInputStream
      12: dup
      13: aload_1
      14: invokevirtual #9                  // Method java/nio/ByteBuffer.array:()[B
      17: aload_1
      18: invokestatic  #10                 // Method computeOffset:(Ljava/nio/ByteBuffer;)I
      21: aload_1
      22: invokevirtual #5                  // Method java/nio/ByteBuffer.remaining:()I
      25: invokespecial #18                 // Method java/io/ByteArrayInputStream."<init>":([BII)V
      28: astore_3
      29: new           #19                 // class org/apache/commons/compress/compressors/xz/XZCompressorInputStream
      32: dup
      33: aload_3
      34: invokespecial #20                 // Method org/apache/commons/compress/compressors/xz/XZCompressorInputStream."<init>":(Ljava/io/InputStream;)V
      37: astore        4
      39: aconst_null
      40: astore        5
      42: aload         4
      44: aload_2
      45: invokestatic  #21                 // Method org/apache/commons/compress/utils/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)J
      48: pop2
      49: aload         4
      51: ifnull        136
      54: aload         5
      56: ifnull        79
      59: aload         4
      61: invokevirtual #22                 // Method java/io/InputStream.close:()V
      64: goto          136
      67: astore        6
      69: aload         5
      71: aload         6
      73: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      76: goto          136
      79: aload         4
      81: invokevirtual #22                 // Method java/io/InputStream.close:()V
      84: goto          136
      87: astore        6
      89: aload         6
      91: astore        5
      93: aload         6
      95: athrow
      96: astore        7
      98: aload         4
     100: ifnull        133
     103: aload         5
     105: ifnull        128
     108: aload         4
     110: invokevirtual #22                 // Method java/io/InputStream.close:()V
     113: goto          133
     116: astore        8
     118: aload         5
     120: aload         8
     122: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     125: goto          133
     128: aload         4
     130: invokevirtual #22                 // Method java/io/InputStream.close:()V
     133: aload         7
     135: athrow
     136: aload_2
     137: invokevirtual #15                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     140: invokestatic  #16                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     143: areturn
    Exception table:
       from    to  target type
          59    64    67   Class java/lang/Throwable
          42    49    87   Class java/lang/Throwable
          42    49    96   any
         108   113   116   Class java/lang/Throwable
          87    98    96   any

  private java.io.ByteArrayOutputStream getOutputBuffer(int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #23                 // Field outputBuffer:Ljava/io/ByteArrayOutputStream;
       5: if_acmpne     20
       8: aload_0
       9: new           #24                 // class java/io/ByteArrayOutputStream
      12: dup
      13: iload_1
      14: invokespecial #25                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
      17: putfield      #23                 // Field outputBuffer:Ljava/io/ByteArrayOutputStream;
      20: aload_0
      21: getfield      #23                 // Field outputBuffer:Ljava/io/ByteArrayOutputStream;
      24: invokevirtual #26                 // Method java/io/ByteArrayOutputStream.reset:()V
      27: aload_0
      28: getfield      #23                 // Field outputBuffer:Ljava/io/ByteArrayOutputStream;
      31: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field compressionLevel:I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_1
      12: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_0
      16: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #28                 // class org/apache/avro/file/XZCodec
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field compressionLevel:I
      33: aload_2
      34: getfield      #2                  // Field compressionLevel:I
      37: if_icmpne     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public java.lang.String toString();
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #31                 // Method getName:()Ljava/lang/String;
      11: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #33                 // String -
      16: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #2                  // Field compressionLevel:I
      23: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn
}
