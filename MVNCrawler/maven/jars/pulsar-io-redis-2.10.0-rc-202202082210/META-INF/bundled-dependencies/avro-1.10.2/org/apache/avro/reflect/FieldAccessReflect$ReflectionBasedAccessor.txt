Compiled from "FieldAccessReflect.java"
class org.apache.avro.reflect.FieldAccessReflect$ReflectionBasedAccessor extends org.apache.avro.reflect.FieldAccessor {
  protected final java.lang.reflect.Field field;

  private boolean isStringable;

  private boolean isCustomEncoded;

  public org.apache.avro.reflect.FieldAccessReflect$ReflectionBasedAccessor(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/avro/reflect/FieldAccessor."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field field:Ljava/lang/reflect/Field;
       9: aload_0
      10: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
      13: iconst_1
      14: invokevirtual #3                  // Method java/lang/reflect/Field.setAccessible:(Z)V
      17: aload_0
      18: aload_1
      19: ldc           #4                  // class org/apache/avro/reflect/Stringable
      21: invokevirtual #5                  // Method java/lang/reflect/Field.isAnnotationPresent:(Ljava/lang/Class;)Z
      24: putfield      #6                  // Field isStringable:Z
      27: aload_0
      28: aload_1
      29: ldc           #7                  // class org/apache/avro/reflect/AvroEncode
      31: invokevirtual #5                  // Method java/lang/reflect/Field.isAnnotationPresent:(Ljava/lang/Class;)Z
      34: putfield      #8                  // Field isCustomEncoded:Z
      37: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
       4: invokevirtual #9                  // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
       7: areturn

  public java.lang.Object get(java.lang.Object) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #10                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public void set(java.lang.Object, java.lang.Object) throws java.lang.IllegalAccessException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: aload_2
       6: invokevirtual #11                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
       9: return

  protected java.lang.reflect.Field getField();
    Code:
       0: aload_0
       1: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
       4: areturn

  protected boolean isStringable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field isStringable:Z
       4: ireturn

  protected boolean isCustomEncoded();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isCustomEncoded:Z
       4: ireturn
}
