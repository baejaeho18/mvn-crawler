Compiled from "SnappyCodec.java"
public class org.apache.avro.file.SnappyCodec extends org.apache.avro.file.Codec {
  private java.util.zip.CRC32 crc32;

  private org.apache.avro.file.SnappyCodec();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/avro/file/Codec."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/zip/CRC32
       8: dup
       9: invokespecial #4                  // Method java/util/zip/CRC32."<init>":()V
      12: putfield      #5                  // Field crc32:Ljava/util/zip/CRC32;
      15: return

  public java.lang.String getName();
    Code:
       0: ldc           #7                  // String snappy
       2: areturn

  public java.nio.ByteBuffer compress(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #8                  // Method computeOffset:(Ljava/nio/ByteBuffer;)I
       4: istore_2
       5: aload_1
       6: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
       9: invokestatic  #10                 // Method org/xerial/snappy/Snappy.maxCompressedLength:(I)I
      12: iconst_4
      13: iadd
      14: invokestatic  #11                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      17: astore_3
      18: aload_1
      19: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      22: iload_2
      23: aload_1
      24: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
      27: aload_3
      28: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      31: iconst_0
      32: invokestatic  #13                 // Method org/xerial/snappy/Snappy.compress:([BII[BI)I
      35: istore        4
      37: aload_0
      38: getfield      #5                  // Field crc32:Ljava/util/zip/CRC32;
      41: invokevirtual #14                 // Method java/util/zip/CRC32.reset:()V
      44: aload_0
      45: getfield      #5                  // Field crc32:Ljava/util/zip/CRC32;
      48: aload_1
      49: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      52: iload_2
      53: aload_1
      54: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
      57: invokevirtual #15                 // Method java/util/zip/CRC32.update:([BII)V
      60: aload_3
      61: iload         4
      63: aload_0
      64: getfield      #5                  // Field crc32:Ljava/util/zip/CRC32;
      67: invokevirtual #16                 // Method java/util/zip/CRC32.getValue:()J
      70: l2i
      71: invokevirtual #17                 // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
      74: pop
      75: aload_3
      76: iload         4
      78: iconst_4
      79: iadd
      80: invokevirtual #18                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      83: pop
      84: aload_3
      85: areturn

  public java.nio.ByteBuffer decompress(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #8                  // Method computeOffset:(Ljava/nio/ByteBuffer;)I
       4: istore_2
       5: aload_1
       6: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
       9: iload_2
      10: aload_1
      11: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
      14: iconst_4
      15: isub
      16: invokestatic  #19                 // Method org/xerial/snappy/Snappy.uncompressedLength:([BII)I
      19: invokestatic  #11                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      22: astore_3
      23: aload_1
      24: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      27: iload_2
      28: aload_1
      29: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
      32: iconst_4
      33: isub
      34: aload_3
      35: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      38: iconst_0
      39: invokestatic  #20                 // Method org/xerial/snappy/Snappy.uncompress:([BII[BI)I
      42: istore        4
      44: aload_3
      45: iload         4
      47: invokevirtual #18                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      50: pop
      51: aload_0
      52: getfield      #5                  // Field crc32:Ljava/util/zip/CRC32;
      55: invokevirtual #14                 // Method java/util/zip/CRC32.reset:()V
      58: aload_0
      59: getfield      #5                  // Field crc32:Ljava/util/zip/CRC32;
      62: aload_3
      63: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      66: iconst_0
      67: iload         4
      69: invokevirtual #15                 // Method java/util/zip/CRC32.update:([BII)V
      72: aload_1
      73: aload_1
      74: invokevirtual #21                 // Method java/nio/Buffer.limit:()I
      77: iconst_4
      78: isub
      79: invokevirtual #22                 // Method java/nio/ByteBuffer.getInt:(I)I
      82: aload_0
      83: getfield      #5                  // Field crc32:Ljava/util/zip/CRC32;
      86: invokevirtual #16                 // Method java/util/zip/CRC32.getValue:()J
      89: l2i
      90: if_icmpeq     103
      93: new           #23                 // class java/io/IOException
      96: dup
      97: ldc           #24                 // String Checksum failure
      99: invokespecial #25                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: aload_3
     104: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getName:()Ljava/lang/String;
       4: invokevirtual #27                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        26
      11: aload_1
      12: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_0
      16: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  org.apache.avro.file.SnappyCodec(org.apache.avro.file.SnappyCodec$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
