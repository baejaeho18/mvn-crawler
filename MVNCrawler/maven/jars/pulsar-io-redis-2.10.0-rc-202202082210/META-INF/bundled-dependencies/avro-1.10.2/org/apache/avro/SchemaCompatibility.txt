Compiled from "SchemaCompatibility.java"
public class org.apache.avro.SchemaCompatibility {
  private static final org.slf4j.Logger LOG;

  public static final java.lang.String READER_WRITER_COMPATIBLE_MESSAGE;

  static final boolean $assertionsDisabled;

  private org.apache.avro.SchemaCompatibility();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.avro.SchemaCompatibility$SchemaPairCompatibility checkReaderWriterCompatibility(org.apache.avro.Schema, org.apache.avro.Schema);
    Code:
       0: new           #5                  // class org/apache/avro/SchemaCompatibility$ReaderWriterCompatibilityChecker
       3: dup
       4: aconst_null
       5: invokespecial #6                  // Method org/apache/avro/SchemaCompatibility$ReaderWriterCompatibilityChecker."<init>":(Lorg/apache/avro/SchemaCompatibility$1;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #7                  // Method org/apache/avro/SchemaCompatibility$ReaderWriterCompatibilityChecker.getCompatibility:(Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;)Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityResult;
      13: astore_2
      14: getstatic     #8                  // Field org/apache/avro/SchemaCompatibility$1.$SwitchMap$org$apache$avro$SchemaCompatibility$SchemaCompatibilityType:[I
      17: aload_2
      18: invokevirtual #9                  // Method org/apache/avro/SchemaCompatibility$SchemaCompatibilityResult.getCompatibility:()Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityType;
      21: invokevirtual #10                 // Method org/apache/avro/SchemaCompatibility$SchemaCompatibilityType.ordinal:()I
      24: iaload
      25: lookupswitch  { // 2
                     1: 52
                     2: 81
               default: 87
          }
      52: ldc           #11                 // String Data encoded using writer schema:%n%s%nwill or may fail to decode using reader schema:%n%s%n
      54: iconst_2
      55: anewarray     #12                 // class java/lang/Object
      58: dup
      59: iconst_0
      60: aload_1
      61: iconst_1
      62: invokevirtual #13                 // Method org/apache/avro/Schema.toString:(Z)Ljava/lang/String;
      65: aastore
      66: dup
      67: iconst_1
      68: aload_0
      69: iconst_1
      70: invokevirtual #13                 // Method org/apache/avro/Schema.toString:(Z)Ljava/lang/String;
      73: aastore
      74: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      77: astore_3
      78: goto          114
      81: ldc           #16                 // String Reader schema can always successfully decode data written using the writer schema.
      83: astore_3
      84: goto          114
      87: new           #17                 // class org/apache/avro/AvroRuntimeException
      90: dup
      91: new           #18                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #20                 // String Unknown compatibility:
     100: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_2
     104: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     107: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokespecial #24                 // Method org/apache/avro/AvroRuntimeException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: new           #25                 // class org/apache/avro/SchemaCompatibility$SchemaPairCompatibility
     117: dup
     118: aload_2
     119: aload_0
     120: aload_1
     121: aload_3
     122: invokespecial #26                 // Method org/apache/avro/SchemaCompatibility$SchemaPairCompatibility."<init>":(Lorg/apache/avro/SchemaCompatibility$SchemaCompatibilityResult;Lorg/apache/avro/Schema;Lorg/apache/avro/Schema;Ljava/lang/String;)V
     125: areturn

  public static boolean schemaNameEquals(org.apache.avro.Schema, org.apache.avro.Schema);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method org/apache/avro/Schema.getName:()Ljava/lang/String;
       4: aload_1
       5: invokevirtual #27                 // Method org/apache/avro/Schema.getName:()Ljava/lang/String;
       8: invokestatic  #1                  // Method objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ifeq          16
      14: iconst_1
      15: ireturn
      16: aload_0
      17: invokevirtual #28                 // Method org/apache/avro/Schema.getAliases:()Ljava/util/Set;
      20: aload_1
      21: invokevirtual #29                 // Method org/apache/avro/Schema.getFullName:()Ljava/lang/String;
      24: invokeinterface #30,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      29: ireturn

  public static org.apache.avro.Schema$Field lookupWriterField(org.apache.avro.Schema, org.apache.avro.Schema$Field);
    Code:
       0: getstatic     #31                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: invokevirtual #32                 // Method org/apache/avro/Schema.getType:()Lorg/apache/avro/Schema$Type;
      10: getstatic     #33                 // Field org/apache/avro/Schema$Type.RECORD:Lorg/apache/avro/Schema$Type;
      13: if_acmpeq     24
      16: new           #34                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: new           #36                 // class java/util/ArrayList
      27: dup
      28: invokespecial #37                 // Method java/util/ArrayList."<init>":()V
      31: astore_2
      32: aload_0
      33: aload_1
      34: invokevirtual #38                 // Method org/apache/avro/Schema$Field.name:()Ljava/lang/String;
      37: invokevirtual #39                 // Method org/apache/avro/Schema.getField:(Ljava/lang/String;)Lorg/apache/avro/Schema$Field;
      40: astore_3
      41: aload_3
      42: ifnull        53
      45: aload_2
      46: aload_3
      47: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: aload_1
      54: invokevirtual #41                 // Method org/apache/avro/Schema$Field.aliases:()Ljava/util/Set;
      57: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      62: astore        4
      64: aload         4
      66: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          111
      74: aload         4
      76: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #45                 // class java/lang/String
      84: astore        5
      86: aload_0
      87: aload         5
      89: invokevirtual #39                 // Method org/apache/avro/Schema.getField:(Ljava/lang/String;)Lorg/apache/avro/Schema$Field;
      92: astore        6
      94: aload         6
      96: ifnull        108
      99: aload_2
     100: aload         6
     102: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     107: pop
     108: goto          64
     111: aload_2
     112: invokeinterface #46,  1           // InterfaceMethod java/util/List.size:()I
     117: lookupswitch  { // 2
                     0: 144
                     1: 146
               default: 157
          }
     144: aconst_null
     145: areturn
     146: aload_2
     147: iconst_0
     148: invokeinterface #47,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     153: checkcast     #48                 // class org/apache/avro/Schema$Field
     156: areturn
     157: new           #17                 // class org/apache/avro/AvroRuntimeException
     160: dup
     161: ldc           #49                 // String Reader record field %s matches multiple fields in writer record schema %s
     163: iconst_2
     164: anewarray     #12                 // class java/lang/Object
     167: dup
     168: iconst_0
     169: aload_1
     170: aastore
     171: dup
     172: iconst_1
     173: aload_0
     174: aastore
     175: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     178: invokespecial #24                 // Method org/apache/avro/AvroRuntimeException."<init>":(Ljava/lang/String;)V
     181: athrow

  private static boolean objectsEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       5: ireturn

  private static java.util.List<java.lang.String> asList(java.util.Deque<java.lang.String>);
    Code:
       0: new           #36                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokespecial #51                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       8: astore_1
       9: aload_1
      10: invokestatic  #52                 // Method java/util/Collections.reverse:(Ljava/util/List;)V
      13: aload_1
      14: invokestatic  #53                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      17: areturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.util.List access$200(java.util.Deque);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method asList:(Ljava/util/Deque;)Ljava/util/List;
       4: areturn

  static boolean access$300(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       5: ireturn

  static {};
    Code:
       0: ldc           #15                 // class org/apache/avro/SchemaCompatibility
       2: invokevirtual #54                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #31                 // Field $assertionsDisabled:Z
      16: ldc           #15                 // class org/apache/avro/SchemaCompatibility
      18: invokestatic  #55                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      24: return
}
