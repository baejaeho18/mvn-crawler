Compiled from "ReusableByteBufferInputStream.java"
public class org.apache.avro.util.ReusableByteBufferInputStream extends java.io.InputStream {
  private static final java.nio.ByteBuffer EMPTY_BUFFER;

  private java.nio.ByteBuffer byteBuffer;

  private java.nio.Buffer buffer;

  private int mark;

  public org.apache.avro.util.ReusableByteBufferInputStream();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
       8: putfield      #3                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      11: aload_0
      12: aload_0
      13: getfield      #3                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      16: putfield      #4                  // Field buffer:Ljava/nio/Buffer;
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field mark:I
      24: return

  public void setByteBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       5: putfield      #3                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       8: aload_0
       9: aload_0
      10: getfield      #3                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      13: putfield      #4                  // Field buffer:Ljava/nio/Buffer;
      16: aload_0
      17: aload_1
      18: invokevirtual #7                  // Method java/nio/ByteBuffer.position:()I
      21: putfield      #5                  // Field mark:I
      24: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:Ljava/nio/Buffer;
       4: invokevirtual #8                  // Method java/nio/Buffer.hasRemaining:()Z
       7: ifeq          22
      10: aload_0
      11: getfield      #3                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      14: invokevirtual #9                  // Method java/nio/ByteBuffer.get:()B
      17: sipush        255
      20: iand
      21: ireturn
      22: iconst_m1
      23: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:Ljava/nio/Buffer;
       4: invokevirtual #10                 // Method java/nio/Buffer.remaining:()I
       7: ifgt          12
      10: iconst_m1
      11: ireturn
      12: iload_3
      13: aload_0
      14: getfield      #4                  // Field buffer:Ljava/nio/Buffer;
      17: invokevirtual #10                 // Method java/nio/Buffer.remaining:()I
      20: invokestatic  #11                 // Method java/lang/Math.min:(II)I
      23: istore        4
      25: aload_0
      26: getfield      #3                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      29: aload_1
      30: iload_2
      31: iload         4
      33: invokevirtual #12                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      36: pop
      37: iload         4
      39: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifgt          8
       6: lconst_0
       7: lreturn
       8: lload_1
       9: aload_0
      10: getfield      #4                  // Field buffer:Ljava/nio/Buffer;
      13: invokevirtual #10                 // Method java/nio/Buffer.remaining:()I
      16: i2l
      17: lcmp
      18: ifle          31
      21: aload_0
      22: getfield      #4                  // Field buffer:Ljava/nio/Buffer;
      25: invokevirtual #10                 // Method java/nio/Buffer.remaining:()I
      28: goto          33
      31: lload_1
      32: l2i
      33: istore_3
      34: aload_0
      35: getfield      #4                  // Field buffer:Ljava/nio/Buffer;
      38: aload_0
      39: getfield      #4                  // Field buffer:Ljava/nio/Buffer;
      42: invokevirtual #13                 // Method java/nio/Buffer.position:()I
      45: iload_3
      46: iadd
      47: invokevirtual #14                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      50: pop
      51: iload_3
      52: i2l
      53: lreturn

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field buffer:Ljava/nio/Buffer;
       5: invokevirtual #13                 // Method java/nio/Buffer.position:()I
       8: putfield      #5                  // Field mark:I
      11: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:Ljava/nio/Buffer;
       4: aload_0
       5: getfield      #5                  // Field mark:I
       8: invokevirtual #14                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      11: pop
      12: return

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  static {};
    Code:
       0: iconst_0
       1: invokestatic  #15                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       4: putstatic     #2                  // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
       7: return
}
