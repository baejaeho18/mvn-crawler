Compiled from "JsonProperties.java"
class org.apache.avro.JsonProperties$2 extends java.util.concurrent.ConcurrentHashMap<java.lang.String, com.fasterxml.jackson.databind.JsonNode> {
  private static final long serialVersionUID;

  private java.util.Queue<org.apache.avro.reflect.MapEntry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>> propOrder;

  final org.apache.avro.JsonProperties this$0;

  org.apache.avro.JsonProperties$2(org.apache.avro.JsonProperties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/avro/JsonProperties;
       5: aload_0
       6: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       9: aload_0
      10: new           #4                  // class java/util/concurrent/ConcurrentLinkedQueue
      13: dup
      14: invokespecial #5                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      17: putfield      #1                  // Field propOrder:Ljava/util/Queue;
      20: return

  public com.fasterxml.jackson.databind.JsonNode putIfAbsent(java.lang.String, com.fasterxml.jackson.databind.JsonNode);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #7                  // class com/fasterxml/jackson/databind/JsonNode
       9: astore_3
      10: aload_3
      11: ifnonnull     33
      14: aload_0
      15: getfield      #1                  // Field propOrder:Ljava/util/Queue;
      18: new           #8                  // class org/apache/avro/reflect/MapEntry
      21: dup
      22: aload_1
      23: aload_2
      24: invokespecial #9                  // Method org/apache/avro/reflect/MapEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      27: invokeinterface #10,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      32: pop
      33: aload_3
      34: areturn

  public com.fasterxml.jackson.databind.JsonNode put(java.lang.String, com.fasterxml.jackson.databind.JsonNode);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #11                 // Method putIfAbsent:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
       6: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>> entrySet();
    Code:
       0: new           #12                 // class org/apache/avro/JsonProperties$2$1
       3: dup
       4: aload_0
       5: invokespecial #13                 // Method org/apache/avro/JsonProperties$2$1."<init>":(Lorg/apache/avro/JsonProperties$2;)V
       8: areturn

  public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #14                 // class java/lang/String
       5: aload_2
       6: checkcast     #7                  // class com/fasterxml/jackson/databind/JsonNode
       9: invokevirtual #11                 // Method putIfAbsent:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
      12: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #14                 // class java/lang/String
       5: aload_2
       6: checkcast     #7                  // class com/fasterxml/jackson/databind/JsonNode
       9: invokevirtual #15                 // Method put:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
      12: areturn

  static java.util.Queue access$200(org.apache.avro.JsonProperties$2);
    Code:
       0: aload_0
       1: getfield      #1                  // Field propOrder:Ljava/util/Queue;
       4: areturn
}
