Compiled from "DeflateCodec.java"
public class org.apache.avro.file.DeflateCodec extends org.apache.avro.file.Codec {
  private java.io.ByteArrayOutputStream outputBuffer;

  private java.util.zip.Deflater deflater;

  private java.util.zip.Inflater inflater;

  private boolean nowrap;

  private int compressionLevel;

  public org.apache.avro.file.DeflateCodec(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/avro/file/Codec."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field nowrap:Z
       9: aload_0
      10: iload_1
      11: putfield      #3                  // Field compressionLevel:I
      14: return

  public java.lang.String getName();
    Code:
       0: ldc           #5                  // String deflate
       2: areturn

  public java.nio.ByteBuffer compress(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
       5: invokespecial #7                  // Method getOutputBuffer:(I)Ljava/io/ByteArrayOutputStream;
       8: astore_2
       9: new           #8                  // class java/util/zip/DeflaterOutputStream
      12: dup
      13: aload_2
      14: aload_0
      15: invokespecial #9                  // Method getDeflater:()Ljava/util/zip/Deflater;
      18: invokespecial #10                 // Method java/util/zip/DeflaterOutputStream."<init>":(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V
      21: astore_3
      22: aconst_null
      23: astore        4
      25: aload_3
      26: aload_1
      27: invokevirtual #11                 // Method java/nio/ByteBuffer.array:()[B
      30: aload_1
      31: invokestatic  #12                 // Method computeOffset:(Ljava/nio/ByteBuffer;)I
      34: aload_1
      35: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
      38: invokevirtual #13                 // Method java/io/OutputStream.write:([BII)V
      41: aload_3
      42: ifnull        122
      45: aload         4
      47: ifnull        69
      50: aload_3
      51: invokevirtual #14                 // Method java/io/OutputStream.close:()V
      54: goto          122
      57: astore        5
      59: aload         4
      61: aload         5
      63: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      66: goto          122
      69: aload_3
      70: invokevirtual #14                 // Method java/io/OutputStream.close:()V
      73: goto          122
      76: astore        5
      78: aload         5
      80: astore        4
      82: aload         5
      84: athrow
      85: astore        6
      87: aload_3
      88: ifnull        119
      91: aload         4
      93: ifnull        115
      96: aload_3
      97: invokevirtual #14                 // Method java/io/OutputStream.close:()V
     100: goto          119
     103: astore        7
     105: aload         4
     107: aload         7
     109: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     112: goto          119
     115: aload_3
     116: invokevirtual #14                 // Method java/io/OutputStream.close:()V
     119: aload         6
     121: athrow
     122: aload_2
     123: invokevirtual #17                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     126: invokestatic  #18                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     129: areturn
    Exception table:
       from    to  target type
          50    54    57   Class java/lang/Throwable
          25    41    76   Class java/lang/Throwable
          25    41    85   any
          96   100   103   Class java/lang/Throwable
          76    87    85   any

  public java.nio.ByteBuffer decompress(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
       5: invokespecial #7                  // Method getOutputBuffer:(I)Ljava/io/ByteArrayOutputStream;
       8: astore_2
       9: new           #19                 // class java/util/zip/InflaterOutputStream
      12: dup
      13: aload_2
      14: aload_0
      15: invokespecial #20                 // Method getInflater:()Ljava/util/zip/Inflater;
      18: invokespecial #21                 // Method java/util/zip/InflaterOutputStream."<init>":(Ljava/io/OutputStream;Ljava/util/zip/Inflater;)V
      21: astore_3
      22: aconst_null
      23: astore        4
      25: aload_3
      26: aload_1
      27: invokevirtual #11                 // Method java/nio/ByteBuffer.array:()[B
      30: aload_1
      31: invokestatic  #12                 // Method computeOffset:(Ljava/nio/ByteBuffer;)I
      34: aload_1
      35: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
      38: invokevirtual #13                 // Method java/io/OutputStream.write:([BII)V
      41: aload_3
      42: ifnull        122
      45: aload         4
      47: ifnull        69
      50: aload_3
      51: invokevirtual #14                 // Method java/io/OutputStream.close:()V
      54: goto          122
      57: astore        5
      59: aload         4
      61: aload         5
      63: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      66: goto          122
      69: aload_3
      70: invokevirtual #14                 // Method java/io/OutputStream.close:()V
      73: goto          122
      76: astore        5
      78: aload         5
      80: astore        4
      82: aload         5
      84: athrow
      85: astore        6
      87: aload_3
      88: ifnull        119
      91: aload         4
      93: ifnull        115
      96: aload_3
      97: invokevirtual #14                 // Method java/io/OutputStream.close:()V
     100: goto          119
     103: astore        7
     105: aload         4
     107: aload         7
     109: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     112: goto          119
     115: aload_3
     116: invokevirtual #14                 // Method java/io/OutputStream.close:()V
     119: aload         6
     121: athrow
     122: aload_2
     123: invokevirtual #17                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     126: invokestatic  #18                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     129: areturn
    Exception table:
       from    to  target type
          50    54    57   Class java/lang/Throwable
          25    41    76   Class java/lang/Throwable
          25    41    85   any
          96   100   103   Class java/lang/Throwable
          76    87    85   any

  private java.util.zip.Inflater getInflater();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #22                 // Field inflater:Ljava/util/zip/Inflater;
       5: if_acmpne     23
       8: aload_0
       9: new           #23                 // class java/util/zip/Inflater
      12: dup
      13: aload_0
      14: getfield      #2                  // Field nowrap:Z
      17: invokespecial #24                 // Method java/util/zip/Inflater."<init>":(Z)V
      20: putfield      #22                 // Field inflater:Ljava/util/zip/Inflater;
      23: aload_0
      24: getfield      #22                 // Field inflater:Ljava/util/zip/Inflater;
      27: invokevirtual #25                 // Method java/util/zip/Inflater.reset:()V
      30: aload_0
      31: getfield      #22                 // Field inflater:Ljava/util/zip/Inflater;
      34: areturn

  private java.util.zip.Deflater getDeflater();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #26                 // Field deflater:Ljava/util/zip/Deflater;
       5: if_acmpne     27
       8: aload_0
       9: new           #27                 // class java/util/zip/Deflater
      12: dup
      13: aload_0
      14: getfield      #3                  // Field compressionLevel:I
      17: aload_0
      18: getfield      #2                  // Field nowrap:Z
      21: invokespecial #28                 // Method java/util/zip/Deflater."<init>":(IZ)V
      24: putfield      #26                 // Field deflater:Ljava/util/zip/Deflater;
      27: aload_0
      28: getfield      #26                 // Field deflater:Ljava/util/zip/Deflater;
      31: invokevirtual #29                 // Method java/util/zip/Deflater.reset:()V
      34: aload_0
      35: getfield      #26                 // Field deflater:Ljava/util/zip/Deflater;
      38: areturn

  private java.io.ByteArrayOutputStream getOutputBuffer(int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #30                 // Field outputBuffer:Ljava/io/ByteArrayOutputStream;
       5: if_acmpne     20
       8: aload_0
       9: new           #31                 // class java/io/ByteArrayOutputStream
      12: dup
      13: iload_1
      14: invokespecial #32                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
      17: putfield      #30                 // Field outputBuffer:Ljava/io/ByteArrayOutputStream;
      20: aload_0
      21: getfield      #30                 // Field outputBuffer:Ljava/io/ByteArrayOutputStream;
      24: invokevirtual #33                 // Method java/io/ByteArrayOutputStream.reset:()V
      27: aload_0
      28: getfield      #30                 // Field outputBuffer:Ljava/io/ByteArrayOutputStream;
      31: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nowrap:Z
       4: ifeq          11
       7: iconst_0
       8: goto          12
      11: iconst_1
      12: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_1
      12: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_0
      16: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #35                 // class org/apache/avro/file/DeflateCodec
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field nowrap:Z
      33: aload_2
      34: getfield      #2                  // Field nowrap:Z
      37: if_icmpne     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public java.lang.String toString();
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #38                 // Method getName:()Ljava/lang/String;
      11: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #40                 // String -
      16: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #3                  // Field compressionLevel:I
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn
}
