Compiled from "MultiHashMap.java"
public class org.apache.commons.collections.MultiHashMap extends java.util.HashMap implements org.apache.commons.collections.MultiMap {
  private transient java.util.Collection values;

  private static final long serialVersionUID;

  public org.apache.commons.collections.MultiHashMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/HashMap."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field values:Ljava/util/Collection;
       9: return

  public org.apache.commons.collections.MultiHashMap(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #3                  // Method java/util/HashMap."<init>":(I)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field values:Ljava/util/Collection;
      10: return

  public org.apache.commons.collections.MultiHashMap(int, float);
    Code:
       0: aload_0
       1: iload_1
       2: fload_2
       3: invokespecial #4                  // Method java/util/HashMap."<init>":(IF)V
       6: aload_0
       7: aconst_null
       8: putfield      #2                  // Field values:Ljava/util/Collection;
      11: return

  public org.apache.commons.collections.MultiHashMap(java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #5,  1            // InterfaceMethod java/util/Map.size:()I
       7: i2f
       8: ldc           #6                  // float 1.4f
      10: fmul
      11: f2i
      12: invokespecial #3                  // Method java/util/HashMap."<init>":(I)V
      15: aload_0
      16: aconst_null
      17: putfield      #2                  // Field values:Ljava/util/Collection;
      20: aload_0
      21: aload_1
      22: invokevirtual #7                  // Method putAll:(Ljava/util/Map;)V
      25: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: ldc           #9                  // String 1.2
       6: astore_2
       7: ldc           #10                 // String java.version
       9: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      12: astore_2
      13: goto          17
      16: astore_3
      17: aload_2
      18: ldc           #9                  // String 1.2
      20: invokevirtual #13                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      23: ifne          35
      26: aload_2
      27: ldc           #14                 // String 1.3
      29: invokevirtual #13                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      32: ifeq          100
      35: aload_0
      36: invokevirtual #15                 // Method entrySet:()Ljava/util/Set;
      39: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      44: astore_3
      45: aload_3
      46: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          100
      54: aload_3
      55: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #19                 // class java/util/Map$Entry
      63: astore        4
      65: aload_0
      66: aload         4
      68: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      73: aload         4
      75: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      80: checkcast     #22                 // class java/util/Collection
      83: invokeinterface #23,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      88: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      93: invokespecial #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: goto          45
     100: return
    Exception table:
       from    to  target type
           7    13    16   Class java/lang/SecurityException

  public int totalSize();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokespecial #25                 // Method java/util/HashMap.values:()Ljava/util/Collection;
       6: astore_2
       7: aload_2
       8: invokeinterface #23,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          47
      23: aload_3
      24: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #22                 // class java/util/Collection
      32: astore        4
      34: iload_1
      35: aload         4
      37: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.size:()I
      42: iadd
      43: istore_1
      44: goto          14
      47: iload_1
      48: ireturn

  public java.util.Collection getCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #22                 // class java/util/Collection
       8: areturn

  public int size(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method getCollection:(Ljava/lang/Object;)Ljava/util/Collection;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: iconst_0
      11: ireturn
      12: aload_2
      13: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.size:()I
      18: ireturn

  public java.util.Iterator iterator(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method getCollection:(Ljava/lang/Object;)Ljava/util/Collection;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: getstatic     #29                 // Field org/apache/commons/collections/iterators/EmptyIterator.INSTANCE:Ljava/util/Iterator;
      13: areturn
      14: aload_2
      15: invokeinterface #23,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method getCollection:(Ljava/lang/Object;)Ljava/util/Collection;
       5: astore_3
       6: aload_3
       7: ifnonnull     23
      10: aload_0
      11: aconst_null
      12: invokevirtual #30                 // Method createCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      15: astore_3
      16: aload_0
      17: aload_1
      18: aload_3
      19: invokespecial #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_3
      24: aload_2
      25: invokeinterface #31,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      30: istore        4
      32: iload         4
      34: ifeq          41
      37: aload_2
      38: goto          42
      41: aconst_null
      42: areturn

  public void putAll(java.util.Map);
    Code:
       0: aload_1
       1: instanceof    #32                 // class org/apache/commons/collections/MultiMap
       4: ifeq          68
       7: aload_1
       8: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      13: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          65
      28: aload_2
      29: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #19                 // class java/util/Map$Entry
      37: astore_3
      38: aload_3
      39: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: checkcast     #22                 // class java/util/Collection
      47: astore        4
      49: aload_0
      50: aload_3
      51: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      56: aload         4
      58: invokevirtual #34                 // Method putAll:(Ljava/lang/Object;Ljava/util/Collection;)Z
      61: pop
      62: goto          19
      65: goto          119
      68: aload_1
      69: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      74: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      79: astore_2
      80: aload_2
      81: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          119
      89: aload_2
      90: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      95: checkcast     #19                 // class java/util/Map$Entry
      98: astore_3
      99: aload_0
     100: aload_3
     101: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     106: aload_3
     107: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     112: invokevirtual #35                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     115: pop
     116: goto          80
     119: return

  public boolean putAll(java.lang.Object, java.util.Collection);
    Code:
       0: aload_2
       1: ifnull        13
       4: aload_2
       5: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.size:()I
      10: ifne          15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: aload_1
      17: invokevirtual #28                 // Method getCollection:(Ljava/lang/Object;)Ljava/util/Collection;
      20: astore_3
      21: aload_3
      22: ifnonnull     51
      25: aload_0
      26: aload_2
      27: invokevirtual #30                 // Method createCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      30: astore_3
      31: aload_3
      32: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.size:()I
      37: ifne          42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: aload_1
      44: aload_3
      45: invokespecial #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: iconst_1
      50: ireturn
      51: aload_3
      52: aload_2
      53: invokeinterface #36,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      58: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #37                 // Method java/util/HashMap.entrySet:()Ljava/util/Set;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_2
      12: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          66
      27: aload_3
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #19                 // class java/util/Map$Entry
      36: astore        4
      38: aload         4
      40: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      45: checkcast     #22                 // class java/util/Collection
      48: astore        5
      50: aload         5
      52: aload_1
      53: invokeinterface #38,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      58: ifeq          63
      61: iconst_1
      62: ireturn
      63: goto          18
      66: iconst_0
      67: ireturn

  public boolean containsValue(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method getCollection:(Ljava/lang/Object;)Ljava/util/Collection;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: iconst_0
      11: ireturn
      12: aload_3
      13: aload_2
      14: invokeinterface #38,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      19: ireturn

  public java.lang.Object remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method getCollection:(Ljava/lang/Object;)Ljava/util/Collection;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_3
      13: aload_2
      14: invokeinterface #39,  2           // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      19: istore        4
      21: iload         4
      23: ifne          28
      26: aconst_null
      27: areturn
      28: aload_3
      29: invokeinterface #40,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      34: ifeq          43
      37: aload_0
      38: aload_1
      39: invokevirtual #41                 // Method remove:(Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_2
      44: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method java/util/HashMap.entrySet:()Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          52
      21: aload_2
      22: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #19                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      37: checkcast     #22                 // class java/util/Collection
      40: astore        4
      42: aload         4
      44: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.clear:()V
      49: goto          12
      52: aload_0
      53: invokespecial #43                 // Method java/util/HashMap.clear:()V
      56: return

  public java.util.Collection values();
    Code:
       0: aload_0
       1: getfield      #2                  // Field values:Ljava/util/Collection;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          27
      13: aload_0
      14: new           #44                 // class org/apache/commons/collections/MultiHashMap$Values
      17: dup
      18: aload_0
      19: aconst_null
      20: invokespecial #45                 // Method org/apache/commons/collections/MultiHashMap$Values."<init>":(Lorg/apache/commons/collections/MultiHashMap;Lorg/apache/commons/collections/MultiHashMap$1;)V
      23: dup_x1
      24: putfield      #2                  // Field values:Ljava/util/Collection;
      27: areturn

  java.util.Iterator superValuesIterator();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/util/HashMap.values:()Ljava/util/Collection;
       4: invokeinterface #23,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method java/util/HashMap.clone:()Ljava/lang/Object;
       4: checkcast     #47                 // class org/apache/commons/collections/MultiHashMap
       7: astore_1
       8: aload_1
       9: invokevirtual #15                 // Method entrySet:()Ljava/util/Set;
      12: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          68
      27: aload_2
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #19                 // class java/util/Map$Entry
      36: astore_3
      37: aload_3
      38: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      43: checkcast     #22                 // class java/util/Collection
      46: astore        4
      48: aload_0
      49: aload         4
      51: invokevirtual #30                 // Method createCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      54: astore        5
      56: aload_3
      57: aload         5
      59: invokeinterface #48,  2           // InterfaceMethod java/util/Map$Entry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: goto          18
      68: aload_1
      69: areturn

  protected java.util.Collection createCollection(java.util.Collection);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #49                 // class java/util/ArrayList
       7: dup
       8: invokespecial #50                 // Method java/util/ArrayList."<init>":()V
      11: areturn
      12: new           #49                 // class java/util/ArrayList
      15: dup
      16: aload_1
      17: invokespecial #51                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      20: areturn
}
