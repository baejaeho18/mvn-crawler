Compiled from "ReferenceMap.java"
public class org.apache.commons.collections.ReferenceMap extends java.util.AbstractMap {
  private static final long serialVersionUID;

  public static final int HARD;

  public static final int SOFT;

  public static final int WEAK;

  private int keyType;

  private int valueType;

  private float loadFactor;

  private boolean purgeValues;

  private transient java.lang.ref.ReferenceQueue queue;

  private transient org.apache.commons.collections.ReferenceMap$Entry[] table;

  private transient int size;

  private transient int threshold;

  private volatile transient int modCount;

  private transient java.util.Set keySet;

  private transient java.util.Set entrySet;

  private transient java.util.Collection values;

  public org.apache.commons.collections.ReferenceMap();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: invokespecial #8                  // Method "<init>":(II)V
       6: return

  public org.apache.commons.collections.ReferenceMap(int, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #8                  // Method "<init>":(II)V
       6: aload_0
       7: iload_3
       8: putfield      #3                  // Field purgeValues:Z
      11: return

  public org.apache.commons.collections.ReferenceMap(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: bipush        16
       5: ldc           #9                  // float 0.75f
       7: invokespecial #10                 // Method "<init>":(IIIF)V
      10: return

  public org.apache.commons.collections.ReferenceMap(int, int, int, float, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: fload         4
       6: invokespecial #10                 // Method "<init>":(IIIF)V
       9: aload_0
      10: iload         5
      12: putfield      #3                  // Field purgeValues:Z
      15: return

  public org.apache.commons.collections.ReferenceMap(int, int, int, float);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field purgeValues:Z
       9: aload_0
      10: new           #12                 // class java/lang/ref/ReferenceQueue
      13: dup
      14: invokespecial #13                 // Method java/lang/ref/ReferenceQueue."<init>":()V
      17: putfield      #14                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      20: ldc           #15                 // String keyType
      22: iload_1
      23: invokestatic  #16                 // Method verify:(Ljava/lang/String;I)V
      26: ldc           #17                 // String valueType
      28: iload_2
      29: invokestatic  #16                 // Method verify:(Ljava/lang/String;I)V
      32: iload_3
      33: ifgt          46
      36: new           #18                 // class java/lang/IllegalArgumentException
      39: dup
      40: ldc           #19                 // String capacity must be positive
      42: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: fload         4
      48: fconst_0
      49: fcmpg
      50: ifle          60
      53: fload         4
      55: fconst_1
      56: fcmpl
      57: iflt          70
      60: new           #18                 // class java/lang/IllegalArgumentException
      63: dup
      64: ldc           #21                 // String Load factor must be greater than 0 and less than 1.
      66: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: aload_0
      71: iload_1
      72: putfield      #6                  // Field keyType:I
      75: aload_0
      76: iload_2
      77: putfield      #5                  // Field valueType:I
      80: iconst_1
      81: istore        5
      83: iload         5
      85: iload_3
      86: if_icmpge     98
      89: iload         5
      91: iconst_2
      92: imul
      93: istore        5
      95: goto          83
      98: aload_0
      99: iload         5
     101: anewarray     #22                 // class org/apache/commons/collections/ReferenceMap$Entry
     104: putfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
     107: aload_0
     108: fload         4
     110: putfield      #23                 // Field loadFactor:F
     113: aload_0
     114: iload         5
     116: i2f
     117: fload         4
     119: fmul
     120: f2i
     121: putfield      #24                 // Field threshold:I
     124: return

  private static void verify(java.lang.String, int);
    Code:
       0: iload_1
       1: iflt          9
       4: iload_1
       5: iconst_2
       6: if_icmple     36
       9: new           #18                 // class java/lang/IllegalArgumentException
      12: dup
      13: new           #25                 // class java/lang/StringBuffer
      16: dup
      17: invokespecial #26                 // Method java/lang/StringBuffer."<init>":()V
      20: aload_0
      21: invokevirtual #27                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      24: ldc           #28                 // String  must be HARD, SOFT, WEAK.
      26: invokevirtual #27                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: invokevirtual #29                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      32: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #30                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
       9: arraylength
      10: invokevirtual #31                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      13: aload_0
      14: invokevirtual #32                 // Method entrySet:()Ljava/util/Set;
      17: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          65
      32: aload_2
      33: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #36                 // class java/util/Map$Entry
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: invokevirtual #38                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      52: aload_1
      53: aload_3
      54: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: invokevirtual #38                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      62: goto          23
      65: aload_1
      66: aconst_null
      67: invokevirtual #38                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      70: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #41                 // Method java/io/ObjectInputStream.readInt:()I
       9: anewarray     #22                 // class org/apache/commons/collections/ReferenceMap$Entry
      12: putfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      15: aload_0
      16: aload_0
      17: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      20: arraylength
      21: i2f
      22: aload_0
      23: getfield      #23                 // Field loadFactor:F
      26: fmul
      27: f2i
      28: putfield      #24                 // Field threshold:I
      31: aload_0
      32: new           #12                 // class java/lang/ref/ReferenceQueue
      35: dup
      36: invokespecial #13                 // Method java/lang/ref/ReferenceQueue."<init>":()V
      39: putfield      #14                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      42: aload_1
      43: invokevirtual #42                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      46: astore_2
      47: aload_2
      48: ifnull        71
      51: aload_1
      52: invokevirtual #42                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      55: astore_3
      56: aload_0
      57: aload_2
      58: aload_3
      59: invokevirtual #43                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: aload_1
      64: invokevirtual #42                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      67: astore_2
      68: goto          47
      71: return

  private java.lang.Object toReference(int, java.lang.Object, int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 2
                     0: 28
                     1: 30
                     2: 44
               default: 58
          }
      28: aload_2
      29: areturn
      30: new           #44                 // class org/apache/commons/collections/ReferenceMap$SoftRef
      33: dup
      34: iload_3
      35: aload_2
      36: aload_0
      37: getfield      #14                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      40: invokespecial #45                 // Method org/apache/commons/collections/ReferenceMap$SoftRef."<init>":(ILjava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      43: areturn
      44: new           #46                 // class org/apache/commons/collections/ReferenceMap$WeakRef
      47: dup
      48: iload_3
      49: aload_2
      50: aload_0
      51: getfield      #14                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      54: invokespecial #47                 // Method org/apache/commons/collections/ReferenceMap$WeakRef."<init>":(ILjava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      57: areturn
      58: new           #48                 // class java/lang/Error
      61: dup
      62: invokespecial #49                 // Method java/lang/Error."<init>":()V
      65: athrow

  private org.apache.commons.collections.ReferenceMap$Entry getEntry(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: invokevirtual #50                 // Method java/lang/Object.hashCode:()I
      10: istore_2
      11: aload_0
      12: iload_2
      13: invokespecial #51                 // Method indexFor:(I)I
      16: istore_3
      17: aload_0
      18: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      21: iload_3
      22: aaload
      23: astore        4
      25: aload         4
      27: ifnull        64
      30: aload         4
      32: getfield      #52                 // Field org/apache/commons/collections/ReferenceMap$Entry.hash:I
      35: iload_2
      36: if_icmpne     54
      39: aload_1
      40: aload         4
      42: invokevirtual #53                 // Method org/apache/commons/collections/ReferenceMap$Entry.getKey:()Ljava/lang/Object;
      45: invokevirtual #54                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifeq          54
      51: aload         4
      53: areturn
      54: aload         4
      56: getfield      #55                 // Field org/apache/commons/collections/ReferenceMap$Entry.next:Lorg/apache/commons/collections/ReferenceMap$Entry;
      59: astore        4
      61: goto          25
      64: aconst_null
      65: areturn

  private int indexFor(int);
    Code:
       0: iload_1
       1: iload_1
       2: bipush        15
       4: ishl
       5: iconst_m1
       6: ixor
       7: iadd
       8: istore_1
       9: iload_1
      10: iload_1
      11: bipush        10
      13: iushr
      14: ixor
      15: istore_1
      16: iload_1
      17: iload_1
      18: iconst_3
      19: ishl
      20: iadd
      21: istore_1
      22: iload_1
      23: iload_1
      24: bipush        6
      26: iushr
      27: ixor
      28: istore_1
      29: iload_1
      30: iload_1
      31: bipush        11
      33: ishl
      34: iconst_m1
      35: ixor
      36: iadd
      37: istore_1
      38: iload_1
      39: iload_1
      40: bipush        16
      42: iushr
      43: ixor
      44: istore_1
      45: iload_1
      46: aload_0
      47: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      50: arraylength
      51: iconst_1
      52: isub
      53: iand
      54: ireturn

  private void resize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
       4: astore_1
       5: aload_0
       6: aload_1
       7: arraylength
       8: iconst_2
       9: imul
      10: anewarray     #22                 // class org/apache/commons/collections/ReferenceMap$Entry
      13: putfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      16: iconst_0
      17: istore_2
      18: iload_2
      19: aload_1
      20: arraylength
      21: if_icmpge     85
      24: aload_1
      25: iload_2
      26: aaload
      27: astore_3
      28: aload_3
      29: ifnull        75
      32: aload_3
      33: astore        4
      35: aload_3
      36: getfield      #55                 // Field org/apache/commons/collections/ReferenceMap$Entry.next:Lorg/apache/commons/collections/ReferenceMap$Entry;
      39: astore_3
      40: aload_0
      41: aload         4
      43: getfield      #52                 // Field org/apache/commons/collections/ReferenceMap$Entry.hash:I
      46: invokespecial #51                 // Method indexFor:(I)I
      49: istore        5
      51: aload         4
      53: aload_0
      54: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      57: iload         5
      59: aaload
      60: putfield      #55                 // Field org/apache/commons/collections/ReferenceMap$Entry.next:Lorg/apache/commons/collections/ReferenceMap$Entry;
      63: aload_0
      64: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      67: iload         5
      69: aload         4
      71: aastore
      72: goto          28
      75: aload_1
      76: iload_2
      77: aconst_null
      78: aastore
      79: iinc          2, 1
      82: goto          18
      85: aload_0
      86: aload_0
      87: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      90: arraylength
      91: i2f
      92: aload_0
      93: getfield      #23                 // Field loadFactor:F
      96: fmul
      97: f2i
      98: putfield      #24                 // Field threshold:I
     101: return

  private void purge();
    Code:
       0: aload_0
       1: getfield      #14                 // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #56                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: astore_1
       8: aload_1
       9: ifnull        28
      12: aload_0
      13: aload_1
      14: invokespecial #57                 // Method purge:(Ljava/lang/ref/Reference;)V
      17: aload_0
      18: getfield      #14                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      21: invokevirtual #56                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      24: astore_1
      25: goto          8
      28: return

  private void purge(java.lang.ref.Reference);
    Code:
       0: aload_1
       1: invokevirtual #50                 // Method java/lang/Object.hashCode:()I
       4: istore_2
       5: aload_0
       6: iload_2
       7: invokespecial #51                 // Method indexFor:(I)I
      10: istore_3
      11: aconst_null
      12: astore        4
      14: aload_0
      15: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      18: iload_3
      19: aaload
      20: astore        5
      22: aload         5
      24: ifnull        90
      27: aload         5
      29: aload_1
      30: invokevirtual #58                 // Method org/apache/commons/collections/ReferenceMap$Entry.purge:(Ljava/lang/ref/Reference;)Z
      33: ifeq          76
      36: aload         4
      38: ifnonnull     55
      41: aload_0
      42: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      45: iload_3
      46: aload         5
      48: getfield      #55                 // Field org/apache/commons/collections/ReferenceMap$Entry.next:Lorg/apache/commons/collections/ReferenceMap$Entry;
      51: aastore
      52: goto          65
      55: aload         4
      57: aload         5
      59: getfield      #55                 // Field org/apache/commons/collections/ReferenceMap$Entry.next:Lorg/apache/commons/collections/ReferenceMap$Entry;
      62: putfield      #55                 // Field org/apache/commons/collections/ReferenceMap$Entry.next:Lorg/apache/commons/collections/ReferenceMap$Entry;
      65: aload_0
      66: dup
      67: getfield      #59                 // Field size:I
      70: iconst_1
      71: isub
      72: putfield      #59                 // Field size:I
      75: return
      76: aload         5
      78: astore        4
      80: aload         5
      82: getfield      #55                 // Field org/apache/commons/collections/ReferenceMap$Entry.next:Lorg/apache/commons/collections/ReferenceMap$Entry;
      85: astore        5
      87: goto          22
      90: return

  public int size();
    Code:
       0: aload_0
       1: invokespecial #60                 // Method purge:()V
       4: aload_0
       5: getfield      #59                 // Field size:I
       8: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #60                 // Method purge:()V
       4: aload_0
       5: getfield      #59                 // Field size:I
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #60                 // Method purge:()V
       4: aload_0
       5: aload_1
       6: invokespecial #7                  // Method getEntry:(Ljava/lang/Object;)Lorg/apache/commons/collections/ReferenceMap$Entry;
       9: astore_2
      10: aload_2
      11: ifnonnull     16
      14: iconst_0
      15: ireturn
      16: aload_2
      17: invokevirtual #61                 // Method org/apache/commons/collections/ReferenceMap$Entry.getValue:()Ljava/lang/Object;
      20: ifnull        27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #60                 // Method purge:()V
       4: aload_0
       5: aload_1
       6: invokespecial #7                  // Method getEntry:(Ljava/lang/Object;)Lorg/apache/commons/collections/ReferenceMap$Entry;
       9: astore_2
      10: aload_2
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_2
      17: invokevirtual #61                 // Method org/apache/commons/collections/ReferenceMap$Entry.getValue:()Ljava/lang/Object;
      20: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #62                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #63                 // String null keys not allowed
      10: invokespecial #64                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #62                 // class java/lang/NullPointerException
      21: dup
      22: ldc           #65                 // String null values not allowed
      24: invokespecial #64                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: invokespecial #60                 // Method purge:()V
      32: aload_0
      33: getfield      #59                 // Field size:I
      36: iconst_1
      37: iadd
      38: aload_0
      39: getfield      #24                 // Field threshold:I
      42: if_icmple     49
      45: aload_0
      46: invokespecial #66                 // Method resize:()V
      49: aload_1
      50: invokevirtual #50                 // Method java/lang/Object.hashCode:()I
      53: istore_3
      54: aload_0
      55: iload_3
      56: invokespecial #51                 // Method indexFor:(I)I
      59: istore        4
      61: aload_0
      62: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      65: iload         4
      67: aaload
      68: astore        5
      70: aload         5
      72: ifnull        123
      75: iload_3
      76: aload         5
      78: getfield      #52                 // Field org/apache/commons/collections/ReferenceMap$Entry.hash:I
      81: if_icmpne     113
      84: aload_1
      85: aload         5
      87: invokevirtual #53                 // Method org/apache/commons/collections/ReferenceMap$Entry.getKey:()Ljava/lang/Object;
      90: invokevirtual #54                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      93: ifeq          113
      96: aload         5
      98: invokevirtual #61                 // Method org/apache/commons/collections/ReferenceMap$Entry.getValue:()Ljava/lang/Object;
     101: astore        6
     103: aload         5
     105: aload_2
     106: invokevirtual #67                 // Method org/apache/commons/collections/ReferenceMap$Entry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload         6
     112: areturn
     113: aload         5
     115: getfield      #55                 // Field org/apache/commons/collections/ReferenceMap$Entry.next:Lorg/apache/commons/collections/ReferenceMap$Entry;
     118: astore        5
     120: goto          70
     123: aload_0
     124: dup
     125: getfield      #59                 // Field size:I
     128: iconst_1
     129: iadd
     130: putfield      #59                 // Field size:I
     133: aload_0
     134: dup
     135: getfield      #1                  // Field modCount:I
     138: iconst_1
     139: iadd
     140: putfield      #1                  // Field modCount:I
     143: aload_0
     144: aload_0
     145: getfield      #6                  // Field keyType:I
     148: aload_1
     149: iload_3
     150: invokespecial #4                  // Method toReference:(ILjava/lang/Object;I)Ljava/lang/Object;
     153: astore_1
     154: aload_0
     155: aload_0
     156: getfield      #5                  // Field valueType:I
     159: aload_2
     160: iload_3
     161: invokespecial #4                  // Method toReference:(ILjava/lang/Object;I)Ljava/lang/Object;
     164: astore_2
     165: aload_0
     166: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
     169: iload         4
     171: new           #22                 // class org/apache/commons/collections/ReferenceMap$Entry
     174: dup
     175: aload_0
     176: aload_1
     177: iload_3
     178: aload_2
     179: aload_0
     180: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
     183: iload         4
     185: aaload
     186: invokespecial #68                 // Method org/apache/commons/collections/ReferenceMap$Entry."<init>":(Lorg/apache/commons/collections/ReferenceMap;Ljava/lang/Object;ILjava/lang/Object;Lorg/apache/commons/collections/ReferenceMap$Entry;)V
     189: aastore
     190: aconst_null
     191: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokespecial #60                 // Method purge:()V
      10: aload_1
      11: invokevirtual #50                 // Method java/lang/Object.hashCode:()I
      14: istore_2
      15: aload_0
      16: iload_2
      17: invokespecial #51                 // Method indexFor:(I)I
      20: istore_3
      21: aconst_null
      22: astore        4
      24: aload_0
      25: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      28: iload_3
      29: aaload
      30: astore        5
      32: aload         5
      34: ifnull        127
      37: iload_2
      38: aload         5
      40: getfield      #52                 // Field org/apache/commons/collections/ReferenceMap$Entry.hash:I
      43: if_icmpne     113
      46: aload_1
      47: aload         5
      49: invokevirtual #53                 // Method org/apache/commons/collections/ReferenceMap$Entry.getKey:()Ljava/lang/Object;
      52: invokevirtual #54                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      55: ifeq          113
      58: aload         4
      60: ifnonnull     77
      63: aload_0
      64: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
      67: iload_3
      68: aload         5
      70: getfield      #55                 // Field org/apache/commons/collections/ReferenceMap$Entry.next:Lorg/apache/commons/collections/ReferenceMap$Entry;
      73: aastore
      74: goto          87
      77: aload         4
      79: aload         5
      81: getfield      #55                 // Field org/apache/commons/collections/ReferenceMap$Entry.next:Lorg/apache/commons/collections/ReferenceMap$Entry;
      84: putfield      #55                 // Field org/apache/commons/collections/ReferenceMap$Entry.next:Lorg/apache/commons/collections/ReferenceMap$Entry;
      87: aload_0
      88: dup
      89: getfield      #59                 // Field size:I
      92: iconst_1
      93: isub
      94: putfield      #59                 // Field size:I
      97: aload_0
      98: dup
      99: getfield      #1                  // Field modCount:I
     102: iconst_1
     103: iadd
     104: putfield      #1                  // Field modCount:I
     107: aload         5
     109: invokevirtual #61                 // Method org/apache/commons/collections/ReferenceMap$Entry.getValue:()Ljava/lang/Object;
     112: areturn
     113: aload         5
     115: astore        4
     117: aload         5
     119: getfield      #55                 // Field org/apache/commons/collections/ReferenceMap$Entry.next:Lorg/apache/commons/collections/ReferenceMap$Entry;
     122: astore        5
     124: goto          32
     127: aconst_null
     128: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
       4: aconst_null
       5: invokestatic  #69                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
       8: aload_0
       9: iconst_0
      10: putfield      #59                 // Field size:I
      13: aload_0
      14: getfield      #14                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      17: invokevirtual #56                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      20: ifnull        26
      23: goto          13
      26: return

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: getfield      #70                 // Field entrySet:Ljava/util/Set;
       4: ifnull        12
       7: aload_0
       8: getfield      #70                 // Field entrySet:Ljava/util/Set;
      11: areturn
      12: aload_0
      13: new           #71                 // class org/apache/commons/collections/ReferenceMap$1
      16: dup
      17: aload_0
      18: invokespecial #72                 // Method org/apache/commons/collections/ReferenceMap$1."<init>":(Lorg/apache/commons/collections/ReferenceMap;)V
      21: putfield      #70                 // Field entrySet:Ljava/util/Set;
      24: aload_0
      25: getfield      #70                 // Field entrySet:Ljava/util/Set;
      28: areturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: getfield      #73                 // Field keySet:Ljava/util/Set;
       4: ifnull        12
       7: aload_0
       8: getfield      #73                 // Field keySet:Ljava/util/Set;
      11: areturn
      12: aload_0
      13: new           #74                 // class org/apache/commons/collections/ReferenceMap$2
      16: dup
      17: aload_0
      18: invokespecial #75                 // Method org/apache/commons/collections/ReferenceMap$2."<init>":(Lorg/apache/commons/collections/ReferenceMap;)V
      21: putfield      #73                 // Field keySet:Ljava/util/Set;
      24: aload_0
      25: getfield      #73                 // Field keySet:Ljava/util/Set;
      28: areturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: getfield      #76                 // Field values:Ljava/util/Collection;
       4: ifnull        12
       7: aload_0
       8: getfield      #76                 // Field values:Ljava/util/Collection;
      11: areturn
      12: aload_0
      13: new           #77                 // class org/apache/commons/collections/ReferenceMap$3
      16: dup
      17: aload_0
      18: invokespecial #78                 // Method org/apache/commons/collections/ReferenceMap$3."<init>":(Lorg/apache/commons/collections/ReferenceMap;)V
      21: putfield      #76                 // Field values:Ljava/util/Collection;
      24: aload_0
      25: getfield      #76                 // Field values:Ljava/util/Collection;
      28: areturn

  static org.apache.commons.collections.ReferenceMap$Entry access$000(org.apache.commons.collections.ReferenceMap, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method getEntry:(Ljava/lang/Object;)Lorg/apache/commons/collections/ReferenceMap$Entry;
       5: areturn

  static int access$300(org.apache.commons.collections.ReferenceMap);
    Code:
       0: aload_0
       1: getfield      #6                  // Field keyType:I
       4: ireturn

  static int access$400(org.apache.commons.collections.ReferenceMap);
    Code:
       0: aload_0
       1: getfield      #5                  // Field valueType:I
       4: ireturn

  static java.lang.Object access$500(org.apache.commons.collections.ReferenceMap, int, java.lang.Object, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokespecial #4                  // Method toReference:(ILjava/lang/Object;I)Ljava/lang/Object;
       7: areturn

  static boolean access$600(org.apache.commons.collections.ReferenceMap);
    Code:
       0: aload_0
       1: getfield      #3                  // Field purgeValues:Z
       4: ireturn

  static org.apache.commons.collections.ReferenceMap$Entry[] access$700(org.apache.commons.collections.ReferenceMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field table:[Lorg/apache/commons/collections/ReferenceMap$Entry;
       4: areturn

  static int access$800(org.apache.commons.collections.ReferenceMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field modCount:I
       4: ireturn
}
