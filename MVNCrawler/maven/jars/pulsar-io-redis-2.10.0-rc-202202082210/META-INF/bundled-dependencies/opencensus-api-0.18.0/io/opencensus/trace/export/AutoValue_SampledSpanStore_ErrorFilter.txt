Compiled from "AutoValue_SampledSpanStore_ErrorFilter.java"
final class io.opencensus.trace.export.AutoValue_SampledSpanStore_ErrorFilter extends io.opencensus.trace.export.SampledSpanStore$ErrorFilter {
  private final java.lang.String spanName;

  private final io.opencensus.trace.Status$CanonicalCode canonicalCode;

  private final int maxSpansToReturn;

  io.opencensus.trace.export.AutoValue_SampledSpanStore_ErrorFilter(java.lang.String, io.opencensus.trace.Status$CanonicalCode, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/opencensus/trace/export/SampledSpanStore$ErrorFilter."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #3                  // String Null spanName
      14: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field spanName:Ljava/lang/String;
      23: aload_0
      24: aload_2
      25: putfield      #6                  // Field canonicalCode:Lio/opencensus/trace/Status$CanonicalCode;
      28: aload_0
      29: iload_3
      30: putfield      #7                  // Field maxSpansToReturn:I
      33: return

  public java.lang.String getSpanName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field spanName:Ljava/lang/String;
       4: areturn

  public io.opencensus.trace.Status$CanonicalCode getCanonicalCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field canonicalCode:Lio/opencensus/trace/Status$CanonicalCode;
       4: areturn

  public int getMaxSpansToReturn();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxSpansToReturn:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #10                 // String ErrorFilter{spanName=
       9: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field spanName:Ljava/lang/String;
      16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #12                 // String , canonicalCode=
      21: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #6                  // Field canonicalCode:Lio/opencensus/trace/Status$CanonicalCode;
      28: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #14                 // String , maxSpansToReturn=
      33: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #7                  // Field maxSpansToReturn:I
      40: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #16                 // String }
      45: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #18                 // class io/opencensus/trace/export/SampledSpanStore$ErrorFilter
      11: ifeq          81
      14: aload_1
      15: checkcast     #18                 // class io/opencensus/trace/export/SampledSpanStore$ErrorFilter
      18: astore_2
      19: aload_0
      20: getfield      #5                  // Field spanName:Ljava/lang/String;
      23: aload_2
      24: invokevirtual #19                 // Method io/opencensus/trace/export/SampledSpanStore$ErrorFilter.getSpanName:()Ljava/lang/String;
      27: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          79
      33: aload_0
      34: getfield      #6                  // Field canonicalCode:Lio/opencensus/trace/Status$CanonicalCode;
      37: ifnonnull     50
      40: aload_2
      41: invokevirtual #21                 // Method io/opencensus/trace/export/SampledSpanStore$ErrorFilter.getCanonicalCode:()Lio/opencensus/trace/Status$CanonicalCode;
      44: ifnonnull     79
      47: goto          64
      50: aload_0
      51: getfield      #6                  // Field canonicalCode:Lio/opencensus/trace/Status$CanonicalCode;
      54: aload_2
      55: invokevirtual #21                 // Method io/opencensus/trace/export/SampledSpanStore$ErrorFilter.getCanonicalCode:()Lio/opencensus/trace/Status$CanonicalCode;
      58: invokevirtual #22                 // Method io/opencensus/trace/Status$CanonicalCode.equals:(Ljava/lang/Object;)Z
      61: ifeq          79
      64: aload_0
      65: getfield      #7                  // Field maxSpansToReturn:I
      68: aload_2
      69: invokevirtual #23                 // Method io/opencensus/trace/export/SampledSpanStore$ErrorFilter.getMaxSpansToReturn:()I
      72: if_icmpne     79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ireturn
      81: iconst_0
      82: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_1
       2: iload_1
       3: ldc           #24                 // int 1000003
       5: imul
       6: istore_1
       7: iload_1
       8: aload_0
       9: getfield      #5                  // Field spanName:Ljava/lang/String;
      12: invokevirtual #25                 // Method java/lang/String.hashCode:()I
      15: ixor
      16: istore_1
      17: iload_1
      18: ldc           #24                 // int 1000003
      20: imul
      21: istore_1
      22: iload_1
      23: aload_0
      24: getfield      #6                  // Field canonicalCode:Lio/opencensus/trace/Status$CanonicalCode;
      27: ifnonnull     34
      30: iconst_0
      31: goto          41
      34: aload_0
      35: getfield      #6                  // Field canonicalCode:Lio/opencensus/trace/Status$CanonicalCode;
      38: invokevirtual #26                 // Method io/opencensus/trace/Status$CanonicalCode.hashCode:()I
      41: ixor
      42: istore_1
      43: iload_1
      44: ldc           #24                 // int 1000003
      46: imul
      47: istore_1
      48: iload_1
      49: aload_0
      50: getfield      #7                  // Field maxSpansToReturn:I
      53: ixor
      54: istore_1
      55: iload_1
      56: ireturn
}
