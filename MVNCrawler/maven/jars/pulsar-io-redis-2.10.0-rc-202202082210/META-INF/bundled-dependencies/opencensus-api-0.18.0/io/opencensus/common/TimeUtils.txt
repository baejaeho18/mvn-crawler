Compiled from "TimeUtils.java"
final class io.opencensus.common.TimeUtils {
  static final long MAX_SECONDS;

  static final int MAX_NANOS;

  static final long MILLIS_PER_SECOND;

  static final long NANOS_PER_MILLI;

  static final long NANOS_PER_SECOND;

  private static final java.math.BigInteger MAX_LONG_VALUE;

  private static final java.math.BigInteger MIN_LONG_VALUE;

  private io.opencensus.common.TimeUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  static int compareLongs(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: lcmp
       3: ifge          8
       6: iconst_m1
       7: ireturn
       8: lload_0
       9: lload_2
      10: lcmp
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: iconst_1
      17: ireturn

  static long checkedAdd(long, long);
    Code:
       0: lload_0
       1: invokestatic  #3                  // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: lload_2
       5: invokestatic  #3                  // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       8: invokevirtual #4                  // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      11: astore        4
      13: aload         4
      15: getstatic     #5                  // Field MAX_LONG_VALUE:Ljava/math/BigInteger;
      18: invokevirtual #6                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      21: ifgt          35
      24: aload         4
      26: getstatic     #7                  // Field MIN_LONG_VALUE:Ljava/math/BigInteger;
      29: invokevirtual #6                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      32: ifge          71
      35: new           #8                  // class java/lang/ArithmeticException
      38: dup
      39: new           #9                  // class java/lang/StringBuilder
      42: dup
      43: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #11                 // String Long sum overflow: x=
      48: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: lload_0
      52: invokevirtual #13                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      55: ldc           #14                 // String , y=
      57: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: lload_2
      61: invokevirtual #13                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      64: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #16                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: lload_0
      72: lload_2
      73: ladd
      74: lreturn

  static {};
    Code:
       0: ldc2_w        #18                 // long 9223372036854775807l
       3: invokestatic  #3                  // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       6: putstatic     #5                  // Field MAX_LONG_VALUE:Ljava/math/BigInteger;
       9: ldc2_w        #20                 // long -9223372036854775808l
      12: invokestatic  #3                  // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      15: putstatic     #7                  // Field MIN_LONG_VALUE:Ljava/math/BigInteger;
      18: return
}
