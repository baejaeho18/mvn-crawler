Compiled from "TraceOptions.java"
public final class io.opencensus.trace.TraceOptions {
  private static final byte DEFAULT_OPTIONS;

  private static final byte IS_SAMPLED;

  public static final int SIZE;

  private static final int BASE16_SIZE;

  public static final io.opencensus.trace.TraceOptions DEFAULT;

  private final byte options;

  private io.opencensus.trace.TraceOptions(byte);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field options:B
       9: return

  public static io.opencensus.trace.TraceOptions fromBytes(byte[]);
    Code:
       0: aload_0
       1: ldc           #4                  // String buffer
       3: invokestatic  #5                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: arraylength
       9: iconst_1
      10: if_icmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ldc           #6                  // String Invalid size: expected %s, got %s
      20: iconst_2
      21: anewarray     #7                  // class java/lang/Object
      24: dup
      25: iconst_0
      26: iconst_1
      27: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_0
      34: arraylength
      35: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: invokestatic  #9                  // Method io/opencensus/internal/Utils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      42: aload_0
      43: iconst_0
      44: baload
      45: invokestatic  #10                 // Method fromByte:(B)Lio/opencensus/trace/TraceOptions;
      48: areturn

  public static io.opencensus.trace.TraceOptions fromBytes(byte[], int);
    Code:
       0: iload_1
       1: aload_0
       2: arraylength
       3: invokestatic  #11                 // Method io/opencensus/internal/Utils.checkIndex:(II)V
       6: aload_0
       7: iload_1
       8: baload
       9: invokestatic  #10                 // Method fromByte:(B)Lio/opencensus/trace/TraceOptions;
      12: areturn

  public static io.opencensus.trace.TraceOptions fromByte(byte);
    Code:
       0: new           #1                  // class io/opencensus/trace/TraceOptions
       3: dup
       4: iload_0
       5: invokespecial #12                 // Method "<init>":(B)V
       8: areturn

  public static io.opencensus.trace.TraceOptions fromLowerBase16(java.lang.CharSequence, int);
    Code:
       0: new           #1                  // class io/opencensus/trace/TraceOptions
       3: dup
       4: aload_0
       5: iload_1
       6: invokestatic  #13                 // Method io/opencensus/trace/BigendianEncoding.byteFromBase16String:(Ljava/lang/CharSequence;I)B
       9: invokespecial #12                 // Method "<init>":(B)V
      12: areturn

  public byte getByte();
    Code:
       0: aload_0
       1: getfield      #3                  // Field options:B
       4: ireturn

  public byte[] getBytes();
    Code:
       0: iconst_1
       1: newarray       byte
       3: astore_1
       4: aload_1
       5: iconst_0
       6: aload_0
       7: getfield      #3                  // Field options:B
      10: bastore
      11: aload_1
      12: areturn

  public void copyBytesTo(byte[], int);
    Code:
       0: iload_2
       1: aload_1
       2: arraylength
       3: invokestatic  #11                 // Method io/opencensus/internal/Utils.checkIndex:(II)V
       6: aload_1
       7: iload_2
       8: aload_0
       9: getfield      #3                  // Field options:B
      12: bastore
      13: return

  public void copyLowerBase16To(char[], int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field options:B
       4: aload_1
       5: iload_2
       6: invokestatic  #14                 // Method io/opencensus/trace/BigendianEncoding.byteToBase16String:(B[CI)V
       9: return

  public java.lang.String toLowerBase16();
    Code:
       0: iconst_2
       1: newarray       char
       3: astore_1
       4: aload_0
       5: aload_1
       6: iconst_0
       7: invokevirtual #15                 // Method copyLowerBase16To:([CI)V
      10: new           #16                 // class java/lang/String
      13: dup
      14: aload_1
      15: invokespecial #17                 // Method java/lang/String."<init>":([C)V
      18: areturn

  public static io.opencensus.trace.TraceOptions$Builder builder();
    Code:
       0: new           #18                 // class io/opencensus/trace/TraceOptions$Builder
       3: dup
       4: iconst_0
       5: aconst_null
       6: invokespecial #19                 // Method io/opencensus/trace/TraceOptions$Builder."<init>":(BLio/opencensus/trace/TraceOptions$1;)V
       9: areturn

  public static io.opencensus.trace.TraceOptions$Builder builder(io.opencensus.trace.TraceOptions);
    Code:
       0: new           #18                 // class io/opencensus/trace/TraceOptions$Builder
       3: dup
       4: aload_0
       5: getfield      #3                  // Field options:B
       8: aconst_null
       9: invokespecial #19                 // Method io/opencensus/trace/TraceOptions$Builder."<init>":(BLio/opencensus/trace/TraceOptions$1;)V
      12: areturn

  public boolean isSampled();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #20                 // Method hasOption:(I)Z
       5: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #1                  // class io/opencensus/trace/TraceOptions
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #1                  // class io/opencensus/trace/TraceOptions
      20: astore_2
      21: aload_0
      22: getfield      #3                  // Field options:B
      25: aload_2
      26: getfield      #3                  // Field options:B
      29: if_icmpne     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: newarray       byte
       3: dup
       4: iconst_0
       5: aload_0
       6: getfield      #3                  // Field options:B
       9: bastore
      10: invokestatic  #21                 // Method java/util/Arrays.hashCode:([B)I
      13: ireturn

  public java.lang.String toString();
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #24                 // String TraceOptions{sampled=
       9: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #26                 // Method isSampled:()Z
      16: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      19: ldc           #28                 // String }
      21: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  byte getOptions();
    Code:
       0: aload_0
       1: getfield      #3                  // Field options:B
       4: ireturn

  private boolean hasOption(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field options:B
       4: iload_1
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static {};
    Code:
       0: iconst_0
       1: invokestatic  #10                 // Method fromByte:(B)Lio/opencensus/trace/TraceOptions;
       4: putstatic     #30                 // Field DEFAULT:Lio/opencensus/trace/TraceOptions;
       7: return
}
