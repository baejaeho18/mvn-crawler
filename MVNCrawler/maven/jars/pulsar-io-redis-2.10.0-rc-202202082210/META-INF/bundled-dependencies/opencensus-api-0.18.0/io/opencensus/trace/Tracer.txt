Compiled from "Tracer.java"
public abstract class io.opencensus.trace.Tracer {
  private static final io.opencensus.trace.Tracer$NoopTracer noopTracer;

  static io.opencensus.trace.Tracer getNoopTracer();
    Code:
       0: getstatic     #1                  // Field noopTracer:Lio/opencensus/trace/Tracer$NoopTracer;
       3: areturn

  public final io.opencensus.trace.Span getCurrentSpan();
    Code:
       0: invokestatic  #2                  // Method io/opencensus/trace/CurrentSpanUtils.getCurrentSpan:()Lio/opencensus/trace/Span;
       3: astore_1
       4: aload_1
       5: ifnull        12
       8: aload_1
       9: goto          15
      12: getstatic     #3                  // Field io/opencensus/trace/BlankSpan.INSTANCE:Lio/opencensus/trace/BlankSpan;
      15: areturn

  public final io.opencensus.common.Scope withSpan(io.opencensus.trace.Span);
    Code:
       0: aload_1
       1: ldc           #4                  // String span
       3: invokestatic  #5                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #6                  // class io/opencensus/trace/Span
       9: iconst_0
      10: invokestatic  #7                  // Method io/opencensus/trace/CurrentSpanUtils.withSpan:(Lio/opencensus/trace/Span;Z)Lio/opencensus/common/Scope;
      13: areturn

  public final java.lang.Runnable withSpan(io.opencensus.trace.Span, java.lang.Runnable);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_2
       3: invokestatic  #8                  // Method io/opencensus/trace/CurrentSpanUtils.withSpan:(Lio/opencensus/trace/Span;ZLjava/lang/Runnable;)Ljava/lang/Runnable;
       6: areturn

  public final <C> java.util.concurrent.Callable<C> withSpan(io.opencensus.trace.Span, java.util.concurrent.Callable<C>);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_2
       3: invokestatic  #9                  // Method io/opencensus/trace/CurrentSpanUtils.withSpan:(Lio/opencensus/trace/Span;ZLjava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
       6: areturn

  public final io.opencensus.trace.SpanBuilder spanBuilder(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method io/opencensus/trace/CurrentSpanUtils.getCurrentSpan:()Lio/opencensus/trace/Span;
       5: invokevirtual #10                 // Method spanBuilderWithExplicitParent:(Ljava/lang/String;Lio/opencensus/trace/Span;)Lio/opencensus/trace/SpanBuilder;
       8: areturn

  public abstract io.opencensus.trace.SpanBuilder spanBuilderWithExplicitParent(java.lang.String, io.opencensus.trace.Span);

  public abstract io.opencensus.trace.SpanBuilder spanBuilderWithRemoteParent(java.lang.String, io.opencensus.trace.SpanContext);

  protected io.opencensus.trace.Tracer();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: new           #12                 // class io/opencensus/trace/Tracer$NoopTracer
       3: dup
       4: aconst_null
       5: invokespecial #13                 // Method io/opencensus/trace/Tracer$NoopTracer."<init>":(Lio/opencensus/trace/Tracer$1;)V
       8: putstatic     #1                  // Field noopTracer:Lio/opencensus/trace/Tracer$NoopTracer;
      11: return
}
