Compiled from "Span.java"
public abstract class io.opencensus.trace.Span {
  private static final java.util.Map<java.lang.String, io.opencensus.trace.AttributeValue> EMPTY_ATTRIBUTES;

  private final io.opencensus.trace.SpanContext context;

  private final java.util.Set<io.opencensus.trace.Span$Options> options;

  private static final java.util.Set<io.opencensus.trace.Span$Options> DEFAULT_OPTIONS;

  protected io.opencensus.trace.Span(io.opencensus.trace.SpanContext, java.util.EnumSet<io.opencensus.trace.Span$Options>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String context
       8: invokestatic  #3                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #4                  // class io/opencensus/trace/SpanContext
      14: putfield      #5                  // Field context:Lio/opencensus/trace/SpanContext;
      17: aload_0
      18: aload_2
      19: ifnonnull     28
      22: getstatic     #6                  // Field DEFAULT_OPTIONS:Ljava/util/Set;
      25: goto          35
      28: aload_2
      29: invokestatic  #7                  // Method java/util/EnumSet.copyOf:(Ljava/util/EnumSet;)Ljava/util/EnumSet;
      32: invokestatic  #8                  // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      35: putfield      #9                  // Field options:Ljava/util/Set;
      38: aload_1
      39: invokevirtual #10                 // Method io/opencensus/trace/SpanContext.getTraceOptions:()Lio/opencensus/trace/TraceOptions;
      42: invokevirtual #11                 // Method io/opencensus/trace/TraceOptions.isSampled:()Z
      45: ifeq          63
      48: aload_0
      49: getfield      #9                  // Field options:Ljava/util/Set;
      52: getstatic     #12                 // Field io/opencensus/trace/Span$Options.RECORD_EVENTS:Lio/opencensus/trace/Span$Options;
      55: invokeinterface #13,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ldc           #14                 // String Span is sampled, but does not have RECORD_EVENTS set.
      70: invokestatic  #15                 // Method io/opencensus/internal/Utils.checkArgument:(ZLjava/lang/Object;)V
      73: return

  public void putAttribute(java.lang.String, io.opencensus.trace.AttributeValue);
    Code:
       0: aload_1
       1: ldc           #16                 // String key
       3: invokestatic  #3                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #17                 // String value
      10: invokestatic  #3                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokestatic  #18                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      20: invokevirtual #19                 // Method putAttributes:(Ljava/util/Map;)V
      23: return

  public void putAttributes(java.util.Map<java.lang.String, io.opencensus.trace.AttributeValue>);
    Code:
       0: aload_1
       1: ldc           #20                 // String attributes
       3: invokestatic  #3                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokevirtual #21                 // Method addAttributes:(Ljava/util/Map;)V
      12: return

  public void addAttributes(java.util.Map<java.lang.String, io.opencensus.trace.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method putAttributes:(Ljava/util/Map;)V
       5: return

  public final void addAnnotation(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #22                 // String description
       3: invokestatic  #3                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: getstatic     #23                 // Field EMPTY_ATTRIBUTES:Ljava/util/Map;
      12: invokevirtual #24                 // Method addAnnotation:(Ljava/lang/String;Ljava/util/Map;)V
      15: return

  public abstract void addAnnotation(java.lang.String, java.util.Map<java.lang.String, io.opencensus.trace.AttributeValue>);

  public abstract void addAnnotation(io.opencensus.trace.Annotation);

  public void addNetworkEvent(io.opencensus.trace.NetworkEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #25                 // Method io/opencensus/trace/internal/BaseMessageEventUtils.asMessageEvent:(Lio/opencensus/trace/BaseMessageEvent;)Lio/opencensus/trace/MessageEvent;
       5: invokevirtual #26                 // Method addMessageEvent:(Lio/opencensus/trace/MessageEvent;)V
       8: return

  public void addMessageEvent(io.opencensus.trace.MessageEvent);
    Code:
       0: aload_1
       1: ldc           #27                 // String messageEvent
       3: invokestatic  #3                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokestatic  #28                 // Method io/opencensus/trace/internal/BaseMessageEventUtils.asNetworkEvent:(Lio/opencensus/trace/BaseMessageEvent;)Lio/opencensus/trace/NetworkEvent;
      12: invokevirtual #29                 // Method addNetworkEvent:(Lio/opencensus/trace/NetworkEvent;)V
      15: return

  public abstract void addLink(io.opencensus.trace.Link);

  public void setStatus(io.opencensus.trace.Status);
    Code:
       0: aload_1
       1: ldc           #30                 // String status
       3: invokestatic  #3                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: return

  public abstract void end(io.opencensus.trace.EndSpanOptions);

  public final void end();
    Code:
       0: aload_0
       1: getstatic     #31                 // Field io/opencensus/trace/EndSpanOptions.DEFAULT:Lio/opencensus/trace/EndSpanOptions;
       4: invokevirtual #32                 // Method end:(Lio/opencensus/trace/EndSpanOptions;)V
       7: return

  public final io.opencensus.trace.SpanContext getContext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field context:Lio/opencensus/trace/SpanContext;
       4: areturn

  public final java.util.Set<io.opencensus.trace.Span$Options> getOptions();
    Code:
       0: aload_0
       1: getfield      #9                  // Field options:Ljava/util/Set;
       4: areturn

  static {};
    Code:
       0: invokestatic  #33                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: putstatic     #23                 // Field EMPTY_ATTRIBUTES:Ljava/util/Map;
       6: ldc           #34                 // class io/opencensus/trace/Span$Options
       8: invokestatic  #35                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      11: invokestatic  #8                  // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      14: putstatic     #6                  // Field DEFAULT_OPTIONS:Ljava/util/Set;
      17: return
}
