Compiled from "NoopStats.java"
final class io.opencensus.stats.NoopStats$NoopViewManager extends io.opencensus.stats.ViewManager {
  private static final io.opencensus.common.Timestamp ZERO_TIMESTAMP;

  private final java.util.Map<io.opencensus.stats.View$Name, io.opencensus.stats.View> registeredViews;

  private volatile java.util.Set<io.opencensus.stats.View> exportedViews;

  private io.opencensus.stats.NoopStats$NoopViewManager();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/opencensus/stats/ViewManager."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field registeredViews:Ljava/util/Map;
      15: return

  public void registerView(io.opencensus.stats.View);
    Code:
       0: aload_1
       1: ldc           #6                  // String newView
       3: invokestatic  #7                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #5                  // Field registeredViews:Ljava/util/Map;
      11: dup
      12: astore_2
      13: monitorenter
      14: aload_0
      15: aconst_null
      16: putfield      #8                  // Field exportedViews:Ljava/util/Set;
      19: aload_0
      20: getfield      #5                  // Field registeredViews:Ljava/util/Map;
      23: aload_1
      24: invokevirtual #9                  // Method io/opencensus/stats/View.getName:()Lio/opencensus/stats/View$Name;
      27: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #11                 // class io/opencensus/stats/View
      35: astore_3
      36: aload_3
      37: ifnull        48
      40: aload_1
      41: aload_3
      42: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      45: ifeq          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ldc           #13                 // String A different view with the same name already exists.
      55: invokestatic  #14                 // Method io/opencensus/internal/Utils.checkArgument:(ZLjava/lang/Object;)V
      58: aload_3
      59: ifnonnull     77
      62: aload_0
      63: getfield      #5                  // Field registeredViews:Ljava/util/Map;
      66: aload_1
      67: invokevirtual #9                  // Method io/opencensus/stats/View.getName:()Lio/opencensus/stats/View$Name;
      70: aload_1
      71: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload_2
      78: monitorexit
      79: goto          89
      82: astore        4
      84: aload_2
      85: monitorexit
      86: aload         4
      88: athrow
      89: return
    Exception table:
       from    to  target type
          14    79    82   any
          82    86    82   any

  public io.opencensus.stats.ViewData getView(io.opencensus.stats.View$Name);
    Code:
       0: aload_1
       1: ldc           #16                 // String name
       3: invokestatic  #7                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #5                  // Field registeredViews:Ljava/util/Map;
      11: dup
      12: astore_2
      13: monitorenter
      14: aload_0
      15: getfield      #5                  // Field registeredViews:Ljava/util/Map;
      18: aload_1
      19: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #11                 // class io/opencensus/stats/View
      27: astore_3
      28: aload_3
      29: ifnonnull     36
      32: aconst_null
      33: aload_2
      34: monitorexit
      35: areturn
      36: aload_3
      37: invokestatic  #17                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      40: aload_3
      41: invokevirtual #18                 // Method io/opencensus/stats/View.getWindow:()Lio/opencensus/stats/View$AggregationWindow;
      44: getstatic     #19                 // Field ZERO_TIMESTAMP:Lio/opencensus/common/Timestamp;
      47: getstatic     #19                 // Field ZERO_TIMESTAMP:Lio/opencensus/common/Timestamp;
      50: invokestatic  #20                 // Method io/opencensus/stats/ViewData$AggregationWindowData$CumulativeData.create:(Lio/opencensus/common/Timestamp;Lio/opencensus/common/Timestamp;)Lio/opencensus/stats/ViewData$AggregationWindowData$CumulativeData;
      53: invokestatic  #21                 // Method io/opencensus/common/Functions.returnConstant:(Ljava/lang/Object;)Lio/opencensus/common/Function;
      56: getstatic     #19                 // Field ZERO_TIMESTAMP:Lio/opencensus/common/Timestamp;
      59: invokestatic  #22                 // Method io/opencensus/stats/ViewData$AggregationWindowData$IntervalData.create:(Lio/opencensus/common/Timestamp;)Lio/opencensus/stats/ViewData$AggregationWindowData$IntervalData;
      62: invokestatic  #21                 // Method io/opencensus/common/Functions.returnConstant:(Ljava/lang/Object;)Lio/opencensus/common/Function;
      65: invokestatic  #23                 // Method io/opencensus/common/Functions.throwAssertionError:()Lio/opencensus/common/Function;
      68: invokevirtual #24                 // Method io/opencensus/stats/View$AggregationWindow.match:(Lio/opencensus/common/Function;Lio/opencensus/common/Function;Lio/opencensus/common/Function;)Ljava/lang/Object;
      71: checkcast     #25                 // class io/opencensus/stats/ViewData$AggregationWindowData
      74: invokestatic  #26                 // Method io/opencensus/stats/ViewData.create:(Lio/opencensus/stats/View;Ljava/util/Map;Lio/opencensus/stats/ViewData$AggregationWindowData;)Lio/opencensus/stats/ViewData;
      77: aload_2
      78: monitorexit
      79: areturn
      80: astore        4
      82: aload_2
      83: monitorexit
      84: aload         4
      86: athrow
    Exception table:
       from    to  target type
          14    35    80   any
          36    79    80   any
          80    84    80   any

  public java.util.Set<io.opencensus.stats.View> getAllExportedViews();
    Code:
       0: aload_0
       1: getfield      #8                  // Field exportedViews:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnonnull     44
       9: aload_0
      10: getfield      #5                  // Field registeredViews:Ljava/util/Map;
      13: dup
      14: astore_2
      15: monitorenter
      16: aload_0
      17: aload_0
      18: getfield      #5                  // Field registeredViews:Ljava/util/Map;
      21: invokeinterface #27,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      26: invokestatic  #28                 // Method filterExportedViews:(Ljava/util/Collection;)Ljava/util/Set;
      29: dup
      30: astore_1
      31: putfield      #8                  // Field exportedViews:Ljava/util/Set;
      34: aload_2
      35: monitorexit
      36: goto          44
      39: astore_3
      40: aload_2
      41: monitorexit
      42: aload_3
      43: athrow
      44: aload_1
      45: areturn
    Exception table:
       from    to  target type
          16    36    39   any
          39    42    39   any

  private static java.util.Set<io.opencensus.stats.View> filterExportedViews(java.util.Collection<io.opencensus.stats.View>);
    Code:
       0: new           #29                 // class java/util/HashSet
       3: dup
       4: invokespecial #30                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          58
      24: aload_2
      25: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #11                 // class io/opencensus/stats/View
      33: astore_3
      34: aload_3
      35: invokevirtual #18                 // Method io/opencensus/stats/View.getWindow:()Lio/opencensus/stats/View$AggregationWindow;
      38: instanceof    #34                 // class io/opencensus/stats/View$AggregationWindow$Interval
      41: ifeq          47
      44: goto          15
      47: aload_1
      48: aload_3
      49: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      54: pop
      55: goto          15
      58: aload_1
      59: invokestatic  #36                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      62: areturn

  io.opencensus.stats.NoopStats$NoopViewManager(io.opencensus.stats.NoopStats$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return

  static {};
    Code:
       0: lconst_0
       1: iconst_0
       2: invokestatic  #37                 // Method io/opencensus/common/Timestamp.create:(JI)Lio/opencensus/common/Timestamp;
       5: putstatic     #19                 // Field ZERO_TIMESTAMP:Lio/opencensus/common/Timestamp;
       8: return
}
