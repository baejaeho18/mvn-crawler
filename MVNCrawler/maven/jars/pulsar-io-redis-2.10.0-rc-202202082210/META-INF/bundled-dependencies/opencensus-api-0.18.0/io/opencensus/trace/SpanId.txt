Compiled from "SpanId.java"
public final class io.opencensus.trace.SpanId implements java.lang.Comparable<io.opencensus.trace.SpanId> {
  public static final int SIZE;

  public static final io.opencensus.trace.SpanId INVALID;

  private static final int BASE16_SIZE;

  private static final long INVALID_ID;

  private final long id;

  private io.opencensus.trace.SpanId(long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #3                  // Field id:J
       9: return

  public static io.opencensus.trace.SpanId fromBytes(byte[]);
    Code:
       0: aload_0
       1: ldc           #4                  // String src
       3: invokestatic  #5                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: arraylength
       9: bipush        8
      11: if_icmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #6                  // String Invalid size: expected %s, got %s
      21: iconst_2
      22: anewarray     #7                  // class java/lang/Object
      25: dup
      26: iconst_0
      27: bipush        8
      29: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: arraylength
      37: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: aastore
      41: invokestatic  #9                  // Method io/opencensus/internal/Utils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      44: aload_0
      45: iconst_0
      46: invokestatic  #10                 // Method fromBytes:([BI)Lio/opencensus/trace/SpanId;
      49: areturn

  public static io.opencensus.trace.SpanId fromBytes(byte[], int);
    Code:
       0: aload_0
       1: ldc           #4                  // String src
       3: invokestatic  #5                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: new           #1                  // class io/opencensus/trace/SpanId
      10: dup
      11: aload_0
      12: iload_1
      13: invokestatic  #11                 // Method io/opencensus/trace/BigendianEncoding.longFromByteArray:([BI)J
      16: invokespecial #12                 // Method "<init>":(J)V
      19: areturn

  public static io.opencensus.trace.SpanId fromLowerBase16(java.lang.CharSequence);
    Code:
       0: aload_0
       1: ldc           #4                  // String src
       3: invokestatic  #5                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      13: bipush        16
      15: if_icmpne     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ldc           #6                  // String Invalid size: expected %s, got %s
      25: iconst_2
      26: anewarray     #7                  // class java/lang/Object
      29: dup
      30: iconst_0
      31: bipush        16
      33: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aastore
      37: dup
      38: iconst_1
      39: aload_0
      40: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      45: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: aastore
      49: invokestatic  #9                  // Method io/opencensus/internal/Utils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      52: aload_0
      53: iconst_0
      54: invokestatic  #14                 // Method fromLowerBase16:(Ljava/lang/CharSequence;I)Lio/opencensus/trace/SpanId;
      57: areturn

  public static io.opencensus.trace.SpanId fromLowerBase16(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: ldc           #4                  // String src
       3: invokestatic  #5                  // Method io/opencensus/internal/Utils.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: new           #1                  // class io/opencensus/trace/SpanId
      10: dup
      11: aload_0
      12: iload_1
      13: invokestatic  #15                 // Method io/opencensus/trace/BigendianEncoding.longFromBase16String:(Ljava/lang/CharSequence;I)J
      16: invokespecial #12                 // Method "<init>":(J)V
      19: areturn

  public static io.opencensus.trace.SpanId generateRandomId(java.util.Random);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method java/util/Random.nextLong:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifeq          0
      11: new           #1                  // class io/opencensus/trace/SpanId
      14: dup
      15: lload_1
      16: invokespecial #12                 // Method "<init>":(J)V
      19: areturn

  public byte[] getBytes();
    Code:
       0: bipush        8
       2: newarray       byte
       4: astore_1
       5: aload_0
       6: getfield      #3                  // Field id:J
       9: aload_1
      10: iconst_0
      11: invokestatic  #17                 // Method io/opencensus/trace/BigendianEncoding.longToByteArray:(J[BI)V
      14: aload_1
      15: areturn

  public void copyBytesTo(byte[], int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field id:J
       4: aload_1
       5: iload_2
       6: invokestatic  #17                 // Method io/opencensus/trace/BigendianEncoding.longToByteArray:(J[BI)V
       9: return

  public void copyLowerBase16To(char[], int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field id:J
       4: aload_1
       5: iload_2
       6: invokestatic  #18                 // Method io/opencensus/trace/BigendianEncoding.longToBase16String:(J[CI)V
       9: return

  public boolean isValid();
    Code:
       0: aload_0
       1: getfield      #3                  // Field id:J
       4: lconst_0
       5: lcmp
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public java.lang.String toLowerBase16();
    Code:
       0: bipush        16
       2: newarray       char
       4: astore_1
       5: aload_0
       6: aload_1
       7: iconst_0
       8: invokevirtual #19                 // Method copyLowerBase16To:([CI)V
      11: new           #20                 // class java/lang/String
      14: dup
      15: aload_1
      16: invokespecial #21                 // Method java/lang/String."<init>":([C)V
      19: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #1                  // class io/opencensus/trace/SpanId
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #1                  // class io/opencensus/trace/SpanId
      20: astore_2
      21: aload_0
      22: getfield      #3                  // Field id:J
      25: aload_2
      26: getfield      #3                  // Field id:J
      29: lcmp
      30: ifne          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field id:J
       4: aload_0
       5: getfield      #3                  // Field id:J
       8: bipush        32
      10: lushr
      11: lxor
      12: l2i
      13: ireturn

  public java.lang.String toString();
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #24                 // String SpanId{spanId=
       9: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #26                 // Method toLowerBase16:()Ljava/lang/String;
      16: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #27                 // String }
      21: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public int compareTo(io.opencensus.trace.SpanId);
    Code:
       0: aload_0
       1: getfield      #3                  // Field id:J
       4: aload_1
       5: getfield      #3                  // Field id:J
       8: lcmp
       9: ifge          16
      12: iconst_m1
      13: goto          33
      16: aload_0
      17: getfield      #3                  // Field id:J
      20: aload_1
      21: getfield      #3                  // Field id:J
      24: lcmp
      25: ifne          32
      28: iconst_0
      29: goto          33
      32: iconst_1
      33: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class io/opencensus/trace/SpanId
       5: invokevirtual #29                 // Method compareTo:(Lio/opencensus/trace/SpanId;)I
       8: ireturn

  static {};
    Code:
       0: new           #1                  // class io/opencensus/trace/SpanId
       3: dup
       4: lconst_0
       5: invokespecial #12                 // Method "<init>":(J)V
       8: putstatic     #30                 // Field INVALID:Lio/opencensus/trace/SpanId;
      11: return
}
