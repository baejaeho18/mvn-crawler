Compiled from "Timestamp.java"
public abstract class io.opencensus.common.Timestamp implements java.lang.Comparable<io.opencensus.common.Timestamp> {
  io.opencensus.common.Timestamp();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static io.opencensus.common.Timestamp create(long, int);
    Code:
       0: lload_0
       1: ldc2_w        #3                  // long -315576000000l
       4: lcmp
       5: ifge          35
       8: new           #5                  // class java/lang/IllegalArgumentException
      11: dup
      12: new           #6                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #8                  // String \'seconds\' is less than minimum (-315576000000):
      21: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: lload_0
      25: invokevirtual #10                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      28: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: lload_0
      36: ldc2_w        #13                 // long 315576000000l
      39: lcmp
      40: ifle          70
      43: new           #5                  // class java/lang/IllegalArgumentException
      46: dup
      47: new           #6                  // class java/lang/StringBuilder
      50: dup
      51: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #15                 // String \'seconds\' is greater than maximum (315576000000):
      56: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: lload_0
      60: invokevirtual #10                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      63: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: iload_2
      71: ifge          101
      74: new           #5                  // class java/lang/IllegalArgumentException
      77: dup
      78: new           #6                  // class java/lang/StringBuilder
      81: dup
      82: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #16                 // String \'nanos\' is less than zero:
      87: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: iload_2
      91: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: iload_2
     102: ldc           #18                 // int 999999999
     104: if_icmple     134
     107: new           #5                  // class java/lang/IllegalArgumentException
     110: dup
     111: new           #6                  // class java/lang/StringBuilder
     114: dup
     115: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #19                 // String \'nanos\' is greater than maximum (999999999):
     120: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: iload_2
     124: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     127: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: new           #20                 // class io/opencensus/common/AutoValue_Timestamp
     137: dup
     138: lload_0
     139: iload_2
     140: invokespecial #21                 // Method io/opencensus/common/AutoValue_Timestamp."<init>":(JI)V
     143: areturn

  public static io.opencensus.common.Timestamp fromMillis(long);
    Code:
       0: lload_0
       1: ldc2_w        #22                 // long 1000l
       4: invokestatic  #24                 // Method floorDiv:(JJ)J
       7: lstore_2
       8: lload_0
       9: ldc2_w        #22                 // long 1000l
      12: invokestatic  #25                 // Method floorMod:(JJ)J
      15: l2i
      16: istore        4
      18: lload_2
      19: iload         4
      21: i2l
      22: ldc2_w        #26                 // long 1000000l
      25: lmul
      26: l2i
      27: invokestatic  #28                 // Method create:(JI)Lio/opencensus/common/Timestamp;
      30: areturn

  public abstract long getSeconds();

  public abstract int getNanos();

  public io.opencensus.common.Timestamp addNanos(long);
    Code:
       0: aload_0
       1: lconst_0
       2: lload_1
       3: invokespecial #29                 // Method plus:(JJ)Lio/opencensus/common/Timestamp;
       6: areturn

  public io.opencensus.common.Timestamp addDuration(io.opencensus.common.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method io/opencensus/common/Duration.getSeconds:()J
       5: aload_1
       6: invokevirtual #31                 // Method io/opencensus/common/Duration.getNanos:()I
       9: i2l
      10: invokespecial #29                 // Method plus:(JJ)Lio/opencensus/common/Timestamp;
      13: areturn

  public io.opencensus.common.Duration subtractTimestamp(io.opencensus.common.Timestamp);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getSeconds:()J
       4: aload_1
       5: invokevirtual #32                 // Method getSeconds:()J
       8: lsub
       9: lstore_2
      10: aload_0
      11: invokevirtual #33                 // Method getNanos:()I
      14: aload_1
      15: invokevirtual #33                 // Method getNanos:()I
      18: isub
      19: istore        4
      21: lload_2
      22: lconst_0
      23: lcmp
      24: ifge          49
      27: iload         4
      29: ifle          49
      32: lload_2
      33: lconst_1
      34: ladd
      35: lstore_2
      36: iload         4
      38: i2l
      39: ldc2_w        #34                 // long 1000000000l
      42: lsub
      43: l2i
      44: istore        4
      46: goto          74
      49: lload_2
      50: lconst_0
      51: lcmp
      52: ifle          74
      55: iload         4
      57: ifge          74
      60: lload_2
      61: lconst_1
      62: lsub
      63: lstore_2
      64: iload         4
      66: i2l
      67: ldc2_w        #34                 // long 1000000000l
      70: ladd
      71: l2i
      72: istore        4
      74: lload_2
      75: iload         4
      77: invokestatic  #36                 // Method io/opencensus/common/Duration.create:(JI)Lio/opencensus/common/Duration;
      80: areturn

  public int compareTo(io.opencensus.common.Timestamp);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getSeconds:()J
       4: aload_1
       5: invokevirtual #32                 // Method getSeconds:()J
       8: invokestatic  #37                 // Method io/opencensus/common/TimeUtils.compareLongs:(JJ)I
      11: istore_2
      12: iload_2
      13: ifeq          18
      16: iload_2
      17: ireturn
      18: aload_0
      19: invokevirtual #33                 // Method getNanos:()I
      22: i2l
      23: aload_1
      24: invokevirtual #33                 // Method getNanos:()I
      27: i2l
      28: invokestatic  #37                 // Method io/opencensus/common/TimeUtils.compareLongs:(JJ)I
      31: ireturn

  private io.opencensus.common.Timestamp plus(long, long);
    Code:
       0: lload_1
       1: lload_3
       2: lor
       3: lconst_0
       4: lcmp
       5: ifne          10
       8: aload_0
       9: areturn
      10: aload_0
      11: invokevirtual #32                 // Method getSeconds:()J
      14: lload_1
      15: invokestatic  #38                 // Method io/opencensus/common/TimeUtils.checkedAdd:(JJ)J
      18: lstore        5
      20: lload         5
      22: lload_3
      23: ldc2_w        #34                 // long 1000000000l
      26: ldiv
      27: invokestatic  #38                 // Method io/opencensus/common/TimeUtils.checkedAdd:(JJ)J
      30: lstore        5
      32: lload_3
      33: ldc2_w        #34                 // long 1000000000l
      36: lrem
      37: lstore_3
      38: aload_0
      39: invokevirtual #33                 // Method getNanos:()I
      42: i2l
      43: lload_3
      44: ladd
      45: lstore        7
      47: lload         5
      49: lload         7
      51: invokestatic  #39                 // Method ofEpochSecond:(JJ)Lio/opencensus/common/Timestamp;
      54: areturn

  private static io.opencensus.common.Timestamp ofEpochSecond(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: ldc2_w        #34                 // long 1000000000l
       5: invokestatic  #24                 // Method floorDiv:(JJ)J
       8: invokestatic  #38                 // Method io/opencensus/common/TimeUtils.checkedAdd:(JJ)J
      11: lstore        4
      13: lload_2
      14: ldc2_w        #34                 // long 1000000000l
      17: invokestatic  #25                 // Method floorMod:(JJ)J
      20: l2i
      21: istore        6
      23: lload         4
      25: iload         6
      27: invokestatic  #28                 // Method create:(JI)Lio/opencensus/common/Timestamp;
      30: areturn

  private static long floorDiv(long, long);
    Code:
       0: lload_0
       1: invokestatic  #40                 // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
       4: lload_2
       5: invokestatic  #40                 // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
       8: iconst_0
       9: getstatic     #41                 // Field java/math/RoundingMode.FLOOR:Ljava/math/RoundingMode;
      12: invokevirtual #42                 // Method java/math/BigDecimal.divide:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
      15: invokevirtual #43                 // Method java/math/BigDecimal.longValue:()J
      18: lreturn

  private static long floorMod(long, long);
    Code:
       0: lload_0
       1: lload_0
       2: lload_2
       3: invokestatic  #24                 // Method floorDiv:(JJ)J
       6: lload_2
       7: lmul
       8: lsub
       9: lreturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #44                 // class io/opencensus/common/Timestamp
       5: invokevirtual #45                 // Method compareTo:(Lio/opencensus/common/Timestamp;)I
       8: ireturn
}
