Compiled from "AutoValue_EndSpanOptions.java"
final class io.opencensus.trace.AutoValue_EndSpanOptions$Builder extends io.opencensus.trace.EndSpanOptions$Builder {
  private java.lang.Boolean sampleToLocalSpanStore;

  private io.opencensus.trace.Status status;

  io.opencensus.trace.AutoValue_EndSpanOptions$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/opencensus/trace/EndSpanOptions$Builder."<init>":()V
       4: return

  public io.opencensus.trace.EndSpanOptions$Builder setSampleToLocalSpanStore(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #2                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #3                  // Field sampleToLocalSpanStore:Ljava/lang/Boolean;
       8: aload_0
       9: areturn

  public io.opencensus.trace.EndSpanOptions$Builder setStatus(io.opencensus.trace.Status);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field status:Lio/opencensus/trace/Status;
       5: aload_0
       6: areturn

  public io.opencensus.trace.EndSpanOptions build();
    Code:
       0: ldc           #5                  // String
       2: astore_1
       3: aload_0
       4: getfield      #3                  // Field sampleToLocalSpanStore:Ljava/lang/Boolean;
       7: ifnonnull     30
      10: new           #6                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      17: aload_1
      18: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #9                  // String  sampleToLocalSpanStore
      23: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: astore_1
      30: aload_1
      31: invokevirtual #11                 // Method java/lang/String.isEmpty:()Z
      34: ifne          64
      37: new           #12                 // class java/lang/IllegalStateException
      40: dup
      41: new           #6                  // class java/lang/StringBuilder
      44: dup
      45: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #13                 // String Missing required properties:
      50: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: new           #15                 // class io/opencensus/trace/AutoValue_EndSpanOptions
      67: dup
      68: aload_0
      69: getfield      #3                  // Field sampleToLocalSpanStore:Ljava/lang/Boolean;
      72: invokevirtual #16                 // Method java/lang/Boolean.booleanValue:()Z
      75: aload_0
      76: getfield      #4                  // Field status:Lio/opencensus/trace/Status;
      79: aconst_null
      80: invokespecial #17                 // Method io/opencensus/trace/AutoValue_EndSpanOptions."<init>":(ZLio/opencensus/trace/Status;Lio/opencensus/trace/AutoValue_EndSpanOptions$1;)V
      83: areturn
}
