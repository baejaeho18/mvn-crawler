Compiled from "Platform.java"
final class com.google.common.collect.Platform {
  private static final java.util.logging.Logger logger;

  static <K, V> java.util.Map<K, V> newHashMapWithExpectedSize(int);
    Code:
       0: iload_0
       1: invokestatic  #1                  // Method com/google/common/collect/Maps.newHashMapWithExpectedSize:(I)Ljava/util/HashMap;
       4: areturn

  static <K, V> java.util.Map<K, V> newLinkedHashMapWithExpectedSize(int);
    Code:
       0: iload_0
       1: invokestatic  #2                  // Method com/google/common/collect/Maps.newLinkedHashMapWithExpectedSize:(I)Ljava/util/LinkedHashMap;
       4: areturn

  static <E> java.util.Set<E> newHashSetWithExpectedSize(int);
    Code:
       0: iload_0
       1: invokestatic  #3                  // Method com/google/common/collect/Sets.newHashSetWithExpectedSize:(I)Ljava/util/HashSet;
       4: areturn

  static <E> java.util.Set<E> newConcurrentHashSet();
    Code:
       0: invokestatic  #4                  // Method java/util/concurrent/ConcurrentHashMap.newKeySet:()Ljava/util/concurrent/ConcurrentHashMap$KeySetView;
       3: areturn

  static <E> java.util.Set<E> newLinkedHashSetWithExpectedSize(int);
    Code:
       0: iload_0
       1: invokestatic  #5                  // Method com/google/common/collect/Sets.newLinkedHashSetWithExpectedSize:(I)Ljava/util/LinkedHashSet;
       4: areturn

  static <K, V> java.util.Map<K, V> preservesInsertionOrderOnPutsMap();
    Code:
       0: invokestatic  #6                  // Method com/google/common/collect/Maps.newLinkedHashMap:()Ljava/util/LinkedHashMap;
       3: areturn

  static <E> java.util.Set<E> preservesInsertionOrderOnAddsSet();
    Code:
       0: invokestatic  #7                  // Method com/google/common/collect/Sets.newLinkedHashSet:()Ljava/util/LinkedHashSet;
       3: areturn

  static <T> T[] newArray(T[], int);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #9                  // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
       7: astore_2
       8: aload_2
       9: iload_1
      10: invokestatic  #10                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      13: checkcast     #11                 // class "[Ljava/lang/Object;"
      16: astore_3
      17: aload_3
      18: areturn

  static <T> T[] copy(java.lang.Object[], int, int, T[]);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokestatic  #12                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;
      10: areturn

  static com.google.common.collect.MapMaker tryWeakKeys(com.google.common.collect.MapMaker);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method com/google/common/collect/MapMaker.weakKeys:()Lcom/google/common/collect/MapMaker;
       4: areturn

  static int reduceIterationsIfGwt(int);
    Code:
       0: iload_0
       1: ireturn

  static int reduceExponentIfGwt(int);
    Code:
       0: iload_0
       1: ireturn

  static void checkGwtRpcEnabled();
    Code:
       0: ldc           #14                 // String guava.gwt.emergency_reenable_rpc
       2: astore_0
       3: aload_0
       4: ldc           #15                 // String false
       6: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       9: invokestatic  #17                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      12: ifne          46
      15: new           #18                 // class java/lang/UnsupportedOperationException
      18: dup
      19: ldc           #19                 // String We are removing GWT-RPC support for Guava types. You can temporarily reenable support by setting the system property %s to true. For more about system properties, see %s. For more about Guava\'s GWT-RPC support, see %s.
      21: iconst_3
      22: anewarray     #20                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: aload_0
      28: aastore
      29: dup
      30: iconst_1
      31: ldc           #21                 // String https://stackoverflow.com/q/5189914/28465
      33: aastore
      34: dup
      35: iconst_2
      36: ldc           #22                 // String https://groups.google.com/d/msg/guava-announce/zHZTFg7YF3o/rQNnwdHeEwAJ
      38: aastore
      39: invokestatic  #23                 // Method com/google/common/base/Strings.lenientFormat:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      42: invokespecial #24                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: getstatic     #25                 // Field logger:Ljava/util/logging/Logger;
      49: getstatic     #26                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      52: ldc           #27                 // String Later in 2020, we will remove GWT-RPC support for Guava types. You are seeing this warning because you are sending a Guava type over GWT-RPC, which will break. You can identify which type by looking at the class name in the attached stack trace.
      54: new           #28                 // class java/lang/Throwable
      57: dup
      58: invokespecial #29                 // Method java/lang/Throwable."<init>":()V
      61: invokevirtual #30                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      64: return

  private com.google.common.collect.Platform();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #32                 // class com/google/common/collect/Platform
       2: invokevirtual #33                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #34                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #25                 // Field logger:Ljava/util/logging/Logger;
      11: return
}
