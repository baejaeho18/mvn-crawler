Compiled from "Files.java"
public final class com.google.common.io.Files {
  private static final int TEMP_DIR_ATTEMPTS;

  private static final com.google.common.graph.SuccessorsFunction<java.io.File> FILE_TREE;

  private com.google.common.io.Files();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.io.BufferedReader newReader(java.io.File, java.nio.charset.Charset) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #3                  // class java/io/BufferedReader
      13: dup
      14: new           #4                  // class java/io/InputStreamReader
      17: dup
      18: new           #5                  // class java/io/FileInputStream
      21: dup
      22: aload_0
      23: invokespecial #6                  // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      26: aload_1
      27: invokespecial #7                  // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      30: invokespecial #8                  // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      33: areturn

  public static java.io.BufferedWriter newWriter(java.io.File, java.nio.charset.Charset) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #9                  // class java/io/BufferedWriter
      13: dup
      14: new           #10                 // class java/io/OutputStreamWriter
      17: dup
      18: new           #11                 // class java/io/FileOutputStream
      21: dup
      22: aload_0
      23: invokespecial #12                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      26: aload_1
      27: invokespecial #13                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      30: invokespecial #14                 // Method java/io/BufferedWriter."<init>":(Ljava/io/Writer;)V
      33: areturn

  public static com.google.common.io.ByteSource asByteSource(java.io.File);
    Code:
       0: new           #15                 // class com/google/common/io/Files$FileByteSource
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #16                 // Method com/google/common/io/Files$FileByteSource."<init>":(Ljava/io/File;Lcom/google/common/io/Files$1;)V
       9: areturn

  public static com.google.common.io.ByteSink asByteSink(java.io.File, com.google.common.io.FileWriteMode...);
    Code:
       0: new           #17                 // class com/google/common/io/Files$FileByteSink
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #18                 // Method com/google/common/io/Files$FileByteSink."<init>":(Ljava/io/File;[Lcom/google/common/io/FileWriteMode;Lcom/google/common/io/Files$1;)V
      10: areturn

  public static com.google.common.io.CharSource asCharSource(java.io.File, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
       4: aload_1
       5: invokevirtual #20                 // Method com/google/common/io/ByteSource.asCharSource:(Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       8: areturn

  public static com.google.common.io.CharSink asCharSink(java.io.File, java.nio.charset.Charset, com.google.common.io.FileWriteMode...);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #21                 // Method asByteSink:(Ljava/io/File;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/ByteSink;
       5: aload_1
       6: invokevirtual #22                 // Method com/google/common/io/ByteSink.asCharSink:(Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSink;
       9: areturn

  public static byte[] toByteArray(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
       4: invokevirtual #23                 // Method com/google/common/io/ByteSource.read:()[B
       7: areturn

  public static java.lang.String toString(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method asCharSource:(Ljava/io/File;Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       5: invokevirtual #25                 // Method com/google/common/io/CharSource.read:()Ljava/lang/String;
       8: areturn

  public static void write(byte[], java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_0
       2: anewarray     #26                 // class com/google/common/io/FileWriteMode
       5: invokestatic  #21                 // Method asByteSink:(Ljava/io/File;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/ByteSink;
       8: aload_0
       9: invokevirtual #27                 // Method com/google/common/io/ByteSink.write:([B)V
      12: return

  public static void write(java.lang.CharSequence, java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: iconst_0
       3: anewarray     #26                 // class com/google/common/io/FileWriteMode
       6: invokestatic  #28                 // Method asCharSink:(Ljava/io/File;Ljava/nio/charset/Charset;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/CharSink;
       9: aload_0
      10: invokevirtual #29                 // Method com/google/common/io/CharSink.write:(Ljava/lang/CharSequence;)V
      13: return

  public static void copy(java.io.File, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
       4: aload_1
       5: invokevirtual #30                 // Method com/google/common/io/ByteSource.copyTo:(Ljava/io/OutputStream;)J
       8: pop2
       9: return

  public static void copy(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #31                 // Method java/io/File.equals:(Ljava/lang/Object;)Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #32                 // String Source %s and destination %s must be different
      15: aload_0
      16: aload_1
      17: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: aload_0
      21: invokestatic  #19                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
      24: aload_1
      25: iconst_0
      26: anewarray     #26                 // class com/google/common/io/FileWriteMode
      29: invokestatic  #21                 // Method asByteSink:(Ljava/io/File;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/ByteSink;
      32: invokevirtual #34                 // Method com/google/common/io/ByteSource.copyTo:(Lcom/google/common/io/ByteSink;)J
      35: pop2
      36: return

  public static void copy(java.io.File, java.nio.charset.Charset, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method asCharSource:(Ljava/io/File;Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       5: aload_2
       6: invokevirtual #35                 // Method com/google/common/io/CharSource.copyTo:(Ljava/lang/Appendable;)J
       9: pop2
      10: return

  public static void append(java.lang.CharSequence, java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: iconst_1
       3: anewarray     #26                 // class com/google/common/io/FileWriteMode
       6: dup
       7: iconst_0
       8: getstatic     #36                 // Field com/google/common/io/FileWriteMode.APPEND:Lcom/google/common/io/FileWriteMode;
      11: aastore
      12: invokestatic  #28                 // Method asCharSink:(Ljava/io/File;Ljava/nio/charset/Charset;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/CharSink;
      15: aload_0
      16: invokevirtual #29                 // Method com/google/common/io/CharSink.write:(Ljava/lang/CharSequence;)V
      19: return

  public static boolean equal(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: if_acmpeq     23
      15: aload_0
      16: aload_1
      17: invokevirtual #31                 // Method java/io/File.equals:(Ljava/lang/Object;)Z
      20: ifeq          25
      23: iconst_1
      24: ireturn
      25: aload_0
      26: invokevirtual #37                 // Method java/io/File.length:()J
      29: lstore_2
      30: aload_1
      31: invokevirtual #37                 // Method java/io/File.length:()J
      34: lstore        4
      36: lload_2
      37: lconst_0
      38: lcmp
      39: ifeq          58
      42: lload         4
      44: lconst_0
      45: lcmp
      46: ifeq          58
      49: lload_2
      50: lload         4
      52: lcmp
      53: ifeq          58
      56: iconst_0
      57: ireturn
      58: aload_0
      59: invokestatic  #19                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
      62: aload_1
      63: invokestatic  #19                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
      66: invokevirtual #38                 // Method com/google/common/io/ByteSource.contentEquals:(Lcom/google/common/io/ByteSource;)Z
      69: ireturn

  public static java.io.File createTempDir();
    Code:
       0: new           #39                 // class java/io/File
       3: dup
       4: ldc           #40                 // String java.io.tmpdir
       6: invokestatic  #41                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       9: invokespecial #42                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      12: astore_0
      13: invokestatic  #43                 // Method java/lang/System.currentTimeMillis:()J
      16: lstore_2
      17: bipush        21
      19: new           #44                 // class java/lang/StringBuilder
      22: dup_x1
      23: swap
      24: invokespecial #45                 // Method java/lang/StringBuilder."<init>":(I)V
      27: lload_2
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #47                 // String -
      33: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: astore_1
      40: iconst_0
      41: istore_2
      42: iload_2
      43: sipush        10000
      46: if_icmpge     106
      49: new           #39                 // class java/io/File
      52: dup
      53: aload_0
      54: iload_2
      55: istore        4
      57: bipush        11
      59: aload_1
      60: invokestatic  #51                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      63: invokevirtual #52                 // Method java/lang/String.length:()I
      66: iadd
      67: new           #44                 // class java/lang/StringBuilder
      70: dup_x1
      71: swap
      72: invokespecial #45                 // Method java/lang/StringBuilder."<init>":(I)V
      75: aload_1
      76: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: iload         4
      81: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      84: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokespecial #54                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      90: astore_3
      91: aload_3
      92: invokevirtual #55                 // Method java/io/File.mkdir:()Z
      95: ifeq          100
      98: aload_3
      99: areturn
     100: iinc          2, 1
     103: goto          42
     106: new           #56                 // class java/lang/IllegalStateException
     109: dup
     110: bipush        66
     112: aload_1
     113: invokestatic  #51                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     116: invokevirtual #52                 // Method java/lang/String.length:()I
     119: iadd
     120: aload_1
     121: invokestatic  #51                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     124: invokevirtual #52                 // Method java/lang/String.length:()I
     127: iadd
     128: new           #44                 // class java/lang/StringBuilder
     131: dup_x1
     132: swap
     133: invokespecial #45                 // Method java/lang/StringBuilder."<init>":(I)V
     136: ldc           #57                 // String Failed to create directory within 10000 attempts (tried
     138: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload_1
     142: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: ldc           #58                 // String 0 to
     147: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: aload_1
     151: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: sipush        9999
     157: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     160: bipush        41
     162: invokevirtual #59                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     165: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: invokespecial #60                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     171: athrow

  public static void touch(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #61                 // Method java/io/File.createNewFile:()Z
       9: ifne          65
      12: aload_0
      13: invokestatic  #43                 // Method java/lang/System.currentTimeMillis:()J
      16: invokevirtual #62                 // Method java/io/File.setLastModified:(J)Z
      19: ifne          65
      22: new           #63                 // class java/io/IOException
      25: dup
      26: aload_0
      27: invokestatic  #51                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      30: astore_1
      31: bipush        38
      33: aload_1
      34: invokestatic  #51                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      37: invokevirtual #52                 // Method java/lang/String.length:()I
      40: iadd
      41: new           #44                 // class java/lang/StringBuilder
      44: dup_x1
      45: swap
      46: invokespecial #45                 // Method java/lang/StringBuilder."<init>":(I)V
      49: ldc           #64                 // String Unable to update modification time of
      51: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #65                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: return

  public static void createParentDirs(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #66                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;
       9: invokevirtual #67                 // Method java/io/File.getParentFile:()Ljava/io/File;
      12: astore_1
      13: aload_1
      14: ifnonnull     18
      17: return
      18: aload_1
      19: invokevirtual #68                 // Method java/io/File.mkdirs:()Z
      22: pop
      23: aload_1
      24: invokevirtual #69                 // Method java/io/File.isDirectory:()Z
      27: ifne          73
      30: new           #63                 // class java/io/IOException
      33: dup
      34: aload_0
      35: invokestatic  #51                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      38: astore_2
      39: bipush        39
      41: aload_2
      42: invokestatic  #51                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      45: invokevirtual #52                 // Method java/lang/String.length:()I
      48: iadd
      49: new           #44                 // class java/lang/StringBuilder
      52: dup_x1
      53: swap
      54: invokespecial #45                 // Method java/lang/StringBuilder."<init>":(I)V
      57: ldc           #70                 // String Unable to create parent directories of
      59: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_2
      63: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #65                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: return

  public static void move(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: invokevirtual #31                 // Method java/io/File.equals:(Ljava/lang/Object;)Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ldc           #32                 // String Source %s and destination %s must be different
      25: aload_0
      26: aload_1
      27: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      30: aload_0
      31: aload_1
      32: invokevirtual #71                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      35: ifne          143
      38: aload_0
      39: aload_1
      40: invokestatic  #72                 // Method copy:(Ljava/io/File;Ljava/io/File;)V
      43: aload_0
      44: invokevirtual #73                 // Method java/io/File.delete:()Z
      47: ifne          143
      50: aload_1
      51: invokevirtual #73                 // Method java/io/File.delete:()Z
      54: ifne          100
      57: new           #63                 // class java/io/IOException
      60: dup
      61: aload_1
      62: invokestatic  #51                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      65: astore_2
      66: bipush        17
      68: aload_2
      69: invokestatic  #51                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      72: invokevirtual #52                 // Method java/lang/String.length:()I
      75: iadd
      76: new           #44                 // class java/lang/StringBuilder
      79: dup_x1
      80: swap
      81: invokespecial #45                 // Method java/lang/StringBuilder."<init>":(I)V
      84: ldc           #74                 // String Unable to delete
      86: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_2
      90: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #65                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: new           #63                 // class java/io/IOException
     103: dup
     104: aload_0
     105: invokestatic  #51                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     108: astore_2
     109: bipush        17
     111: aload_2
     112: invokestatic  #51                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     115: invokevirtual #52                 // Method java/lang/String.length:()I
     118: iadd
     119: new           #44                 // class java/lang/StringBuilder
     122: dup_x1
     123: swap
     124: invokespecial #45                 // Method java/lang/StringBuilder."<init>":(I)V
     127: ldc           #74                 // String Unable to delete
     129: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_2
     133: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokespecial #65                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: return

  public static java.lang.String readFirstLine(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method asCharSource:(Ljava/io/File;Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       5: invokevirtual #75                 // Method com/google/common/io/CharSource.readFirstLine:()Ljava/lang/String;
       8: areturn

  public static java.util.List<java.lang.String> readLines(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method asCharSource:(Ljava/io/File;Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       5: new           #76                 // class com/google/common/io/Files$1
       8: dup
       9: invokespecial #77                 // Method com/google/common/io/Files$1."<init>":()V
      12: invokevirtual #78                 // Method com/google/common/io/CharSource.readLines:(Lcom/google/common/io/LineProcessor;)Ljava/lang/Object;
      15: checkcast     #79                 // class java/util/List
      18: areturn

  public static <T> T readLines(java.io.File, java.nio.charset.Charset, com.google.common.io.LineProcessor<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method asCharSource:(Ljava/io/File;Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       5: aload_2
       6: invokevirtual #78                 // Method com/google/common/io/CharSource.readLines:(Lcom/google/common/io/LineProcessor;)Ljava/lang/Object;
       9: areturn

  public static <T> T readBytes(java.io.File, com.google.common.io.ByteProcessor<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
       4: aload_1
       5: invokevirtual #80                 // Method com/google/common/io/ByteSource.read:(Lcom/google/common/io/ByteProcessor;)Ljava/lang/Object;
       8: areturn

  public static com.google.common.hash.HashCode hash(java.io.File, com.google.common.hash.HashFunction) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
       4: aload_1
       5: invokevirtual #81                 // Method com/google/common/io/ByteSource.hash:(Lcom/google/common/hash/HashFunction;)Lcom/google/common/hash/HashCode;
       8: areturn

  public static java.nio.MappedByteBuffer map(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getstatic     #82                 // Field java/nio/channels/FileChannel$MapMode.READ_ONLY:Ljava/nio/channels/FileChannel$MapMode;
       9: invokestatic  #83                 // Method map:(Ljava/io/File;Ljava/nio/channels/FileChannel$MapMode;)Ljava/nio/MappedByteBuffer;
      12: areturn

  public static java.nio.MappedByteBuffer map(java.io.File, java.nio.channels.FileChannel$MapMode) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #84                 // long -1l
       5: invokestatic  #86                 // Method mapInternal:(Ljava/io/File;Ljava/nio/channels/FileChannel$MapMode;J)Ljava/nio/MappedByteBuffer;
       8: areturn

  public static java.nio.MappedByteBuffer map(java.io.File, java.nio.channels.FileChannel$MapMode, long) throws java.io.IOException;
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #87                 // String size (%s) may not be negative
      13: lload_2
      14: invokestatic  #88                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;J)V
      17: aload_0
      18: aload_1
      19: lload_2
      20: invokestatic  #86                 // Method mapInternal:(Ljava/io/File;Ljava/nio/channels/FileChannel$MapMode;J)Ljava/nio/MappedByteBuffer;
      23: areturn

  private static java.nio.MappedByteBuffer mapInternal(java.io.File, java.nio.channels.FileChannel$MapMode, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokestatic  #89                 // Method com/google/common/io/Closer.create:()Lcom/google/common/io/Closer;
      13: astore        4
      15: aload         4
      17: new           #90                 // class java/io/RandomAccessFile
      20: dup
      21: aload_0
      22: aload_1
      23: getstatic     #82                 // Field java/nio/channels/FileChannel$MapMode.READ_ONLY:Ljava/nio/channels/FileChannel$MapMode;
      26: if_acmpne     34
      29: ldc           #91                 // String r
      31: goto          36
      34: ldc           #92                 // String rw
      36: invokespecial #93                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      39: invokevirtual #94                 // Method com/google/common/io/Closer.register:(Ljava/io/Closeable;)Ljava/io/Closeable;
      42: checkcast     #90                 // class java/io/RandomAccessFile
      45: astore        5
      47: aload         4
      49: aload         5
      51: invokevirtual #95                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      54: invokevirtual #94                 // Method com/google/common/io/Closer.register:(Ljava/io/Closeable;)Ljava/io/Closeable;
      57: checkcast     #96                 // class java/nio/channels/FileChannel
      60: astore        6
      62: aload         6
      64: aload_1
      65: lconst_0
      66: lload_2
      67: ldc2_w        #84                 // long -1l
      70: lcmp
      71: ifne          82
      74: aload         6
      76: invokevirtual #97                 // Method java/nio/channels/FileChannel.size:()J
      79: goto          83
      82: lload_2
      83: invokevirtual #98                 // Method java/nio/channels/FileChannel.map:(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;
      86: astore        7
      88: aload         4
      90: invokevirtual #99                 // Method com/google/common/io/Closer.close:()V
      93: aload         7
      95: areturn
      96: astore        5
      98: aload         4
     100: aload         5
     102: invokevirtual #101                // Method com/google/common/io/Closer.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     105: athrow
     106: astore        8
     108: aload         4
     110: invokevirtual #99                 // Method com/google/common/io/Closer.close:()V
     113: aload         8
     115: athrow
    Exception table:
       from    to  target type
          15    88    96   Class java/lang/Throwable
          15    88   106   any
          96   108   106   any

  public static java.lang.String simplifyPath(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #52                 // Method java/lang/String.length:()I
       9: ifne          15
      12: ldc           #102                // String .
      14: areturn
      15: bipush        47
      17: invokestatic  #103                // Method com/google/common/base/Splitter.on:(C)Lcom/google/common/base/Splitter;
      20: invokevirtual #104                // Method com/google/common/base/Splitter.omitEmptyStrings:()Lcom/google/common/base/Splitter;
      23: aload_0
      24: invokevirtual #105                // Method com/google/common/base/Splitter.split:(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
      27: astore_1
      28: new           #106                // class java/util/ArrayList
      31: dup
      32: invokespecial #107                // Method java/util/ArrayList."<init>":()V
      35: astore_2
      36: aload_1
      37: invokeinterface #108,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      42: astore_3
      43: aload_3
      44: invokeinterface #109,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          235
      52: aload_3
      53: invokeinterface #110,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #111                // class java/lang/String
      61: astore        4
      63: aload         4
      65: astore        5
      67: iconst_m1
      68: istore        6
      70: aload         5
      72: invokevirtual #112                // Method java/lang/String.hashCode:()I
      75: lookupswitch  { // 2
                    46: 100
                  1472: 116
               default: 129
          }
     100: aload         5
     102: ldc           #102                // String .
     104: invokevirtual #113                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     107: ifeq          129
     110: iconst_0
     111: istore        6
     113: goto          129
     116: aload         5
     118: ldc           #114                // String ..
     120: invokevirtual #113                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     123: ifeq          129
     126: iconst_1
     127: istore        6
     129: iload         6
     131: lookupswitch  { // 2
                     0: 156
                     1: 159
               default: 223
          }
     156: goto          43
     159: aload_2
     160: invokeinterface #115,  1          // InterfaceMethod java/util/List.size:()I
     165: ifle          211
     168: aload_2
     169: aload_2
     170: invokeinterface #115,  1          // InterfaceMethod java/util/List.size:()I
     175: iconst_1
     176: isub
     177: invokeinterface #116,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     182: checkcast     #111                // class java/lang/String
     185: ldc           #114                // String ..
     187: invokevirtual #113                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     190: ifne          211
     193: aload_2
     194: aload_2
     195: invokeinterface #115,  1          // InterfaceMethod java/util/List.size:()I
     200: iconst_1
     201: isub
     202: invokeinterface #117,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     207: pop
     208: goto          232
     211: aload_2
     212: ldc           #114                // String ..
     214: invokeinterface #118,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     219: pop
     220: goto          232
     223: aload_2
     224: aload         4
     226: invokeinterface #118,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     231: pop
     232: goto          43
     235: bipush        47
     237: invokestatic  #119                // Method com/google/common/base/Joiner.on:(C)Lcom/google/common/base/Joiner;
     240: aload_2
     241: invokevirtual #120                // Method com/google/common/base/Joiner.join:(Ljava/lang/Iterable;)Ljava/lang/String;
     244: astore_3
     245: aload_0
     246: iconst_0
     247: invokevirtual #121                // Method java/lang/String.charAt:(I)C
     250: bipush        47
     252: if_icmpne     284
     255: ldc           #122                // String /
     257: aload_3
     258: invokestatic  #51                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     261: dup
     262: invokevirtual #52                 // Method java/lang/String.length:()I
     265: ifeq          274
     268: invokevirtual #123                // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
     271: goto          283
     274: pop
     275: new           #111                // class java/lang/String
     278: dup_x1
     279: swap
     280: invokespecial #124                // Method java/lang/String."<init>":(Ljava/lang/String;)V
     283: astore_3
     284: aload_3
     285: ldc           #125                // String /../
     287: invokevirtual #126                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     290: ifeq          302
     293: aload_3
     294: iconst_3
     295: invokevirtual #127                // Method java/lang/String.substring:(I)Ljava/lang/String;
     298: astore_3
     299: goto          284
     302: aload_3
     303: ldc           #128                // String /..
     305: invokevirtual #113                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     308: ifeq          317
     311: ldc           #122                // String /
     313: astore_3
     314: goto          329
     317: ldc           #129                // String
     319: aload_3
     320: invokevirtual #113                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     323: ifeq          329
     326: ldc           #102                // String .
     328: astore_3
     329: aload_3
     330: areturn

  public static java.lang.String getFileExtension(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #39                 // class java/io/File
       8: dup
       9: aload_0
      10: invokespecial #42                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      13: invokevirtual #130                // Method java/io/File.getName:()Ljava/lang/String;
      16: astore_1
      17: aload_1
      18: bipush        46
      20: invokevirtual #131                // Method java/lang/String.lastIndexOf:(I)I
      23: istore_2
      24: iload_2
      25: iconst_m1
      26: if_icmpne     34
      29: ldc           #129                // String
      31: goto          41
      34: aload_1
      35: iload_2
      36: iconst_1
      37: iadd
      38: invokevirtual #127                // Method java/lang/String.substring:(I)Ljava/lang/String;
      41: areturn

  public static java.lang.String getNameWithoutExtension(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #39                 // class java/io/File
       8: dup
       9: aload_0
      10: invokespecial #42                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      13: invokevirtual #130                // Method java/io/File.getName:()Ljava/lang/String;
      16: astore_1
      17: aload_1
      18: bipush        46
      20: invokevirtual #131                // Method java/lang/String.lastIndexOf:(I)I
      23: istore_2
      24: iload_2
      25: iconst_m1
      26: if_icmpne     33
      29: aload_1
      30: goto          39
      33: aload_1
      34: iconst_0
      35: iload_2
      36: invokevirtual #132                // Method java/lang/String.substring:(II)Ljava/lang/String;
      39: areturn

  public static com.google.common.graph.Traverser<java.io.File> fileTraverser();
    Code:
       0: getstatic     #133                // Field FILE_TREE:Lcom/google/common/graph/SuccessorsFunction;
       3: invokestatic  #134                // Method com/google/common/graph/Traverser.forTree:(Lcom/google/common/graph/SuccessorsFunction;)Lcom/google/common/graph/Traverser;
       6: areturn

  public static com.google.common.base.Predicate<java.io.File> isDirectory();
    Code:
       0: getstatic     #135                // Field com/google/common/io/Files$FilePredicate.IS_DIRECTORY:Lcom/google/common/io/Files$FilePredicate;
       3: areturn

  public static com.google.common.base.Predicate<java.io.File> isFile();
    Code:
       0: getstatic     #136                // Field com/google/common/io/Files$FilePredicate.IS_FILE:Lcom/google/common/io/Files$FilePredicate;
       3: areturn

  static {};
    Code:
       0: new           #137                // class com/google/common/io/Files$2
       3: dup
       4: invokespecial #138                // Method com/google/common/io/Files$2."<init>":()V
       7: putstatic     #133                // Field FILE_TREE:Lcom/google/common/graph/SuccessorsFunction;
      10: return
}
