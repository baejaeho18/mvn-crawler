Compiled from "ImmutableSet.java"
final class com.google.common.collect.ImmutableSet$RegularSetBuilderImpl<E> extends com.google.common.collect.ImmutableSet$SetBuilderImpl<E> {
  private java.lang.Object[] hashTable;

  private int maxRunBeforeFallback;

  private int expandTableThreshold;

  private int hashCode;

  static final int MAX_RUN_MULTIPLIER;

  com.google.common.collect.ImmutableSet$RegularSetBuilderImpl(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method com/google/common/collect/ImmutableSet$SetBuilderImpl."<init>":(I)V
       5: aload_0
       6: aconst_null
       7: putfield      #3                  // Field hashTable:[Ljava/lang/Object;
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field maxRunBeforeFallback:I
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field expandTableThreshold:I
      20: return

  com.google.common.collect.ImmutableSet$RegularSetBuilderImpl(com.google.common.collect.ImmutableSet$RegularSetBuilderImpl<E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method com/google/common/collect/ImmutableSet$SetBuilderImpl."<init>":(Lcom/google/common/collect/ImmutableSet$SetBuilderImpl;)V
       5: aload_0
       6: aload_1
       7: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
      10: ifnonnull     17
      13: aconst_null
      14: goto          27
      17: aload_1
      18: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
      21: invokevirtual #7                  // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
      24: checkcast     #8                  // class "[Ljava/lang/Object;"
      27: putfield      #3                  // Field hashTable:[Ljava/lang/Object;
      30: aload_0
      31: aload_1
      32: getfield      #4                  // Field maxRunBeforeFallback:I
      35: putfield      #4                  // Field maxRunBeforeFallback:I
      38: aload_0
      39: aload_1
      40: getfield      #5                  // Field expandTableThreshold:I
      43: putfield      #5                  // Field expandTableThreshold:I
      46: aload_0
      47: aload_1
      48: getfield      #9                  // Field hashCode:I
      51: putfield      #9                  // Field hashCode:I
      54: return

  com.google.common.collect.ImmutableSet$SetBuilderImpl<E> add(E);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
       9: ifnonnull     62
      12: aload_0
      13: getfield      #11                 // Field distinct:I
      16: ifne          26
      19: aload_0
      20: aload_1
      21: invokevirtual #12                 // Method addDedupedElement:(Ljava/lang/Object;)V
      24: aload_0
      25: areturn
      26: aload_0
      27: aload_0
      28: getfield      #13                 // Field dedupedElements:[Ljava/lang/Object;
      31: arraylength
      32: invokevirtual #14                 // Method ensureTableCapacity:(I)V
      35: aload_0
      36: getfield      #13                 // Field dedupedElements:[Ljava/lang/Object;
      39: iconst_0
      40: aaload
      41: astore_2
      42: aload_0
      43: dup
      44: getfield      #11                 // Field distinct:I
      47: iconst_1
      48: isub
      49: putfield      #11                 // Field distinct:I
      52: aload_0
      53: aload_2
      54: invokespecial #15                 // Method insertInHashTable:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet$SetBuilderImpl;
      57: aload_1
      58: invokevirtual #16                 // Method com/google/common/collect/ImmutableSet$SetBuilderImpl.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet$SetBuilderImpl;
      61: areturn
      62: aload_0
      63: aload_1
      64: invokespecial #15                 // Method insertInHashTable:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet$SetBuilderImpl;
      67: areturn

  private com.google.common.collect.ImmutableSet$SetBuilderImpl<E> insertInHashTable(E);
    Code:
       0: aload_0
       1: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
       4: invokestatic  #17                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       7: pop
       8: aload_1
       9: invokevirtual #18                 // Method java/lang/Object.hashCode:()I
      12: istore_2
      13: iload_2
      14: invokestatic  #19                 // Method com/google/common/collect/Hashing.smear:(I)I
      17: istore_3
      18: aload_0
      19: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
      22: arraylength
      23: iconst_1
      24: isub
      25: istore        4
      27: iload_3
      28: istore        5
      30: iload         5
      32: iload_3
      33: isub
      34: aload_0
      35: getfield      #4                  // Field maxRunBeforeFallback:I
      38: if_icmpge     112
      41: iload         5
      43: iload         4
      45: iand
      46: istore        6
      48: aload_0
      49: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
      52: iload         6
      54: aaload
      55: astore        7
      57: aload         7
      59: ifnonnull     95
      62: aload_0
      63: aload_1
      64: invokevirtual #12                 // Method addDedupedElement:(Ljava/lang/Object;)V
      67: aload_0
      68: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
      71: iload         6
      73: aload_1
      74: aastore
      75: aload_0
      76: dup
      77: getfield      #9                  // Field hashCode:I
      80: iload_2
      81: iadd
      82: putfield      #9                  // Field hashCode:I
      85: aload_0
      86: aload_0
      87: getfield      #11                 // Field distinct:I
      90: invokevirtual #14                 // Method ensureTableCapacity:(I)V
      93: aload_0
      94: areturn
      95: aload         7
      97: aload_1
      98: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     101: ifeq          106
     104: aload_0
     105: areturn
     106: iinc          5, 1
     109: goto          30
     112: new           #21                 // class com/google/common/collect/ImmutableSet$JdkBackedSetBuilderImpl
     115: dup
     116: aload_0
     117: invokespecial #22                 // Method com/google/common/collect/ImmutableSet$JdkBackedSetBuilderImpl."<init>":(Lcom/google/common/collect/ImmutableSet$SetBuilderImpl;)V
     120: aload_1
     121: invokevirtual #23                 // Method com/google/common/collect/ImmutableSet$JdkBackedSetBuilderImpl.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet$SetBuilderImpl;
     124: areturn

  com.google.common.collect.ImmutableSet$SetBuilderImpl<E> copy();
    Code:
       0: new           #24                 // class com/google/common/collect/ImmutableSet$RegularSetBuilderImpl
       3: dup
       4: aload_0
       5: invokespecial #25                 // Method "<init>":(Lcom/google/common/collect/ImmutableSet$RegularSetBuilderImpl;)V
       8: areturn

  com.google.common.collect.ImmutableSet$SetBuilderImpl<E> review();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
       4: ifnonnull     9
       7: aload_0
       8: areturn
       9: aload_0
      10: getfield      #11                 // Field distinct:I
      13: invokestatic  #26                 // Method com/google/common/collect/ImmutableSet.chooseTableSize:(I)I
      16: istore_1
      17: iload_1
      18: iconst_2
      19: imul
      20: aload_0
      21: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
      24: arraylength
      25: if_icmpge     63
      28: aload_0
      29: iload_1
      30: aload_0
      31: getfield      #13                 // Field dedupedElements:[Ljava/lang/Object;
      34: aload_0
      35: getfield      #11                 // Field distinct:I
      38: invokestatic  #27                 // Method rebuildHashTable:(I[Ljava/lang/Object;I)[Ljava/lang/Object;
      41: putfield      #3                  // Field hashTable:[Ljava/lang/Object;
      44: aload_0
      45: iload_1
      46: invokestatic  #28                 // Method maxRunBeforeFallback:(I)I
      49: putfield      #4                  // Field maxRunBeforeFallback:I
      52: aload_0
      53: ldc2_w        #29                 // double 0.7d
      56: iload_1
      57: i2d
      58: dmul
      59: d2i
      60: putfield      #5                  // Field expandTableThreshold:I
      63: aload_0
      64: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
      67: invokestatic  #31                 // Method hashFloodingDetected:([Ljava/lang/Object;)Z
      70: ifeq          84
      73: new           #21                 // class com/google/common/collect/ImmutableSet$JdkBackedSetBuilderImpl
      76: dup
      77: aload_0
      78: invokespecial #22                 // Method com/google/common/collect/ImmutableSet$JdkBackedSetBuilderImpl."<init>":(Lcom/google/common/collect/ImmutableSet$SetBuilderImpl;)V
      81: goto          85
      84: aload_0
      85: areturn

  com.google.common.collect.ImmutableSet<E> build();
    Code:
       0: aload_0
       1: getfield      #11                 // Field distinct:I
       4: lookupswitch  { // 2
                     0: 32
                     1: 36
               default: 49
          }
      32: invokestatic  #32                 // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
      35: areturn
      36: aload_0
      37: getfield      #13                 // Field dedupedElements:[Ljava/lang/Object;
      40: iconst_0
      41: aaload
      42: invokestatic  #17                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      45: invokestatic  #33                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      48: areturn
      49: aload_0
      50: getfield      #11                 // Field distinct:I
      53: aload_0
      54: getfield      #13                 // Field dedupedElements:[Ljava/lang/Object;
      57: arraylength
      58: if_icmpne     68
      61: aload_0
      62: getfield      #13                 // Field dedupedElements:[Ljava/lang/Object;
      65: goto          79
      68: aload_0
      69: getfield      #13                 // Field dedupedElements:[Ljava/lang/Object;
      72: aload_0
      73: getfield      #11                 // Field distinct:I
      76: invokestatic  #34                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      79: astore_1
      80: new           #35                 // class com/google/common/collect/RegularImmutableSet
      83: dup
      84: aload_1
      85: aload_0
      86: getfield      #9                  // Field hashCode:I
      89: aload_0
      90: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
      93: invokestatic  #17                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      96: checkcast     #8                  // class "[Ljava/lang/Object;"
      99: aload_0
     100: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
     103: arraylength
     104: iconst_1
     105: isub
     106: invokespecial #36                 // Method com/google/common/collect/RegularImmutableSet."<init>":([Ljava/lang/Object;I[Ljava/lang/Object;I)V
     109: areturn

  static java.lang.Object[] rebuildHashTable(int, java.lang.Object[], int);
    Code:
       0: iload_0
       1: anewarray     #37                 // class java/lang/Object
       4: astore_3
       5: aload_3
       6: arraylength
       7: iconst_1
       8: isub
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload_2
      17: if_icmpge     78
      20: aload_1
      21: iload         5
      23: aaload
      24: invokestatic  #17                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      27: astore        6
      29: aload         6
      31: invokevirtual #18                 // Method java/lang/Object.hashCode:()I
      34: invokestatic  #19                 // Method com/google/common/collect/Hashing.smear:(I)I
      37: istore        7
      39: iload         7
      41: istore        8
      43: iload         8
      45: iload         4
      47: iand
      48: istore        9
      50: aload_3
      51: iload         9
      53: aaload
      54: ifnonnull     66
      57: aload_3
      58: iload         9
      60: aload         6
      62: aastore
      63: goto          72
      66: iinc          8, 1
      69: goto          43
      72: iinc          5, 1
      75: goto          14
      78: aload_3
      79: areturn

  void ensureTableCapacity(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
       4: ifnonnull     23
       7: iload_1
       8: invokestatic  #26                 // Method com/google/common/collect/ImmutableSet.chooseTableSize:(I)I
      11: istore_2
      12: aload_0
      13: iload_2
      14: anewarray     #37                 // class java/lang/Object
      17: putfield      #3                  // Field hashTable:[Ljava/lang/Object;
      20: goto          69
      23: iload_1
      24: aload_0
      25: getfield      #5                  // Field expandTableThreshold:I
      28: if_icmple     68
      31: aload_0
      32: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
      35: arraylength
      36: ldc           #38                 // int 1073741824
      38: if_icmpge     68
      41: aload_0
      42: getfield      #3                  // Field hashTable:[Ljava/lang/Object;
      45: arraylength
      46: iconst_2
      47: imul
      48: istore_2
      49: aload_0
      50: iload_2
      51: aload_0
      52: getfield      #13                 // Field dedupedElements:[Ljava/lang/Object;
      55: aload_0
      56: getfield      #11                 // Field distinct:I
      59: invokestatic  #27                 // Method rebuildHashTable:(I[Ljava/lang/Object;I)[Ljava/lang/Object;
      62: putfield      #3                  // Field hashTable:[Ljava/lang/Object;
      65: goto          69
      68: return
      69: aload_0
      70: iload_2
      71: invokestatic  #28                 // Method maxRunBeforeFallback:(I)I
      74: putfield      #4                  // Field maxRunBeforeFallback:I
      77: aload_0
      78: ldc2_w        #29                 // double 0.7d
      81: iload_2
      82: i2d
      83: dmul
      84: d2i
      85: putfield      #5                  // Field expandTableThreshold:I
      88: return

  static boolean hashFloodingDetected(java.lang.Object[]);
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #28                 // Method maxRunBeforeFallback:(I)I
       5: istore_1
       6: aload_0
       7: arraylength
       8: iconst_1
       9: isub
      10: istore_2
      11: iconst_0
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload_3
      17: aload_0
      18: arraylength
      19: if_icmpge     106
      22: iload_3
      23: iload         4
      25: if_icmpne     62
      28: aload_0
      29: iload_3
      30: aaload
      31: ifnonnull     62
      34: aload_0
      35: iload_3
      36: iload_1
      37: iadd
      38: iconst_1
      39: isub
      40: iload_2
      41: iand
      42: aaload
      43: ifnonnull     53
      46: iload_3
      47: iload_1
      48: iadd
      49: istore_3
      50: goto          56
      53: iinc          3, 1
      56: iload_3
      57: istore        4
      59: goto          16
      62: iload_3
      63: iload_1
      64: iadd
      65: iconst_1
      66: isub
      67: istore        5
      69: iload         5
      71: iload         4
      73: if_icmplt     104
      76: aload_0
      77: iload         5
      79: iload_2
      80: iand
      81: aaload
      82: ifnonnull     98
      85: iload_3
      86: iload_1
      87: iadd
      88: istore        4
      90: iload         5
      92: iconst_1
      93: iadd
      94: istore_3
      95: goto          16
      98: iinc          5, -1
     101: goto          69
     104: iconst_1
     105: ireturn
     106: iconst_0
     107: ireturn

  static int maxRunBeforeFallback(int);
    Code:
       0: bipush        13
       2: iload_0
       3: getstatic     #39                 // Field java/math/RoundingMode.UNNECESSARY:Ljava/math/RoundingMode;
       6: invokestatic  #40                 // Method com/google/common/math/IntMath.log2:(ILjava/math/RoundingMode;)I
       9: imul
      10: ireturn
}
