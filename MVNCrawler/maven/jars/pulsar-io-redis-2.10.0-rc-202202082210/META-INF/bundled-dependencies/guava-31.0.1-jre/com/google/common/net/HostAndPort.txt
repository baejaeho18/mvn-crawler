Compiled from "HostAndPort.java"
public final class com.google.common.net.HostAndPort implements java.io.Serializable {
  private static final int NO_PORT;

  private final java.lang.String host;

  private final int port;

  private final boolean hasBracketlessColons;

  private static final long serialVersionUID;

  private com.google.common.net.HostAndPort(java.lang.String, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field host:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field port:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field hasBracketlessColons:Z
      19: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #2                  // Field host:Ljava/lang/String;
       4: areturn

  public boolean hasPort();
    Code:
       0: aload_0
       1: getfield      #3                  // Field port:I
       4: iflt          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int getPort();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method hasPort:()Z
       4: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_0
       8: getfield      #3                  // Field port:I
      11: ireturn

  public int getPortOrDefault(int);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method hasPort:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field port:I
      11: goto          15
      14: iload_1
      15: ireturn

  public static com.google.common.net.HostAndPort fromParts(java.lang.String, int);
    Code:
       0: iload_1
       1: invokestatic  #7                  // Method isValidPort:(I)Z
       4: ldc           #8                  // String Port out of range: %s
       6: iload_1
       7: invokestatic  #9                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      10: aload_0
      11: invokestatic  #10                 // Method fromString:(Ljava/lang/String;)Lcom/google/common/net/HostAndPort;
      14: astore_2
      15: aload_2
      16: invokevirtual #5                  // Method hasPort:()Z
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ldc           #11                 // String Host has a port: %s
      29: aload_0
      30: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      33: new           #13                 // class com/google/common/net/HostAndPort
      36: dup
      37: aload_2
      38: getfield      #2                  // Field host:Ljava/lang/String;
      41: iload_1
      42: aload_2
      43: getfield      #4                  // Field hasBracketlessColons:Z
      46: invokespecial #14                 // Method "<init>":(Ljava/lang/String;IZ)V
      49: areturn

  public static com.google.common.net.HostAndPort fromHost(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method fromString:(Ljava/lang/String;)Lcom/google/common/net/HostAndPort;
       4: astore_1
       5: aload_1
       6: invokevirtual #5                  // Method hasPort:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #11                 // String Host has a port: %s
      19: aload_0
      20: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      23: aload_1
      24: areturn

  public static com.google.common.net.HostAndPort fromString(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aconst_null
       6: astore_2
       7: iconst_0
       8: istore_3
       9: aload_0
      10: ldc           #16                 // String [
      12: invokevirtual #17                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      15: ifeq          37
      18: aload_0
      19: invokestatic  #18                 // Method getHostAndPortFromBracketedHost:(Ljava/lang/String;)[Ljava/lang/String;
      22: astore        4
      24: aload         4
      26: iconst_0
      27: aaload
      28: astore_1
      29: aload         4
      31: iconst_1
      32: aaload
      33: astore_2
      34: goto          97
      37: aload_0
      38: bipush        58
      40: invokevirtual #19                 // Method java/lang/String.indexOf:(I)I
      43: istore        4
      45: iload         4
      47: iflt          84
      50: aload_0
      51: bipush        58
      53: iload         4
      55: iconst_1
      56: iadd
      57: invokevirtual #20                 // Method java/lang/String.indexOf:(II)I
      60: iconst_m1
      61: if_icmpne     84
      64: aload_0
      65: iconst_0
      66: iload         4
      68: invokevirtual #21                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      71: astore_1
      72: aload_0
      73: iload         4
      75: iconst_1
      76: iadd
      77: invokevirtual #22                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      80: astore_2
      81: goto          97
      84: aload_0
      85: astore_1
      86: iload         4
      88: iflt          95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: istore_3
      97: iconst_m1
      98: istore        4
     100: aload_2
     101: invokestatic  #23                 // Method com/google/common/base/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
     104: ifne          195
     107: aload_2
     108: ldc           #24                 // String +
     110: invokevirtual #17                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     113: ifne          130
     116: invokestatic  #25                 // Method com/google/common/base/CharMatcher.ascii:()Lcom/google/common/base/CharMatcher;
     119: aload_2
     120: invokevirtual #26                 // Method com/google/common/base/CharMatcher.matchesAllOf:(Ljava/lang/CharSequence;)Z
     123: ifeq          130
     126: iconst_1
     127: goto          131
     130: iconst_0
     131: ldc           #27                 // String Unparseable port number: %s
     133: aload_0
     134: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
     137: aload_2
     138: invokestatic  #28                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     141: istore        4
     143: goto          184
     146: astore        5
     148: new           #30                 // class java/lang/IllegalArgumentException
     151: dup
     152: ldc           #31                 // String Unparseable port number:
     154: aload_0
     155: invokestatic  #32                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     158: dup
     159: invokevirtual #33                 // Method java/lang/String.length:()I
     162: ifeq          171
     165: invokevirtual #34                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
     168: goto          180
     171: pop
     172: new           #35                 // class java/lang/String
     175: dup_x1
     176: swap
     177: invokespecial #36                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
     180: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     183: athrow
     184: iload         4
     186: invokestatic  #7                  // Method isValidPort:(I)Z
     189: ldc           #38                 // String Port number out of range: %s
     191: aload_0
     192: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
     195: new           #13                 // class com/google/common/net/HostAndPort
     198: dup
     199: aload_1
     200: iload         4
     202: iload_3
     203: invokespecial #14                 // Method "<init>":(Ljava/lang/String;IZ)V
     206: areturn
    Exception table:
       from    to  target type
         137   143   146   Class java/lang/NumberFormatException

  private static java.lang.String[] getHostAndPortFromBracketedHost(java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #39                 // Method java/lang/String.charAt:(I)C
       5: bipush        91
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ldc           #40                 // String Bracketed host-port string must start with a bracket: %s
      17: aload_0
      18: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      21: aload_0
      22: bipush        58
      24: invokevirtual #19                 // Method java/lang/String.indexOf:(I)I
      27: istore_1
      28: aload_0
      29: bipush        93
      31: invokevirtual #41                 // Method java/lang/String.lastIndexOf:(I)I
      34: istore_2
      35: iload_1
      36: iconst_m1
      37: if_icmple     49
      40: iload_2
      41: iload_1
      42: if_icmple     49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ldc           #42                 // String Invalid bracketed host/port: %s
      52: aload_0
      53: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      56: aload_0
      57: iconst_1
      58: iload_2
      59: invokevirtual #21                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      62: astore_3
      63: iload_2
      64: iconst_1
      65: iadd
      66: aload_0
      67: invokevirtual #33                 // Method java/lang/String.length:()I
      70: if_icmpne     87
      73: iconst_2
      74: anewarray     #35                 // class java/lang/String
      77: dup
      78: iconst_0
      79: aload_3
      80: aastore
      81: dup
      82: iconst_1
      83: ldc           #43                 // String
      85: aastore
      86: areturn
      87: aload_0
      88: iload_2
      89: iconst_1
      90: iadd
      91: invokevirtual #39                 // Method java/lang/String.charAt:(I)C
      94: bipush        58
      96: if_icmpne     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ldc           #44                 // String Only a colon may follow a close bracket: %s
     106: aload_0
     107: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
     110: iload_2
     111: iconst_2
     112: iadd
     113: istore        4
     115: iload         4
     117: aload_0
     118: invokevirtual #33                 // Method java/lang/String.length:()I
     121: if_icmpge     145
     124: aload_0
     125: iload         4
     127: invokevirtual #39                 // Method java/lang/String.charAt:(I)C
     130: invokestatic  #45                 // Method java/lang/Character.isDigit:(C)Z
     133: ldc           #46                 // String Port must be numeric: %s
     135: aload_0
     136: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
     139: iinc          4, 1
     142: goto          115
     145: iconst_2
     146: anewarray     #35                 // class java/lang/String
     149: dup
     150: iconst_0
     151: aload_3
     152: aastore
     153: dup
     154: iconst_1
     155: aload_0
     156: iload_2
     157: iconst_2
     158: iadd
     159: invokevirtual #22                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     162: aastore
     163: areturn

  public com.google.common.net.HostAndPort withDefaultPort(int);
    Code:
       0: iload_1
       1: invokestatic  #7                  // Method isValidPort:(I)Z
       4: invokestatic  #47                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
       7: aload_0
       8: invokevirtual #5                  // Method hasPort:()Z
      11: ifeq          16
      14: aload_0
      15: areturn
      16: new           #13                 // class com/google/common/net/HostAndPort
      19: dup
      20: aload_0
      21: getfield      #2                  // Field host:Ljava/lang/String;
      24: iload_1
      25: aload_0
      26: getfield      #4                  // Field hasBracketlessColons:Z
      29: invokespecial #14                 // Method "<init>":(Ljava/lang/String;IZ)V
      32: areturn

  public com.google.common.net.HostAndPort requireBracketsForIPv6();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hasBracketlessColons:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #48                 // String Possible bracketless IPv6 literal: %s
      14: aload_0
      15: getfield      #2                  // Field host:Ljava/lang/String;
      18: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      21: aload_0
      22: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #13                 // class com/google/common/net/HostAndPort
      11: ifeq          50
      14: aload_1
      15: checkcast     #13                 // class com/google/common/net/HostAndPort
      18: astore_2
      19: aload_0
      20: getfield      #2                  // Field host:Ljava/lang/String;
      23: aload_2
      24: getfield      #2                  // Field host:Ljava/lang/String;
      27: invokestatic  #49                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      30: ifeq          48
      33: aload_0
      34: getfield      #3                  // Field port:I
      37: aload_2
      38: getfield      #3                  // Field port:I
      41: if_icmpne     48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn
      50: iconst_0
      51: ireturn

  public int hashCode();
    Code:
       0: iconst_2
       1: anewarray     #50                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field host:Ljava/lang/String;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #3                  // Field port:I
      17: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: aastore
      21: invokestatic  #52                 // Method com/google/common/base/Objects.hashCode:([Ljava/lang/Object;)I
      24: ireturn

  public java.lang.String toString();
    Code:
       0: new           #53                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: getfield      #2                  // Field host:Ljava/lang/String;
       8: invokevirtual #33                 // Method java/lang/String.length:()I
      11: bipush        8
      13: iadd
      14: invokespecial #54                 // Method java/lang/StringBuilder."<init>":(I)V
      17: astore_1
      18: aload_0
      19: getfield      #2                  // Field host:Ljava/lang/String;
      22: bipush        58
      24: invokevirtual #19                 // Method java/lang/String.indexOf:(I)I
      27: iflt          52
      30: aload_1
      31: bipush        91
      33: invokevirtual #55                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #2                  // Field host:Ljava/lang/String;
      40: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: bipush        93
      45: invokevirtual #55                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: pop
      49: goto          61
      52: aload_1
      53: aload_0
      54: getfield      #2                  // Field host:Ljava/lang/String;
      57: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_0
      62: invokevirtual #5                  // Method hasPort:()Z
      65: ifeq          82
      68: aload_1
      69: bipush        58
      71: invokevirtual #55                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      74: aload_0
      75: getfield      #3                  // Field port:I
      78: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      81: pop
      82: aload_1
      83: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: areturn

  private static boolean isValidPort(int);
    Code:
       0: iload_0
       1: iflt          14
       4: iload_0
       5: ldc           #59                 // int 65535
       7: if_icmpgt     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn
}
