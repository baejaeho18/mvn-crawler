Compiled from "CompactHashMap.java"
class com.google.common.collect.CompactHashMap<K, V> extends java.util.AbstractMap<K, V> implements java.io.Serializable {
  private static final java.lang.Object NOT_FOUND;

  static final double HASH_FLOODING_FPP;

  private static final int MAX_HASH_BUCKET_LENGTH;

  private transient java.lang.Object table;

  transient int[] entries;

  transient java.lang.Object[] keys;

  transient java.lang.Object[] values;

  private transient int metadata;

  private transient int size;

  private transient java.util.Set<K> keySetView;

  private transient java.util.Set<java.util.Map$Entry<K, V>> entrySetView;

  private transient java.util.Collection<V> valuesView;

  public static <K, V> com.google.common.collect.CompactHashMap<K, V> create();
    Code:
       0: new           #15                 // class com/google/common/collect/CompactHashMap
       3: dup
       4: invokespecial #16                 // Method "<init>":()V
       7: areturn

  public static <K, V> com.google.common.collect.CompactHashMap<K, V> createWithExpectedSize(int);
    Code:
       0: new           #15                 // class com/google/common/collect/CompactHashMap
       3: dup
       4: iload_0
       5: invokespecial #17                 // Method "<init>":(I)V
       8: areturn

  com.google.common.collect.CompactHashMap();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: iconst_3
       6: invokevirtual #19                 // Method init:(I)V
       9: return

  com.google.common.collect.CompactHashMap(int);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: iload_1
       6: invokevirtual #19                 // Method init:(I)V
       9: return

  void init(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #20                 // String Expected size must be >= 0
      11: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: iload_1
      16: iconst_1
      17: ldc           #22                 // int 1073741823
      19: invokestatic  #23                 // Method com/google/common/primitives/Ints.constrainToRange:(III)I
      22: putfield      #14                 // Field metadata:I
      25: return

  boolean needsAllocArrays();
    Code:
       0: aload_0
       1: getfield      #24                 // Field table:Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  int allocArrays();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method needsAllocArrays:()Z
       4: ldc           #26                 // String Arrays already allocated
       6: invokestatic  #27                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
       9: aload_0
      10: getfield      #14                 // Field metadata:I
      13: istore_1
      14: iload_1
      15: invokestatic  #28                 // Method com/google/common/collect/CompactHashing.tableSize:(I)I
      18: istore_2
      19: aload_0
      20: iload_2
      21: invokestatic  #29                 // Method com/google/common/collect/CompactHashing.createTable:(I)Ljava/lang/Object;
      24: putfield      #24                 // Field table:Ljava/lang/Object;
      27: aload_0
      28: iload_2
      29: iconst_1
      30: isub
      31: invokespecial #30                 // Method setHashTableMask:(I)V
      34: aload_0
      35: iload_1
      36: newarray       int
      38: putfield      #31                 // Field entries:[I
      41: aload_0
      42: iload_1
      43: anewarray     #32                 // class java/lang/Object
      46: putfield      #33                 // Field keys:[Ljava/lang/Object;
      49: aload_0
      50: iload_1
      51: anewarray     #32                 // class java/lang/Object
      54: putfield      #34                 // Field values:[Ljava/lang/Object;
      57: iload_1
      58: ireturn

  java.util.Map<K, V> delegateOrNull();
    Code:
       0: aload_0
       1: getfield      #24                 // Field table:Ljava/lang/Object;
       4: instanceof    #35                 // class java/util/Map
       7: ifeq          18
      10: aload_0
      11: getfield      #24                 // Field table:Ljava/lang/Object;
      14: checkcast     #35                 // class java/util/Map
      17: areturn
      18: aconst_null
      19: areturn

  java.util.Map<K, V> createHashFloodingResistantDelegate(int);
    Code:
       0: new           #36                 // class java/util/LinkedHashMap
       3: dup
       4: iload_1
       5: fconst_1
       6: invokespecial #37                 // Method java/util/LinkedHashMap."<init>":(IF)V
       9: areturn

  java.util.Map<K, V> convertToHashFloodingResistantImplementation();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #6                  // Method hashTableMask:()I
       5: iconst_1
       6: iadd
       7: invokevirtual #38                 // Method createHashFloodingResistantDelegate:(I)Ljava/util/Map;
      10: astore_1
      11: aload_0
      12: invokevirtual #39                 // Method firstEntryIndex:()I
      15: istore_2
      16: iload_2
      17: iflt          46
      20: aload_1
      21: aload_0
      22: iload_2
      23: invokespecial #13                 // Method key:(I)Ljava/lang/Object;
      26: aload_0
      27: iload_2
      28: invokespecial #7                  // Method value:(I)Ljava/lang/Object;
      31: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_0
      38: iload_2
      39: invokevirtual #41                 // Method getSuccessor:(I)I
      42: istore_2
      43: goto          16
      46: aload_0
      47: aload_1
      48: putfield      #24                 // Field table:Ljava/lang/Object;
      51: aload_0
      52: aconst_null
      53: putfield      #31                 // Field entries:[I
      56: aload_0
      57: aconst_null
      58: putfield      #33                 // Field keys:[Ljava/lang/Object;
      61: aload_0
      62: aconst_null
      63: putfield      #34                 // Field values:[Ljava/lang/Object;
      66: aload_0
      67: invokevirtual #42                 // Method incrementModCount:()V
      70: aload_1
      71: areturn

  private void setHashTableMask(int);
    Code:
       0: bipush        32
       2: iload_1
       3: invokestatic  #44                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       6: isub
       7: istore_2
       8: aload_0
       9: aload_0
      10: getfield      #14                 // Field metadata:I
      13: iload_2
      14: bipush        31
      16: invokestatic  #45                 // Method com/google/common/collect/CompactHashing.maskCombine:(III)I
      19: putfield      #14                 // Field metadata:I
      22: return

  private int hashTableMask();
    Code:
       0: iconst_1
       1: aload_0
       2: getfield      #14                 // Field metadata:I
       5: bipush        31
       7: iand
       8: ishl
       9: iconst_1
      10: isub
      11: ireturn

  void incrementModCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #14                 // Field metadata:I
       5: bipush        32
       7: iadd
       8: putfield      #14                 // Field metadata:I
      11: return

  void accessEntry(int);
    Code:
       0: return

  public V put(K, V);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method needsAllocArrays:()Z
       4: ifeq          12
       7: aload_0
       8: invokevirtual #46                 // Method allocArrays:()I
      11: pop
      12: aload_0
      13: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
      16: astore_3
      17: aload_3
      18: ifnull        30
      21: aload_3
      22: aload_1
      23: aload_2
      24: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: areturn
      30: aload_0
      31: invokespecial #4                  // Method requireEntries:()[I
      34: astore        4
      36: aload_0
      37: invokespecial #12                 // Method requireKeys:()[Ljava/lang/Object;
      40: astore        5
      42: aload_0
      43: invokespecial #3                  // Method requireValues:()[Ljava/lang/Object;
      46: astore        6
      48: aload_0
      49: getfield      #11                 // Field size:I
      52: istore        7
      54: iload         7
      56: iconst_1
      57: iadd
      58: istore        8
      60: aload_1
      61: invokestatic  #48                 // Method com/google/common/collect/Hashing.smearedHash:(Ljava/lang/Object;)I
      64: istore        9
      66: aload_0
      67: invokespecial #6                  // Method hashTableMask:()I
      70: istore        10
      72: iload         9
      74: iload         10
      76: iand
      77: istore        11
      79: aload_0
      80: invokespecial #5                  // Method requireTable:()Ljava/lang/Object;
      83: iload         11
      85: invokestatic  #49                 // Method com/google/common/collect/CompactHashing.tableGet:(Ljava/lang/Object;I)I
      88: istore        12
      90: iload         12
      92: ifne          138
      95: iload         8
      97: iload         10
      99: if_icmple     122
     102: aload_0
     103: iload         10
     105: iload         10
     107: invokestatic  #50                 // Method com/google/common/collect/CompactHashing.newCapacity:(I)I
     110: iload         9
     112: iload         7
     114: invokespecial #51                 // Method resizeTable:(IIII)I
     117: istore        10
     119: goto          288
     122: aload_0
     123: invokespecial #5                  // Method requireTable:()Ljava/lang/Object;
     126: iload         11
     128: iload         7
     130: iconst_1
     131: iadd
     132: invokestatic  #52                 // Method com/google/common/collect/CompactHashing.tableSet:(Ljava/lang/Object;II)V
     135: goto          288
     138: iload         9
     140: iload         10
     142: invokestatic  #53                 // Method com/google/common/collect/CompactHashing.getHashPrefix:(II)I
     145: istore        15
     147: iconst_0
     148: istore        16
     150: iload         12
     152: iconst_1
     153: isub
     154: istore        13
     156: aload         4
     158: iload         13
     160: iaload
     161: istore        14
     163: iload         14
     165: iload         10
     167: invokestatic  #53                 // Method com/google/common/collect/CompactHashing.getHashPrefix:(II)I
     170: iload         15
     172: if_icmpne     209
     175: aload_1
     176: aload         5
     178: iload         13
     180: aaload
     181: invokestatic  #54                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
     184: ifeq          209
     187: aload         6
     189: iload         13
     191: aaload
     192: astore        17
     194: aload         6
     196: iload         13
     198: aload_2
     199: aastore
     200: aload_0
     201: iload         13
     203: invokevirtual #55                 // Method accessEntry:(I)V
     206: aload         17
     208: areturn
     209: iload         14
     211: iload         10
     213: invokestatic  #56                 // Method com/google/common/collect/CompactHashing.getNext:(II)I
     216: istore        12
     218: iinc          16, 1
     221: iload         12
     223: ifne          150
     226: iload         16
     228: bipush        9
     230: if_icmplt     245
     233: aload_0
     234: invokevirtual #57                 // Method convertToHashFloodingResistantImplementation:()Ljava/util/Map;
     237: aload_1
     238: aload_2
     239: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     244: areturn
     245: iload         8
     247: iload         10
     249: if_icmple     272
     252: aload_0
     253: iload         10
     255: iload         10
     257: invokestatic  #50                 // Method com/google/common/collect/CompactHashing.newCapacity:(I)I
     260: iload         9
     262: iload         7
     264: invokespecial #51                 // Method resizeTable:(IIII)I
     267: istore        10
     269: goto          288
     272: aload         4
     274: iload         13
     276: iload         14
     278: iload         7
     280: iconst_1
     281: iadd
     282: iload         10
     284: invokestatic  #45                 // Method com/google/common/collect/CompactHashing.maskCombine:(III)I
     287: iastore
     288: aload_0
     289: iload         8
     291: invokespecial #58                 // Method resizeMeMaybe:(I)V
     294: aload_0
     295: iload         7
     297: aload_1
     298: aload_2
     299: iload         9
     301: iload         10
     303: invokevirtual #59                 // Method insertEntry:(ILjava/lang/Object;Ljava/lang/Object;II)V
     306: aload_0
     307: iload         8
     309: putfield      #11                 // Field size:I
     312: aload_0
     313: invokevirtual #42                 // Method incrementModCount:()V
     316: aconst_null
     317: areturn

  void insertEntry(int, K, V, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iconst_0
       5: iload         5
       7: invokestatic  #45                 // Method com/google/common/collect/CompactHashing.maskCombine:(III)I
      10: invokespecial #60                 // Method setEntry:(II)V
      13: aload_0
      14: iload_1
      15: aload_2
      16: invokespecial #61                 // Method setKey:(ILjava/lang/Object;)V
      19: aload_0
      20: iload_1
      21: aload_3
      22: invokespecial #2                  // Method setValue:(ILjava/lang/Object;)V
      25: return

  private void resizeMeMaybe(int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method requireEntries:()[I
       4: arraylength
       5: istore_2
       6: iload_1
       7: iload_2
       8: if_icmple     38
      11: ldc           #22                 // int 1073741823
      13: iload_2
      14: iconst_1
      15: iload_2
      16: iconst_1
      17: iushr
      18: invokestatic  #62                 // Method java/lang/Math.max:(II)I
      21: iadd
      22: iconst_1
      23: ior
      24: invokestatic  #63                 // Method java/lang/Math.min:(II)I
      27: istore_3
      28: iload_3
      29: iload_2
      30: if_icmpeq     38
      33: aload_0
      34: iload_3
      35: invokevirtual #64                 // Method resizeEntries:(I)V
      38: return

  void resizeEntries(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #4                  // Method requireEntries:()[I
       5: iload_1
       6: invokestatic  #65                 // Method java/util/Arrays.copyOf:([II)[I
       9: putfield      #31                 // Field entries:[I
      12: aload_0
      13: aload_0
      14: invokespecial #12                 // Method requireKeys:()[Ljava/lang/Object;
      17: iload_1
      18: invokestatic  #66                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      21: putfield      #33                 // Field keys:[Ljava/lang/Object;
      24: aload_0
      25: aload_0
      26: invokespecial #3                  // Method requireValues:()[Ljava/lang/Object;
      29: iload_1
      30: invokestatic  #66                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      33: putfield      #34                 // Field values:[Ljava/lang/Object;
      36: return

  private int resizeTable(int, int, int, int);
    Code:
       0: iload_2
       1: invokestatic  #29                 // Method com/google/common/collect/CompactHashing.createTable:(I)Ljava/lang/Object;
       4: astore        5
       6: iload_2
       7: iconst_1
       8: isub
       9: istore        6
      11: iload         4
      13: ifeq          29
      16: aload         5
      18: iload_3
      19: iload         6
      21: iand
      22: iload         4
      24: iconst_1
      25: iadd
      26: invokestatic  #52                 // Method com/google/common/collect/CompactHashing.tableSet:(Ljava/lang/Object;II)V
      29: aload_0
      30: invokespecial #5                  // Method requireTable:()Ljava/lang/Object;
      33: astore        7
      35: aload_0
      36: invokespecial #4                  // Method requireEntries:()[I
      39: astore        8
      41: iconst_0
      42: istore        9
      44: iload         9
      46: iload_1
      47: if_icmpgt     144
      50: aload         7
      52: iload         9
      54: invokestatic  #49                 // Method com/google/common/collect/CompactHashing.tableGet:(Ljava/lang/Object;I)I
      57: istore        10
      59: iload         10
      61: ifeq          138
      64: iload         10
      66: iconst_1
      67: isub
      68: istore        11
      70: aload         8
      72: iload         11
      74: iaload
      75: istore        12
      77: iload         12
      79: iload_1
      80: invokestatic  #53                 // Method com/google/common/collect/CompactHashing.getHashPrefix:(II)I
      83: iload         9
      85: ior
      86: istore        13
      88: iload         13
      90: iload         6
      92: iand
      93: istore        14
      95: aload         5
      97: iload         14
      99: invokestatic  #49                 // Method com/google/common/collect/CompactHashing.tableGet:(Ljava/lang/Object;I)I
     102: istore        15
     104: aload         5
     106: iload         14
     108: iload         10
     110: invokestatic  #52                 // Method com/google/common/collect/CompactHashing.tableSet:(Ljava/lang/Object;II)V
     113: aload         8
     115: iload         11
     117: iload         13
     119: iload         15
     121: iload         6
     123: invokestatic  #45                 // Method com/google/common/collect/CompactHashing.maskCombine:(III)I
     126: iastore
     127: iload         12
     129: iload_1
     130: invokestatic  #56                 // Method com/google/common/collect/CompactHashing.getNext:(II)I
     133: istore        10
     135: goto          59
     138: iinc          9, 1
     141: goto          44
     144: aload_0
     145: aload         5
     147: putfield      #24                 // Field table:Ljava/lang/Object;
     150: aload_0
     151: iload         6
     153: invokespecial #30                 // Method setHashTableMask:(I)V
     156: iload         6
     158: ireturn

  private int indexOf(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method needsAllocArrays:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_1
      10: invokestatic  #48                 // Method com/google/common/collect/Hashing.smearedHash:(Ljava/lang/Object;)I
      13: istore_2
      14: aload_0
      15: invokespecial #6                  // Method hashTableMask:()I
      18: istore_3
      19: aload_0
      20: invokespecial #5                  // Method requireTable:()Ljava/lang/Object;
      23: iload_2
      24: iload_3
      25: iand
      26: invokestatic  #49                 // Method com/google/common/collect/CompactHashing.tableGet:(Ljava/lang/Object;I)I
      29: istore        4
      31: iload         4
      33: ifne          38
      36: iconst_m1
      37: ireturn
      38: iload_2
      39: iload_3
      40: invokestatic  #53                 // Method com/google/common/collect/CompactHashing.getHashPrefix:(II)I
      43: istore        5
      45: iload         4
      47: iconst_1
      48: isub
      49: istore        6
      51: aload_0
      52: iload         6
      54: invokespecial #67                 // Method entry:(I)I
      57: istore        7
      59: iload         7
      61: iload_3
      62: invokestatic  #53                 // Method com/google/common/collect/CompactHashing.getHashPrefix:(II)I
      65: iload         5
      67: if_icmpne     86
      70: aload_1
      71: aload_0
      72: iload         6
      74: invokespecial #13                 // Method key:(I)Ljava/lang/Object;
      77: invokestatic  #54                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      80: ifeq          86
      83: iload         6
      85: ireturn
      86: iload         7
      88: iload_3
      89: invokestatic  #56                 // Method com/google/common/collect/CompactHashing.getNext:(II)I
      92: istore        4
      94: iload         4
      96: ifne          45
      99: iconst_m1
     100: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: ifnull        19
       9: aload_2
      10: aload_1
      11: invokeinterface #68,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: goto          33
      19: aload_0
      20: aload_1
      21: invokespecial #8                  // Method indexOf:(Ljava/lang/Object;)I
      24: iconst_m1
      25: if_icmpeq     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: ifnull        17
       9: aload_2
      10: aload_1
      11: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: aload_0
      18: aload_1
      19: invokespecial #8                  // Method indexOf:(Ljava/lang/Object;)I
      22: istore_3
      23: iload_3
      24: iconst_m1
      25: if_icmpne     30
      28: aconst_null
      29: areturn
      30: aload_0
      31: iload_3
      32: invokevirtual #55                 // Method accessEntry:(I)V
      35: aload_0
      36: iload_3
      37: invokespecial #7                  // Method value:(I)Ljava/lang/Object;
      40: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: ifnull        17
       9: aload_2
      10: aload_1
      11: invokeinterface #70,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: aload_0
      18: aload_1
      19: invokespecial #10                 // Method removeHelper:(Ljava/lang/Object;)Ljava/lang/Object;
      22: astore_3
      23: aload_3
      24: getstatic     #9                  // Field NOT_FOUND:Ljava/lang/Object;
      27: if_acmpne     34
      30: aconst_null
      31: goto          35
      34: aload_3
      35: areturn

  private java.lang.Object removeHelper(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method needsAllocArrays:()Z
       4: ifeq          11
       7: getstatic     #9                  // Field NOT_FOUND:Ljava/lang/Object;
      10: areturn
      11: aload_0
      12: invokespecial #6                  // Method hashTableMask:()I
      15: istore_2
      16: aload_1
      17: aconst_null
      18: iload_2
      19: aload_0
      20: invokespecial #5                  // Method requireTable:()Ljava/lang/Object;
      23: aload_0
      24: invokespecial #4                  // Method requireEntries:()[I
      27: aload_0
      28: invokespecial #12                 // Method requireKeys:()[Ljava/lang/Object;
      31: aconst_null
      32: invokestatic  #71                 // Method com/google/common/collect/CompactHashing.remove:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I
      35: istore_3
      36: iload_3
      37: iconst_m1
      38: if_icmpne     45
      41: getstatic     #9                  // Field NOT_FOUND:Ljava/lang/Object;
      44: areturn
      45: aload_0
      46: iload_3
      47: invokespecial #7                  // Method value:(I)Ljava/lang/Object;
      50: astore        4
      52: aload_0
      53: iload_3
      54: iload_2
      55: invokevirtual #72                 // Method moveLastEntry:(II)V
      58: aload_0
      59: dup
      60: getfield      #11                 // Field size:I
      63: iconst_1
      64: isub
      65: putfield      #11                 // Field size:I
      68: aload_0
      69: invokevirtual #42                 // Method incrementModCount:()V
      72: aload         4
      74: areturn

  void moveLastEntry(int, int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method requireTable:()Ljava/lang/Object;
       4: astore_3
       5: aload_0
       6: invokespecial #4                  // Method requireEntries:()[I
       9: astore        4
      11: aload_0
      12: invokespecial #12                 // Method requireKeys:()[Ljava/lang/Object;
      15: astore        5
      17: aload_0
      18: invokespecial #3                  // Method requireValues:()[Ljava/lang/Object;
      21: astore        6
      23: aload_0
      24: invokevirtual #73                 // Method size:()I
      27: iconst_1
      28: isub
      29: istore        7
      31: iload_1
      32: iload         7
      34: if_icmpge     173
      37: aload         5
      39: iload         7
      41: aaload
      42: astore        8
      44: aload         5
      46: iload_1
      47: aload         8
      49: aastore
      50: aload         6
      52: iload_1
      53: aload         6
      55: iload         7
      57: aaload
      58: aastore
      59: aload         5
      61: iload         7
      63: aconst_null
      64: aastore
      65: aload         6
      67: iload         7
      69: aconst_null
      70: aastore
      71: aload         4
      73: iload_1
      74: aload         4
      76: iload         7
      78: iaload
      79: iastore
      80: aload         4
      82: iload         7
      84: iconst_0
      85: iastore
      86: aload         8
      88: invokestatic  #48                 // Method com/google/common/collect/Hashing.smearedHash:(Ljava/lang/Object;)I
      91: iload_2
      92: iand
      93: istore        9
      95: aload_3
      96: iload         9
      98: invokestatic  #49                 // Method com/google/common/collect/CompactHashing.tableGet:(Ljava/lang/Object;I)I
     101: istore        10
     103: iload         7
     105: iconst_1
     106: iadd
     107: istore        11
     109: iload         10
     111: iload         11
     113: if_icmpne     128
     116: aload_3
     117: iload         9
     119: iload_1
     120: iconst_1
     121: iadd
     122: invokestatic  #52                 // Method com/google/common/collect/CompactHashing.tableSet:(Ljava/lang/Object;II)V
     125: goto          170
     128: iload         10
     130: iconst_1
     131: isub
     132: istore        12
     134: aload         4
     136: iload         12
     138: iaload
     139: istore        13
     141: iload         13
     143: iload_2
     144: invokestatic  #56                 // Method com/google/common/collect/CompactHashing.getNext:(II)I
     147: istore        10
     149: iload         10
     151: iload         11
     153: if_icmpne     128
     156: aload         4
     158: iload         12
     160: iload         13
     162: iload_1
     163: iconst_1
     164: iadd
     165: iload_2
     166: invokestatic  #45                 // Method com/google/common/collect/CompactHashing.maskCombine:(III)I
     169: iastore
     170: goto          188
     173: aload         5
     175: iload_1
     176: aconst_null
     177: aastore
     178: aload         6
     180: iload_1
     181: aconst_null
     182: aastore
     183: aload         4
     185: iload_1
     186: iconst_0
     187: iastore
     188: return

  int firstEntryIndex();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method isEmpty:()Z
       4: ifeq          11
       7: iconst_m1
       8: goto          12
      11: iconst_0
      12: ireturn

  int getSuccessor(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: aload_0
       4: getfield      #11                 // Field size:I
       7: if_icmpge     16
      10: iload_1
      11: iconst_1
      12: iadd
      13: goto          17
      16: iconst_m1
      17: ireturn

  int adjustAfterRemove(int, int);
    Code:
       0: iload_1
       1: iconst_1
       2: isub
       3: ireturn

  public void replaceAll(java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    Code:
       0: aload_1
       1: invokestatic  #75                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
       9: astore_2
      10: aload_2
      11: ifnull        24
      14: aload_2
      15: aload_1
      16: invokeinterface #76,  2           // InterfaceMethod java/util/Map.replaceAll:(Ljava/util/function/BiFunction;)V
      21: goto          61
      24: iconst_0
      25: istore_3
      26: iload_3
      27: aload_0
      28: getfield      #11                 // Field size:I
      31: if_icmpge     61
      34: aload_0
      35: iload_3
      36: aload_1
      37: aload_0
      38: iload_3
      39: invokespecial #13                 // Method key:(I)Ljava/lang/Object;
      42: aload_0
      43: iload_3
      44: invokespecial #7                  // Method value:(I)Ljava/lang/Object;
      47: invokeinterface #77,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: invokespecial #2                  // Method setValue:(ILjava/lang/Object;)V
      55: iinc          3, 1
      58: goto          26
      61: return

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #78                 // Field keySetView:Ljava/util/Set;
       4: ifnonnull     19
       7: aload_0
       8: aload_0
       9: invokevirtual #79                 // Method createKeySet:()Ljava/util/Set;
      12: dup_x1
      13: putfield      #78                 // Field keySetView:Ljava/util/Set;
      16: goto          23
      19: aload_0
      20: getfield      #78                 // Field keySetView:Ljava/util/Set;
      23: areturn

  java.util.Set<K> createKeySet();
    Code:
       0: new           #80                 // class com/google/common/collect/CompactHashMap$KeySetView
       3: dup
       4: aload_0
       5: invokespecial #81                 // Method com/google/common/collect/CompactHashMap$KeySetView."<init>":(Lcom/google/common/collect/CompactHashMap;)V
       8: areturn

  java.util.Iterator<K> keySetIterator();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: ifnull        21
       9: aload_1
      10: invokeinterface #82,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      15: invokeinterface #83,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: areturn
      21: new           #84                 // class com/google/common/collect/CompactHashMap$1
      24: dup
      25: aload_0
      26: invokespecial #85                 // Method com/google/common/collect/CompactHashMap$1."<init>":(Lcom/google/common/collect/CompactHashMap;)V
      29: areturn

  public void forEach(java.util.function.BiConsumer<? super K, ? super V>);
    Code:
       0: aload_1
       1: invokestatic  #75                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
       9: astore_2
      10: aload_2
      11: ifnull        24
      14: aload_2
      15: aload_1
      16: invokeinterface #86,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      21: goto          58
      24: aload_0
      25: invokevirtual #39                 // Method firstEntryIndex:()I
      28: istore_3
      29: iload_3
      30: iflt          58
      33: aload_1
      34: aload_0
      35: iload_3
      36: invokespecial #13                 // Method key:(I)Ljava/lang/Object;
      39: aload_0
      40: iload_3
      41: invokespecial #7                  // Method value:(I)Ljava/lang/Object;
      44: invokeinterface #87,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      49: aload_0
      50: iload_3
      51: invokevirtual #41                 // Method getSuccessor:(I)I
      54: istore_3
      55: goto          29
      58: return

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #88                 // Field entrySetView:Ljava/util/Set;
       4: ifnonnull     19
       7: aload_0
       8: aload_0
       9: invokevirtual #89                 // Method createEntrySet:()Ljava/util/Set;
      12: dup_x1
      13: putfield      #88                 // Field entrySetView:Ljava/util/Set;
      16: goto          23
      19: aload_0
      20: getfield      #88                 // Field entrySetView:Ljava/util/Set;
      23: areturn

  java.util.Set<java.util.Map$Entry<K, V>> createEntrySet();
    Code:
       0: new           #90                 // class com/google/common/collect/CompactHashMap$EntrySetView
       3: dup
       4: aload_0
       5: invokespecial #91                 // Method com/google/common/collect/CompactHashMap$EntrySetView."<init>":(Lcom/google/common/collect/CompactHashMap;)V
       8: areturn

  java.util.Iterator<java.util.Map$Entry<K, V>> entrySetIterator();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: ifnull        21
       9: aload_1
      10: invokeinterface #92,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      15: invokeinterface #83,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: areturn
      21: new           #93                 // class com/google/common/collect/CompactHashMap$2
      24: dup
      25: aload_0
      26: invokespecial #94                 // Method com/google/common/collect/CompactHashMap$2."<init>":(Lcom/google/common/collect/CompactHashMap;)V
      29: areturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: invokeinterface #95,  1           // InterfaceMethod java/util/Map.size:()I
      15: goto          22
      18: aload_0
      19: getfield      #11                 // Field size:I
      22: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method size:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: ifnull        17
       9: aload_2
      10: aload_1
      11: invokeinterface #96,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      16: ireturn
      17: iconst_0
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #11                 // Field size:I
      24: if_icmpge     47
      27: aload_1
      28: aload_0
      29: iload_3
      30: invokespecial #7                  // Method value:(I)Ljava/lang/Object;
      33: invokestatic  #54                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: iinc          3, 1
      44: goto          19
      47: iconst_0
      48: ireturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #97                 // Field valuesView:Ljava/util/Collection;
       4: ifnonnull     19
       7: aload_0
       8: aload_0
       9: invokevirtual #98                 // Method createValues:()Ljava/util/Collection;
      12: dup_x1
      13: putfield      #97                 // Field valuesView:Ljava/util/Collection;
      16: goto          23
      19: aload_0
      20: getfield      #97                 // Field valuesView:Ljava/util/Collection;
      23: areturn

  java.util.Collection<V> createValues();
    Code:
       0: new           #99                 // class com/google/common/collect/CompactHashMap$ValuesView
       3: dup
       4: aload_0
       5: invokespecial #100                // Method com/google/common/collect/CompactHashMap$ValuesView."<init>":(Lcom/google/common/collect/CompactHashMap;)V
       8: areturn

  java.util.Iterator<V> valuesIterator();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: ifnull        21
       9: aload_1
      10: invokeinterface #101,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      15: invokeinterface #102,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: areturn
      21: new           #103                // class com/google/common/collect/CompactHashMap$3
      24: dup
      25: aload_0
      26: invokespecial #104                // Method com/google/common/collect/CompactHashMap$3."<init>":(Lcom/google/common/collect/CompactHashMap;)V
      29: areturn

  public void trimToSize();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method needsAllocArrays:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
      12: astore_1
      13: aload_1
      14: ifnull        39
      17: aload_0
      18: aload_0
      19: invokevirtual #73                 // Method size:()I
      22: invokevirtual #38                 // Method createHashFloodingResistantDelegate:(I)Ljava/util/Map;
      25: astore_2
      26: aload_2
      27: aload_1
      28: invokeinterface #105,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      33: aload_0
      34: aload_2
      35: putfield      #24                 // Field table:Ljava/lang/Object;
      38: return
      39: aload_0
      40: getfield      #11                 // Field size:I
      43: istore_2
      44: iload_2
      45: aload_0
      46: invokespecial #4                  // Method requireEntries:()[I
      49: arraylength
      50: if_icmpge     58
      53: aload_0
      54: iload_2
      55: invokevirtual #64                 // Method resizeEntries:(I)V
      58: iload_2
      59: invokestatic  #28                 // Method com/google/common/collect/CompactHashing.tableSize:(I)I
      62: istore_3
      63: aload_0
      64: invokespecial #6                  // Method hashTableMask:()I
      67: istore        4
      69: iload_3
      70: iload         4
      72: if_icmpge     85
      75: aload_0
      76: iload         4
      78: iload_3
      79: iconst_0
      80: iconst_0
      81: invokespecial #51                 // Method resizeTable:(IIII)I
      84: pop
      85: return

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method needsAllocArrays:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #42                 // Method incrementModCount:()V
      12: aload_0
      13: invokevirtual #47                 // Method delegateOrNull:()Ljava/util/Map;
      16: astore_1
      17: aload_1
      18: ifnull        54
      21: aload_0
      22: aload_0
      23: invokevirtual #73                 // Method size:()I
      26: iconst_3
      27: ldc           #22                 // int 1073741823
      29: invokestatic  #23                 // Method com/google/common/primitives/Ints.constrainToRange:(III)I
      32: putfield      #14                 // Field metadata:I
      35: aload_1
      36: invokeinterface #106,  1          // InterfaceMethod java/util/Map.clear:()V
      41: aload_0
      42: aconst_null
      43: putfield      #24                 // Field table:Ljava/lang/Object;
      46: aload_0
      47: iconst_0
      48: putfield      #11                 // Field size:I
      51: goto          105
      54: aload_0
      55: invokespecial #12                 // Method requireKeys:()[Ljava/lang/Object;
      58: iconst_0
      59: aload_0
      60: getfield      #11                 // Field size:I
      63: aconst_null
      64: invokestatic  #107                // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
      67: aload_0
      68: invokespecial #3                  // Method requireValues:()[Ljava/lang/Object;
      71: iconst_0
      72: aload_0
      73: getfield      #11                 // Field size:I
      76: aconst_null
      77: invokestatic  #107                // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
      80: aload_0
      81: invokespecial #5                  // Method requireTable:()Ljava/lang/Object;
      84: invokestatic  #108                // Method com/google/common/collect/CompactHashing.tableClear:(Ljava/lang/Object;)V
      87: aload_0
      88: invokespecial #4                  // Method requireEntries:()[I
      91: iconst_0
      92: aload_0
      93: getfield      #11                 // Field size:I
      96: iconst_0
      97: invokestatic  #109                // Method java/util/Arrays.fill:([IIII)V
     100: aload_0
     101: iconst_0
     102: putfield      #11                 // Field size:I
     105: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #110                // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #73                 // Method size:()I
       9: invokevirtual #111                // Method java/io/ObjectOutputStream.writeInt:(I)V
      12: aload_0
      13: invokevirtual #112                // Method entrySetIterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          59
      26: aload_2
      27: invokeinterface #114,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #115                // class java/util/Map$Entry
      35: astore_3
      36: aload_1
      37: aload_3
      38: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      43: invokevirtual #117                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      46: aload_1
      47: aload_3
      48: invokeinterface #118,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      53: invokevirtual #117                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      56: goto          17
      59: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #119                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_1
       5: invokevirtual #120                // Method java/io/ObjectInputStream.readInt:()I
       8: istore_2
       9: iload_2
      10: ifge          43
      13: new           #121                // class java/io/InvalidObjectException
      16: dup
      17: bipush        25
      19: new           #122                // class java/lang/StringBuilder
      22: dup_x1
      23: swap
      24: invokespecial #123                // Method java/lang/StringBuilder."<init>":(I)V
      27: ldc           #124                // String Invalid size:
      29: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_2
      33: invokevirtual #126                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: invokevirtual #127                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #128                // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: iload_2
      45: invokevirtual #19                 // Method init:(I)V
      48: iconst_0
      49: istore_3
      50: iload_3
      51: iload_2
      52: if_icmpge     82
      55: aload_1
      56: invokevirtual #129                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      59: astore        4
      61: aload_1
      62: invokevirtual #129                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      65: astore        5
      67: aload_0
      68: aload         4
      70: aload         5
      72: invokevirtual #130                // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: iinc          3, 1
      79: goto          50
      82: return

  private java.lang.Object requireTable();
    Code:
       0: aload_0
       1: getfield      #24                 // Field table:Ljava/lang/Object;
       4: invokestatic  #131                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  private int[] requireEntries();
    Code:
       0: aload_0
       1: getfield      #31                 // Field entries:[I
       4: invokestatic  #131                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #132                // class "[I"
      10: areturn

  private java.lang.Object[] requireKeys();
    Code:
       0: aload_0
       1: getfield      #33                 // Field keys:[Ljava/lang/Object;
       4: invokestatic  #131                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #133                // class "[Ljava/lang/Object;"
      10: areturn

  private java.lang.Object[] requireValues();
    Code:
       0: aload_0
       1: getfield      #34                 // Field values:[Ljava/lang/Object;
       4: invokestatic  #131                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #133                // class "[Ljava/lang/Object;"
      10: areturn

  private K key(int);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method requireKeys:()[Ljava/lang/Object;
       4: iload_1
       5: aaload
       6: areturn

  private V value(int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method requireValues:()[Ljava/lang/Object;
       4: iload_1
       5: aaload
       6: areturn

  private int entry(int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method requireEntries:()[I
       4: iload_1
       5: iaload
       6: ireturn

  private void setKey(int, K);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method requireKeys:()[Ljava/lang/Object;
       4: iload_1
       5: aload_2
       6: aastore
       7: return

  private void setValue(int, V);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method requireValues:()[Ljava/lang/Object;
       4: iload_1
       5: aload_2
       6: aastore
       7: return

  private void setEntry(int, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method requireEntries:()[I
       4: iload_1
       5: iload_2
       6: iastore
       7: return

  static int access$000(com.google.common.collect.CompactHashMap);
    Code:
       0: aload_0
       1: getfield      #14                 // Field metadata:I
       4: ireturn

  static java.lang.Object access$100(com.google.common.collect.CompactHashMap, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #13                 // Method key:(I)Ljava/lang/Object;
       5: areturn

  static java.lang.Object[] access$200(com.google.common.collect.CompactHashMap);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method requireKeys:()[Ljava/lang/Object;
       4: areturn

  static int access$300(com.google.common.collect.CompactHashMap);
    Code:
       0: aload_0
       1: getfield      #11                 // Field size:I
       4: ireturn

  static java.lang.Object access$400(com.google.common.collect.CompactHashMap, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method removeHelper:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  static java.lang.Object access$500();
    Code:
       0: getstatic     #9                  // Field NOT_FOUND:Ljava/lang/Object;
       3: areturn

  static int access$700(com.google.common.collect.CompactHashMap, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method indexOf:(Ljava/lang/Object;)I
       5: ireturn

  static java.lang.Object access$800(com.google.common.collect.CompactHashMap, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #7                  // Method value:(I)Ljava/lang/Object;
       5: areturn

  static int access$900(com.google.common.collect.CompactHashMap);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method hashTableMask:()I
       4: ireturn

  static java.lang.Object access$1000(com.google.common.collect.CompactHashMap);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method requireTable:()Ljava/lang/Object;
       4: areturn

  static int[] access$1100(com.google.common.collect.CompactHashMap);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method requireEntries:()[I
       4: areturn

  static java.lang.Object[] access$1200(com.google.common.collect.CompactHashMap);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method requireValues:()[Ljava/lang/Object;
       4: areturn

  static int access$310(com.google.common.collect.CompactHashMap);
    Code:
       0: aload_0
       1: dup
       2: getfield      #11                 // Field size:I
       5: dup_x1
       6: iconst_1
       7: isub
       8: putfield      #11                 // Field size:I
      11: ireturn

  static void access$1300(com.google.common.collect.CompactHashMap, int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #2                  // Method setValue:(ILjava/lang/Object;)V
       6: return

  static {};
    Code:
       0: new           #32                 // class java/lang/Object
       3: dup
       4: invokespecial #134                // Method java/lang/Object."<init>":()V
       7: putstatic     #9                  // Field NOT_FOUND:Ljava/lang/Object;
      10: return
}
