Compiled from "ExecutionSequencer.java"
final class com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor extends java.util.concurrent.atomic.AtomicReference<com.google.common.util.concurrent.ExecutionSequencer$RunningState> implements java.util.concurrent.Executor, java.lang.Runnable {
  com.google.common.util.concurrent.ExecutionSequencer sequencer;

  java.util.concurrent.Executor delegate;

  java.lang.Runnable task;

  java.lang.Thread submitting;

  private com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor(java.util.concurrent.Executor, com.google.common.util.concurrent.ExecutionSequencer);
    Code:
       0: aload_0
       1: getstatic     #4                  // Field com/google/common/util/concurrent/ExecutionSequencer$RunningState.NOT_RUN:Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;
       4: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
       7: aload_0
       8: aload_1
       9: putfield      #6                  // Field delegate:Ljava/util/concurrent/Executor;
      12: aload_0
      13: aload_2
      14: putfield      #7                  // Field sequencer:Lcom/google/common/util/concurrent/ExecutionSequencer;
      17: return

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method get:()Ljava/lang/Object;
       4: getstatic     #9                  // Field com/google/common/util/concurrent/ExecutionSequencer$RunningState.CANCELLED:Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;
       7: if_acmpne     21
      10: aload_0
      11: aconst_null
      12: putfield      #6                  // Field delegate:Ljava/util/concurrent/Executor;
      15: aload_0
      16: aconst_null
      17: putfield      #7                  // Field sequencer:Lcom/google/common/util/concurrent/ExecutionSequencer;
      20: return
      21: aload_0
      22: invokestatic  #10                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      25: putfield      #11                 // Field submitting:Ljava/lang/Thread;
      28: aload_0
      29: getfield      #7                  // Field sequencer:Lcom/google/common/util/concurrent/ExecutionSequencer;
      32: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #13                 // class com/google/common/util/concurrent/ExecutionSequencer
      38: invokestatic  #14                 // Method com/google/common/util/concurrent/ExecutionSequencer.access$400:(Lcom/google/common/util/concurrent/ExecutionSequencer;)Lcom/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue;
      41: astore_2
      42: aload_2
      43: getfield      #15                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.thread:Ljava/lang/Thread;
      46: aload_0
      47: getfield      #11                 // Field submitting:Ljava/lang/Thread;
      50: if_acmpne     100
      53: aload_0
      54: aconst_null
      55: putfield      #7                  // Field sequencer:Lcom/google/common/util/concurrent/ExecutionSequencer;
      58: aload_2
      59: getfield      #16                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextTask:Ljava/lang/Runnable;
      62: ifnonnull     69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: invokestatic  #17                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      73: aload_2
      74: aload_1
      75: putfield      #16                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextTask:Ljava/lang/Runnable;
      78: aload_2
      79: aload_0
      80: getfield      #6                  // Field delegate:Ljava/util/concurrent/Executor;
      83: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      86: checkcast     #18                 // class java/util/concurrent/Executor
      89: putfield      #19                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextExecutor:Ljava/util/concurrent/Executor;
      92: aload_0
      93: aconst_null
      94: putfield      #6                  // Field delegate:Ljava/util/concurrent/Executor;
      97: goto          128
     100: aload_0
     101: getfield      #6                  // Field delegate:Ljava/util/concurrent/Executor;
     104: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     107: checkcast     #18                 // class java/util/concurrent/Executor
     110: astore_3
     111: aload_0
     112: aconst_null
     113: putfield      #6                  // Field delegate:Ljava/util/concurrent/Executor;
     116: aload_0
     117: aload_1
     118: putfield      #20                 // Field task:Ljava/lang/Runnable;
     121: aload_3
     122: aload_0
     123: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     128: aload_0
     129: aconst_null
     130: putfield      #11                 // Field submitting:Ljava/lang/Thread;
     133: goto          146
     136: astore        4
     138: aload_0
     139: aconst_null
     140: putfield      #11                 // Field submitting:Ljava/lang/Thread;
     143: aload         4
     145: athrow
     146: return
    Exception table:
       from    to  target type
          28   128   136   any
         136   138   136   any

  public void run();
    Code:
       0: invokestatic  #10                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_1
       5: aload_0
       6: getfield      #11                 // Field submitting:Ljava/lang/Thread;
       9: if_acmpeq     35
      12: aload_0
      13: getfield      #20                 // Field task:Ljava/lang/Runnable;
      16: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #22                 // class java/lang/Runnable
      22: astore_2
      23: aload_0
      24: aconst_null
      25: putfield      #20                 // Field task:Ljava/lang/Runnable;
      28: aload_2
      29: invokeinterface #23,  1           // InterfaceMethod java/lang/Runnable.run:()V
      34: return
      35: new           #24                 // class com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue
      38: dup
      39: aconst_null
      40: invokespecial #25                 // Method com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue."<init>":(Lcom/google/common/util/concurrent/ExecutionSequencer$1;)V
      43: astore_2
      44: aload_2
      45: aload_1
      46: putfield      #15                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.thread:Ljava/lang/Thread;
      49: aload_0
      50: getfield      #7                  // Field sequencer:Lcom/google/common/util/concurrent/ExecutionSequencer;
      53: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #13                 // class com/google/common/util/concurrent/ExecutionSequencer
      59: aload_2
      60: invokestatic  #26                 // Method com/google/common/util/concurrent/ExecutionSequencer.access$402:(Lcom/google/common/util/concurrent/ExecutionSequencer;Lcom/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue;)Lcom/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue;
      63: pop
      64: aload_0
      65: aconst_null
      66: putfield      #7                  // Field sequencer:Lcom/google/common/util/concurrent/ExecutionSequencer;
      69: aload_0
      70: getfield      #20                 // Field task:Ljava/lang/Runnable;
      73: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      76: checkcast     #22                 // class java/lang/Runnable
      79: astore_3
      80: aload_0
      81: aconst_null
      82: putfield      #20                 // Field task:Ljava/lang/Runnable;
      85: aload_3
      86: invokeinterface #23,  1           // InterfaceMethod java/lang/Runnable.run:()V
      91: aload_2
      92: getfield      #16                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextTask:Ljava/lang/Runnable;
      95: dup
      96: astore        4
      98: ifnull        105
     101: iconst_1
     102: goto          106
     105: iconst_0
     106: aload_2
     107: getfield      #19                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextExecutor:Ljava/util/concurrent/Executor;
     110: dup
     111: astore        5
     113: ifnull        120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: iand
     122: ifeq          147
     125: aload_2
     126: aconst_null
     127: putfield      #16                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextTask:Ljava/lang/Runnable;
     130: aload_2
     131: aconst_null
     132: putfield      #19                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextExecutor:Ljava/util/concurrent/Executor;
     135: aload         5
     137: aload         4
     139: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     144: goto          91
     147: aload_2
     148: aconst_null
     149: putfield      #15                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.thread:Ljava/lang/Thread;
     152: goto          165
     155: astore        6
     157: aload_2
     158: aconst_null
     159: putfield      #15                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.thread:Ljava/lang/Thread;
     162: aload         6
     164: athrow
     165: return
    Exception table:
       from    to  target type
          69   147   155   any
         155   157   155   any

  private boolean trySetStarted();
    Code:
       0: aload_0
       1: getstatic     #4                  // Field com/google/common/util/concurrent/ExecutionSequencer$RunningState.NOT_RUN:Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;
       4: getstatic     #27                 // Field com/google/common/util/concurrent/ExecutionSequencer$RunningState.STARTED:Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;
       7: invokevirtual #28                 // Method compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      10: ireturn

  private boolean trySetCancelled();
    Code:
       0: aload_0
       1: getstatic     #4                  // Field com/google/common/util/concurrent/ExecutionSequencer$RunningState.NOT_RUN:Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;
       4: getstatic     #9                  // Field com/google/common/util/concurrent/ExecutionSequencer$RunningState.CANCELLED:Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;
       7: invokevirtual #28                 // Method compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      10: ireturn

  com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor(java.util.concurrent.Executor, com.google.common.util.concurrent.ExecutionSequencer, com.google.common.util.concurrent.ExecutionSequencer$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method "<init>":(Ljava/util/concurrent/Executor;Lcom/google/common/util/concurrent/ExecutionSequencer;)V
       6: return

  static boolean access$200(com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method trySetStarted:()Z
       4: ireturn

  static boolean access$300(com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method trySetCancelled:()Z
       4: ireturn
}
