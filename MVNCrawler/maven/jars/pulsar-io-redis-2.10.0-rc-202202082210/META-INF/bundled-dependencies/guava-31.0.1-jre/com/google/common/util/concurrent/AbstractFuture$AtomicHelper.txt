Compiled from "AbstractFuture.java"
abstract class com.google.common.util.concurrent.AbstractFuture$AtomicHelper {
  private com.google.common.util.concurrent.AbstractFuture$AtomicHelper();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  abstract void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter, java.lang.Thread);

  abstract void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter);

  abstract boolean casWaiters(com.google.common.util.concurrent.AbstractFuture<?>, com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter);

  abstract boolean casListeners(com.google.common.util.concurrent.AbstractFuture<?>, com.google.common.util.concurrent.AbstractFuture$Listener, com.google.common.util.concurrent.AbstractFuture$Listener);

  abstract boolean casValue(com.google.common.util.concurrent.AbstractFuture<?>, java.lang.Object, java.lang.Object);

  com.google.common.util.concurrent.AbstractFuture$AtomicHelper(com.google.common.util.concurrent.AbstractFuture$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
