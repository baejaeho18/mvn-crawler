Compiled from "Histogram.java"
public class io.prometheus.client.Histogram$Builder extends io.prometheus.client.SimpleCollector$Builder<io.prometheus.client.Histogram$Builder, io.prometheus.client.Histogram> {
  private double[] buckets;

  public io.prometheus.client.Histogram$Builder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/prometheus/client/SimpleCollector$Builder."<init>":()V
       4: aload_0
       5: bipush        14
       7: newarray       double
       9: dup
      10: iconst_0
      11: ldc2_w        #3                  // double 0.005d
      14: dastore
      15: dup
      16: iconst_1
      17: ldc2_w        #5                  // double 0.01d
      20: dastore
      21: dup
      22: iconst_2
      23: ldc2_w        #7                  // double 0.025d
      26: dastore
      27: dup
      28: iconst_3
      29: ldc2_w        #9                  // double 0.05d
      32: dastore
      33: dup
      34: iconst_4
      35: ldc2_w        #11                 // double 0.075d
      38: dastore
      39: dup
      40: iconst_5
      41: ldc2_w        #13                 // double 0.1d
      44: dastore
      45: dup
      46: bipush        6
      48: ldc2_w        #15                 // double 0.25d
      51: dastore
      52: dup
      53: bipush        7
      55: ldc2_w        #17                 // double 0.5d
      58: dastore
      59: dup
      60: bipush        8
      62: ldc2_w        #19                 // double 0.75d
      65: dastore
      66: dup
      67: bipush        9
      69: dconst_1
      70: dastore
      71: dup
      72: bipush        10
      74: ldc2_w        #21                 // double 2.5d
      77: dastore
      78: dup
      79: bipush        11
      81: ldc2_w        #23                 // double 5.0d
      84: dastore
      85: dup
      86: bipush        12
      88: ldc2_w        #25                 // double 7.5d
      91: dastore
      92: dup
      93: bipush        13
      95: ldc2_w        #27                 // double 10.0d
      98: dastore
      99: putfield      #1                  // Field buckets:[D
     102: return

  public io.prometheus.client.Histogram create();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #1                  // Field buckets:[D
       7: arraylength
       8: iconst_1
       9: isub
      10: if_icmpge     85
      13: aload_0
      14: getfield      #1                  // Field buckets:[D
      17: iload_1
      18: daload
      19: aload_0
      20: getfield      #1                  // Field buckets:[D
      23: iload_1
      24: iconst_1
      25: iadd
      26: daload
      27: dcmpl
      28: iflt          79
      31: new           #29                 // class java/lang/IllegalStateException
      34: dup
      35: new           #30                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #32                 // String Histogram buckets must be in increasing order:
      44: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: getfield      #1                  // Field buckets:[D
      51: iload_1
      52: daload
      53: invokevirtual #34                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      56: ldc           #35                 // String  >=
      58: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: getfield      #1                  // Field buckets:[D
      65: iload_1
      66: iconst_1
      67: iadd
      68: daload
      69: invokevirtual #34                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      72: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: iinc          1, 1
      82: goto          2
      85: aload_0
      86: getfield      #1                  // Field buckets:[D
      89: arraylength
      90: ifne          103
      93: new           #29                 // class java/lang/IllegalStateException
      96: dup
      97: ldc           #38                 // String Histogram must have at least one bucket.
      99: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: aload_0
     104: getfield      #39                 // Field labelNames:[Ljava/lang/String;
     107: astore_1
     108: aload_1
     109: arraylength
     110: istore_2
     111: iconst_0
     112: istore_3
     113: iload_3
     114: iload_2
     115: if_icmpge     149
     118: aload_1
     119: iload_3
     120: aaload
     121: astore        4
     123: aload         4
     125: ldc           #40                 // String le
     127: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     130: ifeq          143
     133: new           #29                 // class java/lang/IllegalStateException
     136: dup
     137: ldc           #42                 // String Histogram cannot have a label named \'le\'.
     139: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: iinc          3, 1
     146: goto          113
     149: aload_0
     150: getfield      #1                  // Field buckets:[D
     153: aload_0
     154: getfield      #1                  // Field buckets:[D
     157: arraylength
     158: iconst_1
     159: isub
     160: daload
     161: ldc2_w        #44                 // double Infinityd
     164: dcmpl
     165: ifeq          208
     168: aload_0
     169: getfield      #1                  // Field buckets:[D
     172: arraylength
     173: iconst_1
     174: iadd
     175: newarray       double
     177: astore_1
     178: aload_0
     179: getfield      #1                  // Field buckets:[D
     182: iconst_0
     183: aload_1
     184: iconst_0
     185: aload_0
     186: getfield      #1                  // Field buckets:[D
     189: arraylength
     190: invokestatic  #46                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     193: aload_1
     194: aload_0
     195: getfield      #1                  // Field buckets:[D
     198: arraylength
     199: ldc2_w        #44                 // double Infinityd
     202: dastore
     203: aload_0
     204: aload_1
     205: putfield      #1                  // Field buckets:[D
     208: aload_0
     209: iconst_1
     210: putfield      #47                 // Field dontInitializeNoLabelsChild:Z
     213: new           #48                 // class io/prometheus/client/Histogram
     216: dup
     217: aload_0
     218: invokespecial #49                 // Method io/prometheus/client/Histogram."<init>":(Lio/prometheus/client/Histogram$Builder;)V
     221: areturn

  public io.prometheus.client.Histogram$Builder buckets(double...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field buckets:[D
       5: aload_0
       6: areturn

  public io.prometheus.client.Histogram$Builder linearBuckets(double, double, int);
    Code:
       0: aload_0
       1: iload         5
       3: newarray       double
       5: putfield      #1                  // Field buckets:[D
       8: iconst_0
       9: istore        6
      11: iload         6
      13: iload         5
      15: if_icmpge     38
      18: aload_0
      19: getfield      #1                  // Field buckets:[D
      22: iload         6
      24: dload_1
      25: iload         6
      27: i2d
      28: dload_3
      29: dmul
      30: dadd
      31: dastore
      32: iinc          6, 1
      35: goto          11
      38: aload_0
      39: areturn

  public io.prometheus.client.Histogram$Builder exponentialBuckets(double, double, int);
    Code:
       0: aload_0
       1: iload         5
       3: newarray       double
       5: putfield      #1                  // Field buckets:[D
       8: iconst_0
       9: istore        6
      11: iload         6
      13: iload         5
      15: if_icmpge     40
      18: aload_0
      19: getfield      #1                  // Field buckets:[D
      22: iload         6
      24: dload_1
      25: dload_3
      26: iload         6
      28: i2d
      29: invokestatic  #50                 // Method java/lang/Math.pow:(DD)D
      32: dmul
      33: dastore
      34: iinc          6, 1
      37: goto          11
      40: aload_0
      41: areturn

  public io.prometheus.client.SimpleCollector create();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method create:()Lio/prometheus/client/Histogram;
       4: areturn

  static double[] access$000(io.prometheus.client.Histogram$Builder);
    Code:
       0: aload_0
       1: getfield      #1                  // Field buckets:[D
       4: areturn
}
