Compiled from "BatchMessageAcker.java"
public class org.apache.pulsar.client.impl.BatchMessageAcker {
  private final int batchSize;

  private final java.util.BitSet bitSet;

  private volatile boolean prevBatchCumulativelyAcked;

  private org.apache.pulsar.client.impl.BatchMessageAcker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field prevBatchCumulativelyAcked:Z
       9: aload_0
      10: new           #3                  // class java/util/BitSet
      13: dup
      14: invokespecial #4                  // Method java/util/BitSet."<init>":()V
      17: putfield      #5                  // Field bitSet:Ljava/util/BitSet;
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field batchSize:I
      25: return

  static org.apache.pulsar.client.impl.BatchMessageAcker newAcker(int);
    Code:
       0: new           #3                  // class java/util/BitSet
       3: dup
       4: iload_0
       5: invokespecial #7                  // Method java/util/BitSet."<init>":(I)V
       8: astore_1
       9: aload_1
      10: iconst_0
      11: iload_0
      12: invokevirtual #8                  // Method java/util/BitSet.set:(II)V
      15: new           #9                  // class org/apache/pulsar/client/impl/BatchMessageAcker
      18: dup
      19: aload_1
      20: iload_0
      21: invokespecial #10                 // Method "<init>":(Ljava/util/BitSet;I)V
      24: areturn

  static org.apache.pulsar.client.impl.BatchMessageAcker newAcker(java.util.BitSet);
    Code:
       0: new           #9                  // class org/apache/pulsar/client/impl/BatchMessageAcker
       3: dup
       4: aload_0
       5: iconst_m1
       6: invokespecial #10                 // Method "<init>":(Ljava/util/BitSet;I)V
       9: areturn

  org.apache.pulsar.client.impl.BatchMessageAcker(java.util.BitSet, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field prevBatchCumulativelyAcked:Z
       9: aload_0
      10: aload_1
      11: putfield      #5                  // Field bitSet:Ljava/util/BitSet;
      14: aload_0
      15: iload_2
      16: putfield      #6                  // Field batchSize:I
      19: return

  java.util.BitSet getBitSet();
    Code:
       0: aload_0
       1: getfield      #5                  // Field bitSet:Ljava/util/BitSet;
       4: areturn

  public synchronized int getBatchSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field batchSize:I
       4: ireturn

  public synchronized boolean ackIndividual(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field bitSet:Ljava/util/BitSet;
       4: iload_1
       5: invokevirtual #11                 // Method java/util/BitSet.clear:(I)V
       8: aload_0
       9: getfield      #5                  // Field bitSet:Ljava/util/BitSet;
      12: invokevirtual #12                 // Method java/util/BitSet.isEmpty:()Z
      15: ireturn

  public synchronized int getBitSetSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field bitSet:Ljava/util/BitSet;
       4: invokevirtual #13                 // Method java/util/BitSet.size:()I
       7: ireturn

  public synchronized boolean ackCumulative(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field bitSet:Ljava/util/BitSet;
       4: iconst_0
       5: iload_1
       6: iconst_1
       7: iadd
       8: invokevirtual #14                 // Method java/util/BitSet.clear:(II)V
      11: aload_0
      12: getfield      #5                  // Field bitSet:Ljava/util/BitSet;
      15: invokevirtual #12                 // Method java/util/BitSet.isEmpty:()Z
      18: ireturn

  public synchronized int getOutstandingAcks();
    Code:
       0: aload_0
       1: getfield      #5                  // Field bitSet:Ljava/util/BitSet;
       4: invokevirtual #15                 // Method java/util/BitSet.cardinality:()I
       7: ireturn

  public void setPrevBatchCumulativelyAcked(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field prevBatchCumulativelyAcked:Z
       5: return

  public boolean isPrevBatchCumulativelyAcked();
    Code:
       0: aload_0
       1: getfield      #2                  // Field prevBatchCumulativelyAcked:Z
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #18                 // String BatchMessageAcker{batchSize=
       9: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field batchSize:I
      16: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #21                 // String , bitSet=
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #5                  // Field bitSet:Ljava/util/BitSet;
      28: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #23                 // String , prevBatchCumulativelyAcked=
      33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #2                  // Field prevBatchCumulativelyAcked:Z
      40: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      43: bipush        125
      45: invokevirtual #25                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn
}
