Compiled from "TableViewImpl.java"
public class org.apache.pulsar.client.impl.TableViewImpl<T> implements org.apache.pulsar.client.api.TableView<T> {
  private static final org.slf4j.Logger log;

  private final org.apache.pulsar.client.impl.PulsarClientImpl client;

  private final org.apache.pulsar.client.api.Schema<T> schema;

  private final org.apache.pulsar.client.impl.TableViewConfigurationData conf;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, T> data;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.pulsar.client.api.Reader<T>> readers;

  private final java.util.List<java.util.function.BiConsumer<java.lang.String, T>> listeners;

  private final java.util.concurrent.locks.ReentrantLock listenersMutex;

  org.apache.pulsar.client.impl.TableViewImpl(org.apache.pulsar.client.impl.PulsarClientImpl, org.apache.pulsar.client.api.Schema<T>, org.apache.pulsar.client.impl.TableViewConfigurationData);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field client:Lorg/apache/pulsar/client/impl/PulsarClientImpl;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field schema:Lorg/apache/pulsar/client/api/Schema;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field conf:Lorg/apache/pulsar/client/impl/TableViewConfigurationData;
      19: aload_0
      20: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      23: dup
      24: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      27: putfield      #7                  // Field data:Ljava/util/concurrent/ConcurrentMap;
      30: aload_0
      31: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      34: dup
      35: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      38: putfield      #8                  // Field readers:Ljava/util/concurrent/ConcurrentMap;
      41: aload_0
      42: new           #9                  // class java/util/ArrayList
      45: dup
      46: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      49: putfield      #11                 // Field listeners:Ljava/util/List;
      52: aload_0
      53: new           #12                 // class java/util/concurrent/locks/ReentrantLock
      56: dup
      57: invokespecial #13                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      60: putfield      #14                 // Field listenersMutex:Ljava/util/concurrent/locks/ReentrantLock;
      63: return

  java.util.concurrent.CompletableFuture<org.apache.pulsar.client.api.TableView<T>> start();
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/pulsar/client/impl/PulsarClientImpl;
       4: aload_0
       5: getfield      #4                  // Field conf:Lorg/apache/pulsar/client/impl/TableViewConfigurationData;
       8: invokevirtual #15                 // Method org/apache/pulsar/client/impl/TableViewConfigurationData.getTopicName:()Ljava/lang/String;
      11: invokevirtual #16                 // Method org/apache/pulsar/client/impl/PulsarClientImpl.getPartitionsForTopic:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      14: aload_0
      15: invokedynamic #17,  0             // InvokeDynamic #0:apply:(Lorg/apache/pulsar/client/impl/TableViewImpl;)Ljava/util/function/Function;
      20: invokevirtual #18                 // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      23: aload_0
      24: invokedynamic #19,  0             // InvokeDynamic #1:apply:(Lorg/apache/pulsar/client/impl/TableViewImpl;)Ljava/util/function/Function;
      29: invokevirtual #20                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      32: areturn

  private void schedulePartitionsCheck();
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/pulsar/client/impl/PulsarClientImpl;
       4: invokevirtual #21                 // Method org/apache/pulsar/client/impl/PulsarClientImpl.timer:()Lio/netty/util/Timer;
       7: aload_0
       8: invokedynamic #22,  0             // InvokeDynamic #2:run:(Lorg/apache/pulsar/client/impl/TableViewImpl;)Lio/netty/util/TimerTask;
      13: aload_0
      14: getfield      #4                  // Field conf:Lorg/apache/pulsar/client/impl/TableViewConfigurationData;
      17: invokevirtual #23                 // Method org/apache/pulsar/client/impl/TableViewConfigurationData.getAutoUpdatePartitionsSeconds:()J
      20: getstatic     #24                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      23: invokeinterface #25,  5           // InterfaceMethod io/netty/util/Timer.newTimeout:(Lio/netty/util/TimerTask;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/Timeout;
      28: pop
      29: return

  private void checkForPartitionsChanges(io.netty.util.Timeout);
    Code:
       0: aload_1
       1: invokeinterface #26,  1           // InterfaceMethod io/netty/util/Timeout.isCancelled:()Z
       6: ifeq          10
       9: return
      10: aload_0
      11: invokevirtual #27                 // Method start:()Ljava/util/concurrent/CompletableFuture;
      14: invokedynamic #28,  0             // InvokeDynamic #3:accept:()Ljava/util/function/BiConsumer;
      19: invokevirtual #29                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      22: pop
      23: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #7                  // Field data:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field data:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field data:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public T get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field data:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, T>> entrySet();
    Code:
       0: aload_0
       1: getfield      #7                  // Field data:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       9: areturn

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: getfield      #7                  // Field data:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.Collection<T> values();
    Code:
       0: aload_0
       1: getfield      #7                  // Field data:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #36,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: areturn

  public void forEach(java.util.function.BiConsumer<java.lang.String, T>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field data:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.forEach:(Ljava/util/function/BiConsumer;)V
      10: return

  public void forEachAndListen(java.util.function.BiConsumer<java.lang.String, T>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field listenersMutex:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #39                 // Method forEach:(Ljava/util/function/BiConsumer;)V
      12: aload_0
      13: getfield      #11                 // Field listeners:Ljava/util/List;
      16: aload_1
      17: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: getfield      #14                 // Field listenersMutex:Ljava/util/concurrent/locks/ReentrantLock;
      27: invokevirtual #41                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      30: goto          43
      33: astore_2
      34: aload_0
      35: getfield      #14                 // Field listenersMutex:Ljava/util/concurrent/locks/ReentrantLock;
      38: invokevirtual #41                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      41: aload_2
      42: athrow
      43: return
    Exception table:
       from    to  target type
           0    23    33   any

  public java.util.concurrent.CompletableFuture<java.lang.Void> closeAsync();
    Code:
       0: aload_0
       1: getfield      #8                  // Field readers:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #36,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #43,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      19: invokeinterface #44,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      24: invokestatic  #45                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      27: invokeinterface #46,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      32: checkcast     #47                 // class java/util/List
      35: invokestatic  #48                 // Method org/apache/pulsar/common/util/FutureUtil.waitForAll:(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;
      38: areturn

  public void close() throws org.apache.pulsar.client.api.PulsarClientException;
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method closeAsync:()Ljava/util/concurrent/CompletableFuture;
       4: invokevirtual #50                 // Method java/util/concurrent/CompletableFuture.get:()Ljava/lang/Object;
       7: pop
       8: goto          17
      11: astore_1
      12: aload_1
      13: invokestatic  #52                 // Method org/apache/pulsar/client/api/PulsarClientException.unwrap:(Ljava/lang/Throwable;)Lorg/apache/pulsar/client/api/PulsarClientException;
      16: athrow
      17: return
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/Exception

  private void handleMessage(org.apache.pulsar.client.api.Message<T>);
    Code:
       0: aload_1
       1: invokeinterface #53,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.hasKey:()Z
       6: ifeq          180
       9: getstatic     #54                 // Field log:Lorg/slf4j/Logger;
      12: invokeinterface #55,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      17: ifeq          62
      20: getstatic     #54                 // Field log:Lorg/slf4j/Logger;
      23: ldc           #56                 // String Applying message from topic {}. key={} value={}
      25: iconst_3
      26: anewarray     #57                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_0
      32: getfield      #4                  // Field conf:Lorg/apache/pulsar/client/impl/TableViewConfigurationData;
      35: invokevirtual #15                 // Method org/apache/pulsar/client/impl/TableViewConfigurationData.getTopicName:()Ljava/lang/String;
      38: aastore
      39: dup
      40: iconst_1
      41: aload_1
      42: invokeinterface #58,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getKey:()Ljava/lang/String;
      47: aastore
      48: dup
      49: iconst_2
      50: aload_1
      51: invokeinterface #59,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getValue:()Ljava/lang/Object;
      56: aastore
      57: invokeinterface #60,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      62: aload_0
      63: getfield      #14                 // Field listenersMutex:Ljava/util/concurrent/locks/ReentrantLock;
      66: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      69: aload_0
      70: getfield      #7                  // Field data:Ljava/util/concurrent/ConcurrentMap;
      73: aload_1
      74: invokeinterface #58,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getKey:()Ljava/lang/String;
      79: aload_1
      80: invokeinterface #59,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getValue:()Ljava/lang/Object;
      85: invokeinterface #61,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: aload_0
      92: getfield      #11                 // Field listeners:Ljava/util/List;
      95: invokeinterface #62,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     100: astore_2
     101: aload_2
     102: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     107: ifeq          158
     110: aload_2
     111: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     116: checkcast     #65                 // class java/util/function/BiConsumer
     119: astore_3
     120: aload_3
     121: aload_1
     122: invokeinterface #58,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getKey:()Ljava/lang/String;
     127: aload_1
     128: invokeinterface #59,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getValue:()Ljava/lang/Object;
     133: invokeinterface #66,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
     138: goto          155
     141: astore        4
     143: getstatic     #54                 // Field log:Lorg/slf4j/Logger;
     146: ldc           #68                 // String Table view listener raised an exception
     148: aload         4
     150: invokeinterface #69,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     155: goto          101
     158: aload_0
     159: getfield      #14                 // Field listenersMutex:Ljava/util/concurrent/locks/ReentrantLock;
     162: invokevirtual #41                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     165: goto          180
     168: astore        5
     170: aload_0
     171: getfield      #14                 // Field listenersMutex:Ljava/util/concurrent/locks/ReentrantLock;
     174: invokevirtual #41                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     177: aload         5
     179: athrow
     180: aload_1
     181: invokeinterface #70,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.release:()V
     186: goto          200
     189: astore        6
     191: aload_1
     192: invokeinterface #70,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.release:()V
     197: aload         6
     199: athrow
     200: return
    Exception table:
       from    to  target type
         120   138   141   Class java/lang/Throwable
          62   158   168   any
         168   170   168   any
           0   180   189   any
         189   191   189   any

  private java.util.concurrent.CompletableFuture<org.apache.pulsar.client.api.Reader<T>> newReader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lorg/apache/pulsar/client/impl/PulsarClientImpl;
       4: aload_0
       5: getfield      #3                  // Field schema:Lorg/apache/pulsar/client/api/Schema;
       8: invokevirtual #71                 // Method org/apache/pulsar/client/impl/PulsarClientImpl.newReader:(Lorg/apache/pulsar/client/api/Schema;)Lorg/apache/pulsar/client/api/ReaderBuilder;
      11: aload_1
      12: invokeinterface #72,  2           // InterfaceMethod org/apache/pulsar/client/api/ReaderBuilder.topic:(Ljava/lang/String;)Lorg/apache/pulsar/client/api/ReaderBuilder;
      17: getstatic     #73                 // Field org/apache/pulsar/client/api/MessageId.earliest:Lorg/apache/pulsar/client/api/MessageId;
      20: invokeinterface #74,  2           // InterfaceMethod org/apache/pulsar/client/api/ReaderBuilder.startMessageId:(Lorg/apache/pulsar/client/api/MessageId;)Lorg/apache/pulsar/client/api/ReaderBuilder;
      25: iconst_1
      26: invokeinterface #75,  2           // InterfaceMethod org/apache/pulsar/client/api/ReaderBuilder.readCompacted:(Z)Lorg/apache/pulsar/client/api/ReaderBuilder;
      31: iconst_1
      32: invokeinterface #76,  2           // InterfaceMethod org/apache/pulsar/client/api/ReaderBuilder.poolMessages:(Z)Lorg/apache/pulsar/client/api/ReaderBuilder;
      37: invokeinterface #77,  1           // InterfaceMethod org/apache/pulsar/client/api/ReaderBuilder.createAsync:()Ljava/util/concurrent/CompletableFuture;
      42: aload_0
      43: invokedynamic #78,  0             // InvokeDynamic #5:apply:(Lorg/apache/pulsar/client/impl/TableViewImpl;)Ljava/util/function/Function;
      48: invokevirtual #18                 // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      51: areturn

  private java.util.concurrent.CompletableFuture<org.apache.pulsar.client.api.Reader<T>> readAllExistingMessages(org.apache.pulsar.client.api.Reader<T>);
    Code:
       0: invokestatic  #79                 // Method java/lang/System.nanoTime:()J
       3: lstore_2
       4: new           #80                 // class java/util/concurrent/atomic/AtomicLong
       7: dup
       8: invokespecial #81                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      11: astore        4
      13: new           #82                 // class java/util/concurrent/CompletableFuture
      16: dup
      17: invokespecial #83                 // Method java/util/concurrent/CompletableFuture."<init>":()V
      20: astore        5
      22: aload_0
      23: aload_1
      24: aload         5
      26: lload_2
      27: aload         4
      29: invokespecial #84                 // Method readAllExistingMessages:(Lorg/apache/pulsar/client/api/Reader;Ljava/util/concurrent/CompletableFuture;JLjava/util/concurrent/atomic/AtomicLong;)V
      32: aload         5
      34: areturn

  private void readAllExistingMessages(org.apache.pulsar.client.api.Reader<T>, java.util.concurrent.CompletableFuture<org.apache.pulsar.client.api.Reader<T>>, long, java.util.concurrent.atomic.AtomicLong);
    Code:
       0: aload_1
       1: invokeinterface #85,  1           // InterfaceMethod org/apache/pulsar/client/api/Reader.hasMessageAvailableAsync:()Ljava/util/concurrent/CompletableFuture;
       6: aload_0
       7: aload_1
       8: aload         5
      10: aload_2
      11: lload_3
      12: invokedynamic #86,  0             // InvokeDynamic #6:accept:(Lorg/apache/pulsar/client/impl/TableViewImpl;Lorg/apache/pulsar/client/api/Reader;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/CompletableFuture;J)Ljava/util/function/Consumer;
      17: invokevirtual #87                 // Method java/util/concurrent/CompletableFuture.thenAccept:(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
      20: pop
      21: return

  private void readTailMessages(org.apache.pulsar.client.api.Reader<T>);
    Code:
       0: aload_1
       1: invokeinterface #88,  1           // InterfaceMethod org/apache/pulsar/client/api/Reader.readNextAsync:()Ljava/util/concurrent/CompletableFuture;
       6: aload_0
       7: aload_1
       8: invokedynamic #89,  0             // InvokeDynamic #7:accept:(Lorg/apache/pulsar/client/impl/TableViewImpl;Lorg/apache/pulsar/client/api/Reader;)Ljava/util/function/Consumer;
      13: invokevirtual #87                 // Method java/util/concurrent/CompletableFuture.thenAccept:(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
      16: aload_1
      17: invokedynamic #90,  0             // InvokeDynamic #8:apply:(Lorg/apache/pulsar/client/api/Reader;)Ljava/util/function/Function;
      22: invokevirtual #91                 // Method java/util/concurrent/CompletableFuture.exceptionally:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      25: pop
      26: return

  private static java.lang.Void lambda$readTailMessages$11(org.apache.pulsar.client.api.Reader, java.lang.Throwable);
    Code:
       0: getstatic     #54                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #92                 // String Reader {} was interrupted
       5: aload_0
       6: invokeinterface #93,  1           // InterfaceMethod org/apache/pulsar/client/api/Reader.getTopic:()Ljava/lang/String;
      11: invokeinterface #94,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      16: aconst_null
      17: areturn

  private void lambda$readTailMessages$10(org.apache.pulsar.client.api.Reader, org.apache.pulsar.client.api.Message);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #95                 // Method handleMessage:(Lorg/apache/pulsar/client/api/Message;)V
       5: aload_0
       6: aload_1
       7: invokespecial #96                 // Method readTailMessages:(Lorg/apache/pulsar/client/api/Reader;)V
      10: return

  private void lambda$readAllExistingMessages$9(org.apache.pulsar.client.api.Reader, java.util.concurrent.atomic.AtomicLong, java.util.concurrent.CompletableFuture, long, java.lang.Boolean);
    Code:
       0: aload         6
       2: invokevirtual #97                 // Method java/lang/Boolean.booleanValue:()Z
       5: ifeq          41
       8: aload_1
       9: invokeinterface #88,  1           // InterfaceMethod org/apache/pulsar/client/api/Reader.readNextAsync:()Ljava/util/concurrent/CompletableFuture;
      14: aload_0
      15: aload_2
      16: aload_1
      17: aload_3
      18: lload         4
      20: invokedynamic #98,  0             // InvokeDynamic #9:accept:(Lorg/apache/pulsar/client/impl/TableViewImpl;Ljava/util/concurrent/atomic/AtomicLong;Lorg/apache/pulsar/client/api/Reader;Ljava/util/concurrent/CompletableFuture;J)Ljava/util/function/Consumer;
      25: invokevirtual #87                 // Method java/util/concurrent/CompletableFuture.thenAccept:(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
      28: aload_3
      29: invokedynamic #99,  0             // InvokeDynamic #10:apply:(Ljava/util/concurrent/CompletableFuture;)Ljava/util/function/Function;
      34: invokevirtual #91                 // Method java/util/concurrent/CompletableFuture.exceptionally:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      37: pop
      38: goto          110
      41: invokestatic  #79                 // Method java/lang/System.nanoTime:()J
      44: lstore        7
      46: getstatic     #100                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      49: lload         7
      51: lload         4
      53: lsub
      54: invokevirtual #101                // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      57: lstore        9
      59: getstatic     #54                 // Field log:Lorg/slf4j/Logger;
      62: ldc           #102                // String Started table view for topic {} - Replayed {} messages in {} seconds
      64: iconst_3
      65: anewarray     #57                 // class java/lang/Object
      68: dup
      69: iconst_0
      70: aload_1
      71: invokeinterface #93,  1           // InterfaceMethod org/apache/pulsar/client/api/Reader.getTopic:()Ljava/lang/String;
      76: aastore
      77: dup
      78: iconst_1
      79: aload_2
      80: aastore
      81: dup
      82: iconst_2
      83: lload         9
      85: l2d
      86: ldc2_w        #103                // double 1000.0d
      89: ddiv
      90: invokestatic  #105                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      93: aastore
      94: invokeinterface #106,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      99: aload_3
     100: aload_1
     101: invokevirtual #107                // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
     104: pop
     105: aload_0
     106: aload_1
     107: invokespecial #96                 // Method readTailMessages:(Lorg/apache/pulsar/client/api/Reader;)V
     110: return

  private static java.lang.Void lambda$null$8(java.util.concurrent.CompletableFuture, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #108                // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
       5: pop
       6: aconst_null
       7: areturn

  private void lambda$null$7(java.util.concurrent.atomic.AtomicLong, org.apache.pulsar.client.api.Reader, java.util.concurrent.CompletableFuture, long, org.apache.pulsar.client.api.Message);
    Code:
       0: aload_1
       1: invokevirtual #109                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       4: pop2
       5: aload_0
       6: aload         6
       8: invokespecial #95                 // Method handleMessage:(Lorg/apache/pulsar/client/api/Message;)V
      11: aload_0
      12: aload_2
      13: aload_3
      14: lload         4
      16: aload_1
      17: invokespecial #84                 // Method readAllExistingMessages:(Lorg/apache/pulsar/client/api/Reader;Ljava/util/concurrent/CompletableFuture;JLjava/util/concurrent/atomic/AtomicLong;)V
      20: return

  private static void lambda$checkForPartitionsChanges$6(org.apache.pulsar.client.api.TableView, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        14
       4: getstatic     #54                 // Field log:Lorg/slf4j/Logger;
       7: ldc           #110                // String Failed to check for changes in number of partitions
       9: invokeinterface #111,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      14: return

  private org.apache.pulsar.client.api.TableView lambda$start$5(java.lang.Void);
    Code:
       0: aload_0
       1: areturn

  private java.util.concurrent.CompletionStage lambda$start$4(java.util.List);
    Code:
       0: new           #112                // class java/util/HashSet
       3: dup
       4: aload_1
       5: invokespecial #113                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
       8: astore_2
       9: new           #9                  // class java/util/ArrayList
      12: dup
      13: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      16: astore_3
      17: aload_1
      18: aload_0
      19: aload_3
      20: invokedynamic #114,  0            // InvokeDynamic #11:accept:(Lorg/apache/pulsar/client/impl/TableViewImpl;Ljava/util/List;)Ljava/util/function/Consumer;
      25: invokeinterface #115,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      30: aload_0
      31: getfield      #8                  // Field readers:Ljava/util/concurrent/ConcurrentMap;
      34: aload_0
      35: aload_2
      36: aload_3
      37: invokedynamic #116,  0            // InvokeDynamic #12:accept:(Lorg/apache/pulsar/client/impl/TableViewImpl;Ljava/util/Set;Ljava/util/List;)Ljava/util/function/BiConsumer;
      42: invokeinterface #37,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.forEach:(Ljava/util/function/BiConsumer;)V
      47: aload_3
      48: invokestatic  #48                 // Method org/apache/pulsar/common/util/FutureUtil.waitForAll:(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;
      51: aload_0
      52: invokedynamic #117,  0            // InvokeDynamic #13:run:(Lorg/apache/pulsar/client/impl/TableViewImpl;)Ljava/lang/Runnable;
      57: invokevirtual #118                // Method java/util/concurrent/CompletableFuture.thenRun:(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
      60: areturn

  private void lambda$null$3();
    Code:
       0: aload_0
       1: invokespecial #119                // Method schedulePartitionsCheck:()V
       4: return

  private void lambda$null$2(java.util.Set, java.util.List, java.lang.String, org.apache.pulsar.client.api.Reader);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #120,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       7: ifne          36
      10: aload_2
      11: aload         4
      13: invokeinterface #121,  1          // InterfaceMethod org/apache/pulsar/client/api/Reader.closeAsync:()Ljava/util/concurrent/CompletableFuture;
      18: aload_0
      19: aload_3
      20: aload         4
      22: invokedynamic #122,  0            // InvokeDynamic #14:run:(Lorg/apache/pulsar/client/impl/TableViewImpl;Ljava/lang/String;Lorg/apache/pulsar/client/api/Reader;)Ljava/lang/Runnable;
      27: invokevirtual #118                // Method java/util/concurrent/CompletableFuture.thenRun:(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
      30: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      35: pop
      36: return

  private void lambda$null$1(java.lang.String, org.apache.pulsar.client.api.Reader);
    Code:
       0: aload_0
       1: getfield      #8                  // Field readers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #123,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: pop
      12: return

  private void lambda$null$0(java.util.List, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field readers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #32,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ifne          25
      13: aload_1
      14: aload_0
      15: aload_2
      16: invokespecial #124                // Method newReader:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      19: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: return

  static {};
    Code:
       0: ldc           #125                // class org/apache/pulsar/client/impl/TableViewImpl
       2: invokestatic  #126                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #54                 // Field log:Lorg/slf4j/Logger;
       8: return
}
