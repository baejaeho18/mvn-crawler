Compiled from "ReaderConfigurationData.java"
public class org.apache.pulsar.client.impl.conf.ReaderConfigurationData<T> implements java.io.Serializable, java.lang.Cloneable {
  private static final long serialVersionUID;

  private java.util.Set<java.lang.String> topicNames;

  private org.apache.pulsar.client.api.MessageId startMessageId;

  private long startMessageFromRollbackDurationInSec;

  private int receiverQueueSize;

  private org.apache.pulsar.client.api.ReaderListener<T> readerListener;

  private java.lang.String readerName;

  private java.lang.String subscriptionRolePrefix;

  private java.lang.String subscriptionName;

  private org.apache.pulsar.client.api.CryptoKeyReader cryptoKeyReader;

  private org.apache.pulsar.client.api.ConsumerCryptoFailureAction cryptoFailureAction;

  private boolean readCompacted;

  private boolean resetIncludeHead;

  private transient java.util.List<org.apache.pulsar.client.api.Range> keyHashRanges;

  private boolean poolMessages;

  public java.lang.String getTopicName();
    Code:
       0: aload_0
       1: getfield      #1                  // Field topicNames:Ljava/util/Set;
       4: invokeinterface #2,  1            // InterfaceMethod java/util/Set.size:()I
       9: iconst_1
      10: if_icmple     23
      13: new           #3                  // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #4                  // String topicNames needs to be = 1
      19: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: getfield      #1                  // Field topicNames:Ljava/util/Set;
      27: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      32: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #8                  // class java/lang/String
      40: areturn

  public void setTopicName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field topicNames:Ljava/util/Set;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/Set.clear:()V
       9: aload_0
      10: getfield      #1                  // Field topicNames:Ljava/util/Set;
      13: aload_1
      14: invokeinterface #10,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      19: pop
      20: return

  public org.apache.pulsar.client.impl.conf.ReaderConfigurationData<T> clone();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #12                 // class org/apache/pulsar/client/impl/conf/ReaderConfigurationData
       7: astore_1
       8: aload_1
       9: new           #13                 // class java/util/HashSet
      12: dup
      13: aload_1
      14: invokevirtual #14                 // Method getTopicNames:()Ljava/util/Set;
      17: invokespecial #15                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      20: invokevirtual #16                 // Method setTopicNames:(Ljava/util/Set;)V
      23: aload_1
      24: areturn
      25: astore_1
      26: new           #18                 // class java/lang/RuntimeException
      29: dup
      30: ldc           #19                 // String Failed to clone ReaderConfigurationData
      32: invokespecial #20                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      35: athrow
    Exception table:
       from    to  target type
           0    24    25   Class java/lang/CloneNotSupportedException

  public org.apache.pulsar.client.impl.conf.ReaderConfigurationData();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #13                 // class java/util/HashSet
       8: dup
       9: invokespecial #22                 // Method java/util/HashSet."<init>":()V
      12: putfield      #1                  // Field topicNames:Ljava/util/Set;
      15: aload_0
      16: sipush        1000
      19: putfield      #23                 // Field receiverQueueSize:I
      22: aload_0
      23: aconst_null
      24: putfield      #24                 // Field readerName:Ljava/lang/String;
      27: aload_0
      28: aconst_null
      29: putfield      #25                 // Field subscriptionRolePrefix:Ljava/lang/String;
      32: aload_0
      33: aconst_null
      34: putfield      #26                 // Field subscriptionName:Ljava/lang/String;
      37: aload_0
      38: aconst_null
      39: putfield      #27                 // Field cryptoKeyReader:Lorg/apache/pulsar/client/api/CryptoKeyReader;
      42: aload_0
      43: getstatic     #28                 // Field org/apache/pulsar/client/api/ConsumerCryptoFailureAction.FAIL:Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
      46: putfield      #29                 // Field cryptoFailureAction:Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
      49: aload_0
      50: iconst_0
      51: putfield      #30                 // Field readCompacted:Z
      54: aload_0
      55: iconst_0
      56: putfield      #31                 // Field resetIncludeHead:Z
      59: aload_0
      60: iconst_0
      61: putfield      #32                 // Field poolMessages:Z
      64: return

  public java.util.Set<java.lang.String> getTopicNames();
    Code:
       0: aload_0
       1: getfield      #1                  // Field topicNames:Ljava/util/Set;
       4: areturn

  public org.apache.pulsar.client.api.MessageId getStartMessageId();
    Code:
       0: aload_0
       1: getfield      #33                 // Field startMessageId:Lorg/apache/pulsar/client/api/MessageId;
       4: areturn

  public long getStartMessageFromRollbackDurationInSec();
    Code:
       0: aload_0
       1: getfield      #34                 // Field startMessageFromRollbackDurationInSec:J
       4: lreturn

  public int getReceiverQueueSize();
    Code:
       0: aload_0
       1: getfield      #23                 // Field receiverQueueSize:I
       4: ireturn

  public org.apache.pulsar.client.api.ReaderListener<T> getReaderListener();
    Code:
       0: aload_0
       1: getfield      #35                 // Field readerListener:Lorg/apache/pulsar/client/api/ReaderListener;
       4: areturn

  public java.lang.String getReaderName();
    Code:
       0: aload_0
       1: getfield      #24                 // Field readerName:Ljava/lang/String;
       4: areturn

  public java.lang.String getSubscriptionRolePrefix();
    Code:
       0: aload_0
       1: getfield      #25                 // Field subscriptionRolePrefix:Ljava/lang/String;
       4: areturn

  public java.lang.String getSubscriptionName();
    Code:
       0: aload_0
       1: getfield      #26                 // Field subscriptionName:Ljava/lang/String;
       4: areturn

  public org.apache.pulsar.client.api.CryptoKeyReader getCryptoKeyReader();
    Code:
       0: aload_0
       1: getfield      #27                 // Field cryptoKeyReader:Lorg/apache/pulsar/client/api/CryptoKeyReader;
       4: areturn

  public org.apache.pulsar.client.api.ConsumerCryptoFailureAction getCryptoFailureAction();
    Code:
       0: aload_0
       1: getfield      #29                 // Field cryptoFailureAction:Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
       4: areturn

  public boolean isReadCompacted();
    Code:
       0: aload_0
       1: getfield      #30                 // Field readCompacted:Z
       4: ireturn

  public boolean isResetIncludeHead();
    Code:
       0: aload_0
       1: getfield      #31                 // Field resetIncludeHead:Z
       4: ireturn

  public java.util.List<org.apache.pulsar.client.api.Range> getKeyHashRanges();
    Code:
       0: aload_0
       1: getfield      #36                 // Field keyHashRanges:Ljava/util/List;
       4: areturn

  public boolean isPoolMessages();
    Code:
       0: aload_0
       1: getfield      #32                 // Field poolMessages:Z
       4: ireturn

  public void setTopicNames(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field topicNames:Ljava/util/Set;
       5: return

  public void setStartMessageId(org.apache.pulsar.client.api.MessageId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field startMessageId:Lorg/apache/pulsar/client/api/MessageId;
       5: return

  public void setStartMessageFromRollbackDurationInSec(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #34                 // Field startMessageFromRollbackDurationInSec:J
       5: return

  public void setReceiverQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field receiverQueueSize:I
       5: return

  public void setReaderListener(org.apache.pulsar.client.api.ReaderListener<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field readerListener:Lorg/apache/pulsar/client/api/ReaderListener;
       5: return

  public void setReaderName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field readerName:Ljava/lang/String;
       5: return

  public void setSubscriptionRolePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field subscriptionRolePrefix:Ljava/lang/String;
       5: return

  public void setSubscriptionName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field subscriptionName:Ljava/lang/String;
       5: return

  public void setCryptoKeyReader(org.apache.pulsar.client.api.CryptoKeyReader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field cryptoKeyReader:Lorg/apache/pulsar/client/api/CryptoKeyReader;
       5: return

  public void setCryptoFailureAction(org.apache.pulsar.client.api.ConsumerCryptoFailureAction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field cryptoFailureAction:Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
       5: return

  public void setReadCompacted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field readCompacted:Z
       5: return

  public void setResetIncludeHead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field resetIncludeHead:Z
       5: return

  public void setKeyHashRanges(java.util.List<org.apache.pulsar.client.api.Range>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field keyHashRanges:Ljava/util/List;
       5: return

  public void setPoolMessages(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field poolMessages:Z
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #12                 // class org/apache/pulsar/client/impl/conf/ReaderConfigurationData
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #12                 // class org/apache/pulsar/client/impl/conf/ReaderConfigurationData
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #37                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #38                 // Method getStartMessageFromRollbackDurationInSec:()J
      35: aload_2
      36: invokevirtual #38                 // Method getStartMessageFromRollbackDurationInSec:()J
      39: lcmp
      40: ifeq          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: invokevirtual #39                 // Method getReceiverQueueSize:()I
      49: aload_2
      50: invokevirtual #39                 // Method getReceiverQueueSize:()I
      53: if_icmpeq     58
      56: iconst_0
      57: ireturn
      58: aload_0
      59: invokevirtual #40                 // Method isReadCompacted:()Z
      62: aload_2
      63: invokevirtual #40                 // Method isReadCompacted:()Z
      66: if_icmpeq     71
      69: iconst_0
      70: ireturn
      71: aload_0
      72: invokevirtual #41                 // Method isResetIncludeHead:()Z
      75: aload_2
      76: invokevirtual #41                 // Method isResetIncludeHead:()Z
      79: if_icmpeq     84
      82: iconst_0
      83: ireturn
      84: aload_0
      85: invokevirtual #42                 // Method isPoolMessages:()Z
      88: aload_2
      89: invokevirtual #42                 // Method isPoolMessages:()Z
      92: if_icmpeq     97
      95: iconst_0
      96: ireturn
      97: aload_0
      98: invokevirtual #14                 // Method getTopicNames:()Ljava/util/Set;
     101: astore_3
     102: aload_2
     103: invokevirtual #14                 // Method getTopicNames:()Ljava/util/Set;
     106: astore        4
     108: aload_3
     109: ifnonnull     120
     112: aload         4
     114: ifnull        131
     117: goto          129
     120: aload_3
     121: aload         4
     123: invokevirtual #43                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     126: ifne          131
     129: iconst_0
     130: ireturn
     131: aload_0
     132: invokevirtual #44                 // Method getStartMessageId:()Lorg/apache/pulsar/client/api/MessageId;
     135: astore        5
     137: aload_2
     138: invokevirtual #44                 // Method getStartMessageId:()Lorg/apache/pulsar/client/api/MessageId;
     141: astore        6
     143: aload         5
     145: ifnonnull     156
     148: aload         6
     150: ifnull        168
     153: goto          166
     156: aload         5
     158: aload         6
     160: invokevirtual #43                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     163: ifne          168
     166: iconst_0
     167: ireturn
     168: aload_0
     169: invokevirtual #45                 // Method getReaderListener:()Lorg/apache/pulsar/client/api/ReaderListener;
     172: astore        7
     174: aload_2
     175: invokevirtual #45                 // Method getReaderListener:()Lorg/apache/pulsar/client/api/ReaderListener;
     178: astore        8
     180: aload         7
     182: ifnonnull     193
     185: aload         8
     187: ifnull        205
     190: goto          203
     193: aload         7
     195: aload         8
     197: invokevirtual #43                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     200: ifne          205
     203: iconst_0
     204: ireturn
     205: aload_0
     206: invokevirtual #46                 // Method getReaderName:()Ljava/lang/String;
     209: astore        9
     211: aload_2
     212: invokevirtual #46                 // Method getReaderName:()Ljava/lang/String;
     215: astore        10
     217: aload         9
     219: ifnonnull     230
     222: aload         10
     224: ifnull        242
     227: goto          240
     230: aload         9
     232: aload         10
     234: invokevirtual #43                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     237: ifne          242
     240: iconst_0
     241: ireturn
     242: aload_0
     243: invokevirtual #47                 // Method getSubscriptionRolePrefix:()Ljava/lang/String;
     246: astore        11
     248: aload_2
     249: invokevirtual #47                 // Method getSubscriptionRolePrefix:()Ljava/lang/String;
     252: astore        12
     254: aload         11
     256: ifnonnull     267
     259: aload         12
     261: ifnull        279
     264: goto          277
     267: aload         11
     269: aload         12
     271: invokevirtual #43                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     274: ifne          279
     277: iconst_0
     278: ireturn
     279: aload_0
     280: invokevirtual #48                 // Method getSubscriptionName:()Ljava/lang/String;
     283: astore        13
     285: aload_2
     286: invokevirtual #48                 // Method getSubscriptionName:()Ljava/lang/String;
     289: astore        14
     291: aload         13
     293: ifnonnull     304
     296: aload         14
     298: ifnull        316
     301: goto          314
     304: aload         13
     306: aload         14
     308: invokevirtual #43                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     311: ifne          316
     314: iconst_0
     315: ireturn
     316: aload_0
     317: invokevirtual #49                 // Method getCryptoKeyReader:()Lorg/apache/pulsar/client/api/CryptoKeyReader;
     320: astore        15
     322: aload_2
     323: invokevirtual #49                 // Method getCryptoKeyReader:()Lorg/apache/pulsar/client/api/CryptoKeyReader;
     326: astore        16
     328: aload         15
     330: ifnonnull     341
     333: aload         16
     335: ifnull        353
     338: goto          351
     341: aload         15
     343: aload         16
     345: invokevirtual #43                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     348: ifne          353
     351: iconst_0
     352: ireturn
     353: aload_0
     354: invokevirtual #50                 // Method getCryptoFailureAction:()Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
     357: astore        17
     359: aload_2
     360: invokevirtual #50                 // Method getCryptoFailureAction:()Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
     363: astore        18
     365: aload         17
     367: ifnonnull     378
     370: aload         18
     372: ifnull        390
     375: goto          388
     378: aload         17
     380: aload         18
     382: invokevirtual #43                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     385: ifne          390
     388: iconst_0
     389: ireturn
     390: iconst_1
     391: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #12                 // class org/apache/pulsar/client/impl/conf/ReaderConfigurationData
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #38                 // Method getStartMessageFromRollbackDurationInSec:()J
       9: lstore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: lload_3
      15: bipush        32
      17: lushr
      18: lload_3
      19: lxor
      20: l2i
      21: iadd
      22: istore_2
      23: iload_2
      24: bipush        59
      26: imul
      27: aload_0
      28: invokevirtual #39                 // Method getReceiverQueueSize:()I
      31: iadd
      32: istore_2
      33: iload_2
      34: bipush        59
      36: imul
      37: aload_0
      38: invokevirtual #40                 // Method isReadCompacted:()Z
      41: ifeq          49
      44: bipush        79
      46: goto          51
      49: bipush        97
      51: iadd
      52: istore_2
      53: iload_2
      54: bipush        59
      56: imul
      57: aload_0
      58: invokevirtual #41                 // Method isResetIncludeHead:()Z
      61: ifeq          69
      64: bipush        79
      66: goto          71
      69: bipush        97
      71: iadd
      72: istore_2
      73: iload_2
      74: bipush        59
      76: imul
      77: aload_0
      78: invokevirtual #42                 // Method isPoolMessages:()Z
      81: ifeq          89
      84: bipush        79
      86: goto          91
      89: bipush        97
      91: iadd
      92: istore_2
      93: aload_0
      94: invokevirtual #14                 // Method getTopicNames:()Ljava/util/Set;
      97: astore        5
      99: iload_2
     100: bipush        59
     102: imul
     103: aload         5
     105: ifnonnull     113
     108: bipush        43
     110: goto          118
     113: aload         5
     115: invokevirtual #51                 // Method java/lang/Object.hashCode:()I
     118: iadd
     119: istore_2
     120: aload_0
     121: invokevirtual #44                 // Method getStartMessageId:()Lorg/apache/pulsar/client/api/MessageId;
     124: astore        6
     126: iload_2
     127: bipush        59
     129: imul
     130: aload         6
     132: ifnonnull     140
     135: bipush        43
     137: goto          145
     140: aload         6
     142: invokevirtual #51                 // Method java/lang/Object.hashCode:()I
     145: iadd
     146: istore_2
     147: aload_0
     148: invokevirtual #45                 // Method getReaderListener:()Lorg/apache/pulsar/client/api/ReaderListener;
     151: astore        7
     153: iload_2
     154: bipush        59
     156: imul
     157: aload         7
     159: ifnonnull     167
     162: bipush        43
     164: goto          172
     167: aload         7
     169: invokevirtual #51                 // Method java/lang/Object.hashCode:()I
     172: iadd
     173: istore_2
     174: aload_0
     175: invokevirtual #46                 // Method getReaderName:()Ljava/lang/String;
     178: astore        8
     180: iload_2
     181: bipush        59
     183: imul
     184: aload         8
     186: ifnonnull     194
     189: bipush        43
     191: goto          199
     194: aload         8
     196: invokevirtual #51                 // Method java/lang/Object.hashCode:()I
     199: iadd
     200: istore_2
     201: aload_0
     202: invokevirtual #47                 // Method getSubscriptionRolePrefix:()Ljava/lang/String;
     205: astore        9
     207: iload_2
     208: bipush        59
     210: imul
     211: aload         9
     213: ifnonnull     221
     216: bipush        43
     218: goto          226
     221: aload         9
     223: invokevirtual #51                 // Method java/lang/Object.hashCode:()I
     226: iadd
     227: istore_2
     228: aload_0
     229: invokevirtual #48                 // Method getSubscriptionName:()Ljava/lang/String;
     232: astore        10
     234: iload_2
     235: bipush        59
     237: imul
     238: aload         10
     240: ifnonnull     248
     243: bipush        43
     245: goto          253
     248: aload         10
     250: invokevirtual #51                 // Method java/lang/Object.hashCode:()I
     253: iadd
     254: istore_2
     255: aload_0
     256: invokevirtual #49                 // Method getCryptoKeyReader:()Lorg/apache/pulsar/client/api/CryptoKeyReader;
     259: astore        11
     261: iload_2
     262: bipush        59
     264: imul
     265: aload         11
     267: ifnonnull     275
     270: bipush        43
     272: goto          280
     275: aload         11
     277: invokevirtual #51                 // Method java/lang/Object.hashCode:()I
     280: iadd
     281: istore_2
     282: aload_0
     283: invokevirtual #50                 // Method getCryptoFailureAction:()Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
     286: astore        12
     288: iload_2
     289: bipush        59
     291: imul
     292: aload         12
     294: ifnonnull     302
     297: bipush        43
     299: goto          307
     302: aload         12
     304: invokevirtual #51                 // Method java/lang/Object.hashCode:()I
     307: iadd
     308: istore_2
     309: iload_2
     310: ireturn

  public java.lang.String toString();
    Code:
       0: new           #52                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #54                 // String ReaderConfigurationData(topicNames=
       9: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #14                 // Method getTopicNames:()Ljava/util/Set;
      16: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #57                 // String , startMessageId=
      21: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #44                 // Method getStartMessageId:()Lorg/apache/pulsar/client/api/MessageId;
      28: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #58                 // String , startMessageFromRollbackDurationInSec=
      33: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #38                 // Method getStartMessageFromRollbackDurationInSec:()J
      40: invokevirtual #59                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #60                 // String , receiverQueueSize=
      45: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #39                 // Method getReceiverQueueSize:()I
      52: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: ldc           #62                 // String , readerListener=
      57: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #45                 // Method getReaderListener:()Lorg/apache/pulsar/client/api/ReaderListener;
      64: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #63                 // String , readerName=
      69: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #46                 // Method getReaderName:()Ljava/lang/String;
      76: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #64                 // String , subscriptionRolePrefix=
      81: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #47                 // Method getSubscriptionRolePrefix:()Ljava/lang/String;
      88: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #65                 // String , subscriptionName=
      93: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #48                 // Method getSubscriptionName:()Ljava/lang/String;
     100: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: ldc           #66                 // String , cryptoKeyReader=
     105: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: invokevirtual #49                 // Method getCryptoKeyReader:()Lorg/apache/pulsar/client/api/CryptoKeyReader;
     112: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     115: ldc           #67                 // String , cryptoFailureAction=
     117: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_0
     121: invokevirtual #50                 // Method getCryptoFailureAction:()Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
     124: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     127: ldc           #68                 // String , readCompacted=
     129: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_0
     133: invokevirtual #40                 // Method isReadCompacted:()Z
     136: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     139: ldc           #70                 // String , resetIncludeHead=
     141: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_0
     145: invokevirtual #41                 // Method isResetIncludeHead:()Z
     148: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     151: ldc           #71                 // String , keyHashRanges=
     153: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_0
     157: invokevirtual #72                 // Method getKeyHashRanges:()Ljava/util/List;
     160: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     163: ldc           #73                 // String , poolMessages=
     165: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_0
     169: invokevirtual #42                 // Method isPoolMessages:()Z
     172: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     175: ldc           #74                 // String )
     177: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     183: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method clone:()Lorg/apache/pulsar/client/impl/conf/ReaderConfigurationData;
       4: areturn
}
