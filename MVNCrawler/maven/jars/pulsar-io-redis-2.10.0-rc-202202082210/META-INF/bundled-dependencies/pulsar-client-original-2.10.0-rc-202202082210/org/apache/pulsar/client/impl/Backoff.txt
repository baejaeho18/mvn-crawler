Compiled from "Backoff.java"
public class org.apache.pulsar.client.impl.Backoff {
  public static final long DEFAULT_INTERVAL_IN_NANOSECONDS;

  public static final long MAX_BACKOFF_INTERVAL_NANOSECONDS;

  private final long initial;

  private final long max;

  private final java.time.Clock clock;

  private long next;

  private long mandatoryStop;

  private long firstBackoffTimeInMillis;

  private boolean mandatoryStopMade;

  private static final java.util.Random random;

  org.apache.pulsar.client.impl.Backoff(long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit, java.time.Clock);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field mandatoryStopMade:Z
       9: aload_0
      10: aload_3
      11: lload_1
      12: invokevirtual #3                  // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      15: putfield      #4                  // Field initial:J
      18: aload_0
      19: aload         6
      21: lload         4
      23: invokevirtual #3                  // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      26: putfield      #5                  // Field max:J
      29: aload_0
      30: aload_0
      31: getfield      #4                  // Field initial:J
      34: putfield      #6                  // Field next:J
      37: aload_0
      38: aload         9
      40: lload         7
      42: invokevirtual #3                  // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      45: putfield      #7                  // Field mandatoryStop:J
      48: aload_0
      49: aload         10
      51: putfield      #8                  // Field clock:Ljava/time/Clock;
      54: return

  public org.apache.pulsar.client.impl.Backoff(long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: lload         4
       5: aload         6
       7: lload         7
       9: aload         9
      11: invokestatic  #9                  // Method java/time/Clock.systemDefaultZone:()Ljava/time/Clock;
      14: invokespecial #10                 // Method "<init>":(JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;Ljava/time/Clock;)V
      17: return

  public long next();
    Code:
       0: aload_0
       1: getfield      #6                  // Field next:J
       4: lstore_1
       5: lload_1
       6: aload_0
       7: getfield      #5                  // Field max:J
      10: lcmp
      11: ifge          33
      14: aload_0
      15: aload_0
      16: getfield      #6                  // Field next:J
      19: ldc2_w        #11                 // long 2l
      22: lmul
      23: aload_0
      24: getfield      #5                  // Field max:J
      27: invokestatic  #13                 // Method java/lang/Math.min:(JJ)J
      30: putfield      #6                  // Field next:J
      33: aload_0
      34: getfield      #2                  // Field mandatoryStopMade:Z
      37: ifne          108
      40: aload_0
      41: getfield      #8                  // Field clock:Ljava/time/Clock;
      44: invokevirtual #14                 // Method java/time/Clock.millis:()J
      47: lstore_3
      48: lconst_0
      49: lstore        5
      51: aload_0
      52: getfield      #4                  // Field initial:J
      55: lload_1
      56: lcmp
      57: ifne          68
      60: aload_0
      61: lload_3
      62: putfield      #15                 // Field firstBackoffTimeInMillis:J
      65: goto          76
      68: lload_3
      69: aload_0
      70: getfield      #15                 // Field firstBackoffTimeInMillis:J
      73: lsub
      74: lstore        5
      76: lload         5
      78: lload_1
      79: ladd
      80: aload_0
      81: getfield      #7                  // Field mandatoryStop:J
      84: lcmp
      85: ifle          108
      88: aload_0
      89: getfield      #4                  // Field initial:J
      92: aload_0
      93: getfield      #7                  // Field mandatoryStop:J
      96: lload         5
      98: lsub
      99: invokestatic  #16                 // Method java/lang/Math.max:(JJ)J
     102: lstore_1
     103: aload_0
     104: iconst_1
     105: putfield      #2                  // Field mandatoryStopMade:Z
     108: lload_1
     109: ldc2_w        #17                 // long 10l
     112: lcmp
     113: ifle          131
     116: lload_1
     117: getstatic     #19                 // Field random:Ljava/util/Random;
     120: lload_1
     121: l2i
     122: bipush        10
     124: idiv
     125: invokevirtual #20                 // Method java/util/Random.nextInt:(I)I
     128: i2l
     129: lsub
     130: lstore_1
     131: aload_0
     132: getfield      #4                  // Field initial:J
     135: lload_1
     136: invokestatic  #16                 // Method java/lang/Math.max:(JJ)J
     139: lreturn

  public void reduceToHalf();
    Code:
       0: aload_0
       1: getfield      #6                  // Field next:J
       4: aload_0
       5: getfield      #4                  // Field initial:J
       8: lcmp
       9: ifle          31
      12: aload_0
      13: aload_0
      14: getfield      #6                  // Field next:J
      17: ldc2_w        #11                 // long 2l
      20: ldiv
      21: aload_0
      22: getfield      #4                  // Field initial:J
      25: invokestatic  #16                 // Method java/lang/Math.max:(JJ)J
      28: putfield      #6                  // Field next:J
      31: return

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field initial:J
       5: putfield      #6                  // Field next:J
       8: aload_0
       9: iconst_0
      10: putfield      #2                  // Field mandatoryStopMade:Z
      13: return

  long getFirstBackoffTimeInMillis();
    Code:
       0: aload_0
       1: getfield      #15                 // Field firstBackoffTimeInMillis:J
       4: lreturn

  public static boolean shouldBackoff(long, java.util.concurrent.TimeUnit, int, long, long);
    Code:
       0: aload_2
       1: lload_0
       2: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       5: lstore        8
       7: invokestatic  #22                 // Method java/lang/System.nanoTime:()J
      10: lstore        10
      12: lload         4
      14: lstore        12
      16: iconst_1
      17: istore        14
      19: iload         14
      21: iload_3
      22: if_icmpge     54
      25: lload         12
      27: ldc2_w        #11                 // long 2l
      30: lmul
      31: lstore        12
      33: lload         12
      35: lload         6
      37: lcmp
      38: ifle          48
      41: lload         6
      43: lstore        12
      45: goto          54
      48: iinc          14, 1
      51: goto          19
      54: lload         10
      56: lload         8
      58: lload         12
      60: ladd
      61: lcmp
      62: ifge          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn

  public static boolean shouldBackoff(long, java.util.concurrent.TimeUnit, int);
    Code:
       0: lload_0
       1: aload_2
       2: iload_3
       3: getstatic     #23                 // Field DEFAULT_INTERVAL_IN_NANOSECONDS:J
       6: getstatic     #24                 // Field MAX_BACKOFF_INTERVAL_NANOSECONDS:J
       9: invokestatic  #25                 // Method shouldBackoff:(JLjava/util/concurrent/TimeUnit;IJJ)Z
      12: ireturn

  public long getInitial();
    Code:
       0: aload_0
       1: getfield      #4                  // Field initial:J
       4: lreturn

  public long getMax();
    Code:
       0: aload_0
       1: getfield      #5                  // Field max:J
       4: lreturn

  public java.time.Clock getClock();
    Code:
       0: aload_0
       1: getfield      #8                  // Field clock:Ljava/time/Clock;
       4: areturn

  public long getNext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field next:J
       4: lreturn

  public long getMandatoryStop();
    Code:
       0: aload_0
       1: getfield      #7                  // Field mandatoryStop:J
       4: lreturn

  public boolean isMandatoryStopMade();
    Code:
       0: aload_0
       1: getfield      #2                  // Field mandatoryStopMade:Z
       4: ireturn

  public void setNext(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #6                  // Field next:J
       5: return

  public void setMandatoryStop(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field mandatoryStop:J
       5: return

  public void setFirstBackoffTimeInMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #15                 // Field firstBackoffTimeInMillis:J
       5: return

  public void setMandatoryStopMade(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field mandatoryStopMade:Z
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #26                 // class org/apache/pulsar/client/impl/Backoff
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #26                 // class org/apache/pulsar/client/impl/Backoff
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #27                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #28                 // Method getInitial:()J
      35: aload_2
      36: invokevirtual #28                 // Method getInitial:()J
      39: lcmp
      40: ifeq          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: invokevirtual #29                 // Method getMax:()J
      49: aload_2
      50: invokevirtual #29                 // Method getMax:()J
      53: lcmp
      54: ifeq          59
      57: iconst_0
      58: ireturn
      59: aload_0
      60: invokevirtual #30                 // Method getNext:()J
      63: aload_2
      64: invokevirtual #30                 // Method getNext:()J
      67: lcmp
      68: ifeq          73
      71: iconst_0
      72: ireturn
      73: aload_0
      74: invokevirtual #31                 // Method getMandatoryStop:()J
      77: aload_2
      78: invokevirtual #31                 // Method getMandatoryStop:()J
      81: lcmp
      82: ifeq          87
      85: iconst_0
      86: ireturn
      87: aload_0
      88: invokevirtual #32                 // Method getFirstBackoffTimeInMillis:()J
      91: aload_2
      92: invokevirtual #32                 // Method getFirstBackoffTimeInMillis:()J
      95: lcmp
      96: ifeq          101
      99: iconst_0
     100: ireturn
     101: aload_0
     102: invokevirtual #33                 // Method isMandatoryStopMade:()Z
     105: aload_2
     106: invokevirtual #33                 // Method isMandatoryStopMade:()Z
     109: if_icmpeq     114
     112: iconst_0
     113: ireturn
     114: aload_0
     115: invokevirtual #34                 // Method getClock:()Ljava/time/Clock;
     118: astore_3
     119: aload_2
     120: invokevirtual #34                 // Method getClock:()Ljava/time/Clock;
     123: astore        4
     125: aload_3
     126: ifnonnull     137
     129: aload         4
     131: ifnull        148
     134: goto          146
     137: aload_3
     138: aload         4
     140: invokevirtual #35                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     143: ifne          148
     146: iconst_0
     147: ireturn
     148: iconst_1
     149: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #26                 // class org/apache/pulsar/client/impl/Backoff
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #28                 // Method getInitial:()J
       9: lstore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: lload_3
      15: bipush        32
      17: lushr
      18: lload_3
      19: lxor
      20: l2i
      21: iadd
      22: istore_2
      23: aload_0
      24: invokevirtual #29                 // Method getMax:()J
      27: lstore        5
      29: iload_2
      30: bipush        59
      32: imul
      33: lload         5
      35: bipush        32
      37: lushr
      38: lload         5
      40: lxor
      41: l2i
      42: iadd
      43: istore_2
      44: aload_0
      45: invokevirtual #30                 // Method getNext:()J
      48: lstore        7
      50: iload_2
      51: bipush        59
      53: imul
      54: lload         7
      56: bipush        32
      58: lushr
      59: lload         7
      61: lxor
      62: l2i
      63: iadd
      64: istore_2
      65: aload_0
      66: invokevirtual #31                 // Method getMandatoryStop:()J
      69: lstore        9
      71: iload_2
      72: bipush        59
      74: imul
      75: lload         9
      77: bipush        32
      79: lushr
      80: lload         9
      82: lxor
      83: l2i
      84: iadd
      85: istore_2
      86: aload_0
      87: invokevirtual #32                 // Method getFirstBackoffTimeInMillis:()J
      90: lstore        11
      92: iload_2
      93: bipush        59
      95: imul
      96: lload         11
      98: bipush        32
     100: lushr
     101: lload         11
     103: lxor
     104: l2i
     105: iadd
     106: istore_2
     107: iload_2
     108: bipush        59
     110: imul
     111: aload_0
     112: invokevirtual #33                 // Method isMandatoryStopMade:()Z
     115: ifeq          123
     118: bipush        79
     120: goto          125
     123: bipush        97
     125: iadd
     126: istore_2
     127: aload_0
     128: invokevirtual #34                 // Method getClock:()Ljava/time/Clock;
     131: astore        13
     133: iload_2
     134: bipush        59
     136: imul
     137: aload         13
     139: ifnonnull     147
     142: bipush        43
     144: goto          152
     147: aload         13
     149: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
     152: iadd
     153: istore_2
     154: iload_2
     155: ireturn

  public java.lang.String toString();
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #39                 // String Backoff(initial=
       9: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #28                 // Method getInitial:()J
      16: invokevirtual #41                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #42                 // String , max=
      21: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #29                 // Method getMax:()J
      28: invokevirtual #41                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #43                 // String , clock=
      33: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #34                 // Method getClock:()Ljava/time/Clock;
      40: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #45                 // String , next=
      45: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #30                 // Method getNext:()J
      52: invokevirtual #41                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      55: ldc           #46                 // String , mandatoryStop=
      57: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #31                 // Method getMandatoryStop:()J
      64: invokevirtual #41                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      67: ldc           #47                 // String , firstBackoffTimeInMillis=
      69: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #32                 // Method getFirstBackoffTimeInMillis:()J
      76: invokevirtual #41                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      79: ldc           #48                 // String , mandatoryStopMade=
      81: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #33                 // Method isMandatoryStopMade:()Z
      88: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      91: ldc           #50                 // String )
      93: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: areturn

  static {};
    Code:
       0: getstatic     #52                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       3: ldc2_w        #53                 // long 100l
       6: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       9: putstatic     #23                 // Field DEFAULT_INTERVAL_IN_NANOSECONDS:J
      12: getstatic     #55                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      15: ldc2_w        #56                 // long 30l
      18: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      21: putstatic     #24                 // Field MAX_BACKOFF_INTERVAL_NANOSECONDS:J
      24: new           #58                 // class java/util/Random
      27: dup
      28: invokespecial #59                 // Method java/util/Random."<init>":()V
      31: putstatic     #19                 // Field random:Ljava/util/Random;
      34: return
}
