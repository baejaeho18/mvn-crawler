Compiled from "ProducerConfigurationData.java"
public class org.apache.pulsar.client.impl.conf.ProducerConfigurationData implements java.io.Serializable,java.lang.Cloneable {
  private static final long serialVersionUID;

  public static final int DEFAULT_BATCHING_MAX_MESSAGES;

  public static final int DEFAULT_MAX_PENDING_MESSAGES;

  public static final int DEFAULT_MAX_PENDING_MESSAGES_ACROSS_PARTITIONS;

  private java.lang.String topicName;

  private java.lang.String producerName;

  private long sendTimeoutMs;

  private boolean blockIfQueueFull;

  private int maxPendingMessages;

  private int maxPendingMessagesAcrossPartitions;

  private org.apache.pulsar.client.api.MessageRoutingMode messageRoutingMode;

  private org.apache.pulsar.client.api.HashingScheme hashingScheme;

  private org.apache.pulsar.client.api.ProducerCryptoFailureAction cryptoFailureAction;

  private org.apache.pulsar.client.api.MessageRouter customMessageRouter;

  private long batchingMaxPublishDelayMicros;

  private int batchingPartitionSwitchFrequencyByPublishDelay;

  private int batchingMaxMessages;

  private int batchingMaxBytes;

  private boolean batchingEnabled;

  private org.apache.pulsar.client.api.BatcherBuilder batcherBuilder;

  private boolean chunkingEnabled;

  private org.apache.pulsar.client.api.CryptoKeyReader cryptoKeyReader;

  private transient org.apache.pulsar.client.api.MessageCrypto messageCrypto;

  private java.util.Set<java.lang.String> encryptionKeys;

  private org.apache.pulsar.client.api.CompressionType compressionType;

  private java.lang.Long initialSequenceId;

  private boolean autoUpdatePartitions;

  private long autoUpdatePartitionsIntervalSeconds;

  private boolean multiSchema;

  private org.apache.pulsar.client.api.ProducerAccessMode accessMode;

  private boolean lazyStartPartitionedProducers;

  private java.util.SortedMap<java.lang.String, java.lang.String> properties;

  public boolean isEncryptionEnabled();
    Code:
       0: aload_0
       1: getfield      #1                  // Field encryptionKeys:Ljava/util/Set;
       4: ifnull        30
       7: aload_0
       8: getfield      #1                  // Field encryptionKeys:Ljava/util/Set;
      11: invokeinterface #2,  1            // InterfaceMethod java/util/Set.isEmpty:()Z
      16: ifne          30
      19: aload_0
      20: getfield      #3                  // Field cryptoKeyReader:Lorg/apache/pulsar/client/api/CryptoKeyReader;
      23: ifnull        30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public org.apache.pulsar.client.impl.conf.ProducerConfigurationData clone();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #5                  // class org/apache/pulsar/client/impl/conf/ProducerConfigurationData
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #1                  // Field encryptionKeys:Ljava/util/Set;
      13: invokestatic  #6                  // Method com/google/common/collect/Sets.newTreeSet:(Ljava/lang/Iterable;)Ljava/util/TreeSet;
      16: putfield      #1                  // Field encryptionKeys:Ljava/util/Set;
      19: aload_1
      20: new           #7                  // class java/util/TreeMap
      23: dup
      24: aload_0
      25: getfield      #8                  // Field properties:Ljava/util/SortedMap;
      28: invokespecial #9                  // Method java/util/TreeMap."<init>":(Ljava/util/SortedMap;)V
      31: putfield      #8                  // Field properties:Ljava/util/SortedMap;
      34: aload_1
      35: areturn
      36: astore_1
      37: new           #11                 // class java/lang/RuntimeException
      40: dup
      41: ldc           #12                 // String Failed to clone ProducerConfigurationData
      43: aload_1
      44: invokespecial #13                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    35    36   Class java/lang/CloneNotSupportedException

  public void setProducerName(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
       4: ldc           #15                 // String producerName cannot be blank
       6: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
       9: aload_0
      10: aload_1
      11: putfield      #17                 // Field producerName:Ljava/lang/String;
      14: return

  public void setMaxPendingMessages(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #18                 // String maxPendingMessages needs to be >= 0
      11: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: iload_1
      16: putfield      #19                 // Field maxPendingMessages:I
      19: return

  public void setMaxPendingMessagesAcrossPartitions(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #19                 // Field maxPendingMessages:I
       5: if_icmplt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #20                 // String maxPendingMessagesAcrossPartitions needs to be >= maxPendingMessages
      15: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      18: aload_0
      19: iload_1
      20: putfield      #21                 // Field maxPendingMessagesAcrossPartitions:I
      23: return

  public void setBatchingMaxMessages(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field batchingMaxMessages:I
       5: return

  public void setBatchingMaxBytes(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field batchingMaxBytes:I
       5: return

  public void setSendTimeoutMs(int, java.util.concurrent.TimeUnit);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #24                 // String sendTimeout needs to be >= 0
      11: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: aload_2
      16: iload_1
      17: i2l
      18: invokevirtual #25                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      21: putfield      #26                 // Field sendTimeoutMs:J
      24: return

  public void setBatchingMaxPublishDelayMicros(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: lload_1
       2: invokevirtual #25                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       5: lstore        4
       7: lload         4
       9: lconst_1
      10: lcmp
      11: iflt          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #27                 // String configured value for batch delay must be at least 1ms
      21: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      24: aload_0
      25: aload_3
      26: lload_1
      27: invokevirtual #28                 // Method java/util/concurrent/TimeUnit.toMicros:(J)J
      30: putfield      #29                 // Field batchingMaxPublishDelayMicros:J
      33: return

  public void setBatchingPartitionSwitchFrequencyByPublishDelay(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmplt     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ldc           #30                 // String configured value for partition switch frequency must be >= 1
      12: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      15: aload_0
      16: iload_1
      17: putfield      #31                 // Field batchingPartitionSwitchFrequencyByPublishDelay:I
      20: return

  public long batchingPartitionSwitchFrequencyIntervalMicros();
    Code:
       0: aload_0
       1: getfield      #31                 // Field batchingPartitionSwitchFrequencyByPublishDelay:I
       4: i2l
       5: aload_0
       6: getfield      #29                 // Field batchingMaxPublishDelayMicros:J
       9: lmul
      10: lreturn

  public void setAutoUpdatePartitionsIntervalSeconds(int, java.util.concurrent.TimeUnit);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #32                 // String interval needs to be > 0
      11: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: aload_2
      16: iload_1
      17: i2l
      18: invokevirtual #33                 // Method java/util/concurrent/TimeUnit.toSeconds:(J)J
      21: putfield      #34                 // Field autoUpdatePartitionsIntervalSeconds:J
      24: return

  public java.lang.String getTopicName();
    Code:
       0: aload_0
       1: getfield      #35                 // Field topicName:Ljava/lang/String;
       4: areturn

  public java.lang.String getProducerName();
    Code:
       0: aload_0
       1: getfield      #17                 // Field producerName:Ljava/lang/String;
       4: areturn

  public long getSendTimeoutMs();
    Code:
       0: aload_0
       1: getfield      #26                 // Field sendTimeoutMs:J
       4: lreturn

  public boolean isBlockIfQueueFull();
    Code:
       0: aload_0
       1: getfield      #36                 // Field blockIfQueueFull:Z
       4: ireturn

  public int getMaxPendingMessages();
    Code:
       0: aload_0
       1: getfield      #19                 // Field maxPendingMessages:I
       4: ireturn

  public int getMaxPendingMessagesAcrossPartitions();
    Code:
       0: aload_0
       1: getfield      #21                 // Field maxPendingMessagesAcrossPartitions:I
       4: ireturn

  public org.apache.pulsar.client.api.MessageRoutingMode getMessageRoutingMode();
    Code:
       0: aload_0
       1: getfield      #37                 // Field messageRoutingMode:Lorg/apache/pulsar/client/api/MessageRoutingMode;
       4: areturn

  public org.apache.pulsar.client.api.HashingScheme getHashingScheme();
    Code:
       0: aload_0
       1: getfield      #38                 // Field hashingScheme:Lorg/apache/pulsar/client/api/HashingScheme;
       4: areturn

  public org.apache.pulsar.client.api.ProducerCryptoFailureAction getCryptoFailureAction();
    Code:
       0: aload_0
       1: getfield      #39                 // Field cryptoFailureAction:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
       4: areturn

  public org.apache.pulsar.client.api.MessageRouter getCustomMessageRouter();
    Code:
       0: aload_0
       1: getfield      #40                 // Field customMessageRouter:Lorg/apache/pulsar/client/api/MessageRouter;
       4: areturn

  public long getBatchingMaxPublishDelayMicros();
    Code:
       0: aload_0
       1: getfield      #29                 // Field batchingMaxPublishDelayMicros:J
       4: lreturn

  public int getBatchingPartitionSwitchFrequencyByPublishDelay();
    Code:
       0: aload_0
       1: getfield      #31                 // Field batchingPartitionSwitchFrequencyByPublishDelay:I
       4: ireturn

  public int getBatchingMaxMessages();
    Code:
       0: aload_0
       1: getfield      #22                 // Field batchingMaxMessages:I
       4: ireturn

  public int getBatchingMaxBytes();
    Code:
       0: aload_0
       1: getfield      #23                 // Field batchingMaxBytes:I
       4: ireturn

  public boolean isBatchingEnabled();
    Code:
       0: aload_0
       1: getfield      #41                 // Field batchingEnabled:Z
       4: ireturn

  public org.apache.pulsar.client.api.BatcherBuilder getBatcherBuilder();
    Code:
       0: aload_0
       1: getfield      #42                 // Field batcherBuilder:Lorg/apache/pulsar/client/api/BatcherBuilder;
       4: areturn

  public boolean isChunkingEnabled();
    Code:
       0: aload_0
       1: getfield      #43                 // Field chunkingEnabled:Z
       4: ireturn

  public org.apache.pulsar.client.api.CryptoKeyReader getCryptoKeyReader();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cryptoKeyReader:Lorg/apache/pulsar/client/api/CryptoKeyReader;
       4: areturn

  public org.apache.pulsar.client.api.MessageCrypto getMessageCrypto();
    Code:
       0: aload_0
       1: getfield      #44                 // Field messageCrypto:Lorg/apache/pulsar/client/api/MessageCrypto;
       4: areturn

  public java.util.Set<java.lang.String> getEncryptionKeys();
    Code:
       0: aload_0
       1: getfield      #1                  // Field encryptionKeys:Ljava/util/Set;
       4: areturn

  public org.apache.pulsar.client.api.CompressionType getCompressionType();
    Code:
       0: aload_0
       1: getfield      #45                 // Field compressionType:Lorg/apache/pulsar/client/api/CompressionType;
       4: areturn

  public java.lang.Long getInitialSequenceId();
    Code:
       0: aload_0
       1: getfield      #46                 // Field initialSequenceId:Ljava/lang/Long;
       4: areturn

  public boolean isAutoUpdatePartitions();
    Code:
       0: aload_0
       1: getfield      #47                 // Field autoUpdatePartitions:Z
       4: ireturn

  public long getAutoUpdatePartitionsIntervalSeconds();
    Code:
       0: aload_0
       1: getfield      #34                 // Field autoUpdatePartitionsIntervalSeconds:J
       4: lreturn

  public boolean isMultiSchema();
    Code:
       0: aload_0
       1: getfield      #48                 // Field multiSchema:Z
       4: ireturn

  public org.apache.pulsar.client.api.ProducerAccessMode getAccessMode();
    Code:
       0: aload_0
       1: getfield      #49                 // Field accessMode:Lorg/apache/pulsar/client/api/ProducerAccessMode;
       4: areturn

  public boolean isLazyStartPartitionedProducers();
    Code:
       0: aload_0
       1: getfield      #50                 // Field lazyStartPartitionedProducers:Z
       4: ireturn

  public java.util.SortedMap<java.lang.String, java.lang.String> getProperties();
    Code:
       0: aload_0
       1: getfield      #8                  // Field properties:Ljava/util/SortedMap;
       4: areturn

  public void setTopicName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field topicName:Ljava/lang/String;
       5: return

  public void setSendTimeoutMs(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #26                 // Field sendTimeoutMs:J
       5: return

  public void setBlockIfQueueFull(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field blockIfQueueFull:Z
       5: return

  public void setMessageRoutingMode(org.apache.pulsar.client.api.MessageRoutingMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field messageRoutingMode:Lorg/apache/pulsar/client/api/MessageRoutingMode;
       5: return

  public void setHashingScheme(org.apache.pulsar.client.api.HashingScheme);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field hashingScheme:Lorg/apache/pulsar/client/api/HashingScheme;
       5: return

  public void setCryptoFailureAction(org.apache.pulsar.client.api.ProducerCryptoFailureAction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field cryptoFailureAction:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
       5: return

  public void setCustomMessageRouter(org.apache.pulsar.client.api.MessageRouter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field customMessageRouter:Lorg/apache/pulsar/client/api/MessageRouter;
       5: return

  public void setBatchingMaxPublishDelayMicros(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #29                 // Field batchingMaxPublishDelayMicros:J
       5: return

  public void setBatchingEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #41                 // Field batchingEnabled:Z
       5: return

  public void setBatcherBuilder(org.apache.pulsar.client.api.BatcherBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field batcherBuilder:Lorg/apache/pulsar/client/api/BatcherBuilder;
       5: return

  public void setChunkingEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field chunkingEnabled:Z
       5: return

  public void setCryptoKeyReader(org.apache.pulsar.client.api.CryptoKeyReader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field cryptoKeyReader:Lorg/apache/pulsar/client/api/CryptoKeyReader;
       5: return

  public void setMessageCrypto(org.apache.pulsar.client.api.MessageCrypto);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field messageCrypto:Lorg/apache/pulsar/client/api/MessageCrypto;
       5: return

  public void setEncryptionKeys(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field encryptionKeys:Ljava/util/Set;
       5: return

  public void setCompressionType(org.apache.pulsar.client.api.CompressionType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field compressionType:Lorg/apache/pulsar/client/api/CompressionType;
       5: return

  public void setInitialSequenceId(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field initialSequenceId:Ljava/lang/Long;
       5: return

  public void setAutoUpdatePartitions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #47                 // Field autoUpdatePartitions:Z
       5: return

  public void setAutoUpdatePartitionsIntervalSeconds(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #34                 // Field autoUpdatePartitionsIntervalSeconds:J
       5: return

  public void setMultiSchema(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #48                 // Field multiSchema:Z
       5: return

  public void setAccessMode(org.apache.pulsar.client.api.ProducerAccessMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field accessMode:Lorg/apache/pulsar/client/api/ProducerAccessMode;
       5: return

  public void setLazyStartPartitionedProducers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field lazyStartPartitionedProducers:Z
       5: return

  public void setProperties(java.util.SortedMap<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field properties:Ljava/util/SortedMap;
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #5                  // class org/apache/pulsar/client/impl/conf/ProducerConfigurationData
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #5                  // class org/apache/pulsar/client/impl/conf/ProducerConfigurationData
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #51                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #52                 // Method getSendTimeoutMs:()J
      35: aload_2
      36: invokevirtual #52                 // Method getSendTimeoutMs:()J
      39: lcmp
      40: ifeq          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: invokevirtual #53                 // Method isBlockIfQueueFull:()Z
      49: aload_2
      50: invokevirtual #53                 // Method isBlockIfQueueFull:()Z
      53: if_icmpeq     58
      56: iconst_0
      57: ireturn
      58: aload_0
      59: invokevirtual #54                 // Method getMaxPendingMessages:()I
      62: aload_2
      63: invokevirtual #54                 // Method getMaxPendingMessages:()I
      66: if_icmpeq     71
      69: iconst_0
      70: ireturn
      71: aload_0
      72: invokevirtual #55                 // Method getMaxPendingMessagesAcrossPartitions:()I
      75: aload_2
      76: invokevirtual #55                 // Method getMaxPendingMessagesAcrossPartitions:()I
      79: if_icmpeq     84
      82: iconst_0
      83: ireturn
      84: aload_0
      85: invokevirtual #56                 // Method getBatchingMaxPublishDelayMicros:()J
      88: aload_2
      89: invokevirtual #56                 // Method getBatchingMaxPublishDelayMicros:()J
      92: lcmp
      93: ifeq          98
      96: iconst_0
      97: ireturn
      98: aload_0
      99: invokevirtual #57                 // Method getBatchingPartitionSwitchFrequencyByPublishDelay:()I
     102: aload_2
     103: invokevirtual #57                 // Method getBatchingPartitionSwitchFrequencyByPublishDelay:()I
     106: if_icmpeq     111
     109: iconst_0
     110: ireturn
     111: aload_0
     112: invokevirtual #58                 // Method getBatchingMaxMessages:()I
     115: aload_2
     116: invokevirtual #58                 // Method getBatchingMaxMessages:()I
     119: if_icmpeq     124
     122: iconst_0
     123: ireturn
     124: aload_0
     125: invokevirtual #59                 // Method getBatchingMaxBytes:()I
     128: aload_2
     129: invokevirtual #59                 // Method getBatchingMaxBytes:()I
     132: if_icmpeq     137
     135: iconst_0
     136: ireturn
     137: aload_0
     138: invokevirtual #60                 // Method isBatchingEnabled:()Z
     141: aload_2
     142: invokevirtual #60                 // Method isBatchingEnabled:()Z
     145: if_icmpeq     150
     148: iconst_0
     149: ireturn
     150: aload_0
     151: invokevirtual #61                 // Method isChunkingEnabled:()Z
     154: aload_2
     155: invokevirtual #61                 // Method isChunkingEnabled:()Z
     158: if_icmpeq     163
     161: iconst_0
     162: ireturn
     163: aload_0
     164: invokevirtual #62                 // Method isAutoUpdatePartitions:()Z
     167: aload_2
     168: invokevirtual #62                 // Method isAutoUpdatePartitions:()Z
     171: if_icmpeq     176
     174: iconst_0
     175: ireturn
     176: aload_0
     177: invokevirtual #63                 // Method getAutoUpdatePartitionsIntervalSeconds:()J
     180: aload_2
     181: invokevirtual #63                 // Method getAutoUpdatePartitionsIntervalSeconds:()J
     184: lcmp
     185: ifeq          190
     188: iconst_0
     189: ireturn
     190: aload_0
     191: invokevirtual #64                 // Method isMultiSchema:()Z
     194: aload_2
     195: invokevirtual #64                 // Method isMultiSchema:()Z
     198: if_icmpeq     203
     201: iconst_0
     202: ireturn
     203: aload_0
     204: invokevirtual #65                 // Method isLazyStartPartitionedProducers:()Z
     207: aload_2
     208: invokevirtual #65                 // Method isLazyStartPartitionedProducers:()Z
     211: if_icmpeq     216
     214: iconst_0
     215: ireturn
     216: aload_0
     217: invokevirtual #66                 // Method getInitialSequenceId:()Ljava/lang/Long;
     220: astore_3
     221: aload_2
     222: invokevirtual #66                 // Method getInitialSequenceId:()Ljava/lang/Long;
     225: astore        4
     227: aload_3
     228: ifnonnull     239
     231: aload         4
     233: ifnull        250
     236: goto          248
     239: aload_3
     240: aload         4
     242: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     245: ifne          250
     248: iconst_0
     249: ireturn
     250: aload_0
     251: invokevirtual #68                 // Method getTopicName:()Ljava/lang/String;
     254: astore        5
     256: aload_2
     257: invokevirtual #68                 // Method getTopicName:()Ljava/lang/String;
     260: astore        6
     262: aload         5
     264: ifnonnull     275
     267: aload         6
     269: ifnull        287
     272: goto          285
     275: aload         5
     277: aload         6
     279: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     282: ifne          287
     285: iconst_0
     286: ireturn
     287: aload_0
     288: invokevirtual #69                 // Method getProducerName:()Ljava/lang/String;
     291: astore        7
     293: aload_2
     294: invokevirtual #69                 // Method getProducerName:()Ljava/lang/String;
     297: astore        8
     299: aload         7
     301: ifnonnull     312
     304: aload         8
     306: ifnull        324
     309: goto          322
     312: aload         7
     314: aload         8
     316: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     319: ifne          324
     322: iconst_0
     323: ireturn
     324: aload_0
     325: invokevirtual #70                 // Method getMessageRoutingMode:()Lorg/apache/pulsar/client/api/MessageRoutingMode;
     328: astore        9
     330: aload_2
     331: invokevirtual #70                 // Method getMessageRoutingMode:()Lorg/apache/pulsar/client/api/MessageRoutingMode;
     334: astore        10
     336: aload         9
     338: ifnonnull     349
     341: aload         10
     343: ifnull        361
     346: goto          359
     349: aload         9
     351: aload         10
     353: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     356: ifne          361
     359: iconst_0
     360: ireturn
     361: aload_0
     362: invokevirtual #71                 // Method getHashingScheme:()Lorg/apache/pulsar/client/api/HashingScheme;
     365: astore        11
     367: aload_2
     368: invokevirtual #71                 // Method getHashingScheme:()Lorg/apache/pulsar/client/api/HashingScheme;
     371: astore        12
     373: aload         11
     375: ifnonnull     386
     378: aload         12
     380: ifnull        398
     383: goto          396
     386: aload         11
     388: aload         12
     390: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     393: ifne          398
     396: iconst_0
     397: ireturn
     398: aload_0
     399: invokevirtual #72                 // Method getCryptoFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
     402: astore        13
     404: aload_2
     405: invokevirtual #72                 // Method getCryptoFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
     408: astore        14
     410: aload         13
     412: ifnonnull     423
     415: aload         14
     417: ifnull        435
     420: goto          433
     423: aload         13
     425: aload         14
     427: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     430: ifne          435
     433: iconst_0
     434: ireturn
     435: aload_0
     436: invokevirtual #73                 // Method getCustomMessageRouter:()Lorg/apache/pulsar/client/api/MessageRouter;
     439: astore        15
     441: aload_2
     442: invokevirtual #73                 // Method getCustomMessageRouter:()Lorg/apache/pulsar/client/api/MessageRouter;
     445: astore        16
     447: aload         15
     449: ifnonnull     460
     452: aload         16
     454: ifnull        472
     457: goto          470
     460: aload         15
     462: aload         16
     464: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     467: ifne          472
     470: iconst_0
     471: ireturn
     472: aload_0
     473: invokevirtual #74                 // Method getBatcherBuilder:()Lorg/apache/pulsar/client/api/BatcherBuilder;
     476: astore        17
     478: aload_2
     479: invokevirtual #74                 // Method getBatcherBuilder:()Lorg/apache/pulsar/client/api/BatcherBuilder;
     482: astore        18
     484: aload         17
     486: ifnonnull     497
     489: aload         18
     491: ifnull        509
     494: goto          507
     497: aload         17
     499: aload         18
     501: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     504: ifne          509
     507: iconst_0
     508: ireturn
     509: aload_0
     510: invokevirtual #75                 // Method getCryptoKeyReader:()Lorg/apache/pulsar/client/api/CryptoKeyReader;
     513: astore        19
     515: aload_2
     516: invokevirtual #75                 // Method getCryptoKeyReader:()Lorg/apache/pulsar/client/api/CryptoKeyReader;
     519: astore        20
     521: aload         19
     523: ifnonnull     534
     526: aload         20
     528: ifnull        546
     531: goto          544
     534: aload         19
     536: aload         20
     538: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     541: ifne          546
     544: iconst_0
     545: ireturn
     546: aload_0
     547: invokevirtual #76                 // Method getEncryptionKeys:()Ljava/util/Set;
     550: astore        21
     552: aload_2
     553: invokevirtual #76                 // Method getEncryptionKeys:()Ljava/util/Set;
     556: astore        22
     558: aload         21
     560: ifnonnull     571
     563: aload         22
     565: ifnull        583
     568: goto          581
     571: aload         21
     573: aload         22
     575: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     578: ifne          583
     581: iconst_0
     582: ireturn
     583: aload_0
     584: invokevirtual #77                 // Method getCompressionType:()Lorg/apache/pulsar/client/api/CompressionType;
     587: astore        23
     589: aload_2
     590: invokevirtual #77                 // Method getCompressionType:()Lorg/apache/pulsar/client/api/CompressionType;
     593: astore        24
     595: aload         23
     597: ifnonnull     608
     600: aload         24
     602: ifnull        620
     605: goto          618
     608: aload         23
     610: aload         24
     612: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     615: ifne          620
     618: iconst_0
     619: ireturn
     620: aload_0
     621: invokevirtual #78                 // Method getAccessMode:()Lorg/apache/pulsar/client/api/ProducerAccessMode;
     624: astore        25
     626: aload_2
     627: invokevirtual #78                 // Method getAccessMode:()Lorg/apache/pulsar/client/api/ProducerAccessMode;
     630: astore        26
     632: aload         25
     634: ifnonnull     645
     637: aload         26
     639: ifnull        657
     642: goto          655
     645: aload         25
     647: aload         26
     649: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     652: ifne          657
     655: iconst_0
     656: ireturn
     657: aload_0
     658: invokevirtual #79                 // Method getProperties:()Ljava/util/SortedMap;
     661: astore        27
     663: aload_2
     664: invokevirtual #79                 // Method getProperties:()Ljava/util/SortedMap;
     667: astore        28
     669: aload         27
     671: ifnonnull     682
     674: aload         28
     676: ifnull        694
     679: goto          692
     682: aload         27
     684: aload         28
     686: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     689: ifne          694
     692: iconst_0
     693: ireturn
     694: iconst_1
     695: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #5                  // class org/apache/pulsar/client/impl/conf/ProducerConfigurationData
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #52                 // Method getSendTimeoutMs:()J
       9: lstore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: lload_3
      15: bipush        32
      17: lushr
      18: lload_3
      19: lxor
      20: l2i
      21: iadd
      22: istore_2
      23: iload_2
      24: bipush        59
      26: imul
      27: aload_0
      28: invokevirtual #53                 // Method isBlockIfQueueFull:()Z
      31: ifeq          39
      34: bipush        79
      36: goto          41
      39: bipush        97
      41: iadd
      42: istore_2
      43: iload_2
      44: bipush        59
      46: imul
      47: aload_0
      48: invokevirtual #54                 // Method getMaxPendingMessages:()I
      51: iadd
      52: istore_2
      53: iload_2
      54: bipush        59
      56: imul
      57: aload_0
      58: invokevirtual #55                 // Method getMaxPendingMessagesAcrossPartitions:()I
      61: iadd
      62: istore_2
      63: aload_0
      64: invokevirtual #56                 // Method getBatchingMaxPublishDelayMicros:()J
      67: lstore        5
      69: iload_2
      70: bipush        59
      72: imul
      73: lload         5
      75: bipush        32
      77: lushr
      78: lload         5
      80: lxor
      81: l2i
      82: iadd
      83: istore_2
      84: iload_2
      85: bipush        59
      87: imul
      88: aload_0
      89: invokevirtual #57                 // Method getBatchingPartitionSwitchFrequencyByPublishDelay:()I
      92: iadd
      93: istore_2
      94: iload_2
      95: bipush        59
      97: imul
      98: aload_0
      99: invokevirtual #58                 // Method getBatchingMaxMessages:()I
     102: iadd
     103: istore_2
     104: iload_2
     105: bipush        59
     107: imul
     108: aload_0
     109: invokevirtual #59                 // Method getBatchingMaxBytes:()I
     112: iadd
     113: istore_2
     114: iload_2
     115: bipush        59
     117: imul
     118: aload_0
     119: invokevirtual #60                 // Method isBatchingEnabled:()Z
     122: ifeq          130
     125: bipush        79
     127: goto          132
     130: bipush        97
     132: iadd
     133: istore_2
     134: iload_2
     135: bipush        59
     137: imul
     138: aload_0
     139: invokevirtual #61                 // Method isChunkingEnabled:()Z
     142: ifeq          150
     145: bipush        79
     147: goto          152
     150: bipush        97
     152: iadd
     153: istore_2
     154: iload_2
     155: bipush        59
     157: imul
     158: aload_0
     159: invokevirtual #62                 // Method isAutoUpdatePartitions:()Z
     162: ifeq          170
     165: bipush        79
     167: goto          172
     170: bipush        97
     172: iadd
     173: istore_2
     174: aload_0
     175: invokevirtual #63                 // Method getAutoUpdatePartitionsIntervalSeconds:()J
     178: lstore        7
     180: iload_2
     181: bipush        59
     183: imul
     184: lload         7
     186: bipush        32
     188: lushr
     189: lload         7
     191: lxor
     192: l2i
     193: iadd
     194: istore_2
     195: iload_2
     196: bipush        59
     198: imul
     199: aload_0
     200: invokevirtual #64                 // Method isMultiSchema:()Z
     203: ifeq          211
     206: bipush        79
     208: goto          213
     211: bipush        97
     213: iadd
     214: istore_2
     215: iload_2
     216: bipush        59
     218: imul
     219: aload_0
     220: invokevirtual #65                 // Method isLazyStartPartitionedProducers:()Z
     223: ifeq          231
     226: bipush        79
     228: goto          233
     231: bipush        97
     233: iadd
     234: istore_2
     235: aload_0
     236: invokevirtual #66                 // Method getInitialSequenceId:()Ljava/lang/Long;
     239: astore        9
     241: iload_2
     242: bipush        59
     244: imul
     245: aload         9
     247: ifnonnull     255
     250: bipush        43
     252: goto          260
     255: aload         9
     257: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     260: iadd
     261: istore_2
     262: aload_0
     263: invokevirtual #68                 // Method getTopicName:()Ljava/lang/String;
     266: astore        10
     268: iload_2
     269: bipush        59
     271: imul
     272: aload         10
     274: ifnonnull     282
     277: bipush        43
     279: goto          287
     282: aload         10
     284: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     287: iadd
     288: istore_2
     289: aload_0
     290: invokevirtual #69                 // Method getProducerName:()Ljava/lang/String;
     293: astore        11
     295: iload_2
     296: bipush        59
     298: imul
     299: aload         11
     301: ifnonnull     309
     304: bipush        43
     306: goto          314
     309: aload         11
     311: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     314: iadd
     315: istore_2
     316: aload_0
     317: invokevirtual #70                 // Method getMessageRoutingMode:()Lorg/apache/pulsar/client/api/MessageRoutingMode;
     320: astore        12
     322: iload_2
     323: bipush        59
     325: imul
     326: aload         12
     328: ifnonnull     336
     331: bipush        43
     333: goto          341
     336: aload         12
     338: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     341: iadd
     342: istore_2
     343: aload_0
     344: invokevirtual #71                 // Method getHashingScheme:()Lorg/apache/pulsar/client/api/HashingScheme;
     347: astore        13
     349: iload_2
     350: bipush        59
     352: imul
     353: aload         13
     355: ifnonnull     363
     358: bipush        43
     360: goto          368
     363: aload         13
     365: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     368: iadd
     369: istore_2
     370: aload_0
     371: invokevirtual #72                 // Method getCryptoFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
     374: astore        14
     376: iload_2
     377: bipush        59
     379: imul
     380: aload         14
     382: ifnonnull     390
     385: bipush        43
     387: goto          395
     390: aload         14
     392: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     395: iadd
     396: istore_2
     397: aload_0
     398: invokevirtual #73                 // Method getCustomMessageRouter:()Lorg/apache/pulsar/client/api/MessageRouter;
     401: astore        15
     403: iload_2
     404: bipush        59
     406: imul
     407: aload         15
     409: ifnonnull     417
     412: bipush        43
     414: goto          422
     417: aload         15
     419: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     422: iadd
     423: istore_2
     424: aload_0
     425: invokevirtual #74                 // Method getBatcherBuilder:()Lorg/apache/pulsar/client/api/BatcherBuilder;
     428: astore        16
     430: iload_2
     431: bipush        59
     433: imul
     434: aload         16
     436: ifnonnull     444
     439: bipush        43
     441: goto          449
     444: aload         16
     446: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     449: iadd
     450: istore_2
     451: aload_0
     452: invokevirtual #75                 // Method getCryptoKeyReader:()Lorg/apache/pulsar/client/api/CryptoKeyReader;
     455: astore        17
     457: iload_2
     458: bipush        59
     460: imul
     461: aload         17
     463: ifnonnull     471
     466: bipush        43
     468: goto          476
     471: aload         17
     473: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     476: iadd
     477: istore_2
     478: aload_0
     479: invokevirtual #76                 // Method getEncryptionKeys:()Ljava/util/Set;
     482: astore        18
     484: iload_2
     485: bipush        59
     487: imul
     488: aload         18
     490: ifnonnull     498
     493: bipush        43
     495: goto          503
     498: aload         18
     500: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     503: iadd
     504: istore_2
     505: aload_0
     506: invokevirtual #77                 // Method getCompressionType:()Lorg/apache/pulsar/client/api/CompressionType;
     509: astore        19
     511: iload_2
     512: bipush        59
     514: imul
     515: aload         19
     517: ifnonnull     525
     520: bipush        43
     522: goto          530
     525: aload         19
     527: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     530: iadd
     531: istore_2
     532: aload_0
     533: invokevirtual #78                 // Method getAccessMode:()Lorg/apache/pulsar/client/api/ProducerAccessMode;
     536: astore        20
     538: iload_2
     539: bipush        59
     541: imul
     542: aload         20
     544: ifnonnull     552
     547: bipush        43
     549: goto          557
     552: aload         20
     554: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     557: iadd
     558: istore_2
     559: aload_0
     560: invokevirtual #79                 // Method getProperties:()Ljava/util/SortedMap;
     563: astore        21
     565: iload_2
     566: bipush        59
     568: imul
     569: aload         21
     571: ifnonnull     579
     574: bipush        43
     576: goto          584
     579: aload         21
     581: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     584: iadd
     585: istore_2
     586: iload_2
     587: ireturn

  public java.lang.String toString();
    Code:
       0: new           #81                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #83                 // String ProducerConfigurationData(topicName=
       9: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #68                 // Method getTopicName:()Ljava/lang/String;
      16: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #85                 // String , producerName=
      21: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #69                 // Method getProducerName:()Ljava/lang/String;
      28: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #86                 // String , sendTimeoutMs=
      33: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #52                 // Method getSendTimeoutMs:()J
      40: invokevirtual #87                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #88                 // String , blockIfQueueFull=
      45: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #53                 // Method isBlockIfQueueFull:()Z
      52: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      55: ldc           #90                 // String , maxPendingMessages=
      57: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #54                 // Method getMaxPendingMessages:()I
      64: invokevirtual #91                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #92                 // String , maxPendingMessagesAcrossPartitions=
      69: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #55                 // Method getMaxPendingMessagesAcrossPartitions:()I
      76: invokevirtual #91                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: ldc           #93                 // String , messageRoutingMode=
      81: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #70                 // Method getMessageRoutingMode:()Lorg/apache/pulsar/client/api/MessageRoutingMode;
      88: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: ldc           #95                 // String , hashingScheme=
      93: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #71                 // Method getHashingScheme:()Lorg/apache/pulsar/client/api/HashingScheme;
     100: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: ldc           #96                 // String , cryptoFailureAction=
     105: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: invokevirtual #72                 // Method getCryptoFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
     112: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     115: ldc           #97                 // String , customMessageRouter=
     117: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_0
     121: invokevirtual #73                 // Method getCustomMessageRouter:()Lorg/apache/pulsar/client/api/MessageRouter;
     124: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     127: ldc           #98                 // String , batchingMaxPublishDelayMicros=
     129: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_0
     133: invokevirtual #56                 // Method getBatchingMaxPublishDelayMicros:()J
     136: invokevirtual #87                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     139: ldc           #99                 // String , batchingPartitionSwitchFrequencyByPublishDelay=
     141: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_0
     145: invokevirtual #57                 // Method getBatchingPartitionSwitchFrequencyByPublishDelay:()I
     148: invokevirtual #91                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     151: ldc           #100                // String , batchingMaxMessages=
     153: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_0
     157: invokevirtual #58                 // Method getBatchingMaxMessages:()I
     160: invokevirtual #91                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     163: ldc           #101                // String , batchingMaxBytes=
     165: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_0
     169: invokevirtual #59                 // Method getBatchingMaxBytes:()I
     172: invokevirtual #91                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     175: ldc           #102                // String , batchingEnabled=
     177: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload_0
     181: invokevirtual #60                 // Method isBatchingEnabled:()Z
     184: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     187: ldc           #103                // String , batcherBuilder=
     189: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: aload_0
     193: invokevirtual #74                 // Method getBatcherBuilder:()Lorg/apache/pulsar/client/api/BatcherBuilder;
     196: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     199: ldc           #104                // String , chunkingEnabled=
     201: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: aload_0
     205: invokevirtual #61                 // Method isChunkingEnabled:()Z
     208: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     211: ldc           #105                // String , cryptoKeyReader=
     213: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: aload_0
     217: invokevirtual #75                 // Method getCryptoKeyReader:()Lorg/apache/pulsar/client/api/CryptoKeyReader;
     220: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     223: ldc           #106                // String , messageCrypto=
     225: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: aload_0
     229: invokevirtual #107                // Method getMessageCrypto:()Lorg/apache/pulsar/client/api/MessageCrypto;
     232: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     235: ldc           #108                // String , encryptionKeys=
     237: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: aload_0
     241: invokevirtual #76                 // Method getEncryptionKeys:()Ljava/util/Set;
     244: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     247: ldc           #109                // String , compressionType=
     249: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: aload_0
     253: invokevirtual #77                 // Method getCompressionType:()Lorg/apache/pulsar/client/api/CompressionType;
     256: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     259: ldc           #110                // String , initialSequenceId=
     261: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: aload_0
     265: invokevirtual #66                 // Method getInitialSequenceId:()Ljava/lang/Long;
     268: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     271: ldc           #111                // String , autoUpdatePartitions=
     273: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: aload_0
     277: invokevirtual #62                 // Method isAutoUpdatePartitions:()Z
     280: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     283: ldc           #112                // String , autoUpdatePartitionsIntervalSeconds=
     285: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     288: aload_0
     289: invokevirtual #63                 // Method getAutoUpdatePartitionsIntervalSeconds:()J
     292: invokevirtual #87                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     295: ldc           #113                // String , multiSchema=
     297: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     300: aload_0
     301: invokevirtual #64                 // Method isMultiSchema:()Z
     304: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     307: ldc           #114                // String , accessMode=
     309: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     312: aload_0
     313: invokevirtual #78                 // Method getAccessMode:()Lorg/apache/pulsar/client/api/ProducerAccessMode;
     316: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     319: ldc           #115                // String , lazyStartPartitionedProducers=
     321: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     324: aload_0
     325: invokevirtual #65                 // Method isLazyStartPartitionedProducers:()Z
     328: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     331: ldc           #116                // String , properties=
     333: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     336: aload_0
     337: invokevirtual #79                 // Method getProperties:()Ljava/util/SortedMap;
     340: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     343: ldc           #117                // String )
     345: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     348: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     351: areturn

  public org.apache.pulsar.client.impl.conf.ProducerConfigurationData();
    Code:
       0: aload_0
       1: invokespecial #119                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #35                 // Field topicName:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: putfield      #17                 // Field producerName:Ljava/lang/String;
      14: aload_0
      15: ldc2_w        #120                // long 30000l
      18: putfield      #26                 // Field sendTimeoutMs:J
      21: aload_0
      22: iconst_0
      23: putfield      #36                 // Field blockIfQueueFull:Z
      26: aload_0
      27: iconst_0
      28: putfield      #19                 // Field maxPendingMessages:I
      31: aload_0
      32: iconst_0
      33: putfield      #21                 // Field maxPendingMessagesAcrossPartitions:I
      36: aload_0
      37: aconst_null
      38: putfield      #37                 // Field messageRoutingMode:Lorg/apache/pulsar/client/api/MessageRoutingMode;
      41: aload_0
      42: getstatic     #122                // Field org/apache/pulsar/client/api/HashingScheme.JavaStringHash:Lorg/apache/pulsar/client/api/HashingScheme;
      45: putfield      #38                 // Field hashingScheme:Lorg/apache/pulsar/client/api/HashingScheme;
      48: aload_0
      49: getstatic     #123                // Field org/apache/pulsar/client/api/ProducerCryptoFailureAction.FAIL:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      52: putfield      #39                 // Field cryptoFailureAction:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      55: aload_0
      56: aconst_null
      57: putfield      #40                 // Field customMessageRouter:Lorg/apache/pulsar/client/api/MessageRouter;
      60: aload_0
      61: getstatic     #124                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      64: lconst_1
      65: invokevirtual #28                 // Method java/util/concurrent/TimeUnit.toMicros:(J)J
      68: putfield      #29                 // Field batchingMaxPublishDelayMicros:J
      71: aload_0
      72: bipush        10
      74: putfield      #31                 // Field batchingPartitionSwitchFrequencyByPublishDelay:I
      77: aload_0
      78: sipush        1000
      81: putfield      #22                 // Field batchingMaxMessages:I
      84: aload_0
      85: ldc           #125                // int 131072
      87: putfield      #23                 // Field batchingMaxBytes:I
      90: aload_0
      91: iconst_1
      92: putfield      #41                 // Field batchingEnabled:Z
      95: aload_0
      96: getstatic     #126                // Field org/apache/pulsar/client/api/BatcherBuilder.DEFAULT:Lorg/apache/pulsar/client/api/BatcherBuilder;
      99: putfield      #42                 // Field batcherBuilder:Lorg/apache/pulsar/client/api/BatcherBuilder;
     102: aload_0
     103: iconst_0
     104: putfield      #43                 // Field chunkingEnabled:Z
     107: aload_0
     108: aconst_null
     109: putfield      #44                 // Field messageCrypto:Lorg/apache/pulsar/client/api/MessageCrypto;
     112: aload_0
     113: new           #127                // class java/util/TreeSet
     116: dup
     117: invokespecial #128                // Method java/util/TreeSet."<init>":()V
     120: putfield      #1                  // Field encryptionKeys:Ljava/util/Set;
     123: aload_0
     124: getstatic     #129                // Field org/apache/pulsar/client/api/CompressionType.NONE:Lorg/apache/pulsar/client/api/CompressionType;
     127: putfield      #45                 // Field compressionType:Lorg/apache/pulsar/client/api/CompressionType;
     130: aload_0
     131: aconst_null
     132: putfield      #46                 // Field initialSequenceId:Ljava/lang/Long;
     135: aload_0
     136: iconst_1
     137: putfield      #47                 // Field autoUpdatePartitions:Z
     140: aload_0
     141: ldc2_w        #130                // long 60l
     144: putfield      #34                 // Field autoUpdatePartitionsIntervalSeconds:J
     147: aload_0
     148: iconst_1
     149: putfield      #48                 // Field multiSchema:Z
     152: aload_0
     153: getstatic     #132                // Field org/apache/pulsar/client/api/ProducerAccessMode.Shared:Lorg/apache/pulsar/client/api/ProducerAccessMode;
     156: putfield      #49                 // Field accessMode:Lorg/apache/pulsar/client/api/ProducerAccessMode;
     159: aload_0
     160: iconst_0
     161: putfield      #50                 // Field lazyStartPartitionedProducers:Z
     164: aload_0
     165: new           #7                  // class java/util/TreeMap
     168: dup
     169: invokespecial #133                // Method java/util/TreeMap."<init>":()V
     172: putfield      #8                  // Field properties:Ljava/util/SortedMap;
     175: return

  public org.apache.pulsar.client.impl.conf.ProducerConfigurationData(java.lang.String, java.lang.String, long, boolean, int, int, org.apache.pulsar.client.api.MessageRoutingMode, org.apache.pulsar.client.api.HashingScheme, org.apache.pulsar.client.api.ProducerCryptoFailureAction, org.apache.pulsar.client.api.MessageRouter, long, int, int, int, boolean, org.apache.pulsar.client.api.BatcherBuilder, boolean, org.apache.pulsar.client.api.CryptoKeyReader, org.apache.pulsar.client.api.MessageCrypto, java.util.Set<java.lang.String>, org.apache.pulsar.client.api.CompressionType, java.lang.Long, boolean, long, boolean, org.apache.pulsar.client.api.ProducerAccessMode, boolean, java.util.SortedMap<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #119                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #35                 // Field topicName:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: putfield      #17                 // Field producerName:Ljava/lang/String;
      14: aload_0
      15: ldc2_w        #120                // long 30000l
      18: putfield      #26                 // Field sendTimeoutMs:J
      21: aload_0
      22: iconst_0
      23: putfield      #36                 // Field blockIfQueueFull:Z
      26: aload_0
      27: iconst_0
      28: putfield      #19                 // Field maxPendingMessages:I
      31: aload_0
      32: iconst_0
      33: putfield      #21                 // Field maxPendingMessagesAcrossPartitions:I
      36: aload_0
      37: aconst_null
      38: putfield      #37                 // Field messageRoutingMode:Lorg/apache/pulsar/client/api/MessageRoutingMode;
      41: aload_0
      42: getstatic     #122                // Field org/apache/pulsar/client/api/HashingScheme.JavaStringHash:Lorg/apache/pulsar/client/api/HashingScheme;
      45: putfield      #38                 // Field hashingScheme:Lorg/apache/pulsar/client/api/HashingScheme;
      48: aload_0
      49: getstatic     #123                // Field org/apache/pulsar/client/api/ProducerCryptoFailureAction.FAIL:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      52: putfield      #39                 // Field cryptoFailureAction:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      55: aload_0
      56: aconst_null
      57: putfield      #40                 // Field customMessageRouter:Lorg/apache/pulsar/client/api/MessageRouter;
      60: aload_0
      61: getstatic     #124                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      64: lconst_1
      65: invokevirtual #28                 // Method java/util/concurrent/TimeUnit.toMicros:(J)J
      68: putfield      #29                 // Field batchingMaxPublishDelayMicros:J
      71: aload_0
      72: bipush        10
      74: putfield      #31                 // Field batchingPartitionSwitchFrequencyByPublishDelay:I
      77: aload_0
      78: sipush        1000
      81: putfield      #22                 // Field batchingMaxMessages:I
      84: aload_0
      85: ldc           #125                // int 131072
      87: putfield      #23                 // Field batchingMaxBytes:I
      90: aload_0
      91: iconst_1
      92: putfield      #41                 // Field batchingEnabled:Z
      95: aload_0
      96: getstatic     #126                // Field org/apache/pulsar/client/api/BatcherBuilder.DEFAULT:Lorg/apache/pulsar/client/api/BatcherBuilder;
      99: putfield      #42                 // Field batcherBuilder:Lorg/apache/pulsar/client/api/BatcherBuilder;
     102: aload_0
     103: iconst_0
     104: putfield      #43                 // Field chunkingEnabled:Z
     107: aload_0
     108: aconst_null
     109: putfield      #44                 // Field messageCrypto:Lorg/apache/pulsar/client/api/MessageCrypto;
     112: aload_0
     113: new           #127                // class java/util/TreeSet
     116: dup
     117: invokespecial #128                // Method java/util/TreeSet."<init>":()V
     120: putfield      #1                  // Field encryptionKeys:Ljava/util/Set;
     123: aload_0
     124: getstatic     #129                // Field org/apache/pulsar/client/api/CompressionType.NONE:Lorg/apache/pulsar/client/api/CompressionType;
     127: putfield      #45                 // Field compressionType:Lorg/apache/pulsar/client/api/CompressionType;
     130: aload_0
     131: aconst_null
     132: putfield      #46                 // Field initialSequenceId:Ljava/lang/Long;
     135: aload_0
     136: iconst_1
     137: putfield      #47                 // Field autoUpdatePartitions:Z
     140: aload_0
     141: ldc2_w        #130                // long 60l
     144: putfield      #34                 // Field autoUpdatePartitionsIntervalSeconds:J
     147: aload_0
     148: iconst_1
     149: putfield      #48                 // Field multiSchema:Z
     152: aload_0
     153: getstatic     #132                // Field org/apache/pulsar/client/api/ProducerAccessMode.Shared:Lorg/apache/pulsar/client/api/ProducerAccessMode;
     156: putfield      #49                 // Field accessMode:Lorg/apache/pulsar/client/api/ProducerAccessMode;
     159: aload_0
     160: iconst_0
     161: putfield      #50                 // Field lazyStartPartitionedProducers:Z
     164: aload_0
     165: new           #7                  // class java/util/TreeMap
     168: dup
     169: invokespecial #133                // Method java/util/TreeMap."<init>":()V
     172: putfield      #8                  // Field properties:Ljava/util/SortedMap;
     175: aload_0
     176: aload_1
     177: putfield      #35                 // Field topicName:Ljava/lang/String;
     180: aload_0
     181: aload_2
     182: putfield      #17                 // Field producerName:Ljava/lang/String;
     185: aload_0
     186: lload_3
     187: putfield      #26                 // Field sendTimeoutMs:J
     190: aload_0
     191: iload         5
     193: putfield      #36                 // Field blockIfQueueFull:Z
     196: aload_0
     197: iload         6
     199: putfield      #19                 // Field maxPendingMessages:I
     202: aload_0
     203: iload         7
     205: putfield      #21                 // Field maxPendingMessagesAcrossPartitions:I
     208: aload_0
     209: aload         8
     211: putfield      #37                 // Field messageRoutingMode:Lorg/apache/pulsar/client/api/MessageRoutingMode;
     214: aload_0
     215: aload         9
     217: putfield      #38                 // Field hashingScheme:Lorg/apache/pulsar/client/api/HashingScheme;
     220: aload_0
     221: aload         10
     223: putfield      #39                 // Field cryptoFailureAction:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
     226: aload_0
     227: aload         11
     229: putfield      #40                 // Field customMessageRouter:Lorg/apache/pulsar/client/api/MessageRouter;
     232: aload_0
     233: lload         12
     235: putfield      #29                 // Field batchingMaxPublishDelayMicros:J
     238: aload_0
     239: iload         14
     241: putfield      #31                 // Field batchingPartitionSwitchFrequencyByPublishDelay:I
     244: aload_0
     245: iload         15
     247: putfield      #22                 // Field batchingMaxMessages:I
     250: aload_0
     251: iload         16
     253: putfield      #23                 // Field batchingMaxBytes:I
     256: aload_0
     257: iload         17
     259: putfield      #41                 // Field batchingEnabled:Z
     262: aload_0
     263: aload         18
     265: putfield      #42                 // Field batcherBuilder:Lorg/apache/pulsar/client/api/BatcherBuilder;
     268: aload_0
     269: iload         19
     271: putfield      #43                 // Field chunkingEnabled:Z
     274: aload_0
     275: aload         20
     277: putfield      #3                  // Field cryptoKeyReader:Lorg/apache/pulsar/client/api/CryptoKeyReader;
     280: aload_0
     281: aload         21
     283: putfield      #44                 // Field messageCrypto:Lorg/apache/pulsar/client/api/MessageCrypto;
     286: aload_0
     287: aload         22
     289: putfield      #1                  // Field encryptionKeys:Ljava/util/Set;
     292: aload_0
     293: aload         23
     295: putfield      #45                 // Field compressionType:Lorg/apache/pulsar/client/api/CompressionType;
     298: aload_0
     299: aload         24
     301: putfield      #46                 // Field initialSequenceId:Ljava/lang/Long;
     304: aload_0
     305: iload         25
     307: putfield      #47                 // Field autoUpdatePartitions:Z
     310: aload_0
     311: lload         26
     313: putfield      #34                 // Field autoUpdatePartitionsIntervalSeconds:J
     316: aload_0
     317: iload         28
     319: putfield      #48                 // Field multiSchema:Z
     322: aload_0
     323: aload         29
     325: putfield      #49                 // Field accessMode:Lorg/apache/pulsar/client/api/ProducerAccessMode;
     328: aload_0
     329: iload         30
     331: putfield      #50                 // Field lazyStartPartitionedProducers:Z
     334: aload_0
     335: aload         31
     337: putfield      #8                  // Field properties:Ljava/util/SortedMap;
     340: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #134                // Method clone:()Lorg/apache/pulsar/client/impl/conf/ProducerConfigurationData;
       4: areturn
}
