Compiled from "ExcludeByValueTypeAdapterFactory.java"
class io.gsonfire.gson.ExcludeByValueTypeAdapterFactory$ExcludeByValueTypeAdapter extends com.google.gson.TypeAdapter {
  private final com.google.gson.Gson gson;

  private final com.google.gson.TypeAdapter originalTypeAdapter;

  final io.gsonfire.gson.ExcludeByValueTypeAdapterFactory this$0;

  public io.gsonfire.gson.ExcludeByValueTypeAdapterFactory$ExcludeByValueTypeAdapter(io.gsonfire.gson.ExcludeByValueTypeAdapterFactory, com.google.gson.Gson, com.google.gson.TypeAdapter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/gsonfire/gson/ExcludeByValueTypeAdapterFactory;
       5: aload_0
       6: invokespecial #2                  // Method com/google/gson/TypeAdapter."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field gson:Lcom/google/gson/Gson;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field originalTypeAdapter:Lcom/google/gson/TypeAdapter;
      19: return

  public void write(com.google.gson.stream.JsonWriter, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     16
       4: aload_0
       5: getfield      #4                  // Field originalTypeAdapter:Lcom/google/gson/TypeAdapter;
       8: aload_1
       9: aload_2
      10: invokevirtual #5                  // Method com/google/gson/TypeAdapter.write:(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V
      13: goto          233
      16: aconst_null
      17: astore_3
      18: aload_0
      19: getfield      #1                  // Field this$0:Lio/gsonfire/gson/ExcludeByValueTypeAdapterFactory;
      22: invokestatic  #6                  // Method io/gsonfire/gson/ExcludeByValueTypeAdapterFactory.access$000:(Lio/gsonfire/gson/ExcludeByValueTypeAdapterFactory;)Lio/gsonfire/util/reflection/FieldInspector;
      25: aload_2
      26: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: ldc           #8                  // class io/gsonfire/annotations/ExcludeByValue
      31: invokevirtual #9                  // Method io/gsonfire/util/reflection/FieldInspector.getAnnotatedMembers:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Collection;
      34: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      39: astore        4
      41: aload         4
      43: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          208
      51: aload         4
      53: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #13                 // class java/lang/reflect/Field
      61: astore        5
      63: aload         5
      65: ldc           #8                  // class io/gsonfire/annotations/ExcludeByValue
      67: invokevirtual #14                 // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      70: checkcast     #8                  // class io/gsonfire/annotations/ExcludeByValue
      73: astore        6
      75: aload         6
      77: invokeinterface #15,  1           // InterfaceMethod io/gsonfire/annotations/ExcludeByValue.value:()Ljava/lang/Class;
      82: astore        7
      84: aload_0
      85: getfield      #1                  // Field this$0:Lio/gsonfire/gson/ExcludeByValueTypeAdapterFactory;
      88: invokestatic  #16                 // Method io/gsonfire/gson/ExcludeByValueTypeAdapterFactory.access$100:(Lio/gsonfire/gson/ExcludeByValueTypeAdapterFactory;)Lio/gsonfire/util/reflection/Factory;
      91: aload         7
      93: invokeinterface #17,  2           // InterfaceMethod io/gsonfire/util/reflection/Factory.get:(Ljava/lang/Class;)Ljava/lang/Object;
      98: checkcast     #18                 // class io/gsonfire/gson/ExclusionByValueStrategy
     101: astore        8
     103: aload         8
     105: aload         5
     107: aload_2
     108: invokevirtual #19                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
     111: invokeinterface #20,  2           // InterfaceMethod io/gsonfire/gson/ExclusionByValueStrategy.shouldSkipField:(Ljava/lang/Object;)Z
     116: ifeq          190
     119: aload_0
     120: getfield      #1                  // Field this$0:Lio/gsonfire/gson/ExcludeByValueTypeAdapterFactory;
     123: invokestatic  #21                 // Method io/gsonfire/gson/ExcludeByValueTypeAdapterFactory.access$200:(Lio/gsonfire/gson/ExcludeByValueTypeAdapterFactory;)Lio/gsonfire/util/FieldNameResolver;
     126: aload         5
     128: invokevirtual #22                 // Method io/gsonfire/util/FieldNameResolver.getFieldName:(Ljava/lang/reflect/Field;)Ljava/lang/String;
     131: astore        9
     133: aload         9
     135: ifnull        190
     138: aload_3
     139: ifnonnull     183
     142: aload_0
     143: getfield      #4                  // Field originalTypeAdapter:Lcom/google/gson/TypeAdapter;
     146: aload_1
     147: aload_2
     148: invokestatic  #23                 // Method io/gsonfire/util/JsonUtils.toJsonTree:(Lcom/google/gson/TypeAdapter;Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)Lcom/google/gson/JsonElement;
     151: astore        10
     153: aload         10
     155: ifnull        174
     158: aload         10
     160: invokevirtual #24                 // Method com/google/gson/JsonElement.isJsonNull:()Z
     163: ifne          174
     166: aload         10
     168: invokevirtual #25                 // Method com/google/gson/JsonElement.isJsonObject:()Z
     171: ifne          177
     174: goto          208
     177: aload         10
     179: invokevirtual #26                 // Method com/google/gson/JsonElement.getAsJsonObject:()Lcom/google/gson/JsonObject;
     182: astore_3
     183: aload_3
     184: aload         9
     186: invokevirtual #27                 // Method com/google/gson/JsonObject.remove:(Ljava/lang/String;)Lcom/google/gson/JsonElement;
     189: pop
     190: goto          205
     193: astore        6
     195: new           #29                 // class java/lang/RuntimeException
     198: dup
     199: aload         6
     201: invokespecial #30                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     204: athrow
     205: goto          41
     208: aload_3
     209: ifnull        224
     212: aload_0
     213: getfield      #3                  // Field gson:Lcom/google/gson/Gson;
     216: aload_3
     217: aload_1
     218: invokevirtual #31                 // Method com/google/gson/Gson.toJson:(Lcom/google/gson/JsonElement;Lcom/google/gson/stream/JsonWriter;)V
     221: goto          233
     224: aload_0
     225: getfield      #4                  // Field originalTypeAdapter:Lcom/google/gson/TypeAdapter;
     228: aload_1
     229: aload_2
     230: invokevirtual #5                  // Method com/google/gson/TypeAdapter.write:(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V
     233: return
    Exception table:
       from    to  target type
          63   174   193   Class java/lang/IllegalAccessException
         177   190   193   Class java/lang/IllegalAccessException

  public java.lang.Object read(com.google.gson.stream.JsonReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field originalTypeAdapter:Lcom/google/gson/TypeAdapter;
       4: aload_1
       5: invokevirtual #32                 // Method com/google/gson/TypeAdapter.read:(Lcom/google/gson/stream/JsonReader;)Ljava/lang/Object;
       8: areturn
}
