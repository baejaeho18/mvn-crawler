Compiled from "BaseMpscLinkedAtomicArrayQueue.java"
abstract class io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue<E> extends io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueColdProducerFields<E> implements io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue<E>, io.netty.util.internal.shaded.org.jctools.queues.QueueProgressIndicators {
  private static final java.lang.Object JUMP;

  private static final java.lang.Object BUFFER_CONSUMED;

  private static final int CONTINUE_TO_P_INDEX_CAS;

  private static final int RETRY;

  private static final int QUEUE_FULL;

  private static final int QUEUE_RESIZE;

  static final boolean $assertionsDisabled;

  public io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue(int);
    Code:
       0: aload_0
       1: invokespecial #44                 // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/BaseMpscLinkedAtomicArrayQueueColdProducerFields."<init>":()V
       4: iload_1
       5: iconst_2
       6: ldc           #46                 // String initialCapacity
       8: invokestatic  #52                 // Method io/netty/util/internal/shaded/org/jctools/util/RangeUtil.checkGreaterThanOrEqual:(IILjava/lang/String;)I
      11: pop
      12: iload_1
      13: invokestatic  #58                 // Method io/netty/util/internal/shaded/org/jctools/util/Pow2.roundToPowerOfTwo:(I)I
      16: istore_2
      17: iload_2
      18: iconst_1
      19: isub
      20: iconst_1
      21: ishl
      22: i2l
      23: lstore_3
      24: iload_2
      25: iconst_1
      26: iadd
      27: invokestatic  #64                 // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.allocateRefArray:(I)Ljava/util/concurrent/atomic/AtomicReferenceArray;
      30: astore        5
      32: aload_0
      33: aload         5
      35: putfield      #68                 // Field producerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      38: aload_0
      39: lload_3
      40: putfield      #72                 // Field producerMask:J
      43: aload_0
      44: aload         5
      46: putfield      #75                 // Field consumerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      49: aload_0
      50: lload_3
      51: putfield      #78                 // Field consumerMask:J
      54: aload_0
      55: lload_3
      56: invokevirtual #82                 // Method soProducerLimit:(J)V
      59: return

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method lvConsumerIndex:()J
       4: lstore_1
       5: lload_1
       6: lstore        5
       8: aload_0
       9: invokevirtual #98                 // Method lvProducerIndex:()J
      12: lstore        7
      14: aload_0
      15: invokevirtual #95                 // Method lvConsumerIndex:()J
      18: lstore_1
      19: lload         5
      21: lload_1
      22: lcmp
      23: ifne          36
      26: lload         7
      28: lload_1
      29: lsub
      30: iconst_1
      31: lshr
      32: lstore_3
      33: goto          39
      36: goto          5
      39: lload_3
      40: ldc2_w        #99                 // long 2147483647l
      43: lcmp
      44: ifle          50
      47: ldc           #101                // int 2147483647
      49: ireturn
      50: lload_3
      51: l2i
      52: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method lvConsumerIndex:()J
       4: aload_0
       5: invokevirtual #98                 // Method lvProducerIndex:()J
       8: lcmp
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #119                // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public boolean offer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #124                // class java/lang/NullPointerException
       8: dup
       9: invokespecial #125                // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: invokevirtual #128                // Method lvProducerLimit:()J
      17: lstore        7
      19: aload_0
      20: invokevirtual #98                 // Method lvProducerIndex:()J
      23: lstore        5
      25: lload         5
      27: lconst_1
      28: land
      29: lconst_1
      30: lcmp
      31: ifne          37
      34: goto          13
      37: aload_0
      38: getfield      #72                 // Field producerMask:J
      41: lstore_2
      42: aload_0
      43: getfield      #68                 // Field producerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      46: astore        4
      48: lload         7
      50: lload         5
      52: lcmp
      53: ifgt          121
      56: aload_0
      57: lload_2
      58: lload         5
      60: lload         7
      62: invokespecial #132                // Method offerSlowPath:(JJJ)I
      65: istore        9
      67: iload         9
      69: tableswitch   { // 0 to 3
                     0: 100
                     1: 103
                     2: 106
                     3: 108
               default: 121
          }
     100: goto          121
     103: goto          13
     106: iconst_0
     107: ireturn
     108: aload_0
     109: lload_2
     110: aload         4
     112: lload         5
     114: aload_1
     115: aconst_null
     116: invokespecial #138                // Method resize:(JLjava/util/concurrent/atomic/AtomicReferenceArray;JLjava/lang/Object;Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$Supplier;)V
     119: iconst_1
     120: ireturn
     121: aload_0
     122: lload         5
     124: lload         5
     126: ldc2_w        #139                // long 2l
     129: ladd
     130: invokevirtual #144                // Method casProducerIndex:(JJ)Z
     133: ifeq          139
     136: goto          142
     139: goto          13
     142: lload         5
     144: lload_2
     145: invokestatic  #148                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.modifiedCalcCircularRefElementOffset:(JJ)I
     148: istore        7
     150: aload         4
     152: iload         7
     154: aload_1
     155: invokestatic  #152                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.soRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     158: iconst_1
     159: ireturn

  public E poll();
    Code:
       0: aload_0
       1: getfield      #75                 // Field consumerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_1
       5: aload_0
       6: invokevirtual #164                // Method lpConsumerIndex:()J
       9: lstore_2
      10: aload_0
      11: getfield      #78                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #148                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.modifiedCalcCircularRefElementOffset:(JJ)I
      22: istore        6
      24: aload_1
      25: iload         6
      27: invokestatic  #168                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.lvRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      30: astore        7
      32: aload         7
      34: ifnonnull     64
      37: lload_2
      38: aload_0
      39: invokevirtual #98                 // Method lvProducerIndex:()J
      42: lcmp
      43: ifeq          62
      46: aload_1
      47: iload         6
      49: invokestatic  #168                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.lvRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      52: astore        7
      54: aload         7
      56: ifnull        46
      59: goto          64
      62: aconst_null
      63: areturn
      64: aload         7
      66: getstatic     #170                // Field JUMP:Ljava/lang/Object;
      69: if_acmpne     89
      72: aload_0
      73: aload_1
      74: lload         4
      76: invokespecial #174                // Method nextBuffer:(Ljava/util/concurrent/atomic/AtomicReferenceArray;J)Ljava/util/concurrent/atomic/AtomicReferenceArray;
      79: astore        8
      81: aload_0
      82: aload         8
      84: lload_2
      85: invokespecial #178                // Method newBufferPoll:(Ljava/util/concurrent/atomic/AtomicReferenceArray;J)Ljava/lang/Object;
      88: areturn
      89: aload_1
      90: iload         6
      92: aconst_null
      93: invokestatic  #152                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.soRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      96: aload_0
      97: lload_2
      98: ldc2_w        #139                // long 2l
     101: ladd
     102: invokevirtual #181                // Method soConsumerIndex:(J)V
     105: aload         7
     107: areturn

  public E peek();
    Code:
       0: aload_0
       1: getfield      #75                 // Field consumerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_1
       5: aload_0
       6: invokevirtual #164                // Method lpConsumerIndex:()J
       9: lstore_2
      10: aload_0
      11: getfield      #78                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #148                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.modifiedCalcCircularRefElementOffset:(JJ)I
      22: istore        6
      24: aload_1
      25: iload         6
      27: invokestatic  #168                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.lvRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      30: astore        7
      32: aload         7
      34: ifnonnull     59
      37: lload_2
      38: aload_0
      39: invokevirtual #98                 // Method lvProducerIndex:()J
      42: lcmp
      43: ifeq          59
      46: aload_1
      47: iload         6
      49: invokestatic  #168                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.lvRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      52: astore        7
      54: aload         7
      56: ifnull        46
      59: aload         7
      61: getstatic     #170                // Field JUMP:Ljava/lang/Object;
      64: if_acmpne     80
      67: aload_0
      68: aload_0
      69: aload_1
      70: lload         4
      72: invokespecial #174                // Method nextBuffer:(Ljava/util/concurrent/atomic/AtomicReferenceArray;J)Ljava/util/concurrent/atomic/AtomicReferenceArray;
      75: lload_2
      76: invokespecial #186                // Method newBufferPeek:(Ljava/util/concurrent/atomic/AtomicReferenceArray;J)Ljava/lang/Object;
      79: areturn
      80: aload         7
      82: areturn

  private int offerSlowPath(long, long, long);
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method lvConsumerIndex:()J
       4: lstore        7
       6: aload_0
       7: lload_1
       8: invokevirtual #190                // Method getCurrentBufferCapacity:(J)J
      11: lstore        9
      13: lload         7
      15: lload         9
      17: ladd
      18: lload_3
      19: lcmp
      20: ifle          41
      23: aload_0
      24: lload         5
      26: lload         7
      28: lload         9
      30: ladd
      31: invokevirtual #193                // Method casProducerLimit:(JJ)Z
      34: ifne          39
      37: iconst_1
      38: ireturn
      39: iconst_0
      40: ireturn
      41: aload_0
      42: lload_3
      43: lload         7
      45: invokevirtual #197                // Method availableInQueue:(JJ)J
      48: lconst_0
      49: lcmp
      50: ifgt          55
      53: iconst_2
      54: ireturn
      55: aload_0
      56: lload_3
      57: lload_3
      58: lconst_1
      59: ladd
      60: invokevirtual #144                // Method casProducerIndex:(JJ)Z
      63: ifeq          68
      66: iconst_3
      67: ireturn
      68: iconst_1
      69: ireturn

  protected abstract long availableInQueue(long, long);

  private java.util.concurrent.atomic.AtomicReferenceArray<E> nextBuffer(java.util.concurrent.atomic.AtomicReferenceArray<E>, long);
    Code:
       0: lload_2
       1: invokestatic  #204                // Method nextArrayOffset:(J)I
       4: istore        4
       6: aload_1
       7: iload         4
       9: invokestatic  #168                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.lvRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      12: checkcast     #134                // class java/util/concurrent/atomic/AtomicReferenceArray
      15: astore        5
      17: aload_0
      18: aload         5
      20: putfield      #75                 // Field consumerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      23: aload_0
      24: aload         5
      26: invokestatic  #208                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.length:(Ljava/util/concurrent/atomic/AtomicReferenceArray;)I
      29: iconst_2
      30: isub
      31: iconst_1
      32: ishl
      33: i2l
      34: putfield      #78                 // Field consumerMask:J
      37: aload_1
      38: iload         4
      40: getstatic     #210                // Field BUFFER_CONSUMED:Ljava/lang/Object;
      43: invokestatic  #152                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.soRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      46: aload         5
      48: areturn

  private static int nextArrayOffset(long);
    Code:
       0: lload_0
       1: ldc2_w        #139                // long 2l
       4: ladd
       5: ldc2_w        #211                // long 9223372036854775807l
       8: invokestatic  #148                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.modifiedCalcCircularRefElementOffset:(JJ)I
      11: ireturn

  private E newBufferPoll(java.util.concurrent.atomic.AtomicReferenceArray<E>, long);
    Code:
       0: lload_2
       1: aload_0
       2: getfield      #78                 // Field consumerMask:J
       5: invokestatic  #148                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.modifiedCalcCircularRefElementOffset:(JJ)I
       8: istore        4
      10: aload_1
      11: iload         4
      13: invokestatic  #168                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.lvRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      16: astore        5
      18: aload         5
      20: ifnonnull     33
      23: new           #215                // class java/lang/IllegalStateException
      26: dup
      27: ldc           #217                // String new buffer must have at least one element
      29: invokespecial #220                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_1
      34: iload         4
      36: aconst_null
      37: invokestatic  #152                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.soRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      40: aload_0
      41: lload_2
      42: ldc2_w        #139                // long 2l
      45: ladd
      46: invokevirtual #181                // Method soConsumerIndex:(J)V
      49: aload         5
      51: areturn

  private E newBufferPeek(java.util.concurrent.atomic.AtomicReferenceArray<E>, long);
    Code:
       0: lload_2
       1: aload_0
       2: getfield      #78                 // Field consumerMask:J
       5: invokestatic  #148                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.modifiedCalcCircularRefElementOffset:(JJ)I
       8: istore        4
      10: aload_1
      11: iload         4
      13: invokestatic  #168                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.lvRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      16: astore        5
      18: aconst_null
      19: aload         5
      21: if_acmpne     34
      24: new           #215                // class java/lang/IllegalStateException
      27: dup
      28: ldc           #217                // String new buffer must have at least one element
      30: invokespecial #220                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload         5
      36: areturn

  public long currentProducerIndex();
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method lvProducerIndex:()J
       4: ldc2_w        #139                // long 2l
       7: ldiv
       8: lreturn

  public long currentConsumerIndex();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method lvConsumerIndex:()J
       4: ldc2_w        #139                // long 2l
       7: ldiv
       8: lreturn

  public abstract int capacity();

  public boolean relaxedOffer(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #226                // Method offer:(Ljava/lang/Object;)Z
       5: ireturn

  public E relaxedPoll();
    Code:
       0: aload_0
       1: getfield      #75                 // Field consumerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_1
       5: aload_0
       6: invokevirtual #164                // Method lpConsumerIndex:()J
       9: lstore_2
      10: aload_0
      11: getfield      #78                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #148                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.modifiedCalcCircularRefElementOffset:(JJ)I
      22: istore        6
      24: aload_1
      25: iload         6
      27: invokestatic  #168                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.lvRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      30: astore        7
      32: aload         7
      34: ifnonnull     39
      37: aconst_null
      38: areturn
      39: aload         7
      41: getstatic     #170                // Field JUMP:Ljava/lang/Object;
      44: if_acmpne     64
      47: aload_0
      48: aload_1
      49: lload         4
      51: invokespecial #174                // Method nextBuffer:(Ljava/util/concurrent/atomic/AtomicReferenceArray;J)Ljava/util/concurrent/atomic/AtomicReferenceArray;
      54: astore        8
      56: aload_0
      57: aload         8
      59: lload_2
      60: invokespecial #178                // Method newBufferPoll:(Ljava/util/concurrent/atomic/AtomicReferenceArray;J)Ljava/lang/Object;
      63: areturn
      64: aload_1
      65: iload         6
      67: aconst_null
      68: invokestatic  #152                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.soRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      71: aload_0
      72: lload_2
      73: ldc2_w        #139                // long 2l
      76: ladd
      77: invokevirtual #181                // Method soConsumerIndex:(J)V
      80: aload         7
      82: areturn

  public E relaxedPeek();
    Code:
       0: aload_0
       1: getfield      #75                 // Field consumerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_1
       5: aload_0
       6: invokevirtual #164                // Method lpConsumerIndex:()J
       9: lstore_2
      10: aload_0
      11: getfield      #78                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #148                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.modifiedCalcCircularRefElementOffset:(JJ)I
      22: istore        6
      24: aload_1
      25: iload         6
      27: invokestatic  #168                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.lvRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      30: astore        7
      32: aload         7
      34: getstatic     #170                // Field JUMP:Ljava/lang/Object;
      37: if_acmpne     53
      40: aload_0
      41: aload_0
      42: aload_1
      43: lload         4
      45: invokespecial #174                // Method nextBuffer:(Ljava/util/concurrent/atomic/AtomicReferenceArray;J)Ljava/util/concurrent/atomic/AtomicReferenceArray;
      48: lload_2
      49: invokespecial #186                // Method newBufferPeek:(Ljava/util/concurrent/atomic/AtomicReferenceArray;J)Ljava/lang/Object;
      52: areturn
      53: aload         7
      55: areturn

  public int fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier<E>);
    Code:
       0: lconst_0
       1: lstore_2
       2: aload_0
       3: invokevirtual #233                // Method capacity:()I
       6: istore        4
       8: aload_0
       9: aload_1
      10: getstatic     #238                // Field io/netty/util/internal/shaded/org/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      13: invokevirtual #241                // Method fill:(Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$Supplier;I)I
      16: istore        5
      18: iload         5
      20: ifne          26
      23: lload_2
      24: l2i
      25: ireturn
      26: lload_2
      27: iload         5
      29: i2l
      30: ladd
      31: lstore_2
      32: lload_2
      33: iload         4
      35: i2l
      36: lcmp
      37: ifle          8
      40: lload_2
      41: l2i
      42: ireturn

  public int fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier<E>, int);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     15
       5: new           #248                // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #250                // String supplier is null
      11: invokespecial #251                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: iload_2
      16: ifge          47
      19: new           #248                // class java/lang/IllegalArgumentException
      22: dup
      23: new           #253                // class java/lang/StringBuilder
      26: dup
      27: invokespecial #254                // Method java/lang/StringBuilder."<init>":()V
      30: ldc_w         #256                // String limit is negative:
      33: invokevirtual #260                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: iload_2
      37: invokevirtual #263                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: invokevirtual #265                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #251                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: iload_2
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #128                // Method lvProducerLimit:()J
      57: lstore        9
      59: aload_0
      60: invokevirtual #98                 // Method lvProducerIndex:()J
      63: lstore        6
      65: lload         6
      67: lconst_1
      68: land
      69: lconst_1
      70: lcmp
      71: ifne          77
      74: goto          53
      77: aload_0
      78: getfield      #72                 // Field producerMask:J
      81: lstore_3
      82: aload_0
      83: getfield      #68                 // Field producerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      86: astore        5
      88: lload         9
      90: lload         6
      92: ldc2_w        #139                // long 2l
      95: iload_2
      96: i2l
      97: lmul
      98: ladd
      99: invokestatic  #270                // Method java/lang/Math.min:(JJ)J
     102: lstore        11
     104: lload         6
     106: lload         9
     108: lcmp
     109: iflt          174
     112: aload_0
     113: lload_3
     114: lload         6
     116: lload         9
     118: invokespecial #132                // Method offerSlowPath:(JJJ)I
     121: istore        13
     123: iload         13
     125: tableswitch   { // 0 to 3
                     0: 156
                     1: 156
                     2: 159
                     3: 161
               default: 174
          }
     156: goto          53
     159: iconst_0
     160: ireturn
     161: aload_0
     162: lload_3
     163: aload         5
     165: lload         6
     167: aconst_null
     168: aload_1
     169: invokespecial #138                // Method resize:(JLjava/util/concurrent/atomic/AtomicReferenceArray;JLjava/lang/Object;Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$Supplier;)V
     172: iconst_1
     173: ireturn
     174: aload_0
     175: lload         6
     177: lload         11
     179: invokevirtual #144                // Method casProducerIndex:(JJ)Z
     182: ifeq          200
     185: lload         11
     187: lload         6
     189: lsub
     190: ldc2_w        #139                // long 2l
     193: ldiv
     194: l2i
     195: istore        8
     197: goto          203
     200: goto          53
     203: iconst_0
     204: istore        9
     206: iload         9
     208: iload         8
     210: if_icmpge     248
     213: lload         6
     215: ldc2_w        #139                // long 2l
     218: iload         9
     220: i2l
     221: lmul
     222: ladd
     223: lload_3
     224: invokestatic  #148                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.modifiedCalcCircularRefElementOffset:(JJ)I
     227: istore        10
     229: aload         5
     231: iload         10
     233: aload_1
     234: invokeinterface #273,  1          // InterfaceMethod io/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
     239: invokestatic  #152                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.soRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     242: iinc          9, 1
     245: goto          206
     248: iload         8
     250: ireturn

  public void fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier<E>, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #284                // Method io/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueueUtil.fill:(Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue;Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$Supplier;Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$WaitStrategy;Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$ExitCondition;)V
       7: return

  public int drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #233                // Method capacity:()I
       6: invokevirtual #294                // Method drain:(Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$Consumer;I)I
       9: ireturn

  public int drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer<E>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #301                // Method io/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueueUtil.drain:(Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue;Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$Consumer;I)I
       6: ireturn

  public void drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer<E>, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #306                // Method io/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueueUtil.drain:(Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue;Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$Consumer;Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$WaitStrategy;Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$ExitCondition;)V
       7: return

  public java.util.Iterator<E> iterator();
    Code:
       0: new           #12                 // class io/netty/util/internal/shaded/org/jctools/queues/atomic/BaseMpscLinkedAtomicArrayQueue$WeakIterator
       3: dup
       4: aload_0
       5: getfield      #75                 // Field consumerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       8: aload_0
       9: invokevirtual #95                 // Method lvConsumerIndex:()J
      12: aload_0
      13: invokevirtual #98                 // Method lvProducerIndex:()J
      16: invokespecial #312                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/BaseMpscLinkedAtomicArrayQueue$WeakIterator."<init>":(Ljava/util/concurrent/atomic/AtomicReferenceArray;JJ)V
      19: areturn

  private void resize(long, java.util.concurrent.atomic.AtomicReferenceArray<E>, long, E, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier<E>);
    Code:
       0: getstatic     #317                // Field $assertionsDisabled:Z
       3: ifne          34
       6: aload         6
       8: ifnull        16
      11: aload         7
      13: ifnull        34
      16: aload         6
      18: ifnull        34
      21: aload         7
      23: ifnonnull     34
      26: new           #319                // class java/lang/AssertionError
      29: dup
      30: invokespecial #320                // Method java/lang/AssertionError."<init>":()V
      33: athrow
      34: aload_0
      35: aload_3
      36: invokevirtual #323                // Method getNextBufferSize:(Ljava/util/concurrent/atomic/AtomicReferenceArray;)I
      39: istore        8
      41: iload         8
      43: invokestatic  #64                 // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.allocateRefArray:(I)Ljava/util/concurrent/atomic/AtomicReferenceArray;
      46: astore        9
      48: goto          88
      51: astore        10
      53: getstatic     #317                // Field $assertionsDisabled:Z
      56: ifne          79
      59: aload_0
      60: invokevirtual #98                 // Method lvProducerIndex:()J
      63: lload         4
      65: lconst_1
      66: ladd
      67: lcmp
      68: ifeq          79
      71: new           #319                // class java/lang/AssertionError
      74: dup
      75: invokespecial #320                // Method java/lang/AssertionError."<init>":()V
      78: athrow
      79: aload_0
      80: lload         4
      82: invokevirtual #326                // Method soProducerIndex:(J)V
      85: aload         10
      87: athrow
      88: aload_0
      89: aload         9
      91: putfield      #68                 // Field producerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      94: iload         8
      96: iconst_2
      97: isub
      98: iconst_1
      99: ishl
     100: istore        10
     102: aload_0
     103: iload         10
     105: i2l
     106: putfield      #72                 // Field producerMask:J
     109: lload         4
     111: lload_1
     112: invokestatic  #148                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.modifiedCalcCircularRefElementOffset:(JJ)I
     115: istore        11
     117: lload         4
     119: iload         10
     121: i2l
     122: invokestatic  #148                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.modifiedCalcCircularRefElementOffset:(JJ)I
     125: istore        12
     127: aload         9
     129: iload         12
     131: aload         6
     133: ifnonnull     146
     136: aload         7
     138: invokeinterface #273,  1          // InterfaceMethod io/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
     143: goto          148
     146: aload         6
     148: invokestatic  #152                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.soRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     151: aload_3
     152: lload_1
     153: invokestatic  #204                // Method nextArrayOffset:(J)I
     156: aload         9
     158: invokestatic  #152                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.soRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     161: aload_0
     162: invokevirtual #95                 // Method lvConsumerIndex:()J
     165: lstore        13
     167: aload_0
     168: lload         4
     170: lload         13
     172: invokevirtual #197                // Method availableInQueue:(JJ)J
     175: lstore        15
     177: lload         15
     179: ldc_w         #327                // String availableInQueue
     182: invokestatic  #331                // Method io/netty/util/internal/shaded/org/jctools/util/RangeUtil.checkPositive:(JLjava/lang/String;)J
     185: pop2
     186: aload_0
     187: lload         4
     189: iload         10
     191: i2l
     192: lload         15
     194: invokestatic  #270                // Method java/lang/Math.min:(JJ)J
     197: ladd
     198: invokevirtual #82                 // Method soProducerLimit:(J)V
     201: aload_0
     202: lload         4
     204: ldc2_w        #139                // long 2l
     207: ladd
     208: invokevirtual #326                // Method soProducerIndex:(J)V
     211: aload_3
     212: iload         11
     214: getstatic     #170                // Field JUMP:Ljava/lang/Object;
     217: invokestatic  #152                // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicQueueUtil.soRefElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     220: return
    Exception table:
       from    to  target type
          41    48    51   Class java/lang/OutOfMemoryError

  protected abstract int getNextBufferSize(java.util.concurrent.atomic.AtomicReferenceArray<E>);

  protected abstract long getCurrentBufferCapacity(long);

  static java.lang.Object access$000();
    Code:
       0: getstatic     #170                // Field JUMP:Ljava/lang/Object;
       3: areturn

  static java.lang.Object access$100();
    Code:
       0: getstatic     #210                // Field BUFFER_CONSUMED:Ljava/lang/Object;
       3: areturn

  static {};
    Code:
       0: ldc           #2                  // class io/netty/util/internal/shaded/org/jctools/queues/atomic/BaseMpscLinkedAtomicArrayQueue
       2: invokevirtual #347                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #317                // Field $assertionsDisabled:Z
      16: new           #110                // class java/lang/Object
      19: dup
      20: invokespecial #348                // Method java/lang/Object."<init>":()V
      23: putstatic     #170                // Field JUMP:Ljava/lang/Object;
      26: new           #110                // class java/lang/Object
      29: dup
      30: invokespecial #348                // Method java/lang/Object."<init>":()V
      33: putstatic     #210                // Field BUFFER_CONSUMED:Ljava/lang/Object;
      36: return
}
