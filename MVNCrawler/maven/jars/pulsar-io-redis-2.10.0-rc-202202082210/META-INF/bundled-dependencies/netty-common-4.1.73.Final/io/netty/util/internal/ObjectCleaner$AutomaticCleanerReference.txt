Compiled from "ObjectCleaner.java"
final class io.netty.util.internal.ObjectCleaner$AutomaticCleanerReference extends java.lang.ref.WeakReference<java.lang.Object> {
  private final java.lang.Runnable cleanupTask;

  io.netty.util.internal.ObjectCleaner$AutomaticCleanerReference(java.lang.Object, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #17                 // Method io/netty/util/internal/ObjectCleaner.access$200:()Ljava/lang/ref/ReferenceQueue;
       5: invokespecial #20                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
       8: aload_0
       9: aload_2
      10: putfield      #22                 // Field cleanupTask:Ljava/lang/Runnable;
      13: return

  void cleanup();
    Code:
       0: aload_0
       1: getfield      #22                 // Field cleanupTask:Ljava/lang/Runnable;
       4: invokeinterface #33,  1           // InterfaceMethod java/lang/Runnable.run:()V
       9: return

  public java.lang.Thread get();
    Code:
       0: aconst_null
       1: areturn

  public void clear();
    Code:
       0: invokestatic  #40                 // Method io/netty/util/internal/ObjectCleaner.access$000:()Ljava/util/Set;
       3: aload_0
       4: invokeinterface #46,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
       9: pop
      10: aload_0
      11: invokespecial #48                 // Method java/lang/ref/WeakReference.clear:()V
      14: return

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method get:()Ljava/lang/Thread;
       4: areturn
}
