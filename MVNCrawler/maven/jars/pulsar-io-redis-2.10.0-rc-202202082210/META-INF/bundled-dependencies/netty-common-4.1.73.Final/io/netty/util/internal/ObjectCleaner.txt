Compiled from "ObjectCleaner.java"
public final class io.netty.util.internal.ObjectCleaner {
  private static final int REFERENCE_QUEUE_POLL_TIMEOUT_MS;

  static final java.lang.String CLEANER_THREAD_NAME;

  private static final java.util.Set<io.netty.util.internal.ObjectCleaner$AutomaticCleanerReference> LIVE_SET;

  private static final java.lang.ref.ReferenceQueue<java.lang.Object> REFERENCE_QUEUE;

  private static final java.util.concurrent.atomic.AtomicBoolean CLEANER_RUNNING;

  private static final java.lang.Runnable CLEANER_TASK;

  public static void register(java.lang.Object, java.lang.Runnable);
    Code:
       0: new           #7                  // class io/netty/util/internal/ObjectCleaner$AutomaticCleanerReference
       3: dup
       4: aload_0
       5: aload_1
       6: ldc           #30                 // String cleanupTask
       8: invokestatic  #36                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #38                 // class java/lang/Runnable
      14: invokespecial #41                 // Method io/netty/util/internal/ObjectCleaner$AutomaticCleanerReference."<init>":(Ljava/lang/Object;Ljava/lang/Runnable;)V
      17: astore_2
      18: getstatic     #43                 // Field LIVE_SET:Ljava/util/Set;
      21: aload_2
      22: invokeinterface #49,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      27: pop
      28: getstatic     #51                 // Field CLEANER_RUNNING:Ljava/util/concurrent/atomic/AtomicBoolean;
      31: iconst_0
      32: iconst_1
      33: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      36: ifeq          83
      39: new           #59                 // class io/netty/util/concurrent/FastThreadLocalThread
      42: dup
      43: getstatic     #61                 // Field CLEANER_TASK:Ljava/lang/Runnable;
      46: invokespecial #64                 // Method io/netty/util/concurrent/FastThreadLocalThread."<init>":(Ljava/lang/Runnable;)V
      49: astore_3
      50: aload_3
      51: iconst_1
      52: invokevirtual #70                 // Method java/lang/Thread.setPriority:(I)V
      55: new           #10                 // class io/netty/util/internal/ObjectCleaner$2
      58: dup
      59: aload_3
      60: invokespecial #73                 // Method io/netty/util/internal/ObjectCleaner$2."<init>":(Ljava/lang/Thread;)V
      63: invokestatic  #79                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      66: pop
      67: aload_3
      68: getstatic     #81                 // Field CLEANER_THREAD_NAME:Ljava/lang/String;
      71: invokevirtual #85                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      74: aload_3
      75: iconst_1
      76: invokevirtual #89                 // Method java/lang/Thread.setDaemon:(Z)V
      79: aload_3
      80: invokevirtual #93                 // Method java/lang/Thread.start:()V
      83: return

  public static int getLiveSetCount();
    Code:
       0: getstatic     #43                 // Field LIVE_SET:Ljava/util/Set;
       3: invokeinterface #104,  1          // InterfaceMethod java/util/Set.size:()I
       8: ireturn

  private io.netty.util.internal.ObjectCleaner();
    Code:
       0: aload_0
       1: invokespecial #106                // Method java/lang/Object."<init>":()V
       4: return

  static java.util.Set access$000();
    Code:
       0: getstatic     #43                 // Field LIVE_SET:Ljava/util/Set;
       3: areturn

  static int access$100();
    Code:
       0: getstatic     #113                // Field REFERENCE_QUEUE_POLL_TIMEOUT_MS:I
       3: ireturn

  static java.lang.ref.ReferenceQueue access$200();
    Code:
       0: getstatic     #117                // Field REFERENCE_QUEUE:Ljava/lang/ref/ReferenceQueue;
       3: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$300();
    Code:
       0: getstatic     #51                 // Field CLEANER_RUNNING:Ljava/util/concurrent/atomic/AtomicBoolean;
       3: areturn

  static {};
    Code:
       0: sipush        500
       3: ldc           #122                // String io.netty.util.internal.ObjectCleaner.refQueuePollTimeout
       5: sipush        10000
       8: invokestatic  #128                // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
      11: invokestatic  #134                // Method java/lang/Math.max:(II)I
      14: putstatic     #113                // Field REFERENCE_QUEUE_POLL_TIMEOUT_MS:I
      17: new           #136                // class java/lang/StringBuilder
      20: dup
      21: invokespecial #137                // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #2                  // class io/netty/util/internal/ObjectCleaner
      26: invokevirtual #143                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      29: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #149                // String Thread
      34: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #152                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: putstatic     #81                 // Field CLEANER_THREAD_NAME:Ljava/lang/String;
      43: new           #154                // class io/netty/util/internal/ConcurrentSet
      46: dup
      47: invokespecial #155                // Method io/netty/util/internal/ConcurrentSet."<init>":()V
      50: putstatic     #43                 // Field LIVE_SET:Ljava/util/Set;
      53: new           #157                // class java/lang/ref/ReferenceQueue
      56: dup
      57: invokespecial #158                // Method java/lang/ref/ReferenceQueue."<init>":()V
      60: putstatic     #117                // Field REFERENCE_QUEUE:Ljava/lang/ref/ReferenceQueue;
      63: new           #53                 // class java/util/concurrent/atomic/AtomicBoolean
      66: dup
      67: iconst_0
      68: invokespecial #160                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      71: putstatic     #51                 // Field CLEANER_RUNNING:Ljava/util/concurrent/atomic/AtomicBoolean;
      74: new           #12                 // class io/netty/util/internal/ObjectCleaner$1
      77: dup
      78: invokespecial #161                // Method io/netty/util/internal/ObjectCleaner$1."<init>":()V
      81: putstatic     #61                 // Field CLEANER_TASK:Ljava/lang/Runnable;
      84: return
}
