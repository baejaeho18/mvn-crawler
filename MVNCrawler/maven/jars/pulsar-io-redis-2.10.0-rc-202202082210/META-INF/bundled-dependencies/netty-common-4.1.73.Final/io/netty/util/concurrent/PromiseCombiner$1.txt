Compiled from "PromiseCombiner.java"
class io.netty.util.concurrent.PromiseCombiner$1 implements io.netty.util.concurrent.GenericFutureListener<io.netty.util.concurrent.Future<?>> {
  static final boolean $assertionsDisabled;

  final io.netty.util.concurrent.PromiseCombiner this$0;

  io.netty.util.concurrent.PromiseCombiner$1(io.netty.util.concurrent.PromiseCombiner);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field this$0:Lio/netty/util/concurrent/PromiseCombiner;
       5: aload_0
       6: invokespecial #23                 // Method java/lang/Object."<init>":()V
       9: return

  public void operationComplete(io.netty.util.concurrent.Future<?>);
    Code:
       0: aload_0
       1: getfield      #20                 // Field this$0:Lio/netty/util/concurrent/PromiseCombiner;
       4: invokestatic  #32                 // Method io/netty/util/concurrent/PromiseCombiner.access$000:(Lio/netty/util/concurrent/PromiseCombiner;)Lio/netty/util/concurrent/EventExecutor;
       7: invokeinterface #38,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      12: ifeq          23
      15: aload_0
      16: aload_1
      17: invokespecial #41                 // Method operationComplete0:(Lio/netty/util/concurrent/Future;)V
      20: goto          44
      23: aload_0
      24: getfield      #20                 // Field this$0:Lio/netty/util/concurrent/PromiseCombiner;
      27: invokestatic  #32                 // Method io/netty/util/concurrent/PromiseCombiner.access$000:(Lio/netty/util/concurrent/PromiseCombiner;)Lio/netty/util/concurrent/EventExecutor;
      30: new           #12                 // class io/netty/util/concurrent/PromiseCombiner$1$1
      33: dup
      34: aload_0
      35: aload_1
      36: invokespecial #44                 // Method io/netty/util/concurrent/PromiseCombiner$1$1."<init>":(Lio/netty/util/concurrent/PromiseCombiner$1;Lio/netty/util/concurrent/Future;)V
      39: invokeinterface #48,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      44: return

  private void operationComplete0(io.netty.util.concurrent.Future<?>);
    Code:
       0: getstatic     #53                 // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #20                 // Field this$0:Lio/netty/util/concurrent/PromiseCombiner;
      10: invokestatic  #32                 // Method io/netty/util/concurrent/PromiseCombiner.access$000:(Lio/netty/util/concurrent/PromiseCombiner;)Lio/netty/util/concurrent/EventExecutor;
      13: invokeinterface #38,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      18: ifne          29
      21: new           #55                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #56                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #20                 // Field this$0:Lio/netty/util/concurrent/PromiseCombiner;
      33: invokestatic  #60                 // Method io/netty/util/concurrent/PromiseCombiner.access$204:(Lio/netty/util/concurrent/PromiseCombiner;)I
      36: pop
      37: aload_1
      38: invokeinterface #65,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
      43: ifne          70
      46: aload_0
      47: getfield      #20                 // Field this$0:Lio/netty/util/concurrent/PromiseCombiner;
      50: invokestatic  #69                 // Method io/netty/util/concurrent/PromiseCombiner.access$300:(Lio/netty/util/concurrent/PromiseCombiner;)Ljava/lang/Throwable;
      53: ifnonnull     70
      56: aload_0
      57: getfield      #20                 // Field this$0:Lio/netty/util/concurrent/PromiseCombiner;
      60: aload_1
      61: invokeinterface #73,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      66: invokestatic  #77                 // Method io/netty/util/concurrent/PromiseCombiner.access$302:(Lio/netty/util/concurrent/PromiseCombiner;Ljava/lang/Throwable;)Ljava/lang/Throwable;
      69: pop
      70: aload_0
      71: getfield      #20                 // Field this$0:Lio/netty/util/concurrent/PromiseCombiner;
      74: invokestatic  #80                 // Method io/netty/util/concurrent/PromiseCombiner.access$200:(Lio/netty/util/concurrent/PromiseCombiner;)I
      77: aload_0
      78: getfield      #20                 // Field this$0:Lio/netty/util/concurrent/PromiseCombiner;
      81: invokestatic  #83                 // Method io/netty/util/concurrent/PromiseCombiner.access$400:(Lio/netty/util/concurrent/PromiseCombiner;)I
      84: if_icmpne     105
      87: aload_0
      88: getfield      #20                 // Field this$0:Lio/netty/util/concurrent/PromiseCombiner;
      91: invokestatic  #87                 // Method io/netty/util/concurrent/PromiseCombiner.access$500:(Lio/netty/util/concurrent/PromiseCombiner;)Lio/netty/util/concurrent/Promise;
      94: ifnull        105
      97: aload_0
      98: getfield      #20                 // Field this$0:Lio/netty/util/concurrent/PromiseCombiner;
     101: invokestatic  #91                 // Method io/netty/util/concurrent/PromiseCombiner.access$600:(Lio/netty/util/concurrent/PromiseCombiner;)Z
     104: pop
     105: return

  static void access$100(io.netty.util.concurrent.PromiseCombiner$1, io.netty.util.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #41                 // Method operationComplete0:(Lio/netty/util/concurrent/Future;)V
       5: return

  static {};
    Code:
       0: ldc           #10                 // class io/netty/util/concurrent/PromiseCombiner
       2: invokevirtual #100                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #53                 // Field $assertionsDisabled:Z
      16: return
}
