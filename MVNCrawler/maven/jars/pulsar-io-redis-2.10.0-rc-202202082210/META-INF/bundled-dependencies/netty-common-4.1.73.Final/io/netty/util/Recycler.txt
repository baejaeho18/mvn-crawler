Compiled from "Recycler.java"
public abstract class io.netty.util.Recycler<T> {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final io.netty.util.Recycler$Handle<?> NOOP_HANDLE;

  private static final int DEFAULT_INITIAL_MAX_CAPACITY_PER_THREAD;

  private static final int DEFAULT_MAX_CAPACITY_PER_THREAD;

  private static final int RATIO;

  private static final int DEFAULT_QUEUE_CHUNK_SIZE_PER_THREAD;

  private static final boolean BLOCKING_POOL;

  private final int maxCapacityPerThread;

  private final int interval;

  private final int chunkSize;

  private final io.netty.util.concurrent.FastThreadLocal<io.netty.util.Recycler$LocalPool<T>> threadLocal;

  protected io.netty.util.Recycler();
    Code:
       0: aload_0
       1: getstatic     #45                 // Field DEFAULT_MAX_CAPACITY_PER_THREAD:I
       4: invokespecial #48                 // Method "<init>":(I)V
       7: return

  protected io.netty.util.Recycler(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #53                 // Field RATIO:I
       5: getstatic     #55                 // Field DEFAULT_QUEUE_CHUNK_SIZE_PER_THREAD:I
       8: invokespecial #58                 // Method "<init>":(III)V
      11: return

  protected io.netty.util.Recycler(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #53                 // Field RATIO:I
       5: getstatic     #55                 // Field DEFAULT_QUEUE_CHUNK_SIZE_PER_THREAD:I
       8: invokespecial #58                 // Method "<init>":(III)V
      11: return

  protected io.netty.util.Recycler(int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_3
       3: getstatic     #55                 // Field DEFAULT_QUEUE_CHUNK_SIZE_PER_THREAD:I
       6: invokespecial #58                 // Method "<init>":(III)V
       9: return

  protected io.netty.util.Recycler(int, int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_3
       3: getstatic     #55                 // Field DEFAULT_QUEUE_CHUNK_SIZE_PER_THREAD:I
       6: invokespecial #58                 // Method "<init>":(III)V
       9: return

  protected io.netty.util.Recycler(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #68                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #20                 // class io/netty/util/Recycler$2
       8: dup
       9: aload_0
      10: invokespecial #71                 // Method io/netty/util/Recycler$2."<init>":(Lio/netty/util/Recycler;)V
      13: putfield      #73                 // Field threadLocal:Lio/netty/util/concurrent/FastThreadLocal;
      16: aload_0
      17: iconst_0
      18: iload_2
      19: invokestatic  #79                 // Method java/lang/Math.max:(II)I
      22: putfield      #81                 // Field interval:I
      25: iload_1
      26: ifgt          42
      29: aload_0
      30: iconst_0
      31: putfield      #83                 // Field maxCapacityPerThread:I
      34: aload_0
      35: iconst_0
      36: putfield      #85                 // Field chunkSize:I
      39: goto          69
      42: aload_0
      43: iconst_4
      44: iload_1
      45: invokestatic  #79                 // Method java/lang/Math.max:(II)I
      48: putfield      #83                 // Field maxCapacityPerThread:I
      51: aload_0
      52: iconst_2
      53: iload_3
      54: aload_0
      55: getfield      #83                 // Field maxCapacityPerThread:I
      58: iconst_1
      59: ishr
      60: invokestatic  #88                 // Method java/lang/Math.min:(II)I
      63: invokestatic  #79                 // Method java/lang/Math.max:(II)I
      66: putfield      #85                 // Field chunkSize:I
      69: return

  public final T get();
    Code:
       0: aload_0
       1: getfield      #83                 // Field maxCapacityPerThread:I
       4: ifne          15
       7: aload_0
       8: getstatic     #93                 // Field NOOP_HANDLE:Lio/netty/util/Recycler$Handle;
      11: invokevirtual #97                 // Method newObject:(Lio/netty/util/Recycler$Handle;)Ljava/lang/Object;
      14: areturn
      15: aload_0
      16: getfield      #73                 // Field threadLocal:Lio/netty/util/concurrent/FastThreadLocal;
      19: invokevirtual #101                // Method io/netty/util/concurrent/FastThreadLocal.get:()Ljava/lang/Object;
      22: checkcast     #11                 // class io/netty/util/Recycler$LocalPool
      25: astore_1
      26: aload_1
      27: invokevirtual #105                // Method io/netty/util/Recycler$LocalPool.claim:()Lio/netty/util/Recycler$DefaultHandle;
      30: astore_2
      31: aload_2
      32: ifnonnull     69
      35: aload_1
      36: invokevirtual #108                // Method io/netty/util/Recycler$LocalPool.newHandle:()Lio/netty/util/Recycler$DefaultHandle;
      39: astore_2
      40: aload_2
      41: ifnull        58
      44: aload_0
      45: aload_2
      46: invokevirtual #97                 // Method newObject:(Lio/netty/util/Recycler$Handle;)Ljava/lang/Object;
      49: astore_3
      50: aload_2
      51: aload_3
      52: invokevirtual #112                // Method io/netty/util/Recycler$DefaultHandle.set:(Ljava/lang/Object;)V
      55: goto          74
      58: aload_0
      59: getstatic     #93                 // Field NOOP_HANDLE:Lio/netty/util/Recycler$Handle;
      62: invokevirtual #97                 // Method newObject:(Lio/netty/util/Recycler$Handle;)Ljava/lang/Object;
      65: astore_3
      66: goto          74
      69: aload_2
      70: invokevirtual #113                // Method io/netty/util/Recycler$DefaultHandle.get:()Ljava/lang/Object;
      73: astore_3
      74: aload_3
      75: areturn

  public final boolean recycle(T, io.netty.util.Recycler$Handle<T>);
    Code:
       0: aload_2
       1: getstatic     #93                 // Field NOOP_HANDLE:Lio/netty/util/Recycler$Handle;
       4: if_acmpne     9
       7: iconst_0
       8: ireturn
       9: aload_2
      10: aload_1
      11: invokeinterface #127,  2          // InterfaceMethod io/netty/util/Recycler$Handle.recycle:(Ljava/lang/Object;)V
      16: iconst_1
      17: ireturn

  final int threadLocalSize();
    Code:
       0: aload_0
       1: getfield      #73                 // Field threadLocal:Lio/netty/util/concurrent/FastThreadLocal;
       4: invokevirtual #101                // Method io/netty/util/concurrent/FastThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #11                 // class io/netty/util/Recycler$LocalPool
      10: invokestatic  #135                // Method io/netty/util/Recycler$LocalPool.access$300:(Lio/netty/util/Recycler$LocalPool;)Lio/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue;
      13: invokeinterface #140,  1          // InterfaceMethod io/netty/util/internal/shaded/org/jctools/queues/MessagePassingQueue.size:()I
      18: ireturn

  protected abstract T newObject(io.netty.util.Recycler$Handle<T>);

  static int access$000(io.netty.util.Recycler);
    Code:
       0: aload_0
       1: getfield      #83                 // Field maxCapacityPerThread:I
       4: ireturn

  static int access$100(io.netty.util.Recycler);
    Code:
       0: aload_0
       1: getfield      #81                 // Field interval:I
       4: ireturn

  static int access$200(io.netty.util.Recycler);
    Code:
       0: aload_0
       1: getfield      #85                 // Field chunkSize:I
       4: ireturn

  static boolean access$400();
    Code:
       0: getstatic     #150                // Field BLOCKING_POOL:Z
       3: ireturn

  static {};
    Code:
       0: ldc           #2                  // class io/netty/util/Recycler
       2: invokestatic  #157                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: new           #22                 // class io/netty/util/Recycler$1
      11: dup
      12: invokespecial #160                // Method io/netty/util/Recycler$1."<init>":()V
      15: putstatic     #93                 // Field NOOP_HANDLE:Lio/netty/util/Recycler$Handle;
      18: ldc           #162                // String io.netty.recycler.maxCapacityPerThread
      20: ldc           #164                // String io.netty.recycler.maxCapacity
      22: sipush        4096
      25: invokestatic  #170                // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
      28: invokestatic  #170                // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
      31: istore_0
      32: iload_0
      33: ifge          40
      36: sipush        4096
      39: istore_0
      40: iload_0
      41: putstatic     #45                 // Field DEFAULT_MAX_CAPACITY_PER_THREAD:I
      44: ldc           #172                // String io.netty.recycler.chunkSize
      46: bipush        32
      48: invokestatic  #170                // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
      51: putstatic     #55                 // Field DEFAULT_QUEUE_CHUNK_SIZE_PER_THREAD:I
      54: iconst_0
      55: ldc           #174                // String io.netty.recycler.ratio
      57: bipush        8
      59: invokestatic  #170                // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
      62: invokestatic  #79                 // Method java/lang/Math.max:(II)I
      65: putstatic     #53                 // Field RATIO:I
      68: ldc           #176                // String io.netty.recycler.blocking
      70: iconst_0
      71: invokestatic  #180                // Method io/netty/util/internal/SystemPropertyUtil.getBoolean:(Ljava/lang/String;Z)Z
      74: putstatic     #150                // Field BLOCKING_POOL:Z
      77: getstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      80: invokeinterface #185,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      85: ifeq          201
      88: getstatic     #45                 // Field DEFAULT_MAX_CAPACITY_PER_THREAD:I
      91: ifne          137
      94: getstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      97: ldc           #187                // String -Dio.netty.recycler.maxCapacityPerThread: disabled
      99: invokeinterface #191,  2          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
     104: getstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     107: ldc           #193                // String -Dio.netty.recycler.ratio: disabled
     109: invokeinterface #191,  2          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
     114: getstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     117: ldc           #195                // String -Dio.netty.recycler.chunkSize: disabled
     119: invokeinterface #191,  2          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
     124: getstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     127: ldc           #197                // String -Dio.netty.recycler.blocking: disabled
     129: invokeinterface #191,  2          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
     134: goto          201
     137: getstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     140: ldc           #199                // String -Dio.netty.recycler.maxCapacityPerThread: {}
     142: getstatic     #45                 // Field DEFAULT_MAX_CAPACITY_PER_THREAD:I
     145: invokestatic  #205                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     148: invokeinterface #208,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     153: getstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     156: ldc           #210                // String -Dio.netty.recycler.ratio: {}
     158: getstatic     #53                 // Field RATIO:I
     161: invokestatic  #205                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     164: invokeinterface #208,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     169: getstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     172: ldc           #212                // String -Dio.netty.recycler.chunkSize: {}
     174: getstatic     #55                 // Field DEFAULT_QUEUE_CHUNK_SIZE_PER_THREAD:I
     177: invokestatic  #205                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     180: invokeinterface #208,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     185: getstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     188: ldc           #214                // String -Dio.netty.recycler.blocking: {}
     190: getstatic     #150                // Field BLOCKING_POOL:Z
     193: invokestatic  #219                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     196: invokeinterface #208,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     201: return
}
