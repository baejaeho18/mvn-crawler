Compiled from "ResourceLeakDetector.java"
final class io.netty.util.ResourceLeakDetector$DefaultResourceLeak<T> extends java.lang.ref.WeakReference<java.lang.Object> implements io.netty.util.ResourceLeakTracker<T>, io.netty.util.ResourceLeak {
  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.netty.util.ResourceLeakDetector$DefaultResourceLeak<?>, io.netty.util.ResourceLeakDetector$TraceRecord> headUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.netty.util.ResourceLeakDetector$DefaultResourceLeak<?>> droppedRecordsUpdater;

  private volatile io.netty.util.ResourceLeakDetector$TraceRecord head;

  private volatile int droppedRecords;

  private final java.util.Set<io.netty.util.ResourceLeakDetector$DefaultResourceLeak<?>> allLeaks;

  private final int trackedHash;

  static final boolean $assertionsDisabled;

  io.netty.util.ResourceLeakDetector$DefaultResourceLeak(java.lang.Object, java.lang.ref.ReferenceQueue<java.lang.Object>, java.util.Set<io.netty.util.ResourceLeakDetector$DefaultResourceLeak<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #38                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
       6: getstatic     #40                 // Field $assertionsDisabled:Z
       9: ifne          24
      12: aload_1
      13: ifnonnull     24
      16: new           #42                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: aload_1
      26: invokestatic  #57                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      29: putfield      #59                 // Field trackedHash:I
      32: aload_3
      33: aload_0
      34: invokeinterface #63,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      39: pop
      40: getstatic     #65                 // Field headUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      43: aload_0
      44: new           #15                 // class io/netty/util/ResourceLeakDetector$TraceRecord
      47: dup
      48: invokestatic  #69                 // Method io/netty/util/ResourceLeakDetector$TraceRecord.access$100:()Lio/netty/util/ResourceLeakDetector$TraceRecord;
      51: invokespecial #72                 // Method io/netty/util/ResourceLeakDetector$TraceRecord."<init>":(Lio/netty/util/ResourceLeakDetector$TraceRecord;)V
      54: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: aload_0
      58: aload_3
      59: putfield      #80                 // Field allLeaks:Ljava/util/Set;
      62: return

  public void record();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #93                 // Method record0:(Ljava/lang/Object;)V
       5: return

  public void record(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #93                 // Method record0:(Ljava/lang/Object;)V
       5: return

  private void record0(java.lang.Object);
    Code:
       0: invokestatic  #98                 // Method io/netty/util/ResourceLeakDetector.access$200:()I
       3: ifle          140
       6: getstatic     #65                 // Field headUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: aload_0
      10: invokevirtual #102                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #15                 // class io/netty/util/ResourceLeakDetector$TraceRecord
      16: dup
      17: astore_2
      18: dup
      19: astore_3
      20: ifnonnull     24
      23: return
      24: aload_2
      25: invokestatic  #106                // Method io/netty/util/ResourceLeakDetector$TraceRecord.access$300:(Lio/netty/util/ResourceLeakDetector$TraceRecord;)I
      28: iconst_1
      29: iadd
      30: istore        6
      32: iload         6
      34: invokestatic  #98                 // Method io/netty/util/ResourceLeakDetector.access$200:()I
      37: if_icmplt     85
      40: iload         6
      42: invokestatic  #98                 // Method io/netty/util/ResourceLeakDetector.access$200:()I
      45: isub
      46: bipush        30
      48: invokestatic  #112                // Method java/lang/Math.min:(II)I
      51: istore        7
      53: invokestatic  #118                // Method io/netty/util/internal/PlatformDependent.threadLocalRandom:()Ljava/util/Random;
      56: iconst_1
      57: iload         7
      59: ishl
      60: invokevirtual #124                // Method java/util/Random.nextInt:(I)I
      63: ifeq          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: dup
      72: istore        5
      74: ifeq          82
      77: aload_2
      78: invokestatic  #128                // Method io/netty/util/ResourceLeakDetector$TraceRecord.access$400:(Lio/netty/util/ResourceLeakDetector$TraceRecord;)Lio/netty/util/ResourceLeakDetector$TraceRecord;
      81: astore_3
      82: goto          88
      85: iconst_0
      86: istore        5
      88: aload_1
      89: ifnull        104
      92: new           #15                 // class io/netty/util/ResourceLeakDetector$TraceRecord
      95: dup
      96: aload_3
      97: aload_1
      98: invokespecial #131                // Method io/netty/util/ResourceLeakDetector$TraceRecord."<init>":(Lio/netty/util/ResourceLeakDetector$TraceRecord;Ljava/lang/Object;)V
     101: goto          112
     104: new           #15                 // class io/netty/util/ResourceLeakDetector$TraceRecord
     107: dup
     108: aload_3
     109: invokespecial #72                 // Method io/netty/util/ResourceLeakDetector$TraceRecord."<init>":(Lio/netty/util/ResourceLeakDetector$TraceRecord;)V
     112: astore        4
     114: getstatic     #65                 // Field headUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     117: aload_0
     118: aload_2
     119: aload         4
     121: invokevirtual #135                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     124: ifeq          6
     127: iload         5
     129: ifeq          140
     132: getstatic     #137                // Field droppedRecordsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     135: aload_0
     136: invokevirtual #142                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
     139: pop
     140: return

  boolean dispose();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method clear:()V
       4: aload_0
       5: getfield      #80                 // Field allLeaks:Ljava/util/Set;
       8: aload_0
       9: invokeinterface #156,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      14: ireturn

  public boolean close();
    Code:
       0: aload_0
       1: getfield      #80                 // Field allLeaks:Ljava/util/Set;
       4: aload_0
       5: invokeinterface #156,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: invokevirtual #153                // Method clear:()V
      17: getstatic     #65                 // Field headUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      20: aload_0
      21: aconst_null
      22: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      25: iconst_1
      26: ireturn
      27: iconst_0
      28: ireturn

  public boolean close(T);
    Code:
       0: getstatic     #40                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_0
       7: getfield      #59                 // Field trackedHash:I
      10: aload_1
      11: invokestatic  #57                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      14: if_icmpeq     25
      17: new           #42                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: invokevirtual #160                // Method close:()Z
      29: istore_2
      30: aload_1
      31: invokestatic  #163                // Method reachabilityFence0:(Ljava/lang/Object;)V
      34: iload_2
      35: ireturn
      36: astore_3
      37: aload_1
      38: invokestatic  #163                // Method reachabilityFence0:(Ljava/lang/Object;)V
      41: aload_3
      42: athrow
    Exception table:
       from    to  target type
          25    30    36   any

  private static void reachabilityFence0(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        18
       4: aload_0
       5: dup
       6: astore_1
       7: monitorenter
       8: aload_1
       9: monitorexit
      10: goto          18
      13: astore_2
      14: aload_1
      15: monitorexit
      16: aload_2
      17: athrow
      18: return
    Exception table:
       from    to  target type
           8    10    13   any
          13    16    13   any

  public java.lang.String toString();
    Code:
       0: getstatic     #65                 // Field headUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: invokevirtual #174                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #15                 // class io/netty/util/ResourceLeakDetector$TraceRecord
      11: astore_1
      12: aload_1
      13: ifnonnull     19
      16: ldc           #176                // String
      18: areturn
      19: getstatic     #137                // Field droppedRecordsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      22: aload_0
      23: invokevirtual #178                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      26: istore_2
      27: iconst_0
      28: istore_3
      29: aload_1
      30: invokestatic  #106                // Method io/netty/util/ResourceLeakDetector$TraceRecord.access$300:(Lio/netty/util/ResourceLeakDetector$TraceRecord;)I
      33: iconst_1
      34: iadd
      35: istore        4
      37: new           #180                // class java/lang/StringBuilder
      40: dup
      41: iload         4
      43: sipush        2048
      46: imul
      47: invokespecial #183                // Method java/lang/StringBuilder."<init>":(I)V
      50: getstatic     #189                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      53: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: astore        5
      58: aload         5
      60: ldc           #195                // String Recent access records:
      62: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: getstatic     #189                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      68: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: pop
      72: iconst_1
      73: istore        6
      75: new           #197                // class java/util/HashSet
      78: dup
      79: iload         4
      81: invokespecial #198                // Method java/util/HashSet."<init>":(I)V
      84: astore        7
      86: aload_1
      87: invokestatic  #69                 // Method io/netty/util/ResourceLeakDetector$TraceRecord.access$100:()Lio/netty/util/ResourceLeakDetector$TraceRecord;
      90: if_acmpeq     189
      93: aload_1
      94: invokevirtual #200                // Method io/netty/util/ResourceLeakDetector$TraceRecord.toString:()Ljava/lang/String;
      97: astore        8
      99: aload         7
     101: aload         8
     103: invokeinterface #63,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     108: ifeq          178
     111: aload_1
     112: invokestatic  #128                // Method io/netty/util/ResourceLeakDetector$TraceRecord.access$400:(Lio/netty/util/ResourceLeakDetector$TraceRecord;)Lio/netty/util/ResourceLeakDetector$TraceRecord;
     115: invokestatic  #69                 // Method io/netty/util/ResourceLeakDetector$TraceRecord.access$100:()Lio/netty/util/ResourceLeakDetector$TraceRecord;
     118: if_acmpne     143
     121: aload         5
     123: ldc           #202                // String Created at:
     125: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: getstatic     #189                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     131: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload         8
     136: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: pop
     140: goto          181
     143: aload         5
     145: bipush        35
     147: invokevirtual #207                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     150: iload         6
     152: iinc          6, 1
     155: invokevirtual #210                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     158: bipush        58
     160: invokevirtual #207                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     163: getstatic     #189                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     166: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload         8
     171: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: pop
     175: goto          181
     178: iinc          3, 1
     181: aload_1
     182: invokestatic  #128                // Method io/netty/util/ResourceLeakDetector$TraceRecord.access$400:(Lio/netty/util/ResourceLeakDetector$TraceRecord;)Lio/netty/util/ResourceLeakDetector$TraceRecord;
     185: astore_1
     186: goto          86
     189: iload_3
     190: ifle          216
     193: aload         5
     195: ldc           #212                // String :
     197: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: iload_3
     201: invokevirtual #210                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     204: ldc           #214                // String  leak records were discarded because they were duplicates
     206: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: getstatic     #189                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     212: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: pop
     216: iload_2
     217: ifle          264
     220: aload         5
     222: ldc           #212                // String :
     224: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: iload_2
     228: invokevirtual #210                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     231: ldc           #216                // String  leak records were discarded because the leak record count is targeted to
     233: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: invokestatic  #98                 // Method io/netty/util/ResourceLeakDetector.access$200:()I
     239: invokevirtual #210                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     242: ldc           #218                // String . Use system property
     244: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: ldc           #220                // String io.netty.leakDetection.targetRecords
     249: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: ldc           #222                // String  to increase the limit.
     254: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     257: getstatic     #189                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     260: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: pop
     264: aload         5
     266: aload         5
     268: invokevirtual #225                // Method java/lang/StringBuilder.length:()I
     271: getstatic     #189                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     274: invokevirtual #226                // Method java/lang/String.length:()I
     277: isub
     278: invokevirtual #229                // Method java/lang/StringBuilder.setLength:(I)V
     281: aload         5
     283: invokevirtual #230                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     286: areturn

  static {};
    Code:
       0: ldc           #12                 // class io/netty/util/ResourceLeakDetector
       2: invokevirtual #244                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #40                 // Field $assertionsDisabled:Z
      16: ldc           #2                  // class io/netty/util/ResourceLeakDetector$DefaultResourceLeak
      18: ldc           #15                 // class io/netty/util/ResourceLeakDetector$TraceRecord
      20: ldc           #245                // String head
      22: invokestatic  #249                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      25: putstatic     #65                 // Field headUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      28: ldc           #2                  // class io/netty/util/ResourceLeakDetector$DefaultResourceLeak
      30: ldc           #250                // String droppedRecords
      32: invokestatic  #253                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      35: putstatic     #137                // Field droppedRecordsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      38: return
}
