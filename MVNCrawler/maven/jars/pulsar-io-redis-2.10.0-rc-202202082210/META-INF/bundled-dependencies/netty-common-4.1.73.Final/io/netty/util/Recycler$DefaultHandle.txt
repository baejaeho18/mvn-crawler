Compiled from "Recycler.java"
final class io.netty.util.Recycler$DefaultHandle<T> implements io.netty.util.Recycler$Handle<T> {
  private static final int STATE_CLAIMED;

  private static final int STATE_AVAILABLE;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.netty.util.Recycler$DefaultHandle<?>> STATE_UPDATER;

  private volatile int state;

  private final io.netty.util.Recycler$LocalPool<T> localPool;

  private T value;

  io.netty.util.Recycler$DefaultHandle(io.netty.util.Recycler$LocalPool<T>);
    Code:
       0: aload_0
       1: invokespecial #36                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #38                 // Field localPool:Lio/netty/util/Recycler$LocalPool;
       9: return

  public void recycle(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #45                 // Field value:Ljava/lang/Object;
       5: if_acmpeq     18
       8: new           #47                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #49                 // String object does not belong to handle
      14: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #38                 // Field localPool:Lio/netty/util/Recycler$LocalPool;
      22: aload_0
      23: invokevirtual #56                 // Method io/netty/util/Recycler$LocalPool.release:(Lio/netty/util/Recycler$DefaultHandle;)V
      26: return

  T get();
    Code:
       0: aload_0
       1: getfield      #45                 // Field value:Ljava/lang/Object;
       4: areturn

  void set(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field value:Ljava/lang/Object;
       5: return

  boolean availableToClaim();
    Code:
       0: aload_0
       1: getfield      #66                 // Field state:I
       4: iconst_1
       5: if_icmpeq     10
       8: iconst_0
       9: ireturn
      10: getstatic     #68                 // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      13: aload_0
      14: iconst_1
      15: iconst_0
      16: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      19: ireturn

  void toAvailable();
    Code:
       0: getstatic     #68                 // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_1
       5: invokevirtual #79                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
       8: istore_1
       9: iload_1
      10: iconst_1
      11: if_icmpne     24
      14: new           #81                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #83                 // String Object has been recycled already.
      20: invokespecial #84                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: return

  static {};
    Code:
       0: ldc           #2                  // class io/netty/util/Recycler$DefaultHandle
       2: ldc           #87                 // String state
       4: invokestatic  #91                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: astore_0
       8: aload_0
       9: putstatic     #68                 // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      12: return
}
