Compiled from "HttpUrlConnector.java"
public class org.glassfish.jersey.client.internal.HttpUrlConnector implements org.glassfish.jersey.client.spi.Connector {
  private static final java.util.logging.Logger LOGGER;

  private static final java.lang.String ALLOW_RESTRICTED_HEADERS_SYSTEM_PROPERTY;

  private static final org.glassfish.jersey.internal.util.collection.LazyValue<javax.net.ssl.SSLSocketFactory> DEFAULT_SSL_SOCKET_FACTORY;

  private static final java.lang.String[] restrictedHeaders;

  private static final java.util.Set<java.lang.String> restrictedHeaderSet;

  private final org.glassfish.jersey.client.HttpUrlConnectorProvider$ConnectionFactory connectionFactory;

  private final int chunkSize;

  private final boolean fixLengthStreaming;

  private final boolean setMethodWorkaround;

  private final boolean isRestrictedHeaderPropertySet;

  private final org.glassfish.jersey.internal.util.collection.LazyValue<javax.net.ssl.SSLSocketFactory> sslSocketFactory;

  private final org.glassfish.jersey.client.internal.ConnectorExtension<java.net.HttpURLConnection, java.io.IOException> connectorExtension;

  public org.glassfish.jersey.client.internal.HttpUrlConnector(javax.ws.rs.client.Client, org.glassfish.jersey.client.HttpUrlConnectorProvider$ConnectionFactory, int, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/glassfish/jersey/client/internal/HttpUrlExpect100ContinueConnectorExtension
       8: dup
       9: invokespecial #4                  // Method org/glassfish/jersey/client/internal/HttpUrlExpect100ContinueConnectorExtension."<init>":()V
      12: putfield      #5                  // Field connectorExtension:Lorg/glassfish/jersey/client/internal/ConnectorExtension;
      15: aload_0
      16: new           #6                  // class org/glassfish/jersey/client/internal/HttpUrlConnector$1
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #7                  // Method org/glassfish/jersey/client/internal/HttpUrlConnector$1."<init>":(Lorg/glassfish/jersey/client/internal/HttpUrlConnector;Ljavax/ws/rs/client/Client;)V
      25: invokestatic  #8                  // Method org/glassfish/jersey/internal/util/collection/Values.lazy:(Lorg/glassfish/jersey/internal/util/collection/Value;)Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      28: putfield      #9                  // Field sslSocketFactory:Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      31: aload_0
      32: aload_2
      33: putfield      #10                 // Field connectionFactory:Lorg/glassfish/jersey/client/HttpUrlConnectorProvider$ConnectionFactory;
      36: aload_0
      37: iload_3
      38: putfield      #11                 // Field chunkSize:I
      41: aload_0
      42: iload         4
      44: putfield      #12                 // Field fixLengthStreaming:Z
      47: aload_0
      48: iload         5
      50: putfield      #13                 // Field setMethodWorkaround:Z
      53: aload_0
      54: ldc           #15                 // String sun.net.http.allowRestrictedHeaders
      56: ldc           #16                 // String false
      58: invokestatic  #17                 // Method org/glassfish/jersey/internal/util/PropertiesHelper.getSystemProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/security/PrivilegedAction;
      61: invokestatic  #18                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      64: checkcast     #19                 // class java/lang/String
      67: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
      70: invokevirtual #21                 // Method java/lang/Boolean.booleanValue:()Z
      73: putfield      #22                 // Field isRestrictedHeaderPropertySet:Z
      76: getstatic     #23                 // Field LOGGER:Ljava/util/logging/Logger;
      79: aload_0
      80: getfield      #22                 // Field isRestrictedHeaderPropertySet:Z
      83: ifeq          94
      86: ldc           #15                 // String sun.net.http.allowRestrictedHeaders
      88: invokestatic  #24                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.RESTRICTED_HEADER_PROPERTY_SETTING_TRUE:(Ljava/lang/Object;)Ljava/lang/String;
      91: goto          99
      94: ldc           #15                 // String sun.net.http.allowRestrictedHeaders
      96: invokestatic  #25                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.RESTRICTED_HEADER_PROPERTY_SETTING_FALSE:(Ljava/lang/Object;)Ljava/lang/String;
      99: invokevirtual #26                 // Method java/util/logging/Logger.config:(Ljava/lang/String;)V
     102: return

  private static java.io.InputStream getInputStream(java.net.HttpURLConnection) throws java.io.IOException;
    Code:
       0: new           #27                 // class org/glassfish/jersey/client/internal/HttpUrlConnector$2
       3: dup
       4: aload_0
       5: invokespecial #28                 // Method org/glassfish/jersey/client/internal/HttpUrlConnector$2."<init>":(Ljava/net/HttpURLConnection;)V
       8: areturn

  public org.glassfish.jersey.client.ClientResponse apply(org.glassfish.jersey.client.ClientRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #29                 // Method _apply:(Lorg/glassfish/jersey/client/ClientRequest;)Lorg/glassfish/jersey/client/ClientResponse;
       5: areturn
       6: astore_2
       7: new           #31                 // class javax/ws/rs/ProcessingException
      10: dup
      11: aload_2
      12: invokespecial #32                 // Method javax/ws/rs/ProcessingException."<init>":(Ljava/lang/Throwable;)V
      15: athrow
    Exception table:
       from    to  target type
           0     5     6   Class java/io/IOException

  public java.util.concurrent.Future<?> apply(org.glassfish.jersey.client.ClientRequest, org.glassfish.jersey.client.spi.AsyncConnectorCallback);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokespecial #29                 // Method _apply:(Lorg/glassfish/jersey/client/ClientRequest;)Lorg/glassfish/jersey/client/ClientResponse;
       6: invokeinterface #33,  2           // InterfaceMethod org/glassfish/jersey/client/spi/AsyncConnectorCallback.response:(Lorg/glassfish/jersey/client/ClientResponse;)V
      11: goto          40
      14: astore_3
      15: aload_2
      16: new           #31                 // class javax/ws/rs/ProcessingException
      19: dup
      20: aload_3
      21: invokespecial #32                 // Method javax/ws/rs/ProcessingException."<init>":(Ljava/lang/Throwable;)V
      24: invokeinterface #34,  2           // InterfaceMethod org/glassfish/jersey/client/spi/AsyncConnectorCallback.failure:(Ljava/lang/Throwable;)V
      29: goto          40
      32: astore_3
      33: aload_2
      34: aload_3
      35: invokeinterface #34,  2           // InterfaceMethod org/glassfish/jersey/client/spi/AsyncConnectorCallback.failure:(Ljava/lang/Throwable;)V
      40: aconst_null
      41: invokestatic  #36                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      44: areturn
    Exception table:
       from    to  target type
           0    11    14   Class java/io/IOException
           0    11    32   Class java/lang/Throwable

  public void close();
    Code:
       0: return

  protected void secureConnection(org.glassfish.jersey.client.JerseyClient, java.net.HttpURLConnection);
    Code:
       0: aload_2
       1: instanceof    #37                 // class javax/net/ssl/HttpsURLConnection
       4: ifeq          60
       7: aload_2
       8: checkcast     #37                 // class javax/net/ssl/HttpsURLConnection
      11: astore_3
      12: aload_1
      13: invokevirtual #38                 // Method org/glassfish/jersey/client/JerseyClient.getHostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;
      16: astore        4
      18: aload         4
      20: ifnull        29
      23: aload_3
      24: aload         4
      26: invokevirtual #39                 // Method javax/net/ssl/HttpsURLConnection.setHostnameVerifier:(Ljavax/net/ssl/HostnameVerifier;)V
      29: getstatic     #40                 // Field DEFAULT_SSL_SOCKET_FACTORY:Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      32: invokeinterface #41,  1           // InterfaceMethod org/glassfish/jersey/internal/util/collection/LazyValue.get:()Ljava/lang/Object;
      37: aload_3
      38: invokevirtual #42                 // Method javax/net/ssl/HttpsURLConnection.getSSLSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
      41: if_acmpne     60
      44: aload_3
      45: aload_0
      46: getfield      #9                  // Field sslSocketFactory:Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      49: invokeinterface #41,  1           // InterfaceMethod org/glassfish/jersey/internal/util/collection/LazyValue.get:()Ljava/lang/Object;
      54: checkcast     #43                 // class javax/net/ssl/SSLSocketFactory
      57: invokevirtual #44                 // Method javax/net/ssl/HttpsURLConnection.setSSLSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;)V
      60: return

  private org.glassfish.jersey.client.ClientResponse _apply(org.glassfish.jersey.client.ClientRequest) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field connectionFactory:Lorg/glassfish/jersey/client/HttpUrlConnectorProvider$ConnectionFactory;
       4: aload_1
       5: invokevirtual #45                 // Method org/glassfish/jersey/client/ClientRequest.getUri:()Ljava/net/URI;
       8: invokevirtual #46                 // Method java/net/URI.toURL:()Ljava/net/URL;
      11: invokeinterface #47,  2           // InterfaceMethod org/glassfish/jersey/client/HttpUrlConnectorProvider$ConnectionFactory.getConnection:(Ljava/net/URL;)Ljava/net/HttpURLConnection;
      16: astore_2
      17: aload_2
      18: iconst_1
      19: invokevirtual #48                 // Method java/net/HttpURLConnection.setDoInput:(Z)V
      22: aload_1
      23: invokevirtual #49                 // Method org/glassfish/jersey/client/ClientRequest.getMethod:()Ljava/lang/String;
      26: astore_3
      27: aload_1
      28: ldc           #51                 // String jersey.config.client.httpUrlConnection.setMethodWorkaround
      30: aload_0
      31: getfield      #13                 // Field setMethodWorkaround:Z
      34: invokestatic  #52                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      37: invokevirtual #53                 // Method org/glassfish/jersey/client/ClientRequest.resolveProperty:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #54                 // class java/lang/Boolean
      43: invokevirtual #21                 // Method java/lang/Boolean.booleanValue:()Z
      46: ifeq          57
      49: aload_2
      50: aload_3
      51: invokestatic  #1                  // Method setRequestMethodViaJreBugWorkaround:(Ljava/net/HttpURLConnection;Ljava/lang/String;)V
      54: goto          62
      57: aload_2
      58: aload_3
      59: invokevirtual #55                 // Method java/net/HttpURLConnection.setRequestMethod:(Ljava/lang/String;)V
      62: aload_2
      63: aload_1
      64: ldc           #57                 // String jersey.config.client.followRedirects
      66: iconst_1
      67: invokestatic  #52                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      70: invokevirtual #53                 // Method org/glassfish/jersey/client/ClientRequest.resolveProperty:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #54                 // class java/lang/Boolean
      76: invokevirtual #21                 // Method java/lang/Boolean.booleanValue:()Z
      79: invokevirtual #58                 // Method java/net/HttpURLConnection.setInstanceFollowRedirects:(Z)V
      82: aload_2
      83: aload_1
      84: ldc           #59                 // String jersey.config.client.connectTimeout
      86: aload_2
      87: invokevirtual #60                 // Method java/net/HttpURLConnection.getConnectTimeout:()I
      90: invokestatic  #61                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      93: invokevirtual #53                 // Method org/glassfish/jersey/client/ClientRequest.resolveProperty:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      96: checkcast     #62                 // class java/lang/Integer
      99: invokevirtual #63                 // Method java/lang/Integer.intValue:()I
     102: invokevirtual #64                 // Method java/net/HttpURLConnection.setConnectTimeout:(I)V
     105: aload_2
     106: aload_1
     107: ldc           #65                 // String jersey.config.client.readTimeout
     109: aload_2
     110: invokevirtual #66                 // Method java/net/HttpURLConnection.getReadTimeout:()I
     113: invokestatic  #61                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     116: invokevirtual #53                 // Method org/glassfish/jersey/client/ClientRequest.resolveProperty:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
     119: checkcast     #62                 // class java/lang/Integer
     122: invokevirtual #63                 // Method java/lang/Integer.intValue:()I
     125: invokevirtual #67                 // Method java/net/HttpURLConnection.setReadTimeout:(I)V
     128: aload_0
     129: aload_1
     130: invokevirtual #68                 // Method org/glassfish/jersey/client/ClientRequest.getClient:()Lorg/glassfish/jersey/client/JerseyClient;
     133: aload_2
     134: invokevirtual #69                 // Method secureConnection:(Lorg/glassfish/jersey/client/JerseyClient;Ljava/net/HttpURLConnection;)V
     137: aload_1
     138: invokevirtual #70                 // Method org/glassfish/jersey/client/ClientRequest.getEntity:()Ljava/lang/Object;
     141: astore        4
     143: aconst_null
     144: astore        5
     146: aload         4
     148: ifnull        293
     151: aload_1
     152: ldc           #71                 // String jersey.config.client.request.entity.processing
     154: ldc           #72                 // class org/glassfish/jersey/client/RequestEntityProcessing
     156: invokevirtual #73                 // Method org/glassfish/jersey/client/ClientRequest.resolveProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
     159: checkcast     #72                 // class org/glassfish/jersey/client/RequestEntityProcessing
     162: astore        6
     164: aload_1
     165: invokevirtual #74                 // Method org/glassfish/jersey/client/ClientRequest.getLengthLong:()J
     168: lstore        7
     170: aload         6
     172: ifnull        183
     175: aload         6
     177: getstatic     #75                 // Field org/glassfish/jersey/client/RequestEntityProcessing.BUFFERED:Lorg/glassfish/jersey/client/RequestEntityProcessing;
     180: if_acmpeq     222
     183: aload_0
     184: getfield      #12                 // Field fixLengthStreaming:Z
     187: ifeq          206
     190: lload         7
     192: lconst_0
     193: lcmp
     194: ifle          206
     197: aload_2
     198: lload         7
     200: invokevirtual #76                 // Method java/net/HttpURLConnection.setFixedLengthStreamingMode:(J)V
     203: goto          222
     206: aload         6
     208: getstatic     #77                 // Field org/glassfish/jersey/client/RequestEntityProcessing.CHUNKED:Lorg/glassfish/jersey/client/RequestEntityProcessing;
     211: if_acmpne     222
     214: aload_2
     215: aload_0
     216: getfield      #11                 // Field chunkSize:I
     219: invokevirtual #78                 // Method java/net/HttpURLConnection.setChunkedStreamingMode:(I)V
     222: aload_2
     223: iconst_1
     224: invokevirtual #79                 // Method java/net/HttpURLConnection.setDoOutput:(Z)V
     227: ldc           #80                 // String GET
     229: aload_3
     230: invokevirtual #81                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     233: ifeq          268
     236: ldc           #14                 // class org/glassfish/jersey/client/internal/HttpUrlConnector
     238: invokevirtual #82                 // Method java/lang/Class.getName:()Ljava/lang/String;
     241: invokestatic  #83                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
     244: astore        9
     246: aload         9
     248: getstatic     #84                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
     251: invokevirtual #85                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     254: ifeq          268
     257: aload         9
     259: getstatic     #84                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
     262: invokestatic  #86                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.HTTPURLCONNECTION_REPLACES_GET_WITH_ENTITY:()Ljava/lang/String;
     265: invokevirtual #87                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
     268: aload_0
     269: aload_1
     270: aload_2
     271: invokespecial #88                 // Method processExtentions:(Lorg/glassfish/jersey/client/ClientRequest;Ljava/net/HttpURLConnection;)V
     274: aload_1
     275: aload_0
     276: aload_1
     277: aload_2
     278: invokedynamic #89,  0             // InvokeDynamic #0:getOutputStream:(Lorg/glassfish/jersey/client/internal/HttpUrlConnector;Lorg/glassfish/jersey/client/ClientRequest;Ljava/net/HttpURLConnection;)Lorg/glassfish/jersey/message/internal/OutboundMessageContext$StreamProvider;
     283: invokevirtual #90                 // Method org/glassfish/jersey/client/ClientRequest.setStreamProvider:(Lorg/glassfish/jersey/message/internal/OutboundMessageContext$StreamProvider;)V
     286: aload_1
     287: invokevirtual #91                 // Method org/glassfish/jersey/client/ClientRequest.writeEntity:()V
     290: goto          302
     293: aload_0
     294: aload_1
     295: invokevirtual #92                 // Method org/glassfish/jersey/client/ClientRequest.getStringHeaders:()Ljavax/ws/rs/core/MultivaluedMap;
     298: aload_2
     299: invokespecial #93                 // Method setOutboundHeaders:(Ljavax/ws/rs/core/MultivaluedMap;Ljava/net/HttpURLConnection;)V
     302: goto          317
     305: astore        6
     307: aload_0
     308: aload_1
     309: aload         6
     311: aload_2
     312: invokespecial #94                 // Method handleException:(Lorg/glassfish/jersey/client/ClientRequest;Ljava/io/IOException;Ljava/net/HttpURLConnection;)Ljava/io/IOException;
     315: astore        5
     317: aload_2
     318: invokevirtual #95                 // Method java/net/HttpURLConnection.getResponseCode:()I
     321: istore        6
     323: aload_2
     324: invokevirtual #96                 // Method java/net/HttpURLConnection.getResponseMessage:()Ljava/lang/String;
     327: astore        7
     329: aload         7
     331: ifnonnull     342
     334: iload         6
     336: invokestatic  #97                 // Method org/glassfish/jersey/message/internal/Statuses.from:(I)Ljavax/ws/rs/core/Response$StatusType;
     339: goto          349
     342: iload         6
     344: aload         7
     346: invokestatic  #98                 // Method org/glassfish/jersey/message/internal/Statuses.from:(ILjava/lang/String;)Ljavax/ws/rs/core/Response$StatusType;
     349: astore        8
     351: aconst_null
     352: astore        9
     354: aload_2
     355: invokevirtual #99                 // Method java/net/HttpURLConnection.getURL:()Ljava/net/URL;
     358: invokevirtual #100                // Method java/net/URL.toURI:()Ljava/net/URI;
     361: astore        9
     363: goto          387
     366: astore        10
     368: aload         5
     370: ifnonnull     380
     373: aload         10
     375: astore        5
     377: goto          387
     380: aload         5
     382: aload         10
     384: invokevirtual #102                // Method java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V
     387: new           #103                // class org/glassfish/jersey/client/ClientResponse
     390: dup
     391: aload         8
     393: aload_1
     394: aload         9
     396: invokespecial #104                // Method org/glassfish/jersey/client/ClientResponse."<init>":(Ljavax/ws/rs/core/Response$StatusType;Lorg/glassfish/jersey/client/ClientRequest;Ljava/net/URI;)V
     399: astore        10
     401: aload         10
     403: aload_2
     404: invokevirtual #105                // Method java/net/HttpURLConnection.getHeaderFields:()Ljava/util/Map;
     407: invokeinterface #106,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     412: invokeinterface #107,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
     417: invokedynamic #108,  0            // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
     422: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     427: invokedynamic #110,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
     432: invokedynamic #111,  0            // InvokeDynamic #3:apply:()Ljava/util/function/Function;
     437: invokestatic  #112                // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
     440: invokeinterface #113,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     445: checkcast     #114                // class java/util/Map
     448: invokevirtual #115                // Method org/glassfish/jersey/client/ClientResponse.headers:(Ljava/util/Map;)Lorg/glassfish/jersey/message/internal/InboundMessageContext;
     451: pop
     452: aload_2
     453: invokestatic  #116                // Method getInputStream:(Ljava/net/HttpURLConnection;)Ljava/io/InputStream;
     456: astore        11
     458: aload         10
     460: aload         11
     462: invokevirtual #117                // Method org/glassfish/jersey/client/ClientResponse.setEntityStream:(Ljava/io/InputStream;)V
     465: goto          489
     468: astore        11
     470: aload         5
     472: ifnonnull     482
     475: aload         11
     477: astore        5
     479: goto          489
     482: aload         5
     484: aload         11
     486: invokevirtual #102                // Method java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V
     489: aload         5
     491: ifnull        506
     494: new           #118                // class org/glassfish/jersey/client/internal/ClientResponseProcessingException
     497: dup
     498: aload         10
     500: aload         5
     502: invokespecial #119                // Method org/glassfish/jersey/client/internal/ClientResponseProcessingException."<init>":(Lorg/glassfish/jersey/client/ClientResponse;Ljava/lang/Throwable;)V
     505: athrow
     506: aload         10
     508: areturn
    Exception table:
       from    to  target type
         146   302   305   Class java/io/IOException
         354   363   366   Class java/net/URISyntaxException
         452   465   468   Class java/io/IOException

  private void setOutboundHeaders(javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.String>, java.net.HttpURLConnection);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: invokeinterface #120,  1          // InterfaceMethod javax/ws/rs/core/MultivaluedMap.entrySet:()Ljava/util/Set;
       8: invokeinterface #121,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore        4
      15: aload         4
      17: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          205
      25: aload         4
      27: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #124                // class java/util/Map$Entry
      35: astore        5
      37: aload         5
      39: invokeinterface #125,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      44: checkcast     #19                 // class java/lang/String
      47: astore        6
      49: aload         5
      51: invokeinterface #126,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      56: checkcast     #127                // class java/util/List
      59: astore        8
      61: aload         8
      63: invokeinterface #128,  1          // InterfaceMethod java/util/List.size:()I
      68: iconst_1
      69: if_icmpne     96
      72: aload         8
      74: iconst_0
      75: invokeinterface #129,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      80: checkcast     #19                 // class java/lang/String
      83: astore        7
      85: aload_2
      86: aload         6
      88: aload         7
      90: invokevirtual #130                // Method java/net/HttpURLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
      93: goto          178
      96: new           #131                // class java/lang/StringBuilder
      99: dup
     100: invokespecial #132                // Method java/lang/StringBuilder."<init>":()V
     103: astore        9
     105: iconst_0
     106: istore        10
     108: aload         8
     110: invokeinterface #133,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     115: astore        11
     117: aload         11
     119: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     124: ifeq          163
     127: aload         11
     129: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     134: astore        12
     136: iload         10
     138: ifeq          149
     141: aload         9
     143: bipush        44
     145: invokevirtual #134                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     148: pop
     149: iconst_1
     150: istore        10
     152: aload         9
     154: aload         12
     156: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: pop
     160: goto          117
     163: aload         9
     165: invokevirtual #136                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: astore        7
     170: aload_2
     171: aload         6
     173: aload         7
     175: invokevirtual #130                // Method java/net/HttpURLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
     178: aload_0
     179: getfield      #22                 // Field isRestrictedHeaderPropertySet:Z
     182: ifne          202
     185: iload_3
     186: ifne          202
     189: aload_0
     190: aload         6
     192: aload         7
     194: invokespecial #137                // Method isHeaderRestricted:(Ljava/lang/String;Ljava/lang/String;)Z
     197: ifeq          202
     200: iconst_1
     201: istore_3
     202: goto          15
     205: iload_3
     206: ifeq          220
     209: getstatic     #23                 // Field LOGGER:Ljava/util/logging/Logger;
     212: ldc           #15                 // String sun.net.http.allowRestrictedHeaders
     214: invokestatic  #138                // Method org/glassfish/jersey/client/internal/LocalizationMessages.RESTRICTED_HEADER_POSSIBLY_IGNORED:(Ljava/lang/Object;)Ljava/lang/String;
     217: invokevirtual #139                // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
     220: return

  private boolean isHeaderRestricted(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: getstatic     #140                // Field java/util/Locale.ROOT:Ljava/util/Locale;
       4: invokevirtual #141                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ldc           #142                // String sec-
      11: invokevirtual #143                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      14: ifne          47
      17: getstatic     #144                // Field restrictedHeaderSet:Ljava/util/Set;
      20: aload_1
      21: invokeinterface #145,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      26: ifeq          51
      29: ldc           #146                // String connection
      31: aload_1
      32: invokevirtual #81                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      35: ifeq          47
      38: ldc           #147                // String close
      40: aload_2
      41: invokevirtual #81                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      44: ifne          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ireturn

  private static void setRequestMethodViaJreBugWorkaround(java.net.HttpURLConnection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method java/net/HttpURLConnection.setRequestMethod:(Ljava/lang/String;)V
       5: goto          56
       8: astore_2
       9: new           #149                // class org/glassfish/jersey/client/internal/HttpUrlConnector$3
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #150                // Method org/glassfish/jersey/client/internal/HttpUrlConnector$3."<init>":(Ljava/net/HttpURLConnection;Ljava/lang/String;)V
      18: invokestatic  #151                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      21: pop
      22: goto          56
      25: astore_3
      26: aload_3
      27: invokevirtual #153                // Method java/security/PrivilegedActionException.getCause:()Ljava/lang/Throwable;
      30: astore        4
      32: aload         4
      34: instanceof    #154                // class java/lang/RuntimeException
      37: ifeq          46
      40: aload         4
      42: checkcast     #154                // class java/lang/RuntimeException
      45: athrow
      46: new           #154                // class java/lang/RuntimeException
      49: dup
      50: aload         4
      52: invokespecial #155                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0     5     8   Class java/net/ProtocolException
           9    22    25   Class java/security/PrivilegedActionException

  private void processExtentions(org.glassfish.jersey.client.ClientRequest, java.net.HttpURLConnection);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectorExtension:Lorg/glassfish/jersey/client/internal/ConnectorExtension;
       4: aload_1
       5: aload_2
       6: invokeinterface #156,  3          // InterfaceMethod org/glassfish/jersey/client/internal/ConnectorExtension.invoke:(Lorg/glassfish/jersey/client/ClientRequest;Ljava/lang/Object;)V
      11: return

  private java.io.IOException handleException(org.glassfish.jersey.client.ClientRequest, java.io.IOException, java.net.HttpURLConnection) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectorExtension:Lorg/glassfish/jersey/client/internal/ConnectorExtension;
       4: aload_1
       5: aload_3
       6: aload_2
       7: invokeinterface #157,  4          // InterfaceMethod org/glassfish/jersey/client/internal/ConnectorExtension.handleException:(Lorg/glassfish/jersey/client/ClientRequest;Ljava/lang/Object;Ljava/lang/Exception;)Z
      12: ifeq          17
      15: aconst_null
      16: areturn
      17: aload_3
      18: invokevirtual #95                 // Method java/net/HttpURLConnection.getResponseCode:()I
      21: iconst_m1
      22: if_icmpne     27
      25: aload_2
      26: athrow
      27: aload_2
      28: areturn

  public java.lang.String getName();
    Code:
       0: new           #131                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #132                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #158                // String HttpUrlConnection
       9: invokevirtual #159                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: ldc           #160                // String java.version
      14: invokestatic  #161                // Method org/glassfish/jersey/internal/util/PropertiesHelper.getSystemProperty:(Ljava/lang/String;)Ljava/security/PrivilegedAction;
      17: invokestatic  #18                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      20: checkcast     #19                 // class java/lang/String
      23: invokevirtual #159                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #136                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #162                // class org/glassfish/jersey/client/ClientRequest
       5: invokevirtual #163                // Method apply:(Lorg/glassfish/jersey/client/ClientRequest;)Lorg/glassfish/jersey/client/ClientResponse;
       8: areturn

  private static boolean lambda$_apply$2(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokeinterface #125,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private java.io.OutputStream lambda$_apply$1(org.glassfish.jersey.client.ClientRequest, java.net.HttpURLConnection, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #92                 // Method org/glassfish/jersey/client/ClientRequest.getStringHeaders:()Ljavax/ws/rs/core/MultivaluedMap;
       5: aload_2
       6: invokespecial #93                 // Method setOutboundHeaders:(Ljavax/ws/rs/core/MultivaluedMap;Ljava/net/HttpURLConnection;)V
       9: aload_2
      10: invokevirtual #164                // Method java/net/HttpURLConnection.getOutputStream:()Ljava/io/OutputStream;
      13: areturn

  private static javax.net.ssl.SSLSocketFactory lambda$static$0();
    Code:
       0: invokestatic  #165                // Method javax/net/ssl/HttpsURLConnection.getDefaultSSLSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
       3: areturn

  static void access$000(java.net.HttpURLConnection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method setRequestMethodViaJreBugWorkaround:(Ljava/net/HttpURLConnection;Ljava/lang/String;)V
       5: return

  static {};
    Code:
       0: ldc           #14                 // class org/glassfish/jersey/client/internal/HttpUrlConnector
       2: invokevirtual #82                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #83                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #23                 // Field LOGGER:Ljava/util/logging/Logger;
      11: invokedynamic #166,  0            // InvokeDynamic #4:get:()Lorg/glassfish/jersey/internal/util/collection/Value;
      16: invokestatic  #8                  // Method org/glassfish/jersey/internal/util/collection/Values.lazy:(Lorg/glassfish/jersey/internal/util/collection/Value;)Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      19: putstatic     #40                 // Field DEFAULT_SSL_SOCKET_FACTORY:Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      22: bipush        12
      24: anewarray     #19                 // class java/lang/String
      27: dup
      28: iconst_0
      29: ldc           #167                // String Access-Control-Request-Headers
      31: aastore
      32: dup
      33: iconst_1
      34: ldc           #168                // String Access-Control-Request-Method
      36: aastore
      37: dup
      38: iconst_2
      39: ldc           #169                // String Connection
      41: aastore
      42: dup
      43: iconst_3
      44: ldc           #170                // String Content-Length
      46: aastore
      47: dup
      48: iconst_4
      49: ldc           #171                // String Content-Transfer-Encoding
      51: aastore
      52: dup
      53: iconst_5
      54: ldc           #172                // String Host
      56: aastore
      57: dup
      58: bipush        6
      60: ldc           #173                // String Keep-Alive
      62: aastore
      63: dup
      64: bipush        7
      66: ldc           #174                // String Origin
      68: aastore
      69: dup
      70: bipush        8
      72: ldc           #175                // String Trailer
      74: aastore
      75: dup
      76: bipush        9
      78: ldc           #176                // String Transfer-Encoding
      80: aastore
      81: dup
      82: bipush        10
      84: ldc           #177                // String Upgrade
      86: aastore
      87: dup
      88: bipush        11
      90: ldc           #178                // String Via
      92: aastore
      93: putstatic     #179                // Field restrictedHeaders:[Ljava/lang/String;
      96: new           #180                // class java/util/HashSet
      99: dup
     100: getstatic     #179                // Field restrictedHeaders:[Ljava/lang/String;
     103: arraylength
     104: invokespecial #181                // Method java/util/HashSet."<init>":(I)V
     107: putstatic     #144                // Field restrictedHeaderSet:Ljava/util/Set;
     110: getstatic     #179                // Field restrictedHeaders:[Ljava/lang/String;
     113: astore_0
     114: aload_0
     115: arraylength
     116: istore_1
     117: iconst_0
     118: istore_2
     119: iload_2
     120: iload_1
     121: if_icmpge     150
     124: aload_0
     125: iload_2
     126: aaload
     127: astore_3
     128: getstatic     #144                // Field restrictedHeaderSet:Ljava/util/Set;
     131: aload_3
     132: getstatic     #140                // Field java/util/Locale.ROOT:Ljava/util/Locale;
     135: invokevirtual #141                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
     138: invokeinterface #182,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     143: pop
     144: iinc          2, 1
     147: goto          119
     150: return
}
