Compiled from "ChunkedInput.java"
public class org.glassfish.jersey.client.ChunkedInput<T> extends javax.ws.rs.core.GenericType<T> implements java.io.Closeable {
  private static final java.util.logging.Logger LOGGER;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private org.glassfish.jersey.client.ChunkParser parser;

  private javax.ws.rs.core.MediaType mediaType;

  private final java.io.InputStream inputStream;

  private final java.lang.annotation.Annotation[] annotations;

  private final javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.String> headers;

  private final org.glassfish.jersey.message.MessageBodyWorkers messageBodyWorkers;

  private final org.glassfish.jersey.internal.PropertiesDelegate propertiesDelegate;

  public static org.glassfish.jersey.client.ChunkParser createParser(java.lang.String);
    Code:
       0: new           #1                  // class org/glassfish/jersey/client/ChunkedInput$FixedBoundaryParser
       3: dup
       4: aload_0
       5: invokevirtual #2                  // Method java/lang/String.getBytes:()[B
       8: invokespecial #3                  // Method org/glassfish/jersey/client/ChunkedInput$FixedBoundaryParser."<init>":([B)V
      11: areturn

  public static org.glassfish.jersey.client.ChunkParser createParser(byte[]);
    Code:
       0: new           #1                  // class org/glassfish/jersey/client/ChunkedInput$FixedBoundaryParser
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method org/glassfish/jersey/client/ChunkedInput$FixedBoundaryParser."<init>":([B)V
       8: areturn

  public static org.glassfish.jersey.client.ChunkParser createMultiParser(java.lang.String...);
    Code:
       0: new           #4                  // class org/glassfish/jersey/client/ChunkedInput$FixedMultiBoundaryParser
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method org/glassfish/jersey/client/ChunkedInput$FixedMultiBoundaryParser."<init>":([Ljava/lang/String;)V
       8: areturn

  protected org.glassfish.jersey.client.ChunkedInput(java.lang.reflect.Type, java.io.InputStream, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.String>, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.internal.PropertiesDelegate);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method javax/ws/rs/core/GenericType."<init>":(Ljava/lang/reflect/Type;)V
       5: aload_0
       6: new           #7                  // class java/util/concurrent/atomic/AtomicBoolean
       9: dup
      10: iconst_0
      11: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      14: putfield      #9                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      17: aload_0
      18: ldc           #10                 // String \r\n
      20: invokestatic  #11                 // Method createParser:(Ljava/lang/String;)Lorg/glassfish/jersey/client/ChunkParser;
      23: putfield      #12                 // Field parser:Lorg/glassfish/jersey/client/ChunkParser;
      26: aload_0
      27: aload_2
      28: putfield      #13                 // Field inputStream:Ljava/io/InputStream;
      31: aload_0
      32: aload_3
      33: putfield      #14                 // Field annotations:[Ljava/lang/annotation/Annotation;
      36: aload_0
      37: aload         4
      39: putfield      #15                 // Field mediaType:Ljavax/ws/rs/core/MediaType;
      42: aload_0
      43: aload         5
      45: putfield      #16                 // Field headers:Ljavax/ws/rs/core/MultivaluedMap;
      48: aload_0
      49: aload         6
      51: putfield      #17                 // Field messageBodyWorkers:Lorg/glassfish/jersey/message/MessageBodyWorkers;
      54: aload_0
      55: aload         7
      57: putfield      #18                 // Field propertiesDelegate:Lorg/glassfish/jersey/internal/PropertiesDelegate;
      60: return

  public org.glassfish.jersey.client.ChunkParser getParser();
    Code:
       0: aload_0
       1: getfield      #12                 // Field parser:Lorg/glassfish/jersey/client/ChunkParser;
       4: areturn

  public void setParser(org.glassfish.jersey.client.ChunkParser);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field parser:Lorg/glassfish/jersey/client/ChunkParser;
       5: return

  public javax.ws.rs.core.MediaType getChunkType();
    Code:
       0: aload_0
       1: getfield      #15                 // Field mediaType:Ljavax/ws/rs/core/MediaType;
       4: areturn

  public void setChunkType(javax.ws.rs.core.MediaType) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ifnonnull     15
       4: new           #19                 // class java/lang/IllegalArgumentException
       7: dup
       8: invokestatic  #20                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.CHUNKED_INPUT_MEDIA_TYPE_NULL:()Ljava/lang/String;
      11: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: aload_1
      17: putfield      #15                 // Field mediaType:Ljavax/ws/rs/core/MediaType;
      20: return

  public void setChunkType(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // Method javax/ws/rs/core/MediaType.valueOf:(Ljava/lang/String;)Ljavax/ws/rs/core/MediaType;
       5: putfield      #15                 // Field mediaType:Ljavax/ws/rs/core/MediaType;
       8: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #9                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          43
      12: aload_0
      13: getfield      #13                 // Field inputStream:Ljava/io/InputStream;
      16: ifnull        43
      19: aload_0
      20: getfield      #13                 // Field inputStream:Ljava/io/InputStream;
      23: invokevirtual #24                 // Method java/io/InputStream.close:()V
      26: goto          43
      29: astore_1
      30: getstatic     #26                 // Field LOGGER:Ljava/util/logging/Logger;
      33: getstatic     #27                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      36: invokestatic  #28                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.CHUNKED_INPUT_STREAM_CLOSING_ERROR:()Ljava/lang/String;
      39: aload_1
      40: invokevirtual #29                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      43: return
    Exception table:
       from    to  target type
          19    26    29   Class java/io/IOException

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #9                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public T read() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          21
      10: new           #31                 // class java/lang/IllegalStateException
      13: dup
      14: invokestatic  #32                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.CHUNKED_INPUT_CLOSED:()Ljava/lang/String;
      17: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #12                 // Field parser:Lorg/glassfish/jersey/client/ChunkParser;
      25: aload_0
      26: getfield      #13                 // Field inputStream:Ljava/io/InputStream;
      29: invokeinterface #34,  2           // InterfaceMethod org/glassfish/jersey/client/ChunkParser.readChunk:(Ljava/io/InputStream;)[B
      34: astore_1
      35: aload_1
      36: ifnonnull     46
      39: aload_0
      40: invokevirtual #35                 // Method close:()V
      43: goto          94
      46: new           #36                 // class java/io/ByteArrayInputStream
      49: dup
      50: aload_1
      51: invokespecial #37                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      54: astore_2
      55: aload_0
      56: getfield      #17                 // Field messageBodyWorkers:Lorg/glassfish/jersey/message/MessageBodyWorkers;
      59: aload_0
      60: invokevirtual #38                 // Method getRawType:()Ljava/lang/Class;
      63: aload_0
      64: invokevirtual #39                 // Method getType:()Ljava/lang/reflect/Type;
      67: aload_0
      68: getfield      #14                 // Field annotations:[Ljava/lang/annotation/Annotation;
      71: aload_0
      72: getfield      #15                 // Field mediaType:Ljavax/ws/rs/core/MediaType;
      75: aload_0
      76: getfield      #16                 // Field headers:Ljavax/ws/rs/core/MultivaluedMap;
      79: aload_0
      80: getfield      #18                 // Field propertiesDelegate:Lorg/glassfish/jersey/internal/PropertiesDelegate;
      83: aload_2
      84: invokestatic  #40                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      87: iconst_0
      88: invokeinterface #41,  10          // InterfaceMethod org/glassfish/jersey/message/MessageBodyWorkers.readFrom:(Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;Ljavax/ws/rs/core/MultivaluedMap;Lorg/glassfish/jersey/internal/PropertiesDelegate;Ljava/io/InputStream;Ljava/lang/Iterable;Z)Ljava/lang/Object;
      93: areturn
      94: goto          123
      97: astore_1
      98: aload_0
      99: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     102: invokevirtual #43                 // Method java/lang/Class.getName:()Ljava/lang/String;
     105: invokestatic  #44                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
     108: getstatic     #27                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     111: aload_1
     112: invokevirtual #45                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     115: aload_1
     116: invokevirtual #29                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     119: aload_0
     120: invokevirtual #35                 // Method close:()V
     123: aconst_null
     124: areturn
    Exception table:
       from    to  target type
          21    93    97   Class java/io/IOException

  static {};
    Code:
       0: ldc           #46                 // class org/glassfish/jersey/client/ChunkedInput
       2: invokevirtual #43                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #44                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #26                 // Field LOGGER:Ljava/util/logging/Logger;
      11: return
}
