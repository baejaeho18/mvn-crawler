Compiled from "JerseyClient.java"
public class org.glassfish.jersey.client.JerseyClient implements javax.ws.rs.client.Client, org.glassfish.jersey.client.Initializable<org.glassfish.jersey.client.JerseyClient> {
  private static final java.util.logging.Logger LOG;

  private static final org.glassfish.jersey.client.spi.DefaultSslContextProvider DEFAULT_SSL_CONTEXT_PROVIDER;

  private final java.util.concurrent.atomic.AtomicBoolean closedFlag;

  private final boolean isDefaultSslContext;

  private final org.glassfish.jersey.client.ClientConfig config;

  private final javax.net.ssl.HostnameVerifier hostnameVerifier;

  private final org.glassfish.jersey.internal.util.collection.UnsafeValue<javax.net.ssl.SSLContext, java.lang.IllegalStateException> sslContext;

  private final java.util.concurrent.LinkedBlockingDeque<java.lang.ref.WeakReference<org.glassfish.jersey.client.JerseyClient$ShutdownHook>> shutdownHooks;

  private final java.lang.ref.ReferenceQueue<org.glassfish.jersey.client.JerseyClient$ShutdownHook> shReferenceQueue;

  protected org.glassfish.jersey.client.JerseyClient();
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: checkcast     #1                  // class org/glassfish/jersey/internal/util/collection/UnsafeValue
       6: aconst_null
       7: aconst_null
       8: invokespecial #2                  // Method "<init>":(Ljavax/ws/rs/core/Configuration;Lorg/glassfish/jersey/internal/util/collection/UnsafeValue;Ljavax/net/ssl/HostnameVerifier;Lorg/glassfish/jersey/client/spi/DefaultSslContextProvider;)V
      11: return

  protected org.glassfish.jersey.client.JerseyClient(javax.ws.rs.core.Configuration, javax.net.ssl.SSLContext, javax.net.ssl.HostnameVerifier);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #3                  // Method "<init>":(Ljavax/ws/rs/core/Configuration;Ljavax/net/ssl/SSLContext;Ljavax/net/ssl/HostnameVerifier;Lorg/glassfish/jersey/client/spi/DefaultSslContextProvider;)V
       8: return

  protected org.glassfish.jersey.client.JerseyClient(javax.ws.rs.core.Configuration, javax.net.ssl.SSLContext, javax.net.ssl.HostnameVerifier, org.glassfish.jersey.client.spi.DefaultSslContextProvider);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ifnonnull     10
       6: aconst_null
       7: goto          14
      10: aload_2
      11: invokestatic  #4                  // Method org/glassfish/jersey/internal/util/collection/Values.unsafe:(Ljava/lang/Object;)Lorg/glassfish/jersey/internal/util/collection/UnsafeValue;
      14: aload_3
      15: aload         4
      17: invokespecial #2                  // Method "<init>":(Ljavax/ws/rs/core/Configuration;Lorg/glassfish/jersey/internal/util/collection/UnsafeValue;Ljavax/net/ssl/HostnameVerifier;Lorg/glassfish/jersey/client/spi/DefaultSslContextProvider;)V
      20: return

  protected org.glassfish.jersey.client.JerseyClient(javax.ws.rs.core.Configuration, org.glassfish.jersey.internal.util.collection.UnsafeValue<javax.net.ssl.SSLContext, java.lang.IllegalStateException>, javax.net.ssl.HostnameVerifier);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #2                  // Method "<init>":(Ljavax/ws/rs/core/Configuration;Lorg/glassfish/jersey/internal/util/collection/UnsafeValue;Ljavax/net/ssl/HostnameVerifier;Lorg/glassfish/jersey/client/spi/DefaultSslContextProvider;)V
       8: return

  protected org.glassfish.jersey.client.JerseyClient(javax.ws.rs.core.Configuration, org.glassfish.jersey.internal.util.collection.UnsafeValue<javax.net.ssl.SSLContext, java.lang.IllegalStateException>, javax.net.ssl.HostnameVerifier, org.glassfish.jersey.client.spi.DefaultSslContextProvider);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #8                  // Field closedFlag:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #9                  // class java/util/concurrent/LinkedBlockingDeque
      20: dup
      21: invokespecial #10                 // Method java/util/concurrent/LinkedBlockingDeque."<init>":()V
      24: putfield      #11                 // Field shutdownHooks:Ljava/util/concurrent/LinkedBlockingDeque;
      27: aload_0
      28: new           #12                 // class java/lang/ref/ReferenceQueue
      31: dup
      32: invokespecial #13                 // Method java/lang/ref/ReferenceQueue."<init>":()V
      35: putfield      #14                 // Field shReferenceQueue:Ljava/lang/ref/ReferenceQueue;
      38: aload_0
      39: aload_1
      40: ifnonnull     54
      43: new           #15                 // class org/glassfish/jersey/client/ClientConfig
      46: dup
      47: aload_0
      48: invokespecial #16                 // Method org/glassfish/jersey/client/ClientConfig."<init>":(Lorg/glassfish/jersey/client/JerseyClient;)V
      51: goto          63
      54: new           #15                 // class org/glassfish/jersey/client/ClientConfig
      57: dup
      58: aload_0
      59: aload_1
      60: invokespecial #17                 // Method org/glassfish/jersey/client/ClientConfig."<init>":(Lorg/glassfish/jersey/client/JerseyClient;Ljavax/ws/rs/core/Configuration;)V
      63: putfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
      66: aload_2
      67: ifnonnull     146
      70: aload_0
      71: iconst_1
      72: putfield      #19                 // Field isDefaultSslContext:Z
      75: aload         4
      77: ifnull        93
      80: aload_0
      81: aload_0
      82: aload         4
      84: invokespecial #20                 // Method createLazySslContext:(Lorg/glassfish/jersey/client/spi/DefaultSslContextProvider;)Lorg/glassfish/jersey/internal/util/collection/UnsafeValue;
      87: putfield      #21                 // Field sslContext:Lorg/glassfish/jersey/internal/util/collection/UnsafeValue;
      90: goto          159
      93: ldc           #22                 // class org/glassfish/jersey/client/spi/DefaultSslContextProvider
      95: invokestatic  #23                 // Method org/glassfish/jersey/internal/ServiceFinder.find:(Ljava/lang/Class;)Lorg/glassfish/jersey/internal/ServiceFinder;
      98: invokevirtual #24                 // Method org/glassfish/jersey/internal/ServiceFinder.iterator:()Ljava/util/Iterator;
     101: astore        6
     103: aload         6
     105: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          128
     113: aload         6
     115: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     120: checkcast     #22                 // class org/glassfish/jersey/client/spi/DefaultSslContextProvider
     123: astore        5
     125: goto          133
     128: getstatic     #27                 // Field DEFAULT_SSL_CONTEXT_PROVIDER:Lorg/glassfish/jersey/client/spi/DefaultSslContextProvider;
     131: astore        5
     133: aload_0
     134: aload_0
     135: aload         5
     137: invokespecial #20                 // Method createLazySslContext:(Lorg/glassfish/jersey/client/spi/DefaultSslContextProvider;)Lorg/glassfish/jersey/internal/util/collection/UnsafeValue;
     140: putfield      #21                 // Field sslContext:Lorg/glassfish/jersey/internal/util/collection/UnsafeValue;
     143: goto          159
     146: aload_0
     147: iconst_0
     148: putfield      #19                 // Field isDefaultSslContext:Z
     151: aload_0
     152: aload_2
     153: invokestatic  #28                 // Method org/glassfish/jersey/internal/util/collection/Values.lazy:(Lorg/glassfish/jersey/internal/util/collection/UnsafeValue;)Lorg/glassfish/jersey/internal/util/collection/LazyUnsafeValue;
     156: putfield      #21                 // Field sslContext:Lorg/glassfish/jersey/internal/util/collection/UnsafeValue;
     159: aload_0
     160: aload_3
     161: putfield      #29                 // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
     164: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #8                  // Field closedFlag:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          16
      12: aload_0
      13: invokespecial #31                 // Method release:()V
      16: return

  private void release();
    Code:
       0: aload_0
       1: getfield      #11                 // Field shutdownHooks:Ljava/util/concurrent/LinkedBlockingDeque;
       4: invokevirtual #32                 // Method java/util/concurrent/LinkedBlockingDeque.pollFirst:()Ljava/lang/Object;
       7: checkcast     #33                 // class java/lang/ref/Reference
      10: dup
      11: astore_1
      12: ifnull        60
      15: aload_1
      16: invokevirtual #34                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      19: checkcast     #35                 // class org/glassfish/jersey/client/JerseyClient$ShutdownHook
      22: astore_2
      23: aload_2
      24: ifnull        57
      27: aload_2
      28: invokeinterface #36,  1           // InterfaceMethod org/glassfish/jersey/client/JerseyClient$ShutdownHook.onShutdown:()V
      33: goto          57
      36: astore_3
      37: getstatic     #38                 // Field LOG:Ljava/util/logging/Logger;
      40: getstatic     #39                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      43: aload_1
      44: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;
      50: invokestatic  #42                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.ERROR_SHUTDOWNHOOK_CLOSE:(Ljava/lang/Object;)Ljava/lang/String;
      53: aload_3
      54: invokevirtual #43                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      57: goto          0
      60: return
    Exception table:
       from    to  target type
          27    33    36   Class java/lang/Throwable

  private org.glassfish.jersey.internal.util.collection.UnsafeValue<javax.net.ssl.SSLContext, java.lang.IllegalStateException> createLazySslContext(org.glassfish.jersey.client.spi.DefaultSslContextProvider);
    Code:
       0: new           #44                 // class org/glassfish/jersey/client/JerseyClient$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #45                 // Method org/glassfish/jersey/client/JerseyClient$2."<init>":(Lorg/glassfish/jersey/client/JerseyClient;Lorg/glassfish/jersey/client/spi/DefaultSslContextProvider;)V
       9: invokestatic  #28                 // Method org/glassfish/jersey/internal/util/collection/Values.lazy:(Lorg/glassfish/jersey/internal/util/collection/UnsafeValue;)Lorg/glassfish/jersey/internal/util/collection/LazyUnsafeValue;
      12: areturn

  void registerShutdownHook(org.glassfish.jersey.client.JerseyClient$ShutdownHook);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #11                 // Field shutdownHooks:Ljava/util/concurrent/LinkedBlockingDeque;
       8: new           #47                 // class java/lang/ref/WeakReference
      11: dup
      12: aload_1
      13: aload_0
      14: getfield      #14                 // Field shReferenceQueue:Ljava/lang/ref/ReferenceQueue;
      17: invokespecial #48                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      20: invokevirtual #49                 // Method java/util/concurrent/LinkedBlockingDeque.push:(Ljava/lang/Object;)V
      23: aload_0
      24: invokespecial #50                 // Method cleanUpShutdownHooks:()V
      27: return

  private void cleanUpShutdownHooks();
    Code:
       0: aload_0
       1: getfield      #14                 // Field shReferenceQueue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #51                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: dup
       8: astore_1
       9: ifnull        42
      12: aload_0
      13: getfield      #11                 // Field shutdownHooks:Ljava/util/concurrent/LinkedBlockingDeque;
      16: aload_1
      17: invokevirtual #52                 // Method java/util/concurrent/LinkedBlockingDeque.remove:(Ljava/lang/Object;)Z
      20: pop
      21: aload_1
      22: invokevirtual #34                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      25: checkcast     #35                 // class org/glassfish/jersey/client/JerseyClient$ShutdownHook
      28: astore_2
      29: aload_2
      30: ifnull        39
      33: aload_2
      34: invokeinterface #36,  1           // InterfaceMethod org/glassfish/jersey/client/JerseyClient$ShutdownHook.onShutdown:()V
      39: goto          0
      42: return

  private java.util.concurrent.ScheduledExecutorService getDefaultScheduledExecutorService();
    Code:
       0: bipush        8
       2: invokestatic  #53                 // Method java/util/concurrent/Executors.newScheduledThreadPool:(I)Ljava/util/concurrent/ScheduledExecutorService;
       5: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field closedFlag:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #54                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  void checkNotClosed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field closedFlag:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #54                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: invokestatic  #55                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.CLIENT_INSTANCE_CLOSED:()Ljava/lang/String;
      18: invokestatic  #56                 // Method org/glassfish/jersey/internal/guava/Preconditions.checkState:(ZLjava/lang/Object;)V
      21: return

  public boolean isDefaultSslContext();
    Code:
       0: aload_0
       1: getfield      #19                 // Field isDefaultSslContext:Z
       4: ireturn

  public org.glassfish.jersey.client.JerseyWebTarget target(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_1
       5: invokestatic  #57                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.CLIENT_URI_TEMPLATE_NULL:()Ljava/lang/String;
       8: invokestatic  #58                 // Method org/glassfish/jersey/internal/guava/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: new           #59                 // class org/glassfish/jersey/client/JerseyWebTarget
      15: dup
      16: aload_1
      17: aload_0
      18: invokespecial #60                 // Method org/glassfish/jersey/client/JerseyWebTarget."<init>":(Ljava/lang/String;Lorg/glassfish/jersey/client/JerseyClient;)V
      21: areturn

  public org.glassfish.jersey.client.JerseyWebTarget target(java.net.URI);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_1
       5: invokestatic  #61                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.CLIENT_URI_NULL:()Ljava/lang/String;
       8: invokestatic  #58                 // Method org/glassfish/jersey/internal/guava/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: new           #59                 // class org/glassfish/jersey/client/JerseyWebTarget
      15: dup
      16: aload_1
      17: aload_0
      18: invokespecial #62                 // Method org/glassfish/jersey/client/JerseyWebTarget."<init>":(Ljava/net/URI;Lorg/glassfish/jersey/client/JerseyClient;)V
      21: areturn

  public org.glassfish.jersey.client.JerseyWebTarget target(javax.ws.rs.core.UriBuilder);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_1
       5: invokestatic  #63                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.CLIENT_URI_BUILDER_NULL:()Ljava/lang/String;
       8: invokestatic  #58                 // Method org/glassfish/jersey/internal/guava/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: new           #59                 // class org/glassfish/jersey/client/JerseyWebTarget
      15: dup
      16: aload_1
      17: aload_0
      18: invokespecial #64                 // Method org/glassfish/jersey/client/JerseyWebTarget."<init>":(Ljavax/ws/rs/core/UriBuilder;Lorg/glassfish/jersey/client/JerseyClient;)V
      21: areturn

  public org.glassfish.jersey.client.JerseyWebTarget target(javax.ws.rs.core.Link);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_1
       5: invokestatic  #65                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.CLIENT_TARGET_LINK_NULL:()Ljava/lang/String;
       8: invokestatic  #58                 // Method org/glassfish/jersey/internal/guava/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: new           #59                 // class org/glassfish/jersey/client/JerseyWebTarget
      15: dup
      16: aload_1
      17: aload_0
      18: invokespecial #66                 // Method org/glassfish/jersey/client/JerseyWebTarget."<init>":(Ljavax/ws/rs/core/Link;Lorg/glassfish/jersey/client/JerseyClient;)V
      21: areturn

  public org.glassfish.jersey.client.JerseyInvocation$Builder invocation(javax.ws.rs.core.Link);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_1
       5: invokestatic  #67                 // Method org/glassfish/jersey/client/internal/LocalizationMessages.CLIENT_INVOCATION_LINK_NULL:()Ljava/lang/String;
       8: invokestatic  #58                 // Method org/glassfish/jersey/internal/guava/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: new           #59                 // class org/glassfish/jersey/client/JerseyWebTarget
      15: dup
      16: aload_1
      17: aload_0
      18: invokespecial #66                 // Method org/glassfish/jersey/client/JerseyWebTarget."<init>":(Ljavax/ws/rs/core/Link;Lorg/glassfish/jersey/client/JerseyClient;)V
      21: astore_2
      22: aload_1
      23: invokevirtual #68                 // Method javax/ws/rs/core/Link.getType:()Ljava/lang/String;
      26: astore_3
      27: aload_3
      28: ifnull        46
      31: aload_2
      32: iconst_1
      33: anewarray     #69                 // class java/lang/String
      36: dup
      37: iconst_0
      38: aload_3
      39: aastore
      40: invokevirtual #70                 // Method org/glassfish/jersey/client/JerseyWebTarget.request:([Ljava/lang/String;)Lorg/glassfish/jersey/client/JerseyInvocation$Builder;
      43: goto          50
      46: aload_2
      47: invokevirtual #71                 // Method org/glassfish/jersey/client/JerseyWebTarget.request:()Lorg/glassfish/jersey/client/JerseyInvocation$Builder;
      50: areturn

  public org.glassfish.jersey.client.JerseyClient register(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       8: aload_1
       9: invokevirtual #72                 // Method org/glassfish/jersey/client/ClientConfig.register:(Ljava/lang/Class;)Lorg/glassfish/jersey/client/ClientConfig;
      12: pop
      13: aload_0
      14: areturn

  public org.glassfish.jersey.client.JerseyClient register(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       8: aload_1
       9: invokevirtual #73                 // Method org/glassfish/jersey/client/ClientConfig.register:(Ljava/lang/Object;)Lorg/glassfish/jersey/client/ClientConfig;
      12: pop
      13: aload_0
      14: areturn

  public org.glassfish.jersey.client.JerseyClient register(java.lang.Class<?>, int);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       8: aload_1
       9: iload_2
      10: invokevirtual #74                 // Method org/glassfish/jersey/client/ClientConfig.register:(Ljava/lang/Class;I)Lorg/glassfish/jersey/client/ClientConfig;
      13: pop
      14: aload_0
      15: areturn

  public org.glassfish.jersey.client.JerseyClient register(java.lang.Class<?>, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       8: aload_1
       9: aload_2
      10: invokevirtual #75                 // Method org/glassfish/jersey/client/ClientConfig.register:(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/glassfish/jersey/client/ClientConfig;
      13: pop
      14: aload_0
      15: areturn

  public org.glassfish.jersey.client.JerseyClient register(java.lang.Class<?>, java.util.Map<java.lang.Class<?>, java.lang.Integer>);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       8: aload_1
       9: aload_2
      10: invokevirtual #76                 // Method org/glassfish/jersey/client/ClientConfig.register:(Ljava/lang/Class;Ljava/util/Map;)Lorg/glassfish/jersey/client/ClientConfig;
      13: pop
      14: aload_0
      15: areturn

  public org.glassfish.jersey.client.JerseyClient register(java.lang.Object, int);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       8: aload_1
       9: iload_2
      10: invokevirtual #77                 // Method org/glassfish/jersey/client/ClientConfig.register:(Ljava/lang/Object;I)Lorg/glassfish/jersey/client/ClientConfig;
      13: pop
      14: aload_0
      15: areturn

  public org.glassfish.jersey.client.JerseyClient register(java.lang.Object, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       8: aload_1
       9: aload_2
      10: invokevirtual #78                 // Method org/glassfish/jersey/client/ClientConfig.register:(Ljava/lang/Object;[Ljava/lang/Class;)Lorg/glassfish/jersey/client/ClientConfig;
      13: pop
      14: aload_0
      15: areturn

  public org.glassfish.jersey.client.JerseyClient register(java.lang.Object, java.util.Map<java.lang.Class<?>, java.lang.Integer>);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       8: aload_1
       9: aload_2
      10: invokevirtual #79                 // Method org/glassfish/jersey/client/ClientConfig.register:(Ljava/lang/Object;Ljava/util/Map;)Lorg/glassfish/jersey/client/ClientConfig;
      13: pop
      14: aload_0
      15: areturn

  public org.glassfish.jersey.client.JerseyClient property(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       8: aload_1
       9: aload_2
      10: invokevirtual #80                 // Method org/glassfish/jersey/client/ClientConfig.property:(Ljava/lang/String;Ljava/lang/Object;)Lorg/glassfish/jersey/client/ClientConfig;
      13: pop
      14: aload_0
      15: areturn

  public org.glassfish.jersey.client.ClientConfig getConfiguration();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       8: invokevirtual #81                 // Method org/glassfish/jersey/client/ClientConfig.getConfiguration:()Lorg/glassfish/jersey/client/ClientConfig;
      11: areturn

  public javax.net.ssl.SSLContext getSslContext();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sslContext:Lorg/glassfish/jersey/internal/util/collection/UnsafeValue;
       4: invokeinterface #82,  1           // InterfaceMethod org/glassfish/jersey/internal/util/collection/UnsafeValue.get:()Ljava/lang/Object;
       9: checkcast     #83                 // class javax/net/ssl/SSLContext
      12: areturn

  public javax.net.ssl.HostnameVerifier getHostnameVerifier();
    Code:
       0: aload_0
       1: getfield      #29                 // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
       4: areturn

  public java.util.concurrent.ExecutorService getExecutorService();
    Code:
       0: aload_0
       1: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       4: invokevirtual #84                 // Method org/glassfish/jersey/client/ClientConfig.getExecutorService:()Ljava/util/concurrent/ExecutorService;
       7: areturn

  public java.util.concurrent.ScheduledExecutorService getScheduledExecutorService();
    Code:
       0: aload_0
       1: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       4: invokevirtual #85                 // Method org/glassfish/jersey/client/ClientConfig.getScheduledExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
       7: areturn

  public org.glassfish.jersey.client.JerseyClient preInitialize();
    Code:
       0: aload_0
       1: getfield      #18                 // Field config:Lorg/glassfish/jersey/client/ClientConfig;
       4: invokevirtual #86                 // Method org/glassfish/jersey/client/ClientConfig.preInitialize:()Lorg/glassfish/jersey/client/ClientConfig;
       7: pop
       8: aload_0
       9: areturn

  public javax.ws.rs.client.Invocation$Builder invocation(javax.ws.rs.core.Link);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #87                 // Method invocation:(Ljavax/ws/rs/core/Link;)Lorg/glassfish/jersey/client/JerseyInvocation$Builder;
       5: areturn

  public javax.ws.rs.client.WebTarget target(javax.ws.rs.core.Link);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #88                 // Method target:(Ljavax/ws/rs/core/Link;)Lorg/glassfish/jersey/client/JerseyWebTarget;
       5: areturn

  public javax.ws.rs.client.WebTarget target(javax.ws.rs.core.UriBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #89                 // Method target:(Ljavax/ws/rs/core/UriBuilder;)Lorg/glassfish/jersey/client/JerseyWebTarget;
       5: areturn

  public javax.ws.rs.client.WebTarget target(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #90                 // Method target:(Ljava/net/URI;)Lorg/glassfish/jersey/client/JerseyWebTarget;
       5: areturn

  public javax.ws.rs.client.WebTarget target(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #91                 // Method target:(Ljava/lang/String;)Lorg/glassfish/jersey/client/JerseyWebTarget;
       5: areturn

  public javax.ws.rs.core.Configurable register(java.lang.Object, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #92                 // Method register:(Ljava/lang/Object;Ljava/util/Map;)Lorg/glassfish/jersey/client/JerseyClient;
       6: areturn

  public javax.ws.rs.core.Configurable register(java.lang.Object, java.lang.Class[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #93                 // Method register:(Ljava/lang/Object;[Ljava/lang/Class;)Lorg/glassfish/jersey/client/JerseyClient;
       6: areturn

  public javax.ws.rs.core.Configurable register(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #94                 // Method register:(Ljava/lang/Object;I)Lorg/glassfish/jersey/client/JerseyClient;
       6: areturn

  public javax.ws.rs.core.Configurable register(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #95                 // Method register:(Ljava/lang/Object;)Lorg/glassfish/jersey/client/JerseyClient;
       5: areturn

  public javax.ws.rs.core.Configurable register(java.lang.Class, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #96                 // Method register:(Ljava/lang/Class;Ljava/util/Map;)Lorg/glassfish/jersey/client/JerseyClient;
       6: areturn

  public javax.ws.rs.core.Configurable register(java.lang.Class, java.lang.Class[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #97                 // Method register:(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/glassfish/jersey/client/JerseyClient;
       6: areturn

  public javax.ws.rs.core.Configurable register(java.lang.Class, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #98                 // Method register:(Ljava/lang/Class;I)Lorg/glassfish/jersey/client/JerseyClient;
       6: areturn

  public javax.ws.rs.core.Configurable register(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #99                 // Method register:(Ljava/lang/Class;)Lorg/glassfish/jersey/client/JerseyClient;
       5: areturn

  public javax.ws.rs.core.Configurable property(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #100                // Method property:(Ljava/lang/String;Ljava/lang/Object;)Lorg/glassfish/jersey/client/JerseyClient;
       6: areturn

  public javax.ws.rs.core.Configuration getConfiguration();
    Code:
       0: aload_0
       1: invokevirtual #101                // Method getConfiguration:()Lorg/glassfish/jersey/client/ClientConfig;
       4: areturn

  public org.glassfish.jersey.client.Initializable preInitialize();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method preInitialize:()Lorg/glassfish/jersey/client/JerseyClient;
       4: areturn

  static {};
    Code:
       0: ldc           #103                // class org/glassfish/jersey/client/JerseyClient
       2: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #104                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #38                 // Field LOG:Ljava/util/logging/Logger;
      11: new           #105                // class org/glassfish/jersey/client/JerseyClient$1
      14: dup
      15: invokespecial #106                // Method org/glassfish/jersey/client/JerseyClient$1."<init>":()V
      18: putstatic     #27                 // Field DEFAULT_SSL_CONTEXT_PROVIDER:Lorg/glassfish/jersey/client/spi/DefaultSslContextProvider;
      21: return
}
