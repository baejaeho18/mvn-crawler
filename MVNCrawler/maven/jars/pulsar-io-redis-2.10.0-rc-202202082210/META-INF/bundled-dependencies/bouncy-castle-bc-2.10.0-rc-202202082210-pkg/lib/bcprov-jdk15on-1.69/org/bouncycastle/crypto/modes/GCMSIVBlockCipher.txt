public class org.bouncycastle.crypto.modes.GCMSIVBlockCipher implements org.bouncycastle.crypto.modes.AEADBlockCipher {
  private static final int BUFLEN;

  private static final int HALFBUFLEN;

  private static final int NONCELEN;

  private static final int MAX_DATALEN;

  private static final byte MASK;

  private static final byte ADD;

  private static final int INIT;

  private static final int AEAD_COMPLETE;

  private final org.bouncycastle.crypto.BlockCipher theCipher;

  private final org.bouncycastle.crypto.modes.gcm.GCMMultiplier theMultiplier;

  private final byte[] theGHash;

  private final byte[] theReverse;

  private final org.bouncycastle.crypto.modes.GCMSIVBlockCipher$GCMSIVHasher theAEADHasher;

  private final org.bouncycastle.crypto.modes.GCMSIVBlockCipher$GCMSIVHasher theDataHasher;

  private org.bouncycastle.crypto.modes.GCMSIVBlockCipher$GCMSIVCache thePlain;

  private org.bouncycastle.crypto.modes.GCMSIVBlockCipher$GCMSIVCache theEncData;

  private boolean forEncryption;

  private byte[] theInitialAEAD;

  private byte[] theNonce;

  private int theFlags;

  private byte[] macBlock;

  public org.bouncycastle.crypto.modes.GCMSIVBlockCipher();
    Code:
       0: aload_0
       1: new           #182                // class org/bouncycastle/crypto/engines/AESEngine
       4: dup
       5: invokespecial #305                // Method org/bouncycastle/crypto/engines/AESEngine."<init>":()V
       8: invokespecial #324                // Method "<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
      11: return

  public org.bouncycastle.crypto.modes.GCMSIVBlockCipher(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: aload_1
       2: new           #189                // class org/bouncycastle/crypto/modes/gcm/Tables4kGCMMultiplier
       5: dup
       6: invokespecial #339                // Method org/bouncycastle/crypto/modes/gcm/Tables4kGCMMultiplier."<init>":()V
       9: invokespecial #326                // Method "<init>":(Lorg/bouncycastle/crypto/BlockCipher;Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;)V
      12: return

  public org.bouncycastle.crypto.modes.GCMSIVBlockCipher(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.modes.gcm.GCMMultiplier);
    Code:
       0: aload_0
       1: invokespecial #297                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        16
       7: newarray       byte
       9: putfield      #284                // Field theGHash:[B
      12: aload_0
      13: bipush        16
      15: newarray       byte
      17: putfield      #287                // Field theReverse:[B
      20: aload_0
      21: bipush        16
      23: newarray       byte
      25: putfield      #283                // Field macBlock:[B
      28: aload_1
      29: invokeinterface #352,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      34: bipush        16
      36: if_icmpeq     49
      39: new           #172                // class java/lang/IllegalArgumentException
      42: dup
      43: ldc           #6                  // String Cipher required with a block size of 16.
      45: invokespecial #294                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: aload_1
      51: putfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
      54: aload_0
      55: aload_2
      56: putfield      #293                // Field theMultiplier:Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;
      59: aload_0
      60: new           #187                // class org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher
      63: dup
      64: aload_0
      65: aconst_null
      66: invokespecial #338                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher."<init>":(Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher;Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$1;)V
      69: putfield      #291                // Field theAEADHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
      72: aload_0
      73: new           #187                // class org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher
      76: dup
      77: aload_0
      78: aconst_null
      79: invokespecial #338                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher."<init>":(Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher;Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$1;)V
      82: putfield      #292                // Field theDataHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
      85: return

  public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher();
    Code:
       0: aload_0
       1: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: areturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: aconst_null
       6: astore        5
       8: aload_2
       9: instanceof    #190                // class org/bouncycastle/crypto/params/AEADParameters
      12: ifeq          44
      15: aload_2
      16: checkcast     #190                // class org/bouncycastle/crypto/params/AEADParameters
      19: astore        6
      21: aload         6
      23: invokevirtual #340                // Method org/bouncycastle/crypto/params/AEADParameters.getAssociatedText:()[B
      26: astore_3
      27: aload         6
      29: invokevirtual #341                // Method org/bouncycastle/crypto/params/AEADParameters.getNonce:()[B
      32: astore        4
      34: aload         6
      36: invokevirtual #342                // Method org/bouncycastle/crypto/params/AEADParameters.getKey:()Lorg/bouncycastle/crypto/params/KeyParameter;
      39: astore        5
      41: goto          87
      44: aload_2
      45: instanceof    #192                // class org/bouncycastle/crypto/params/ParametersWithIV
      48: ifeq          77
      51: aload_2
      52: checkcast     #192                // class org/bouncycastle/crypto/params/ParametersWithIV
      55: astore        6
      57: aload         6
      59: invokevirtual #345                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      62: astore        4
      64: aload         6
      66: invokevirtual #346                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      69: checkcast     #191                // class org/bouncycastle/crypto/params/KeyParameter
      72: astore        5
      74: goto          87
      77: new           #172                // class java/lang/IllegalArgumentException
      80: dup
      81: ldc           #13                 // String invalid parameters passed to GCM-SIV
      83: invokespecial #294                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload         4
      89: ifnull        100
      92: aload         4
      94: arraylength
      95: bipush        12
      97: if_icmpeq     110
     100: new           #172                // class java/lang/IllegalArgumentException
     103: dup
     104: ldc           #10                 // String Invalid nonce
     106: invokespecial #294                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: aload         5
     112: ifnull        137
     115: aload         5
     117: invokevirtual #343                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
     120: arraylength
     121: bipush        16
     123: if_icmpeq     147
     126: aload         5
     128: invokevirtual #343                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
     131: arraylength
     132: bipush        32
     134: if_icmpeq     147
     137: new           #172                // class java/lang/IllegalArgumentException
     140: dup
     141: ldc           #9                  // String Invalid key
     143: invokespecial #294                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     146: athrow
     147: aload_0
     148: iload_1
     149: putfield      #282                // Field forEncryption:Z
     152: aload_0
     153: aload_3
     154: putfield      #285                // Field theInitialAEAD:[B
     157: aload_0
     158: aload         4
     160: putfield      #286                // Field theNonce:[B
     163: aload_0
     164: aload         5
     166: invokespecial #325                // Method deriveKeys:(Lorg/bouncycastle/crypto/params/KeyParameter;)V
     169: aload_0
     170: invokespecial #309                // Method resetStreams:()V
     173: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #176                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #298                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: invokeinterface #354,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      16: invokevirtual #300                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #2                  // String -GCM-SIV
      21: invokevirtual #300                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #299                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  private void checkAEADStatus(int);
    Code:
       0: aload_0
       1: getfield      #281                // Field theFlags:I
       4: iconst_1
       5: iand
       6: ifne          19
       9: new           #173                // class java/lang/IllegalStateException
      12: dup
      13: ldc           #5                  // String Cipher is not initialised
      15: invokespecial #295                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #281                // Field theFlags:I
      23: iconst_2
      24: iand
      25: ifeq          38
      28: new           #173                // class java/lang/IllegalStateException
      31: dup
      32: ldc           #4                  // String AEAD data cannot be processed after ordinary data
      34: invokespecial #295                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: getfield      #291                // Field theAEADHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
      42: invokevirtual #333                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.getBytesProcessed:()J
      45: ldc2_w        #164                // long -9223372036854775808l
      48: ladd
      49: ldc           #1                  // int 2147483623
      51: iload_1
      52: isub
      53: i2l
      54: ldc2_w        #164                // long -9223372036854775808l
      57: ladd
      58: lcmp
      59: ifle          72
      62: new           #173                // class java/lang/IllegalStateException
      65: dup
      66: ldc           #3                  // String AEAD byte count exceeded
      68: invokespecial #295                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  private void checkStatus(int);
    Code:
       0: aload_0
       1: getfield      #281                // Field theFlags:I
       4: iconst_1
       5: iand
       6: ifne          19
       9: new           #173                // class java/lang/IllegalStateException
      12: dup
      13: ldc           #5                  // String Cipher is not initialised
      15: invokespecial #295                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #281                // Field theFlags:I
      23: iconst_2
      24: iand
      25: ifne          45
      28: aload_0
      29: getfield      #291                // Field theAEADHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
      32: invokevirtual #334                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.completeHash:()V
      35: aload_0
      36: dup
      37: getfield      #281                // Field theFlags:I
      40: iconst_2
      41: ior
      42: putfield      #281                // Field theFlags:I
      45: ldc2_w        #170                // long 2147483623l
      48: lstore_2
      49: aload_0
      50: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      53: invokevirtual #327                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.size:()I
      56: i2l
      57: lstore        4
      59: aload_0
      60: getfield      #282                // Field forEncryption:Z
      63: ifne          82
      66: lload_2
      67: ldc2_w        #168                // long 16l
      70: ladd
      71: lstore_2
      72: aload_0
      73: getfield      #289                // Field theEncData:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      76: invokevirtual #327                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.size:()I
      79: i2l
      80: lstore        4
      82: lload         4
      84: ldc2_w        #164                // long -9223372036854775808l
      87: ladd
      88: lload_2
      89: iload_1
      90: i2l
      91: lsub
      92: ldc2_w        #164                // long -9223372036854775808l
      95: ladd
      96: lcmp
      97: ifle          110
     100: new           #173                // class java/lang/IllegalStateException
     103: dup
     104: ldc           #12                 // String byte count exceeded
     106: invokespecial #295                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: return

  public void processAADByte(byte);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #313                // Method checkAEADStatus:(I)V
       5: aload_0
       6: getfield      #291                // Field theAEADHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
       9: iload_1
      10: invokevirtual #336                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.updateHash:(B)V
      13: return

  public void processAADBytes(byte[], int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #313                // Method checkAEADStatus:(I)V
       5: aload_1
       6: iload_2
       7: iload_3
       8: iconst_0
       9: invokestatic  #319                // Method checkBuffer:([BIIZ)V
      12: aload_0
      13: getfield      #291                // Field theAEADHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
      16: aload_1
      17: iload_2
      18: iload_3
      19: invokevirtual #337                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.updateHash:([BII)V
      22: return

  public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #314                // Method checkStatus:(I)V
       5: aload_0
       6: getfield      #282                // Field forEncryption:Z
       9: ifeq          31
      12: aload_0
      13: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      16: iload_1
      17: invokevirtual #331                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.write:(I)V
      20: aload_0
      21: getfield      #292                // Field theDataHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
      24: iload_1
      25: invokevirtual #336                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.updateHash:(B)V
      28: goto          39
      31: aload_0
      32: getfield      #289                // Field theEncData:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      35: iload_1
      36: invokevirtual #331                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.write:(I)V
      39: iconst_0
      40: ireturn

  public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #314                // Method checkStatus:(I)V
       5: aload_1
       6: iload_2
       7: iload_3
       8: iconst_0
       9: invokestatic  #319                // Method checkBuffer:([BIIZ)V
      12: aload_0
      13: getfield      #282                // Field forEncryption:Z
      16: ifeq          42
      19: aload_0
      20: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      23: aload_1
      24: iload_2
      25: iload_3
      26: invokevirtual #332                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.write:([BII)V
      29: aload_0
      30: getfield      #292                // Field theDataHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
      33: aload_1
      34: iload_2
      35: iload_3
      36: invokevirtual #337                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.updateHash:([BII)V
      39: goto          52
      42: aload_0
      43: getfield      #289                // Field theEncData:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      46: aload_1
      47: iload_2
      48: iload_3
      49: invokevirtual #332                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.write:([BII)V
      52: iconst_0
      53: ireturn

  public int doFinal(byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #314                // Method checkStatus:(I)V
       5: aload_1
       6: iload_2
       7: aload_0
       8: iconst_0
       9: invokevirtual #312                // Method getOutputSize:(I)I
      12: iconst_1
      13: invokestatic  #319                // Method checkBuffer:([BIIZ)V
      16: aload_0
      17: getfield      #282                // Field forEncryption:Z
      20: ifeq          79
      23: aload_0
      24: invokespecial #310                // Method calculateTag:()[B
      27: astore_3
      28: bipush        16
      30: aload_0
      31: aload_3
      32: aload_1
      33: iload_2
      34: invokespecial #322                // Method encryptPlain:([B[BI)I
      37: iadd
      38: istore        4
      40: aload_3
      41: iconst_0
      42: aload_1
      43: iload_2
      44: aload_0
      45: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      48: invokevirtual #327                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.size:()I
      51: iadd
      52: bipush        16
      54: invokestatic  #301                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      57: aload_3
      58: iconst_0
      59: aload_0
      60: getfield      #283                // Field macBlock:[B
      63: iconst_0
      64: aload_0
      65: getfield      #283                // Field macBlock:[B
      68: arraylength
      69: invokestatic  #301                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      72: aload_0
      73: invokespecial #309                // Method resetStreams:()V
      76: iload         4
      78: ireturn
      79: aload_0
      80: invokespecial #306                // Method decryptPlain:()V
      83: aload_0
      84: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      87: invokevirtual #327                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.size:()I
      90: istore_3
      91: aload_0
      92: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      95: invokevirtual #330                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.getBuffer:()[B
      98: astore        4
     100: aload         4
     102: iconst_0
     103: aload_1
     104: iload_2
     105: iload_3
     106: invokestatic  #301                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     109: aload_0
     110: invokespecial #309                // Method resetStreams:()V
     113: iload_3
     114: ireturn

  public byte[] getMac();
    Code:
       0: aload_0
       1: getfield      #283                // Field macBlock:[B
       4: invokestatic  #347                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public int getUpdateOutputSize(int);
    Code:
       0: iconst_0
       1: ireturn

  public int getOutputSize(int);
    Code:
       0: aload_0
       1: getfield      #282                // Field forEncryption:Z
       4: ifeq          20
       7: iload_1
       8: aload_0
       9: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      12: invokevirtual #327                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.size:()I
      15: iadd
      16: bipush        16
      18: iadd
      19: ireturn
      20: iload_1
      21: aload_0
      22: getfield      #289                // Field theEncData:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      25: invokevirtual #327                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.size:()I
      28: iadd
      29: istore_2
      30: iload_2
      31: bipush        16
      33: if_icmple     43
      36: iload_2
      37: bipush        16
      39: isub
      40: goto          44
      43: iconst_0
      44: ireturn

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #309                // Method resetStreams:()V
       4: return

  private void resetStreams();
    Code:
       0: aload_0
       1: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
       4: ifnull        14
       7: aload_0
       8: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      11: invokevirtual #329                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.clearBuffer:()V
      14: aload_0
      15: getfield      #291                // Field theAEADHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
      18: invokevirtual #335                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.reset:()V
      21: aload_0
      22: getfield      #292                // Field theDataHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
      25: invokevirtual #335                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.reset:()V
      28: aload_0
      29: new           #186                // class org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache
      32: dup
      33: invokespecial #328                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache."<init>":()V
      36: putfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      39: aload_0
      40: aload_0
      41: getfield      #282                // Field forEncryption:Z
      44: ifeq          51
      47: aconst_null
      48: goto          58
      51: new           #186                // class org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache
      54: dup
      55: invokespecial #328                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache."<init>":()V
      58: putfield      #289                // Field theEncData:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      61: aload_0
      62: dup
      63: getfield      #281                // Field theFlags:I
      66: bipush        -3
      68: iand
      69: putfield      #281                // Field theFlags:I
      72: aload_0
      73: getfield      #284                // Field theGHash:[B
      76: iconst_0
      77: invokestatic  #348                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      80: aload_0
      81: getfield      #285                // Field theInitialAEAD:[B
      84: ifnull        104
      87: aload_0
      88: getfield      #291                // Field theAEADHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
      91: aload_0
      92: getfield      #285                // Field theInitialAEAD:[B
      95: iconst_0
      96: aload_0
      97: getfield      #285                // Field theInitialAEAD:[B
     100: arraylength
     101: invokevirtual #337                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.updateHash:([BII)V
     104: return

  private static int bufLength(byte[]);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: iconst_0
       5: goto          10
       8: aload_0
       9: arraylength
      10: ireturn

  private static void checkBuffer(byte[], int, int, boolean);
    Code:
       0: aload_0
       1: invokestatic  #315                // Method bufLength:([B)I
       4: istore        4
       6: iload_1
       7: iload_2
       8: iadd
       9: istore        5
      11: iload_2
      12: iflt          24
      15: iload_1
      16: iflt          24
      19: iload         5
      21: ifge          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: istore        6
      31: iload         6
      33: ifne          43
      36: iload         5
      38: iload         4
      40: if_icmple     69
      43: iload_3
      44: ifeq          59
      47: new           #181                // class org/bouncycastle/crypto/OutputLengthException
      50: dup
      51: ldc           #11                 // String Output buffer too short.
      53: invokespecial #304                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      56: goto          68
      59: new           #179                // class org/bouncycastle/crypto/DataLengthException
      62: dup
      63: ldc           #8                  // String Input buffer too short.
      65: invokespecial #302                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: return

  private int encryptPlain(byte[], byte[], int);
    Code:
       0: aload_0
       1: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
       4: invokevirtual #330                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.getBuffer:()[B
       7: astore        4
       9: aload_1
      10: invokestatic  #347                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      13: astore        5
      15: aload         5
      17: bipush        15
      19: dup2
      20: baload
      21: bipush        -128
      23: ior
      24: i2b
      25: bastore
      26: bipush        16
      28: newarray       byte
      30: astore        6
      32: aload_0
      33: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      36: invokevirtual #327                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.size:()I
      39: istore        7
      41: iconst_0
      42: istore        8
      44: iload         7
      46: ifle          120
      49: aload_0
      50: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
      53: aload         5
      55: iconst_0
      56: aload         6
      58: iconst_0
      59: invokeinterface #353,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      64: pop
      65: bipush        16
      67: iload         7
      69: invokestatic  #296                // Method java/lang/Math.min:(II)I
      72: istore        9
      74: aload         6
      76: aload         4
      78: iload         8
      80: iload         9
      82: invokestatic  #323                // Method xorBlock:([B[BII)V
      85: aload         6
      87: iconst_0
      88: aload_2
      89: iload_3
      90: iload         8
      92: iadd
      93: iload         9
      95: invokestatic  #301                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      98: iload         7
     100: iload         9
     102: isub
     103: istore        7
     105: iload         8
     107: iload         9
     109: iadd
     110: istore        8
     112: aload         5
     114: invokestatic  #317                // Method incrementCounter:([B)V
     117: goto          44
     120: aload_0
     121: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
     124: invokevirtual #327                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.size:()I
     127: ireturn

  private void decryptPlain() throws org.bouncycastle.crypto.InvalidCipherTextException;
    Code:
       0: aload_0
       1: getfield      #289                // Field theEncData:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
       4: invokevirtual #330                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.getBuffer:()[B
       7: astore_1
       8: aload_0
       9: getfield      #289                // Field theEncData:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
      12: invokevirtual #327                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.size:()I
      15: bipush        16
      17: isub
      18: istore_2
      19: iload_2
      20: ifge          33
      23: new           #180                // class org/bouncycastle/crypto/InvalidCipherTextException
      26: dup
      27: ldc           #7                  // String Data too short
      29: invokespecial #303                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_1
      34: iload_2
      35: iload_2
      36: bipush        16
      38: iadd
      39: invokestatic  #349                // Method org/bouncycastle/util/Arrays.copyOfRange:([BII)[B
      42: astore_3
      43: aload_3
      44: invokestatic  #347                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      47: astore        4
      49: aload         4
      51: bipush        15
      53: dup2
      54: baload
      55: bipush        -128
      57: ior
      58: i2b
      59: bastore
      60: bipush        16
      62: newarray       byte
      64: astore        5
      66: iconst_0
      67: istore        6
      69: iload_2
      70: ifle          151
      73: aload_0
      74: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
      77: aload         4
      79: iconst_0
      80: aload         5
      82: iconst_0
      83: invokeinterface #353,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      88: pop
      89: bipush        16
      91: iload_2
      92: invokestatic  #296                // Method java/lang/Math.min:(II)I
      95: istore        7
      97: aload         5
      99: aload_1
     100: iload         6
     102: iload         7
     104: invokestatic  #323                // Method xorBlock:([B[BII)V
     107: aload_0
     108: getfield      #290                // Field thePlain:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache;
     111: aload         5
     113: iconst_0
     114: iload         7
     116: invokevirtual #332                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVCache.write:([BII)V
     119: aload_0
     120: getfield      #292                // Field theDataHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
     123: aload         5
     125: iconst_0
     126: iload         7
     128: invokevirtual #337                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.updateHash:([BII)V
     131: iload_2
     132: iload         7
     134: isub
     135: istore_2
     136: iload         6
     138: iload         7
     140: iadd
     141: istore        6
     143: aload         4
     145: invokestatic  #317                // Method incrementCounter:([B)V
     148: goto          69
     151: aload_0
     152: invokespecial #310                // Method calculateTag:()[B
     155: astore        7
     157: aload         7
     159: aload_3
     160: invokestatic  #350                // Method org/bouncycastle/util/Arrays.constantTimeAreEqual:([B[B)Z
     163: ifne          180
     166: aload_0
     167: invokevirtual #308                // Method reset:()V
     170: new           #180                // class org/bouncycastle/crypto/InvalidCipherTextException
     173: dup
     174: ldc           #14                 // String mac check failed
     176: invokespecial #303                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
     179: athrow
     180: aload         7
     182: iconst_0
     183: aload_0
     184: getfield      #283                // Field macBlock:[B
     187: iconst_0
     188: aload_0
     189: getfield      #283                // Field macBlock:[B
     192: arraylength
     193: invokestatic  #301                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     196: return

  private byte[] calculateTag();
    Code:
       0: aload_0
       1: getfield      #292                // Field theDataHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
       4: invokevirtual #334                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.completeHash:()V
       7: aload_0
       8: invokespecial #311                // Method completePolyVal:()[B
      11: astore_1
      12: bipush        16
      14: newarray       byte
      16: astore_2
      17: iconst_0
      18: istore_3
      19: iload_3
      20: bipush        12
      22: if_icmpge     44
      25: aload_1
      26: iload_3
      27: dup2
      28: baload
      29: aload_0
      30: getfield      #286                // Field theNonce:[B
      33: iload_3
      34: baload
      35: ixor
      36: i2b
      37: bastore
      38: iinc          3, 1
      41: goto          19
      44: aload_1
      45: bipush        15
      47: dup2
      48: baload
      49: sipush        -129
      52: iand
      53: i2b
      54: bastore
      55: aload_0
      56: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
      59: aload_1
      60: iconst_0
      61: aload_2
      62: iconst_0
      63: invokeinterface #353,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      68: pop
      69: aload_2
      70: areturn

  private byte[] completePolyVal();
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_1
       5: aload_0
       6: invokespecial #307                // Method gHashLengths:()V
       9: aload_0
      10: getfield      #284                // Field theGHash:[B
      13: iconst_0
      14: bipush        16
      16: aload_1
      17: invokestatic  #320                // Method fillReverse:([BII[B)V
      20: aload_1
      21: areturn

  private void gHashLengths();
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_1
       5: ldc2_w        #166                // long 8l
       8: aload_0
       9: getfield      #292                // Field theDataHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
      12: invokevirtual #333                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.getBytesProcessed:()J
      15: lmul
      16: aload_1
      17: iconst_0
      18: invokestatic  #351                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
      21: ldc2_w        #166                // long 8l
      24: aload_0
      25: getfield      #291                // Field theAEADHasher:Lorg/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher;
      28: invokevirtual #333                // Method org/bouncycastle/crypto/modes/GCMSIVBlockCipher$GCMSIVHasher.getBytesProcessed:()J
      31: lmul
      32: aload_1
      33: bipush        8
      35: invokestatic  #351                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
      38: aload_0
      39: aload_1
      40: invokespecial #316                // Method gHASH:([B)V
      43: return

  private void gHASH(byte[]);
    Code:
       0: aload_0
       1: getfield      #284                // Field theGHash:[B
       4: aload_1
       5: invokestatic  #321                // Method xorBlock:([B[B)V
       8: aload_0
       9: getfield      #293                // Field theMultiplier:Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;
      12: aload_0
      13: getfield      #284                // Field theGHash:[B
      16: invokeinterface #357,  2          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMMultiplier.multiplyH:([B)V
      21: return

  private static void fillReverse(byte[], int, int, byte[]);
    Code:
       0: iconst_0
       1: istore        4
       3: bipush        15
       5: istore        5
       7: iload         4
       9: iload_2
      10: if_icmpge     32
      13: aload_3
      14: iload         5
      16: aload_0
      17: iload_1
      18: iload         4
      20: iadd
      21: baload
      22: bastore
      23: iinc          4, 1
      26: iinc          5, -1
      29: goto          7
      32: return

  private static void xorBlock(byte[], byte[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: bipush        16
       5: if_icmpge     24
       8: aload_0
       9: iload_2
      10: dup2
      11: baload
      12: aload_1
      13: iload_2
      14: baload
      15: ixor
      16: i2b
      17: bastore
      18: iinc          2, 1
      21: goto          2
      24: return

  private static void xorBlock(byte[], byte[], int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     29
       9: aload_0
      10: iload         4
      12: dup2
      13: baload
      14: aload_1
      15: iload         4
      17: iload_2
      18: iadd
      19: baload
      20: ixor
      21: i2b
      22: bastore
      23: iinc          4, 1
      26: goto          3
      29: return

  private static void incrementCounter(byte[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: iconst_4
       4: if_icmpge     28
       7: aload_0
       8: iload_1
       9: dup2
      10: baload
      11: iconst_1
      12: iadd
      13: i2b
      14: dup_x2
      15: bastore
      16: ifeq          22
      19: goto          28
      22: iinc          1, 1
      25: goto          2
      28: return

  private static void mulX(byte[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: bipush        16
       7: if_icmpge     45
      10: aload_0
      11: iload_2
      12: baload
      13: istore_3
      14: aload_0
      15: iload_2
      16: iload_3
      17: iconst_1
      18: ishr
      19: bipush        127
      21: iand
      22: iload_1
      23: ior
      24: i2b
      25: bastore
      26: iload_3
      27: iconst_1
      28: iand
      29: ifne          36
      32: iconst_0
      33: goto          38
      36: bipush        -128
      38: istore_1
      39: iinc          2, 1
      42: goto          4
      45: iload_1
      46: ifeq          58
      49: aload_0
      50: iconst_0
      51: dup2
      52: baload
      53: bipush        -31
      55: ixor
      56: i2b
      57: bastore
      58: return

  private void deriveKeys(org.bouncycastle.crypto.params.KeyParameter);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_2
       5: bipush        16
       7: newarray       byte
       9: astore_3
      10: bipush        16
      12: newarray       byte
      14: astore        4
      16: aload_1
      17: invokevirtual #343                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      20: arraylength
      21: newarray       byte
      23: astore        5
      25: aload_0
      26: getfield      #286                // Field theNonce:[B
      29: iconst_0
      30: aload_2
      31: iconst_4
      32: bipush        12
      34: invokestatic  #301                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      37: aload_0
      38: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
      41: iconst_1
      42: aload_1
      43: invokeinterface #355,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      48: iconst_0
      49: istore        6
      51: aload_0
      52: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
      55: aload_2
      56: iconst_0
      57: aload_3
      58: iconst_0
      59: invokeinterface #353,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      64: pop
      65: aload_3
      66: iconst_0
      67: aload         4
      69: iload         6
      71: bipush        8
      73: invokestatic  #301                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      76: aload_2
      77: iconst_0
      78: dup2
      79: baload
      80: iconst_1
      81: iadd
      82: i2b
      83: bastore
      84: iinc          6, 8
      87: aload_0
      88: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
      91: aload_2
      92: iconst_0
      93: aload_3
      94: iconst_0
      95: invokeinterface #353,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     100: pop
     101: aload_3
     102: iconst_0
     103: aload         4
     105: iload         6
     107: bipush        8
     109: invokestatic  #301                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     112: aload_2
     113: iconst_0
     114: dup2
     115: baload
     116: iconst_1
     117: iadd
     118: i2b
     119: bastore
     120: iconst_0
     121: istore        6
     123: aload_0
     124: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
     127: aload_2
     128: iconst_0
     129: aload_3
     130: iconst_0
     131: invokeinterface #353,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     136: pop
     137: aload_3
     138: iconst_0
     139: aload         5
     141: iload         6
     143: bipush        8
     145: invokestatic  #301                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     148: aload_2
     149: iconst_0
     150: dup2
     151: baload
     152: iconst_1
     153: iadd
     154: i2b
     155: bastore
     156: iinc          6, 8
     159: aload_0
     160: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
     163: aload_2
     164: iconst_0
     165: aload_3
     166: iconst_0
     167: invokeinterface #353,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     172: pop
     173: aload_3
     174: iconst_0
     175: aload         5
     177: iload         6
     179: bipush        8
     181: invokestatic  #301                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     184: aload         5
     186: arraylength
     187: bipush        32
     189: if_icmpne     264
     192: aload_2
     193: iconst_0
     194: dup2
     195: baload
     196: iconst_1
     197: iadd
     198: i2b
     199: bastore
     200: iinc          6, 8
     203: aload_0
     204: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
     207: aload_2
     208: iconst_0
     209: aload_3
     210: iconst_0
     211: invokeinterface #353,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     216: pop
     217: aload_3
     218: iconst_0
     219: aload         5
     221: iload         6
     223: bipush        8
     225: invokestatic  #301                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     228: aload_2
     229: iconst_0
     230: dup2
     231: baload
     232: iconst_1
     233: iadd
     234: i2b
     235: bastore
     236: iinc          6, 8
     239: aload_0
     240: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
     243: aload_2
     244: iconst_0
     245: aload_3
     246: iconst_0
     247: invokeinterface #353,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     252: pop
     253: aload_3
     254: iconst_0
     255: aload         5
     257: iload         6
     259: bipush        8
     261: invokestatic  #301                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     264: aload_0
     265: getfield      #288                // Field theCipher:Lorg/bouncycastle/crypto/BlockCipher;
     268: iconst_1
     269: new           #191                // class org/bouncycastle/crypto/params/KeyParameter
     272: dup
     273: aload         5
     275: invokespecial #344                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
     278: invokeinterface #355,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     283: aload         4
     285: iconst_0
     286: bipush        16
     288: aload_3
     289: invokestatic  #320                // Method fillReverse:([BII[B)V
     292: aload_3
     293: invokestatic  #318                // Method mulX:([B)V
     296: aload_0
     297: getfield      #293                // Field theMultiplier:Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;
     300: aload_3
     301: invokeinterface #356,  2          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMMultiplier.init:([B)V
     306: aload_0
     307: dup
     308: getfield      #281                // Field theFlags:I
     311: iconst_1
     312: ior
     313: putfield      #281                // Field theFlags:I
     316: return

  static byte[] access$100(org.bouncycastle.crypto.modes.GCMSIVBlockCipher);
    Code:
       0: aload_0
       1: getfield      #287                // Field theReverse:[B
       4: areturn

  static void access$200(byte[], int, int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: invokestatic  #320                // Method fillReverse:([BII[B)V
       7: return

  static void access$300(org.bouncycastle.crypto.modes.GCMSIVBlockCipher, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #316                // Method gHASH:([B)V
       5: return
}
