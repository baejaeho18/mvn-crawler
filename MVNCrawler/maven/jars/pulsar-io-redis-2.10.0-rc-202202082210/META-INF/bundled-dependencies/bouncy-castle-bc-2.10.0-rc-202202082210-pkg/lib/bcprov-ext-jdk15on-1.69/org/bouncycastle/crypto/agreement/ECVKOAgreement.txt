public class org.bouncycastle.crypto.agreement.ECVKOAgreement {
  private final org.bouncycastle.crypto.Digest digest;

  private org.bouncycastle.crypto.params.ECPrivateKeyParameters key;

  private java.math.BigInteger ukm;

  public org.bouncycastle.crypto.agreement.ECVKOAgreement(org.bouncycastle.crypto.Digest);
    Code:
       0: aload_0
       1: invokespecial #128                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #125                // Field digest:Lorg/bouncycastle/crypto/Digest;
       9: return

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: checkcast     #66                 // class org/bouncycastle/crypto/params/ParametersWithUKM
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #144                // Method org/bouncycastle/crypto/params/ParametersWithUKM.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      10: checkcast     #64                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      13: putfield      #126                // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
      16: aload_0
      17: aload_2
      18: invokevirtual #143                // Method org/bouncycastle/crypto/params/ParametersWithUKM.getUKM:()[B
      21: invokestatic  #133                // Method toInteger:([B)Ljava/math/BigInteger;
      24: putfield      #124                // Field ukm:Ljava/math/BigInteger;
      27: return

  public int getFieldSize();
    Code:
       0: aload_0
       1: getfield      #126                // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
       4: invokevirtual #140                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
       7: invokevirtual #138                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      10: invokevirtual #146                // Method org/bouncycastle/math/ec/ECCurve.getFieldSize:()I
      13: bipush        7
      15: iadd
      16: bipush        8
      18: idiv
      19: ireturn

  public byte[] calculateAgreement(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: checkcast     #65                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
       4: astore_2
       5: aload_0
       6: getfield      #126                // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
       9: invokevirtual #140                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      12: astore_3
      13: aload_3
      14: aload_2
      15: invokevirtual #141                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      18: invokevirtual #135                // Method org/bouncycastle/crypto/params/ECDomainParameters.equals:(Ljava/lang/Object;)Z
      21: ifne          34
      24: new           #58                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #1                  // String ECVKO public key has wrong domain parameters
      30: invokespecial #127                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_3
      35: invokevirtual #136                // Method org/bouncycastle/crypto/params/ECDomainParameters.getH:()Ljava/math/BigInteger;
      38: aload_0
      39: getfield      #124                // Field ukm:Ljava/math/BigInteger;
      42: invokevirtual #132                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      45: aload_0
      46: getfield      #126                // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
      49: invokevirtual #139                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
      52: invokevirtual #132                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      55: aload_3
      56: invokevirtual #137                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      59: invokevirtual #131                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      62: astore        4
      64: aload_3
      65: invokevirtual #138                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      68: aload_2
      69: invokevirtual #142                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
      72: invokestatic  #145                // Method org/bouncycastle/math/ec/ECAlgorithms.cleanPoint:(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      75: astore        5
      77: aload         5
      79: invokevirtual #148                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
      82: ifeq          95
      85: new           #58                 // class java/lang/IllegalStateException
      88: dup
      89: ldc           #3                  // String Infinity is not a valid public key for ECDHC
      91: invokespecial #127                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload         5
      97: aload         4
      99: invokevirtual #152                // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     102: invokevirtual #151                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
     105: astore        6
     107: aload         6
     109: invokevirtual #148                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
     112: ifeq          125
     115: new           #58                 // class java/lang/IllegalStateException
     118: dup
     119: ldc           #2                  // String Infinity is not a valid agreement value for ECVKO
     121: invokespecial #127                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     124: athrow
     125: aload_0
     126: aload         6
     128: invokespecial #134                // Method fromPoint:(Lorg/bouncycastle/math/ec/ECPoint;)[B
     131: areturn

  private static java.math.BigInteger toInteger(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: newarray       byte
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_1
       9: arraylength
      10: if_icmpeq     30
      13: aload_1
      14: iload_2
      15: aload_0
      16: aload_0
      17: arraylength
      18: iload_2
      19: isub
      20: iconst_1
      21: isub
      22: baload
      23: bastore
      24: iinc          2, 1
      27: goto          7
      30: new           #60                 // class java/math/BigInteger
      33: dup
      34: iconst_1
      35: aload_1
      36: invokespecial #130                // Method java/math/BigInteger."<init>":(I[B)V
      39: areturn

  private byte[] fromPoint(org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aload_1
       1: invokevirtual #149                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
       4: invokevirtual #147                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
       7: astore_2
       8: aload_1
       9: invokevirtual #150                // Method org/bouncycastle/math/ec/ECPoint.getAffineYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      12: invokevirtual #147                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      15: astore_3
      16: aload_2
      17: invokevirtual #129                // Method java/math/BigInteger.toByteArray:()[B
      20: arraylength
      21: bipush        33
      23: if_icmple     33
      26: bipush        64
      28: istore        4
      30: goto          37
      33: bipush        32
      35: istore        4
      37: iconst_2
      38: iload         4
      40: imul
      41: newarray       byte
      43: astore        5
      45: iload         4
      47: aload_2
      48: invokestatic  #153                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(ILjava/math/BigInteger;)[B
      51: astore        6
      53: iload         4
      55: aload_3
      56: invokestatic  #153                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(ILjava/math/BigInteger;)[B
      59: astore        7
      61: iconst_0
      62: istore        8
      64: iload         8
      66: iload         4
      68: if_icmpeq     92
      71: aload         5
      73: iload         8
      75: aload         6
      77: iload         4
      79: iload         8
      81: isub
      82: iconst_1
      83: isub
      84: baload
      85: bastore
      86: iinc          8, 1
      89: goto          64
      92: iconst_0
      93: istore        8
      95: iload         8
      97: iload         4
      99: if_icmpeq     126
     102: aload         5
     104: iload         4
     106: iload         8
     108: iadd
     109: aload         7
     111: iload         4
     113: iload         8
     115: isub
     116: iconst_1
     117: isub
     118: baload
     119: bastore
     120: iinc          8, 1
     123: goto          95
     126: aload_0
     127: getfield      #125                // Field digest:Lorg/bouncycastle/crypto/Digest;
     130: aload         5
     132: iconst_0
     133: aload         5
     135: arraylength
     136: invokeinterface #156,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
     141: aload_0
     142: getfield      #125                // Field digest:Lorg/bouncycastle/crypto/Digest;
     145: invokeinterface #154,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
     150: newarray       byte
     152: astore        8
     154: aload_0
     155: getfield      #125                // Field digest:Lorg/bouncycastle/crypto/Digest;
     158: aload         8
     160: iconst_0
     161: invokeinterface #155,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
     166: pop
     167: aload         8
     169: areturn
}
