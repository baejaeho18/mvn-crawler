Compiled from "ASN1ApplicationSpecific.java"
public abstract class org.bouncycastle.asn1.ASN1ApplicationSpecific extends org.bouncycastle.asn1.ASN1Primitive {
  protected final boolean isConstructed;

  protected final int tag;

  protected final byte[] octets;

  org.bouncycastle.asn1.ASN1ApplicationSpecific(boolean, int, byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/bouncycastle/asn1/ASN1Primitive."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field isConstructed:Z
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field tag:I
      14: aload_0
      15: aload_3
      16: invokestatic  #4                  // Method org/bouncycastle/util/Arrays.clone:([B)[B
      19: putfield      #5                  // Field octets:[B
      22: return

  public static org.bouncycastle.asn1.ASN1ApplicationSpecific getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: instanceof    #6                  // class org/bouncycastle/asn1/ASN1ApplicationSpecific
       8: ifeq          16
      11: aload_0
      12: checkcast     #6                  // class org/bouncycastle/asn1/ASN1ApplicationSpecific
      15: areturn
      16: aload_0
      17: instanceof    #7                  // class "[B"
      20: ifeq          52
      23: aload_0
      24: checkcast     #7                  // class "[B"
      27: invokestatic  #8                  // Method org/bouncycastle/asn1/ASN1Primitive.fromByteArray:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
      30: invokestatic  #9                  // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1ApplicationSpecific;
      33: areturn
      34: astore_1
      35: new           #11                 // class java/lang/IllegalArgumentException
      38: dup
      39: aload_1
      40: invokevirtual #12                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      43: invokedynamic #13,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      48: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: new           #11                 // class java/lang/IllegalArgumentException
      55: dup
      56: aload_0
      57: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      60: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
      63: invokedynamic #17,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      68: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
    Exception table:
       from    to  target type
          23    33    34   Class java/io/IOException

  protected static int getLengthOfHeader(byte[]);
    Code:
       0: aload_0
       1: iconst_1
       2: baload
       3: sipush        255
       6: iand
       7: istore_1
       8: iload_1
       9: sipush        128
      12: if_icmpne     17
      15: iconst_2
      16: ireturn
      17: iload_1
      18: bipush        127
      20: if_icmple     51
      23: iload_1
      24: bipush        127
      26: iand
      27: istore_2
      28: iload_2
      29: iconst_4
      30: if_icmple     47
      33: new           #18                 // class java/lang/IllegalStateException
      36: dup
      37: iload_2
      38: invokedynamic #19,  0             // InvokeDynamic #2:makeConcatWithConstants:(I)Ljava/lang/String;
      43: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: iload_2
      48: iconst_2
      49: iadd
      50: ireturn
      51: iconst_2
      52: ireturn

  public boolean isConstructed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isConstructed:Z
       4: ireturn

  public byte[] getContents();
    Code:
       0: aload_0
       1: getfield      #5                  // Field octets:[B
       4: invokestatic  #4                  // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public int getApplicationTag();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tag:I
       4: ireturn

  public org.bouncycastle.asn1.ASN1Primitive getObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getContents:()[B
       4: invokestatic  #8                  // Method org/bouncycastle/asn1/ASN1Primitive.fromByteArray:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
       7: areturn

  public org.bouncycastle.asn1.ASN1Primitive getObject(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: bipush        31
       3: if_icmplt     16
       6: new           #10                 // class java/io/IOException
       9: dup
      10: ldc           #22                 // String unsupported tag number
      12: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: invokevirtual #24                 // Method getEncoded:()[B
      20: astore_2
      21: aload_0
      22: iload_1
      23: aload_2
      24: invokespecial #25                 // Method replaceTagNumber:(I[B)[B
      27: astore_3
      28: aload_2
      29: iconst_0
      30: baload
      31: bipush        32
      33: iand
      34: ifeq          46
      37: aload_3
      38: iconst_0
      39: dup2
      40: baload
      41: bipush        32
      43: ior
      44: i2b
      45: bastore
      46: aload_3
      47: invokestatic  #8                  // Method org/bouncycastle/asn1/ASN1Primitive.fromByteArray:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
      50: areturn

  int encodedLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field tag:I
       4: invokestatic  #27                 // Method org/bouncycastle/asn1/StreamUtil.calculateTagLength:(I)I
       7: aload_0
       8: getfield      #5                  // Field octets:[B
      11: arraylength
      12: invokestatic  #28                 // Method org/bouncycastle/asn1/StreamUtil.calculateBodyLength:(I)I
      15: iadd
      16: aload_0
      17: getfield      #5                  // Field octets:[B
      20: arraylength
      21: iadd
      22: ireturn

  void encode(org.bouncycastle.asn1.ASN1OutputStream, boolean) throws java.io.IOException;
    Code:
       0: bipush        64
       2: istore_3
       3: aload_0
       4: getfield      #2                  // Field isConstructed:Z
       7: ifeq          15
      10: iload_3
      11: bipush        32
      13: ior
      14: istore_3
      15: aload_1
      16: iload_2
      17: iload_3
      18: aload_0
      19: getfield      #3                  // Field tag:I
      22: aload_0
      23: getfield      #5                  // Field octets:[B
      26: invokevirtual #29                 // Method org/bouncycastle/asn1/ASN1OutputStream.writeEncoded:(ZII[B)V
      29: return

  boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive);
    Code:
       0: aload_1
       1: instanceof    #6                  // class org/bouncycastle/asn1/ASN1ApplicationSpecific
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #6                  // class org/bouncycastle/asn1/ASN1ApplicationSpecific
      13: astore_2
      14: aload_0
      15: getfield      #2                  // Field isConstructed:Z
      18: aload_2
      19: getfield      #2                  // Field isConstructed:Z
      22: if_icmpne     54
      25: aload_0
      26: getfield      #3                  // Field tag:I
      29: aload_2
      30: getfield      #3                  // Field tag:I
      33: if_icmpne     54
      36: aload_0
      37: getfield      #5                  // Field octets:[B
      40: aload_2
      41: getfield      #5                  // Field octets:[B
      44: invokestatic  #30                 // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isConstructed:Z
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: aload_0
      13: getfield      #3                  // Field tag:I
      16: ixor
      17: aload_0
      18: getfield      #5                  // Field octets:[B
      21: invokestatic  #31                 // Method org/bouncycastle/util/Arrays.hashCode:([B)I
      24: ixor
      25: ireturn

  private byte[] replaceTagNumber(int, byte[]) throws java.io.IOException;
    Code:
       0: aload_2
       1: iconst_0
       2: baload
       3: bipush        31
       5: iand
       6: istore_3
       7: iconst_1
       8: istore        4
      10: iload_3
      11: bipush        31
      13: if_icmpne     72
      16: aload_2
      17: iload         4
      19: iinc          4, 1
      22: baload
      23: sipush        255
      26: iand
      27: istore        5
      29: iload         5
      31: bipush        127
      33: iand
      34: ifne          47
      37: new           #10                 // class java/io/IOException
      40: dup
      41: ldc           #32                 // String corrupted stream - invalid high tag number found
      43: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: iload         5
      49: sipush        128
      52: iand
      53: ifeq          72
      56: aload_2
      57: iload         4
      59: iinc          4, 1
      62: baload
      63: sipush        255
      66: iand
      67: istore        5
      69: goto          47
      72: aload_2
      73: arraylength
      74: iload         4
      76: isub
      77: iconst_1
      78: iadd
      79: newarray       byte
      81: astore        5
      83: aload_2
      84: iload         4
      86: aload         5
      88: iconst_1
      89: aload         5
      91: arraylength
      92: iconst_1
      93: isub
      94: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      97: aload         5
      99: iconst_0
     100: iload_1
     101: i2b
     102: bastore
     103: aload         5
     105: areturn

  public java.lang.String toString();
    Code:
       0: new           #34                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #36                 // String [
      11: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: pop
      15: aload_0
      16: invokevirtual #38                 // Method isConstructed:()Z
      19: ifeq          29
      22: aload_1
      23: ldc           #39                 // String CONSTRUCTED
      25: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      28: pop
      29: aload_1
      30: ldc           #40                 // String APPLICATION
      32: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: pop
      36: aload_1
      37: aload_0
      38: invokevirtual #41                 // Method getApplicationTag:()I
      41: invokestatic  #42                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      44: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      47: pop
      48: aload_1
      49: ldc           #43                 // String ]
      51: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      54: pop
      55: aload_0
      56: getfield      #5                  // Field octets:[B
      59: ifnull        84
      62: aload_1
      63: ldc           #44                 // String  #
      65: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      68: pop
      69: aload_1
      70: aload_0
      71: getfield      #5                  // Field octets:[B
      74: invokestatic  #45                 // Method org/bouncycastle/util/encoders/Hex.toHexString:([B)Ljava/lang/String;
      77: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      80: pop
      81: goto          91
      84: aload_1
      85: ldc           #46                 // String  #null
      87: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      90: pop
      91: aload_1
      92: ldc           #47                 // String
      94: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      97: pop
      98: aload_1
      99: invokevirtual #48                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     102: areturn
}
