public class org.bouncycastle.crypto.digests.ParallelHash implements org.bouncycastle.crypto.Xof,org.bouncycastle.crypto.Digest {
  private static final byte[] N_PARALLEL_HASH;

  private final org.bouncycastle.crypto.digests.CSHAKEDigest cshake;

  private final org.bouncycastle.crypto.digests.CSHAKEDigest compressor;

  private final int bitLength;

  private final int outputLength;

  private final int B;

  private final byte[] buffer;

  private final byte[] compressorBuffer;

  private boolean firstOutput;

  private int nCount;

  private int bufOff;

  public org.bouncycastle.crypto.digests.ParallelHash(int, byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: iload_1
       5: iconst_2
       6: imul
       7: invokespecial #149                // Method "<init>":(I[BII)V
      10: return

  public org.bouncycastle.crypto.digests.ParallelHash(int, byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #131                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #72                 // class org/bouncycastle/crypto/digests/CSHAKEDigest
       8: dup
       9: iload_1
      10: getstatic     #125                // Field N_PARALLEL_HASH:[B
      13: aload_2
      14: invokespecial #138                // Method org/bouncycastle/crypto/digests/CSHAKEDigest."<init>":(I[B[B)V
      17: putfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      20: aload_0
      21: new           #72                 // class org/bouncycastle/crypto/digests/CSHAKEDigest
      24: dup
      25: iload_1
      26: iconst_0
      27: newarray       byte
      29: iconst_0
      30: newarray       byte
      32: invokespecial #138                // Method org/bouncycastle/crypto/digests/CSHAKEDigest."<init>":(I[B[B)V
      35: putfield      #128                // Field compressor:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      38: aload_0
      39: iload_1
      40: putfield      #120                // Field bitLength:I
      43: aload_0
      44: iload_3
      45: putfield      #119                // Field B:I
      48: aload_0
      49: iload         4
      51: bipush        7
      53: iadd
      54: bipush        8
      56: idiv
      57: putfield      #123                // Field outputLength:I
      60: aload_0
      61: iload_3
      62: newarray       byte
      64: putfield      #126                // Field buffer:[B
      67: aload_0
      68: iload_1
      69: iconst_2
      70: imul
      71: bipush        8
      73: idiv
      74: newarray       byte
      76: putfield      #127                // Field compressorBuffer:[B
      79: aload_0
      80: invokevirtual #146                // Method reset:()V
      83: return

  public org.bouncycastle.crypto.digests.ParallelHash(org.bouncycastle.crypto.digests.ParallelHash);
    Code:
       0: aload_0
       1: invokespecial #131                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #72                 // class org/bouncycastle/crypto/digests/CSHAKEDigest
       8: dup
       9: aload_1
      10: getfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      13: invokespecial #143                // Method org/bouncycastle/crypto/digests/CSHAKEDigest."<init>":(Lorg/bouncycastle/crypto/digests/CSHAKEDigest;)V
      16: putfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      19: aload_0
      20: new           #72                 // class org/bouncycastle/crypto/digests/CSHAKEDigest
      23: dup
      24: aload_1
      25: getfield      #128                // Field compressor:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      28: invokespecial #143                // Method org/bouncycastle/crypto/digests/CSHAKEDigest."<init>":(Lorg/bouncycastle/crypto/digests/CSHAKEDigest;)V
      31: putfield      #128                // Field compressor:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      34: aload_0
      35: aload_1
      36: getfield      #120                // Field bitLength:I
      39: putfield      #120                // Field bitLength:I
      42: aload_0
      43: aload_1
      44: getfield      #119                // Field B:I
      47: putfield      #119                // Field B:I
      50: aload_0
      51: aload_1
      52: getfield      #123                // Field outputLength:I
      55: putfield      #123                // Field outputLength:I
      58: aload_0
      59: aload_1
      60: getfield      #126                // Field buffer:[B
      63: invokestatic  #154                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      66: putfield      #126                // Field buffer:[B
      69: aload_0
      70: aload_1
      71: getfield      #127                // Field compressorBuffer:[B
      74: invokestatic  #154                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      77: putfield      #127                // Field compressorBuffer:[B
      80: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #68                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #1                  // String ParallelHash
       9: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      16: invokevirtual #142                // Method org/bouncycastle/crypto/digests/CSHAKEDigest.getAlgorithmName:()Ljava/lang/String;
      19: bipush        6
      21: invokevirtual #132                // Method java/lang/String.substring:(I)Ljava/lang/String;
      24: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public int getByteLength();
    Code:
       0: aload_0
       1: getfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
       4: invokevirtual #136                // Method org/bouncycastle/crypto/digests/CSHAKEDigest.getByteLength:()I
       7: ireturn

  public int getDigestSize();
    Code:
       0: aload_0
       1: getfield      #123                // Field outputLength:I
       4: ireturn

  public void update(byte) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #126                // Field buffer:[B
       4: aload_0
       5: dup
       6: getfield      #121                // Field bufOff:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #121                // Field bufOff:I
      15: iload_1
      16: bastore
      17: aload_0
      18: getfield      #121                // Field bufOff:I
      21: aload_0
      22: getfield      #126                // Field buffer:[B
      25: arraylength
      26: if_icmpne     33
      29: aload_0
      30: invokespecial #145                // Method compress:()V
      33: return

  public void update(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: iconst_0
       1: iload_3
       2: invokestatic  #130                // Method java/lang/Math.max:(II)I
       5: istore_3
       6: iconst_0
       7: istore        4
       9: aload_0
      10: getfield      #121                // Field bufOff:I
      13: ifeq          78
      16: iload         4
      18: iload_3
      19: if_icmpge     62
      22: aload_0
      23: getfield      #121                // Field bufOff:I
      26: aload_0
      27: getfield      #126                // Field buffer:[B
      30: arraylength
      31: if_icmpeq     62
      34: aload_0
      35: getfield      #126                // Field buffer:[B
      38: aload_0
      39: dup
      40: getfield      #121                // Field bufOff:I
      43: dup_x1
      44: iconst_1
      45: iadd
      46: putfield      #121                // Field bufOff:I
      49: aload_1
      50: iload_2
      51: iload         4
      53: iinc          4, 1
      56: iadd
      57: baload
      58: bastore
      59: goto          16
      62: aload_0
      63: getfield      #121                // Field bufOff:I
      66: aload_0
      67: getfield      #126                // Field buffer:[B
      70: arraylength
      71: if_icmpne     78
      74: aload_0
      75: invokespecial #145                // Method compress:()V
      78: iload         4
      80: iload_3
      81: if_icmpge     120
      84: iload_3
      85: iload         4
      87: isub
      88: aload_0
      89: getfield      #119                // Field B:I
      92: if_icmple     120
      95: aload_0
      96: aload_1
      97: iload_2
      98: iload         4
     100: iadd
     101: aload_0
     102: getfield      #119                // Field B:I
     105: invokespecial #150                // Method compress:([BII)V
     108: iload         4
     110: aload_0
     111: getfield      #119                // Field B:I
     114: iadd
     115: istore        4
     117: goto          84
     120: iload         4
     122: iload_3
     123: if_icmpge     142
     126: aload_0
     127: aload_1
     128: iload_2
     129: iload         4
     131: iinc          4, 1
     134: iadd
     135: baload
     136: invokevirtual #147                // Method update:(B)V
     139: goto          120
     142: return

  private void compress();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #126                // Field buffer:[B
       5: iconst_0
       6: aload_0
       7: getfield      #121                // Field bufOff:I
      10: invokespecial #150                // Method compress:([BII)V
      13: aload_0
      14: iconst_0
      15: putfield      #121                // Field bufOff:I
      18: return

  private void compress(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #128                // Field compressor:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #141                // Method org/bouncycastle/crypto/digests/CSHAKEDigest.update:([BII)V
      10: aload_0
      11: getfield      #128                // Field compressor:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      14: aload_0
      15: getfield      #127                // Field compressorBuffer:[B
      18: iconst_0
      19: aload_0
      20: getfield      #127                // Field compressorBuffer:[B
      23: arraylength
      24: invokevirtual #139                // Method org/bouncycastle/crypto/digests/CSHAKEDigest.doFinal:([BII)I
      27: pop
      28: aload_0
      29: getfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      32: aload_0
      33: getfield      #127                // Field compressorBuffer:[B
      36: iconst_0
      37: aload_0
      38: getfield      #127                // Field compressorBuffer:[B
      41: arraylength
      42: invokevirtual #141                // Method org/bouncycastle/crypto/digests/CSHAKEDigest.update:([BII)V
      45: aload_0
      46: dup
      47: getfield      #122                // Field nCount:I
      50: iconst_1
      51: iadd
      52: putfield      #122                // Field nCount:I
      55: return

  private void wrapUp(int);
    Code:
       0: aload_0
       1: getfield      #121                // Field bufOff:I
       4: ifeq          11
       7: aload_0
       8: invokespecial #145                // Method compress:()V
      11: aload_0
      12: getfield      #122                // Field nCount:I
      15: i2l
      16: invokestatic  #152                // Method org/bouncycastle/crypto/digests/XofUtils.rightEncode:(J)[B
      19: astore_2
      20: iload_1
      21: bipush        8
      23: imul
      24: i2l
      25: invokestatic  #152                // Method org/bouncycastle/crypto/digests/XofUtils.rightEncode:(J)[B
      28: astore_3
      29: aload_0
      30: getfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      33: aload_2
      34: iconst_0
      35: aload_2
      36: arraylength
      37: invokevirtual #141                // Method org/bouncycastle/crypto/digests/CSHAKEDigest.update:([BII)V
      40: aload_0
      41: getfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      44: aload_3
      45: iconst_0
      46: aload_3
      47: arraylength
      48: invokevirtual #141                // Method org/bouncycastle/crypto/digests/CSHAKEDigest.update:([BII)V
      51: aload_0
      52: iconst_0
      53: putfield      #124                // Field firstOutput:Z
      56: return

  public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #124                // Field firstOutput:Z
       4: ifeq          15
       7: aload_0
       8: aload_0
       9: getfield      #123                // Field outputLength:I
      12: invokespecial #148                // Method wrapUp:(I)V
      15: aload_0
      16: getfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      19: aload_1
      20: iload_2
      21: aload_0
      22: invokevirtual #144                // Method getDigestSize:()I
      25: invokevirtual #139                // Method org/bouncycastle/crypto/digests/CSHAKEDigest.doFinal:([BII)I
      28: istore_3
      29: aload_0
      30: invokevirtual #146                // Method reset:()V
      33: iload_3
      34: ireturn

  public int doFinal(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #124                // Field firstOutput:Z
       4: ifeq          15
       7: aload_0
       8: aload_0
       9: getfield      #123                // Field outputLength:I
      12: invokespecial #148                // Method wrapUp:(I)V
      15: aload_0
      16: getfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      19: aload_1
      20: iload_2
      21: iload_3
      22: invokevirtual #139                // Method org/bouncycastle/crypto/digests/CSHAKEDigest.doFinal:([BII)I
      25: istore        4
      27: aload_0
      28: invokevirtual #146                // Method reset:()V
      31: iload         4
      33: ireturn

  public int doOutput(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #124                // Field firstOutput:Z
       4: ifeq          12
       7: aload_0
       8: iconst_0
       9: invokespecial #148                // Method wrapUp:(I)V
      12: aload_0
      13: getfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      16: aload_1
      17: iload_2
      18: iload_3
      19: invokevirtual #140                // Method org/bouncycastle/crypto/digests/CSHAKEDigest.doOutput:([BII)I
      22: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
       4: invokevirtual #137                // Method org/bouncycastle/crypto/digests/CSHAKEDigest.reset:()V
       7: aload_0
       8: getfield      #126                // Field buffer:[B
      11: invokestatic  #153                // Method org/bouncycastle/util/Arrays.clear:([B)V
      14: aload_0
      15: getfield      #119                // Field B:I
      18: i2l
      19: invokestatic  #151                // Method org/bouncycastle/crypto/digests/XofUtils.leftEncode:(J)[B
      22: astore_1
      23: aload_0
      24: getfield      #129                // Field cshake:Lorg/bouncycastle/crypto/digests/CSHAKEDigest;
      27: aload_1
      28: iconst_0
      29: aload_1
      30: arraylength
      31: invokevirtual #141                // Method org/bouncycastle/crypto/digests/CSHAKEDigest.update:([BII)V
      34: aload_0
      35: iconst_0
      36: putfield      #122                // Field nCount:I
      39: aload_0
      40: iconst_0
      41: putfield      #121                // Field bufOff:I
      44: aload_0
      45: iconst_1
      46: putfield      #124                // Field firstOutput:Z
      49: return

  static {};
    Code:
       0: ldc           #1                  // String ParallelHash
       2: invokestatic  #155                // Method org/bouncycastle/util/Strings.toByteArray:(Ljava/lang/String;)[B
       5: putstatic     #125                // Field N_PARALLEL_HASH:[B
       8: return
}
