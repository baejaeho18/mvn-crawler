public class org.bouncycastle.math.Primes$MROutput {
  private boolean provablyComposite;

  private java.math.BigInteger factor;

  private static org.bouncycastle.math.Primes$MROutput probablyPrime();
    Code:
       0: new           #21                 // class org/bouncycastle/math/Primes$MROutput
       3: dup
       4: iconst_0
       5: aconst_null
       6: invokespecial #37                 // Method "<init>":(ZLjava/math/BigInteger;)V
       9: areturn

  private static org.bouncycastle.math.Primes$MROutput provablyCompositeWithFactor(java.math.BigInteger);
    Code:
       0: new           #21                 // class org/bouncycastle/math/Primes$MROutput
       3: dup
       4: iconst_1
       5: aload_0
       6: invokespecial #37                 // Method "<init>":(ZLjava/math/BigInteger;)V
       9: areturn

  private static org.bouncycastle.math.Primes$MROutput provablyCompositeNotPrimePower();
    Code:
       0: new           #21                 // class org/bouncycastle/math/Primes$MROutput
       3: dup
       4: iconst_1
       5: aconst_null
       6: invokespecial #37                 // Method "<init>":(ZLjava/math/BigInteger;)V
       9: areturn

  private org.bouncycastle.math.Primes$MROutput(boolean, java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #36                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #34                 // Field provablyComposite:Z
       9: aload_0
      10: aload_2
      11: putfield      #35                 // Field factor:Ljava/math/BigInteger;
      14: return

  public java.math.BigInteger getFactor();
    Code:
       0: aload_0
       1: getfield      #35                 // Field factor:Ljava/math/BigInteger;
       4: areturn

  public boolean isProvablyComposite();
    Code:
       0: aload_0
       1: getfield      #34                 // Field provablyComposite:Z
       4: ireturn

  public boolean isNotPrimePower();
    Code:
       0: aload_0
       1: getfield      #34                 // Field provablyComposite:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #35                 // Field factor:Ljava/math/BigInteger;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  static org.bouncycastle.math.Primes$MROutput access$000();
    Code:
       0: invokestatic  #38                 // Method probablyPrime:()Lorg/bouncycastle/math/Primes$MROutput;
       3: areturn

  static org.bouncycastle.math.Primes$MROutput access$100(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method provablyCompositeWithFactor:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/Primes$MROutput;
       4: areturn

  static org.bouncycastle.math.Primes$MROutput access$200();
    Code:
       0: invokestatic  #39                 // Method provablyCompositeNotPrimePower:()Lorg/bouncycastle/math/Primes$MROutput;
       3: areturn
}
