public class org.bouncycastle.crypto.ec.ECFixedTransform implements org.bouncycastle.crypto.ec.ECPairFactorTransform {
  private org.bouncycastle.crypto.params.ECPublicKeyParameters key;

  private java.math.BigInteger k;

  public org.bouncycastle.crypto.ec.ECFixedTransform(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #94                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #90                 // Field k:Ljava/math/BigInteger;
       9: return

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: instanceof    #47                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
       4: ifne          17
       7: new           #39                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #2                  // String ECPublicKeyParameters are required for fixed transform.
      13: invokespecial #92                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: checkcast     #47                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      22: putfield      #91                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      25: return

  public org.bouncycastle.crypto.ec.ECPair transform(org.bouncycastle.crypto.ec.ECPair);
    Code:
       0: aload_0
       1: getfield      #91                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
       4: ifnonnull     17
       7: new           #40                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String ECFixedTransform not initialised
      13: invokespecial #93                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #91                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      21: invokevirtual #103                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      24: astore_2
      25: aload_2
      26: invokevirtual #100                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      29: astore_3
      30: aload_0
      31: invokevirtual #96                 // Method createBasePointMultiplier:()Lorg/bouncycastle/math/ec/ECMultiplier;
      34: astore        4
      36: aload_0
      37: getfield      #90                 // Field k:Ljava/math/BigInteger;
      40: aload_3
      41: invokevirtual #95                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      44: astore        5
      46: iconst_2
      47: anewarray     #51                 // class org/bouncycastle/math/ec/ECPoint
      50: dup
      51: iconst_0
      52: aload         4
      54: aload_2
      55: invokevirtual #102                // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
      58: aload         5
      60: invokeinterface #110,  3          // InterfaceMethod org/bouncycastle/math/ec/ECMultiplier.multiply:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      65: aload_2
      66: invokevirtual #101                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      69: aload_1
      70: invokevirtual #97                 // Method org/bouncycastle/crypto/ec/ECPair.getX:()Lorg/bouncycastle/math/ec/ECPoint;
      73: invokestatic  #105                // Method org/bouncycastle/math/ec/ECAlgorithms.cleanPoint:(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      76: invokevirtual #108                // Method org/bouncycastle/math/ec/ECPoint.add:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      79: aastore
      80: dup
      81: iconst_1
      82: aload_0
      83: getfield      #91                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      86: invokevirtual #104                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
      89: aload         5
      91: invokevirtual #107                // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      94: aload_2
      95: invokevirtual #101                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      98: aload_1
      99: invokevirtual #98                 // Method org/bouncycastle/crypto/ec/ECPair.getY:()Lorg/bouncycastle/math/ec/ECPoint;
     102: invokestatic  #105                // Method org/bouncycastle/math/ec/ECAlgorithms.cleanPoint:(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
     105: invokevirtual #108                // Method org/bouncycastle/math/ec/ECPoint.add:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
     108: aastore
     109: astore        6
     111: aload_2
     112: invokevirtual #101                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
     115: aload         6
     117: invokevirtual #106                // Method org/bouncycastle/math/ec/ECCurve.normalizeAll:([Lorg/bouncycastle/math/ec/ECPoint;)V
     120: new           #44                 // class org/bouncycastle/crypto/ec/ECPair
     123: dup
     124: aload         6
     126: iconst_0
     127: aaload
     128: aload         6
     130: iconst_1
     131: aaload
     132: invokespecial #99                 // Method org/bouncycastle/crypto/ec/ECPair."<init>":(Lorg/bouncycastle/math/ec/ECPoint;Lorg/bouncycastle/math/ec/ECPoint;)V
     135: areturn

  public java.math.BigInteger getTransformValue();
    Code:
       0: aload_0
       1: getfield      #90                 // Field k:Ljava/math/BigInteger;
       4: areturn

  protected org.bouncycastle.math.ec.ECMultiplier createBasePointMultiplier();
    Code:
       0: new           #52                 // class org/bouncycastle/math/ec/FixedPointCombMultiplier
       3: dup
       4: invokespecial #109                // Method org/bouncycastle/math/ec/FixedPointCombMultiplier."<init>":()V
       7: areturn
}
