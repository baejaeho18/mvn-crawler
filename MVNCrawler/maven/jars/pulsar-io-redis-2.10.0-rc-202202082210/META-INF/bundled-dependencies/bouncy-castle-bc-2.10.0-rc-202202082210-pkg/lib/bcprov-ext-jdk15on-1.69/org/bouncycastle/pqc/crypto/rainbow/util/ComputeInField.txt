public class org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField {
  private short[][] A;

  short[] x;

  public org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField();
    Code:
       0: aload_0
       1: invokespecial #70                 // Method java/lang/Object."<init>":()V
       4: return

  public short[] solveEquation(short[][], short[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: if_icmpeq     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: aload_1
      11: arraylength
      12: aload_1
      13: arraylength
      14: iconst_1
      15: iadd
      16: multianewarray #50,  2            // class "[[S"
      20: putfield      #68                 // Field A:[[S
      23: aload_0
      24: aload_1
      25: arraylength
      26: newarray       short
      28: putfield      #67                 // Field x:[S
      31: iconst_0
      32: istore_3
      33: iload_3
      34: aload_1
      35: arraylength
      36: if_icmpge     78
      39: iconst_0
      40: istore        4
      42: iload         4
      44: aload_1
      45: iconst_0
      46: aaload
      47: arraylength
      48: if_icmpge     72
      51: aload_0
      52: getfield      #68                 // Field A:[[S
      55: iload_3
      56: aaload
      57: iload         4
      59: aload_1
      60: iload_3
      61: aaload
      62: iload         4
      64: saload
      65: sastore
      66: iinc          4, 1
      69: goto          42
      72: iinc          3, 1
      75: goto          33
      78: iconst_0
      79: istore_3
      80: iload_3
      81: aload_2
      82: arraylength
      83: if_icmpge     116
      86: aload_0
      87: getfield      #68                 // Field A:[[S
      90: iload_3
      91: aaload
      92: aload_2
      93: arraylength
      94: aload_2
      95: iload_3
      96: saload
      97: aload_0
      98: getfield      #68                 // Field A:[[S
     101: iload_3
     102: aaload
     103: aload_2
     104: arraylength
     105: saload
     106: invokestatic  #76                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.addElem:(SS)S
     109: sastore
     110: iinc          3, 1
     113: goto          80
     116: aload_0
     117: iconst_0
     118: invokespecial #74                 // Method computeZerosUnder:(Z)V
     121: aload_0
     122: invokespecial #73                 // Method substitute:()V
     125: aload_0
     126: getfield      #67                 // Field x:[S
     129: areturn
     130: astore_3
     131: aconst_null
     132: areturn
    Exception table:
       from    to  target type
           9   129   130   Class java/lang/RuntimeException

  public short[][] inverse(short[][]);
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: iconst_2
       4: aload_1
       5: arraylength
       6: imul
       7: multianewarray #50,  2            // class "[[S"
      11: putfield      #68                 // Field A:[[S
      14: aload_1
      15: arraylength
      16: aload_1
      17: iconst_0
      18: aaload
      19: arraylength
      20: if_icmpeq     33
      23: new           #53                 // class java/lang/RuntimeException
      26: dup
      27: ldc           #7                  // String The matrix is not invertible. Please choose another one!
      29: invokespecial #71                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: iconst_0
      34: istore        4
      36: iload         4
      38: aload_1
      39: arraylength
      40: if_icmpge     129
      43: iconst_0
      44: istore        5
      46: iload         5
      48: aload_1
      49: arraylength
      50: if_icmpge     76
      53: aload_0
      54: getfield      #68                 // Field A:[[S
      57: iload         4
      59: aaload
      60: iload         5
      62: aload_1
      63: iload         4
      65: aaload
      66: iload         5
      68: saload
      69: sastore
      70: iinc          5, 1
      73: goto          46
      76: aload_1
      77: arraylength
      78: istore        5
      80: iload         5
      82: iconst_2
      83: aload_1
      84: arraylength
      85: imul
      86: if_icmpge     106
      89: aload_0
      90: getfield      #68                 // Field A:[[S
      93: iload         4
      95: aaload
      96: iload         5
      98: iconst_0
      99: sastore
     100: iinc          5, 1
     103: goto          80
     106: aload_0
     107: getfield      #68                 // Field A:[[S
     110: iload         4
     112: aaload
     113: iload         4
     115: aload_0
     116: getfield      #68                 // Field A:[[S
     119: arraylength
     120: iadd
     121: iconst_1
     122: sastore
     123: iinc          4, 1
     126: goto          36
     129: aload_0
     130: iconst_1
     131: invokespecial #74                 // Method computeZerosUnder:(Z)V
     134: iconst_0
     135: istore        4
     137: iload         4
     139: aload_0
     140: getfield      #68                 // Field A:[[S
     143: arraylength
     144: if_icmpge     213
     147: aload_0
     148: getfield      #68                 // Field A:[[S
     151: iload         4
     153: aaload
     154: iload         4
     156: saload
     157: invokestatic  #75                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.invElem:(S)S
     160: istore_2
     161: iload         4
     163: istore        5
     165: iload         5
     167: iconst_2
     168: aload_0
     169: getfield      #68                 // Field A:[[S
     172: arraylength
     173: imul
     174: if_icmpge     207
     177: aload_0
     178: getfield      #68                 // Field A:[[S
     181: iload         4
     183: aaload
     184: iload         5
     186: aload_0
     187: getfield      #68                 // Field A:[[S
     190: iload         4
     192: aaload
     193: iload         5
     195: saload
     196: iload_2
     197: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
     200: sastore
     201: iinc          5, 1
     204: goto          165
     207: iinc          4, 1
     210: goto          137
     213: aload_0
     214: invokespecial #72                 // Method computeZerosAbove:()V
     217: aload_0
     218: getfield      #68                 // Field A:[[S
     221: arraylength
     222: aload_0
     223: getfield      #68                 // Field A:[[S
     226: arraylength
     227: multianewarray #50,  2            // class "[[S"
     231: astore_3
     232: iconst_0
     233: istore        4
     235: iload         4
     237: aload_0
     238: getfield      #68                 // Field A:[[S
     241: arraylength
     242: if_icmpge     299
     245: aload_0
     246: getfield      #68                 // Field A:[[S
     249: arraylength
     250: istore        5
     252: iload         5
     254: iconst_2
     255: aload_0
     256: getfield      #68                 // Field A:[[S
     259: arraylength
     260: imul
     261: if_icmpge     293
     264: aload_3
     265: iload         4
     267: aaload
     268: iload         5
     270: aload_0
     271: getfield      #68                 // Field A:[[S
     274: arraylength
     275: isub
     276: aload_0
     277: getfield      #68                 // Field A:[[S
     280: iload         4
     282: aaload
     283: iload         5
     285: saload
     286: sastore
     287: iinc          5, 1
     290: goto          252
     293: iinc          4, 1
     296: goto          235
     299: aload_3
     300: areturn
     301: astore_2
     302: aconst_null
     303: checkcast     #50                 // class "[[S"
     306: areturn
    Exception table:
       from    to  target type
           0   300   301   Class java/lang/RuntimeException

  private void computeZerosUnder(boolean) throws java.lang.RuntimeException;
    Code:
       0: iconst_0
       1: istore_3
       2: iload_1
       3: ifeq          17
       6: iconst_2
       7: aload_0
       8: getfield      #68                 // Field A:[[S
      11: arraylength
      12: imul
      13: istore_2
      14: goto          25
      17: aload_0
      18: getfield      #68                 // Field A:[[S
      21: arraylength
      22: iconst_1
      23: iadd
      24: istore_2
      25: iconst_0
      26: istore        4
      28: iload         4
      30: aload_0
      31: getfield      #68                 // Field A:[[S
      34: arraylength
      35: iconst_1
      36: isub
      37: if_icmpge     173
      40: iload         4
      42: iconst_1
      43: iadd
      44: istore        5
      46: iload         5
      48: aload_0
      49: getfield      #68                 // Field A:[[S
      52: arraylength
      53: if_icmpge     167
      56: aload_0
      57: getfield      #68                 // Field A:[[S
      60: iload         5
      62: aaload
      63: iload         4
      65: saload
      66: istore        6
      68: aload_0
      69: getfield      #68                 // Field A:[[S
      72: iload         4
      74: aaload
      75: iload         4
      77: saload
      78: invokestatic  #75                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.invElem:(S)S
      81: istore        7
      83: iload         7
      85: ifne          98
      88: new           #51                 // class java/lang/IllegalStateException
      91: dup
      92: ldc           #2                  // String Matrix not invertible! We have to choose another one!
      94: invokespecial #69                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: iload         4
     100: istore        8
     102: iload         8
     104: iload_2
     105: if_icmpge     161
     108: aload_0
     109: getfield      #68                 // Field A:[[S
     112: iload         4
     114: aaload
     115: iload         8
     117: saload
     118: iload         7
     120: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
     123: istore_3
     124: iload         6
     126: iload_3
     127: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
     130: istore_3
     131: aload_0
     132: getfield      #68                 // Field A:[[S
     135: iload         5
     137: aaload
     138: iload         8
     140: aload_0
     141: getfield      #68                 // Field A:[[S
     144: iload         5
     146: aaload
     147: iload         8
     149: saload
     150: iload_3
     151: invokestatic  #76                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.addElem:(SS)S
     154: sastore
     155: iinc          8, 1
     158: goto          102
     161: iinc          5, 1
     164: goto          46
     167: iinc          4, 1
     170: goto          28
     173: return

  private void computeZerosAbove() throws java.lang.RuntimeException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #68                 // Field A:[[S
       6: arraylength
       7: iconst_1
       8: isub
       9: istore_2
      10: iload_2
      11: ifle          137
      14: iload_2
      15: iconst_1
      16: isub
      17: istore_3
      18: iload_3
      19: iflt          131
      22: aload_0
      23: getfield      #68                 // Field A:[[S
      26: iload_3
      27: aaload
      28: iload_2
      29: saload
      30: istore        4
      32: aload_0
      33: getfield      #68                 // Field A:[[S
      36: iload_2
      37: aaload
      38: iload_2
      39: saload
      40: invokestatic  #75                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.invElem:(S)S
      43: istore        5
      45: iload         5
      47: ifne          60
      50: new           #53                 // class java/lang/RuntimeException
      53: dup
      54: ldc           #6                  // String The matrix is not invertible
      56: invokespecial #71                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: iload_2
      61: istore        6
      63: iload         6
      65: iconst_2
      66: aload_0
      67: getfield      #68                 // Field A:[[S
      70: arraylength
      71: imul
      72: if_icmpge     125
      75: aload_0
      76: getfield      #68                 // Field A:[[S
      79: iload_2
      80: aaload
      81: iload         6
      83: saload
      84: iload         5
      86: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
      89: istore_1
      90: iload         4
      92: iload_1
      93: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
      96: istore_1
      97: aload_0
      98: getfield      #68                 // Field A:[[S
     101: iload_3
     102: aaload
     103: iload         6
     105: aload_0
     106: getfield      #68                 // Field A:[[S
     109: iload_3
     110: aaload
     111: iload         6
     113: saload
     114: iload_1
     115: invokestatic  #76                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.addElem:(SS)S
     118: sastore
     119: iinc          6, 1
     122: goto          63
     125: iinc          3, -1
     128: goto          18
     131: iinc          2, -1
     134: goto          10
     137: return

  private void substitute() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #68                 // Field A:[[S
       4: aload_0
       5: getfield      #68                 // Field A:[[S
       8: arraylength
       9: iconst_1
      10: isub
      11: aaload
      12: aload_0
      13: getfield      #68                 // Field A:[[S
      16: arraylength
      17: iconst_1
      18: isub
      19: saload
      20: invokestatic  #75                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.invElem:(S)S
      23: istore_2
      24: iload_2
      25: ifne          38
      28: new           #51                 // class java/lang/IllegalStateException
      31: dup
      32: ldc           #5                  // String The equation system is not solvable
      34: invokespecial #69                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: getfield      #67                 // Field x:[S
      42: aload_0
      43: getfield      #68                 // Field A:[[S
      46: arraylength
      47: iconst_1
      48: isub
      49: aload_0
      50: getfield      #68                 // Field A:[[S
      53: aload_0
      54: getfield      #68                 // Field A:[[S
      57: arraylength
      58: iconst_1
      59: isub
      60: aaload
      61: aload_0
      62: getfield      #68                 // Field A:[[S
      65: arraylength
      66: saload
      67: iload_2
      68: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
      71: sastore
      72: aload_0
      73: getfield      #68                 // Field A:[[S
      76: arraylength
      77: iconst_2
      78: isub
      79: istore_3
      80: iload_3
      81: iflt          187
      84: aload_0
      85: getfield      #68                 // Field A:[[S
      88: iload_3
      89: aaload
      90: aload_0
      91: getfield      #68                 // Field A:[[S
      94: arraylength
      95: saload
      96: istore_1
      97: aload_0
      98: getfield      #68                 // Field A:[[S
     101: arraylength
     102: iconst_1
     103: isub
     104: istore        4
     106: iload         4
     108: iload_3
     109: if_icmple     144
     112: aload_0
     113: getfield      #68                 // Field A:[[S
     116: iload_3
     117: aaload
     118: iload         4
     120: saload
     121: aload_0
     122: getfield      #67                 // Field x:[S
     125: iload         4
     127: saload
     128: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
     131: istore_2
     132: iload_1
     133: iload_2
     134: invokestatic  #76                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.addElem:(SS)S
     137: istore_1
     138: iinc          4, -1
     141: goto          106
     144: aload_0
     145: getfield      #68                 // Field A:[[S
     148: iload_3
     149: aaload
     150: iload_3
     151: saload
     152: invokestatic  #75                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.invElem:(S)S
     155: istore_2
     156: iload_2
     157: ifne          170
     160: new           #51                 // class java/lang/IllegalStateException
     163: dup
     164: ldc           #4                  // String Not solvable equation system
     166: invokespecial #69                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: aload_0
     171: getfield      #67                 // Field x:[S
     174: iload_3
     175: iload_1
     176: iload_2
     177: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
     180: sastore
     181: iinc          3, -1
     184: goto          80
     187: return

  public short[][] multiplyMatrix(short[][], short[][]) throws java.lang.RuntimeException;
    Code:
       0: aload_1
       1: iconst_0
       2: aaload
       3: arraylength
       4: aload_2
       5: arraylength
       6: if_icmpeq     19
       9: new           #53                 // class java/lang/RuntimeException
      12: dup
      13: ldc           #3                  // String Multiplication is not possible!
      15: invokespecial #71                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: iconst_0
      20: istore_3
      21: aload_0
      22: aload_1
      23: arraylength
      24: aload_2
      25: iconst_0
      26: aaload
      27: arraylength
      28: multianewarray #50,  2            // class "[[S"
      32: putfield      #68                 // Field A:[[S
      35: iconst_0
      36: istore        4
      38: iload         4
      40: aload_1
      41: arraylength
      42: if_icmpge     127
      45: iconst_0
      46: istore        5
      48: iload         5
      50: aload_2
      51: arraylength
      52: if_icmpge     121
      55: iconst_0
      56: istore        6
      58: iload         6
      60: aload_2
      61: iconst_0
      62: aaload
      63: arraylength
      64: if_icmpge     115
      67: aload_1
      68: iload         4
      70: aaload
      71: iload         5
      73: saload
      74: aload_2
      75: iload         5
      77: aaload
      78: iload         6
      80: saload
      81: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
      84: istore_3
      85: aload_0
      86: getfield      #68                 // Field A:[[S
      89: iload         4
      91: aaload
      92: iload         6
      94: aload_0
      95: getfield      #68                 // Field A:[[S
      98: iload         4
     100: aaload
     101: iload         6
     103: saload
     104: iload_3
     105: invokestatic  #76                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.addElem:(SS)S
     108: sastore
     109: iinc          6, 1
     112: goto          58
     115: iinc          5, 1
     118: goto          48
     121: iinc          4, 1
     124: goto          38
     127: aload_0
     128: getfield      #68                 // Field A:[[S
     131: areturn

  public short[] multiplyMatrix(short[][], short[]) throws java.lang.RuntimeException;
    Code:
       0: aload_1
       1: iconst_0
       2: aaload
       3: arraylength
       4: aload_2
       5: arraylength
       6: if_icmpeq     19
       9: new           #53                 // class java/lang/RuntimeException
      12: dup
      13: ldc           #3                  // String Multiplication is not possible!
      15: invokespecial #71                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: iconst_0
      20: istore_3
      21: aload_1
      22: arraylength
      23: newarray       short
      25: astore        4
      27: iconst_0
      28: istore        5
      30: iload         5
      32: aload_1
      33: arraylength
      34: if_icmpge     88
      37: iconst_0
      38: istore        6
      40: iload         6
      42: aload_2
      43: arraylength
      44: if_icmpge     82
      47: aload_1
      48: iload         5
      50: aaload
      51: iload         6
      53: saload
      54: aload_2
      55: iload         6
      57: saload
      58: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
      61: istore_3
      62: aload         4
      64: iload         5
      66: aload         4
      68: iload         5
      70: saload
      71: iload_3
      72: invokestatic  #76                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.addElem:(SS)S
      75: sastore
      76: iinc          6, 1
      79: goto          40
      82: iinc          5, 1
      85: goto          30
      88: aload         4
      90: areturn

  public short[] addVect(short[], short[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: if_icmpeq     17
       7: new           #53                 // class java/lang/RuntimeException
      10: dup
      11: ldc           #3                  // String Multiplication is not possible!
      13: invokespecial #71                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: arraylength
      19: newarray       short
      21: astore_3
      22: iconst_0
      23: istore        4
      25: iload         4
      27: aload_3
      28: arraylength
      29: if_icmpge     53
      32: aload_3
      33: iload         4
      35: aload_1
      36: iload         4
      38: saload
      39: aload_2
      40: iload         4
      42: saload
      43: invokestatic  #76                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.addElem:(SS)S
      46: sastore
      47: iinc          4, 1
      50: goto          25
      53: aload_3
      54: areturn

  public short[][] multVects(short[], short[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: if_icmpeq     17
       7: new           #53                 // class java/lang/RuntimeException
      10: dup
      11: ldc           #3                  // String Multiplication is not possible!
      13: invokespecial #71                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: arraylength
      19: aload_2
      20: arraylength
      21: multianewarray #50,  2            // class "[[S"
      25: astore_3
      26: iconst_0
      27: istore        4
      29: iload         4
      31: aload_1
      32: arraylength
      33: if_icmpge     76
      36: iconst_0
      37: istore        5
      39: iload         5
      41: aload_2
      42: arraylength
      43: if_icmpge     70
      46: aload_3
      47: iload         4
      49: aaload
      50: iload         5
      52: aload_1
      53: iload         4
      55: saload
      56: aload_2
      57: iload         5
      59: saload
      60: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
      63: sastore
      64: iinc          5, 1
      67: goto          39
      70: iinc          4, 1
      73: goto          29
      76: aload_3
      77: areturn

  public short[] multVect(short, short[]);
    Code:
       0: aload_2
       1: arraylength
       2: newarray       short
       4: astore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: aload_3
      11: arraylength
      12: if_icmpge     33
      15: aload_3
      16: iload         4
      18: iload_1
      19: aload_2
      20: iload         4
      22: saload
      23: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
      26: sastore
      27: iinc          4, 1
      30: goto          8
      33: aload_3
      34: areturn

  public short[][] multMatrix(short, short[][]);
    Code:
       0: aload_2
       1: arraylength
       2: aload_2
       3: iconst_0
       4: aaload
       5: arraylength
       6: multianewarray #50,  2            // class "[[S"
      10: astore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: aload_2
      17: arraylength
      18: if_icmpge     63
      21: iconst_0
      22: istore        5
      24: iload         5
      26: aload_2
      27: iconst_0
      28: aaload
      29: arraylength
      30: if_icmpge     57
      33: aload_3
      34: iload         4
      36: aaload
      37: iload         5
      39: iload_1
      40: aload_2
      41: iload         4
      43: aaload
      44: iload         5
      46: saload
      47: invokestatic  #77                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.multElem:(SS)S
      50: sastore
      51: iinc          5, 1
      54: goto          24
      57: iinc          4, 1
      60: goto          14
      63: aload_3
      64: areturn

  public short[][] addSquareMatrix(short[][], short[][]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: if_icmpne     18
       7: aload_1
       8: iconst_0
       9: aaload
      10: arraylength
      11: aload_2
      12: iconst_0
      13: aaload
      14: arraylength
      15: if_icmpeq     28
      18: new           #53                 // class java/lang/RuntimeException
      21: dup
      22: ldc           #1                  // String Addition is not possible!
      24: invokespecial #71                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_1
      29: arraylength
      30: aload_1
      31: arraylength
      32: multianewarray #50,  2            // class "[[S"
      36: astore_3
      37: iconst_0
      38: istore        4
      40: iload         4
      42: aload_1
      43: arraylength
      44: if_icmpge     93
      47: iconst_0
      48: istore        5
      50: iload         5
      52: aload_2
      53: arraylength
      54: if_icmpge     87
      57: aload_3
      58: iload         4
      60: aaload
      61: iload         5
      63: aload_1
      64: iload         4
      66: aaload
      67: iload         5
      69: saload
      70: aload_2
      71: iload         4
      73: aaload
      74: iload         5
      76: saload
      77: invokestatic  #76                 // Method org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.addElem:(SS)S
      80: sastore
      81: iinc          5, 1
      84: goto          50
      87: iinc          4, 1
      90: goto          40
      93: aload_3
      94: areturn
}
