Compiled from "SecP192R1Field.java"
public class org.bouncycastle.math.ec.custom.sec.SecP192R1Field {
  private static final long M;

  static final int[] P;

  private static final int[] PExt;

  private static final int[] PExtInv;

  private static final int P5;

  private static final int PExt11;

  public org.bouncycastle.math.ec.custom.sec.SecP192R1Field();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2                  // Method org/bouncycastle/math/raw/Nat192.add:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          28
      11: aload_2
      12: iconst_5
      13: iaload
      14: iconst_m1
      15: if_icmpne     32
      18: aload_2
      19: getstatic     #4                  // Field P:[I
      22: invokestatic  #5                  // Method org/bouncycastle/math/raw/Nat192.gte:([I[I)Z
      25: ifeq          32
      28: aload_2
      29: invokestatic  #6                  // Method addPInvTo:([I)V
      32: return

  public static void addExt(int[], int[], int[]);
    Code:
       0: bipush        12
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #7                  // Method org/bouncycastle/math/raw/Nat.add:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifne          33
      13: aload_2
      14: bipush        11
      16: iaload
      17: iconst_m1
      18: if_icmpne     58
      21: bipush        12
      23: aload_2
      24: getstatic     #8                  // Field PExt:[I
      27: invokestatic  #9                  // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      30: ifeq          58
      33: getstatic     #10                 // Field PExtInv:[I
      36: arraylength
      37: getstatic     #10                 // Field PExtInv:[I
      40: aload_2
      41: invokestatic  #11                 // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      44: ifeq          58
      47: bipush        12
      49: aload_2
      50: getstatic     #10                 // Field PExtInv:[I
      53: arraylength
      54: invokestatic  #12                 // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      57: pop
      58: return

  public static void addOne(int[], int[]);
    Code:
       0: bipush        6
       2: aload_0
       3: aload_1
       4: invokestatic  #13                 // Method org/bouncycastle/math/raw/Nat.inc:(I[I[I)I
       7: istore_2
       8: iload_2
       9: ifne          29
      12: aload_1
      13: iconst_5
      14: iaload
      15: iconst_m1
      16: if_icmpne     33
      19: aload_1
      20: getstatic     #4                  // Field P:[I
      23: invokestatic  #5                  // Method org/bouncycastle/math/raw/Nat192.gte:([I[I)Z
      26: ifeq          33
      29: aload_1
      30: invokestatic  #6                  // Method addPInvTo:([I)V
      33: return

  public static int[] fromBigInteger(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method org/bouncycastle/math/raw/Nat192.fromBigInteger:(Ljava/math/BigInteger;)[I
       4: astore_1
       5: aload_1
       6: iconst_5
       7: iaload
       8: iconst_m1
       9: if_icmpne     30
      12: aload_1
      13: getstatic     #4                  // Field P:[I
      16: invokestatic  #5                  // Method org/bouncycastle/math/raw/Nat192.gte:([I[I)Z
      19: ifeq          30
      22: getstatic     #4                  // Field P:[I
      25: aload_1
      26: invokestatic  #15                 // Method org/bouncycastle/math/raw/Nat192.subFrom:([I[I)I
      29: pop
      30: aload_1
      31: areturn

  public static void half(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: iconst_1
       4: iand
       5: ifne          20
       8: bipush        6
      10: aload_0
      11: iconst_0
      12: aload_1
      13: invokestatic  #16                 // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II[I)I
      16: pop
      17: goto          37
      20: aload_0
      21: getstatic     #4                  // Field P:[I
      24: aload_1
      25: invokestatic  #2                  // Method org/bouncycastle/math/raw/Nat192.add:([I[I[I)I
      28: istore_2
      29: bipush        6
      31: aload_1
      32: iload_2
      33: invokestatic  #17                 // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II)I
      36: pop
      37: return

  public static void inv(int[], int[]);
    Code:
       0: getstatic     #4                  // Field P:[I
       3: aload_0
       4: aload_1
       5: invokestatic  #18                 // Method org/bouncycastle/math/raw/Mod.checkedModOddInverse:([I[I[I)V
       8: return

  public static int isZero(int[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: bipush        6
       7: if_icmpge     22
      10: iload_1
      11: aload_0
      12: iload_2
      13: iaload
      14: ior
      15: istore_1
      16: iinc          2, 1
      19: goto          4
      22: iload_1
      23: iconst_1
      24: iushr
      25: iload_1
      26: iconst_1
      27: iand
      28: ior
      29: istore_1
      30: iload_1
      31: iconst_1
      32: isub
      33: bipush        31
      35: ishr
      36: ireturn

  public static void multiply(int[], int[], int[]);
    Code:
       0: invokestatic  #19                 // Method org/bouncycastle/math/raw/Nat192.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #20                 // Method org/bouncycastle/math/raw/Nat192.mul:([I[I[I)V
      10: aload_3
      11: aload_2
      12: invokestatic  #21                 // Method reduce:([I[I)V
      15: return

  public static void multiplyAddToExt(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #22                 // Method org/bouncycastle/math/raw/Nat192.mulAddTo:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          31
      11: aload_2
      12: bipush        11
      14: iaload
      15: iconst_m1
      16: if_icmpne     56
      19: bipush        12
      21: aload_2
      22: getstatic     #8                  // Field PExt:[I
      25: invokestatic  #9                  // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      28: ifeq          56
      31: getstatic     #10                 // Field PExtInv:[I
      34: arraylength
      35: getstatic     #10                 // Field PExtInv:[I
      38: aload_2
      39: invokestatic  #11                 // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      42: ifeq          56
      45: bipush        12
      47: aload_2
      48: getstatic     #10                 // Field PExtInv:[I
      51: arraylength
      52: invokestatic  #12                 // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      55: pop
      56: return

  public static void negate(int[], int[]);
    Code:
       0: iconst_0
       1: aload_0
       2: invokestatic  #23                 // Method isZero:([I)I
       5: if_icmpeq     22
       8: getstatic     #4                  // Field P:[I
      11: getstatic     #4                  // Field P:[I
      14: aload_1
      15: invokestatic  #24                 // Method org/bouncycastle/math/raw/Nat192.sub:([I[I[I)I
      18: pop
      19: goto          31
      22: getstatic     #4                  // Field P:[I
      25: aload_0
      26: aload_1
      27: invokestatic  #24                 // Method org/bouncycastle/math/raw/Nat192.sub:([I[I[I)I
      30: pop
      31: return

  public static void random(java.security.SecureRandom, int[]);
    Code:
       0: bipush        24
       2: newarray       byte
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #25                 // Method java/security/SecureRandom.nextBytes:([B)V
      10: aload_2
      11: iconst_0
      12: aload_1
      13: iconst_0
      14: bipush        6
      16: invokestatic  #26                 // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI[III)V
      19: iconst_0
      20: bipush        6
      22: aload_1
      23: getstatic     #4                  // Field P:[I
      26: invokestatic  #27                 // Method org/bouncycastle/math/raw/Nat.lessThan:(I[I[I)I
      29: if_icmpeq     5
      32: return

  public static void randomMult(java.security.SecureRandom, int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #28                 // Method random:(Ljava/security/SecureRandom;[I)V
       5: iconst_0
       6: aload_1
       7: invokestatic  #23                 // Method isZero:([I)I
      10: if_icmpne     0
      13: return

  public static void reduce(int[], int[]);
    Code:
       0: aload_0
       1: bipush        6
       3: iaload
       4: i2l
       5: ldc2_w        #29                 // long 4294967295l
       8: land
       9: lstore_2
      10: aload_0
      11: bipush        7
      13: iaload
      14: i2l
      15: ldc2_w        #29                 // long 4294967295l
      18: land
      19: lstore        4
      21: aload_0
      22: bipush        8
      24: iaload
      25: i2l
      26: ldc2_w        #29                 // long 4294967295l
      29: land
      30: lstore        6
      32: aload_0
      33: bipush        9
      35: iaload
      36: i2l
      37: ldc2_w        #29                 // long 4294967295l
      40: land
      41: lstore        8
      43: aload_0
      44: bipush        10
      46: iaload
      47: i2l
      48: ldc2_w        #29                 // long 4294967295l
      51: land
      52: lstore        10
      54: aload_0
      55: bipush        11
      57: iaload
      58: i2l
      59: ldc2_w        #29                 // long 4294967295l
      62: land
      63: lstore        12
      65: lload_2
      66: lload         10
      68: ladd
      69: lstore        14
      71: lload         4
      73: lload         12
      75: ladd
      76: lstore        16
      78: lconst_0
      79: lstore        18
      81: lload         18
      83: aload_0
      84: iconst_0
      85: iaload
      86: i2l
      87: ldc2_w        #29                 // long 4294967295l
      90: land
      91: lload         14
      93: ladd
      94: ladd
      95: lstore        18
      97: lload         18
      99: l2i
     100: istore        20
     102: lload         18
     104: bipush        32
     106: lshr
     107: lstore        18
     109: lload         18
     111: aload_0
     112: iconst_1
     113: iaload
     114: i2l
     115: ldc2_w        #29                 // long 4294967295l
     118: land
     119: lload         16
     121: ladd
     122: ladd
     123: lstore        18
     125: aload_1
     126: iconst_1
     127: lload         18
     129: l2i
     130: iastore
     131: lload         18
     133: bipush        32
     135: lshr
     136: lstore        18
     138: lload         14
     140: lload         6
     142: ladd
     143: lstore        14
     145: lload         16
     147: lload         8
     149: ladd
     150: lstore        16
     152: lload         18
     154: aload_0
     155: iconst_2
     156: iaload
     157: i2l
     158: ldc2_w        #29                 // long 4294967295l
     161: land
     162: lload         14
     164: ladd
     165: ladd
     166: lstore        18
     168: lload         18
     170: ldc2_w        #29                 // long 4294967295l
     173: land
     174: lstore        21
     176: lload         18
     178: bipush        32
     180: lshr
     181: lstore        18
     183: lload         18
     185: aload_0
     186: iconst_3
     187: iaload
     188: i2l
     189: ldc2_w        #29                 // long 4294967295l
     192: land
     193: lload         16
     195: ladd
     196: ladd
     197: lstore        18
     199: aload_1
     200: iconst_3
     201: lload         18
     203: l2i
     204: iastore
     205: lload         18
     207: bipush        32
     209: lshr
     210: lstore        18
     212: lload         14
     214: lload_2
     215: lsub
     216: lstore        14
     218: lload         16
     220: lload         4
     222: lsub
     223: lstore        16
     225: lload         18
     227: aload_0
     228: iconst_4
     229: iaload
     230: i2l
     231: ldc2_w        #29                 // long 4294967295l
     234: land
     235: lload         14
     237: ladd
     238: ladd
     239: lstore        18
     241: aload_1
     242: iconst_4
     243: lload         18
     245: l2i
     246: iastore
     247: lload         18
     249: bipush        32
     251: lshr
     252: lstore        18
     254: lload         18
     256: aload_0
     257: iconst_5
     258: iaload
     259: i2l
     260: ldc2_w        #29                 // long 4294967295l
     263: land
     264: lload         16
     266: ladd
     267: ladd
     268: lstore        18
     270: aload_1
     271: iconst_5
     272: lload         18
     274: l2i
     275: iastore
     276: lload         18
     278: bipush        32
     280: lshr
     281: lstore        18
     283: lload         21
     285: lload         18
     287: ladd
     288: lstore        21
     290: lload         18
     292: iload         20
     294: i2l
     295: ldc2_w        #29                 // long 4294967295l
     298: land
     299: ladd
     300: lstore        18
     302: aload_1
     303: iconst_0
     304: lload         18
     306: l2i
     307: iastore
     308: lload         18
     310: bipush        32
     312: lshr
     313: lstore        18
     315: lload         18
     317: lconst_0
     318: lcmp
     319: ifeq          351
     322: lload         18
     324: aload_1
     325: iconst_1
     326: iaload
     327: i2l
     328: ldc2_w        #29                 // long 4294967295l
     331: land
     332: ladd
     333: lstore        18
     335: aload_1
     336: iconst_1
     337: lload         18
     339: l2i
     340: iastore
     341: lload         21
     343: lload         18
     345: bipush        32
     347: lshr
     348: ladd
     349: lstore        21
     351: aload_1
     352: iconst_2
     353: lload         21
     355: l2i
     356: iastore
     357: lload         21
     359: bipush        32
     361: lshr
     362: lstore        18
     364: lload         18
     366: lconst_0
     367: lcmp
     368: ifeq          381
     371: bipush        6
     373: aload_1
     374: iconst_3
     375: invokestatic  #12                 // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
     378: ifne          398
     381: aload_1
     382: iconst_5
     383: iaload
     384: iconst_m1
     385: if_icmpne     402
     388: aload_1
     389: getstatic     #4                  // Field P:[I
     392: invokestatic  #5                  // Method org/bouncycastle/math/raw/Nat192.gte:([I[I)Z
     395: ifeq          402
     398: aload_1
     399: invokestatic  #6                  // Method addPInvTo:([I)V
     402: return

  public static void reduce32(int, int[]);
    Code:
       0: lconst_0
       1: lstore_2
       2: iload_0
       3: ifeq          89
       6: iload_0
       7: i2l
       8: ldc2_w        #29                 // long 4294967295l
      11: land
      12: lstore        4
      14: lload_2
      15: aload_1
      16: iconst_0
      17: iaload
      18: i2l
      19: ldc2_w        #29                 // long 4294967295l
      22: land
      23: lload         4
      25: ladd
      26: ladd
      27: lstore_2
      28: aload_1
      29: iconst_0
      30: lload_2
      31: l2i
      32: iastore
      33: lload_2
      34: bipush        32
      36: lshr
      37: lstore_2
      38: lload_2
      39: lconst_0
      40: lcmp
      41: ifeq          65
      44: lload_2
      45: aload_1
      46: iconst_1
      47: iaload
      48: i2l
      49: ldc2_w        #29                 // long 4294967295l
      52: land
      53: ladd
      54: lstore_2
      55: aload_1
      56: iconst_1
      57: lload_2
      58: l2i
      59: iastore
      60: lload_2
      61: bipush        32
      63: lshr
      64: lstore_2
      65: lload_2
      66: aload_1
      67: iconst_2
      68: iaload
      69: i2l
      70: ldc2_w        #29                 // long 4294967295l
      73: land
      74: lload         4
      76: ladd
      77: ladd
      78: lstore_2
      79: aload_1
      80: iconst_2
      81: lload_2
      82: l2i
      83: iastore
      84: lload_2
      85: bipush        32
      87: lshr
      88: lstore_2
      89: lload_2
      90: lconst_0
      91: lcmp
      92: ifeq          105
      95: bipush        6
      97: aload_1
      98: iconst_3
      99: invokestatic  #12                 // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
     102: ifne          122
     105: aload_1
     106: iconst_5
     107: iaload
     108: iconst_m1
     109: if_icmpne     126
     112: aload_1
     113: getstatic     #4                  // Field P:[I
     116: invokestatic  #5                  // Method org/bouncycastle/math/raw/Nat192.gte:([I[I)Z
     119: ifeq          126
     122: aload_1
     123: invokestatic  #6                  // Method addPInvTo:([I)V
     126: return

  public static void square(int[], int[]);
    Code:
       0: invokestatic  #19                 // Method org/bouncycastle/math/raw/Nat192.createExt:()[I
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #31                 // Method org/bouncycastle/math/raw/Nat192.square:([I[I)V
       9: aload_2
      10: aload_1
      11: invokestatic  #21                 // Method reduce:([I[I)V
      14: return

  public static void squareN(int[], int, int[]);
    Code:
       0: invokestatic  #19                 // Method org/bouncycastle/math/raw/Nat192.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokestatic  #31                 // Method org/bouncycastle/math/raw/Nat192.square:([I[I)V
       9: aload_3
      10: aload_2
      11: invokestatic  #21                 // Method reduce:([I[I)V
      14: iinc          1, -1
      17: iload_1
      18: ifle          34
      21: aload_2
      22: aload_3
      23: invokestatic  #31                 // Method org/bouncycastle/math/raw/Nat192.square:([I[I)V
      26: aload_3
      27: aload_2
      28: invokestatic  #21                 // Method reduce:([I[I)V
      31: goto          14
      34: return

  public static void subtract(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #24                 // Method org/bouncycastle/math/raw/Nat192.sub:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifeq          15
      11: aload_2
      12: invokestatic  #32                 // Method subPInvFrom:([I)V
      15: return

  public static void subtractExt(int[], int[], int[]);
    Code:
       0: bipush        12
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #33                 // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifeq          38
      13: getstatic     #10                 // Field PExtInv:[I
      16: arraylength
      17: getstatic     #10                 // Field PExtInv:[I
      20: aload_2
      21: invokestatic  #34                 // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      24: ifeq          38
      27: bipush        12
      29: aload_2
      30: getstatic     #10                 // Field PExtInv:[I
      33: arraylength
      34: invokestatic  #35                 // Method org/bouncycastle/math/raw/Nat.decAt:(I[II)I
      37: pop
      38: return

  public static void twice(int[], int[]);
    Code:
       0: bipush        6
       2: aload_0
       3: iconst_0
       4: aload_1
       5: invokestatic  #36                 // Method org/bouncycastle/math/raw/Nat.shiftUpBit:(I[II[I)I
       8: istore_2
       9: iload_2
      10: ifne          30
      13: aload_1
      14: iconst_5
      15: iaload
      16: iconst_m1
      17: if_icmpne     34
      20: aload_1
      21: getstatic     #4                  // Field P:[I
      24: invokestatic  #5                  // Method org/bouncycastle/math/raw/Nat192.gte:([I[I)Z
      27: ifeq          34
      30: aload_1
      31: invokestatic  #6                  // Method addPInvTo:([I)V
      34: return

  private static void addPInvTo(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #29                 // long 4294967295l
       7: land
       8: lconst_1
       9: ladd
      10: lstore_1
      11: aload_0
      12: iconst_0
      13: lload_1
      14: l2i
      15: iastore
      16: lload_1
      17: bipush        32
      19: lshr
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifeq          48
      27: lload_1
      28: aload_0
      29: iconst_1
      30: iaload
      31: i2l
      32: ldc2_w        #29                 // long 4294967295l
      35: land
      36: ladd
      37: lstore_1
      38: aload_0
      39: iconst_1
      40: lload_1
      41: l2i
      42: iastore
      43: lload_1
      44: bipush        32
      46: lshr
      47: lstore_1
      48: lload_1
      49: aload_0
      50: iconst_2
      51: iaload
      52: i2l
      53: ldc2_w        #29                 // long 4294967295l
      56: land
      57: lconst_1
      58: ladd
      59: ladd
      60: lstore_1
      61: aload_0
      62: iconst_2
      63: lload_1
      64: l2i
      65: iastore
      66: lload_1
      67: bipush        32
      69: lshr
      70: lstore_1
      71: lload_1
      72: lconst_0
      73: lcmp
      74: ifeq          85
      77: bipush        6
      79: aload_0
      80: iconst_3
      81: invokestatic  #12                 // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      84: pop
      85: return

  private static void subPInvFrom(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #29                 // long 4294967295l
       7: land
       8: lconst_1
       9: lsub
      10: lstore_1
      11: aload_0
      12: iconst_0
      13: lload_1
      14: l2i
      15: iastore
      16: lload_1
      17: bipush        32
      19: lshr
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifeq          48
      27: lload_1
      28: aload_0
      29: iconst_1
      30: iaload
      31: i2l
      32: ldc2_w        #29                 // long 4294967295l
      35: land
      36: ladd
      37: lstore_1
      38: aload_0
      39: iconst_1
      40: lload_1
      41: l2i
      42: iastore
      43: lload_1
      44: bipush        32
      46: lshr
      47: lstore_1
      48: lload_1
      49: aload_0
      50: iconst_2
      51: iaload
      52: i2l
      53: ldc2_w        #29                 // long 4294967295l
      56: land
      57: lconst_1
      58: lsub
      59: ladd
      60: lstore_1
      61: aload_0
      62: iconst_2
      63: lload_1
      64: l2i
      65: iastore
      66: lload_1
      67: bipush        32
      69: lshr
      70: lstore_1
      71: lload_1
      72: lconst_0
      73: lcmp
      74: ifeq          85
      77: bipush        6
      79: aload_0
      80: iconst_3
      81: invokestatic  #35                 // Method org/bouncycastle/math/raw/Nat.decAt:(I[II)I
      84: pop
      85: return

  static {};
    Code:
       0: bipush        6
       2: newarray       int
       4: dup
       5: iconst_0
       6: iconst_m1
       7: iastore
       8: dup
       9: iconst_1
      10: iconst_m1
      11: iastore
      12: dup
      13: iconst_2
      14: bipush        -2
      16: iastore
      17: dup
      18: iconst_3
      19: iconst_m1
      20: iastore
      21: dup
      22: iconst_4
      23: iconst_m1
      24: iastore
      25: dup
      26: iconst_5
      27: iconst_m1
      28: iastore
      29: putstatic     #4                  // Field P:[I
      32: bipush        12
      34: newarray       int
      36: dup
      37: iconst_0
      38: iconst_1
      39: iastore
      40: dup
      41: iconst_1
      42: iconst_0
      43: iastore
      44: dup
      45: iconst_2
      46: iconst_2
      47: iastore
      48: dup
      49: iconst_3
      50: iconst_0
      51: iastore
      52: dup
      53: iconst_4
      54: iconst_1
      55: iastore
      56: dup
      57: iconst_5
      58: iconst_0
      59: iastore
      60: dup
      61: bipush        6
      63: bipush        -2
      65: iastore
      66: dup
      67: bipush        7
      69: iconst_m1
      70: iastore
      71: dup
      72: bipush        8
      74: bipush        -3
      76: iastore
      77: dup
      78: bipush        9
      80: iconst_m1
      81: iastore
      82: dup
      83: bipush        10
      85: iconst_m1
      86: iastore
      87: dup
      88: bipush        11
      90: iconst_m1
      91: iastore
      92: putstatic     #8                  // Field PExt:[I
      95: bipush        9
      97: newarray       int
      99: dup
     100: iconst_0
     101: iconst_m1
     102: iastore
     103: dup
     104: iconst_1
     105: iconst_m1
     106: iastore
     107: dup
     108: iconst_2
     109: bipush        -3
     111: iastore
     112: dup
     113: iconst_3
     114: iconst_m1
     115: iastore
     116: dup
     117: iconst_4
     118: bipush        -2
     120: iastore
     121: dup
     122: iconst_5
     123: iconst_m1
     124: iastore
     125: dup
     126: bipush        6
     128: iconst_1
     129: iastore
     130: dup
     131: bipush        7
     133: iconst_0
     134: iastore
     135: dup
     136: bipush        8
     138: iconst_2
     139: iastore
     140: putstatic     #10                 // Field PExtInv:[I
     143: return
}
