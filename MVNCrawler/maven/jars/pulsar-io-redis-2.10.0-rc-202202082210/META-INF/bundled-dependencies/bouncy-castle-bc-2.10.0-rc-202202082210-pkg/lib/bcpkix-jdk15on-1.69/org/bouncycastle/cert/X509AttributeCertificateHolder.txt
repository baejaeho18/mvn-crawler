public class org.bouncycastle.cert.X509AttributeCertificateHolder implements org.bouncycastle.util.Encodable,java.io.Serializable {
  private static final long serialVersionUID;

  private static org.bouncycastle.asn1.x509.Attribute[] EMPTY_ARRAY;

  private transient org.bouncycastle.asn1.x509.AttributeCertificate attrCert;

  private transient org.bouncycastle.asn1.x509.Extensions extensions;

  private static org.bouncycastle.asn1.x509.AttributeCertificate parseBytes(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #318                // Method org/bouncycastle/cert/CertUtils.parseNonEmptyASN1:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
       4: invokestatic  #300                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       7: areturn
       8: astore_1
       9: new           #144                // class org/bouncycastle/cert/CertIOException
      12: dup
      13: new           #127                // class java/lang/StringBuilder
      16: dup
      17: invokespecial #278                // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #2                  // String malformed data:
      22: invokevirtual #280                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #274                // Method java/lang/ClassCastException.getMessage:()Ljava/lang/String;
      29: invokevirtual #280                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: aload_1
      36: invokespecial #317                // Method org/bouncycastle/cert/CertIOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      39: athrow
      40: astore_1
      41: new           #144                // class org/bouncycastle/cert/CertIOException
      44: dup
      45: new           #127                // class java/lang/StringBuilder
      48: dup
      49: invokespecial #278                // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #2                  // String malformed data:
      54: invokevirtual #280                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_1
      58: invokevirtual #276                // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
      61: invokevirtual #280                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: aload_1
      68: invokespecial #317                // Method org/bouncycastle/cert/CertIOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      71: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/ClassCastException
           0     7    40   Class java/lang/IllegalArgumentException

  public org.bouncycastle.cert.X509AttributeCertificateHolder(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #329                // Method parseBytes:([B)Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       5: invokespecial #327                // Method "<init>":(Lorg/bouncycastle/asn1/x509/AttributeCertificate;)V
       8: return

  public org.bouncycastle.cert.X509AttributeCertificateHolder(org.bouncycastle.asn1.x509.AttributeCertificate);
    Code:
       0: aload_0
       1: invokespecial #277                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #328                // Method init:(Lorg/bouncycastle/asn1/x509/AttributeCertificate;)V
       9: return

  private void init(org.bouncycastle.asn1.x509.AttributeCertificate);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       5: aload_0
       6: aload_1
       7: invokevirtual #299                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getAcinfo:()Lorg/bouncycastle/asn1/x509/AttributeCertificateInfo;
      10: invokevirtual #308                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getExtensions:()Lorg/bouncycastle/asn1/x509/Extensions;
      13: putfield      #268                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
      16: return

  public byte[] getEncoded() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #295                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getEncoded:()[B
       7: areturn

  public int getVersion();
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #299                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getAcinfo:()Lorg/bouncycastle/asn1/x509/AttributeCertificateInfo;
       7: invokevirtual #302                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getVersion:()Lorg/bouncycastle/asn1/ASN1Integer;
      10: invokevirtual #284                // Method org/bouncycastle/asn1/ASN1Integer.intValueExact:()I
      13: iconst_1
      14: iadd
      15: ireturn

  public java.math.BigInteger getSerialNumber();
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #299                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getAcinfo:()Lorg/bouncycastle/asn1/x509/AttributeCertificateInfo;
       7: invokevirtual #301                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getSerialNumber:()Lorg/bouncycastle/asn1/ASN1Integer;
      10: invokevirtual #285                // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
      13: areturn

  public org.bouncycastle.cert.AttributeCertificateHolder getHolder();
    Code:
       0: new           #141                // class org/bouncycastle/cert/AttributeCertificateHolder
       3: dup
       4: aload_0
       5: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       8: invokevirtual #299                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getAcinfo:()Lorg/bouncycastle/asn1/x509/AttributeCertificateInfo;
      11: invokevirtual #309                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getHolder:()Lorg/bouncycastle/asn1/x509/Holder;
      14: invokevirtual #312                // Method org/bouncycastle/asn1/x509/Holder.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
      17: checkcast     #133                // class org/bouncycastle/asn1/ASN1Sequence
      20: invokespecial #313                // Method org/bouncycastle/cert/AttributeCertificateHolder."<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      23: areturn

  public org.bouncycastle.cert.AttributeCertificateIssuer getIssuer();
    Code:
       0: new           #142                // class org/bouncycastle/cert/AttributeCertificateIssuer
       3: dup
       4: aload_0
       5: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       8: invokevirtual #299                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getAcinfo:()Lorg/bouncycastle/asn1/x509/AttributeCertificateInfo;
      11: invokevirtual #306                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getIssuer:()Lorg/bouncycastle/asn1/x509/AttCertIssuer;
      14: invokespecial #314                // Method org/bouncycastle/cert/AttributeCertificateIssuer."<init>":(Lorg/bouncycastle/asn1/x509/AttCertIssuer;)V
      17: areturn

  public java.util.Date getNotBefore();
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #299                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getAcinfo:()Lorg/bouncycastle/asn1/x509/AttributeCertificateInfo;
       7: invokevirtual #307                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getAttrCertValidityPeriod:()Lorg/bouncycastle/asn1/x509/AttCertValidityPeriod;
      10: invokevirtual #291                // Method org/bouncycastle/asn1/x509/AttCertValidityPeriod.getNotBeforeTime:()Lorg/bouncycastle/asn1/ASN1GeneralizedTime;
      13: invokestatic  #320                // Method org/bouncycastle/cert/CertUtils.recoverDate:(Lorg/bouncycastle/asn1/ASN1GeneralizedTime;)Ljava/util/Date;
      16: areturn

  public java.util.Date getNotAfter();
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #299                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getAcinfo:()Lorg/bouncycastle/asn1/x509/AttributeCertificateInfo;
       7: invokevirtual #307                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getAttrCertValidityPeriod:()Lorg/bouncycastle/asn1/x509/AttCertValidityPeriod;
      10: invokevirtual #290                // Method org/bouncycastle/asn1/x509/AttCertValidityPeriod.getNotAfterTime:()Lorg/bouncycastle/asn1/ASN1GeneralizedTime;
      13: invokestatic  #320                // Method org/bouncycastle/cert/CertUtils.recoverDate:(Lorg/bouncycastle/asn1/ASN1GeneralizedTime;)Ljava/util/Date;
      16: areturn

  public org.bouncycastle.asn1.x509.Attribute[] getAttributes();
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #299                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getAcinfo:()Lorg/bouncycastle/asn1/x509/AttributeCertificateInfo;
       7: invokevirtual #303                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getAttributes:()Lorg/bouncycastle/asn1/ASN1Sequence;
      10: astore_1
      11: aload_1
      12: invokevirtual #287                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      15: anewarray     #136                // class org/bouncycastle/asn1/x509/Attribute
      18: astore_2
      19: iconst_0
      20: istore_3
      21: iload_3
      22: aload_1
      23: invokevirtual #287                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      26: if_icmpeq     46
      29: aload_2
      30: iload_3
      31: aload_1
      32: iload_3
      33: invokevirtual #288                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      36: invokestatic  #293                // Method org/bouncycastle/asn1/x509/Attribute.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/Attribute;
      39: aastore
      40: iinc          3, 1
      43: goto          21
      46: aload_2
      47: areturn

  public org.bouncycastle.asn1.x509.Attribute[] getAttributes(org.bouncycastle.asn1.ASN1ObjectIdentifier);
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #299                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getAcinfo:()Lorg/bouncycastle/asn1/x509/AttributeCertificateInfo;
       7: invokevirtual #303                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getAttributes:()Lorg/bouncycastle/asn1/ASN1Sequence;
      10: astore_2
      11: new           #128                // class java/util/ArrayList
      14: dup
      15: invokespecial #281                // Method java/util/ArrayList."<init>":()V
      18: astore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: aload_2
      25: invokevirtual #287                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      28: if_icmpeq     69
      31: aload_2
      32: iload         4
      34: invokevirtual #288                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      37: invokestatic  #293                // Method org/bouncycastle/asn1/x509/Attribute.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/Attribute;
      40: astore        5
      42: aload         5
      44: invokevirtual #292                // Method org/bouncycastle/asn1/x509/Attribute.getAttrType:()Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      47: aload_1
      48: invokevirtual #286                // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.equals:(Lorg/bouncycastle/asn1/ASN1Primitive;)Z
      51: ifeq          63
      54: aload_3
      55: aload         5
      57: invokeinterface #331,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      62: pop
      63: iinc          4, 1
      66: goto          22
      69: aload_3
      70: invokeinterface #330,  1          // InterfaceMethod java/util/List.size:()I
      75: ifne          82
      78: getstatic     #266                // Field EMPTY_ARRAY:[Lorg/bouncycastle/asn1/x509/Attribute;
      81: areturn
      82: aload_3
      83: aload_3
      84: invokeinterface #330,  1          // InterfaceMethod java/util/List.size:()I
      89: anewarray     #136                // class org/bouncycastle/asn1/x509/Attribute
      92: invokeinterface #332,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      97: checkcast     #116                // class "[Lorg/bouncycastle/asn1/x509/Attribute;"
     100: checkcast     #116                // class "[Lorg/bouncycastle/asn1/x509/Attribute;"
     103: areturn

  public boolean hasExtensions();
    Code:
       0: aload_0
       1: getfield      #268                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.bouncycastle.asn1.x509.Extension getExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier);
    Code:
       0: aload_0
       1: getfield      #268                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: ifnull        16
       7: aload_0
       8: getfield      #268                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
      11: aload_1
      12: invokevirtual #311                // Method org/bouncycastle/asn1/x509/Extensions.getExtension:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)Lorg/bouncycastle/asn1/x509/Extension;
      15: areturn
      16: aconst_null
      17: areturn

  public org.bouncycastle.asn1.x509.Extensions getExtensions();
    Code:
       0: aload_0
       1: getfield      #268                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: areturn

  public java.util.List getExtensionOIDs();
    Code:
       0: aload_0
       1: getfield      #268                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: invokestatic  #321                // Method org/bouncycastle/cert/CertUtils.getExtensionOIDs:(Lorg/bouncycastle/asn1/x509/Extensions;)Ljava/util/List;
       7: areturn

  public java.util.Set getCriticalExtensionOIDs();
    Code:
       0: aload_0
       1: getfield      #268                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: invokestatic  #322                // Method org/bouncycastle/cert/CertUtils.getCriticalExtensionOIDs:(Lorg/bouncycastle/asn1/x509/Extensions;)Ljava/util/Set;
       7: areturn

  public java.util.Set getNonCriticalExtensionOIDs();
    Code:
       0: aload_0
       1: getfield      #268                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: invokestatic  #323                // Method org/bouncycastle/cert/CertUtils.getNonCriticalExtensionOIDs:(Lorg/bouncycastle/asn1/x509/Extensions;)Ljava/util/Set;
       7: areturn

  public boolean[] getIssuerUniqueID();
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #299                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getAcinfo:()Lorg/bouncycastle/asn1/x509/AttributeCertificateInfo;
       7: invokevirtual #304                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getIssuerUniqueID:()Lorg/bouncycastle/asn1/DERBitString;
      10: invokestatic  #319                // Method org/bouncycastle/cert/CertUtils.bitStringToBoolean:(Lorg/bouncycastle/asn1/DERBitString;)[Z
      13: areturn

  public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm();
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #298                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getSignatureAlgorithm:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
       7: areturn

  public byte[] getSignature();
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #297                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getSignatureValue:()Lorg/bouncycastle/asn1/DERBitString;
       7: invokevirtual #289                // Method org/bouncycastle/asn1/DERBitString.getOctets:()[B
      10: areturn

  public org.bouncycastle.asn1.x509.AttributeCertificate toASN1Structure();
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: areturn

  public boolean isValidOn(java.util.Date);
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #299                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getAcinfo:()Lorg/bouncycastle/asn1/x509/AttributeCertificateInfo;
       7: invokevirtual #307                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getAttrCertValidityPeriod:()Lorg/bouncycastle/asn1/x509/AttCertValidityPeriod;
      10: astore_2
      11: aload_1
      12: aload_2
      13: invokevirtual #291                // Method org/bouncycastle/asn1/x509/AttCertValidityPeriod.getNotBeforeTime:()Lorg/bouncycastle/asn1/ASN1GeneralizedTime;
      16: invokestatic  #320                // Method org/bouncycastle/cert/CertUtils.recoverDate:(Lorg/bouncycastle/asn1/ASN1GeneralizedTime;)Ljava/util/Date;
      19: invokevirtual #283                // Method java/util/Date.before:(Ljava/util/Date;)Z
      22: ifne          43
      25: aload_1
      26: aload_2
      27: invokevirtual #290                // Method org/bouncycastle/asn1/x509/AttCertValidityPeriod.getNotAfterTime:()Lorg/bouncycastle/asn1/ASN1GeneralizedTime;
      30: invokestatic  #320                // Method org/bouncycastle/cert/CertUtils.recoverDate:(Lorg/bouncycastle/asn1/ASN1GeneralizedTime;)Ljava/util/Date;
      33: invokevirtual #282                // Method java/util/Date.after:(Ljava/util/Date;)Z
      36: ifne          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public boolean isSignatureValid(org.bouncycastle.operator.ContentVerifierProvider) throws org.bouncycastle.cert.CertException;
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #299                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getAcinfo:()Lorg/bouncycastle/asn1/x509/AttributeCertificateInfo;
       7: astore_2
       8: aload_2
       9: invokevirtual #305                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getSignature:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
      12: aload_0
      13: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
      16: invokevirtual #298                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getSignatureAlgorithm:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
      19: invokestatic  #324                // Method org/bouncycastle/cert/CertUtils.isAlgIdEqual:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;)Z
      22: ifne          35
      25: new           #143                // class org/bouncycastle/cert/CertException
      28: dup
      29: ldc           #3                  // String signature invalid - algorithm identifier mismatch
      31: invokespecial #315                // Method org/bouncycastle/cert/CertException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_1
      36: aload_2
      37: invokevirtual #305                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.getSignature:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
      40: invokeinterface #335,  2          // InterfaceMethod org/bouncycastle/operator/ContentVerifierProvider.get:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;)Lorg/bouncycastle/operator/ContentVerifier;
      45: astore_3
      46: aload_3
      47: invokeinterface #334,  1          // InterfaceMethod org/bouncycastle/operator/ContentVerifier.getOutputStream:()Ljava/io/OutputStream;
      52: astore        4
      54: aload_2
      55: aload         4
      57: ldc           #1                  // String DER
      59: invokevirtual #310                // Method org/bouncycastle/asn1/x509/AttributeCertificateInfo.encodeTo:(Ljava/io/OutputStream;Ljava/lang/String;)V
      62: aload         4
      64: invokevirtual #273                // Method java/io/OutputStream.close:()V
      67: goto          105
      70: astore        4
      72: new           #143                // class org/bouncycastle/cert/CertException
      75: dup
      76: new           #127                // class java/lang/StringBuilder
      79: dup
      80: invokespecial #278                // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #4                  // String unable to process signature:
      85: invokevirtual #280                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload         4
      90: invokevirtual #275                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      93: invokevirtual #280                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: aload         4
     101: invokespecial #316                // Method org/bouncycastle/cert/CertException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     104: athrow
     105: aload_3
     106: aload_0
     107: invokevirtual #326                // Method getSignature:()[B
     110: invokeinterface #333,  2          // InterfaceMethod org/bouncycastle/operator/ContentVerifier.verify:([B)Z
     115: ireturn
    Exception table:
       from    to  target type
          35    67    70   Class java/lang/Exception

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #146                // class org/bouncycastle/cert/X509AttributeCertificateHolder
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #146                // class org/bouncycastle/cert/X509AttributeCertificateHolder
      20: astore_2
      21: aload_0
      22: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
      25: aload_2
      26: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
      29: invokevirtual #296                // Method org/bouncycastle/asn1/x509/AttributeCertificate.equals:(Ljava/lang/Object;)Z
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #267                // Field attrCert:Lorg/bouncycastle/asn1/x509/AttributeCertificate;
       4: invokevirtual #294                // Method org/bouncycastle/asn1/x509/AttributeCertificate.hashCode:()I
       7: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #269                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #270                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       9: invokestatic  #300                // Method org/bouncycastle/asn1/x509/AttributeCertificate.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/AttributeCertificate;
      12: invokespecial #328                // Method init:(Lorg/bouncycastle/asn1/x509/AttributeCertificate;)V
      15: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #271                // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #325                // Method getEncoded:()[B
       9: invokevirtual #272                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      12: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #136                // class org/bouncycastle/asn1/x509/Attribute
       4: putstatic     #266                // Field EMPTY_ARRAY:[Lorg/bouncycastle/asn1/x509/Attribute;
       7: return
}
