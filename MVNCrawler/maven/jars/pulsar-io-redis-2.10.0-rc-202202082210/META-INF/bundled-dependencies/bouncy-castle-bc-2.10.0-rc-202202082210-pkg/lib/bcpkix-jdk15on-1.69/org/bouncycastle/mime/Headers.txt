public class org.bouncycastle.mime.Headers implements org.bouncycastle.util.Iterable<java.lang.String> {
  private final java.util.Map<java.lang.String, java.util.List> headers;

  private final java.util.List<java.lang.String> headersAsPresented;

  private final java.lang.String contentTransferEncoding;

  private java.lang.String boundary;

  private boolean multipart;

  private java.lang.String contentType;

  private java.util.Map<java.lang.String, java.lang.String> contentTypeParameters;

  private static java.util.List<java.lang.String> parseHeaders(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #94                 // class java/util/ArrayList
       3: dup
       4: invokespecial #219                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: new           #104                // class org/bouncycastle/mime/LineReader
      11: dup
      12: aload_0
      13: invokespecial #229                // Method org/bouncycastle/mime/LineReader."<init>":(Ljava/io/InputStream;)V
      16: astore_3
      17: aload_3
      18: invokevirtual #230                // Method org/bouncycastle/mime/LineReader.readLine:()Ljava/lang/String;
      21: dup
      22: astore_1
      23: ifnull        47
      26: aload_1
      27: invokevirtual #208                // Method java/lang/String.length:()I
      30: ifne          36
      33: goto          47
      36: aload_2
      37: aload_1
      38: invokeinterface #236,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: goto          17
      47: aload_2
      48: areturn

  public org.bouncycastle.mime.Headers(java.io.InputStream, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #226                // Method parseHeaders:(Ljava/io/InputStream;)Ljava/util/List;
       5: aload_2
       6: invokespecial #225                // Method "<init>":(Ljava/util/List;Ljava/lang/String;)V
       9: return

  public org.bouncycastle.mime.Headers(java.util.List<java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #206                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #101                // class java/util/TreeMap
       8: dup
       9: getstatic     #193                // Field java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
      12: invokespecial #222                // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      15: putfield      #201                // Field headers:Ljava/util/Map;
      18: aload_0
      19: aload_1
      20: putfield      #199                // Field headersAsPresented:Ljava/util/List;
      23: ldc           #1                  // String
      25: astore_3
      26: aload_1
      27: invokeinterface #237,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      32: astore        4
      34: aload         4
      36: invokeinterface #232,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          148
      44: aload         4
      46: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #92                 // class java/lang/String
      54: astore        5
      56: aload         5
      58: ldc           #3                  // String
      60: invokevirtual #214                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      63: ifne          76
      66: aload         5
      68: ldc           #2                  // String \t
      70: invokevirtual #214                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      73: ifeq          102
      76: new           #93                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #216                // Method java/lang/StringBuilder."<init>":()V
      83: aload_3
      84: invokevirtual #218                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload         5
      89: invokevirtual #210                // Method java/lang/String.trim:()Ljava/lang/String;
      92: invokevirtual #218                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #217                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: astore_3
      99: goto          145
     102: aload_3
     103: invokevirtual #208                // Method java/lang/String.length:()I
     106: ifeq          142
     109: aload_0
     110: aload_3
     111: iconst_0
     112: aload_3
     113: bipush        58
     115: invokevirtual #209                // Method java/lang/String.indexOf:(I)I
     118: invokevirtual #212                // Method java/lang/String.substring:(II)Ljava/lang/String;
     121: invokevirtual #210                // Method java/lang/String.trim:()Ljava/lang/String;
     124: aload_3
     125: aload_3
     126: bipush        58
     128: invokevirtual #209                // Method java/lang/String.indexOf:(I)I
     131: iconst_1
     132: iadd
     133: invokevirtual #211                // Method java/lang/String.substring:(I)Ljava/lang/String;
     136: invokevirtual #210                // Method java/lang/String.trim:()Ljava/lang/String;
     139: invokespecial #224                // Method put:(Ljava/lang/String;Ljava/lang/String;)V
     142: aload         5
     144: astore_3
     145: goto          34
     148: aload_3
     149: invokevirtual #210                // Method java/lang/String.trim:()Ljava/lang/String;
     152: invokevirtual #208                // Method java/lang/String.length:()I
     155: ifeq          191
     158: aload_0
     159: aload_3
     160: iconst_0
     161: aload_3
     162: bipush        58
     164: invokevirtual #209                // Method java/lang/String.indexOf:(I)I
     167: invokevirtual #212                // Method java/lang/String.substring:(II)Ljava/lang/String;
     170: invokevirtual #210                // Method java/lang/String.trim:()Ljava/lang/String;
     173: aload_3
     174: aload_3
     175: bipush        58
     177: invokevirtual #209                // Method java/lang/String.indexOf:(I)I
     180: iconst_1
     181: iadd
     182: invokevirtual #211                // Method java/lang/String.substring:(I)Ljava/lang/String;
     185: invokevirtual #210                // Method java/lang/String.trim:()Ljava/lang/String;
     188: invokespecial #224                // Method put:(Ljava/lang/String;Ljava/lang/String;)V
     191: aload_0
     192: ldc           #6                  // String Content-Type
     194: invokevirtual #223                // Method getValues:(Ljava/lang/String;)[Ljava/lang/String;
     197: ifnonnull     205
     200: ldc           #10                 // String text/plain
     202: goto          213
     205: aload_0
     206: ldc           #6                  // String Content-Type
     208: invokevirtual #223                // Method getValues:(Ljava/lang/String;)[Ljava/lang/String;
     211: iconst_0
     212: aaload
     213: astore        4
     215: aload         4
     217: bipush        59
     219: invokevirtual #209                // Method java/lang/String.indexOf:(I)I
     222: istore        5
     224: iload         5
     226: ifge          245
     229: aload_0
     230: aload         4
     232: putfield      #198                // Field contentType:Ljava/lang/String;
     235: aload_0
     236: getstatic     #194                // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
     239: putfield      #200                // Field contentTypeParameters:Ljava/util/Map;
     242: goto          277
     245: aload_0
     246: aload         4
     248: iconst_0
     249: iload         5
     251: invokevirtual #212                // Method java/lang/String.substring:(II)Ljava/lang/String;
     254: putfield      #198                // Field contentType:Ljava/lang/String;
     257: aload_0
     258: aload_0
     259: aload         4
     261: iload         5
     263: iconst_1
     264: iadd
     265: invokevirtual #211                // Method java/lang/String.substring:(I)Ljava/lang/String;
     268: invokevirtual #210                // Method java/lang/String.trim:()Ljava/lang/String;
     271: invokespecial #227                // Method createContentTypeParameters:(Ljava/lang/String;)Ljava/util/Map;
     274: putfield      #200                // Field contentTypeParameters:Ljava/util/Map;
     277: aload_0
     278: aload_0
     279: ldc           #5                  // String Content-Transfer-Encoding
     281: invokevirtual #223                // Method getValues:(Ljava/lang/String;)[Ljava/lang/String;
     284: ifnonnull     291
     287: aload_2
     288: goto          299
     291: aload_0
     292: ldc           #5                  // String Content-Transfer-Encoding
     294: invokevirtual #223                // Method getValues:(Ljava/lang/String;)[Ljava/lang/String;
     297: iconst_0
     298: aaload
     299: putfield      #197                // Field contentTransferEncoding:Ljava/lang/String;
     302: aload_0
     303: getfield      #198                // Field contentType:Ljava/lang/String;
     306: ldc           #9                  // String multipart
     308: invokevirtual #213                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
     311: iflt          355
     314: aload_0
     315: iconst_1
     316: putfield      #195                // Field multipart:Z
     319: aload_0
     320: getfield      #200                // Field contentTypeParameters:Ljava/util/Map;
     323: ldc           #7                  // String boundary
     325: invokeinterface #241,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     330: checkcast     #92                 // class java/lang/String
     333: astore        6
     335: aload_0
     336: aload         6
     338: iconst_1
     339: aload         6
     341: invokevirtual #208                // Method java/lang/String.length:()I
     344: iconst_1
     345: isub
     346: invokevirtual #212                // Method java/lang/String.substring:(II)Ljava/lang/String;
     349: putfield      #196                // Field boundary:Ljava/lang/String;
     352: goto          365
     355: aload_0
     356: aconst_null
     357: putfield      #196                // Field boundary:Ljava/lang/String;
     360: aload_0
     361: iconst_0
     362: putfield      #195                // Field multipart:Z
     365: return

  public java.util.Map<java.lang.String, java.lang.String> getContentTypeAttributes();
    Code:
       0: aload_0
       1: getfield      #200                // Field contentTypeParameters:Ljava/util/Map;
       4: areturn

  private java.util.Map<java.lang.String, java.lang.String> createContentTypeParameters(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #4                  // String ;
       3: invokevirtual #215                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_2
       7: new           #97                 // class java/util/LinkedHashMap
      10: dup
      11: invokespecial #221                // Method java/util/LinkedHashMap."<init>":()V
      14: astore_3
      15: iconst_0
      16: istore        4
      18: iload         4
      20: aload_2
      21: arraylength
      22: if_icmpeq     91
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: aload         5
      33: bipush        61
      35: invokevirtual #209                // Method java/lang/String.indexOf:(I)I
      38: istore        6
      40: iload         6
      42: ifge          55
      45: new           #90                 // class java/lang/IllegalArgumentException
      48: dup
      49: ldc           #8                  // String malformed Content-Type header
      51: invokespecial #205                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_3
      56: aload         5
      58: iconst_0
      59: iload         6
      61: invokevirtual #212                // Method java/lang/String.substring:(II)Ljava/lang/String;
      64: invokevirtual #210                // Method java/lang/String.trim:()Ljava/lang/String;
      67: aload         5
      69: iload         6
      71: iconst_1
      72: iadd
      73: invokevirtual #211                // Method java/lang/String.substring:(I)Ljava/lang/String;
      76: invokevirtual #210                // Method java/lang/String.trim:()Ljava/lang/String;
      79: invokeinterface #242,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: iinc          4, 1
      88: goto          18
      91: aload_3
      92: invokestatic  #220                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      95: areturn

  public boolean isMultipart();
    Code:
       0: aload_0
       1: getfield      #195                // Field multipart:Z
       4: ireturn

  public java.lang.String getBoundary();
    Code:
       0: aload_0
       1: getfield      #196                // Field boundary:Ljava/lang/String;
       4: areturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #198                // Field contentType:Ljava/lang/String;
       4: areturn

  public java.lang.String getContentTransferEncoding();
    Code:
       0: aload_0
       1: getfield      #197                // Field contentTransferEncoding:Ljava/lang/String;
       4: areturn

  private void put(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: new           #103                // class org/bouncycastle/mime/Headers$KV
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #228                // Method org/bouncycastle/mime/Headers$KV."<init>":(Lorg/bouncycastle/mime/Headers;Ljava/lang/String;Ljava/lang/String;)V
      14: astore        4
      16: aload_0
      17: getfield      #201                // Field headers:Ljava/util/Map;
      20: aload_1
      21: invokeinterface #241,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #98                 // class java/util/List
      29: astore        5
      31: aload         5
      33: ifnonnull     58
      36: new           #94                 // class java/util/ArrayList
      39: dup
      40: invokespecial #219                // Method java/util/ArrayList."<init>":()V
      43: astore        5
      45: aload_0
      46: getfield      #201                // Field headers:Ljava/util/Map;
      49: aload_1
      50: aload         5
      52: invokeinterface #242,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload         5
      60: aload         4
      62: invokeinterface #236,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      67: pop
      68: aload_3
      69: monitorexit
      70: goto          80
      73: astore        6
      75: aload_3
      76: monitorexit
      77: aload         6
      79: athrow
      80: return
    Exception table:
       from    to  target type
           4    70    73   any
          73    77    73   any

  public java.util.Iterator<java.lang.String> getNames();
    Code:
       0: aload_0
       1: getfield      #201                // Field headers:Ljava/util/Map;
       4: invokeinterface #240,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #243,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: areturn

  public java.lang.String[] getValues(java.lang.String);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #201                // Field headers:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #241,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #98                 // class java/util/List
      17: astore_3
      18: aload_3
      19: ifnonnull     26
      22: aconst_null
      23: aload_2
      24: monitorexit
      25: areturn
      26: aload_3
      27: invokeinterface #234,  1          // InterfaceMethod java/util/List.size:()I
      32: anewarray     #92                 // class java/lang/String
      35: astore        4
      37: iconst_0
      38: istore        5
      40: iload         5
      42: aload_3
      43: invokeinterface #234,  1          // InterfaceMethod java/util/List.size:()I
      48: if_icmpge     76
      51: aload         4
      53: iload         5
      55: aload_3
      56: iload         5
      58: invokeinterface #235,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      63: checkcast     #103                // class org/bouncycastle/mime/Headers$KV
      66: getfield      #202                // Field org/bouncycastle/mime/Headers$KV.value:Ljava/lang/String;
      69: aastore
      70: iinc          5, 1
      73: goto          40
      76: aload         4
      78: aload_2
      79: monitorexit
      80: areturn
      81: astore        6
      83: aload_2
      84: monitorexit
      85: aload         6
      87: athrow
    Exception table:
       from    to  target type
           4    25    81   any
          26    80    81   any
          81    85    81   any

  public boolean isEmpty();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #201                // Field headers:Ljava/util/Map;
       8: invokeinterface #238,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      13: aload_1
      14: monitorexit
      15: ireturn
      16: astore_2
      17: aload_1
      18: monitorexit
      19: aload_2
      20: athrow
    Exception table:
       from    to  target type
           4    15    16   any
          16    19    16   any

  public boolean containsKey(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #201                // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #239,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Iterator<java.lang.String> iterator();
    Code:
       0: aload_0
       1: getfield      #201                // Field headers:Ljava/util/Map;
       4: invokeinterface #240,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #243,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: areturn

  public void dumpHeaders(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #199                // Field headersAsPresented:Ljava/util/List;
       4: invokeinterface #237,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #232,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          50
      19: aload_1
      20: aload_2
      21: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: invokevirtual #207                // Method java/lang/Object.toString:()Ljava/lang/String;
      29: invokestatic  #231                // Method org/bouncycastle/util/Strings.toUTF8ByteArray:(Ljava/lang/String;)[B
      32: invokevirtual #204                // Method java/io/OutputStream.write:([B)V
      35: aload_1
      36: bipush        13
      38: invokevirtual #203                // Method java/io/OutputStream.write:(I)V
      41: aload_1
      42: bipush        10
      44: invokevirtual #203                // Method java/io/OutputStream.write:(I)V
      47: goto          10
      50: return
}
