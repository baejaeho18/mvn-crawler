class org.bouncycastle.asn1.StreamUtil {
  private static final long MAX_MEMORY;

  org.bouncycastle.asn1.StreamUtil();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method java/lang/Object."<init>":()V
       4: return

  static int findLimit(java.io.InputStream);
    Code:
       0: aload_0
       1: instanceof    #37                 // class org/bouncycastle/asn1/LimitedInputStream
       4: ifeq          15
       7: aload_0
       8: checkcast     #37                 // class org/bouncycastle/asn1/LimitedInputStream
      11: invokevirtual #58                 // Method org/bouncycastle/asn1/LimitedInputStream.getLimit:()I
      14: ireturn
      15: aload_0
      16: instanceof    #36                 // class org/bouncycastle/asn1/ASN1InputStream
      19: ifeq          30
      22: aload_0
      23: checkcast     #36                 // class org/bouncycastle/asn1/ASN1InputStream
      26: invokevirtual #57                 // Method org/bouncycastle/asn1/ASN1InputStream.getLimit:()I
      29: ireturn
      30: aload_0
      31: instanceof    #30                 // class java/io/ByteArrayInputStream
      34: ifeq          45
      37: aload_0
      38: checkcast     #30                 // class java/io/ByteArrayInputStream
      41: invokevirtual #51                 // Method java/io/ByteArrayInputStream.available:()I
      44: ireturn
      45: aload_0
      46: instanceof    #31                 // class java/io/FileInputStream
      49: ifeq          90
      52: aload_0
      53: checkcast     #31                 // class java/io/FileInputStream
      56: invokevirtual #52                 // Method java/io/FileInputStream.getChannel:()Ljava/nio/channels/FileChannel;
      59: astore_1
      60: aload_1
      61: ifnull        71
      64: aload_1
      65: invokevirtual #56                 // Method java/nio/channels/FileChannel.size:()J
      68: goto          74
      71: ldc2_w        #28                 // long 2147483647l
      74: lstore_2
      75: lload_2
      76: ldc2_w        #28                 // long 2147483647l
      79: lcmp
      80: ifge          86
      83: lload_2
      84: l2i
      85: ireturn
      86: goto          90
      89: astore_1
      90: getstatic     #50                 // Field MAX_MEMORY:J
      93: ldc2_w        #28                 // long 2147483647l
      96: lcmp
      97: ifle          103
     100: ldc           #1                  // int 2147483647
     102: ireturn
     103: getstatic     #50                 // Field MAX_MEMORY:J
     106: l2i
     107: ireturn
    Exception table:
       from    to  target type
          52    85    89   Class java/io/IOException

  static int calculateBodyLength(int);
    Code:
       0: iconst_1
       1: istore_1
       2: iload_0
       3: bipush        127
       5: if_icmple     49
       8: iconst_1
       9: istore_2
      10: iload_0
      11: istore_3
      12: iload_3
      13: bipush        8
      15: iushr
      16: dup
      17: istore_3
      18: ifeq          27
      21: iinc          2, 1
      24: goto          12
      27: iload_2
      28: iconst_1
      29: isub
      30: bipush        8
      32: imul
      33: istore        4
      35: iload         4
      37: iflt          49
      40: iinc          1, 1
      43: iinc          4, -8
      46: goto          35
      49: iload_1
      50: ireturn

  static int calculateTagLength(int) throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore_1
       2: iload_0
       3: bipush        31
       5: if_icmplt     72
       8: iload_0
       9: sipush        128
      12: if_icmpge     21
      15: iinc          1, 1
      18: goto          72
      21: iconst_5
      22: newarray       byte
      24: astore_2
      25: aload_2
      26: arraylength
      27: istore_3
      28: aload_2
      29: iinc          3, -1
      32: iload_3
      33: iload_0
      34: bipush        127
      36: iand
      37: i2b
      38: bastore
      39: iload_0
      40: bipush        7
      42: ishr
      43: istore_0
      44: aload_2
      45: iinc          3, -1
      48: iload_3
      49: iload_0
      50: bipush        127
      52: iand
      53: sipush        128
      56: ior
      57: i2b
      58: bastore
      59: iload_0
      60: bipush        127
      62: if_icmpgt     39
      65: iload_1
      66: aload_2
      67: arraylength
      68: iload_3
      69: isub
      70: iadd
      71: istore_1
      72: iload_1
      73: ireturn

  static {};
    Code:
       0: invokestatic  #55                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: invokevirtual #54                 // Method java/lang/Runtime.maxMemory:()J
       6: putstatic     #50                 // Field MAX_MEMORY:J
       9: return
}
