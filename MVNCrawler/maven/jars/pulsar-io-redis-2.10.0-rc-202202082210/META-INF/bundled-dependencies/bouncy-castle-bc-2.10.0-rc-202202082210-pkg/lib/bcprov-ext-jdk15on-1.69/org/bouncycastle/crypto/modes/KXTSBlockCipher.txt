public class org.bouncycastle.crypto.modes.KXTSBlockCipher extends org.bouncycastle.crypto.BufferedBlockCipher {
  private static final long RED_POLY_128;

  private static final long RED_POLY_256;

  private static final long RED_POLY_512;

  private final int blockSize;

  private final long reductionPolynomial;

  private final long[] tw_init;

  private final long[] tw_current;

  private int counter;

  protected static long getReductionPolynomial(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 3
                    16: 36
                    32: 40
                    64: 44
               default: 48
          }
      36: ldc2_w        #69                 // long 135l
      39: lreturn
      40: ldc2_w        #73                 // long 1061l
      43: lreturn
      44: ldc2_w        #71                 // long 293l
      47: lreturn
      48: new           #75                 // class java/lang/IllegalArgumentException
      51: dup
      52: ldc           #5                  // String Only 128, 256, and 512 -bit block sizes supported
      54: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow

  public org.bouncycastle.crypto.modes.KXTSBlockCipher(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: invokespecial #120                // Method org/bouncycastle/crypto/BufferedBlockCipher."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #116                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       9: aload_0
      10: aload_1
      11: invokeinterface #131,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      16: putfield      #111                // Field blockSize:I
      19: aload_0
      20: aload_0
      21: getfield      #111                // Field blockSize:I
      24: invokestatic  #124                // Method getReductionPolynomial:(I)J
      27: putfield      #113                // Field reductionPolynomial:J
      30: aload_0
      31: aload_0
      32: getfield      #111                // Field blockSize:I
      35: iconst_3
      36: iushr
      37: newarray       long
      39: putfield      #115                // Field tw_init:[J
      42: aload_0
      43: aload_0
      44: getfield      #111                // Field blockSize:I
      47: iconst_3
      48: iushr
      49: newarray       long
      51: putfield      #114                // Field tw_current:[J
      54: aload_0
      55: iconst_m1
      56: putfield      #112                // Field counter:I
      59: return

  public int getOutputSize(int);
    Code:
       0: iload_1
       1: ireturn

  public int getUpdateOutputSize(int);
    Code:
       0: iload_1
       1: ireturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #83                 // class org/bouncycastle/crypto/params/ParametersWithIV
       4: ifne          17
       7: new           #75                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #4                  // String Invalid parameters passed
      13: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_2
      18: checkcast     #83                 // class org/bouncycastle/crypto/params/ParametersWithIV
      21: astore_3
      22: aload_3
      23: invokevirtual #128                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      26: astore_2
      27: aload_3
      28: invokevirtual #127                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      31: astore        4
      33: aload         4
      35: arraylength
      36: aload_0
      37: getfield      #111                // Field blockSize:I
      40: if_icmpeq     53
      43: new           #75                 // class java/lang/IllegalArgumentException
      46: dup
      47: ldc           #2                  // String Currently only support IVs of exactly one block
      49: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_0
      54: getfield      #111                // Field blockSize:I
      57: newarray       byte
      59: astore        5
      61: aload         4
      63: iconst_0
      64: aload         5
      66: iconst_0
      67: aload_0
      68: getfield      #111                // Field blockSize:I
      71: invokestatic  #119                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      74: aload_0
      75: getfield      #116                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      78: iconst_1
      79: aload_2
      80: invokeinterface #134,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      85: aload_0
      86: getfield      #116                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      89: aload         5
      91: iconst_0
      92: aload         5
      94: iconst_0
      95: invokeinterface #133,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     100: pop
     101: aload_0
     102: getfield      #116                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     105: iload_1
     106: aload_2
     107: invokeinterface #134,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     112: aload         5
     114: iconst_0
     115: aload_0
     116: getfield      #115                // Field tw_init:[J
     119: invokestatic  #129                // Method org/bouncycastle/util/Pack.littleEndianToLong:([BI[J)V
     122: aload_0
     123: getfield      #115                // Field tw_init:[J
     126: iconst_0
     127: aload_0
     128: getfield      #114                // Field tw_current:[J
     131: iconst_0
     132: aload_0
     133: getfield      #115                // Field tw_init:[J
     136: arraylength
     137: invokestatic  #119                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     140: aload_0
     141: iconst_0
     142: putfield      #112                // Field counter:I
     145: return

  public int processByte(byte, byte[], int);
    Code:
       0: new           #76                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #8                  // String unsupported operation
       6: invokespecial #118                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int processBytes(byte[], int, int, byte[], int);
    Code:
       0: aload_1
       1: arraylength
       2: iload_2
       3: isub
       4: iload_3
       5: if_icmpge     18
       8: new           #80                 // class org/bouncycastle/crypto/DataLengthException
      11: dup
      12: ldc           #3                  // String Input buffer too short
      14: invokespecial #121                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload         4
      20: arraylength
      21: iload_2
      22: isub
      23: iload_3
      24: if_icmpge     37
      27: new           #81                 // class org/bouncycastle/crypto/OutputLengthException
      30: dup
      31: ldc           #6                  // String Output buffer too short
      33: invokespecial #122                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_3
      38: aload_0
      39: getfield      #111                // Field blockSize:I
      42: irem
      43: ifeq          56
      46: new           #75                 // class java/lang/IllegalArgumentException
      49: dup
      50: ldc           #7                  // String Partial blocks not supported
      52: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: iconst_0
      57: istore        6
      59: iload         6
      61: iload_3
      62: if_icmpge     93
      65: aload_0
      66: aload_1
      67: iload_2
      68: iload         6
      70: iadd
      71: aload         4
      73: iload         5
      75: iload         6
      77: iadd
      78: invokespecial #126                // Method processBlock:([BI[BI)V
      81: iload         6
      83: aload_0
      84: getfield      #111                // Field blockSize:I
      87: iadd
      88: istore        6
      90: goto          59
      93: iload_3
      94: ireturn

  private void processBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: getfield      #112                // Field counter:I
       4: iconst_m1
       5: if_icmpne     18
       8: new           #76                 // class java/lang/IllegalStateException
      11: dup
      12: ldc           #1                  // String Attempt to process too many blocks
      14: invokespecial #118                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: dup
      20: getfield      #112                // Field counter:I
      23: iconst_1
      24: iadd
      25: putfield      #112                // Field counter:I
      28: aload_0
      29: getfield      #113                // Field reductionPolynomial:J
      32: aload_0
      33: getfield      #114                // Field tw_current:[J
      36: invokestatic  #125                // Method GF_double:(J[J)V
      39: aload_0
      40: getfield      #111                // Field blockSize:I
      43: newarray       byte
      45: astore        5
      47: aload_0
      48: getfield      #114                // Field tw_current:[J
      51: aload         5
      53: iconst_0
      54: invokestatic  #130                // Method org/bouncycastle/util/Pack.longToLittleEndian:([J[BI)V
      57: aload_0
      58: getfield      #111                // Field blockSize:I
      61: newarray       byte
      63: astore        6
      65: aload         5
      67: iconst_0
      68: aload         6
      70: iconst_0
      71: aload_0
      72: getfield      #111                // Field blockSize:I
      75: invokestatic  #119                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      78: iconst_0
      79: istore        7
      81: iload         7
      83: aload_0
      84: getfield      #111                // Field blockSize:I
      87: if_icmpge     111
      90: aload         6
      92: iload         7
      94: dup2
      95: baload
      96: aload_1
      97: iload_2
      98: iload         7
     100: iadd
     101: baload
     102: ixor
     103: i2b
     104: bastore
     105: iinc          7, 1
     108: goto          81
     111: aload_0
     112: getfield      #116                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     115: aload         6
     117: iconst_0
     118: aload         6
     120: iconst_0
     121: invokeinterface #133,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     126: pop
     127: iconst_0
     128: istore        7
     130: iload         7
     132: aload_0
     133: getfield      #111                // Field blockSize:I
     136: if_icmpge     164
     139: aload_3
     140: iload         4
     142: iload         7
     144: iadd
     145: aload         6
     147: iload         7
     149: baload
     150: aload         5
     152: iload         7
     154: baload
     155: ixor
     156: i2b
     157: bastore
     158: iinc          7, 1
     161: goto          130
     164: return

  public int doFinal(byte[], int);
    Code:
       0: aload_0
       1: invokevirtual #123                // Method reset:()V
       4: iconst_0
       5: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #116                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: invokeinterface #132,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
       9: aload_0
      10: getfield      #115                // Field tw_init:[J
      13: iconst_0
      14: aload_0
      15: getfield      #114                // Field tw_current:[J
      18: iconst_0
      19: aload_0
      20: getfield      #115                // Field tw_init:[J
      23: arraylength
      24: invokestatic  #119                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      27: aload_0
      28: iconst_0
      29: putfield      #112                // Field counter:I
      32: return

  private static void GF_double(long, long[]);
    Code:
       0: lconst_0
       1: lstore_3
       2: iconst_0
       3: istore        5
       5: iload         5
       7: aload_2
       8: arraylength
       9: if_icmpge     44
      12: aload_2
      13: iload         5
      15: laload
      16: lstore        6
      18: lload         6
      20: bipush        63
      22: lushr
      23: lstore        8
      25: aload_2
      26: iload         5
      28: lload         6
      30: iconst_1
      31: lshl
      32: lload_3
      33: lxor
      34: lastore
      35: lload         8
      37: lstore_3
      38: iinc          5, 1
      41: goto          5
      44: aload_2
      45: iconst_0
      46: dup2
      47: laload
      48: lload_0
      49: lload_3
      50: lneg
      51: land
      52: lxor
      53: lastore
      54: return
}
