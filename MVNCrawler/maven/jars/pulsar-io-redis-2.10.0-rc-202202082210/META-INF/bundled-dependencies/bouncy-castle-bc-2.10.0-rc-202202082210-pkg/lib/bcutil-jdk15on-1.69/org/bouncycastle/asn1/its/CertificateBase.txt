public class org.bouncycastle.asn1.its.CertificateBase extends org.bouncycastle.asn1.ASN1Object {
  private org.bouncycastle.asn1.its.CertificateType type;

  private byte[] version;

  protected org.bouncycastle.asn1.its.CertificateBase(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #57                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: return

  public static org.bouncycastle.asn1.its.CertificateBase getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #33                 // class org/bouncycastle/asn1/its/ImplicitCertificate
       4: ifeq          12
       7: aload_0
       8: checkcast     #33                 // class org/bouncycastle/asn1/its/ImplicitCertificate
      11: areturn
      12: aload_0
      13: instanceof    #32                 // class org/bouncycastle/asn1/its/ExplicitCertificate
      16: ifeq          24
      19: aload_0
      20: checkcast     #32                 // class org/bouncycastle/asn1/its/ExplicitCertificate
      23: areturn
      24: aload_0
      25: ifnull        81
      28: aload_0
      29: invokestatic  #59                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      32: astore_1
      33: aload_1
      34: iconst_1
      35: invokevirtual #58                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      38: getstatic     #53                 // Field org/bouncycastle/asn1/its/CertificateType.Implicit:Lorg/bouncycastle/asn1/its/CertificateType;
      41: invokevirtual #55                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      44: ifeq          52
      47: aload_1
      48: invokestatic  #62                 // Method org/bouncycastle/asn1/its/ImplicitCertificate.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/its/CertificateBase;
      51: areturn
      52: aload_1
      53: iconst_1
      54: invokevirtual #58                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      57: getstatic     #52                 // Field org/bouncycastle/asn1/its/CertificateType.Explicit:Lorg/bouncycastle/asn1/its/CertificateType;
      60: invokevirtual #55                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifeq          71
      66: aload_1
      67: invokestatic  #61                 // Method org/bouncycastle/asn1/its/ExplicitCertificate.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/its/CertificateBase;
      70: areturn
      71: new           #24                 // class java/lang/IllegalArgumentException
      74: dup
      75: ldc           #1                  // String unknown certificate type
      77: invokespecial #54                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: aconst_null
      82: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #26                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: invokespecial #56                 // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
       7: astore_1
       8: new           #29                 // class org/bouncycastle/asn1/DERSequence
      11: dup
      12: aload_1
      13: invokespecial #60                 // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      16: areturn
}
