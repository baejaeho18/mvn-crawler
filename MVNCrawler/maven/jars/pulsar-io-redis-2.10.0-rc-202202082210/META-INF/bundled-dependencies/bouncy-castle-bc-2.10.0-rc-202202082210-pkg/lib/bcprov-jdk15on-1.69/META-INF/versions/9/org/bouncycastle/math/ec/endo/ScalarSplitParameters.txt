Compiled from "ScalarSplitParameters.java"
public class org.bouncycastle.math.ec.endo.ScalarSplitParameters {
  protected final java.math.BigInteger v1A;

  protected final java.math.BigInteger v1B;

  protected final java.math.BigInteger v2A;

  protected final java.math.BigInteger v2B;

  protected final java.math.BigInteger g1;

  protected final java.math.BigInteger g2;

  protected final int bits;

  private static void checkVector(java.math.BigInteger[], java.lang.String);
    Code:
       0: aload_0
       1: ifnull        22
       4: aload_0
       5: arraylength
       6: iconst_2
       7: if_icmpne     22
      10: aload_0
      11: iconst_0
      12: aaload
      13: ifnull        22
      16: aload_0
      17: iconst_1
      18: aaload
      19: ifnonnull     36
      22: new           #1                  // class java/lang/IllegalArgumentException
      25: dup
      26: aload_1
      27: invokedynamic #2,  0              // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      32: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  public org.bouncycastle.math.ec.endo.ScalarSplitParameters(java.math.BigInteger[], java.math.BigInteger[], java.math.BigInteger, java.math.BigInteger, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #5                  // String v1
       7: invokestatic  #6                  // Method checkVector:([Ljava/math/BigInteger;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #7                  // String v2
      13: invokestatic  #6                  // Method checkVector:([Ljava/math/BigInteger;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: iconst_0
      19: aaload
      20: putfield      #8                  // Field v1A:Ljava/math/BigInteger;
      23: aload_0
      24: aload_1
      25: iconst_1
      26: aaload
      27: putfield      #9                  // Field v1B:Ljava/math/BigInteger;
      30: aload_0
      31: aload_2
      32: iconst_0
      33: aaload
      34: putfield      #10                 // Field v2A:Ljava/math/BigInteger;
      37: aload_0
      38: aload_2
      39: iconst_1
      40: aaload
      41: putfield      #11                 // Field v2B:Ljava/math/BigInteger;
      44: aload_0
      45: aload_3
      46: putfield      #12                 // Field g1:Ljava/math/BigInteger;
      49: aload_0
      50: aload         4
      52: putfield      #13                 // Field g2:Ljava/math/BigInteger;
      55: aload_0
      56: iload         5
      58: putfield      #14                 // Field bits:I
      61: return

  public java.math.BigInteger getV1A();
    Code:
       0: aload_0
       1: getfield      #8                  // Field v1A:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getV1B();
    Code:
       0: aload_0
       1: getfield      #9                  // Field v1B:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getV2A();
    Code:
       0: aload_0
       1: getfield      #10                 // Field v2A:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getV2B();
    Code:
       0: aload_0
       1: getfield      #11                 // Field v2B:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getG1();
    Code:
       0: aload_0
       1: getfield      #12                 // Field g1:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getG2();
    Code:
       0: aload_0
       1: getfield      #13                 // Field g2:Ljava/math/BigInteger;
       4: areturn

  public int getBits();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bits:I
       4: ireturn
}
