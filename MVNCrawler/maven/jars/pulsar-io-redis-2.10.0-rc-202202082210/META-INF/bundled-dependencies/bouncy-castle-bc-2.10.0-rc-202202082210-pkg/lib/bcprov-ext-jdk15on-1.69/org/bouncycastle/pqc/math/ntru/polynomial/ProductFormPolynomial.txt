public class org.bouncycastle.pqc.math.ntru.polynomial.ProductFormPolynomial implements org.bouncycastle.pqc.math.ntru.polynomial.Polynomial {
  private org.bouncycastle.pqc.math.ntru.polynomial.SparseTernaryPolynomial f1;

  private org.bouncycastle.pqc.math.ntru.polynomial.SparseTernaryPolynomial f2;

  private org.bouncycastle.pqc.math.ntru.polynomial.SparseTernaryPolynomial f3;

  public org.bouncycastle.pqc.math.ntru.polynomial.ProductFormPolynomial(org.bouncycastle.pqc.math.ntru.polynomial.SparseTernaryPolynomial, org.bouncycastle.pqc.math.ntru.polynomial.SparseTernaryPolynomial, org.bouncycastle.pqc.math.ntru.polynomial.SparseTernaryPolynomial);
    Code:
       0: aload_0
       1: invokespecial #84                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #80                 // Field f1:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
       9: aload_0
      10: aload_2
      11: putfield      #81                 // Field f2:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      14: aload_0
      15: aload_3
      16: putfield      #82                 // Field f3:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      19: return

  public static org.bouncycastle.pqc.math.ntru.polynomial.ProductFormPolynomial generateRandom(int, int, int, int, int, java.security.SecureRandom);
    Code:
       0: iload_0
       1: iload_1
       2: iload_1
       3: aload         5
       5: invokestatic  #100                // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.generateRandom:(IIILjava/security/SecureRandom;)Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
       8: astore        6
      10: iload_0
      11: iload_2
      12: iload_2
      13: aload         5
      15: invokestatic  #100                // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.generateRandom:(IIILjava/security/SecureRandom;)Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      18: astore        7
      20: iload_0
      21: iload_3
      22: iload         4
      24: aload         5
      26: invokestatic  #100                // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.generateRandom:(IIILjava/security/SecureRandom;)Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      29: astore        8
      31: new           #40                 // class org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial
      34: dup
      35: aload         6
      37: aload         7
      39: aload         8
      41: invokespecial #92                 // Method "<init>":(Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;)V
      44: areturn

  public static org.bouncycastle.pqc.math.ntru.polynomial.ProductFormPolynomial fromBinary(byte[], int, int, int, int, int) throws java.io.IOException;
    Code:
       0: new           #33                 // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: invokespecial #83                 // Method java/io/ByteArrayInputStream."<init>":([B)V
       8: iload_1
       9: iload_2
      10: iload_3
      11: iload         4
      13: iload         5
      15: invokestatic  #91                 // Method fromBinary:(Ljava/io/InputStream;IIIII)Lorg/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial;
      18: areturn

  public static org.bouncycastle.pqc.math.ntru.polynomial.ProductFormPolynomial fromBinary(java.io.InputStream, int, int, int, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_2
       4: invokestatic  #99                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.fromBinary:(Ljava/io/InputStream;III)Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
       7: astore        6
       9: aload_0
      10: iload_1
      11: iload_3
      12: iload_3
      13: invokestatic  #99                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.fromBinary:(Ljava/io/InputStream;III)Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      16: astore        7
      18: aload_0
      19: iload_1
      20: iload         4
      22: iload         5
      24: invokestatic  #99                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.fromBinary:(Ljava/io/InputStream;III)Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      27: astore        8
      29: new           #40                 // class org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial
      32: dup
      33: aload         6
      35: aload         7
      37: aload         8
      39: invokespecial #92                 // Method "<init>":(Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;)V
      42: areturn

  public byte[] toBinary();
    Code:
       0: aload_0
       1: getfield      #80                 // Field f1:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
       4: invokevirtual #94                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.toBinary:()[B
       7: astore_1
       8: aload_0
       9: getfield      #81                 // Field f2:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      12: invokevirtual #94                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.toBinary:()[B
      15: astore_2
      16: aload_0
      17: getfield      #82                 // Field f3:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      20: invokevirtual #94                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.toBinary:()[B
      23: astore_3
      24: aload_1
      25: aload_1
      26: arraylength
      27: aload_2
      28: arraylength
      29: iadd
      30: aload_3
      31: arraylength
      32: iadd
      33: invokestatic  #101                // Method org/bouncycastle/util/Arrays.copyOf:([BI)[B
      36: astore        4
      38: aload_2
      39: iconst_0
      40: aload         4
      42: aload_1
      43: arraylength
      44: aload_2
      45: arraylength
      46: invokestatic  #86                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      49: aload_3
      50: iconst_0
      51: aload         4
      53: aload_1
      54: arraylength
      55: aload_2
      56: arraylength
      57: iadd
      58: aload_3
      59: arraylength
      60: invokestatic  #86                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      63: aload         4
      65: areturn

  public org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial mult(org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial);
    Code:
       0: aload_0
       1: getfield      #80                 // Field f1:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
       4: aload_1
       5: invokevirtual #98                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
       8: astore_2
       9: aload_0
      10: getfield      #81                 // Field f2:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      13: aload_2
      14: invokevirtual #98                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      17: astore_2
      18: aload_2
      19: aload_0
      20: getfield      #82                 // Field f3:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      23: aload_1
      24: invokevirtual #98                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      27: invokevirtual #89                 // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.add:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
      30: aload_2
      31: areturn

  public org.bouncycastle.pqc.math.ntru.polynomial.BigIntPolynomial mult(org.bouncycastle.pqc.math.ntru.polynomial.BigIntPolynomial);
    Code:
       0: aload_0
       1: getfield      #80                 // Field f1:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
       4: aload_1
       5: invokevirtual #97                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/BigIntPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/BigIntPolynomial;
       8: astore_2
       9: aload_0
      10: getfield      #81                 // Field f2:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      13: aload_2
      14: invokevirtual #97                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/BigIntPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/BigIntPolynomial;
      17: astore_2
      18: aload_2
      19: aload_0
      20: getfield      #82                 // Field f3:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      23: aload_1
      24: invokevirtual #97                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/BigIntPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/BigIntPolynomial;
      27: invokevirtual #87                 // Method org/bouncycastle/pqc/math/ntru/polynomial/BigIntPolynomial.add:(Lorg/bouncycastle/pqc/math/ntru/polynomial/BigIntPolynomial;)V
      30: aload_2
      31: areturn

  public org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial toIntegerPolynomial();
    Code:
       0: aload_0
       1: getfield      #80                 // Field f1:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
       4: aload_0
       5: getfield      #81                 // Field f2:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
       8: invokevirtual #96                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.toIntegerPolynomial:()Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      11: invokevirtual #98                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      14: astore_1
      15: aload_1
      16: aload_0
      17: getfield      #82                 // Field f3:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      20: invokevirtual #96                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.toIntegerPolynomial:()Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      23: invokevirtual #89                 // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.add:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
      26: aload_1
      27: areturn

  public org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial mult(org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #90                 // Method mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
       5: astore_3
       6: aload_3
       7: iload_2
       8: invokevirtual #88                 // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.mod:(I)V
      11: aload_3
      12: areturn

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_2
       2: bipush        31
       4: iload_2
       5: imul
       6: aload_0
       7: getfield      #80                 // Field f1:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      10: ifnonnull     17
      13: iconst_0
      14: goto          24
      17: aload_0
      18: getfield      #80                 // Field f1:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      21: invokevirtual #93                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.hashCode:()I
      24: iadd
      25: istore_2
      26: bipush        31
      28: iload_2
      29: imul
      30: aload_0
      31: getfield      #81                 // Field f2:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      34: ifnonnull     41
      37: iconst_0
      38: goto          48
      41: aload_0
      42: getfield      #81                 // Field f2:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      45: invokevirtual #93                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.hashCode:()I
      48: iadd
      49: istore_2
      50: bipush        31
      52: iload_2
      53: imul
      54: aload_0
      55: getfield      #82                 // Field f3:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      58: ifnonnull     65
      61: iconst_0
      62: goto          72
      65: aload_0
      66: getfield      #82                 // Field f3:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      69: invokevirtual #93                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.hashCode:()I
      72: iadd
      73: istore_2
      74: iload_2
      75: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #85                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #85                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #40                 // class org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial
      30: astore_2
      31: aload_0
      32: getfield      #80                 // Field f1:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      35: ifnonnull     47
      38: aload_2
      39: getfield      #80                 // Field f1:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      42: ifnull        63
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #80                 // Field f1:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      51: aload_2
      52: getfield      #80                 // Field f1:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      55: invokevirtual #95                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.equals:(Ljava/lang/Object;)Z
      58: ifne          63
      61: iconst_0
      62: ireturn
      63: aload_0
      64: getfield      #81                 // Field f2:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      67: ifnonnull     79
      70: aload_2
      71: getfield      #81                 // Field f2:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      74: ifnull        95
      77: iconst_0
      78: ireturn
      79: aload_0
      80: getfield      #81                 // Field f2:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      83: aload_2
      84: getfield      #81                 // Field f2:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      87: invokevirtual #95                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.equals:(Ljava/lang/Object;)Z
      90: ifne          95
      93: iconst_0
      94: ireturn
      95: aload_0
      96: getfield      #82                 // Field f3:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
      99: ifnonnull     111
     102: aload_2
     103: getfield      #82                 // Field f3:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
     106: ifnull        127
     109: iconst_0
     110: ireturn
     111: aload_0
     112: getfield      #82                 // Field f3:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
     115: aload_2
     116: getfield      #82                 // Field f3:Lorg/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial;
     119: invokevirtual #95                 // Method org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.equals:(Ljava/lang/Object;)Z
     122: ifne          127
     125: iconst_0
     126: ireturn
     127: iconst_1
     128: ireturn
}
