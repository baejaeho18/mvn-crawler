class org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher implements org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher {
  private static final java.lang.reflect.Constructor aeadBadTagConstructor;

  private org.bouncycastle.crypto.modes.AEADCipher cipher;

  private static java.lang.reflect.Constructor findExceptionConstructor(java.lang.Class);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #50                 // class java/lang/Class
       5: dup
       6: iconst_0
       7: ldc           #2                  // class java/lang/String
       9: aastore
      10: invokevirtual #97                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      13: areturn
      14: astore_1
      15: aconst_null
      16: areturn
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/Exception

  org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher(org.bouncycastle.crypto.modes.AEADCipher);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
       9: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
       4: iload_1
       5: aload_2
       6: invokeinterface #113,  3          // InterfaceMethod org/bouncycastle/crypto/modes/AEADCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      11: return

  public java.lang.String getAlgorithmName();
    Code:
       0: aload_0
       1: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
       4: instanceof    #60                 // class org/bouncycastle/crypto/modes/AEADBlockCipher
       7: ifeq          28
      10: aload_0
      11: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
      14: checkcast     #60                 // class org/bouncycastle/crypto/modes/AEADBlockCipher
      17: invokeinterface #105,  1          // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.getUnderlyingCipher:()Lorg/bouncycastle/crypto/BlockCipher;
      22: invokeinterface #104,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      27: areturn
      28: aload_0
      29: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
      32: invokeinterface #112,  1          // InterfaceMethod org/bouncycastle/crypto/modes/AEADCipher.getAlgorithmName:()Ljava/lang/String;
      37: areturn

  public boolean wrapOnNoPadding();
    Code:
       0: iconst_0
       1: ireturn

  public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher();
    Code:
       0: aload_0
       1: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
       4: instanceof    #60                 // class org/bouncycastle/crypto/modes/AEADBlockCipher
       7: ifeq          23
      10: aload_0
      11: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
      14: checkcast     #60                 // class org/bouncycastle/crypto/modes/AEADBlockCipher
      17: invokeinterface #105,  1          // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.getUnderlyingCipher:()Lorg/bouncycastle/crypto/BlockCipher;
      22: areturn
      23: aconst_null
      24: areturn

  public int getOutputSize(int);
    Code:
       0: aload_0
       1: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
       4: iload_1
       5: invokeinterface #107,  2          // InterfaceMethod org/bouncycastle/crypto/modes/AEADCipher.getOutputSize:(I)I
      10: ireturn

  public int getUpdateOutputSize(int);
    Code:
       0: aload_0
       1: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
       4: iload_1
       5: invokeinterface #108,  2          // InterfaceMethod org/bouncycastle/crypto/modes/AEADCipher.getUpdateOutputSize:(I)I
      10: ireturn

  public void updateAAD(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #110,  4          // InterfaceMethod org/bouncycastle/crypto/modes/AEADCipher.processAADBytes:([BII)V
      12: return

  public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
       4: iload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #106,  4          // InterfaceMethod org/bouncycastle/crypto/modes/AEADCipher.processByte:(B[BI)I
      12: ireturn

  public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
       4: aload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: iload         5
      11: invokeinterface #111,  6          // InterfaceMethod org/bouncycastle/crypto/modes/AEADCipher.processBytes:([BII[BI)I
      16: ireturn

  public int doFinal(byte[], int) throws java.lang.IllegalStateException, javax.crypto.BadPaddingException;
    Code:
       0: aload_0
       1: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
       4: aload_1
       5: iload_2
       6: invokeinterface #109,  3          // InterfaceMethod org/bouncycastle/crypto/modes/AEADCipher.doFinal:([BI)I
      11: ireturn
      12: astore_3
      13: getstatic     #95                 // Field aeadBadTagConstructor:Ljava/lang/reflect/Constructor;
      16: ifnull        57
      19: aconst_null
      20: astore        4
      22: getstatic     #95                 // Field aeadBadTagConstructor:Ljava/lang/reflect/Constructor;
      25: iconst_1
      26: anewarray     #54                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_3
      32: invokevirtual #101                // Method org/bouncycastle/crypto/InvalidCipherTextException.getMessage:()Ljava/lang/String;
      35: aastore
      36: invokevirtual #99                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #56                 // class javax/crypto/BadPaddingException
      42: astore        4
      44: goto          49
      47: astore        5
      49: aload         4
      51: ifnull        57
      54: aload         4
      56: athrow
      57: new           #56                 // class javax/crypto/BadPaddingException
      60: dup
      61: aload_3
      62: invokevirtual #101                // Method org/bouncycastle/crypto/InvalidCipherTextException.getMessage:()Ljava/lang/String;
      65: invokespecial #100                // Method javax/crypto/BadPaddingException."<init>":(Ljava/lang/String;)V
      68: athrow
    Exception table:
       from    to  target type
           0    11    12   Class org/bouncycastle/crypto/InvalidCipherTextException
          22    44    47   Class java/lang/Exception

  static org.bouncycastle.crypto.modes.AEADCipher access$000(org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher);
    Code:
       0: aload_0
       1: getfield      #96                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADCipher;
       4: areturn

  static {};
    Code:
       0: ldc           #3                  // class org/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher
       2: ldc           #1                  // String javax.crypto.AEADBadTagException
       4: invokestatic  #103                // Method org/bouncycastle/jcajce/provider/symmetric/util/ClassUtil.loadClass:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Class;
       7: astore_0
       8: aload_0
       9: ifnull        22
      12: aload_0
      13: invokestatic  #102                // Method findExceptionConstructor:(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      16: putstatic     #95                 // Field aeadBadTagConstructor:Ljava/lang/reflect/Constructor;
      19: goto          26
      22: aconst_null
      23: putstatic     #95                 // Field aeadBadTagConstructor:Ljava/lang/reflect/Constructor;
      26: return
}
