Compiled from "SecP160R2FieldElement.java"
public class org.bouncycastle.math.ec.custom.sec.SecP160R2FieldElement extends org.bouncycastle.math.ec.ECFieldElement$AbstractFp {
  public static final java.math.BigInteger Q;

  protected int[] x;

  public org.bouncycastle.math.ec.custom.sec.SecP160R2FieldElement(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/bouncycastle/math/ec/ECFieldElement$AbstractFp."<init>":()V
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: invokevirtual #2                  // Method java/math/BigInteger.signum:()I
      12: iflt          25
      15: aload_1
      16: getstatic     #3                  // Field Q:Ljava/math/BigInteger;
      19: invokevirtual #4                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      22: iflt          35
      25: new           #5                  // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #6                  // String x value invalid for SecP160R2FieldElement
      31: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: invokestatic  #8                  // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.fromBigInteger:(Ljava/math/BigInteger;)[I
      40: putfield      #9                  // Field x:[I
      43: return

  public org.bouncycastle.math.ec.custom.sec.SecP160R2FieldElement();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/bouncycastle/math/ec/ECFieldElement$AbstractFp."<init>":()V
       4: aload_0
       5: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
       8: putfield      #9                  // Field x:[I
      11: return

  protected org.bouncycastle.math.ec.custom.sec.SecP160R2FieldElement(int[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/bouncycastle/math/ec/ECFieldElement$AbstractFp."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field x:[I
       9: return

  public boolean isZero();
    Code:
       0: aload_0
       1: getfield      #9                  // Field x:[I
       4: invokestatic  #11                 // Method org/bouncycastle/math/raw/Nat160.isZero:([I)Z
       7: ireturn

  public boolean isOne();
    Code:
       0: aload_0
       1: getfield      #9                  // Field x:[I
       4: invokestatic  #12                 // Method org/bouncycastle/math/raw/Nat160.isOne:([I)Z
       7: ireturn

  public boolean testBitZero();
    Code:
       0: aload_0
       1: getfield      #9                  // Field x:[I
       4: iconst_0
       5: invokestatic  #13                 // Method org/bouncycastle/math/raw/Nat160.getBit:([II)I
       8: iconst_1
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.math.BigInteger toBigInteger();
    Code:
       0: aload_0
       1: getfield      #9                  // Field x:[I
       4: invokestatic  #14                 // Method org/bouncycastle/math/raw/Nat160.toBigInteger:([I)Ljava/math/BigInteger;
       7: areturn

  public java.lang.String getFieldName();
    Code:
       0: ldc           #15                 // String SecP160R2Field
       2: areturn

  public int getFieldSize();
    Code:
       0: getstatic     #3                  // Field Q:Ljava/math/BigInteger;
       3: invokevirtual #16                 // Method java/math/BigInteger.bitLength:()I
       6: ireturn

  public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_2
       4: aload_0
       5: getfield      #9                  // Field x:[I
       8: aload_1
       9: checkcast     #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      12: getfield      #9                  // Field x:[I
      15: aload_2
      16: invokestatic  #18                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.add:([I[I[I)V
      19: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      22: dup
      23: aload_2
      24: invokespecial #19                 // Method "<init>":([I)V
      27: areturn

  public org.bouncycastle.math.ec.ECFieldElement addOne();
    Code:
       0: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_1
       4: aload_0
       5: getfield      #9                  // Field x:[I
       8: aload_1
       9: invokestatic  #20                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.addOne:([I[I)V
      12: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      15: dup
      16: aload_1
      17: invokespecial #19                 // Method "<init>":([I)V
      20: areturn

  public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_2
       4: aload_0
       5: getfield      #9                  // Field x:[I
       8: aload_1
       9: checkcast     #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      12: getfield      #9                  // Field x:[I
      15: aload_2
      16: invokestatic  #21                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.subtract:([I[I[I)V
      19: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      22: dup
      23: aload_2
      24: invokespecial #19                 // Method "<init>":([I)V
      27: areturn

  public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_2
       4: aload_0
       5: getfield      #9                  // Field x:[I
       8: aload_1
       9: checkcast     #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      12: getfield      #9                  // Field x:[I
      15: aload_2
      16: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
      19: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      22: dup
      23: aload_2
      24: invokespecial #19                 // Method "<init>":([I)V
      27: areturn

  public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_2
       4: aload_1
       5: checkcast     #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
       8: getfield      #9                  // Field x:[I
      11: aload_2
      12: invokestatic  #23                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.inv:([I[I)V
      15: aload_2
      16: aload_0
      17: getfield      #9                  // Field x:[I
      20: aload_2
      21: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
      24: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      27: dup
      28: aload_2
      29: invokespecial #19                 // Method "<init>":([I)V
      32: areturn

  public org.bouncycastle.math.ec.ECFieldElement negate();
    Code:
       0: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_1
       4: aload_0
       5: getfield      #9                  // Field x:[I
       8: aload_1
       9: invokestatic  #24                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.negate:([I[I)V
      12: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      15: dup
      16: aload_1
      17: invokespecial #19                 // Method "<init>":([I)V
      20: areturn

  public org.bouncycastle.math.ec.ECFieldElement square();
    Code:
       0: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_1
       4: aload_0
       5: getfield      #9                  // Field x:[I
       8: aload_1
       9: invokestatic  #25                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.square:([I[I)V
      12: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      15: dup
      16: aload_1
      17: invokespecial #19                 // Method "<init>":([I)V
      20: areturn

  public org.bouncycastle.math.ec.ECFieldElement invert();
    Code:
       0: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_1
       4: aload_0
       5: getfield      #9                  // Field x:[I
       8: aload_1
       9: invokestatic  #23                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.inv:([I[I)V
      12: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      15: dup
      16: aload_1
      17: invokespecial #19                 // Method "<init>":([I)V
      20: areturn

  public org.bouncycastle.math.ec.ECFieldElement sqrt();
    Code:
       0: aload_0
       1: getfield      #9                  // Field x:[I
       4: astore_1
       5: aload_1
       6: invokestatic  #11                 // Method org/bouncycastle/math/raw/Nat160.isZero:([I)Z
       9: ifne          19
      12: aload_1
      13: invokestatic  #12                 // Method org/bouncycastle/math/raw/Nat160.isOne:([I)Z
      16: ifeq          21
      19: aload_0
      20: areturn
      21: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
      24: astore_2
      25: aload_1
      26: aload_2
      27: invokestatic  #25                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.square:([I[I)V
      30: aload_2
      31: aload_1
      32: aload_2
      33: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
      36: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
      39: astore_3
      40: aload_2
      41: aload_3
      42: invokestatic  #25                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.square:([I[I)V
      45: aload_3
      46: aload_1
      47: aload_3
      48: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
      51: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
      54: astore        4
      56: aload_3
      57: aload         4
      59: invokestatic  #25                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.square:([I[I)V
      62: aload         4
      64: aload_1
      65: aload         4
      67: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
      70: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
      73: astore        5
      75: aload         4
      77: iconst_3
      78: aload         5
      80: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.squareN:([II[I)V
      83: aload         5
      85: aload_3
      86: aload         5
      88: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
      91: aload         4
      93: astore        6
      95: aload         5
      97: bipush        7
      99: aload         6
     101: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.squareN:([II[I)V
     104: aload         6
     106: aload         5
     108: aload         6
     110: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
     113: aload         5
     115: astore        7
     117: aload         6
     119: iconst_3
     120: aload         7
     122: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.squareN:([II[I)V
     125: aload         7
     127: aload_3
     128: aload         7
     130: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
     133: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat160.create:()[I
     136: astore        8
     138: aload         7
     140: bipush        14
     142: aload         8
     144: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.squareN:([II[I)V
     147: aload         8
     149: aload         6
     151: aload         8
     153: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
     156: aload         6
     158: astore        9
     160: aload         8
     162: bipush        31
     164: aload         9
     166: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.squareN:([II[I)V
     169: aload         9
     171: aload         8
     173: aload         9
     175: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
     178: aload         8
     180: astore        10
     182: aload         9
     184: bipush        62
     186: aload         10
     188: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.squareN:([II[I)V
     191: aload         10
     193: aload         9
     195: aload         10
     197: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
     200: aload         9
     202: astore        11
     204: aload         10
     206: iconst_3
     207: aload         11
     209: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.squareN:([II[I)V
     212: aload         11
     214: aload_3
     215: aload         11
     217: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
     220: aload         11
     222: astore        12
     224: aload         12
     226: bipush        18
     228: aload         12
     230: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.squareN:([II[I)V
     233: aload         12
     235: aload         7
     237: aload         12
     239: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
     242: aload         12
     244: iconst_2
     245: aload         12
     247: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.squareN:([II[I)V
     250: aload         12
     252: aload_1
     253: aload         12
     255: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
     258: aload         12
     260: iconst_3
     261: aload         12
     263: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.squareN:([II[I)V
     266: aload         12
     268: aload_2
     269: aload         12
     271: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
     274: aload         12
     276: bipush        6
     278: aload         12
     280: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.squareN:([II[I)V
     283: aload         12
     285: aload_3
     286: aload         12
     288: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
     291: aload         12
     293: iconst_2
     294: aload         12
     296: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.squareN:([II[I)V
     299: aload         12
     301: aload_1
     302: aload         12
     304: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.multiply:([I[I[I)V
     307: aload_2
     308: astore        13
     310: aload         12
     312: aload         13
     314: invokestatic  #25                 // Method org/bouncycastle/math/ec/custom/sec/SecP160R2Field.square:([I[I)V
     317: aload_1
     318: aload         13
     320: invokestatic  #27                 // Method org/bouncycastle/math/raw/Nat160.eq:([I[I)Z
     323: ifeq          338
     326: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
     329: dup
     330: aload         12
     332: invokespecial #19                 // Method "<init>":([I)V
     335: goto          339
     338: aconst_null
     339: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #17                 // class org/bouncycastle/math/ec/custom/sec/SecP160R2FieldElement
      20: astore_2
      21: aload_0
      22: getfield      #9                  // Field x:[I
      25: aload_2
      26: getfield      #9                  // Field x:[I
      29: invokestatic  #27                 // Method org/bouncycastle/math/raw/Nat160.eq:([I[I)Z
      32: ireturn

  public int hashCode();
    Code:
       0: getstatic     #3                  // Field Q:Ljava/math/BigInteger;
       3: invokevirtual #28                 // Method java/math/BigInteger.hashCode:()I
       6: aload_0
       7: getfield      #9                  // Field x:[I
      10: iconst_0
      11: iconst_5
      12: invokestatic  #29                 // Method org/bouncycastle/util/Arrays.hashCode:([III)I
      15: ixor
      16: ireturn

  static {};
    Code:
       0: new           #30                 // class java/math/BigInteger
       3: dup
       4: iconst_1
       5: ldc           #31                 // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC73
       7: invokestatic  #32                 // Method org/bouncycastle/util/encoders/Hex.decodeStrict:(Ljava/lang/String;)[B
      10: invokespecial #33                 // Method java/math/BigInteger."<init>":(I[B)V
      13: putstatic     #3                  // Field Q:Ljava/math/BigInteger;
      16: return
}
