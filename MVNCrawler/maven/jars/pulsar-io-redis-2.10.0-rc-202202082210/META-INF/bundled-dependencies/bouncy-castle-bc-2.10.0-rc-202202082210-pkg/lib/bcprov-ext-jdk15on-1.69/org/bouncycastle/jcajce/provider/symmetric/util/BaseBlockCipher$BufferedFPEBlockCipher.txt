class org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedFPEBlockCipher implements org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher {
  private org.bouncycastle.crypto.fpe.FPEEngine cipher;

  private org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher$ErasableOutputStream eOut;

  org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedFPEBlockCipher(org.bouncycastle.crypto.fpe.FPEEngine);
    Code:
       0: aload_0
       1: invokespecial #79                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #56                 // class org/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream
       8: dup
       9: invokespecial #85                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream."<init>":()V
      12: putfield      #77                 // Field eOut:Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream;
      15: aload_0
      16: aload_1
      17: putfield      #76                 // Field cipher:Lorg/bouncycastle/crypto/fpe/FPEEngine;
      20: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #76                 // Field cipher:Lorg/bouncycastle/crypto/fpe/FPEEngine;
       4: iload_1
       5: aload_2
       6: invokevirtual #83                 // Method org/bouncycastle/crypto/fpe/FPEEngine.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
       9: return

  public boolean wrapOnNoPadding();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getAlgorithmName();
    Code:
       0: aload_0
       1: getfield      #76                 // Field cipher:Lorg/bouncycastle/crypto/fpe/FPEEngine;
       4: invokevirtual #82                 // Method org/bouncycastle/crypto/fpe/FPEEngine.getAlgorithmName:()Ljava/lang/String;
       7: areturn

  public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher();
    Code:
       0: new           #46                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #2                  // String not applicable for FPE
       6: invokespecial #78                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int getOutputSize(int);
    Code:
       0: aload_0
       1: getfield      #77                 // Field eOut:Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream;
       4: invokevirtual #84                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream.size:()I
       7: iload_1
       8: iadd
       9: ireturn

  public int getUpdateOutputSize(int);
    Code:
       0: iconst_0
       1: ireturn

  public void updateAAD(byte[], int, int);
    Code:
       0: new           #48                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #1                  // String AAD is not supported in the current mode.
       6: invokespecial #80                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: getfield      #77                 // Field eOut:Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream;
       4: iload_1
       5: invokevirtual #88                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream.write:(I)V
       8: iconst_0
       9: ireturn

  public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: getfield      #77                 // Field eOut:Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #89                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream.write:([BII)V
      10: iconst_0
      11: ireturn

  public int doFinal(byte[], int) throws java.lang.IllegalStateException, javax.crypto.BadPaddingException;
    Code:
       0: aload_0
       1: getfield      #76                 // Field cipher:Lorg/bouncycastle/crypto/fpe/FPEEngine;
       4: aload_0
       5: getfield      #77                 // Field eOut:Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream;
       8: invokevirtual #87                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream.getBuf:()[B
      11: iconst_0
      12: aload_0
      13: getfield      #77                 // Field eOut:Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream;
      16: invokevirtual #84                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream.size:()I
      19: aload_1
      20: iload_2
      21: invokevirtual #81                 // Method org/bouncycastle/crypto/fpe/FPEEngine.processBlock:([BII[BI)I
      24: istore_3
      25: aload_0
      26: getfield      #77                 // Field eOut:Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream;
      29: invokevirtual #86                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream.erase:()V
      32: iload_3
      33: ireturn
      34: astore        4
      36: aload_0
      37: getfield      #77                 // Field eOut:Lorg/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream;
      40: invokevirtual #86                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseWrapCipher$ErasableOutputStream.erase:()V
      43: aload         4
      45: athrow
    Exception table:
       from    to  target type
           0    25    34   any
          34    36    34   any
}
