Compiled from "SecP521R1FieldElement.java"
public class org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement extends org.bouncycastle.math.ec.ECFieldElement$AbstractFp {
  public static final java.math.BigInteger Q;

  protected int[] x;

  public org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/bouncycastle/math/ec/ECFieldElement$AbstractFp."<init>":()V
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: invokevirtual #2                  // Method java/math/BigInteger.signum:()I
      12: iflt          25
      15: aload_1
      16: getstatic     #3                  // Field Q:Ljava/math/BigInteger;
      19: invokevirtual #4                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      22: iflt          35
      25: new           #5                  // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #6                  // String x value invalid for SecP521R1FieldElement
      31: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: invokestatic  #8                  // Method org/bouncycastle/math/ec/custom/sec/SecP521R1Field.fromBigInteger:(Ljava/math/BigInteger;)[I
      40: putfield      #9                  // Field x:[I
      43: return

  public org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/bouncycastle/math/ec/ECFieldElement$AbstractFp."<init>":()V
       4: aload_0
       5: bipush        17
       7: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
      10: putfield      #9                  // Field x:[I
      13: return

  protected org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement(int[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/bouncycastle/math/ec/ECFieldElement$AbstractFp."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field x:[I
       9: return

  public boolean isZero();
    Code:
       0: bipush        17
       2: aload_0
       3: getfield      #9                  // Field x:[I
       6: invokestatic  #11                 // Method org/bouncycastle/math/raw/Nat.isZero:(I[I)Z
       9: ireturn

  public boolean isOne();
    Code:
       0: bipush        17
       2: aload_0
       3: getfield      #9                  // Field x:[I
       6: invokestatic  #12                 // Method org/bouncycastle/math/raw/Nat.isOne:(I[I)Z
       9: ireturn

  public boolean testBitZero();
    Code:
       0: aload_0
       1: getfield      #9                  // Field x:[I
       4: iconst_0
       5: invokestatic  #13                 // Method org/bouncycastle/math/raw/Nat.getBit:([II)I
       8: iconst_1
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.math.BigInteger toBigInteger();
    Code:
       0: bipush        17
       2: aload_0
       3: getfield      #9                  // Field x:[I
       6: invokestatic  #14                 // Method org/bouncycastle/math/raw/Nat.toBigInteger:(I[I)Ljava/math/BigInteger;
       9: areturn

  public java.lang.String getFieldName();
    Code:
       0: ldc           #15                 // String SecP521R1Field
       2: areturn

  public int getFieldSize();
    Code:
       0: getstatic     #3                  // Field Q:Ljava/math/BigInteger;
       3: invokevirtual #16                 // Method java/math/BigInteger.bitLength:()I
       6: ireturn

  public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: bipush        17
       2: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_2
       6: aload_0
       7: getfield      #9                  // Field x:[I
      10: aload_1
      11: checkcast     #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      14: getfield      #9                  // Field x:[I
      17: aload_2
      18: invokestatic  #18                 // Method org/bouncycastle/math/ec/custom/sec/SecP521R1Field.add:([I[I[I)V
      21: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      24: dup
      25: aload_2
      26: invokespecial #19                 // Method "<init>":([I)V
      29: areturn

  public org.bouncycastle.math.ec.ECFieldElement addOne();
    Code:
       0: bipush        17
       2: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_1
       6: aload_0
       7: getfield      #9                  // Field x:[I
      10: aload_1
      11: invokestatic  #20                 // Method org/bouncycastle/math/ec/custom/sec/SecP521R1Field.addOne:([I[I)V
      14: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      17: dup
      18: aload_1
      19: invokespecial #19                 // Method "<init>":([I)V
      22: areturn

  public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: bipush        17
       2: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_2
       6: aload_0
       7: getfield      #9                  // Field x:[I
      10: aload_1
      11: checkcast     #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      14: getfield      #9                  // Field x:[I
      17: aload_2
      18: invokestatic  #21                 // Method org/bouncycastle/math/ec/custom/sec/SecP521R1Field.subtract:([I[I[I)V
      21: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      24: dup
      25: aload_2
      26: invokespecial #19                 // Method "<init>":([I)V
      29: areturn

  public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: bipush        17
       2: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_2
       6: aload_0
       7: getfield      #9                  // Field x:[I
      10: aload_1
      11: checkcast     #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      14: getfield      #9                  // Field x:[I
      17: aload_2
      18: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP521R1Field.multiply:([I[I[I)V
      21: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      24: dup
      25: aload_2
      26: invokespecial #19                 // Method "<init>":([I)V
      29: areturn

  public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: bipush        17
       2: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_2
       6: aload_1
       7: checkcast     #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      10: getfield      #9                  // Field x:[I
      13: aload_2
      14: invokestatic  #23                 // Method org/bouncycastle/math/ec/custom/sec/SecP521R1Field.inv:([I[I)V
      17: aload_2
      18: aload_0
      19: getfield      #9                  // Field x:[I
      22: aload_2
      23: invokestatic  #22                 // Method org/bouncycastle/math/ec/custom/sec/SecP521R1Field.multiply:([I[I[I)V
      26: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      29: dup
      30: aload_2
      31: invokespecial #19                 // Method "<init>":([I)V
      34: areturn

  public org.bouncycastle.math.ec.ECFieldElement negate();
    Code:
       0: bipush        17
       2: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_1
       6: aload_0
       7: getfield      #9                  // Field x:[I
      10: aload_1
      11: invokestatic  #24                 // Method org/bouncycastle/math/ec/custom/sec/SecP521R1Field.negate:([I[I)V
      14: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      17: dup
      18: aload_1
      19: invokespecial #19                 // Method "<init>":([I)V
      22: areturn

  public org.bouncycastle.math.ec.ECFieldElement square();
    Code:
       0: bipush        17
       2: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_1
       6: aload_0
       7: getfield      #9                  // Field x:[I
      10: aload_1
      11: invokestatic  #25                 // Method org/bouncycastle/math/ec/custom/sec/SecP521R1Field.square:([I[I)V
      14: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      17: dup
      18: aload_1
      19: invokespecial #19                 // Method "<init>":([I)V
      22: areturn

  public org.bouncycastle.math.ec.ECFieldElement invert();
    Code:
       0: bipush        17
       2: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
       5: astore_1
       6: aload_0
       7: getfield      #9                  // Field x:[I
      10: aload_1
      11: invokestatic  #23                 // Method org/bouncycastle/math/ec/custom/sec/SecP521R1Field.inv:([I[I)V
      14: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      17: dup
      18: aload_1
      19: invokespecial #19                 // Method "<init>":([I)V
      22: areturn

  public org.bouncycastle.math.ec.ECFieldElement sqrt();
    Code:
       0: aload_0
       1: getfield      #9                  // Field x:[I
       4: astore_1
       5: bipush        17
       7: aload_1
       8: invokestatic  #11                 // Method org/bouncycastle/math/raw/Nat.isZero:(I[I)Z
      11: ifne          23
      14: bipush        17
      16: aload_1
      17: invokestatic  #12                 // Method org/bouncycastle/math/raw/Nat.isOne:(I[I)Z
      20: ifeq          25
      23: aload_0
      24: areturn
      25: bipush        17
      27: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
      30: astore_2
      31: bipush        17
      33: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
      36: astore_3
      37: aload_1
      38: sipush        519
      41: aload_2
      42: invokestatic  #26                 // Method org/bouncycastle/math/ec/custom/sec/SecP521R1Field.squareN:([II[I)V
      45: aload_2
      46: aload_3
      47: invokestatic  #25                 // Method org/bouncycastle/math/ec/custom/sec/SecP521R1Field.square:([I[I)V
      50: bipush        17
      52: aload_1
      53: aload_3
      54: invokestatic  #27                 // Method org/bouncycastle/math/raw/Nat.eq:(I[I[I)Z
      57: ifeq          71
      60: new           #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      63: dup
      64: aload_2
      65: invokespecial #19                 // Method "<init>":([I)V
      68: goto          72
      71: aconst_null
      72: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #17                 // class org/bouncycastle/math/ec/custom/sec/SecP521R1FieldElement
      20: astore_2
      21: bipush        17
      23: aload_0
      24: getfield      #9                  // Field x:[I
      27: aload_2
      28: getfield      #9                  // Field x:[I
      31: invokestatic  #27                 // Method org/bouncycastle/math/raw/Nat.eq:(I[I[I)Z
      34: ireturn

  public int hashCode();
    Code:
       0: getstatic     #3                  // Field Q:Ljava/math/BigInteger;
       3: invokevirtual #28                 // Method java/math/BigInteger.hashCode:()I
       6: aload_0
       7: getfield      #9                  // Field x:[I
      10: iconst_0
      11: bipush        17
      13: invokestatic  #29                 // Method org/bouncycastle/util/Arrays.hashCode:([III)I
      16: ixor
      17: ireturn

  static {};
    Code:
       0: new           #30                 // class java/math/BigInteger
       3: dup
       4: iconst_1
       5: ldc           #31                 // String 01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
       7: invokestatic  #32                 // Method org/bouncycastle/util/encoders/Hex.decodeStrict:(Ljava/lang/String;)[B
      10: invokespecial #33                 // Method java/math/BigInteger."<init>":(I[B)V
      13: putstatic     #3                  // Field Q:Ljava/math/BigInteger;
      16: return
}
