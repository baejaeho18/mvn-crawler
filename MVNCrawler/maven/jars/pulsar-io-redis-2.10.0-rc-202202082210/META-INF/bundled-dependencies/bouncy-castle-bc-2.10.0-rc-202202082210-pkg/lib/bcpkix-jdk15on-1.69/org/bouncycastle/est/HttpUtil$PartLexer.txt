class org.bouncycastle.est.HttpUtil$PartLexer {
  private final java.lang.String src;

  int last;

  int p;

  org.bouncycastle.est.HttpUtil$PartLexer(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #68                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #64                 // Field last:I
       9: aload_0
      10: iconst_0
      11: putfield      #65                 // Field p:I
      14: aload_0
      15: aload_1
      16: putfield      #66                 // Field src:Ljava/lang/String;
      19: return

  java.util.Map<java.lang.String, java.lang.String> Parse();
    Code:
       0: new           #37                 // class java/util/HashMap
       3: dup
       4: invokespecial #72                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aconst_null
       9: astore_2
      10: aconst_null
      11: astore_3
      12: aload_0
      13: getfield      #65                 // Field p:I
      16: aload_0
      17: getfield      #66                 // Field src:Ljava/lang/String;
      20: invokevirtual #69                 // Method java/lang/String.length:()I
      23: if_icmpge     146
      26: aload_0
      27: invokespecial #74                 // Method skipWhiteSpace:()V
      30: aload_0
      31: invokespecial #77                 // Method consumeAlpha:()Ljava/lang/String;
      34: astore_2
      35: aload_2
      36: invokevirtual #69                 // Method java/lang/String.length:()I
      39: ifne          52
      42: new           #34                 // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #1                  // String Expecting alpha label.
      48: invokespecial #67                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: invokespecial #74                 // Method skipWhiteSpace:()V
      56: aload_0
      57: bipush        61
      59: invokespecial #75                 // Method consumeIf:(C)Z
      62: ifne          75
      65: new           #34                 // class java/lang/IllegalArgumentException
      68: dup
      69: ldc           #2                  // String Expecting assign: \'=\'
      71: invokespecial #67                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_0
      76: invokespecial #74                 // Method skipWhiteSpace:()V
      79: aload_0
      80: bipush        34
      82: invokespecial #75                 // Method consumeIf:(C)Z
      85: ifne          98
      88: new           #34                 // class java/lang/IllegalArgumentException
      91: dup
      92: ldc           #3                  // String Expecting start quote: \'\"\'
      94: invokespecial #67                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: invokespecial #73                 // Method discard:()V
     102: aload_0
     103: bipush        34
     105: invokespecial #78                 // Method consumeUntil:(C)Ljava/lang/String;
     108: astore_3
     109: aload_0
     110: iconst_1
     111: invokespecial #76                 // Method discard:(I)V
     114: aload_1
     115: aload_2
     116: aload_3
     117: invokeinterface #79,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     122: pop
     123: aload_0
     124: invokespecial #74                 // Method skipWhiteSpace:()V
     127: aload_0
     128: bipush        44
     130: invokespecial #75                 // Method consumeIf:(C)Z
     133: ifne          139
     136: goto          146
     139: aload_0
     140: invokespecial #73                 // Method discard:()V
     143: goto          12
     146: aload_1
     147: areturn

  private java.lang.String consumeAlpha();
    Code:
       0: aload_0
       1: getfield      #66                 // Field src:Ljava/lang/String;
       4: aload_0
       5: getfield      #65                 // Field p:I
       8: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
      11: istore_1
      12: aload_0
      13: getfield      #65                 // Field p:I
      16: aload_0
      17: getfield      #66                 // Field src:Ljava/lang/String;
      20: invokevirtual #69                 // Method java/lang/String.length:()I
      23: if_icmpge     75
      26: iload_1
      27: bipush        97
      29: if_icmplt     38
      32: iload_1
      33: bipush        122
      35: if_icmple     50
      38: iload_1
      39: bipush        65
      41: if_icmplt     75
      44: iload_1
      45: bipush        90
      47: if_icmpgt     75
      50: aload_0
      51: dup
      52: getfield      #65                 // Field p:I
      55: iconst_1
      56: iadd
      57: putfield      #65                 // Field p:I
      60: aload_0
      61: getfield      #66                 // Field src:Ljava/lang/String;
      64: aload_0
      65: getfield      #65                 // Field p:I
      68: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
      71: istore_1
      72: goto          12
      75: aload_0
      76: getfield      #66                 // Field src:Ljava/lang/String;
      79: aload_0
      80: getfield      #64                 // Field last:I
      83: aload_0
      84: getfield      #65                 // Field p:I
      87: invokevirtual #71                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      90: astore_2
      91: aload_0
      92: aload_0
      93: getfield      #65                 // Field p:I
      96: putfield      #64                 // Field last:I
      99: aload_2
     100: areturn

  private void skipWhiteSpace();
    Code:
       0: aload_0
       1: getfield      #65                 // Field p:I
       4: aload_0
       5: getfield      #66                 // Field src:Ljava/lang/String;
       8: invokevirtual #69                 // Method java/lang/String.length:()I
      11: if_icmpge     43
      14: aload_0
      15: getfield      #66                 // Field src:Ljava/lang/String;
      18: aload_0
      19: getfield      #65                 // Field p:I
      22: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
      25: bipush        33
      27: if_icmpge     43
      30: aload_0
      31: dup
      32: getfield      #65                 // Field p:I
      35: iconst_1
      36: iadd
      37: putfield      #65                 // Field p:I
      40: goto          0
      43: aload_0
      44: aload_0
      45: getfield      #65                 // Field p:I
      48: putfield      #64                 // Field last:I
      51: return

  private boolean consumeIf(char);
    Code:
       0: aload_0
       1: getfield      #65                 // Field p:I
       4: aload_0
       5: getfield      #66                 // Field src:Ljava/lang/String;
       8: invokevirtual #69                 // Method java/lang/String.length:()I
      11: if_icmpge     41
      14: aload_0
      15: getfield      #66                 // Field src:Ljava/lang/String;
      18: aload_0
      19: getfield      #65                 // Field p:I
      22: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
      25: iload_1
      26: if_icmpne     41
      29: aload_0
      30: dup
      31: getfield      #65                 // Field p:I
      34: iconst_1
      35: iadd
      36: putfield      #65                 // Field p:I
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  private java.lang.String consumeUntil(char);
    Code:
       0: aload_0
       1: getfield      #65                 // Field p:I
       4: aload_0
       5: getfield      #66                 // Field src:Ljava/lang/String;
       8: invokevirtual #69                 // Method java/lang/String.length:()I
      11: if_icmpge     42
      14: aload_0
      15: getfield      #66                 // Field src:Ljava/lang/String;
      18: aload_0
      19: getfield      #65                 // Field p:I
      22: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
      25: iload_1
      26: if_icmpeq     42
      29: aload_0
      30: dup
      31: getfield      #65                 // Field p:I
      34: iconst_1
      35: iadd
      36: putfield      #65                 // Field p:I
      39: goto          0
      42: aload_0
      43: getfield      #66                 // Field src:Ljava/lang/String;
      46: aload_0
      47: getfield      #64                 // Field last:I
      50: aload_0
      51: getfield      #65                 // Field p:I
      54: invokevirtual #71                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      57: astore_2
      58: aload_0
      59: aload_0
      60: getfield      #65                 // Field p:I
      63: putfield      #64                 // Field last:I
      66: aload_2
      67: areturn

  private void discard();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #65                 // Field p:I
       5: putfield      #64                 // Field last:I
       8: return

  private void discard(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #65                 // Field p:I
       5: iload_1
       6: iadd
       7: putfield      #65                 // Field p:I
      10: aload_0
      11: aload_0
      12: getfield      #65                 // Field p:I
      15: putfield      #64                 // Field last:I
      18: return
}
