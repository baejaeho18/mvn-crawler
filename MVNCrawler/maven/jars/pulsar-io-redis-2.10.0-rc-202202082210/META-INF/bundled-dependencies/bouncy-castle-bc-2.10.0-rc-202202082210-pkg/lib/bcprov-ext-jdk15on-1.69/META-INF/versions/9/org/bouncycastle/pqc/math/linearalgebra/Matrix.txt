Compiled from "Matrix.java"
public abstract class org.bouncycastle.pqc.math.linearalgebra.Matrix {
  protected int numRows;

  protected int numColumns;

  public static final char MATRIX_TYPE_ZERO;

  public static final char MATRIX_TYPE_UNIT;

  public static final char MATRIX_TYPE_RANDOM_LT;

  public static final char MATRIX_TYPE_RANDOM_UT;

  public static final char MATRIX_TYPE_RANDOM_REGULAR;

  public org.bouncycastle.pqc.math.linearalgebra.Matrix();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public int getNumRows();
    Code:
       0: aload_0
       1: getfield      #2                  // Field numRows:I
       4: ireturn

  public int getNumColumns();
    Code:
       0: aload_0
       1: getfield      #3                  // Field numColumns:I
       4: ireturn

  public abstract byte[] getEncoded();

  public abstract org.bouncycastle.pqc.math.linearalgebra.Matrix computeInverse();

  public abstract boolean isZero();

  public abstract org.bouncycastle.pqc.math.linearalgebra.Matrix rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Matrix);

  public abstract org.bouncycastle.pqc.math.linearalgebra.Matrix rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Permutation);

  public abstract org.bouncycastle.pqc.math.linearalgebra.Vector leftMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector);

  public abstract org.bouncycastle.pqc.math.linearalgebra.Vector rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector);

  public abstract java.lang.String toString();
}
