public class org.bouncycastle.asn1.tsp.PartialHashtree extends org.bouncycastle.asn1.ASN1Object {
  private final org.bouncycastle.asn1.ASN1Sequence values;

  public static org.bouncycastle.asn1.tsp.PartialHashtree getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #60                 // class org/bouncycastle/asn1/tsp/PartialHashtree
       4: ifeq          12
       7: aload_0
       8: checkcast     #60                 // class org/bouncycastle/asn1/tsp/PartialHashtree
      11: areturn
      12: aload_0
      13: ifnull        28
      16: new           #60                 // class org/bouncycastle/asn1/tsp/PartialHashtree
      19: dup
      20: aload_0
      21: invokestatic  #115                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      24: invokespecial #119                // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      27: areturn
      28: aconst_null
      29: areturn

  private org.bouncycastle.asn1.tsp.PartialHashtree(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #109                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: iconst_0
       5: istore_2
       6: iload_2
       7: aload_1
       8: invokevirtual #112                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      11: if_icmpeq     68
      14: aload_1
      15: iload_2
      16: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      19: instanceof    #58                 // class org/bouncycastle/asn1/DEROctetString
      22: ifne          62
      25: new           #50                 // class java/lang/IllegalArgumentException
      28: dup
      29: new           #52                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #1                  // String unknown object in constructor:
      38: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: iload_2
      43: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      46: invokevirtual #103                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      49: invokevirtual #101                // Method java/lang/Class.getName:()Ljava/lang/String;
      52: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #102                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: iinc          2, 1
      65: goto          6
      68: aload_0
      69: aload_1
      70: putfield      #100                // Field values:Lorg/bouncycastle/asn1/ASN1Sequence;
      73: return

  public org.bouncycastle.asn1.tsp.PartialHashtree(byte[]);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #48                 // class "[B"
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokespecial #118                // Method "<init>":([[B)V
      12: return

  public org.bouncycastle.asn1.tsp.PartialHashtree(byte[][]);
    Code:
       0: aload_0
       1: invokespecial #109                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: new           #54                 // class org/bouncycastle/asn1/ASN1EncodableVector
       7: dup
       8: aload_1
       9: arraylength
      10: invokespecial #107                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":(I)V
      13: astore_2
      14: iconst_0
      15: istore_3
      16: iload_3
      17: aload_1
      18: arraylength
      19: if_icmpeq     45
      22: aload_2
      23: new           #58                 // class org/bouncycastle/asn1/DEROctetString
      26: dup
      27: aload_1
      28: iload_3
      29: aaload
      30: invokestatic  #120                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      33: invokespecial #116                // Method org/bouncycastle/asn1/DEROctetString."<init>":([B)V
      36: invokevirtual #108                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      39: iinc          3, 1
      42: goto          16
      45: aload_0
      46: new           #59                 // class org/bouncycastle/asn1/DERSequence
      49: dup
      50: aload_2
      51: invokespecial #117                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      54: putfield      #100                // Field values:Lorg/bouncycastle/asn1/ASN1Sequence;
      57: return

  public int getValueCount();
    Code:
       0: aload_0
       1: getfield      #100                // Field values:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: invokevirtual #112                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       7: ireturn

  public byte[][] getValues();
    Code:
       0: aload_0
       1: getfield      #100                // Field values:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: invokevirtual #112                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       7: anewarray     #48                 // class "[B"
      10: astore_1
      11: iconst_0
      12: istore_2
      13: iload_2
      14: aload_1
      15: arraylength
      16: if_icmpeq     45
      19: aload_1
      20: iload_2
      21: aload_0
      22: getfield      #100                // Field values:Lorg/bouncycastle/asn1/ASN1Sequence;
      25: iload_2
      26: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      29: invokestatic  #111                // Method org/bouncycastle/asn1/ASN1OctetString.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1OctetString;
      32: invokevirtual #110                // Method org/bouncycastle/asn1/ASN1OctetString.getOctets:()[B
      35: invokestatic  #120                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      38: aastore
      39: iinc          2, 1
      42: goto          13
      45: aload_1
      46: areturn

  public boolean containsHash(byte[]);
    Code:
       0: aload_0
       1: getfield      #100                // Field values:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: invokevirtual #113                // Method org/bouncycastle/asn1/ASN1Sequence.getObjects:()Ljava/util/Enumeration;
       7: astore_2
       8: aload_2
       9: invokeinterface #122,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      14: ifeq          43
      17: aload_2
      18: invokeinterface #123,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      23: invokestatic  #111                // Method org/bouncycastle/asn1/ASN1OctetString.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1OctetString;
      26: invokevirtual #110                // Method org/bouncycastle/asn1/ASN1OctetString.getOctets:()[B
      29: astore_3
      30: aload_1
      31: aload_3
      32: invokestatic  #121                // Method org/bouncycastle/util/Arrays.constantTimeAreEqual:([B[B)Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: goto          8
      43: iconst_0
      44: ireturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: aload_0
       1: getfield      #100                // Field values:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: areturn
}
