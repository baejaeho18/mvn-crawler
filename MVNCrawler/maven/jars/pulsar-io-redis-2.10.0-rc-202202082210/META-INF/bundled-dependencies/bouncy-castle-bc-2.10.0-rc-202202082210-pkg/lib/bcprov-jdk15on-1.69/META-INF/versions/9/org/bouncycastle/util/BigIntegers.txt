Compiled from "BigIntegers.java"
public final class org.bouncycastle.util.BigIntegers {
  public static final java.math.BigInteger ZERO;

  public static final java.math.BigInteger ONE;

  public static final java.math.BigInteger TWO;

  private static final java.math.BigInteger THREE;

  private static final int MAX_ITERATIONS;

  private static final java.math.BigInteger SMALL_PRIMES_PRODUCT;

  private static final int MAX_SMALL;

  public org.bouncycastle.util.BigIntegers();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static byte[] asUnsignedByteArray(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/math/BigInteger.toByteArray:()[B
       4: astore_1
       5: aload_1
       6: iconst_0
       7: baload
       8: ifne          35
      11: aload_1
      12: arraylength
      13: iconst_1
      14: if_icmpeq     35
      17: aload_1
      18: arraylength
      19: iconst_1
      20: isub
      21: newarray       byte
      23: astore_2
      24: aload_1
      25: iconst_1
      26: aload_2
      27: iconst_0
      28: aload_2
      29: arraylength
      30: invokestatic  #3                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      33: aload_2
      34: areturn
      35: aload_1
      36: areturn

  public static byte[] asUnsignedByteArray(int, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method java/math/BigInteger.toByteArray:()[B
       4: astore_2
       5: aload_2
       6: arraylength
       7: iload_0
       8: if_icmpne     13
      11: aload_2
      12: areturn
      13: aload_2
      14: iconst_0
      15: baload
      16: ifne          29
      19: aload_2
      20: arraylength
      21: iconst_1
      22: if_icmpeq     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: istore_3
      31: aload_2
      32: arraylength
      33: iload_3
      34: isub
      35: istore        4
      37: iload         4
      39: iload_0
      40: if_icmple     53
      43: new           #4                  // class java/lang/IllegalArgumentException
      46: dup
      47: ldc           #5                  // String standard length exceeded for value
      49: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: iload_0
      54: newarray       byte
      56: astore        5
      58: aload_2
      59: iload_3
      60: aload         5
      62: aload         5
      64: arraylength
      65: iload         4
      67: isub
      68: iload         4
      70: invokestatic  #3                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      73: aload         5
      75: areturn

  public static void asUnsignedByteArray(java.math.BigInteger, byte[], int, int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/math/BigInteger.toByteArray:()[B
       4: astore        4
       6: aload         4
       8: arraylength
       9: iload_3
      10: if_icmpne     23
      13: aload         4
      15: iconst_0
      16: aload_1
      17: iload_2
      18: iload_3
      19: invokestatic  #3                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      22: return
      23: aload         4
      25: iconst_0
      26: baload
      27: ifne          41
      30: aload         4
      32: arraylength
      33: iconst_1
      34: if_icmpeq     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: istore        5
      44: aload         4
      46: arraylength
      47: iload         5
      49: isub
      50: istore        6
      52: iload         6
      54: iload_3
      55: if_icmple     68
      58: new           #4                  // class java/lang/IllegalArgumentException
      61: dup
      62: ldc           #5                  // String standard length exceeded for value
      64: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: iload_3
      69: iload         6
      71: isub
      72: istore        7
      74: aload_1
      75: iload_2
      76: iload_2
      77: iload         7
      79: iadd
      80: iconst_0
      81: invokestatic  #7                  // Method org/bouncycastle/util/Arrays.fill:([BIIB)V
      84: aload         4
      86: iload         5
      88: aload_1
      89: iload_2
      90: iload         7
      92: iadd
      93: iload         6
      95: invokestatic  #3                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      98: return

  public static java.math.BigInteger createRandomInRange(java.math.BigInteger, java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
       5: istore_3
       6: iload_3
       7: iflt          26
      10: iload_3
      11: ifle          24
      14: new           #4                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #9                  // String \'min\' may not be greater than \'max\'
      20: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: areturn
      26: aload_0
      27: invokevirtual #10                 // Method java/math/BigInteger.bitLength:()I
      30: aload_1
      31: invokevirtual #10                 // Method java/math/BigInteger.bitLength:()I
      34: iconst_2
      35: idiv
      36: if_icmple     56
      39: getstatic     #11                 // Field ZERO:Ljava/math/BigInteger;
      42: aload_1
      43: aload_0
      44: invokevirtual #12                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      47: aload_2
      48: invokestatic  #13                 // Method createRandomInRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      51: aload_0
      52: invokevirtual #14                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      55: areturn
      56: iconst_0
      57: istore        4
      59: iload         4
      61: sipush        1000
      64: if_icmpge     104
      67: aload_1
      68: invokevirtual #10                 // Method java/math/BigInteger.bitLength:()I
      71: aload_2
      72: invokestatic  #16                 // Method createRandomBigInteger:(ILjava/security/SecureRandom;)Ljava/math/BigInteger;
      75: astore        5
      77: aload         5
      79: aload_0
      80: invokevirtual #8                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      83: iflt          98
      86: aload         5
      88: aload_1
      89: invokevirtual #8                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      92: ifgt          98
      95: aload         5
      97: areturn
      98: iinc          4, 1
     101: goto          59
     104: aload_1
     105: aload_0
     106: invokevirtual #12                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     109: invokevirtual #10                 // Method java/math/BigInteger.bitLength:()I
     112: iconst_1
     113: isub
     114: aload_2
     115: invokestatic  #16                 // Method createRandomBigInteger:(ILjava/security/SecureRandom;)Ljava/math/BigInteger;
     118: aload_0
     119: invokevirtual #14                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     122: areturn

  public static java.math.BigInteger fromUnsignedByteArray(byte[]);
    Code:
       0: new           #17                 // class java/math/BigInteger
       3: dup
       4: iconst_1
       5: aload_0
       6: invokespecial #18                 // Method java/math/BigInteger."<init>":(I[B)V
       9: areturn

  public static java.math.BigInteger fromUnsignedByteArray(byte[], int, int);
    Code:
       0: aload_0
       1: astore_3
       2: iload_1
       3: ifne          12
       6: iload_2
       7: aload_0
       8: arraylength
       9: if_icmpeq     24
      12: iload_2
      13: newarray       byte
      15: astore_3
      16: aload_0
      17: iload_1
      18: aload_3
      19: iconst_0
      20: iload_2
      21: invokestatic  #3                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: new           #17                 // class java/math/BigInteger
      27: dup
      28: iconst_1
      29: aload_3
      30: invokespecial #18                 // Method java/math/BigInteger."<init>":(I[B)V
      33: areturn

  public static int intValueExact(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method java/math/BigInteger.bitLength:()I
       4: bipush        31
       6: if_icmple     19
       9: new           #19                 // class java/lang/ArithmeticException
      12: dup
      13: ldc           #20                 // String BigInteger out of int range
      15: invokespecial #21                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokevirtual #22                 // Method java/math/BigInteger.intValue:()I
      23: ireturn

  public static long longValueExact(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method java/math/BigInteger.bitLength:()I
       4: bipush        63
       6: if_icmple     19
       9: new           #19                 // class java/lang/ArithmeticException
      12: dup
      13: ldc           #23                 // String BigInteger out of long range
      15: invokespecial #21                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokevirtual #24                 // Method java/math/BigInteger.longValue:()J
      23: lreturn

  public static java.math.BigInteger modOddInverse(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #25                 // Method java/math/BigInteger.testBit:(I)Z
       5: ifne          18
       8: new           #4                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #26                 // String \'M\' must be odd
      14: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: invokevirtual #27                 // Method java/math/BigInteger.signum:()I
      22: iconst_1
      23: if_icmpeq     36
      26: new           #19                 // class java/lang/ArithmeticException
      29: dup
      30: ldc           #28                 // String BigInteger: modulus not positive
      32: invokespecial #21                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_1
      37: invokevirtual #27                 // Method java/math/BigInteger.signum:()I
      40: iflt          51
      43: aload_1
      44: aload_0
      45: invokevirtual #8                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      48: iflt          57
      51: aload_1
      52: aload_0
      53: invokevirtual #29                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      56: astore_1
      57: aload_0
      58: invokevirtual #10                 // Method java/math/BigInteger.bitLength:()I
      61: istore_2
      62: iload_2
      63: aload_0
      64: invokestatic  #30                 // Method org/bouncycastle/math/raw/Nat.fromBigInteger:(ILjava/math/BigInteger;)[I
      67: astore_3
      68: iload_2
      69: aload_1
      70: invokestatic  #30                 // Method org/bouncycastle/math/raw/Nat.fromBigInteger:(ILjava/math/BigInteger;)[I
      73: astore        4
      75: aload_3
      76: arraylength
      77: istore        5
      79: iload         5
      81: invokestatic  #31                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
      84: astore        6
      86: iconst_0
      87: aload_3
      88: aload         4
      90: aload         6
      92: invokestatic  #32                 // Method org/bouncycastle/math/raw/Mod.modOddInverse:([I[I[I)I
      95: if_icmpne     108
      98: new           #19                 // class java/lang/ArithmeticException
     101: dup
     102: ldc           #33                 // String BigInteger not invertible.
     104: invokespecial #21                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: iload         5
     110: aload         6
     112: invokestatic  #34                 // Method org/bouncycastle/math/raw/Nat.toBigInteger:(I[I)Ljava/math/BigInteger;
     115: areturn

  public static java.math.BigInteger modOddInverseVar(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #25                 // Method java/math/BigInteger.testBit:(I)Z
       5: ifne          18
       8: new           #4                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #26                 // String \'M\' must be odd
      14: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: invokevirtual #27                 // Method java/math/BigInteger.signum:()I
      22: iconst_1
      23: if_icmpeq     36
      26: new           #19                 // class java/lang/ArithmeticException
      29: dup
      30: ldc           #28                 // String BigInteger: modulus not positive
      32: invokespecial #21                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: getstatic     #35                 // Field ONE:Ljava/math/BigInteger;
      40: invokevirtual #36                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      43: ifeq          50
      46: getstatic     #11                 // Field ZERO:Ljava/math/BigInteger;
      49: areturn
      50: aload_1
      51: invokevirtual #27                 // Method java/math/BigInteger.signum:()I
      54: iflt          65
      57: aload_1
      58: aload_0
      59: invokevirtual #8                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      62: iflt          71
      65: aload_1
      66: aload_0
      67: invokevirtual #29                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      70: astore_1
      71: aload_1
      72: getstatic     #35                 // Field ONE:Ljava/math/BigInteger;
      75: invokevirtual #36                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      78: ifeq          85
      81: getstatic     #35                 // Field ONE:Ljava/math/BigInteger;
      84: areturn
      85: aload_0
      86: invokevirtual #10                 // Method java/math/BigInteger.bitLength:()I
      89: istore_2
      90: iload_2
      91: aload_0
      92: invokestatic  #30                 // Method org/bouncycastle/math/raw/Nat.fromBigInteger:(ILjava/math/BigInteger;)[I
      95: astore_3
      96: iload_2
      97: aload_1
      98: invokestatic  #30                 // Method org/bouncycastle/math/raw/Nat.fromBigInteger:(ILjava/math/BigInteger;)[I
     101: astore        4
     103: aload_3
     104: arraylength
     105: istore        5
     107: iload         5
     109: invokestatic  #31                 // Method org/bouncycastle/math/raw/Nat.create:(I)[I
     112: astore        6
     114: aload_3
     115: aload         4
     117: aload         6
     119: invokestatic  #37                 // Method org/bouncycastle/math/raw/Mod.modOddInverseVar:([I[I[I)Z
     122: ifne          135
     125: new           #19                 // class java/lang/ArithmeticException
     128: dup
     129: ldc           #33                 // String BigInteger not invertible.
     131: invokespecial #21                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     134: athrow
     135: iload         5
     137: aload         6
     139: invokestatic  #34                 // Method org/bouncycastle/math/raw/Nat.toBigInteger:(I[I)Ljava/math/BigInteger;
     142: areturn

  public static int getUnsignedByteLength(java.math.BigInteger);
    Code:
       0: aload_0
       1: getstatic     #11                 // Field ZERO:Ljava/math/BigInteger;
       4: invokevirtual #36                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
       7: ifeq          12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: invokevirtual #10                 // Method java/math/BigInteger.bitLength:()I
      16: bipush        7
      18: iadd
      19: bipush        8
      21: idiv
      22: ireturn

  public static java.math.BigInteger createRandomBigInteger(int, java.security.SecureRandom);
    Code:
       0: new           #17                 // class java/math/BigInteger
       3: dup
       4: iconst_1
       5: iload_0
       6: aload_1
       7: invokestatic  #38                 // Method createRandom:(ILjava/security/SecureRandom;)[B
      10: invokespecial #18                 // Method java/math/BigInteger."<init>":(I[B)V
      13: areturn

  public static java.math.BigInteger createRandomPrime(int, int, java.security.SecureRandom);
    Code:
       0: iload_0
       1: iconst_2
       2: if_icmpge     15
       5: new           #4                  // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #39                 // String bitLength < 2
      11: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: iload_0
      16: iconst_2
      17: if_icmpne     37
      20: aload_2
      21: invokevirtual #40                 // Method java/security/SecureRandom.nextInt:()I
      24: ifge          33
      27: getstatic     #41                 // Field TWO:Ljava/math/BigInteger;
      30: goto          36
      33: getstatic     #42                 // Field THREE:Ljava/math/BigInteger;
      36: areturn
      37: iload_0
      38: aload_2
      39: invokestatic  #38                 // Method createRandom:(ILjava/security/SecureRandom;)[B
      42: astore        4
      44: bipush        8
      46: aload         4
      48: arraylength
      49: imul
      50: iload_0
      51: isub
      52: istore        5
      54: iconst_1
      55: bipush        7
      57: iload         5
      59: isub
      60: ishl
      61: i2b
      62: istore        6
      64: aload         4
      66: iconst_0
      67: dup2
      68: baload
      69: iload         6
      71: ior
      72: i2b
      73: bastore
      74: aload         4
      76: aload         4
      78: arraylength
      79: iconst_1
      80: isub
      81: dup2
      82: baload
      83: iconst_1
      84: ior
      85: i2b
      86: bastore
      87: new           #17                 // class java/math/BigInteger
      90: dup
      91: iconst_1
      92: aload         4
      94: invokespecial #18                 // Method java/math/BigInteger."<init>":(I[B)V
      97: astore_3
      98: iload_0
      99: getstatic     #43                 // Field MAX_SMALL:I
     102: if_icmple     132
     105: aload_3
     106: getstatic     #44                 // Field SMALL_PRIMES_PRODUCT:Ljava/math/BigInteger;
     109: invokevirtual #45                 // Method java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     112: getstatic     #35                 // Field ONE:Ljava/math/BigInteger;
     115: invokevirtual #36                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     118: ifne          132
     121: aload_3
     122: getstatic     #41                 // Field TWO:Ljava/math/BigInteger;
     125: invokevirtual #14                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     128: astore_3
     129: goto          105
     132: aload_3
     133: iload_1
     134: invokevirtual #46                 // Method java/math/BigInteger.isProbablePrime:(I)Z
     137: ifeq          37
     140: aload_3
     141: areturn

  private static byte[] createRandom(int, java.security.SecureRandom) throws java.lang.IllegalArgumentException;
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     15
       5: new           #4                  // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #47                 // String bitLength must be at least 1
      11: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: iload_0
      16: bipush        7
      18: iadd
      19: bipush        8
      21: idiv
      22: istore_2
      23: iload_2
      24: newarray       byte
      26: astore_3
      27: aload_1
      28: aload_3
      29: invokevirtual #48                 // Method java/security/SecureRandom.nextBytes:([B)V
      32: bipush        8
      34: iload_2
      35: imul
      36: iload_0
      37: isub
      38: istore        4
      40: aload_3
      41: iconst_0
      42: dup2
      43: baload
      44: sipush        255
      47: iload         4
      49: iushr
      50: i2b
      51: iand
      52: i2b
      53: bastore
      54: aload_3
      55: areturn

  static {};
    Code:
       0: lconst_0
       1: invokestatic  #49                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #11                 // Field ZERO:Ljava/math/BigInteger;
       7: lconst_1
       8: invokestatic  #49                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      11: putstatic     #35                 // Field ONE:Ljava/math/BigInteger;
      14: ldc2_w        #50                 // long 2l
      17: invokestatic  #49                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      20: putstatic     #41                 // Field TWO:Ljava/math/BigInteger;
      23: ldc2_w        #52                 // long 3l
      26: invokestatic  #49                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      29: putstatic     #42                 // Field THREE:Ljava/math/BigInteger;
      32: new           #17                 // class java/math/BigInteger
      35: dup
      36: ldc           #54                 // String 8138e8a0fcf3a4e84a771d40fd305d7f4aa59306d7251de54d98af8fe95729a1f73d893fa424cd2edc8636a6c3285e022b0e3866a565ae8108eed8591cd4fe8d2ce86165a978d719ebf647f362d33fca29cd179fb42401cbaf3df0c614056f9c8f3cfd51e474afb6bc6974f78db8aba8e9e517fded658591ab7502bd41849462f
      38: bipush        16
      40: invokespecial #55                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
      43: putstatic     #44                 // Field SMALL_PRIMES_PRODUCT:Ljava/math/BigInteger;
      46: ldc2_w        #56                 // long 743l
      49: invokestatic  #49                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      52: invokevirtual #10                 // Method java/math/BigInteger.bitLength:()I
      55: putstatic     #43                 // Field MAX_SMALL:I
      58: return
}
