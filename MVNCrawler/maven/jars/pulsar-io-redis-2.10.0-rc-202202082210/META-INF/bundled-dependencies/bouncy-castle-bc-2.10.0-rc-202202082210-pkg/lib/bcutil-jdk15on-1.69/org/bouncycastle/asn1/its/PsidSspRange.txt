public class org.bouncycastle.asn1.its.PsidSspRange extends org.bouncycastle.asn1.ASN1Object {
  private org.bouncycastle.asn1.ASN1Integer psid;

  private org.bouncycastle.asn1.its.SspRange sspRange;

  public org.bouncycastle.asn1.its.PsidSspRange();
    Code:
       0: aload_0
       1: invokespecial #62                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: return

  public static org.bouncycastle.asn1.its.PsidSspRange getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: instanceof    #31                 // class org/bouncycastle/asn1/its/PsidSspRange
      10: ifeq          18
      13: aload_0
      14: checkcast     #31                 // class org/bouncycastle/asn1/its/PsidSspRange
      17: areturn
      18: aload_0
      19: invokestatic  #65                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      22: astore_1
      23: new           #31                 // class org/bouncycastle/asn1/its/PsidSspRange
      26: dup
      27: invokespecial #67                 // Method "<init>":()V
      30: astore_2
      31: aload_1
      32: invokevirtual #63                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      35: iconst_1
      36: if_icmplt     47
      39: aload_1
      40: invokevirtual #63                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      43: iconst_2
      44: if_icmple     57
      47: new           #25                 // class java/lang/IllegalStateException
      50: dup
      51: ldc           #1                  // String expected sequences with one or optionally two items
      53: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_1
      58: invokevirtual #63                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      61: iconst_1
      62: if_icmpne     77
      65: aload_2
      66: aload_1
      67: iconst_0
      68: invokevirtual #64                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      71: checkcast     #27                 // class org/bouncycastle/asn1/ASN1Integer
      74: putfield      #57                 // Field psid:Lorg/bouncycastle/asn1/ASN1Integer;
      77: aload_1
      78: invokevirtual #63                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      81: iconst_2
      82: if_icmpne     97
      85: aload_2
      86: aload_1
      87: iconst_1
      88: invokevirtual #64                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      91: invokestatic  #68                 // Method org/bouncycastle/asn1/its/SspRange.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/its/SspRange;
      94: putfield      #58                 // Field sspRange:Lorg/bouncycastle/asn1/its/SspRange;
      97: aload_2
      98: areturn

  public org.bouncycastle.asn1.ASN1Integer getPsid();
    Code:
       0: aload_0
       1: getfield      #57                 // Field psid:Lorg/bouncycastle/asn1/ASN1Integer;
       4: areturn

  public void setPsid(org.bouncycastle.asn1.ASN1Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field psid:Lorg/bouncycastle/asn1/ASN1Integer;
       5: return

  public org.bouncycastle.asn1.its.SspRange getSspRange();
    Code:
       0: aload_0
       1: getfield      #58                 // Field sspRange:Lorg/bouncycastle/asn1/its/SspRange;
       4: areturn

  public void setSspRange(org.bouncycastle.asn1.its.SspRange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field sspRange:Lorg/bouncycastle/asn1/its/SspRange;
       5: return

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #26                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: invokespecial #60                 // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #57                 // Field psid:Lorg/bouncycastle/asn1/ASN1Integer;
      13: invokevirtual #61                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      16: aload_0
      17: getfield      #58                 // Field sspRange:Lorg/bouncycastle/asn1/its/SspRange;
      20: ifnull        31
      23: aload_1
      24: aload_0
      25: getfield      #58                 // Field sspRange:Lorg/bouncycastle/asn1/its/SspRange;
      28: invokevirtual #61                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      31: new           #30                 // class org/bouncycastle/asn1/DERSequence
      34: dup
      35: aload_1
      36: invokespecial #66                 // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      39: areturn
}
