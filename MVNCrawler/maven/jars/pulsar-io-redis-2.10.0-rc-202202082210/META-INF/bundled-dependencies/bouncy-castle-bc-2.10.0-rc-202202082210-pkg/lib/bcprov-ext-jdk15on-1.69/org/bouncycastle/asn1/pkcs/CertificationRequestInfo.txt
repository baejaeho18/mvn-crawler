public class org.bouncycastle.asn1.pkcs.CertificationRequestInfo extends org.bouncycastle.asn1.ASN1Object {
  org.bouncycastle.asn1.ASN1Integer version;

  org.bouncycastle.asn1.x500.X500Name subject;

  org.bouncycastle.asn1.x509.SubjectPublicKeyInfo subjectPKInfo;

  org.bouncycastle.asn1.ASN1Set attributes;

  public static org.bouncycastle.asn1.pkcs.CertificationRequestInfo getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #61                 // class org/bouncycastle/asn1/pkcs/CertificationRequestInfo
       4: ifeq          12
       7: aload_0
       8: checkcast     #61                 // class org/bouncycastle/asn1/pkcs/CertificationRequestInfo
      11: areturn
      12: aload_0
      13: ifnull        28
      16: new           #61                 // class org/bouncycastle/asn1/pkcs/CertificationRequestInfo
      19: dup
      20: aload_0
      21: invokestatic  #137                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      24: invokespecial #146                // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      27: areturn
      28: aconst_null
      29: areturn

  public org.bouncycastle.asn1.pkcs.CertificationRequestInfo(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.x509.SubjectPublicKeyInfo, org.bouncycastle.asn1.ASN1Set);
    Code:
       0: aload_0
       1: invokespecial #133                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: new           #52                 // class org/bouncycastle/asn1/ASN1Integer
       8: dup
       9: lconst_0
      10: invokespecial #132                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      13: putfield      #124                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      16: aload_0
      17: aconst_null
      18: putfield      #125                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      21: aload_1
      22: ifnull        29
      25: aload_2
      26: ifnonnull     39
      29: new           #49                 // class java/lang/IllegalArgumentException
      32: dup
      33: ldc           #1                  // String Not all mandatory fields set in CertificationRequestInfo generator.
      35: invokespecial #129                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_3
      40: invokestatic  #147                // Method validateAttributes:(Lorg/bouncycastle/asn1/ASN1Set;)V
      43: aload_0
      44: aload_1
      45: putfield      #126                // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
      48: aload_0
      49: aload_2
      50: putfield      #127                // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      53: aload_0
      54: aload_3
      55: putfield      #125                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      58: return

  public org.bouncycastle.asn1.pkcs.CertificationRequestInfo(org.bouncycastle.asn1.x509.X509Name, org.bouncycastle.asn1.x509.SubjectPublicKeyInfo, org.bouncycastle.asn1.ASN1Set);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #151                // Method org/bouncycastle/asn1/x509/X509Name.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
       5: invokestatic  #149                // Method org/bouncycastle/asn1/x500/X500Name.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x500/X500Name;
       8: aload_2
       9: aload_3
      10: invokespecial #148                // Method "<init>":(Lorg/bouncycastle/asn1/x500/X500Name;Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;Lorg/bouncycastle/asn1/ASN1Set;)V
      13: return

  public org.bouncycastle.asn1.pkcs.CertificationRequestInfo(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #133                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: new           #52                 // class org/bouncycastle/asn1/ASN1Integer
       8: dup
       9: lconst_0
      10: invokespecial #132                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      13: putfield      #124                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      16: aload_0
      17: aconst_null
      18: putfield      #125                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      21: aload_0
      22: aload_1
      23: iconst_0
      24: invokevirtual #136                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      27: checkcast     #52                 // class org/bouncycastle/asn1/ASN1Integer
      30: putfield      #124                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      33: aload_0
      34: aload_1
      35: iconst_1
      36: invokevirtual #136                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      39: invokestatic  #149                // Method org/bouncycastle/asn1/x500/X500Name.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x500/X500Name;
      42: putfield      #126                // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
      45: aload_0
      46: aload_1
      47: iconst_2
      48: invokevirtual #136                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      51: invokestatic  #150                // Method org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      54: putfield      #127                // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      57: aload_1
      58: invokevirtual #135                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      61: iconst_3
      62: if_icmple     83
      65: aload_1
      66: iconst_3
      67: invokevirtual #136                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      70: checkcast     #57                 // class org/bouncycastle/asn1/ASN1TaggedObject
      73: astore_2
      74: aload_0
      75: aload_2
      76: iconst_0
      77: invokestatic  #140                // Method org/bouncycastle/asn1/ASN1Set.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Set;
      80: putfield      #125                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      83: aload_0
      84: getfield      #125                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      87: invokestatic  #147                // Method validateAttributes:(Lorg/bouncycastle/asn1/ASN1Set;)V
      90: aload_0
      91: getfield      #126                // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
      94: ifnull        111
      97: aload_0
      98: getfield      #124                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
     101: ifnull        111
     104: aload_0
     105: getfield      #127                // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
     108: ifnonnull     121
     111: new           #49                 // class java/lang/IllegalArgumentException
     114: dup
     115: ldc           #1                  // String Not all mandatory fields set in CertificationRequestInfo generator.
     117: invokespecial #129                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: return

  public org.bouncycastle.asn1.ASN1Integer getVersion();
    Code:
       0: aload_0
       1: getfield      #124                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
       4: areturn

  public org.bouncycastle.asn1.x500.X500Name getSubject();
    Code:
       0: aload_0
       1: getfield      #126                // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
       4: areturn

  public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo();
    Code:
       0: aload_0
       1: getfield      #127                // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
       4: areturn

  public org.bouncycastle.asn1.ASN1Set getAttributes();
    Code:
       0: aload_0
       1: getfield      #125                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
       4: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #51                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: iconst_4
       5: invokespecial #130                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":(I)V
       8: astore_1
       9: aload_1
      10: aload_0
      11: getfield      #124                // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      14: invokevirtual #131                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      17: aload_1
      18: aload_0
      19: getfield      #126                // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
      22: invokevirtual #131                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      25: aload_1
      26: aload_0
      27: getfield      #127                // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      30: invokevirtual #131                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      33: aload_0
      34: getfield      #125                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      37: ifnull        57
      40: aload_1
      41: new           #59                 // class org/bouncycastle/asn1/DERTaggedObject
      44: dup
      45: iconst_0
      46: iconst_0
      47: aload_0
      48: getfield      #125                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      51: invokespecial #142                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
      54: invokevirtual #131                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      57: new           #58                 // class org/bouncycastle/asn1/DERSequence
      60: dup
      61: aload_1
      62: invokespecial #141                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      65: areturn

  private static void validateAttributes(org.bouncycastle.asn1.ASN1Set);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #139                // Method org/bouncycastle/asn1/ASN1Set.getObjects:()Ljava/util/Enumeration;
       9: astore_1
      10: aload_1
      11: invokeinterface #152,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      16: ifeq          66
      19: aload_1
      20: invokeinterface #153,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      25: invokestatic  #145                // Method org/bouncycastle/asn1/pkcs/Attribute.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/pkcs/Attribute;
      28: astore_2
      29: aload_2
      30: invokevirtual #143                // Method org/bouncycastle/asn1/pkcs/Attribute.getAttrType:()Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      33: getstatic     #128                // Field org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.pkcs_9_at_challengePassword:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      36: invokevirtual #134                // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.equals:(Lorg/bouncycastle/asn1/ASN1Primitive;)Z
      39: ifeq          63
      42: aload_2
      43: invokevirtual #144                // Method org/bouncycastle/asn1/pkcs/Attribute.getAttrValues:()Lorg/bouncycastle/asn1/ASN1Set;
      46: invokevirtual #138                // Method org/bouncycastle/asn1/ASN1Set.size:()I
      49: iconst_1
      50: if_icmpeq     63
      53: new           #49                 // class java/lang/IllegalArgumentException
      56: dup
      57: ldc           #2                  // String challengePassword attribute must have one value
      59: invokespecial #129                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: goto          10
      66: return
}
