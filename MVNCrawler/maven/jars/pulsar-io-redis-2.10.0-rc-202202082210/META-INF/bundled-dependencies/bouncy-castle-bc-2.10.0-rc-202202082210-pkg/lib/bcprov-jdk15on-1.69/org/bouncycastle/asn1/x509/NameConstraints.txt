public class org.bouncycastle.asn1.x509.NameConstraints extends org.bouncycastle.asn1.ASN1Object {
  private org.bouncycastle.asn1.x509.GeneralSubtree[] permitted;

  private org.bouncycastle.asn1.x509.GeneralSubtree[] excluded;

  public static org.bouncycastle.asn1.x509.NameConstraints getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #49                 // class org/bouncycastle/asn1/x509/NameConstraints
       4: ifeq          12
       7: aload_0
       8: checkcast     #49                 // class org/bouncycastle/asn1/x509/NameConstraints
      11: areturn
      12: aload_0
      13: ifnull        28
      16: new           #49                 // class org/bouncycastle/asn1/x509/NameConstraints
      19: dup
      20: aload_0
      21: invokestatic  #114                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      24: invokespecial #122                // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      27: areturn
      28: aconst_null
      29: areturn

  private org.bouncycastle.asn1.x509.NameConstraints(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #110                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_1
       5: invokevirtual #112                // Method org/bouncycastle/asn1/ASN1Sequence.getObjects:()Ljava/util/Enumeration;
       8: astore_2
       9: aload_2
      10: invokeinterface #125,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      15: ifeq          125
      18: aload_2
      19: invokeinterface #126,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      24: invokestatic  #117                // Method org/bouncycastle/asn1/ASN1TaggedObject.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1TaggedObject;
      27: astore_3
      28: aload_3
      29: invokevirtual #116                // Method org/bouncycastle/asn1/ASN1TaggedObject.getTagNo:()I
      32: lookupswitch  { // 2
                     0: 60
                     1: 76
               default: 92
          }
      60: aload_0
      61: aload_0
      62: aload_3
      63: iconst_0
      64: invokestatic  #115                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Sequence;
      67: invokespecial #123                // Method createArray:(Lorg/bouncycastle/asn1/ASN1Sequence;)[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
      70: putfield      #101                // Field permitted:[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
      73: goto          122
      76: aload_0
      77: aload_0
      78: aload_3
      79: iconst_0
      80: invokestatic  #115                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Sequence;
      83: invokespecial #123                // Method createArray:(Lorg/bouncycastle/asn1/ASN1Sequence;)[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
      86: putfield      #100                // Field excluded:[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
      89: goto          122
      92: new           #38                 // class java/lang/IllegalArgumentException
      95: dup
      96: new           #39                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #103                // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #1                  // String Unknown tag encountered:
     105: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_3
     109: invokevirtual #116                // Method org/bouncycastle/asn1/ASN1TaggedObject.getTagNo:()I
     112: invokevirtual #105                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     115: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokespecial #102                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     121: athrow
     122: goto          9
     125: return

  public org.bouncycastle.asn1.x509.NameConstraints(org.bouncycastle.asn1.x509.GeneralSubtree[], org.bouncycastle.asn1.x509.GeneralSubtree[]);
    Code:
       0: aload_0
       1: invokespecial #110                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #124                // Method cloneSubtree:([Lorg/bouncycastle/asn1/x509/GeneralSubtree;)[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
       9: putfield      #101                // Field permitted:[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
      12: aload_0
      13: aload_2
      14: invokestatic  #124                // Method cloneSubtree:([Lorg/bouncycastle/asn1/x509/GeneralSubtree;)[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
      17: putfield      #100                // Field excluded:[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
      20: return

  private org.bouncycastle.asn1.x509.GeneralSubtree[] createArray(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_1
       1: invokevirtual #111                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       4: anewarray     #48                 // class org/bouncycastle/asn1/x509/GeneralSubtree
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_2
      12: arraylength
      13: if_icmpeq     33
      16: aload_2
      17: iload_3
      18: aload_1
      19: iload_3
      20: invokevirtual #113                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      23: invokestatic  #121                // Method org/bouncycastle/asn1/x509/GeneralSubtree.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/GeneralSubtree;
      26: aastore
      27: iinc          3, 1
      30: goto          10
      33: aload_2
      34: areturn

  public org.bouncycastle.asn1.x509.GeneralSubtree[] getPermittedSubtrees();
    Code:
       0: aload_0
       1: getfield      #101                // Field permitted:[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
       4: invokestatic  #124                // Method cloneSubtree:([Lorg/bouncycastle/asn1/x509/GeneralSubtree;)[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
       7: areturn

  public org.bouncycastle.asn1.x509.GeneralSubtree[] getExcludedSubtrees();
    Code:
       0: aload_0
       1: getfield      #100                // Field excluded:[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
       4: invokestatic  #124                // Method cloneSubtree:([Lorg/bouncycastle/asn1/x509/GeneralSubtree;)[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
       7: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #42                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: iconst_2
       5: invokespecial #108                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":(I)V
       8: astore_1
       9: aload_0
      10: getfield      #101                // Field permitted:[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
      13: ifnull        40
      16: aload_1
      17: new           #47                 // class org/bouncycastle/asn1/DERTaggedObject
      20: dup
      21: iconst_0
      22: iconst_0
      23: new           #46                 // class org/bouncycastle/asn1/DERSequence
      26: dup
      27: aload_0
      28: getfield      #101                // Field permitted:[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
      31: invokespecial #118                // Method org/bouncycastle/asn1/DERSequence."<init>":([Lorg/bouncycastle/asn1/ASN1Encodable;)V
      34: invokespecial #120                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
      37: invokevirtual #109                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      40: aload_0
      41: getfield      #100                // Field excluded:[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
      44: ifnull        71
      47: aload_1
      48: new           #47                 // class org/bouncycastle/asn1/DERTaggedObject
      51: dup
      52: iconst_0
      53: iconst_1
      54: new           #46                 // class org/bouncycastle/asn1/DERSequence
      57: dup
      58: aload_0
      59: getfield      #100                // Field excluded:[Lorg/bouncycastle/asn1/x509/GeneralSubtree;
      62: invokespecial #118                // Method org/bouncycastle/asn1/DERSequence."<init>":([Lorg/bouncycastle/asn1/ASN1Encodable;)V
      65: invokespecial #120                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
      68: invokevirtual #109                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      71: new           #46                 // class org/bouncycastle/asn1/DERSequence
      74: dup
      75: aload_1
      76: invokespecial #119                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      79: areturn

  private static org.bouncycastle.asn1.x509.GeneralSubtree[] cloneSubtree(org.bouncycastle.asn1.x509.GeneralSubtree[]);
    Code:
       0: aload_0
       1: ifnull        21
       4: aload_0
       5: arraylength
       6: anewarray     #48                 // class org/bouncycastle/asn1/x509/GeneralSubtree
       9: astore_1
      10: aload_0
      11: iconst_0
      12: aload_1
      13: iconst_0
      14: aload_1
      15: arraylength
      16: invokestatic  #107                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      19: aload_1
      20: areturn
      21: aconst_null
      22: areturn
}
