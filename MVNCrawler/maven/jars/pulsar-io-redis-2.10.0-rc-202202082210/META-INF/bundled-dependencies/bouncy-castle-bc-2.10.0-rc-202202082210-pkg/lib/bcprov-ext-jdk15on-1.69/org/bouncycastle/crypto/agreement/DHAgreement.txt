public class org.bouncycastle.crypto.agreement.DHAgreement {
  private static final java.math.BigInteger ONE;

  private org.bouncycastle.crypto.params.DHPrivateKeyParameters key;

  private org.bouncycastle.crypto.params.DHParameters dhParams;

  private java.math.BigInteger privateValue;

  private java.security.SecureRandom random;

  public org.bouncycastle.crypto.agreement.DHAgreement();
    Code:
       0: aload_0
       1: invokespecial #117                // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: instanceof    #63                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       4: ifeq          31
       7: aload_1
       8: checkcast     #63                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      11: astore_3
      12: aload_0
      13: aload_3
      14: invokevirtual #138                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getRandom:()Ljava/security/SecureRandom;
      17: putfield      #112                // Field random:Ljava/security/SecureRandom;
      20: aload_3
      21: invokevirtual #139                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      24: checkcast     #58                 // class org/bouncycastle/crypto/params/AsymmetricKeyParameter
      27: astore_2
      28: goto          43
      31: aload_0
      32: invokestatic  #127                // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
      35: putfield      #112                // Field random:Ljava/security/SecureRandom;
      38: aload_1
      39: checkcast     #58                 // class org/bouncycastle/crypto/params/AsymmetricKeyParameter
      42: astore_2
      43: aload_2
      44: instanceof    #61                 // class org/bouncycastle/crypto/params/DHPrivateKeyParameters
      47: ifne          60
      50: new           #50                 // class java/lang/IllegalArgumentException
      53: dup
      54: ldc           #1                  // String DHEngine expects DHPrivateKeyParameters
      56: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: aload_2
      62: checkcast     #61                 // class org/bouncycastle/crypto/params/DHPrivateKeyParameters
      65: putfield      #114                // Field key:Lorg/bouncycastle/crypto/params/DHPrivateKeyParameters;
      68: aload_0
      69: aload_0
      70: getfield      #114                // Field key:Lorg/bouncycastle/crypto/params/DHPrivateKeyParameters;
      73: invokevirtual #135                // Method org/bouncycastle/crypto/params/DHPrivateKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/DHParameters;
      76: putfield      #113                // Field dhParams:Lorg/bouncycastle/crypto/params/DHParameters;
      79: return

  public java.math.BigInteger calculateMessage();
    Code:
       0: new           #57                 // class org/bouncycastle/crypto/generators/DHKeyPairGenerator
       3: dup
       4: invokespecial #128                // Method org/bouncycastle/crypto/generators/DHKeyPairGenerator."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #59                 // class org/bouncycastle/crypto/params/DHKeyGenerationParameters
      12: dup
      13: aload_0
      14: getfield      #112                // Field random:Ljava/security/SecureRandom;
      17: aload_0
      18: getfield      #113                // Field dhParams:Lorg/bouncycastle/crypto/params/DHParameters;
      21: invokespecial #131                // Method org/bouncycastle/crypto/params/DHKeyGenerationParameters."<init>":(Ljava/security/SecureRandom;Lorg/bouncycastle/crypto/params/DHParameters;)V
      24: invokevirtual #130                // Method org/bouncycastle/crypto/generators/DHKeyPairGenerator.init:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V
      27: aload_1
      28: invokevirtual #129                // Method org/bouncycastle/crypto/generators/DHKeyPairGenerator.generateKeyPair:()Lorg/bouncycastle/crypto/AsymmetricCipherKeyPair;
      31: astore_2
      32: aload_0
      33: aload_2
      34: invokevirtual #125                // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair.getPrivate:()Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      37: checkcast     #61                 // class org/bouncycastle/crypto/params/DHPrivateKeyParameters
      40: invokevirtual #134                // Method org/bouncycastle/crypto/params/DHPrivateKeyParameters.getX:()Ljava/math/BigInteger;
      43: putfield      #111                // Field privateValue:Ljava/math/BigInteger;
      46: aload_2
      47: invokevirtual #126                // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair.getPublic:()Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      50: checkcast     #62                 // class org/bouncycastle/crypto/params/DHPublicKeyParameters
      53: invokevirtual #136                // Method org/bouncycastle/crypto/params/DHPublicKeyParameters.getY:()Ljava/math/BigInteger;
      56: areturn

  public java.math.BigInteger calculateAgreement(org.bouncycastle.crypto.params.DHPublicKeyParameters, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #137                // Method org/bouncycastle/crypto/params/DHPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/DHParameters;
       4: aload_0
       5: getfield      #113                // Field dhParams:Lorg/bouncycastle/crypto/params/DHParameters;
       8: invokevirtual #132                // Method org/bouncycastle/crypto/params/DHParameters.equals:(Ljava/lang/Object;)Z
      11: ifne          24
      14: new           #50                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #2                  // String Diffie-Hellman public key has wrong parameters.
      20: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #113                // Field dhParams:Lorg/bouncycastle/crypto/params/DHParameters;
      28: invokevirtual #133                // Method org/bouncycastle/crypto/params/DHParameters.getP:()Ljava/math/BigInteger;
      31: astore_3
      32: aload_1
      33: invokevirtual #136                // Method org/bouncycastle/crypto/params/DHPublicKeyParameters.getY:()Ljava/math/BigInteger;
      36: astore        4
      38: aload         4
      40: ifnull        69
      43: aload         4
      45: getstatic     #110                // Field ONE:Ljava/math/BigInteger;
      48: invokevirtual #120                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      51: ifle          69
      54: aload         4
      56: aload_3
      57: getstatic     #110                // Field ONE:Ljava/math/BigInteger;
      60: invokevirtual #123                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      63: invokevirtual #120                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      66: iflt          79
      69: new           #50                 // class java/lang/IllegalArgumentException
      72: dup
      73: ldc           #3                  // String Diffie-Hellman public key is weak
      75: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload         4
      81: aload_0
      82: getfield      #111                // Field privateValue:Ljava/math/BigInteger;
      85: aload_3
      86: invokevirtual #124                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      89: astore        5
      91: aload         5
      93: getstatic     #110                // Field ONE:Ljava/math/BigInteger;
      96: invokevirtual #118                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      99: ifeq          112
     102: new           #51                 // class java/lang/IllegalStateException
     105: dup
     106: ldc           #4                  // String Shared key can\'t be 1
     108: invokespecial #116                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     111: athrow
     112: aload_2
     113: aload_0
     114: getfield      #114                // Field key:Lorg/bouncycastle/crypto/params/DHPrivateKeyParameters;
     117: invokevirtual #134                // Method org/bouncycastle/crypto/params/DHPrivateKeyParameters.getX:()Ljava/math/BigInteger;
     120: aload_3
     121: invokevirtual #124                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
     124: aload         5
     126: invokevirtual #122                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     129: aload_3
     130: invokevirtual #121                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     133: areturn

  static {};
    Code:
       0: lconst_1
       1: invokestatic  #119                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #110                // Field ONE:Ljava/math/BigInteger;
       7: return
}
