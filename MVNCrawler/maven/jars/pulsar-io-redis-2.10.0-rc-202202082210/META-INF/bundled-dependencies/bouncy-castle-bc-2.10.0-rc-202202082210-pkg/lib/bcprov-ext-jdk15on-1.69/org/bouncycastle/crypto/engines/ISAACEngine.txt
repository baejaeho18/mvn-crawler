public class org.bouncycastle.crypto.engines.ISAACEngine implements org.bouncycastle.crypto.StreamCipher {
  private final int sizeL;

  private final int stateArraySize;

  private int[] engineState;

  private int[] results;

  private int a;

  private int b;

  private int c;

  private int index;

  private byte[] keyStream;

  private byte[] workingKey;

  private boolean initialised;

  public org.bouncycastle.crypto.engines.ISAACEngine();
    Code:
       0: aload_0
       1: invokespecial #123                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        8
       7: putfield      #113                // Field sizeL:I
      10: aload_0
      11: sipush        256
      14: putfield      #114                // Field stateArraySize:I
      17: aload_0
      18: aconst_null
      19: putfield      #118                // Field engineState:[I
      22: aload_0
      23: aconst_null
      24: putfield      #119                // Field results:[I
      27: aload_0
      28: iconst_0
      29: putfield      #109                // Field a:I
      32: aload_0
      33: iconst_0
      34: putfield      #110                // Field b:I
      37: aload_0
      38: iconst_0
      39: putfield      #111                // Field c:I
      42: aload_0
      43: iconst_0
      44: putfield      #112                // Field index:I
      47: aload_0
      48: sipush        1024
      51: newarray       byte
      53: putfield      #116                // Field keyStream:[B
      56: aload_0
      57: aconst_null
      58: putfield      #117                // Field workingKey:[B
      61: aload_0
      62: iconst_0
      63: putfield      #115                // Field initialised:Z
      66: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #76                 // class org/bouncycastle/crypto/params/KeyParameter
       4: ifne          40
       7: new           #67                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #70                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #125                // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #5                  // String invalid parameter passed to ISAAC init -
      20: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #124                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #120                // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #126                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #121                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_2
      41: checkcast     #76                 // class org/bouncycastle/crypto/params/KeyParameter
      44: astore_3
      45: aload_0
      46: aload_3
      47: invokevirtual #135                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      50: invokespecial #132                // Method setKey:([B)V
      53: return

  public byte returnByte(byte);
    Code:
       0: aload_0
       1: getfield      #112                // Field index:I
       4: ifne          22
       7: aload_0
       8: invokespecial #131                // Method isaac:()V
      11: aload_0
      12: aload_0
      13: getfield      #119                // Field results:[I
      16: invokestatic  #137                // Method org/bouncycastle/util/Pack.intToBigEndian:([I)[B
      19: putfield      #116                // Field keyStream:[B
      22: aload_0
      23: getfield      #116                // Field keyStream:[B
      26: aload_0
      27: getfield      #112                // Field index:I
      30: baload
      31: iload_1
      32: ixor
      33: i2b
      34: istore_2
      35: aload_0
      36: aload_0
      37: getfield      #112                // Field index:I
      40: iconst_1
      41: iadd
      42: sipush        1023
      45: iand
      46: putfield      #112                // Field index:I
      49: iload_2
      50: ireturn

  public int processBytes(byte[], int, int, byte[], int);
    Code:
       0: aload_0
       1: getfield      #115                // Field initialised:Z
       4: ifne          37
       7: new           #68                 // class java/lang/IllegalStateException
      10: dup
      11: new           #70                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #125                // Method java/lang/StringBuilder."<init>":()V
      18: aload_0
      19: invokevirtual #134                // Method getAlgorithmName:()Ljava/lang/String;
      22: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #2                  // String  not initialised
      27: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #126                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #122                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_2
      38: iload_3
      39: iadd
      40: aload_1
      41: arraylength
      42: if_icmple     55
      45: new           #72                 // class org/bouncycastle/crypto/DataLengthException
      48: dup
      49: ldc           #4                  // String input buffer too short
      51: invokespecial #129                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: iload         5
      57: iload_3
      58: iadd
      59: aload         4
      61: arraylength
      62: if_icmple     75
      65: new           #73                 // class org/bouncycastle/crypto/OutputLengthException
      68: dup
      69: ldc           #6                  // String output buffer too short
      71: invokespecial #130                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: iconst_0
      76: istore        6
      78: iload         6
      80: iload_3
      81: if_icmpge     151
      84: aload_0
      85: getfield      #112                // Field index:I
      88: ifne          106
      91: aload_0
      92: invokespecial #131                // Method isaac:()V
      95: aload_0
      96: aload_0
      97: getfield      #119                // Field results:[I
     100: invokestatic  #137                // Method org/bouncycastle/util/Pack.intToBigEndian:([I)[B
     103: putfield      #116                // Field keyStream:[B
     106: aload         4
     108: iload         6
     110: iload         5
     112: iadd
     113: aload_0
     114: getfield      #116                // Field keyStream:[B
     117: aload_0
     118: getfield      #112                // Field index:I
     121: baload
     122: aload_1
     123: iload         6
     125: iload_2
     126: iadd
     127: baload
     128: ixor
     129: i2b
     130: bastore
     131: aload_0
     132: aload_0
     133: getfield      #112                // Field index:I
     136: iconst_1
     137: iadd
     138: sipush        1023
     141: iand
     142: putfield      #112                // Field index:I
     145: iinc          6, 1
     148: goto          78
     151: iload_3
     152: ireturn

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #3                  // String ISAAC
       2: areturn

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #117                // Field workingKey:[B
       5: invokespecial #132                // Method setKey:([B)V
       8: return

  private void setKey(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field workingKey:[B
       5: aload_0
       6: getfield      #118                // Field engineState:[I
       9: ifnonnull     21
      12: aload_0
      13: sipush        256
      16: newarray       int
      18: putfield      #118                // Field engineState:[I
      21: aload_0
      22: getfield      #119                // Field results:[I
      25: ifnonnull     37
      28: aload_0
      29: sipush        256
      32: newarray       int
      34: putfield      #119                // Field results:[I
      37: iconst_0
      38: istore_2
      39: iload_2
      40: sipush        256
      43: if_icmpge     66
      46: aload_0
      47: getfield      #118                // Field engineState:[I
      50: iload_2
      51: aload_0
      52: getfield      #119                // Field results:[I
      55: iload_2
      56: iconst_0
      57: dup_x2
      58: iastore
      59: iastore
      60: iinc          2, 1
      63: goto          39
      66: aload_0
      67: aload_0
      68: aload_0
      69: iconst_0
      70: dup_x1
      71: putfield      #111                // Field c:I
      74: dup_x1
      75: putfield      #110                // Field b:I
      78: putfield      #109                // Field a:I
      81: aload_0
      82: iconst_0
      83: putfield      #112                // Field index:I
      86: aload_1
      87: arraylength
      88: aload_1
      89: arraylength
      90: iconst_3
      91: iand
      92: iadd
      93: newarray       byte
      95: astore        5
      97: aload_1
      98: iconst_0
      99: aload         5
     101: iconst_0
     102: aload_1
     103: arraylength
     104: invokestatic  #128                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     107: iconst_0
     108: istore_2
     109: iload_2
     110: aload         5
     112: arraylength
     113: if_icmpge     136
     116: aload_0
     117: getfield      #119                // Field results:[I
     120: iload_2
     121: iconst_2
     122: iushr
     123: aload         5
     125: iload_2
     126: invokestatic  #136                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
     129: iastore
     130: iinc          2, 4
     133: goto          109
     136: bipush        8
     138: newarray       int
     140: astore        6
     142: iconst_0
     143: istore_2
     144: iload_2
     145: bipush        8
     147: if_icmpge     162
     150: aload         6
     152: iload_2
     153: ldc           #1                  // int -1640531527
     155: iastore
     156: iinc          2, 1
     159: goto          144
     162: iconst_0
     163: istore_2
     164: iload_2
     165: iconst_4
     166: if_icmpge     181
     169: aload_0
     170: aload         6
     172: invokespecial #133                // Method mix:([I)V
     175: iinc          2, 1
     178: goto          164
     181: iconst_0
     182: istore_2
     183: iload_2
     184: iconst_2
     185: if_icmpge     295
     188: iconst_0
     189: istore_3
     190: iload_3
     191: sipush        256
     194: if_icmpge     289
     197: iconst_0
     198: istore        4
     200: iload         4
     202: bipush        8
     204: if_icmpge     247
     207: aload         6
     209: iload         4
     211: dup2
     212: iaload
     213: iload_2
     214: iconst_1
     215: if_icmpge     230
     218: aload_0
     219: getfield      #119                // Field results:[I
     222: iload_3
     223: iload         4
     225: iadd
     226: iaload
     227: goto          239
     230: aload_0
     231: getfield      #118                // Field engineState:[I
     234: iload_3
     235: iload         4
     237: iadd
     238: iaload
     239: iadd
     240: iastore
     241: iinc          4, 1
     244: goto          200
     247: aload_0
     248: aload         6
     250: invokespecial #133                // Method mix:([I)V
     253: iconst_0
     254: istore        4
     256: iload         4
     258: bipush        8
     260: if_icmpge     283
     263: aload_0
     264: getfield      #118                // Field engineState:[I
     267: iload_3
     268: iload         4
     270: iadd
     271: aload         6
     273: iload         4
     275: iaload
     276: iastore
     277: iinc          4, 1
     280: goto          256
     283: iinc          3, 8
     286: goto          190
     289: iinc          2, 1
     292: goto          183
     295: aload_0
     296: invokespecial #131                // Method isaac:()V
     299: aload_0
     300: iconst_1
     301: putfield      #115                // Field initialised:Z
     304: return

  private void isaac();
    Code:
       0: aload_0
       1: dup
       2: getfield      #110                // Field b:I
       5: aload_0
       6: dup
       7: getfield      #111                // Field c:I
      10: iconst_1
      11: iadd
      12: dup_x1
      13: putfield      #111                // Field c:I
      16: iadd
      17: putfield      #110                // Field b:I
      20: iconst_0
      21: istore_1
      22: iload_1
      23: sipush        256
      26: if_icmpge     225
      29: aload_0
      30: getfield      #118                // Field engineState:[I
      33: iload_1
      34: iaload
      35: istore_2
      36: iload_1
      37: iconst_3
      38: iand
      39: tableswitch   { // 0 to 3
                     0: 68
                     1: 87
                     2: 106
                     3: 124
               default: 140
          }
      68: aload_0
      69: dup
      70: getfield      #109                // Field a:I
      73: aload_0
      74: getfield      #109                // Field a:I
      77: bipush        13
      79: ishl
      80: ixor
      81: putfield      #109                // Field a:I
      84: goto          140
      87: aload_0
      88: dup
      89: getfield      #109                // Field a:I
      92: aload_0
      93: getfield      #109                // Field a:I
      96: bipush        6
      98: iushr
      99: ixor
     100: putfield      #109                // Field a:I
     103: goto          140
     106: aload_0
     107: dup
     108: getfield      #109                // Field a:I
     111: aload_0
     112: getfield      #109                // Field a:I
     115: iconst_2
     116: ishl
     117: ixor
     118: putfield      #109                // Field a:I
     121: goto          140
     124: aload_0
     125: dup
     126: getfield      #109                // Field a:I
     129: aload_0
     130: getfield      #109                // Field a:I
     133: bipush        16
     135: iushr
     136: ixor
     137: putfield      #109                // Field a:I
     140: aload_0
     141: dup
     142: getfield      #109                // Field a:I
     145: aload_0
     146: getfield      #118                // Field engineState:[I
     149: iload_1
     150: sipush        128
     153: iadd
     154: sipush        255
     157: iand
     158: iaload
     159: iadd
     160: putfield      #109                // Field a:I
     163: aload_0
     164: getfield      #118                // Field engineState:[I
     167: iload_1
     168: aload_0
     169: getfield      #118                // Field engineState:[I
     172: iload_2
     173: iconst_2
     174: iushr
     175: sipush        255
     178: iand
     179: iaload
     180: aload_0
     181: getfield      #109                // Field a:I
     184: iadd
     185: aload_0
     186: getfield      #110                // Field b:I
     189: iadd
     190: dup
     191: istore_3
     192: iastore
     193: aload_0
     194: getfield      #119                // Field results:[I
     197: iload_1
     198: aload_0
     199: aload_0
     200: getfield      #118                // Field engineState:[I
     203: iload_3
     204: bipush        10
     206: iushr
     207: sipush        255
     210: iand
     211: iaload
     212: iload_2
     213: iadd
     214: dup_x1
     215: putfield      #110                // Field b:I
     218: iastore
     219: iinc          1, 1
     222: goto          22
     225: return

  private void mix(int[]);
    Code:
       0: aload_1
       1: iconst_0
       2: dup2
       3: iaload
       4: aload_1
       5: iconst_1
       6: iaload
       7: bipush        11
       9: ishl
      10: ixor
      11: iastore
      12: aload_1
      13: iconst_3
      14: dup2
      15: iaload
      16: aload_1
      17: iconst_0
      18: iaload
      19: iadd
      20: iastore
      21: aload_1
      22: iconst_1
      23: dup2
      24: iaload
      25: aload_1
      26: iconst_2
      27: iaload
      28: iadd
      29: iastore
      30: aload_1
      31: iconst_1
      32: dup2
      33: iaload
      34: aload_1
      35: iconst_2
      36: iaload
      37: iconst_2
      38: iushr
      39: ixor
      40: iastore
      41: aload_1
      42: iconst_4
      43: dup2
      44: iaload
      45: aload_1
      46: iconst_1
      47: iaload
      48: iadd
      49: iastore
      50: aload_1
      51: iconst_2
      52: dup2
      53: iaload
      54: aload_1
      55: iconst_3
      56: iaload
      57: iadd
      58: iastore
      59: aload_1
      60: iconst_2
      61: dup2
      62: iaload
      63: aload_1
      64: iconst_3
      65: iaload
      66: bipush        8
      68: ishl
      69: ixor
      70: iastore
      71: aload_1
      72: iconst_5
      73: dup2
      74: iaload
      75: aload_1
      76: iconst_2
      77: iaload
      78: iadd
      79: iastore
      80: aload_1
      81: iconst_3
      82: dup2
      83: iaload
      84: aload_1
      85: iconst_4
      86: iaload
      87: iadd
      88: iastore
      89: aload_1
      90: iconst_3
      91: dup2
      92: iaload
      93: aload_1
      94: iconst_4
      95: iaload
      96: bipush        16
      98: iushr
      99: ixor
     100: iastore
     101: aload_1
     102: bipush        6
     104: dup2
     105: iaload
     106: aload_1
     107: iconst_3
     108: iaload
     109: iadd
     110: iastore
     111: aload_1
     112: iconst_4
     113: dup2
     114: iaload
     115: aload_1
     116: iconst_5
     117: iaload
     118: iadd
     119: iastore
     120: aload_1
     121: iconst_4
     122: dup2
     123: iaload
     124: aload_1
     125: iconst_5
     126: iaload
     127: bipush        10
     129: ishl
     130: ixor
     131: iastore
     132: aload_1
     133: bipush        7
     135: dup2
     136: iaload
     137: aload_1
     138: iconst_4
     139: iaload
     140: iadd
     141: iastore
     142: aload_1
     143: iconst_5
     144: dup2
     145: iaload
     146: aload_1
     147: bipush        6
     149: iaload
     150: iadd
     151: iastore
     152: aload_1
     153: iconst_5
     154: dup2
     155: iaload
     156: aload_1
     157: bipush        6
     159: iaload
     160: iconst_4
     161: iushr
     162: ixor
     163: iastore
     164: aload_1
     165: iconst_0
     166: dup2
     167: iaload
     168: aload_1
     169: iconst_5
     170: iaload
     171: iadd
     172: iastore
     173: aload_1
     174: bipush        6
     176: dup2
     177: iaload
     178: aload_1
     179: bipush        7
     181: iaload
     182: iadd
     183: iastore
     184: aload_1
     185: bipush        6
     187: dup2
     188: iaload
     189: aload_1
     190: bipush        7
     192: iaload
     193: bipush        8
     195: ishl
     196: ixor
     197: iastore
     198: aload_1
     199: iconst_1
     200: dup2
     201: iaload
     202: aload_1
     203: bipush        6
     205: iaload
     206: iadd
     207: iastore
     208: aload_1
     209: bipush        7
     211: dup2
     212: iaload
     213: aload_1
     214: iconst_0
     215: iaload
     216: iadd
     217: iastore
     218: aload_1
     219: bipush        7
     221: dup2
     222: iaload
     223: aload_1
     224: iconst_0
     225: iaload
     226: bipush        9
     228: iushr
     229: ixor
     230: iastore
     231: aload_1
     232: iconst_2
     233: dup2
     234: iaload
     235: aload_1
     236: bipush        7
     238: iaload
     239: iadd
     240: iastore
     241: aload_1
     242: iconst_0
     243: dup2
     244: iaload
     245: aload_1
     246: iconst_1
     247: iaload
     248: iadd
     249: iastore
     250: return
}
