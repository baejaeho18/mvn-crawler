public class org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings extends org.bouncycastle.jcajce.provider.util.AlgorithmProvider {
  private static final java.lang.String PREFIX;

  public org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings();
    Code:
       0: aload_0
       1: invokespecial #42                 // Method org/bouncycastle/jcajce/provider/util/AlgorithmProvider."<init>":()V
       4: return

  public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider);
    Code:
       0: aload_1
       1: ldc           #2                  // String SecretKeyFactory.PBKDF-OPENSSL
       3: new           #22                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      10: getstatic     #37                 // Field PREFIX:Ljava/lang/String;
      13: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #1                  // String $PBKDF
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: invokeinterface #43,  3           // InterfaceMethod org/bouncycastle/jcajce/provider/config/ConfigurableProvider.addAlgorithm:(Ljava/lang/String;Ljava/lang/String;)V
      29: return

  static {};
    Code:
       0: ldc           #3                  // class org/bouncycastle/jcajce/provider/symmetric/OpenSSLPBKDF
       2: invokevirtual #38                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: putstatic     #37                 // Field PREFIX:Ljava/lang/String;
       8: return
}
