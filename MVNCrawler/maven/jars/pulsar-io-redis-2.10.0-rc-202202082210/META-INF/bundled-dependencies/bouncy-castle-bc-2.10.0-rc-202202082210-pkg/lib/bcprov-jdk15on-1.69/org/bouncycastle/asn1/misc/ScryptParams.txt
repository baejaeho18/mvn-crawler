public class org.bouncycastle.asn1.misc.ScryptParams extends org.bouncycastle.asn1.ASN1Object {
  private final byte[] salt;

  private final java.math.BigInteger costParameter;

  private final java.math.BigInteger blockSize;

  private final java.math.BigInteger parallelizationParameter;

  private final java.math.BigInteger keyLength;

  public org.bouncycastle.asn1.misc.ScryptParams(byte[], int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: i2l
       4: invokestatic  #112                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       7: iload_3
       8: i2l
       9: invokestatic  #112                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      12: iload         4
      14: i2l
      15: invokestatic  #112                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      18: aconst_null
      19: invokespecial #127                // Method "<init>":([BLjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      22: return

  public org.bouncycastle.asn1.misc.ScryptParams(byte[], int, int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: i2l
       4: invokestatic  #112                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       7: iload_3
       8: i2l
       9: invokestatic  #112                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      12: iload         4
      14: i2l
      15: invokestatic  #112                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      18: iload         5
      20: i2l
      21: invokestatic  #112                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      24: invokespecial #127                // Method "<init>":([BLjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      27: return

  public org.bouncycastle.asn1.misc.ScryptParams(byte[], java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #118                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #128                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       9: putfield      #102                // Field salt:[B
      12: aload_0
      13: aload_2
      14: putfield      #104                // Field costParameter:Ljava/math/BigInteger;
      17: aload_0
      18: aload_3
      19: putfield      #103                // Field blockSize:Ljava/math/BigInteger;
      22: aload_0
      23: aload         4
      25: putfield      #106                // Field parallelizationParameter:Ljava/math/BigInteger;
      28: aload_0
      29: aload         5
      31: putfield      #105                // Field keyLength:Ljava/math/BigInteger;
      34: return

  public static org.bouncycastle.asn1.misc.ScryptParams getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #56                 // class org/bouncycastle/asn1/misc/ScryptParams
       4: ifeq          12
       7: aload_0
       8: checkcast     #56                 // class org/bouncycastle/asn1/misc/ScryptParams
      11: areturn
      12: aload_0
      13: ifnull        28
      16: new           #56                 // class org/bouncycastle/asn1/misc/ScryptParams
      19: dup
      20: aload_0
      21: invokestatic  #123                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      24: invokespecial #126                // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      27: areturn
      28: aconst_null
      29: areturn

  private org.bouncycastle.asn1.misc.ScryptParams(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #118                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_1
       5: invokevirtual #121                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       8: iconst_4
       9: if_icmpeq     50
      12: aload_1
      13: invokevirtual #121                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      16: iconst_5
      17: if_icmpeq     50
      20: new           #46                 // class java/lang/IllegalArgumentException
      23: dup
      24: new           #47                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #108                // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #1                  // String invalid sequence: size =
      33: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #121                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      40: invokevirtual #110                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #109                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #107                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: aload_1
      52: iconst_0
      53: invokevirtual #122                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      56: invokestatic  #120                // Method org/bouncycastle/asn1/ASN1OctetString.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1OctetString;
      59: invokevirtual #119                // Method org/bouncycastle/asn1/ASN1OctetString.getOctets:()[B
      62: invokestatic  #128                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      65: putfield      #102                // Field salt:[B
      68: aload_0
      69: aload_1
      70: iconst_1
      71: invokevirtual #122                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      74: invokestatic  #117                // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
      77: invokevirtual #115                // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
      80: putfield      #104                // Field costParameter:Ljava/math/BigInteger;
      83: aload_0
      84: aload_1
      85: iconst_2
      86: invokevirtual #122                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      89: invokestatic  #117                // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
      92: invokevirtual #115                // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
      95: putfield      #103                // Field blockSize:Ljava/math/BigInteger;
      98: aload_0
      99: aload_1
     100: iconst_3
     101: invokevirtual #122                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     104: invokestatic  #117                // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     107: invokevirtual #115                // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     110: putfield      #106                // Field parallelizationParameter:Ljava/math/BigInteger;
     113: aload_1
     114: invokevirtual #121                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
     117: iconst_5
     118: if_icmpne     139
     121: aload_0
     122: aload_1
     123: iconst_4
     124: invokevirtual #122                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     127: invokestatic  #117                // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     130: invokevirtual #115                // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     133: putfield      #105                // Field keyLength:Ljava/math/BigInteger;
     136: goto          144
     139: aload_0
     140: aconst_null
     141: putfield      #105                // Field keyLength:Ljava/math/BigInteger;
     144: return

  public byte[] getSalt();
    Code:
       0: aload_0
       1: getfield      #102                // Field salt:[B
       4: invokestatic  #128                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public java.math.BigInteger getCostParameter();
    Code:
       0: aload_0
       1: getfield      #104                // Field costParameter:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getBlockSize();
    Code:
       0: aload_0
       1: getfield      #103                // Field blockSize:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getParallelizationParameter();
    Code:
       0: aload_0
       1: getfield      #106                // Field parallelizationParameter:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getKeyLength();
    Code:
       0: aload_0
       1: getfield      #105                // Field keyLength:Ljava/math/BigInteger;
       4: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #49                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: iconst_5
       5: invokespecial #113                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":(I)V
       8: astore_1
       9: aload_1
      10: new           #54                 // class org/bouncycastle/asn1/DEROctetString
      13: dup
      14: aload_0
      15: getfield      #102                // Field salt:[B
      18: invokespecial #124                // Method org/bouncycastle/asn1/DEROctetString."<init>":([B)V
      21: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      24: aload_1
      25: new           #50                 // class org/bouncycastle/asn1/ASN1Integer
      28: dup
      29: aload_0
      30: getfield      #104                // Field costParameter:Ljava/math/BigInteger;
      33: invokespecial #116                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(Ljava/math/BigInteger;)V
      36: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      39: aload_1
      40: new           #50                 // class org/bouncycastle/asn1/ASN1Integer
      43: dup
      44: aload_0
      45: getfield      #103                // Field blockSize:Ljava/math/BigInteger;
      48: invokespecial #116                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(Ljava/math/BigInteger;)V
      51: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      54: aload_1
      55: new           #50                 // class org/bouncycastle/asn1/ASN1Integer
      58: dup
      59: aload_0
      60: getfield      #106                // Field parallelizationParameter:Ljava/math/BigInteger;
      63: invokespecial #116                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(Ljava/math/BigInteger;)V
      66: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      69: aload_0
      70: getfield      #105                // Field keyLength:Ljava/math/BigInteger;
      73: ifnull        91
      76: aload_1
      77: new           #50                 // class org/bouncycastle/asn1/ASN1Integer
      80: dup
      81: aload_0
      82: getfield      #105                // Field keyLength:Ljava/math/BigInteger;
      85: invokespecial #116                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(Ljava/math/BigInteger;)V
      88: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      91: new           #55                 // class org/bouncycastle/asn1/DERSequence
      94: dup
      95: aload_1
      96: invokespecial #125                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      99: areturn
}
