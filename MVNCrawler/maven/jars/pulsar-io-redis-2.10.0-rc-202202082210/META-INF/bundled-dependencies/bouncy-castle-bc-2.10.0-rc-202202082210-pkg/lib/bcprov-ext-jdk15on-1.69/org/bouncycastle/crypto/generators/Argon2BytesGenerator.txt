public class org.bouncycastle.crypto.generators.Argon2BytesGenerator {
  private static final int ARGON2_BLOCK_SIZE;

  private static final int ARGON2_QWORDS_IN_BLOCK;

  private static final int ARGON2_ADDRESSES_IN_BLOCK;

  private static final int ARGON2_PREHASH_DIGEST_LENGTH;

  private static final int ARGON2_PREHASH_SEED_LENGTH;

  private static final int ARGON2_SYNC_POINTS;

  private static final int MIN_PARALLELISM;

  private static final int MAX_PARALLELISM;

  private static final int MIN_OUTLEN;

  private static final int MIN_ITERATIONS;

  private static final long M32L;

  private static final byte[] ZERO_BYTES;

  private org.bouncycastle.crypto.params.Argon2Parameters parameters;

  private org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block[] memory;

  private int segmentLength;

  private int laneLength;

  public org.bouncycastle.crypto.generators.Argon2BytesGenerator();
    Code:
       0: aload_0
       1: invokespecial #254                // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.bouncycastle.crypto.params.Argon2Parameters);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
       5: aload_1
       6: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
       9: iconst_1
      10: if_icmpge     23
      13: new           #137                // class java/lang/IllegalStateException
      16: dup
      17: ldc           #4                  // String lanes must be greater than 1
      19: invokespecial #253                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_1
      24: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      27: ldc           #1                  // int 16777216
      29: if_icmple     42
      32: new           #137                // class java/lang/IllegalStateException
      35: dup
      36: ldc           #5                  // String lanes must be less than 16777216
      38: invokespecial #253                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_1
      43: invokevirtual #301                // Method org/bouncycastle/crypto/params/Argon2Parameters.getMemory:()I
      46: iconst_2
      47: aload_1
      48: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      51: imul
      52: if_icmpge     101
      55: new           #137                // class java/lang/IllegalStateException
      58: dup
      59: new           #139                // class java/lang/StringBuilder
      62: dup
      63: invokespecial #255                // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #6                  // String memory is less than:
      68: invokevirtual #258                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: iconst_2
      72: aload_1
      73: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      76: imul
      77: invokevirtual #257                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: ldc           #2                  // String  expected
      82: invokevirtual #258                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: iconst_2
      86: aload_1
      87: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      90: imul
      91: invokevirtual #257                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: invokevirtual #256                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #253                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: aload_1
     102: invokevirtual #299                // Method org/bouncycastle/crypto/params/Argon2Parameters.getIterations:()I
     105: iconst_1
     106: if_icmpge     119
     109: new           #137                // class java/lang/IllegalStateException
     112: dup
     113: ldc           #3                  // String iterations is less than: 1
     115: invokespecial #253                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     118: athrow
     119: aload_0
     120: aload_1
     121: invokespecial #283                // Method doInit:(Lorg/bouncycastle/crypto/params/Argon2Parameters;)V
     124: return

  public int generateBytes(char[], byte[]);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
       5: invokevirtual #307                // Method org/bouncycastle/crypto/params/Argon2Parameters.getCharToByteConverter:()Lorg/bouncycastle/crypto/CharToByteConverter;
       8: aload_1
       9: invokeinterface #311,  2          // InterfaceMethod org/bouncycastle/crypto/CharToByteConverter.convert:([C)[B
      14: aload_2
      15: invokevirtual #268                // Method generateBytes:([B[B)I
      18: ireturn

  public int generateBytes(char[], byte[], int, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
       5: invokevirtual #307                // Method org/bouncycastle/crypto/params/Argon2Parameters.getCharToByteConverter:()Lorg/bouncycastle/crypto/CharToByteConverter;
       8: aload_1
       9: invokeinterface #311,  2          // InterfaceMethod org/bouncycastle/crypto/CharToByteConverter.convert:([C)[B
      14: aload_2
      15: iload_3
      16: iload         4
      18: invokevirtual #271                // Method generateBytes:([B[BII)I
      21: ireturn

  public int generateBytes(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: invokevirtual #271                // Method generateBytes:([B[BII)I
       9: ireturn

  public int generateBytes(byte[], byte[], int, int);
    Code:
       0: iload         4
       2: iconst_4
       3: if_icmpge     16
       6: new           #137                // class java/lang/IllegalStateException
       9: dup
      10: ldc           #7                  // String output length less than 4
      12: invokespecial #253                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: sipush        1024
      19: newarray       byte
      21: astore        5
      23: aload_0
      24: aload         5
      26: aload_1
      27: iload         4
      29: invokespecial #270                // Method initialize:([B[BI)V
      32: aload_0
      33: invokespecial #263                // Method fillMemoryBlocks:()V
      36: aload_0
      37: aload         5
      39: aload_2
      40: iload_3
      41: iload         4
      43: invokespecial #272                // Method digest:([B[BII)V
      46: aload_0
      47: invokespecial #264                // Method reset:()V
      50: iload         4
      52: ireturn

  private void reset();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
       5: if_acmpeq     42
       8: iconst_0
       9: istore_1
      10: iload_1
      11: aload_0
      12: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      15: arraylength
      16: if_icmpge     42
      19: aload_0
      20: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      23: iload_1
      24: aaload
      25: astore_2
      26: aconst_null
      27: aload_2
      28: if_acmpeq     36
      31: aload_2
      32: invokevirtual #291                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.clear:()Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      35: pop
      36: iinc          1, 1
      39: goto          10
      42: return

  private void doInit(org.bouncycastle.crypto.params.Argon2Parameters);
    Code:
       0: aload_1
       1: invokevirtual #301                // Method org/bouncycastle/crypto/params/Argon2Parameters.getMemory:()I
       4: istore_2
       5: iload_2
       6: bipush        8
       8: aload_1
       9: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      12: imul
      13: if_icmpge     24
      16: bipush        8
      18: aload_1
      19: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      22: imul
      23: istore_2
      24: aload_0
      25: iload_2
      26: aload_1
      27: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      30: iconst_4
      31: imul
      32: idiv
      33: putfield      #244                // Field segmentLength:I
      36: aload_0
      37: aload_0
      38: getfield      #244                // Field segmentLength:I
      41: iconst_4
      42: imul
      43: putfield      #243                // Field laneLength:I
      46: aload_0
      47: getfield      #244                // Field segmentLength:I
      50: aload_1
      51: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      54: iconst_4
      55: imul
      56: imul
      57: istore_2
      58: aload_0
      59: iload_2
      60: invokespecial #267                // Method initMemory:(I)V
      63: return

  private void initMemory(int);
    Code:
       0: aload_0
       1: iload_1
       2: anewarray     #146                // class org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block
       5: putfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      15: arraylength
      16: if_icmpge     39
      19: aload_0
      20: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      23: iload_2
      24: new           #146                // class org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block
      27: dup
      28: aconst_null
      29: invokespecial #290                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block."<init>":(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$1;)V
      32: aastore
      33: iinc          2, 1
      36: goto          10
      39: return

  private void fillMemoryBlocks();
    Code:
       0: new           #147                // class org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock
       3: dup
       4: aconst_null
       5: invokespecial #294                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock."<init>":(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$1;)V
       8: astore_1
       9: new           #148                // class org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position
      12: dup
      13: invokespecial #298                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position."<init>":()V
      16: astore_2
      17: iconst_0
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      24: invokevirtual #299                // Method org/bouncycastle/crypto/params/Argon2Parameters.getIterations:()I
      27: if_icmpge     95
      30: aload_2
      31: iload_3
      32: putfield      #251                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
      35: iconst_0
      36: istore        4
      38: iload         4
      40: iconst_4
      41: if_icmpge     89
      44: aload_2
      45: iload         4
      47: putfield      #252                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      50: iconst_0
      51: istore        5
      53: iload         5
      55: aload_0
      56: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      59: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      62: if_icmpge     83
      65: aload_2
      66: iload         5
      68: putfield      #250                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.lane:I
      71: aload_0
      72: aload_1
      73: aload_2
      74: invokespecial #284                // Method fillSegment:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;)V
      77: iinc          5, 1
      80: goto          53
      83: iinc          4, 1
      86: goto          38
      89: iinc          3, 1
      92: goto          19
      95: return

  private void fillSegment(org.bouncycastle.crypto.generators.Argon2BytesGenerator$FillBlock, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position);
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: aload_0
       6: aload_2
       7: invokespecial #279                // Method isDataIndependentAddressing:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;)Z
      10: istore        5
      12: aload_2
      13: invokestatic  #278                // Method getStartingIndex:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;)I
      16: istore        6
      18: aload_2
      19: getfield      #250                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.lane:I
      22: aload_0
      23: getfield      #243                // Field laneLength:I
      26: imul
      27: aload_2
      28: getfield      #252                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      31: aload_0
      32: getfield      #244                // Field segmentLength:I
      35: imul
      36: iadd
      37: iload         6
      39: iadd
      40: istore        7
      42: aload_0
      43: iload         7
      45: invokespecial #265                // Method getPrevOffset:(I)I
      48: istore        8
      50: iload         5
      52: ifeq          81
      55: aload_1
      56: getfield      #248                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.addressBlock:Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      59: invokevirtual #291                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.clear:()Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      62: astore_3
      63: aload_1
      64: getfield      #249                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.inputBlock:Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      67: invokevirtual #291                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.clear:()Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      70: astore        4
      72: aload_0
      73: aload_1
      74: aload_2
      75: aload         4
      77: aload_3
      78: invokespecial #287                // Method initAddressBlocks:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
      81: aload_0
      82: aload_2
      83: invokespecial #280                // Method isWithXor:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;)Z
      86: istore        9
      88: iload         6
      90: istore        10
      92: iload         10
      94: aload_0
      95: getfield      #244                // Field segmentLength:I
      98: if_icmpge     227
     101: aload_0
     102: aload_1
     103: iload         10
     105: aload_3
     106: aload         4
     108: iload         8
     110: iload         5
     112: invokespecial #285                // Method getPseudoRandom:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;ILorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IZ)J
     115: lstore        11
     117: aload_0
     118: aload_2
     119: lload         11
     121: invokespecial #282                // Method getRefLane:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;J)I
     124: istore        13
     126: aload_0
     127: aload_2
     128: iload         10
     130: lload         11
     132: iload         13
     134: aload_2
     135: getfield      #250                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.lane:I
     138: if_icmpne     145
     141: iconst_1
     142: goto          146
     145: iconst_0
     146: invokespecial #281                // Method getRefColumn:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Position;IJZ)I
     149: istore        14
     151: aload_0
     152: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
     155: iload         8
     157: aaload
     158: astore        15
     160: aload_0
     161: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
     164: aload_0
     165: getfield      #243                // Field laneLength:I
     168: iload         13
     170: imul
     171: iload         14
     173: iadd
     174: aaload
     175: astore        16
     177: aload_0
     178: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
     181: iload         7
     183: aaload
     184: astore        17
     186: iload         9
     188: ifeq          204
     191: aload_1
     192: aload         15
     194: aload         16
     196: aload         17
     198: invokestatic  #296                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.access$200:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
     201: goto          214
     204: aload_1
     205: aload         15
     207: aload         16
     209: aload         17
     211: invokestatic  #297                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.access$300:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
     214: iload         7
     216: istore        8
     218: iinc          7, 1
     221: iinc          10, 1
     224: goto          92
     227: return

  private boolean isDataIndependentAddressing(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position);
    Code:
       0: aload_0
       1: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
       4: invokevirtual #302                // Method org/bouncycastle/crypto/params/Argon2Parameters.getType:()I
       7: iconst_1
       8: if_icmpeq     37
      11: aload_0
      12: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      15: invokevirtual #302                // Method org/bouncycastle/crypto/params/Argon2Parameters.getType:()I
      18: iconst_2
      19: if_icmpne     41
      22: aload_1
      23: getfield      #251                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
      26: ifne          41
      29: aload_1
      30: getfield      #252                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      33: iconst_2
      34: if_icmpge     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private void initAddressBlocks(org.bouncycastle.crypto.generators.Argon2BytesGenerator$FillBlock, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block);
    Code:
       0: aload_3
       1: invokestatic  #292                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
       4: iconst_0
       5: aload_0
       6: aload_2
       7: getfield      #251                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
      10: invokespecial #266                // Method intToLong:(I)J
      13: lastore
      14: aload_3
      15: invokestatic  #292                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      18: iconst_1
      19: aload_0
      20: aload_2
      21: getfield      #250                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.lane:I
      24: invokespecial #266                // Method intToLong:(I)J
      27: lastore
      28: aload_3
      29: invokestatic  #292                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      32: iconst_2
      33: aload_0
      34: aload_2
      35: getfield      #252                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      38: invokespecial #266                // Method intToLong:(I)J
      41: lastore
      42: aload_3
      43: invokestatic  #292                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      46: iconst_3
      47: aload_0
      48: aload_0
      49: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      52: arraylength
      53: invokespecial #266                // Method intToLong:(I)J
      56: lastore
      57: aload_3
      58: invokestatic  #292                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      61: iconst_4
      62: aload_0
      63: aload_0
      64: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      67: invokevirtual #299                // Method org/bouncycastle/crypto/params/Argon2Parameters.getIterations:()I
      70: invokespecial #266                // Method intToLong:(I)J
      73: lastore
      74: aload_3
      75: invokestatic  #292                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      78: iconst_5
      79: aload_0
      80: aload_0
      81: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      84: invokevirtual #302                // Method org/bouncycastle/crypto/params/Argon2Parameters.getType:()I
      87: invokespecial #266                // Method intToLong:(I)J
      90: lastore
      91: aload_2
      92: getfield      #251                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
      95: ifne          113
      98: aload_2
      99: getfield      #252                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
     102: ifne          113
     105: aload_0
     106: aload_1
     107: aload_3
     108: aload         4
     110: invokespecial #286                // Method nextAddresses:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
     113: return

  private boolean isWithXor(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position);
    Code:
       0: aload_1
       1: getfield      #251                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
       4: ifeq          23
       7: aload_0
       8: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      11: invokevirtual #303                // Method org/bouncycastle/crypto/params/Argon2Parameters.getVersion:()I
      14: bipush        16
      16: if_icmpeq     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private int getPrevOffset(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #243                // Field laneLength:I
       5: irem
       6: ifne          18
       9: iload_1
      10: aload_0
      11: getfield      #243                // Field laneLength:I
      14: iadd
      15: iconst_1
      16: isub
      17: ireturn
      18: iload_1
      19: iconst_1
      20: isub
      21: ireturn

  private static int getStartingIndex(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position);
    Code:
       0: aload_0
       1: getfield      #251                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
       4: ifne          16
       7: aload_0
       8: getfield      #252                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      11: ifne          16
      14: iconst_2
      15: ireturn
      16: iconst_0
      17: ireturn

  private void nextAddresses(org.bouncycastle.crypto.generators.Argon2BytesGenerator$FillBlock, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block);
    Code:
       0: aload_2
       1: invokestatic  #292                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
       4: bipush        6
       6: dup2
       7: laload
       8: lconst_1
       9: ladd
      10: lastore
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokestatic  #295                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.access$500:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
      17: aload_1
      18: aload_3
      19: aload_3
      20: invokestatic  #295                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock.access$500:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
      23: return

  private long getPseudoRandom(org.bouncycastle.crypto.generators.Argon2BytesGenerator$FillBlock, int, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, int, boolean);
    Code:
       0: iload         6
       2: ifeq          33
       5: iload_2
       6: sipush        128
       9: irem
      10: istore        7
      12: iload         7
      14: ifne          25
      17: aload_0
      18: aload_1
      19: aload         4
      21: aload_3
      22: invokespecial #286                // Method nextAddresses:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$FillBlock;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
      25: aload_3
      26: invokestatic  #292                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      29: iload         7
      31: laload
      32: lreturn
      33: aload_0
      34: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      37: iload         5
      39: aaload
      40: invokestatic  #292                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
      43: iconst_0
      44: laload
      45: lreturn

  private int getRefLane(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position, long);
    Code:
       0: lload_2
       1: bipush        32
       3: lushr
       4: aload_0
       5: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
       8: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      11: i2l
      12: lrem
      13: l2i
      14: istore        4
      16: aload_1
      17: getfield      #251                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
      20: ifne          36
      23: aload_1
      24: getfield      #252                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      27: ifne          36
      30: aload_1
      31: getfield      #250                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.lane:I
      34: istore        4
      36: iload         4
      38: ireturn

  private int getRefColumn(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Position, int, long, boolean);
    Code:
       0: aload_1
       1: getfield      #251                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.pass:I
       4: ifne          57
       7: iconst_0
       8: istore        7
      10: iload         5
      12: ifeq          33
      15: aload_1
      16: getfield      #252                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      19: aload_0
      20: getfield      #244                // Field segmentLength:I
      23: imul
      24: iload_2
      25: iadd
      26: iconst_1
      27: isub
      28: istore        6
      30: goto          119
      33: aload_1
      34: getfield      #252                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      37: aload_0
      38: getfield      #244                // Field segmentLength:I
      41: imul
      42: iload_2
      43: ifne          50
      46: iconst_m1
      47: goto          51
      50: iconst_0
      51: iadd
      52: istore        6
      54: goto          119
      57: aload_1
      58: getfield      #252                // Field org/bouncycastle/crypto/generators/Argon2BytesGenerator$Position.slice:I
      61: iconst_1
      62: iadd
      63: aload_0
      64: getfield      #244                // Field segmentLength:I
      67: imul
      68: aload_0
      69: getfield      #243                // Field laneLength:I
      72: irem
      73: istore        7
      75: iload         5
      77: ifeq          98
      80: aload_0
      81: getfield      #243                // Field laneLength:I
      84: aload_0
      85: getfield      #244                // Field segmentLength:I
      88: isub
      89: iload_2
      90: iadd
      91: iconst_1
      92: isub
      93: istore        6
      95: goto          119
      98: aload_0
      99: getfield      #243                // Field laneLength:I
     102: aload_0
     103: getfield      #244                // Field segmentLength:I
     106: isub
     107: iload_2
     108: ifne          115
     111: iconst_m1
     112: goto          116
     115: iconst_0
     116: iadd
     117: istore        6
     119: lload_3
     120: ldc2_w        #135                // long 4294967295l
     123: land
     124: lstore        8
     126: lload         8
     128: lload         8
     130: lmul
     131: bipush        32
     133: lushr
     134: lstore        8
     136: iload         6
     138: iconst_1
     139: isub
     140: i2l
     141: iload         6
     143: i2l
     144: lload         8
     146: lmul
     147: bipush        32
     149: lushr
     150: lsub
     151: lstore        8
     153: iload         7
     155: i2l
     156: lload         8
     158: ladd
     159: l2i
     160: aload_0
     161: getfield      #243                // Field laneLength:I
     164: irem
     165: ireturn

  private void digest(byte[], byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
       4: aload_0
       5: getfield      #243                // Field laneLength:I
       8: iconst_1
       9: isub
      10: aaload
      11: astore        5
      13: iconst_1
      14: istore        6
      16: iload         6
      18: aload_0
      19: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      22: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      25: if_icmpge     62
      28: iload         6
      30: aload_0
      31: getfield      #243                // Field laneLength:I
      34: imul
      35: aload_0
      36: getfield      #243                // Field laneLength:I
      39: iconst_1
      40: isub
      41: iadd
      42: istore        7
      44: aload         5
      46: aload_0
      47: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      50: iload         7
      52: aaload
      53: invokestatic  #293                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$600:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)V
      56: iinc          6, 1
      59: goto          16
      62: aload         5
      64: aload_1
      65: invokevirtual #289                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.toBytes:([B)V
      68: aload_0
      69: aload_1
      70: aload_2
      71: iload_3
      72: iload         4
      74: invokespecial #273                // Method hash:([B[BII)V
      77: return

  private void hash(byte[], byte[], int, int);
    Code:
       0: iconst_4
       1: newarray       byte
       3: astore        5
       5: iload         4
       7: aload         5
       9: iconst_0
      10: invokestatic  #309                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
      13: bipush        64
      15: istore        6
      17: iload         4
      19: iload         6
      21: if_icmpgt     69
      24: new           #143                // class org/bouncycastle/crypto/digests/Blake2bDigest
      27: dup
      28: iload         4
      30: bipush        8
      32: imul
      33: invokespecial #260                // Method org/bouncycastle/crypto/digests/Blake2bDigest."<init>":(I)V
      36: astore        7
      38: aload         7
      40: aload         5
      42: iconst_0
      43: aload         5
      45: arraylength
      46: invokevirtual #262                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
      49: aload         7
      51: aload_1
      52: iconst_0
      53: aload_1
      54: arraylength
      55: invokevirtual #262                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
      58: aload         7
      60: aload_2
      61: iload_3
      62: invokevirtual #261                // Method org/bouncycastle/crypto/digests/Blake2bDigest.doFinal:([BI)I
      65: pop
      66: goto          255
      69: new           #143                // class org/bouncycastle/crypto/digests/Blake2bDigest
      72: dup
      73: iload         6
      75: bipush        8
      77: imul
      78: invokespecial #260                // Method org/bouncycastle/crypto/digests/Blake2bDigest."<init>":(I)V
      81: astore        7
      83: iload         6
      85: newarray       byte
      87: astore        8
      89: aload         7
      91: aload         5
      93: iconst_0
      94: aload         5
      96: arraylength
      97: invokevirtual #262                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
     100: aload         7
     102: aload_1
     103: iconst_0
     104: aload_1
     105: arraylength
     106: invokevirtual #262                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
     109: aload         7
     111: aload         8
     113: iconst_0
     114: invokevirtual #261                // Method org/bouncycastle/crypto/digests/Blake2bDigest.doFinal:([BI)I
     117: pop
     118: iload         6
     120: iconst_2
     121: idiv
     122: istore        9
     124: iload_3
     125: istore        10
     127: aload         8
     129: iconst_0
     130: aload_2
     131: iload         10
     133: iload         9
     135: invokestatic  #259                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     138: iload         10
     140: iload         9
     142: iadd
     143: istore        10
     145: iload         4
     147: bipush        31
     149: iadd
     150: bipush        32
     152: idiv
     153: iconst_2
     154: isub
     155: istore        11
     157: iconst_2
     158: istore        12
     160: iload         12
     162: iload         11
     164: if_icmpgt     211
     167: aload         7
     169: aload         8
     171: iconst_0
     172: aload         8
     174: arraylength
     175: invokevirtual #262                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
     178: aload         7
     180: aload         8
     182: iconst_0
     183: invokevirtual #261                // Method org/bouncycastle/crypto/digests/Blake2bDigest.doFinal:([BI)I
     186: pop
     187: aload         8
     189: iconst_0
     190: aload_2
     191: iload         10
     193: iload         9
     195: invokestatic  #259                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     198: iinc          12, 1
     201: iload         10
     203: iload         9
     205: iadd
     206: istore        10
     208: goto          160
     211: iload         4
     213: bipush        32
     215: iload         11
     217: imul
     218: isub
     219: istore        12
     221: new           #143                // class org/bouncycastle/crypto/digests/Blake2bDigest
     224: dup
     225: iload         12
     227: bipush        8
     229: imul
     230: invokespecial #260                // Method org/bouncycastle/crypto/digests/Blake2bDigest."<init>":(I)V
     233: astore        7
     235: aload         7
     237: aload         8
     239: iconst_0
     240: aload         8
     242: arraylength
     243: invokevirtual #262                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
     246: aload         7
     248: aload_2
     249: iload         10
     251: invokevirtual #261                // Method org/bouncycastle/crypto/digests/Blake2bDigest.doFinal:([BI)I
     254: pop
     255: return

  private static void roundFunction(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: invokestatic  #292                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.access$400:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;)[J
       4: astore        17
       6: aload         17
       8: iload_1
       9: iload         5
      11: iload         9
      13: iload         13
      15: invokestatic  #274                // Method F:([JIIII)V
      18: aload         17
      20: iload_2
      21: iload         6
      23: iload         10
      25: iload         14
      27: invokestatic  #274                // Method F:([JIIII)V
      30: aload         17
      32: iload_3
      33: iload         7
      35: iload         11
      37: iload         15
      39: invokestatic  #274                // Method F:([JIIII)V
      42: aload         17
      44: iload         4
      46: iload         8
      48: iload         12
      50: iload         16
      52: invokestatic  #274                // Method F:([JIIII)V
      55: aload         17
      57: iload_1
      58: iload         6
      60: iload         11
      62: iload         16
      64: invokestatic  #274                // Method F:([JIIII)V
      67: aload         17
      69: iload_2
      70: iload         7
      72: iload         12
      74: iload         13
      76: invokestatic  #274                // Method F:([JIIII)V
      79: aload         17
      81: iload_3
      82: iload         8
      84: iload         9
      86: iload         14
      88: invokestatic  #274                // Method F:([JIIII)V
      91: aload         17
      93: iload         4
      95: iload         5
      97: iload         10
      99: iload         15
     101: invokestatic  #274                // Method F:([JIIII)V
     104: return

  private static void F(long[], int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload         4
       5: bipush        32
       7: invokestatic  #275                // Method quarterRound:([JIIII)V
      10: aload_0
      11: iload_3
      12: iload         4
      14: iload_2
      15: bipush        24
      17: invokestatic  #275                // Method quarterRound:([JIIII)V
      20: aload_0
      21: iload_1
      22: iload_2
      23: iload         4
      25: bipush        16
      27: invokestatic  #275                // Method quarterRound:([JIIII)V
      30: aload_0
      31: iload_3
      32: iload         4
      34: iload_2
      35: bipush        63
      37: invokestatic  #275                // Method quarterRound:([JIIII)V
      40: return

  private static void quarterRound(long[], int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: laload
       3: lstore        5
       5: aload_0
       6: iload_2
       7: laload
       8: lstore        7
      10: aload_0
      11: iload_3
      12: laload
      13: lstore        9
      15: lload         5
      17: lload         7
      19: ldc2_w        #133                // long 2l
      22: lload         5
      24: ldc2_w        #135                // long 4294967295l
      27: land
      28: lmul
      29: lload         7
      31: ldc2_w        #135                // long 4294967295l
      34: land
      35: lmul
      36: ladd
      37: ladd
      38: lstore        5
      40: lload         9
      42: lload         5
      44: lxor
      45: iload         4
      47: invokestatic  #308                // Method org/bouncycastle/util/Longs.rotateRight:(JI)J
      50: lstore        9
      52: aload_0
      53: iload_1
      54: lload         5
      56: lastore
      57: aload_0
      58: iload_3
      59: lload         9
      61: lastore
      62: return

  private void initialize(byte[], byte[], int);
    Code:
       0: new           #143                // class org/bouncycastle/crypto/digests/Blake2bDigest
       3: dup
       4: sipush        512
       7: invokespecial #260                // Method org/bouncycastle/crypto/digests/Blake2bDigest."<init>":(I)V
      10: astore        4
      12: bipush        6
      14: newarray       int
      16: dup
      17: iconst_0
      18: aload_0
      19: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      22: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      25: iastore
      26: dup
      27: iconst_1
      28: iload_3
      29: iastore
      30: dup
      31: iconst_2
      32: aload_0
      33: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      36: invokevirtual #301                // Method org/bouncycastle/crypto/params/Argon2Parameters.getMemory:()I
      39: iastore
      40: dup
      41: iconst_3
      42: aload_0
      43: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      46: invokevirtual #299                // Method org/bouncycastle/crypto/params/Argon2Parameters.getIterations:()I
      49: iastore
      50: dup
      51: iconst_4
      52: aload_0
      53: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      56: invokevirtual #303                // Method org/bouncycastle/crypto/params/Argon2Parameters.getVersion:()I
      59: iastore
      60: dup
      61: iconst_5
      62: aload_0
      63: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      66: invokevirtual #302                // Method org/bouncycastle/crypto/params/Argon2Parameters.getType:()I
      69: iastore
      70: astore        5
      72: aload         5
      74: aload_1
      75: iconst_0
      76: invokestatic  #310                // Method org/bouncycastle/util/Pack.intToLittleEndian:([I[BI)V
      79: aload         4
      81: aload_1
      82: iconst_0
      83: aload         5
      85: arraylength
      86: iconst_4
      87: imul
      88: invokevirtual #262                // Method org/bouncycastle/crypto/digests/Blake2bDigest.update:([BII)V
      91: aload_1
      92: aload         4
      94: aload_2
      95: invokestatic  #276                // Method addByteString:([BLorg/bouncycastle/crypto/Digest;[B)V
      98: aload_1
      99: aload         4
     101: aload_0
     102: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
     105: invokevirtual #305                // Method org/bouncycastle/crypto/params/Argon2Parameters.getSalt:()[B
     108: invokestatic  #276                // Method addByteString:([BLorg/bouncycastle/crypto/Digest;[B)V
     111: aload_1
     112: aload         4
     114: aload_0
     115: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
     118: invokevirtual #306                // Method org/bouncycastle/crypto/params/Argon2Parameters.getSecret:()[B
     121: invokestatic  #276                // Method addByteString:([BLorg/bouncycastle/crypto/Digest;[B)V
     124: aload_1
     125: aload         4
     127: aload_0
     128: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
     131: invokevirtual #304                // Method org/bouncycastle/crypto/params/Argon2Parameters.getAdditional:()[B
     134: invokestatic  #276                // Method addByteString:([BLorg/bouncycastle/crypto/Digest;[B)V
     137: bipush        72
     139: newarray       byte
     141: astore        6
     143: aload         4
     145: aload         6
     147: iconst_0
     148: invokevirtual #261                // Method org/bouncycastle/crypto/digests/Blake2bDigest.doFinal:([BI)I
     151: pop
     152: aload_0
     153: aload_1
     154: aload         6
     156: invokespecial #269                // Method fillFirstBlocks:([B[B)V
     159: return

  private static void addByteString(byte[], org.bouncycastle.crypto.Digest, byte[]);
    Code:
       0: aconst_null
       1: aload_2
       2: if_acmpne     17
       5: aload_1
       6: getstatic     #245                // Field ZERO_BYTES:[B
       9: iconst_0
      10: iconst_4
      11: invokeinterface #312,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      16: return
      17: aload_2
      18: arraylength
      19: aload_0
      20: iconst_0
      21: invokestatic  #309                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
      24: aload_1
      25: aload_0
      26: iconst_0
      27: iconst_4
      28: invokeinterface #312,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      33: aload_1
      34: aload_2
      35: iconst_0
      36: aload_2
      37: arraylength
      38: invokeinterface #312,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      43: return

  private void fillFirstBlocks(byte[], byte[]);
    Code:
       0: bipush        72
       2: newarray       byte
       4: astore_3
       5: aload_2
       6: iconst_0
       7: aload_3
       8: iconst_0
       9: bipush        64
      11: invokestatic  #259                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      14: aload_3
      15: bipush        64
      17: iconst_1
      18: bastore
      19: iconst_0
      20: istore        4
      22: iload         4
      24: aload_0
      25: getfield      #247                // Field parameters:Lorg/bouncycastle/crypto/params/Argon2Parameters;
      28: invokevirtual #300                // Method org/bouncycastle/crypto/params/Argon2Parameters.getLanes:()I
      31: if_icmpge     112
      34: iload         4
      36: aload_2
      37: bipush        68
      39: invokestatic  #309                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
      42: iload         4
      44: aload_3
      45: bipush        68
      47: invokestatic  #309                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
      50: aload_0
      51: aload_2
      52: aload_1
      53: iconst_0
      54: sipush        1024
      57: invokespecial #273                // Method hash:([B[BII)V
      60: aload_0
      61: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      64: iload         4
      66: aload_0
      67: getfield      #243                // Field laneLength:I
      70: imul
      71: iconst_0
      72: iadd
      73: aaload
      74: aload_1
      75: invokevirtual #288                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.fromBytes:([B)V
      78: aload_0
      79: aload_3
      80: aload_1
      81: iconst_0
      82: sipush        1024
      85: invokespecial #273                // Method hash:([B[BII)V
      88: aload_0
      89: getfield      #246                // Field memory:[Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;
      92: iload         4
      94: aload_0
      95: getfield      #243                // Field laneLength:I
      98: imul
      99: iconst_1
     100: iadd
     101: aaload
     102: aload_1
     103: invokevirtual #288                // Method org/bouncycastle/crypto/generators/Argon2BytesGenerator$Block.fromBytes:([B)V
     106: iinc          4, 1
     109: goto          22
     112: return

  private long intToLong(int);
    Code:
       0: iload_1
       1: i2l
       2: ldc2_w        #135                // long 4294967295l
       5: land
       6: lreturn

  static void access$700(org.bouncycastle.crypto.generators.Argon2BytesGenerator$Block, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iload         6
      10: iload         7
      12: iload         8
      14: iload         9
      16: iload         10
      18: iload         11
      20: iload         12
      22: iload         13
      24: iload         14
      26: iload         15
      28: iload         16
      30: invokestatic  #277                // Method roundFunction:(Lorg/bouncycastle/crypto/generators/Argon2BytesGenerator$Block;IIIIIIIIIIIIIIII)V
      33: return

  static {};
    Code:
       0: iconst_4
       1: newarray       byte
       3: putstatic     #245                // Field ZERO_BYTES:[B
       6: return
}
