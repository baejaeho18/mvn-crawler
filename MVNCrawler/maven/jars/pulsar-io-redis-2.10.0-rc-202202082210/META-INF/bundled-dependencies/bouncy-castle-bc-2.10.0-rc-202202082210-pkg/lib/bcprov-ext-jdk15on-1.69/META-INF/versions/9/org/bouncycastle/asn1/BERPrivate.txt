Compiled from "BERPrivate.java"
public class org.bouncycastle.asn1.BERPrivate extends org.bouncycastle.asn1.ASN1Private {
  org.bouncycastle.asn1.BERPrivate(boolean, int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: invokespecial #1                  // Method org/bouncycastle/asn1/ASN1Private."<init>":(ZI[B)V
       7: return

  public org.bouncycastle.asn1.BERPrivate(int, org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: aload_2
       4: invokespecial #2                  // Method "<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
       7: return

  public org.bouncycastle.asn1.BERPrivate(boolean, int, org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: ifne          17
       5: aload_3
       6: invokeinterface #3,  1            // InterfaceMethod org/bouncycastle/asn1/ASN1Encodable.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
      11: invokevirtual #4                  // Method org/bouncycastle/asn1/ASN1Primitive.isConstructed:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: iload_2
      23: iload_1
      24: aload_3
      25: invokestatic  #5                  // Method getEncoding:(ZLorg/bouncycastle/asn1/ASN1Encodable;)[B
      28: invokespecial #1                  // Method org/bouncycastle/asn1/ASN1Private."<init>":(ZI[B)V
      31: return

  private static byte[] getEncoding(boolean, org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #3,  1            // InterfaceMethod org/bouncycastle/asn1/ASN1Encodable.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
       6: ldc           #7                  // String BER
       8: invokevirtual #8                  // Method org/bouncycastle/asn1/ASN1Primitive.getEncoded:(Ljava/lang/String;)[B
      11: astore_2
      12: iload_0
      13: ifeq          18
      16: aload_2
      17: areturn
      18: aload_2
      19: invokestatic  #9                  // Method getLengthOfHeader:([B)I
      22: istore_3
      23: aload_2
      24: arraylength
      25: iload_3
      26: isub
      27: newarray       byte
      29: astore        4
      31: aload_2
      32: iload_3
      33: aload         4
      35: iconst_0
      36: aload         4
      38: arraylength
      39: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      42: aload         4
      44: areturn

  public org.bouncycastle.asn1.BERPrivate(int, org.bouncycastle.asn1.ASN1EncodableVector);
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: aload_2
       4: invokestatic  #11                 // Method getEncodedVector:(Lorg/bouncycastle/asn1/ASN1EncodableVector;)[B
       7: invokespecial #1                  // Method org/bouncycastle/asn1/ASN1Private."<init>":(ZI[B)V
      10: return

  private static byte[] getEncodedVector(org.bouncycastle.asn1.ASN1EncodableVector);
    Code:
       0: new           #12                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #13                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: invokevirtual #14                 // Method org/bouncycastle/asn1/ASN1EncodableVector.size:()I
      15: if_icmpeq     60
      18: aload_1
      19: aload_0
      20: iload_2
      21: invokevirtual #15                 // Method org/bouncycastle/asn1/ASN1EncodableVector.get:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      24: checkcast     #16                 // class org/bouncycastle/asn1/ASN1Object
      27: ldc           #7                  // String BER
      29: invokevirtual #17                 // Method org/bouncycastle/asn1/ASN1Object.getEncoded:(Ljava/lang/String;)[B
      32: invokevirtual #18                 // Method java/io/ByteArrayOutputStream.write:([B)V
      35: goto          54
      38: astore_3
      39: new           #20                 // class org/bouncycastle/asn1/ASN1ParsingException
      42: dup
      43: aload_3
      44: invokedynamic #21,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/io/IOException;)Ljava/lang/String;
      49: aload_3
      50: invokespecial #22                 // Method org/bouncycastle/asn1/ASN1ParsingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: athrow
      54: iinc          2, 1
      57: goto          10
      60: aload_1
      61: invokevirtual #23                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      64: areturn
    Exception table:
       from    to  target type
          18    35    38   Class java/io/IOException

  void encode(org.bouncycastle.asn1.ASN1OutputStream, boolean) throws java.io.IOException;
    Code:
       0: sipush        192
       3: istore_3
       4: aload_0
       5: getfield      #25                 // Field isConstructed:Z
       8: ifeq          16
      11: iload_3
      12: bipush        32
      14: ior
      15: istore_3
      16: aload_1
      17: iload_2
      18: iload_3
      19: aload_0
      20: getfield      #26                 // Field tag:I
      23: aload_0
      24: getfield      #27                 // Field octets:[B
      27: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1OutputStream.writeEncodedIndef:(ZII[B)V
      30: return
}
