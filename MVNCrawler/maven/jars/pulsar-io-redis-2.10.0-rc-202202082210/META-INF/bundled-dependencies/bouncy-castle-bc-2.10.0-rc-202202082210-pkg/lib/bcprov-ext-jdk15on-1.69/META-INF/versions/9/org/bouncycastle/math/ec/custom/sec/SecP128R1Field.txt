Compiled from "SecP128R1Field.java"
public class org.bouncycastle.math.ec.custom.sec.SecP128R1Field {
  private static final long M;

  static final int[] P;

  private static final int[] PExt;

  private static final int[] PExtInv;

  private static final int P3s1;

  private static final int PExt7s1;

  public org.bouncycastle.math.ec.custom.sec.SecP128R1Field();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2                  // Method org/bouncycastle/math/raw/Nat128.add:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          31
      11: aload_2
      12: iconst_3
      13: iaload
      14: iconst_1
      15: iushr
      16: ldc           #4                  // int 2147483646
      18: if_icmplt     35
      21: aload_2
      22: getstatic     #5                  // Field P:[I
      25: invokestatic  #6                  // Method org/bouncycastle/math/raw/Nat128.gte:([I[I)Z
      28: ifeq          35
      31: aload_2
      32: invokestatic  #7                  // Method addPInvTo:([I)V
      35: return

  public static void addExt(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #8                  // Method org/bouncycastle/math/raw/Nat256.add:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          32
      11: aload_2
      12: bipush        7
      14: iaload
      15: iconst_1
      16: iushr
      17: ldc           #4                  // int 2147483646
      19: if_icmplt     44
      22: aload_2
      23: getstatic     #9                  // Field PExt:[I
      26: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      29: ifeq          44
      32: getstatic     #11                 // Field PExtInv:[I
      35: arraylength
      36: getstatic     #11                 // Field PExtInv:[I
      39: aload_2
      40: invokestatic  #12                 // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      43: pop
      44: return

  public static void addOne(int[], int[]);
    Code:
       0: iconst_4
       1: aload_0
       2: aload_1
       3: invokestatic  #13                 // Method org/bouncycastle/math/raw/Nat.inc:(I[I[I)I
       6: istore_2
       7: iload_2
       8: ifne          31
      11: aload_1
      12: iconst_3
      13: iaload
      14: iconst_1
      15: iushr
      16: ldc           #4                  // int 2147483646
      18: if_icmplt     35
      21: aload_1
      22: getstatic     #5                  // Field P:[I
      25: invokestatic  #6                  // Method org/bouncycastle/math/raw/Nat128.gte:([I[I)Z
      28: ifeq          35
      31: aload_1
      32: invokestatic  #7                  // Method addPInvTo:([I)V
      35: return

  public static int[] fromBigInteger(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method org/bouncycastle/math/raw/Nat128.fromBigInteger:(Ljava/math/BigInteger;)[I
       4: astore_1
       5: aload_1
       6: iconst_3
       7: iaload
       8: iconst_1
       9: iushr
      10: ldc           #4                  // int 2147483646
      12: if_icmplt     33
      15: aload_1
      16: getstatic     #5                  // Field P:[I
      19: invokestatic  #6                  // Method org/bouncycastle/math/raw/Nat128.gte:([I[I)Z
      22: ifeq          33
      25: getstatic     #5                  // Field P:[I
      28: aload_1
      29: invokestatic  #15                 // Method org/bouncycastle/math/raw/Nat128.subFrom:([I[I)I
      32: pop
      33: aload_1
      34: areturn

  public static void half(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: iconst_1
       4: iand
       5: ifne          19
       8: iconst_4
       9: aload_0
      10: iconst_0
      11: aload_1
      12: invokestatic  #16                 // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II[I)I
      15: pop
      16: goto          35
      19: aload_0
      20: getstatic     #5                  // Field P:[I
      23: aload_1
      24: invokestatic  #2                  // Method org/bouncycastle/math/raw/Nat128.add:([I[I[I)I
      27: istore_2
      28: iconst_4
      29: aload_1
      30: iload_2
      31: invokestatic  #17                 // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II)I
      34: pop
      35: return

  public static void inv(int[], int[]);
    Code:
       0: getstatic     #5                  // Field P:[I
       3: aload_0
       4: aload_1
       5: invokestatic  #18                 // Method org/bouncycastle/math/raw/Mod.checkedModOddInverse:([I[I[I)V
       8: return

  public static int isZero(int[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: iconst_4
       6: if_icmpge     21
       9: iload_1
      10: aload_0
      11: iload_2
      12: iaload
      13: ior
      14: istore_1
      15: iinc          2, 1
      18: goto          4
      21: iload_1
      22: iconst_1
      23: iushr
      24: iload_1
      25: iconst_1
      26: iand
      27: ior
      28: istore_1
      29: iload_1
      30: iconst_1
      31: isub
      32: bipush        31
      34: ishr
      35: ireturn

  public static void multiply(int[], int[], int[]);
    Code:
       0: invokestatic  #19                 // Method org/bouncycastle/math/raw/Nat128.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #20                 // Method org/bouncycastle/math/raw/Nat128.mul:([I[I[I)V
      10: aload_3
      11: aload_2
      12: invokestatic  #21                 // Method reduce:([I[I)V
      15: return

  public static void multiplyAddToExt(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #22                 // Method org/bouncycastle/math/raw/Nat128.mulAddTo:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          32
      11: aload_2
      12: bipush        7
      14: iaload
      15: iconst_1
      16: iushr
      17: ldc           #4                  // int 2147483646
      19: if_icmplt     44
      22: aload_2
      23: getstatic     #9                  // Field PExt:[I
      26: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      29: ifeq          44
      32: getstatic     #11                 // Field PExtInv:[I
      35: arraylength
      36: getstatic     #11                 // Field PExtInv:[I
      39: aload_2
      40: invokestatic  #12                 // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      43: pop
      44: return

  public static void negate(int[], int[]);
    Code:
       0: iconst_0
       1: aload_0
       2: invokestatic  #23                 // Method isZero:([I)I
       5: if_icmpeq     22
       8: getstatic     #5                  // Field P:[I
      11: getstatic     #5                  // Field P:[I
      14: aload_1
      15: invokestatic  #24                 // Method org/bouncycastle/math/raw/Nat128.sub:([I[I[I)I
      18: pop
      19: goto          31
      22: getstatic     #5                  // Field P:[I
      25: aload_0
      26: aload_1
      27: invokestatic  #24                 // Method org/bouncycastle/math/raw/Nat128.sub:([I[I[I)I
      30: pop
      31: return

  public static void random(java.security.SecureRandom, int[]);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #25                 // Method java/security/SecureRandom.nextBytes:([B)V
      10: aload_2
      11: iconst_0
      12: aload_1
      13: iconst_0
      14: iconst_4
      15: invokestatic  #26                 // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI[III)V
      18: iconst_0
      19: iconst_4
      20: aload_1
      21: getstatic     #5                  // Field P:[I
      24: invokestatic  #27                 // Method org/bouncycastle/math/raw/Nat.lessThan:(I[I[I)I
      27: if_icmpeq     5
      30: return

  public static void randomMult(java.security.SecureRandom, int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #28                 // Method random:(Ljava/security/SecureRandom;[I)V
       5: iconst_0
       6: aload_1
       7: invokestatic  #23                 // Method isZero:([I)I
      10: if_icmpne     0
      13: return

  public static void reduce(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #29                 // long 4294967295l
       7: land
       8: lstore_2
       9: aload_0
      10: iconst_1
      11: iaload
      12: i2l
      13: ldc2_w        #29                 // long 4294967295l
      16: land
      17: lstore        4
      19: aload_0
      20: iconst_2
      21: iaload
      22: i2l
      23: ldc2_w        #29                 // long 4294967295l
      26: land
      27: lstore        6
      29: aload_0
      30: iconst_3
      31: iaload
      32: i2l
      33: ldc2_w        #29                 // long 4294967295l
      36: land
      37: lstore        8
      39: aload_0
      40: iconst_4
      41: iaload
      42: i2l
      43: ldc2_w        #29                 // long 4294967295l
      46: land
      47: lstore        10
      49: aload_0
      50: iconst_5
      51: iaload
      52: i2l
      53: ldc2_w        #29                 // long 4294967295l
      56: land
      57: lstore        12
      59: aload_0
      60: bipush        6
      62: iaload
      63: i2l
      64: ldc2_w        #29                 // long 4294967295l
      67: land
      68: lstore        14
      70: aload_0
      71: bipush        7
      73: iaload
      74: i2l
      75: ldc2_w        #29                 // long 4294967295l
      78: land
      79: lstore        16
      81: lload         8
      83: lload         16
      85: ladd
      86: lstore        8
      88: lload         14
      90: lload         16
      92: iconst_1
      93: lshl
      94: ladd
      95: lstore        14
      97: lload         6
      99: lload         14
     101: ladd
     102: lstore        6
     104: lload         12
     106: lload         14
     108: iconst_1
     109: lshl
     110: ladd
     111: lstore        12
     113: lload         4
     115: lload         12
     117: ladd
     118: lstore        4
     120: lload         10
     122: lload         12
     124: iconst_1
     125: lshl
     126: ladd
     127: lstore        10
     129: lload_2
     130: lload         10
     132: ladd
     133: lstore_2
     134: lload         8
     136: lload         10
     138: iconst_1
     139: lshl
     140: ladd
     141: lstore        8
     143: aload_1
     144: iconst_0
     145: lload_2
     146: l2i
     147: iastore
     148: lload         4
     150: lload_2
     151: bipush        32
     153: lushr
     154: ladd
     155: lstore        4
     157: aload_1
     158: iconst_1
     159: lload         4
     161: l2i
     162: iastore
     163: lload         6
     165: lload         4
     167: bipush        32
     169: lushr
     170: ladd
     171: lstore        6
     173: aload_1
     174: iconst_2
     175: lload         6
     177: l2i
     178: iastore
     179: lload         8
     181: lload         6
     183: bipush        32
     185: lushr
     186: ladd
     187: lstore        8
     189: aload_1
     190: iconst_3
     191: lload         8
     193: l2i
     194: iastore
     195: lload         8
     197: bipush        32
     199: lushr
     200: l2i
     201: aload_1
     202: invokestatic  #31                 // Method reduce32:(I[I)V
     205: return

  public static void reduce32(int, int[]);
    Code:
       0: iload_0
       1: ifeq          114
       4: iload_0
       5: i2l
       6: ldc2_w        #29                 // long 4294967295l
       9: land
      10: lstore        4
      12: aload_1
      13: iconst_0
      14: iaload
      15: i2l
      16: ldc2_w        #29                 // long 4294967295l
      19: land
      20: lload         4
      22: ladd
      23: lstore_2
      24: aload_1
      25: iconst_0
      26: lload_2
      27: l2i
      28: iastore
      29: lload_2
      30: bipush        32
      32: lshr
      33: lstore_2
      34: lload_2
      35: lconst_0
      36: lcmp
      37: ifeq          82
      40: lload_2
      41: aload_1
      42: iconst_1
      43: iaload
      44: i2l
      45: ldc2_w        #29                 // long 4294967295l
      48: land
      49: ladd
      50: lstore_2
      51: aload_1
      52: iconst_1
      53: lload_2
      54: l2i
      55: iastore
      56: lload_2
      57: bipush        32
      59: lshr
      60: lstore_2
      61: lload_2
      62: aload_1
      63: iconst_2
      64: iaload
      65: i2l
      66: ldc2_w        #29                 // long 4294967295l
      69: land
      70: ladd
      71: lstore_2
      72: aload_1
      73: iconst_2
      74: lload_2
      75: l2i
      76: iastore
      77: lload_2
      78: bipush        32
      80: lshr
      81: lstore_2
      82: lload_2
      83: aload_1
      84: iconst_3
      85: iaload
      86: i2l
      87: ldc2_w        #29                 // long 4294967295l
      90: land
      91: lload         4
      93: iconst_1
      94: lshl
      95: ladd
      96: ladd
      97: lstore_2
      98: aload_1
      99: iconst_3
     100: lload_2
     101: l2i
     102: iastore
     103: lload_2
     104: bipush        32
     106: lshr
     107: lstore_2
     108: lload_2
     109: l2i
     110: istore_0
     111: goto          0
     114: aload_1
     115: iconst_3
     116: iaload
     117: iconst_1
     118: iushr
     119: ldc           #4                  // int 2147483646
     121: if_icmplt     138
     124: aload_1
     125: getstatic     #5                  // Field P:[I
     128: invokestatic  #6                  // Method org/bouncycastle/math/raw/Nat128.gte:([I[I)Z
     131: ifeq          138
     134: aload_1
     135: invokestatic  #7                  // Method addPInvTo:([I)V
     138: return

  public static void square(int[], int[]);
    Code:
       0: invokestatic  #19                 // Method org/bouncycastle/math/raw/Nat128.createExt:()[I
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #32                 // Method org/bouncycastle/math/raw/Nat128.square:([I[I)V
       9: aload_2
      10: aload_1
      11: invokestatic  #21                 // Method reduce:([I[I)V
      14: return

  public static void squareN(int[], int, int[]);
    Code:
       0: invokestatic  #19                 // Method org/bouncycastle/math/raw/Nat128.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokestatic  #32                 // Method org/bouncycastle/math/raw/Nat128.square:([I[I)V
       9: aload_3
      10: aload_2
      11: invokestatic  #21                 // Method reduce:([I[I)V
      14: iinc          1, -1
      17: iload_1
      18: ifle          34
      21: aload_2
      22: aload_3
      23: invokestatic  #32                 // Method org/bouncycastle/math/raw/Nat128.square:([I[I)V
      26: aload_3
      27: aload_2
      28: invokestatic  #21                 // Method reduce:([I[I)V
      31: goto          14
      34: return

  public static void subtract(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #24                 // Method org/bouncycastle/math/raw/Nat128.sub:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifeq          15
      11: aload_2
      12: invokestatic  #33                 // Method subPInvFrom:([I)V
      15: return

  public static void subtractExt(int[], int[], int[]);
    Code:
       0: bipush        10
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #34                 // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifeq          25
      13: getstatic     #11                 // Field PExtInv:[I
      16: arraylength
      17: getstatic     #11                 // Field PExtInv:[I
      20: aload_2
      21: invokestatic  #35                 // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      24: pop
      25: return

  public static void twice(int[], int[]);
    Code:
       0: iconst_4
       1: aload_0
       2: iconst_0
       3: aload_1
       4: invokestatic  #36                 // Method org/bouncycastle/math/raw/Nat.shiftUpBit:(I[II[I)I
       7: istore_2
       8: iload_2
       9: ifne          32
      12: aload_1
      13: iconst_3
      14: iaload
      15: iconst_1
      16: iushr
      17: ldc           #4                  // int 2147483646
      19: if_icmplt     36
      22: aload_1
      23: getstatic     #5                  // Field P:[I
      26: invokestatic  #6                  // Method org/bouncycastle/math/raw/Nat128.gte:([I[I)Z
      29: ifeq          36
      32: aload_1
      33: invokestatic  #7                  // Method addPInvTo:([I)V
      36: return

  private static void addPInvTo(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #29                 // long 4294967295l
       7: land
       8: lconst_1
       9: ladd
      10: lstore_1
      11: aload_0
      12: iconst_0
      13: lload_1
      14: l2i
      15: iastore
      16: lload_1
      17: bipush        32
      19: lshr
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifeq          69
      27: lload_1
      28: aload_0
      29: iconst_1
      30: iaload
      31: i2l
      32: ldc2_w        #29                 // long 4294967295l
      35: land
      36: ladd
      37: lstore_1
      38: aload_0
      39: iconst_1
      40: lload_1
      41: l2i
      42: iastore
      43: lload_1
      44: bipush        32
      46: lshr
      47: lstore_1
      48: lload_1
      49: aload_0
      50: iconst_2
      51: iaload
      52: i2l
      53: ldc2_w        #29                 // long 4294967295l
      56: land
      57: ladd
      58: lstore_1
      59: aload_0
      60: iconst_2
      61: lload_1
      62: l2i
      63: iastore
      64: lload_1
      65: bipush        32
      67: lshr
      68: lstore_1
      69: lload_1
      70: aload_0
      71: iconst_3
      72: iaload
      73: i2l
      74: ldc2_w        #29                 // long 4294967295l
      77: land
      78: ldc2_w        #37                 // long 2l
      81: ladd
      82: ladd
      83: lstore_1
      84: aload_0
      85: iconst_3
      86: lload_1
      87: l2i
      88: iastore
      89: return

  private static void subPInvFrom(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #29                 // long 4294967295l
       7: land
       8: lconst_1
       9: lsub
      10: lstore_1
      11: aload_0
      12: iconst_0
      13: lload_1
      14: l2i
      15: iastore
      16: lload_1
      17: bipush        32
      19: lshr
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifeq          69
      27: lload_1
      28: aload_0
      29: iconst_1
      30: iaload
      31: i2l
      32: ldc2_w        #29                 // long 4294967295l
      35: land
      36: ladd
      37: lstore_1
      38: aload_0
      39: iconst_1
      40: lload_1
      41: l2i
      42: iastore
      43: lload_1
      44: bipush        32
      46: lshr
      47: lstore_1
      48: lload_1
      49: aload_0
      50: iconst_2
      51: iaload
      52: i2l
      53: ldc2_w        #29                 // long 4294967295l
      56: land
      57: ladd
      58: lstore_1
      59: aload_0
      60: iconst_2
      61: lload_1
      62: l2i
      63: iastore
      64: lload_1
      65: bipush        32
      67: lshr
      68: lstore_1
      69: lload_1
      70: aload_0
      71: iconst_3
      72: iaload
      73: i2l
      74: ldc2_w        #29                 // long 4294967295l
      77: land
      78: ldc2_w        #37                 // long 2l
      81: lsub
      82: ladd
      83: lstore_1
      84: aload_0
      85: iconst_3
      86: lload_1
      87: l2i
      88: iastore
      89: return

  static {};
    Code:
       0: iconst_4
       1: newarray       int
       3: dup
       4: iconst_0
       5: iconst_m1
       6: iastore
       7: dup
       8: iconst_1
       9: iconst_m1
      10: iastore
      11: dup
      12: iconst_2
      13: iconst_m1
      14: iastore
      15: dup
      16: iconst_3
      17: bipush        -3
      19: iastore
      20: putstatic     #5                  // Field P:[I
      23: bipush        8
      25: newarray       int
      27: dup
      28: iconst_0
      29: iconst_1
      30: iastore
      31: dup
      32: iconst_1
      33: iconst_0
      34: iastore
      35: dup
      36: iconst_2
      37: iconst_0
      38: iastore
      39: dup
      40: iconst_3
      41: iconst_4
      42: iastore
      43: dup
      44: iconst_4
      45: bipush        -2
      47: iastore
      48: dup
      49: iconst_5
      50: iconst_m1
      51: iastore
      52: dup
      53: bipush        6
      55: iconst_3
      56: iastore
      57: dup
      58: bipush        7
      60: bipush        -4
      62: iastore
      63: putstatic     #9                  // Field PExt:[I
      66: bipush        8
      68: newarray       int
      70: dup
      71: iconst_0
      72: iconst_m1
      73: iastore
      74: dup
      75: iconst_1
      76: iconst_m1
      77: iastore
      78: dup
      79: iconst_2
      80: iconst_m1
      81: iastore
      82: dup
      83: iconst_3
      84: bipush        -5
      86: iastore
      87: dup
      88: iconst_4
      89: iconst_1
      90: iastore
      91: dup
      92: iconst_5
      93: iconst_0
      94: iastore
      95: dup
      96: bipush        6
      98: bipush        -4
     100: iastore
     101: dup
     102: bipush        7
     104: iconst_3
     105: iastore
     106: putstatic     #11                 // Field PExtInv:[I
     109: return
}
