public class org.bouncycastle.crypto.macs.SkeinMac implements org.bouncycastle.crypto.Mac {
  public static final int SKEIN_256;

  public static final int SKEIN_512;

  public static final int SKEIN_1024;

  private org.bouncycastle.crypto.digests.SkeinEngine engine;

  public org.bouncycastle.crypto.macs.SkeinMac(int, int);
    Code:
       0: aload_0
       1: invokespecial #95                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #55                 // class org/bouncycastle/crypto/digests/SkeinEngine
       8: dup
       9: iload_1
      10: iload_2
      11: invokespecial #105                // Method org/bouncycastle/crypto/digests/SkeinEngine."<init>":(II)V
      14: putfield      #92                 // Field engine:Lorg/bouncycastle/crypto/digests/SkeinEngine;
      17: return

  public org.bouncycastle.crypto.macs.SkeinMac(org.bouncycastle.crypto.macs.SkeinMac);
    Code:
       0: aload_0
       1: invokespecial #95                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #55                 // class org/bouncycastle/crypto/digests/SkeinEngine
       8: dup
       9: aload_1
      10: getfield      #92                 // Field engine:Lorg/bouncycastle/crypto/digests/SkeinEngine;
      13: invokespecial #108                // Method org/bouncycastle/crypto/digests/SkeinEngine."<init>":(Lorg/bouncycastle/crypto/digests/SkeinEngine;)V
      16: putfield      #92                 // Field engine:Lorg/bouncycastle/crypto/digests/SkeinEngine;
      19: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #53                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #97                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #4                  // String Skein-MAC-
       9: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #92                 // Field engine:Lorg/bouncycastle/crypto/digests/SkeinEngine;
      16: invokevirtual #101                // Method org/bouncycastle/crypto/digests/SkeinEngine.getBlockSize:()I
      19: bipush        8
      21: imul
      22: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: ldc           #1                  // String -
      27: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: getfield      #92                 // Field engine:Lorg/bouncycastle/crypto/digests/SkeinEngine;
      34: invokevirtual #102                // Method org/bouncycastle/crypto/digests/SkeinEngine.getOutputSize:()I
      37: bipush        8
      39: imul
      40: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: instanceof    #58                 // class org/bouncycastle/crypto/params/SkeinParameters
       4: ifeq          15
       7: aload_1
       8: checkcast     #58                 // class org/bouncycastle/crypto/params/SkeinParameters
      11: astore_2
      12: goto          79
      15: aload_1
      16: instanceof    #57                 // class org/bouncycastle/crypto/params/KeyParameter
      19: ifeq          46
      22: new           #59                 // class org/bouncycastle/crypto/params/SkeinParameters$Builder
      25: dup
      26: invokespecial #112                // Method org/bouncycastle/crypto/params/SkeinParameters$Builder."<init>":()V
      29: aload_1
      30: checkcast     #57                 // class org/bouncycastle/crypto/params/KeyParameter
      33: invokevirtual #110                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      36: invokevirtual #114                // Method org/bouncycastle/crypto/params/SkeinParameters$Builder.setKey:([B)Lorg/bouncycastle/crypto/params/SkeinParameters$Builder;
      39: invokevirtual #113                // Method org/bouncycastle/crypto/params/SkeinParameters$Builder.build:()Lorg/bouncycastle/crypto/params/SkeinParameters;
      42: astore_2
      43: goto          79
      46: new           #51                 // class java/lang/IllegalArgumentException
      49: dup
      50: new           #53                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #97                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #2                  // String Invalid parameter passed to Skein MAC init -
      59: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_1
      63: invokevirtual #96                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      66: invokevirtual #93                 // Method java/lang/Class.getName:()Ljava/lang/String;
      69: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_2
      80: invokevirtual #111                // Method org/bouncycastle/crypto/params/SkeinParameters.getKey:()[B
      83: ifnonnull     96
      86: new           #51                 // class java/lang/IllegalArgumentException
      89: dup
      90: ldc           #3                  // String Skein MAC requires a key parameter.
      92: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: aload_0
      97: getfield      #92                 // Field engine:Lorg/bouncycastle/crypto/digests/SkeinEngine;
     100: aload_2
     101: invokevirtual #109                // Method org/bouncycastle/crypto/digests/SkeinEngine.init:(Lorg/bouncycastle/crypto/params/SkeinParameters;)V
     104: return

  public int getMacSize();
    Code:
       0: aload_0
       1: getfield      #92                 // Field engine:Lorg/bouncycastle/crypto/digests/SkeinEngine;
       4: invokevirtual #102                // Method org/bouncycastle/crypto/digests/SkeinEngine.getOutputSize:()I
       7: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #92                 // Field engine:Lorg/bouncycastle/crypto/digests/SkeinEngine;
       4: invokevirtual #103                // Method org/bouncycastle/crypto/digests/SkeinEngine.reset:()V
       7: return

  public void update(byte);
    Code:
       0: aload_0
       1: getfield      #92                 // Field engine:Lorg/bouncycastle/crypto/digests/SkeinEngine;
       4: iload_1
       5: invokevirtual #104                // Method org/bouncycastle/crypto/digests/SkeinEngine.update:(B)V
       8: return

  public void update(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #92                 // Field engine:Lorg/bouncycastle/crypto/digests/SkeinEngine;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #107                // Method org/bouncycastle/crypto/digests/SkeinEngine.update:([BII)V
      10: return

  public int doFinal(byte[], int);
    Code:
       0: aload_0
       1: getfield      #92                 // Field engine:Lorg/bouncycastle/crypto/digests/SkeinEngine;
       4: aload_1
       5: iload_2
       6: invokevirtual #106                // Method org/bouncycastle/crypto/digests/SkeinEngine.doFinal:([BI)I
       9: ireturn
}
