public class org.bouncycastle.crypto.generators.RSABlindingFactorGenerator {
  private static java.math.BigInteger ZERO;

  private static java.math.BigInteger ONE;

  private org.bouncycastle.crypto.params.RSAKeyParameters key;

  private java.security.SecureRandom random;

  public org.bouncycastle.crypto.generators.RSABlindingFactorGenerator();
    Code:
       0: aload_0
       1: invokespecial #77                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: instanceof    #40                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       4: ifeq          34
       7: aload_1
       8: checkcast     #40                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #84                 // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      17: checkcast     #41                 // class org/bouncycastle/crypto/params/RSAKeyParameters
      20: putfield      #74                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      23: aload_0
      24: aload_2
      25: invokevirtual #83                 // Method org/bouncycastle/crypto/params/ParametersWithRandom.getRandom:()Ljava/security/SecureRandom;
      28: putfield      #73                 // Field random:Ljava/security/SecureRandom;
      31: goto          49
      34: aload_0
      35: aload_1
      36: checkcast     #41                 // class org/bouncycastle/crypto/params/RSAKeyParameters
      39: putfield      #74                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      42: aload_0
      43: invokestatic  #82                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
      46: putfield      #73                 // Field random:Ljava/security/SecureRandom;
      49: aload_0
      50: getfield      #74                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      53: instanceof    #42                 // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
      56: ifeq          69
      59: new           #34                 // class java/lang/IllegalArgumentException
      62: dup
      63: ldc           #2                  // String generator requires RSA public key
      65: invokespecial #75                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: return

  public java.math.BigInteger generateBlindingFactor();
    Code:
       0: aload_0
       1: getfield      #74                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
       4: ifnonnull     17
       7: new           #35                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String generator not initialised
      13: invokespecial #76                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #74                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      21: invokevirtual #85                 // Method org/bouncycastle/crypto/params/RSAKeyParameters.getModulus:()Ljava/math/BigInteger;
      24: astore_1
      25: aload_1
      26: invokevirtual #78                 // Method java/math/BigInteger.bitLength:()I
      29: iconst_1
      30: isub
      31: istore_2
      32: iload_2
      33: aload_0
      34: getfield      #73                 // Field random:Ljava/security/SecureRandom;
      37: invokestatic  #86                 // Method org/bouncycastle/util/BigIntegers.createRandomBigInteger:(ILjava/security/SecureRandom;)Ljava/math/BigInteger;
      40: astore_3
      41: aload_3
      42: aload_1
      43: invokevirtual #81                 // Method java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      46: astore        4
      48: aload_3
      49: getstatic     #72                 // Field ZERO:Ljava/math/BigInteger;
      52: invokevirtual #79                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      55: ifne          32
      58: aload_3
      59: getstatic     #71                 // Field ONE:Ljava/math/BigInteger;
      62: invokevirtual #79                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      65: ifne          32
      68: aload         4
      70: getstatic     #71                 // Field ONE:Ljava/math/BigInteger;
      73: invokevirtual #79                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      76: ifeq          32
      79: aload_3
      80: areturn

  static {};
    Code:
       0: lconst_0
       1: invokestatic  #80                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #72                 // Field ZERO:Ljava/math/BigInteger;
       7: lconst_1
       8: invokestatic  #80                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      11: putstatic     #71                 // Field ONE:Ljava/math/BigInteger;
      14: return
}
