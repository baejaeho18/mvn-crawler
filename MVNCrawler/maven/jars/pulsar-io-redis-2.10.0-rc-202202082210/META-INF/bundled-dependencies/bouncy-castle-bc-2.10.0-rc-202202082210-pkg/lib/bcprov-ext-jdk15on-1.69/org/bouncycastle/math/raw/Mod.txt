public abstract class org.bouncycastle.math.raw.Mod {
  private static final int M30;

  private static final long M32L;

  public org.bouncycastle.math.raw.Mod();
    Code:
       0: aload_0
       1: invokespecial #119                // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[], int[]);
    Code:
       0: aload_0
       1: arraylength
       2: istore        4
       4: iload         4
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokestatic  #146                // Method org/bouncycastle/math/raw/Nat.add:(I[I[I[I)I
      12: istore        5
      14: iload         5
      16: ifeq          27
      19: iload         4
      21: aload_0
      22: aload_3
      23: invokestatic  #144                // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      26: pop
      27: return

  public static void checkedModOddInverse(int[], int[], int[]);
    Code:
       0: iconst_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokestatic  #135                // Method modOddInverse:([I[I[I)I
       7: if_icmpne     20
      10: new           #75                 // class java/lang/ArithmeticException
      13: dup
      14: ldc           #2                  // String Inverse does not exist.
      16: invokespecial #117                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  public static void checkedModOddInverseVar(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #137                // Method modOddInverseVar:([I[I[I)Z
       6: ifne          19
       9: new           #75                 // class java/lang/ArithmeticException
      12: dup
      13: ldc           #2                  // String Inverse does not exist.
      15: invokespecial #117                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: return

  public static int inverse32(int);
    Code:
       0: iload_0
       1: istore_1
       2: iload_1
       3: iconst_2
       4: iload_0
       5: iload_1
       6: imul
       7: isub
       8: imul
       9: istore_1
      10: iload_1
      11: iconst_2
      12: iload_0
      13: iload_1
      14: imul
      15: isub
      16: imul
      17: istore_1
      18: iload_1
      19: iconst_2
      20: iload_0
      21: iload_1
      22: imul
      23: isub
      24: imul
      25: istore_1
      26: iload_1
      27: iconst_2
      28: iload_0
      29: iload_1
      30: imul
      31: isub
      32: imul
      33: istore_1
      34: iload_1
      35: ireturn

  public static void invert(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #136                // Method checkedModOddInverseVar:([I[I[I)V
       6: return

  public static int modOddInverse(int[], int[], int[]);
    Code:
       0: aload_0
       1: arraylength
       2: istore_3
       3: iload_3
       4: iconst_5
       5: ishl
       6: aload_0
       7: iload_3
       8: iconst_1
       9: isub
      10: iaload
      11: invokestatic  #148                // Method org/bouncycastle/util/Integers.numberOfLeadingZeros:(I)I
      14: isub
      15: istore        4
      17: iload         4
      19: bipush        29
      21: iadd
      22: bipush        30
      24: idiv
      25: istore        5
      27: iconst_4
      28: newarray       int
      30: astore        6
      32: iload         5
      34: newarray       int
      36: astore        7
      38: iload         5
      40: newarray       int
      42: astore        8
      44: iload         5
      46: newarray       int
      48: astore        9
      50: iload         5
      52: newarray       int
      54: astore        10
      56: iload         5
      58: newarray       int
      60: astore        11
      62: aload         8
      64: iconst_0
      65: iconst_1
      66: iastore
      67: iload         4
      69: aload_1
      70: iconst_0
      71: aload         10
      73: iconst_0
      74: invokestatic  #131                // Method encode30:(I[II[II)V
      77: iload         4
      79: aload_0
      80: iconst_0
      81: aload         11
      83: iconst_0
      84: invokestatic  #131                // Method encode30:(I[II[II)V
      87: aload         11
      89: iconst_0
      90: aload         9
      92: iconst_0
      93: iload         5
      95: invokestatic  #120                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      98: iconst_m1
      99: istore        12
     101: aload         11
     103: iconst_0
     104: iaload
     105: invokestatic  #124                // Method inverse32:(I)I
     108: istore        13
     110: iload         4
     112: invokestatic  #123                // Method getMaximumDivsteps:(I)I
     115: istore        14
     117: iconst_0
     118: istore        15
     120: iload         15
     122: iload         14
     124: if_icmpge     176
     127: iload         12
     129: aload         9
     131: iconst_0
     132: iaload
     133: aload         10
     135: iconst_0
     136: iaload
     137: aload         6
     139: invokestatic  #125                // Method divsteps30:(III[I)I
     142: istore        12
     144: iload         5
     146: aload         7
     148: aload         8
     150: aload         6
     152: iload         13
     154: aload         11
     156: invokestatic  #134                // Method updateDE30:(I[I[I[II[I)V
     159: iload         5
     161: aload         9
     163: aload         10
     165: aload         6
     167: invokestatic  #133                // Method updateFG30:(I[I[I[I)V
     170: iinc          15, 30
     173: goto          120
     176: aload         9
     178: iload         5
     180: iconst_1
     181: isub
     182: iaload
     183: bipush        31
     185: ishr
     186: istore        15
     188: iload         5
     190: iload         15
     192: aload         9
     194: invokestatic  #127                // Method cnegate30:(II[I)V
     197: iload         5
     199: iload         15
     201: aload         7
     203: aload         11
     205: invokestatic  #128                // Method cnormalize30:(II[I[I)V
     208: iload         4
     210: aload         7
     212: iconst_0
     213: aload_2
     214: iconst_0
     215: invokestatic  #130                // Method decode30:(I[II[II)V
     218: iload         5
     220: aload         9
     222: iconst_1
     223: invokestatic  #142                // Method org/bouncycastle/math/raw/Nat.equalTo:(I[II)I
     226: iload         5
     228: aload         10
     230: invokestatic  #139                // Method org/bouncycastle/math/raw/Nat.equalToZero:(I[I)I
     233: iand
     234: ireturn

  public static boolean modOddInverseVar(int[], int[], int[]);
    Code:
       0: aload_0
       1: arraylength
       2: istore_3
       3: iload_3
       4: iconst_5
       5: ishl
       6: aload_0
       7: iload_3
       8: iconst_1
       9: isub
      10: iaload
      11: invokestatic  #148                // Method org/bouncycastle/util/Integers.numberOfLeadingZeros:(I)I
      14: isub
      15: istore        4
      17: iload         4
      19: bipush        29
      21: iadd
      22: bipush        30
      24: idiv
      25: istore        5
      27: iconst_4
      28: newarray       int
      30: astore        6
      32: iload         5
      34: newarray       int
      36: astore        7
      38: iload         5
      40: newarray       int
      42: astore        8
      44: iload         5
      46: newarray       int
      48: astore        9
      50: iload         5
      52: newarray       int
      54: astore        10
      56: iload         5
      58: newarray       int
      60: astore        11
      62: aload         8
      64: iconst_0
      65: iconst_1
      66: iastore
      67: iload         4
      69: aload_1
      70: iconst_0
      71: aload         10
      73: iconst_0
      74: invokestatic  #131                // Method encode30:(I[II[II)V
      77: iload         4
      79: aload_0
      80: iconst_0
      81: aload         11
      83: iconst_0
      84: invokestatic  #131                // Method encode30:(I[II[II)V
      87: aload         11
      89: iconst_0
      90: aload         9
      92: iconst_0
      93: iload         5
      95: invokestatic  #120                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      98: aload         10
     100: iload         5
     102: iconst_1
     103: isub
     104: iaload
     105: iconst_1
     106: ior
     107: invokestatic  #148                // Method org/bouncycastle/util/Integers.numberOfLeadingZeros:(I)I
     110: iload         5
     112: bipush        30
     114: imul
     115: iconst_2
     116: iadd
     117: iload         4
     119: isub
     120: isub
     121: istore        12
     123: iconst_m1
     124: iload         12
     126: isub
     127: istore        13
     129: iload         5
     131: istore        14
     133: iload         5
     135: istore        15
     137: aload         11
     139: iconst_0
     140: iaload
     141: invokestatic  #124                // Method inverse32:(I)I
     144: istore        16
     146: iload         4
     148: invokestatic  #123                // Method getMaximumDivsteps:(I)I
     151: istore        17
     153: iconst_0
     154: istore        18
     156: iload         15
     158: aload         10
     160: invokestatic  #141                // Method org/bouncycastle/math/raw/Nat.isZero:(I[I)Z
     163: ifne          315
     166: iload         18
     168: iload         17
     170: if_icmplt     175
     173: iconst_0
     174: ireturn
     175: iinc          18, 30
     178: iload         13
     180: aload         9
     182: iconst_0
     183: iaload
     184: aload         10
     186: iconst_0
     187: iaload
     188: aload         6
     190: invokestatic  #126                // Method divsteps30Var:(III[I)I
     193: istore        13
     195: iload         14
     197: aload         7
     199: aload         8
     201: aload         6
     203: iload         16
     205: aload         11
     207: invokestatic  #134                // Method updateDE30:(I[I[I[II[I)V
     210: iload         15
     212: aload         9
     214: aload         10
     216: aload         6
     218: invokestatic  #133                // Method updateFG30:(I[I[I[I)V
     221: aload         9
     223: iload         15
     225: iconst_1
     226: isub
     227: iaload
     228: istore        19
     230: aload         10
     232: iload         15
     234: iconst_1
     235: isub
     236: iaload
     237: istore        20
     239: iload         15
     241: iconst_2
     242: isub
     243: bipush        31
     245: ishr
     246: istore        21
     248: iload         21
     250: iload         19
     252: iload         19
     254: bipush        31
     256: ishr
     257: ixor
     258: ior
     259: istore        21
     261: iload         21
     263: iload         20
     265: iload         20
     267: bipush        31
     269: ishr
     270: ixor
     271: ior
     272: istore        21
     274: iload         21
     276: ifne          312
     279: aload         9
     281: iload         15
     283: iconst_2
     284: isub
     285: dup2
     286: iaload
     287: iload         19
     289: bipush        30
     291: ishl
     292: ior
     293: iastore
     294: aload         10
     296: iload         15
     298: iconst_2
     299: isub
     300: dup2
     301: iaload
     302: iload         20
     304: bipush        30
     306: ishl
     307: ior
     308: iastore
     309: iinc          15, -1
     312: goto          156
     315: aload         9
     317: iload         15
     319: iconst_1
     320: isub
     321: iaload
     322: bipush        31
     324: ishr
     325: istore        19
     327: aload         7
     329: iload         14
     331: iconst_1
     332: isub
     333: iaload
     334: bipush        31
     336: ishr
     337: istore        20
     339: iload         20
     341: ifge          355
     344: iload         14
     346: aload         7
     348: aload         11
     350: invokestatic  #132                // Method add30:(I[I[I)I
     353: istore        20
     355: iload         19
     357: ifge          378
     360: iload         14
     362: aload         7
     364: invokestatic  #129                // Method negate30:(I[I)I
     367: istore        20
     369: iload         15
     371: aload         9
     373: invokestatic  #129                // Method negate30:(I[I)I
     376: istore        19
     378: iload         15
     380: aload         9
     382: invokestatic  #140                // Method org/bouncycastle/math/raw/Nat.isOne:(I[I)Z
     385: ifne          390
     388: iconst_0
     389: ireturn
     390: iload         20
     392: ifge          406
     395: iload         14
     397: aload         7
     399: aload         11
     401: invokestatic  #132                // Method add30:(I[I[I)I
     404: istore        20
     406: iload         4
     408: aload         7
     410: iconst_0
     411: aload_2
     412: iconst_0
     413: invokestatic  #130                // Method decode30:(I[II[II)V
     416: iconst_1
     417: ireturn

  public static int[] random(int[]);
    Code:
       0: aload_0
       1: arraylength
       2: istore_1
       3: new           #79                 // class java/util/Random
       6: dup
       7: invokespecial #122                // Method java/util/Random."<init>":()V
      10: astore_2
      11: iload_1
      12: invokestatic  #138                // Method org/bouncycastle/math/raw/Nat.create:(I)[I
      15: astore_3
      16: aload_0
      17: iload_1
      18: iconst_1
      19: isub
      20: iaload
      21: istore        4
      23: iload         4
      25: iload         4
      27: iconst_1
      28: iushr
      29: ior
      30: istore        4
      32: iload         4
      34: iload         4
      36: iconst_2
      37: iushr
      38: ior
      39: istore        4
      41: iload         4
      43: iload         4
      45: iconst_4
      46: iushr
      47: ior
      48: istore        4
      50: iload         4
      52: iload         4
      54: bipush        8
      56: iushr
      57: ior
      58: istore        4
      60: iload         4
      62: iload         4
      64: bipush        16
      66: iushr
      67: ior
      68: istore        4
      70: iconst_0
      71: istore        5
      73: iload         5
      75: iload_1
      76: if_icmpeq     93
      79: aload_3
      80: iload         5
      82: aload_2
      83: invokevirtual #121                // Method java/util/Random.nextInt:()I
      86: iastore
      87: iinc          5, 1
      90: goto          73
      93: aload_3
      94: iload_1
      95: iconst_1
      96: isub
      97: dup2
      98: iaload
      99: iload         4
     101: iand
     102: iastore
     103: iload_1
     104: aload_3
     105: aload_0
     106: invokestatic  #145                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
     109: ifne          70
     112: aload_3
     113: areturn

  public static void subtract(int[], int[], int[], int[]);
    Code:
       0: aload_0
       1: arraylength
       2: istore        4
       4: iload         4
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokestatic  #147                // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
      12: istore        5
      14: iload         5
      16: ifeq          27
      19: iload         4
      21: aload_0
      22: aload_3
      23: invokestatic  #143                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      26: pop
      27: return

  private static int add30(int, int[], int[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_0
       3: iconst_1
       4: isub
       5: istore        4
       7: iconst_0
       8: istore        5
      10: iload         5
      12: iload         4
      14: if_icmpge     48
      17: iload_3
      18: aload_1
      19: iload         5
      21: iaload
      22: aload_2
      23: iload         5
      25: iaload
      26: iadd
      27: iadd
      28: istore_3
      29: aload_1
      30: iload         5
      32: iload_3
      33: ldc           #1                  // int 1073741823
      35: iand
      36: iastore
      37: iload_3
      38: bipush        30
      40: ishr
      41: istore_3
      42: iinc          5, 1
      45: goto          10
      48: iload_3
      49: aload_1
      50: iload         4
      52: iaload
      53: aload_2
      54: iload         4
      56: iaload
      57: iadd
      58: iadd
      59: istore_3
      60: aload_1
      61: iload         4
      63: iload_3
      64: iastore
      65: iload_3
      66: bipush        30
      68: ishr
      69: istore_3
      70: iload_3
      71: ireturn

  private static void cnegate30(int, int, int[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_0
       3: iconst_1
       4: isub
       5: istore        4
       7: iconst_0
       8: istore        5
      10: iload         5
      12: iload         4
      14: if_icmpge     47
      17: iload_3
      18: aload_2
      19: iload         5
      21: iaload
      22: iload_1
      23: ixor
      24: iload_1
      25: isub
      26: iadd
      27: istore_3
      28: aload_2
      29: iload         5
      31: iload_3
      32: ldc           #1                  // int 1073741823
      34: iand
      35: iastore
      36: iload_3
      37: bipush        30
      39: ishr
      40: istore_3
      41: iinc          5, 1
      44: goto          10
      47: iload_3
      48: aload_2
      49: iload         4
      51: iaload
      52: iload_1
      53: ixor
      54: iload_1
      55: isub
      56: iadd
      57: istore_3
      58: aload_2
      59: iload         4
      61: iload_3
      62: iastore
      63: return

  private static void cnormalize30(int, int, int[], int[]);
    Code:
       0: iload_0
       1: iconst_1
       2: isub
       3: istore        4
       5: iconst_0
       6: istore        5
       8: aload_2
       9: iload         4
      11: iaload
      12: bipush        31
      14: ishr
      15: istore        6
      17: iconst_0
      18: istore        7
      20: iload         7
      22: iload         4
      24: if_icmpge     78
      27: aload_2
      28: iload         7
      30: iaload
      31: aload_3
      32: iload         7
      34: iaload
      35: iload         6
      37: iand
      38: iadd
      39: istore        8
      41: iload         8
      43: iload_1
      44: ixor
      45: iload_1
      46: isub
      47: istore        8
      49: iload         5
      51: iload         8
      53: iadd
      54: istore        5
      56: aload_2
      57: iload         7
      59: iload         5
      61: ldc           #1                  // int 1073741823
      63: iand
      64: iastore
      65: iload         5
      67: bipush        30
      69: ishr
      70: istore        5
      72: iinc          7, 1
      75: goto          20
      78: aload_2
      79: iload         4
      81: iaload
      82: aload_3
      83: iload         4
      85: iaload
      86: iload         6
      88: iand
      89: iadd
      90: istore        7
      92: iload         7
      94: iload_1
      95: ixor
      96: iload_1
      97: isub
      98: istore        7
     100: iload         5
     102: iload         7
     104: iadd
     105: istore        5
     107: aload_2
     108: iload         4
     110: iload         5
     112: iastore
     113: iconst_0
     114: istore        5
     116: aload_2
     117: iload         4
     119: iaload
     120: bipush        31
     122: ishr
     123: istore        6
     125: iconst_0
     126: istore        7
     128: iload         7
     130: iload         4
     132: if_icmpge     178
     135: aload_2
     136: iload         7
     138: iaload
     139: aload_3
     140: iload         7
     142: iaload
     143: iload         6
     145: iand
     146: iadd
     147: istore        8
     149: iload         5
     151: iload         8
     153: iadd
     154: istore        5
     156: aload_2
     157: iload         7
     159: iload         5
     161: ldc           #1                  // int 1073741823
     163: iand
     164: iastore
     165: iload         5
     167: bipush        30
     169: ishr
     170: istore        5
     172: iinc          7, 1
     175: goto          128
     178: aload_2
     179: iload         4
     181: iaload
     182: aload_3
     183: iload         4
     185: iaload
     186: iload         6
     188: iand
     189: iadd
     190: istore        7
     192: iload         5
     194: iload         7
     196: iadd
     197: istore        5
     199: aload_2
     200: iload         4
     202: iload         5
     204: iastore
     205: return

  private static void decode30(int, int[], int, int[], int);
    Code:
       0: iconst_0
       1: istore        5
       3: lconst_0
       4: lstore        6
       6: iload_0
       7: ifle          68
      10: iload         5
      12: bipush        32
      14: iload_0
      15: invokestatic  #118                // Method java/lang/Math.min:(II)I
      18: if_icmpge     42
      21: lload         6
      23: aload_1
      24: iload_2
      25: iinc          2, 1
      28: iaload
      29: i2l
      30: iload         5
      32: lshl
      33: lor
      34: lstore        6
      36: iinc          5, 30
      39: goto          10
      42: aload_3
      43: iload         4
      45: iinc          4, 1
      48: lload         6
      50: l2i
      51: iastore
      52: lload         6
      54: bipush        32
      56: lushr
      57: lstore        6
      59: iinc          5, -32
      62: iinc          0, -32
      65: goto          6
      68: return

  private static int divsteps30(int, int, int, int[]);
    Code:
       0: iconst_1
       1: istore        4
       3: iconst_0
       4: istore        5
       6: iconst_0
       7: istore        6
       9: iconst_1
      10: istore        7
      12: iload_1
      13: istore        8
      15: iload_2
      16: istore        9
      18: iconst_0
      19: istore        10
      21: iload         10
      23: bipush        30
      25: if_icmpge     172
      28: iload_0
      29: bipush        31
      31: ishr
      32: istore        11
      34: iload         9
      36: iconst_1
      37: iand
      38: ineg
      39: istore        12
      41: iload         8
      43: iload         11
      45: ixor
      46: iload         11
      48: isub
      49: istore        13
      51: iload         4
      53: iload         11
      55: ixor
      56: iload         11
      58: isub
      59: istore        14
      61: iload         5
      63: iload         11
      65: ixor
      66: iload         11
      68: isub
      69: istore        15
      71: iload         9
      73: iload         13
      75: iload         12
      77: iand
      78: iadd
      79: istore        9
      81: iload         6
      83: iload         14
      85: iload         12
      87: iand
      88: iadd
      89: istore        6
      91: iload         7
      93: iload         15
      95: iload         12
      97: iand
      98: iadd
      99: istore        7
     101: iload         11
     103: iload         12
     105: iand
     106: istore        11
     108: iload_0
     109: iload         11
     111: ixor
     112: iload         11
     114: iconst_1
     115: iadd
     116: isub
     117: istore_0
     118: iload         8
     120: iload         9
     122: iload         11
     124: iand
     125: iadd
     126: istore        8
     128: iload         4
     130: iload         6
     132: iload         11
     134: iand
     135: iadd
     136: istore        4
     138: iload         5
     140: iload         7
     142: iload         11
     144: iand
     145: iadd
     146: istore        5
     148: iload         9
     150: iconst_1
     151: ishr
     152: istore        9
     154: iload         4
     156: iconst_1
     157: ishl
     158: istore        4
     160: iload         5
     162: iconst_1
     163: ishl
     164: istore        5
     166: iinc          10, 1
     169: goto          21
     172: aload_3
     173: iconst_0
     174: iload         4
     176: iastore
     177: aload_3
     178: iconst_1
     179: iload         5
     181: iastore
     182: aload_3
     183: iconst_2
     184: iload         6
     186: iastore
     187: aload_3
     188: iconst_3
     189: iload         7
     191: iastore
     192: iload_0
     193: ireturn

  private static int divsteps30Var(int, int, int, int[]);
    Code:
       0: iconst_1
       1: istore        4
       3: iconst_0
       4: istore        5
       6: iconst_0
       7: istore        6
       9: iconst_1
      10: istore        7
      12: iload_1
      13: istore        8
      15: iload_2
      16: istore        9
      18: bipush        30
      20: istore        15
      22: iload         9
      24: iconst_m1
      25: iload         15
      27: ishl
      28: ior
      29: invokestatic  #149                // Method org/bouncycastle/util/Integers.numberOfTrailingZeros:(I)I
      32: istore        17
      34: iload         9
      36: iload         17
      38: ishr
      39: istore        9
      41: iload         4
      43: iload         17
      45: ishl
      46: istore        4
      48: iload         5
      50: iload         17
      52: ishl
      53: istore        5
      55: iload_0
      56: iload         17
      58: isub
      59: istore_0
      60: iload         15
      62: iload         17
      64: isub
      65: istore        15
      67: iload         15
      69: ifgt          75
      72: goto          259
      75: iload_0
      76: ifge          172
      79: iload_0
      80: ineg
      81: istore_0
      82: iload         8
      84: istore        12
      86: iload         9
      88: istore        8
      90: iload         12
      92: ineg
      93: istore        9
      95: iload         4
      97: istore        13
      99: iload         6
     101: istore        4
     103: iload         13
     105: ineg
     106: istore        6
     108: iload         5
     110: istore        14
     112: iload         7
     114: istore        5
     116: iload         14
     118: ineg
     119: istore        7
     121: iload_0
     122: iconst_1
     123: iadd
     124: iload         15
     126: if_icmple     134
     129: iload         15
     131: goto          137
     134: iload_0
     135: iconst_1
     136: iadd
     137: istore        16
     139: iconst_m1
     140: bipush        32
     142: iload         16
     144: isub
     145: iushr
     146: bipush        63
     148: iand
     149: istore        10
     151: iload         8
     153: iload         9
     155: imul
     156: iload         8
     158: iload         8
     160: imul
     161: iconst_2
     162: isub
     163: imul
     164: iload         10
     166: iand
     167: istore        11
     169: goto          226
     172: iload_0
     173: iconst_1
     174: iadd
     175: iload         15
     177: if_icmple     185
     180: iload         15
     182: goto          188
     185: iload_0
     186: iconst_1
     187: iadd
     188: istore        16
     190: iconst_m1
     191: bipush        32
     193: iload         16
     195: isub
     196: iushr
     197: bipush        15
     199: iand
     200: istore        10
     202: iload         8
     204: iload         8
     206: iconst_1
     207: iadd
     208: iconst_4
     209: iand
     210: iconst_1
     211: ishl
     212: iadd
     213: istore        11
     215: iload         11
     217: ineg
     218: iload         9
     220: imul
     221: iload         10
     223: iand
     224: istore        11
     226: iload         9
     228: iload         8
     230: iload         11
     232: imul
     233: iadd
     234: istore        9
     236: iload         6
     238: iload         4
     240: iload         11
     242: imul
     243: iadd
     244: istore        6
     246: iload         7
     248: iload         5
     250: iload         11
     252: imul
     253: iadd
     254: istore        7
     256: goto          22
     259: aload_3
     260: iconst_0
     261: iload         4
     263: iastore
     264: aload_3
     265: iconst_1
     266: iload         5
     268: iastore
     269: aload_3
     270: iconst_2
     271: iload         6
     273: iastore
     274: aload_3
     275: iconst_3
     276: iload         7
     278: iastore
     279: iload_0
     280: ireturn

  private static void encode30(int, int[], int, int[], int);
    Code:
       0: iconst_0
       1: istore        5
       3: lconst_0
       4: lstore        6
       6: iload_0
       7: ifle          72
      10: iload         5
      12: bipush        30
      14: iload_0
      15: invokestatic  #118                // Method java/lang/Math.min:(II)I
      18: if_icmpge     43
      21: lload         6
      23: aload_1
      24: iload_2
      25: iinc          2, 1
      28: iaload
      29: i2l
      30: ldc2_w        #73                 // long 4294967295l
      33: land
      34: iload         5
      36: lshl
      37: lor
      38: lstore        6
      40: iinc          5, 32
      43: aload_3
      44: iload         4
      46: iinc          4, 1
      49: lload         6
      51: l2i
      52: ldc           #1                  // int 1073741823
      54: iand
      55: iastore
      56: lload         6
      58: bipush        30
      60: lushr
      61: lstore        6
      63: iinc          5, -30
      66: iinc          0, -30
      69: goto          6
      72: return

  private static int getMaximumDivsteps(int);
    Code:
       0: bipush        49
       2: iload_0
       3: imul
       4: iload_0
       5: bipush        46
       7: if_icmpge     15
      10: bipush        80
      12: goto          17
      15: bipush        47
      17: iadd
      18: bipush        17
      20: idiv
      21: ireturn

  private static int negate30(int, int[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_0
       3: iconst_1
       4: isub
       5: istore_3
       6: iconst_0
       7: istore        4
       9: iload         4
      11: iload_3
      12: if_icmpge     41
      15: iload_2
      16: aload_1
      17: iload         4
      19: iaload
      20: isub
      21: istore_2
      22: aload_1
      23: iload         4
      25: iload_2
      26: ldc           #1                  // int 1073741823
      28: iand
      29: iastore
      30: iload_2
      31: bipush        30
      33: ishr
      34: istore_2
      35: iinc          4, 1
      38: goto          9
      41: iload_2
      42: aload_1
      43: iload_3
      44: iaload
      45: isub
      46: istore_2
      47: aload_1
      48: iload_3
      49: iload_2
      50: iastore
      51: iload_2
      52: bipush        30
      54: ishr
      55: istore_2
      56: iload_2
      57: ireturn

  private static void updateDE30(int, int[], int[], int[], int, int[]);
    Code:
       0: aload_3
       1: iconst_0
       2: iaload
       3: istore        6
       5: aload_3
       6: iconst_1
       7: iaload
       8: istore        7
      10: aload_3
      11: iconst_2
      12: iaload
      13: istore        8
      15: aload_3
      16: iconst_3
      17: iaload
      18: istore        9
      20: aload_1
      21: iload_0
      22: iconst_1
      23: isub
      24: iaload
      25: bipush        31
      27: ishr
      28: istore        16
      30: aload_2
      31: iload_0
      32: iconst_1
      33: isub
      34: iaload
      35: bipush        31
      37: ishr
      38: istore        17
      40: iload         6
      42: iload         16
      44: iand
      45: iload         7
      47: iload         17
      49: iand
      50: iadd
      51: istore        13
      53: iload         8
      55: iload         16
      57: iand
      58: iload         9
      60: iload         17
      62: iand
      63: iadd
      64: istore        14
      66: aload         5
      68: iconst_0
      69: iaload
      70: istore        15
      72: aload_1
      73: iconst_0
      74: iaload
      75: istore        10
      77: aload_2
      78: iconst_0
      79: iaload
      80: istore        11
      82: iload         6
      84: i2l
      85: iload         10
      87: i2l
      88: lmul
      89: iload         7
      91: i2l
      92: iload         11
      94: i2l
      95: lmul
      96: ladd
      97: lstore        18
      99: iload         8
     101: i2l
     102: iload         10
     104: i2l
     105: lmul
     106: iload         9
     108: i2l
     109: iload         11
     111: i2l
     112: lmul
     113: ladd
     114: lstore        20
     116: iload         13
     118: iload         4
     120: lload         18
     122: l2i
     123: imul
     124: iload         13
     126: iadd
     127: ldc           #1                  // int 1073741823
     129: iand
     130: isub
     131: istore        13
     133: iload         14
     135: iload         4
     137: lload         20
     139: l2i
     140: imul
     141: iload         14
     143: iadd
     144: ldc           #1                  // int 1073741823
     146: iand
     147: isub
     148: istore        14
     150: lload         18
     152: iload         15
     154: i2l
     155: iload         13
     157: i2l
     158: lmul
     159: ladd
     160: lstore        18
     162: lload         20
     164: iload         15
     166: i2l
     167: iload         14
     169: i2l
     170: lmul
     171: ladd
     172: lstore        20
     174: lload         18
     176: bipush        30
     178: lshr
     179: lstore        18
     181: lload         20
     183: bipush        30
     185: lshr
     186: lstore        20
     188: iconst_1
     189: istore        12
     191: iload         12
     193: iload_0
     194: if_icmpge     316
     197: aload         5
     199: iload         12
     201: iaload
     202: istore        15
     204: aload_1
     205: iload         12
     207: iaload
     208: istore        10
     210: aload_2
     211: iload         12
     213: iaload
     214: istore        11
     216: lload         18
     218: iload         6
     220: i2l
     221: iload         10
     223: i2l
     224: lmul
     225: iload         7
     227: i2l
     228: iload         11
     230: i2l
     231: lmul
     232: ladd
     233: iload         15
     235: i2l
     236: iload         13
     238: i2l
     239: lmul
     240: ladd
     241: ladd
     242: lstore        18
     244: lload         20
     246: iload         8
     248: i2l
     249: iload         10
     251: i2l
     252: lmul
     253: iload         9
     255: i2l
     256: iload         11
     258: i2l
     259: lmul
     260: ladd
     261: iload         15
     263: i2l
     264: iload         14
     266: i2l
     267: lmul
     268: ladd
     269: ladd
     270: lstore        20
     272: aload_1
     273: iload         12
     275: iconst_1
     276: isub
     277: lload         18
     279: l2i
     280: ldc           #1                  // int 1073741823
     282: iand
     283: iastore
     284: lload         18
     286: bipush        30
     288: lshr
     289: lstore        18
     291: aload_2
     292: iload         12
     294: iconst_1
     295: isub
     296: lload         20
     298: l2i
     299: ldc           #1                  // int 1073741823
     301: iand
     302: iastore
     303: lload         20
     305: bipush        30
     307: lshr
     308: lstore        20
     310: iinc          12, 1
     313: goto          191
     316: aload_1
     317: iload_0
     318: iconst_1
     319: isub
     320: lload         18
     322: l2i
     323: iastore
     324: aload_2
     325: iload_0
     326: iconst_1
     327: isub
     328: lload         20
     330: l2i
     331: iastore
     332: return

  private static void updateFG30(int, int[], int[], int[]);
    Code:
       0: aload_3
       1: iconst_0
       2: iaload
       3: istore        4
       5: aload_3
       6: iconst_1
       7: iaload
       8: istore        5
      10: aload_3
      11: iconst_2
      12: iaload
      13: istore        6
      15: aload_3
      16: iconst_3
      17: iaload
      18: istore        7
      20: aload_1
      21: iconst_0
      22: iaload
      23: istore        8
      25: aload_2
      26: iconst_0
      27: iaload
      28: istore        9
      30: iload         4
      32: i2l
      33: iload         8
      35: i2l
      36: lmul
      37: iload         5
      39: i2l
      40: iload         9
      42: i2l
      43: lmul
      44: ladd
      45: lstore        11
      47: iload         6
      49: i2l
      50: iload         8
      52: i2l
      53: lmul
      54: iload         7
      56: i2l
      57: iload         9
      59: i2l
      60: lmul
      61: ladd
      62: lstore        13
      64: lload         11
      66: bipush        30
      68: lshr
      69: lstore        11
      71: lload         13
      73: bipush        30
      75: lshr
      76: lstore        13
      78: iconst_1
      79: istore        10
      81: iload         10
      83: iload_0
      84: if_icmpge     183
      87: aload_1
      88: iload         10
      90: iaload
      91: istore        8
      93: aload_2
      94: iload         10
      96: iaload
      97: istore        9
      99: lload         11
     101: iload         4
     103: i2l
     104: iload         8
     106: i2l
     107: lmul
     108: iload         5
     110: i2l
     111: iload         9
     113: i2l
     114: lmul
     115: ladd
     116: ladd
     117: lstore        11
     119: lload         13
     121: iload         6
     123: i2l
     124: iload         8
     126: i2l
     127: lmul
     128: iload         7
     130: i2l
     131: iload         9
     133: i2l
     134: lmul
     135: ladd
     136: ladd
     137: lstore        13
     139: aload_1
     140: iload         10
     142: iconst_1
     143: isub
     144: lload         11
     146: l2i
     147: ldc           #1                  // int 1073741823
     149: iand
     150: iastore
     151: lload         11
     153: bipush        30
     155: lshr
     156: lstore        11
     158: aload_2
     159: iload         10
     161: iconst_1
     162: isub
     163: lload         13
     165: l2i
     166: ldc           #1                  // int 1073741823
     168: iand
     169: iastore
     170: lload         13
     172: bipush        30
     174: lshr
     175: lstore        13
     177: iinc          10, 1
     180: goto          81
     183: aload_1
     184: iload_0
     185: iconst_1
     186: isub
     187: lload         11
     189: l2i
     190: iastore
     191: aload_2
     192: iload_0
     193: iconst_1
     194: isub
     195: lload         13
     197: l2i
     198: iastore
     199: return
}
