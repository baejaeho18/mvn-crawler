public interface org.bouncycastle.pqc.jcajce.interfaces.StateAwareSignature {
  public abstract void initVerify(java.security.PublicKey) throws java.security.InvalidKeyException;

  public abstract void initVerify(java.security.cert.Certificate) throws java.security.InvalidKeyException;

  public abstract void initSign(java.security.PrivateKey) throws java.security.InvalidKeyException;

  public abstract void initSign(java.security.PrivateKey, java.security.SecureRandom) throws java.security.InvalidKeyException;

  public abstract byte[] sign() throws java.security.SignatureException;

  public abstract int sign(byte[], int, int) throws java.security.SignatureException;

  public abstract boolean verify(byte[]) throws java.security.SignatureException;

  public abstract boolean verify(byte[], int, int) throws java.security.SignatureException;

  public abstract void update(byte) throws java.security.SignatureException;

  public abstract void update(byte[]) throws java.security.SignatureException;

  public abstract void update(byte[], int, int) throws java.security.SignatureException;

  public abstract void update(java.nio.ByteBuffer) throws java.security.SignatureException;

  public abstract java.lang.String getAlgorithm();

  public abstract boolean isSigningCapable();

  public abstract java.security.PrivateKey getUpdatedPrivateKey();
}
