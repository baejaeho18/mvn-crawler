Compiled from "IndefiniteLengthInputStream.java"
class org.bouncycastle.asn1.IndefiniteLengthInputStream extends org.bouncycastle.asn1.LimitedInputStream {
  private int _b1;

  private int _b2;

  private boolean _eofReached;

  private boolean _eofOn00;

  org.bouncycastle.asn1.IndefiniteLengthInputStream(java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method org/bouncycastle/asn1/LimitedInputStream."<init>":(Ljava/io/InputStream;I)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field _eofReached:Z
      11: aload_0
      12: iconst_1
      13: putfield      #3                  // Field _eofOn00:Z
      16: aload_0
      17: aload_1
      18: invokevirtual #4                  // Method java/io/InputStream.read:()I
      21: putfield      #5                  // Field _b1:I
      24: aload_0
      25: aload_1
      26: invokevirtual #4                  // Method java/io/InputStream.read:()I
      29: putfield      #6                  // Field _b2:I
      32: aload_0
      33: getfield      #6                  // Field _b2:I
      36: ifge          47
      39: new           #7                  // class java/io/EOFException
      42: dup
      43: invokespecial #8                  // Method java/io/EOFException."<init>":()V
      46: athrow
      47: aload_0
      48: invokespecial #9                  // Method checkForEof:()Z
      51: pop
      52: return

  void setEofOn00(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field _eofOn00:Z
       5: aload_0
       6: invokespecial #9                  // Method checkForEof:()Z
       9: pop
      10: return

  private boolean checkForEof();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _eofReached:Z
       4: ifne          38
       7: aload_0
       8: getfield      #3                  // Field _eofOn00:Z
      11: ifeq          38
      14: aload_0
      15: getfield      #5                  // Field _b1:I
      18: ifne          38
      21: aload_0
      22: getfield      #6                  // Field _b2:I
      25: ifne          38
      28: aload_0
      29: iconst_1
      30: putfield      #2                  // Field _eofReached:Z
      33: aload_0
      34: iconst_1
      35: invokevirtual #10                 // Method setParentEofDetect:(Z)V
      38: aload_0
      39: getfield      #2                  // Field _eofReached:Z
      42: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _eofOn00:Z
       4: ifne          12
       7: iload_3
       8: iconst_3
       9: if_icmpge     20
      12: aload_0
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokespecial #11                 // Method org/bouncycastle/asn1/LimitedInputStream.read:([BII)I
      19: ireturn
      20: aload_0
      21: getfield      #2                  // Field _eofReached:Z
      24: ifeq          29
      27: iconst_m1
      28: ireturn
      29: aload_0
      30: getfield      #12                 // Field _in:Ljava/io/InputStream;
      33: aload_1
      34: iload_2
      35: iconst_2
      36: iadd
      37: iload_3
      38: iconst_2
      39: isub
      40: invokevirtual #13                 // Method java/io/InputStream.read:([BII)I
      43: istore        4
      45: iload         4
      47: ifge          58
      50: new           #7                  // class java/io/EOFException
      53: dup
      54: invokespecial #8                  // Method java/io/EOFException."<init>":()V
      57: athrow
      58: aload_1
      59: iload_2
      60: aload_0
      61: getfield      #5                  // Field _b1:I
      64: i2b
      65: bastore
      66: aload_1
      67: iload_2
      68: iconst_1
      69: iadd
      70: aload_0
      71: getfield      #6                  // Field _b2:I
      74: i2b
      75: bastore
      76: aload_0
      77: aload_0
      78: getfield      #12                 // Field _in:Ljava/io/InputStream;
      81: invokevirtual #4                  // Method java/io/InputStream.read:()I
      84: putfield      #5                  // Field _b1:I
      87: aload_0
      88: aload_0
      89: getfield      #12                 // Field _in:Ljava/io/InputStream;
      92: invokevirtual #4                  // Method java/io/InputStream.read:()I
      95: putfield      #6                  // Field _b2:I
      98: aload_0
      99: getfield      #6                  // Field _b2:I
     102: ifge          113
     105: new           #7                  // class java/io/EOFException
     108: dup
     109: invokespecial #8                  // Method java/io/EOFException."<init>":()V
     112: athrow
     113: iload         4
     115: iconst_2
     116: iadd
     117: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #9                  // Method checkForEof:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #12                 // Field _in:Ljava/io/InputStream;
      13: invokevirtual #4                  // Method java/io/InputStream.read:()I
      16: istore_1
      17: iload_1
      18: ifge          29
      21: new           #7                  // class java/io/EOFException
      24: dup
      25: invokespecial #8                  // Method java/io/EOFException."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #5                  // Field _b1:I
      33: istore_2
      34: aload_0
      35: aload_0
      36: getfield      #6                  // Field _b2:I
      39: putfield      #5                  // Field _b1:I
      42: aload_0
      43: iload_1
      44: putfield      #6                  // Field _b2:I
      47: iload_2
      48: ireturn
}
