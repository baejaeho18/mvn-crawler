public class org.bouncycastle.pqc.crypto.ntru.NTRUSigner {
  private org.bouncycastle.pqc.crypto.ntru.NTRUSigningParameters params;

  private org.bouncycastle.crypto.Digest hashAlg;

  private org.bouncycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters signingKeyPair;

  private org.bouncycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters verificationKey;

  public org.bouncycastle.pqc.crypto.ntru.NTRUSigner(org.bouncycastle.pqc.crypto.ntru.NTRUSigningParameters);
    Code:
       0: aload_0
       1: invokespecial #205                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
       9: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: iload_1
       1: ifeq          15
       4: aload_0
       5: aload_2
       6: checkcast     #99                 // class org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters
       9: putfield      #188                // Field signingKeyPair:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters;
      12: goto          23
      15: aload_0
      16: aload_2
      17: checkcast     #101                // class org/bouncycastle/pqc/crypto/ntru/NTRUSigningPublicKeyParameters
      20: putfield      #189                // Field verificationKey:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPublicKeyParameters;
      23: aload_0
      24: aload_0
      25: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      28: getfield      #196                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.hashAlg:Lorg/bouncycastle/crypto/Digest;
      31: putfield      #186                // Field hashAlg:Lorg/bouncycastle/crypto/Digest;
      34: aload_0
      35: getfield      #186                // Field hashAlg:Lorg/bouncycastle/crypto/Digest;
      38: invokeinterface #238,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.reset:()V
      43: return

  public void update(byte);
    Code:
       0: aload_0
       1: getfield      #186                // Field hashAlg:Lorg/bouncycastle/crypto/Digest;
       4: ifnonnull     17
       7: new           #90                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #3                  // String Call initSign or initVerify first!
      13: invokespecial #202                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #186                // Field hashAlg:Lorg/bouncycastle/crypto/Digest;
      21: iload_1
      22: invokeinterface #239,  2          // InterfaceMethod org/bouncycastle/crypto/Digest.update:(B)V
      27: return

  public void update(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #186                // Field hashAlg:Lorg/bouncycastle/crypto/Digest;
       4: ifnonnull     17
       7: new           #90                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #3                  // String Call initSign or initVerify first!
      13: invokespecial #202                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #186                // Field hashAlg:Lorg/bouncycastle/crypto/Digest;
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokeinterface #241,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      29: return

  public byte[] generateSignature();
    Code:
       0: aload_0
       1: getfield      #186                // Field hashAlg:Lorg/bouncycastle/crypto/Digest;
       4: ifnull        14
       7: aload_0
       8: getfield      #188                // Field signingKeyPair:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters;
      11: ifnonnull     24
      14: new           #90                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #2                  // String Call initSign first!
      20: invokespecial #202                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #186                // Field hashAlg:Lorg/bouncycastle/crypto/Digest;
      28: invokeinterface #237,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      33: newarray       byte
      35: astore_1
      36: aload_0
      37: getfield      #186                // Field hashAlg:Lorg/bouncycastle/crypto/Digest;
      40: aload_1
      41: iconst_0
      42: invokeinterface #240,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      47: pop
      48: aload_0
      49: aload_1
      50: aload_0
      51: getfield      #188                // Field signingKeyPair:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters;
      54: invokespecial #218                // Method signHash:([BLorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters;)[B
      57: areturn

  private byte[] signHash(byte[], org.bouncycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: invokevirtual #226                // Method org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters.getPublicKey:()Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPublicKeyParameters;
       6: astore        6
       8: iinc          3, 1
      11: iload_3
      12: aload_0
      13: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      16: getfield      #195                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.signFailTolerance:I
      19: if_icmple     60
      22: new           #90                 // class java/lang/IllegalStateException
      25: dup
      26: new           #93                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #206                // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #5                  // String Signing failed: too many retries (max=
      35: invokevirtual #209                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      42: getfield      #195                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.signFailTolerance:I
      45: invokevirtual #208                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #1                  // String )
      50: invokevirtual #209                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #207                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #202                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: aload_1
      62: iload_3
      63: invokevirtual #220                // Method createMsgRep:([BI)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      66: astore        5
      68: aload_0
      69: aload         5
      71: aload_2
      72: invokespecial #221                // Method sign:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      75: astore        4
      77: aload_0
      78: aload         5
      80: aload         4
      82: aload         6
      84: getfield      #200                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningPublicKeyParameters.h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      87: invokespecial #222                // Method verify:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Z
      90: ifeq          8
      93: aload         4
      95: aload_0
      96: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      99: getfield      #194                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.q:I
     102: invokevirtual #231                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.toBinary:(I)[B
     105: astore        7
     107: aload         7
     109: arraylength
     110: iconst_4
     111: iadd
     112: invokestatic  #213                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     115: astore        8
     117: aload         8
     119: aload         7
     121: invokevirtual #216                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     124: pop
     125: aload         8
     127: iload_3
     128: invokevirtual #214                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     131: pop
     132: aload         8
     134: invokevirtual #211                // Method java/nio/ByteBuffer.array:()[B
     137: areturn

  private org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial sign(org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial, org.bouncycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters);
    Code:
       0: aload_0
       1: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
       4: getfield      #193                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.N:I
       7: istore_3
       8: aload_0
       9: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      12: getfield      #194                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.q:I
      15: istore        4
      17: aload_0
      18: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      21: getfield      #192                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.B:I
      24: istore        5
      26: aload_2
      27: astore        6
      29: aload_2
      30: invokevirtual #226                // Method org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters.getPublicKey:()Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPublicKeyParameters;
      33: astore        7
      35: new           #102                // class org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial
      38: dup
      39: iload_3
      40: invokespecial #228                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial."<init>":(I)V
      43: astore        8
      45: iload         5
      47: istore        9
      49: iload         9
      51: iconst_1
      52: if_icmplt     223
      55: aload         6
      57: iload         9
      59: invokevirtual #225                // Method org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters.getBasis:(I)Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis;
      62: getfield      #198                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis.f:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      65: astore        10
      67: aload         6
      69: iload         9
      71: invokevirtual #225                // Method org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters.getBasis:(I)Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis;
      74: getfield      #199                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis.fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
      77: astore        11
      79: aload         10
      81: aload_1
      82: invokeinterface #242,  2          // InterfaceMethod org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      87: astore        12
      89: aload         12
      91: iload         4
      93: invokevirtual #229                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.div:(I)V
      96: aload         11
      98: aload         12
     100: invokeinterface #242,  2          // InterfaceMethod org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     105: astore        12
     107: aload         11
     109: aload_1
     110: invokeinterface #242,  2          // InterfaceMethod org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     115: astore        13
     117: aload         13
     119: iload         4
     121: invokevirtual #229                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.div:(I)V
     124: aload         10
     126: aload         13
     128: invokeinterface #242,  2          // InterfaceMethod org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     133: astore        13
     135: aload         12
     137: astore        14
     139: aload         14
     141: aload         13
     143: invokevirtual #234                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.sub:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
     146: aload         8
     148: aload         14
     150: invokevirtual #233                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.add:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
     153: aload         6
     155: iload         9
     157: invokevirtual #225                // Method org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters.getBasis:(I)Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis;
     160: getfield      #197                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis.h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     163: invokevirtual #232                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.clone:()Ljava/lang/Object;
     166: checkcast     #102                // class org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial
     169: astore        15
     171: iload         9
     173: iconst_1
     174: if_icmple     197
     177: aload         15
     179: aload         6
     181: iload         9
     183: iconst_1
     184: isub
     185: invokevirtual #225                // Method org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters.getBasis:(I)Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis;
     188: getfield      #197                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis.h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     191: invokevirtual #234                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.sub:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
     194: goto          207
     197: aload         15
     199: aload         7
     201: getfield      #200                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningPublicKeyParameters.h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     204: invokevirtual #234                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.sub:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
     207: aload         14
     209: aload         15
     211: iload         4
     213: invokevirtual #236                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;I)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     216: astore_1
     217: iinc          9, -1
     220: goto          49
     223: aload         6
     225: iconst_0
     226: invokevirtual #225                // Method org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters.getBasis:(I)Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis;
     229: getfield      #198                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis.f:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
     232: astore        10
     234: aload         6
     236: iconst_0
     237: invokevirtual #225                // Method org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters.getBasis:(I)Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis;
     240: getfield      #199                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis.fPrime:Lorg/bouncycastle/pqc/math/ntru/polynomial/Polynomial;
     243: astore        11
     245: aload         10
     247: aload_1
     248: invokeinterface #242,  2          // InterfaceMethod org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     253: astore        12
     255: aload         12
     257: iload         4
     259: invokevirtual #229                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.div:(I)V
     262: aload         11
     264: aload         12
     266: invokeinterface #242,  2          // InterfaceMethod org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     271: astore        12
     273: aload         11
     275: aload_1
     276: invokeinterface #242,  2          // InterfaceMethod org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     281: astore        13
     283: aload         13
     285: iload         4
     287: invokevirtual #229                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.div:(I)V
     290: aload         10
     292: aload         13
     294: invokeinterface #242,  2          // InterfaceMethod org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
     299: astore        13
     301: aload         12
     303: aload         13
     305: invokevirtual #234                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.sub:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
     308: aload         8
     310: aload         12
     312: invokevirtual #233                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.add:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
     315: aload         8
     317: iload         4
     319: invokevirtual #230                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.modPositive:(I)V
     322: aload         8
     324: areturn

  public boolean verifySignature(byte[]);
    Code:
       0: aload_0
       1: getfield      #186                // Field hashAlg:Lorg/bouncycastle/crypto/Digest;
       4: ifnull        14
       7: aload_0
       8: getfield      #189                // Field verificationKey:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPublicKeyParameters;
      11: ifnonnull     24
      14: new           #90                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #4                  // String Call initVerify first!
      20: invokespecial #202                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #186                // Field hashAlg:Lorg/bouncycastle/crypto/Digest;
      28: invokeinterface #237,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      33: newarray       byte
      35: astore_2
      36: aload_0
      37: getfield      #186                // Field hashAlg:Lorg/bouncycastle/crypto/Digest;
      40: aload_2
      41: iconst_0
      42: invokeinterface #240,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      47: pop
      48: aload_0
      49: aload_2
      50: aload_1
      51: aload_0
      52: getfield      #189                // Field verificationKey:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPublicKeyParameters;
      55: invokespecial #219                // Method verifyHash:([B[BLorg/bouncycastle/pqc/crypto/ntru/NTRUSigningPublicKeyParameters;)Z
      58: ireturn

  private boolean verifyHash(byte[], byte[], org.bouncycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters);
    Code:
       0: aload_2
       1: invokestatic  #217                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       4: astore        4
       6: aload_2
       7: arraylength
       8: iconst_4
       9: isub
      10: newarray       byte
      12: astore        5
      14: aload         4
      16: aload         5
      18: invokevirtual #215                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      21: pop
      22: aload         5
      24: aload_0
      25: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      28: getfield      #193                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.N:I
      31: aload_0
      32: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      35: getfield      #194                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.q:I
      38: invokestatic  #235                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.fromBinary:([BII)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      41: astore        6
      43: aload         4
      45: invokevirtual #210                // Method java/nio/ByteBuffer.getInt:()I
      48: istore        7
      50: aload_0
      51: aload_0
      52: aload_1
      53: iload         7
      55: invokevirtual #220                // Method createMsgRep:([BI)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      58: aload         6
      60: aload_3
      61: getfield      #200                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningPublicKeyParameters.h:Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      64: invokespecial #222                // Method verify:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Z
      67: ireturn

  private boolean verify(org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial, org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial, org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial);
    Code:
       0: aload_0
       1: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
       4: getfield      #194                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.q:I
       7: istore        4
       9: aload_0
      10: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      13: getfield      #191                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.normBoundSq:D
      16: dstore        5
      18: aload_0
      19: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      22: getfield      #190                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.betaSq:D
      25: dstore        7
      27: aload_3
      28: aload_2
      29: iload         4
      31: invokevirtual #236                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.mult:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;I)Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;
      34: astore        9
      36: aload         9
      38: aload_1
      39: invokevirtual #234                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.sub:(Lorg/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V
      42: aload_2
      43: iload         4
      45: invokevirtual #227                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.centeredNormSq:(I)J
      48: l2d
      49: dload         7
      51: aload         9
      53: iload         4
      55: invokevirtual #227                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.centeredNormSq:(I)J
      58: l2d
      59: dmul
      60: dadd
      61: d2l
      62: lstore        10
      64: lload         10
      66: l2d
      67: dload         5
      69: dcmpg
      70: ifgt          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: ireturn

  protected org.bouncycastle.pqc.math.ntru.polynomial.IntegerPolynomial createMsgRep(byte[], int);
    Code:
       0: aload_0
       1: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
       4: getfield      #193                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.N:I
       7: istore_3
       8: aload_0
       9: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      12: getfield      #194                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.q:I
      15: istore        4
      17: bipush        31
      19: iload         4
      21: invokestatic  #203                // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      24: isub
      25: istore        5
      27: iload         5
      29: bipush        7
      31: iadd
      32: bipush        8
      34: idiv
      35: istore        6
      37: new           #102                // class org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial
      40: dup
      41: iload_3
      42: invokespecial #228                // Method org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial."<init>":(I)V
      45: astore        7
      47: aload_1
      48: arraylength
      49: iconst_4
      50: iadd
      51: invokestatic  #213                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      54: astore        8
      56: aload         8
      58: aload_1
      59: invokevirtual #216                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      62: pop
      63: aload         8
      65: iload_2
      66: invokevirtual #214                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      69: pop
      70: new           #97                 // class org/bouncycastle/pqc/crypto/ntru/NTRUSignerPrng
      73: dup
      74: aload         8
      76: invokevirtual #211                // Method java/nio/ByteBuffer.array:()[B
      79: aload_0
      80: getfield      #187                // Field params:Lorg/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters;
      83: getfield      #196                // Field org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.hashAlg:Lorg/bouncycastle/crypto/Digest;
      86: invokespecial #224                // Method org/bouncycastle/pqc/crypto/ntru/NTRUSignerPrng."<init>":([BLorg/bouncycastle/crypto/Digest;)V
      89: astore        9
      91: iconst_0
      92: istore        10
      94: iload         10
      96: iload_3
      97: if_icmpge     198
     100: aload         9
     102: iload         6
     104: invokevirtual #223                // Method org/bouncycastle/pqc/crypto/ntru/NTRUSignerPrng.nextBytes:(I)[B
     107: astore        11
     109: aload         11
     111: aload         11
     113: arraylength
     114: iconst_1
     115: isub
     116: baload
     117: istore        12
     119: iload         12
     121: bipush        8
     123: iload         6
     125: imul
     126: iload         5
     128: isub
     129: ishr
     130: istore        12
     132: iload         12
     134: bipush        8
     136: iload         6
     138: imul
     139: iload         5
     141: isub
     142: ishl
     143: istore        12
     145: aload         11
     147: aload         11
     149: arraylength
     150: iconst_1
     151: isub
     152: iload         12
     154: i2b
     155: bastore
     156: iconst_4
     157: invokestatic  #213                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     160: astore        13
     162: aload         13
     164: aload         11
     166: invokevirtual #216                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     169: pop
     170: aload         13
     172: invokevirtual #212                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
     175: pop
     176: aload         7
     178: getfield      #201                // Field org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.coeffs:[I
     181: iload         10
     183: aload         13
     185: invokevirtual #210                // Method java/nio/ByteBuffer.getInt:()I
     188: invokestatic  #204                // Method java/lang/Integer.reverseBytes:(I)I
     191: iastore
     192: iinc          10, 1
     195: goto          94
     198: aload         7
     200: areturn
}
