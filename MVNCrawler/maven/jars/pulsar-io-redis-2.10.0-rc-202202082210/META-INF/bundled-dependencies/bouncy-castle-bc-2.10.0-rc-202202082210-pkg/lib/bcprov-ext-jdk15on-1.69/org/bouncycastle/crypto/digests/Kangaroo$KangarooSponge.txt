class org.bouncycastle.crypto.digests.Kangaroo$KangarooSponge {
  private static long[] KeccakRoundConstants;

  private final int theRounds;

  private final int theRateBytes;

  private final long[] theState;

  private final byte[] theQueue;

  private int bytesInQueue;

  private boolean squeezing;

  org.bouncycastle.crypto.digests.Kangaroo$KangarooSponge(int, int);
    Code:
       0: aload_0
       1: invokespecial #138                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        25
       7: newarray       long
       9: putfield      #135                // Field theState:[J
      12: aload_0
      13: sipush        1600
      16: iload_1
      17: iconst_1
      18: ishl
      19: isub
      20: iconst_3
      21: ishr
      22: putfield      #130                // Field theRateBytes:I
      25: aload_0
      26: iload_2
      27: putfield      #131                // Field theRounds:I
      30: aload_0
      31: aload_0
      32: getfield      #130                // Field theRateBytes:I
      35: newarray       byte
      37: putfield      #133                // Field theQueue:[B
      40: aload_0
      41: invokespecial #142                // Method initSponge:()V
      44: return

  private void initSponge();
    Code:
       0: aload_0
       1: getfield      #135                // Field theState:[J
       4: lconst_0
       5: invokestatic  #148                // Method org/bouncycastle/util/Arrays.fill:([JJ)V
       8: aload_0
       9: getfield      #133                // Field theQueue:[B
      12: iconst_0
      13: invokestatic  #147                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      16: aload_0
      17: iconst_0
      18: putfield      #129                // Field bytesInQueue:I
      21: aload_0
      22: iconst_0
      23: putfield      #132                // Field squeezing:Z
      26: return

  private void absorb(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #132                // Field squeezing:Z
       4: ifeq          17
       7: new           #94                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String attempt to absorb while squeezing
      13: invokespecial #136                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_3
      23: if_icmpge     158
      26: aload_0
      27: getfield      #129                // Field bytesInQueue:I
      30: ifne          76
      33: iload         4
      35: iload_3
      36: aload_0
      37: getfield      #130                // Field theRateBytes:I
      40: isub
      41: if_icmpgt     76
      44: aload_0
      45: aload_1
      46: iload_2
      47: iload         4
      49: iadd
      50: invokespecial #144                // Method KangarooAbsorb:([BI)V
      53: iload         4
      55: aload_0
      56: getfield      #130                // Field theRateBytes:I
      59: iadd
      60: istore        4
      62: iload         4
      64: iload_3
      65: aload_0
      66: getfield      #130                // Field theRateBytes:I
      69: isub
      70: if_icmple     44
      73: goto          20
      76: aload_0
      77: getfield      #130                // Field theRateBytes:I
      80: aload_0
      81: getfield      #129                // Field bytesInQueue:I
      84: isub
      85: iload_3
      86: iload         4
      88: isub
      89: invokestatic  #137                // Method java/lang/Math.min:(II)I
      92: istore        5
      94: aload_1
      95: iload_2
      96: iload         4
      98: iadd
      99: aload_0
     100: getfield      #133                // Field theQueue:[B
     103: aload_0
     104: getfield      #129                // Field bytesInQueue:I
     107: iload         5
     109: invokestatic  #139                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     112: aload_0
     113: dup
     114: getfield      #129                // Field bytesInQueue:I
     117: iload         5
     119: iadd
     120: putfield      #129                // Field bytesInQueue:I
     123: iload         4
     125: iload         5
     127: iadd
     128: istore        4
     130: aload_0
     131: getfield      #129                // Field bytesInQueue:I
     134: aload_0
     135: getfield      #130                // Field theRateBytes:I
     138: if_icmpne     155
     141: aload_0
     142: aload_0
     143: getfield      #133                // Field theQueue:[B
     146: iconst_0
     147: invokespecial #144                // Method KangarooAbsorb:([BI)V
     150: aload_0
     151: iconst_0
     152: putfield      #129                // Field bytesInQueue:I
     155: goto          20
     158: return

  private void padAndSwitchToSqueezingPhase();
    Code:
       0: aload_0
       1: getfield      #129                // Field bytesInQueue:I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #130                // Field theRateBytes:I
      10: if_icmpge     26
      13: aload_0
      14: getfield      #133                // Field theQueue:[B
      17: iload_1
      18: iconst_0
      19: bastore
      20: iinc          1, 1
      23: goto          5
      26: aload_0
      27: getfield      #133                // Field theQueue:[B
      30: aload_0
      31: getfield      #130                // Field theRateBytes:I
      34: iconst_1
      35: isub
      36: dup2
      37: baload
      38: sipush        128
      41: ixor
      42: i2b
      43: bastore
      44: aload_0
      45: aload_0
      46: getfield      #133                // Field theQueue:[B
      49: iconst_0
      50: invokespecial #144                // Method KangarooAbsorb:([BI)V
      53: aload_0
      54: invokespecial #140                // Method KangarooExtract:()V
      57: aload_0
      58: aload_0
      59: getfield      #130                // Field theRateBytes:I
      62: putfield      #129                // Field bytesInQueue:I
      65: aload_0
      66: iconst_1
      67: putfield      #132                // Field squeezing:Z
      70: return

  private void squeeze(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #132                // Field squeezing:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #143                // Method padAndSwitchToSqueezingPhase:()V
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     100
      20: aload_0
      21: getfield      #129                // Field bytesInQueue:I
      24: ifne          43
      27: aload_0
      28: invokespecial #141                // Method KangarooPermutation:()V
      31: aload_0
      32: invokespecial #140                // Method KangarooExtract:()V
      35: aload_0
      36: aload_0
      37: getfield      #130                // Field theRateBytes:I
      40: putfield      #129                // Field bytesInQueue:I
      43: aload_0
      44: getfield      #129                // Field bytesInQueue:I
      47: iload_3
      48: iload         4
      50: isub
      51: invokestatic  #137                // Method java/lang/Math.min:(II)I
      54: istore        5
      56: aload_0
      57: getfield      #133                // Field theQueue:[B
      60: aload_0
      61: getfield      #130                // Field theRateBytes:I
      64: aload_0
      65: getfield      #129                // Field bytesInQueue:I
      68: isub
      69: aload_1
      70: iload_2
      71: iload         4
      73: iadd
      74: iload         5
      76: invokestatic  #139                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      79: aload_0
      80: dup
      81: getfield      #129                // Field bytesInQueue:I
      84: iload         5
      86: isub
      87: putfield      #129                // Field bytesInQueue:I
      90: iload         4
      92: iload         5
      94: iadd
      95: istore        4
      97: goto          14
     100: return

  private void KangarooAbsorb(byte[], int);
    Code:
       0: aload_0
       1: getfield      #130                // Field theRateBytes:I
       4: iconst_3
       5: ishr
       6: istore_3
       7: iload_2
       8: istore        4
      10: iconst_0
      11: istore        5
      13: iload         5
      15: iload_3
      16: if_icmpge     44
      19: aload_0
      20: getfield      #135                // Field theState:[J
      23: iload         5
      25: dup2
      26: laload
      27: aload_1
      28: iload         4
      30: invokestatic  #149                // Method org/bouncycastle/util/Pack.littleEndianToLong:([BI)J
      33: lxor
      34: lastore
      35: iinc          4, 8
      38: iinc          5, 1
      41: goto          13
      44: aload_0
      45: invokespecial #141                // Method KangarooPermutation:()V
      48: return

  private void KangarooExtract();
    Code:
       0: aload_0
       1: getfield      #135                // Field theState:[J
       4: iconst_0
       5: aload_0
       6: getfield      #130                // Field theRateBytes:I
       9: iconst_3
      10: ishr
      11: aload_0
      12: getfield      #133                // Field theQueue:[B
      15: iconst_0
      16: invokestatic  #150                // Method org/bouncycastle/util/Pack.longToLittleEndian:([JII[BI)V
      19: return

  private void KangarooPermutation();
    Code:
       0: aload_0
       1: getfield      #135                // Field theState:[J
       4: astore_1
       5: aload_1
       6: iconst_0
       7: laload
       8: lstore_2
       9: aload_1
      10: iconst_1
      11: laload
      12: lstore        4
      14: aload_1
      15: iconst_2
      16: laload
      17: lstore        6
      19: aload_1
      20: iconst_3
      21: laload
      22: lstore        8
      24: aload_1
      25: iconst_4
      26: laload
      27: lstore        10
      29: aload_1
      30: iconst_5
      31: laload
      32: lstore        12
      34: aload_1
      35: bipush        6
      37: laload
      38: lstore        14
      40: aload_1
      41: bipush        7
      43: laload
      44: lstore        16
      46: aload_1
      47: bipush        8
      49: laload
      50: lstore        18
      52: aload_1
      53: bipush        9
      55: laload
      56: lstore        20
      58: aload_1
      59: bipush        10
      61: laload
      62: lstore        22
      64: aload_1
      65: bipush        11
      67: laload
      68: lstore        24
      70: aload_1
      71: bipush        12
      73: laload
      74: lstore        26
      76: aload_1
      77: bipush        13
      79: laload
      80: lstore        28
      82: aload_1
      83: bipush        14
      85: laload
      86: lstore        30
      88: aload_1
      89: bipush        15
      91: laload
      92: lstore        32
      94: aload_1
      95: bipush        16
      97: laload
      98: lstore        34
     100: aload_1
     101: bipush        17
     103: laload
     104: lstore        36
     106: aload_1
     107: bipush        18
     109: laload
     110: lstore        38
     112: aload_1
     113: bipush        19
     115: laload
     116: lstore        40
     118: aload_1
     119: bipush        20
     121: laload
     122: lstore        42
     124: aload_1
     125: bipush        21
     127: laload
     128: lstore        44
     130: aload_1
     131: bipush        22
     133: laload
     134: lstore        46
     136: aload_1
     137: bipush        23
     139: laload
     140: lstore        48
     142: aload_1
     143: bipush        24
     145: laload
     146: lstore        50
     148: getstatic     #134                // Field KeccakRoundConstants:[J
     151: arraylength
     152: aload_0
     153: getfield      #131                // Field theRounds:I
     156: isub
     157: istore        52
     159: iconst_0
     160: istore        53
     162: iload         53
     164: aload_0
     165: getfield      #131                // Field theRounds:I
     168: if_icmpge     1208
     171: lload_2
     172: lload         12
     174: lxor
     175: lload         22
     177: lxor
     178: lload         32
     180: lxor
     181: lload         42
     183: lxor
     184: lstore        54
     186: lload         4
     188: lload         14
     190: lxor
     191: lload         24
     193: lxor
     194: lload         34
     196: lxor
     197: lload         44
     199: lxor
     200: lstore        56
     202: lload         6
     204: lload         16
     206: lxor
     207: lload         26
     209: lxor
     210: lload         36
     212: lxor
     213: lload         46
     215: lxor
     216: lstore        58
     218: lload         8
     220: lload         18
     222: lxor
     223: lload         28
     225: lxor
     226: lload         38
     228: lxor
     229: lload         48
     231: lxor
     232: lstore        60
     234: lload         10
     236: lload         20
     238: lxor
     239: lload         30
     241: lxor
     242: lload         40
     244: lxor
     245: lload         50
     247: lxor
     248: lstore        62
     250: lload         56
     252: iconst_1
     253: lshl
     254: lload         56
     256: iconst_m1
     257: lushr
     258: lor
     259: lload         62
     261: lxor
     262: lstore        64
     264: lload         58
     266: iconst_1
     267: lshl
     268: lload         58
     270: iconst_m1
     271: lushr
     272: lor
     273: lload         54
     275: lxor
     276: lstore        66
     278: lload         60
     280: iconst_1
     281: lshl
     282: lload         60
     284: iconst_m1
     285: lushr
     286: lor
     287: lload         56
     289: lxor
     290: lstore        68
     292: lload         62
     294: iconst_1
     295: lshl
     296: lload         62
     298: iconst_m1
     299: lushr
     300: lor
     301: lload         58
     303: lxor
     304: lstore        70
     306: lload         54
     308: iconst_1
     309: lshl
     310: lload         54
     312: iconst_m1
     313: lushr
     314: lor
     315: lload         60
     317: lxor
     318: lstore        72
     320: lload_2
     321: lload         64
     323: lxor
     324: lstore_2
     325: lload         12
     327: lload         64
     329: lxor
     330: lstore        12
     332: lload         22
     334: lload         64
     336: lxor
     337: lstore        22
     339: lload         32
     341: lload         64
     343: lxor
     344: lstore        32
     346: lload         42
     348: lload         64
     350: lxor
     351: lstore        42
     353: lload         4
     355: lload         66
     357: lxor
     358: lstore        4
     360: lload         14
     362: lload         66
     364: lxor
     365: lstore        14
     367: lload         24
     369: lload         66
     371: lxor
     372: lstore        24
     374: lload         34
     376: lload         66
     378: lxor
     379: lstore        34
     381: lload         44
     383: lload         66
     385: lxor
     386: lstore        44
     388: lload         6
     390: lload         68
     392: lxor
     393: lstore        6
     395: lload         16
     397: lload         68
     399: lxor
     400: lstore        16
     402: lload         26
     404: lload         68
     406: lxor
     407: lstore        26
     409: lload         36
     411: lload         68
     413: lxor
     414: lstore        36
     416: lload         46
     418: lload         68
     420: lxor
     421: lstore        46
     423: lload         8
     425: lload         70
     427: lxor
     428: lstore        8
     430: lload         18
     432: lload         70
     434: lxor
     435: lstore        18
     437: lload         28
     439: lload         70
     441: lxor
     442: lstore        28
     444: lload         38
     446: lload         70
     448: lxor
     449: lstore        38
     451: lload         48
     453: lload         70
     455: lxor
     456: lstore        48
     458: lload         10
     460: lload         72
     462: lxor
     463: lstore        10
     465: lload         20
     467: lload         72
     469: lxor
     470: lstore        20
     472: lload         30
     474: lload         72
     476: lxor
     477: lstore        30
     479: lload         40
     481: lload         72
     483: lxor
     484: lstore        40
     486: lload         50
     488: lload         72
     490: lxor
     491: lstore        50
     493: lload         4
     495: iconst_1
     496: lshl
     497: lload         4
     499: bipush        63
     501: lushr
     502: lor
     503: lstore        56
     505: lload         14
     507: bipush        44
     509: lshl
     510: lload         14
     512: bipush        20
     514: lushr
     515: lor
     516: lstore        4
     518: lload         20
     520: bipush        20
     522: lshl
     523: lload         20
     525: bipush        44
     527: lushr
     528: lor
     529: lstore        14
     531: lload         46
     533: bipush        61
     535: lshl
     536: lload         46
     538: iconst_3
     539: lushr
     540: lor
     541: lstore        20
     543: lload         30
     545: bipush        39
     547: lshl
     548: lload         30
     550: bipush        25
     552: lushr
     553: lor
     554: lstore        46
     556: lload         42
     558: bipush        18
     560: lshl
     561: lload         42
     563: bipush        46
     565: lushr
     566: lor
     567: lstore        30
     569: lload         6
     571: bipush        62
     573: lshl
     574: lload         6
     576: iconst_2
     577: lushr
     578: lor
     579: lstore        42
     581: lload         26
     583: bipush        43
     585: lshl
     586: lload         26
     588: bipush        21
     590: lushr
     591: lor
     592: lstore        6
     594: lload         28
     596: bipush        25
     598: lshl
     599: lload         28
     601: bipush        39
     603: lushr
     604: lor
     605: lstore        26
     607: lload         40
     609: bipush        8
     611: lshl
     612: lload         40
     614: bipush        56
     616: lushr
     617: lor
     618: lstore        28
     620: lload         48
     622: bipush        56
     624: lshl
     625: lload         48
     627: bipush        8
     629: lushr
     630: lor
     631: lstore        40
     633: lload         32
     635: bipush        41
     637: lshl
     638: lload         32
     640: bipush        23
     642: lushr
     643: lor
     644: lstore        48
     646: lload         10
     648: bipush        27
     650: lshl
     651: lload         10
     653: bipush        37
     655: lushr
     656: lor
     657: lstore        32
     659: lload         50
     661: bipush        14
     663: lshl
     664: lload         50
     666: bipush        50
     668: lushr
     669: lor
     670: lstore        10
     672: lload         44
     674: iconst_2
     675: lshl
     676: lload         44
     678: bipush        62
     680: lushr
     681: lor
     682: lstore        50
     684: lload         18
     686: bipush        55
     688: lshl
     689: lload         18
     691: bipush        9
     693: lushr
     694: lor
     695: lstore        44
     697: lload         34
     699: bipush        45
     701: lshl
     702: lload         34
     704: bipush        19
     706: lushr
     707: lor
     708: lstore        18
     710: lload         12
     712: bipush        36
     714: lshl
     715: lload         12
     717: bipush        28
     719: lushr
     720: lor
     721: lstore        34
     723: lload         8
     725: bipush        28
     727: lshl
     728: lload         8
     730: bipush        36
     732: lushr
     733: lor
     734: lstore        12
     736: lload         38
     738: bipush        21
     740: lshl
     741: lload         38
     743: bipush        43
     745: lushr
     746: lor
     747: lstore        8
     749: lload         36
     751: bipush        15
     753: lshl
     754: lload         36
     756: bipush        49
     758: lushr
     759: lor
     760: lstore        38
     762: lload         24
     764: bipush        10
     766: lshl
     767: lload         24
     769: bipush        54
     771: lushr
     772: lor
     773: lstore        36
     775: lload         16
     777: bipush        6
     779: lshl
     780: lload         16
     782: bipush        58
     784: lushr
     785: lor
     786: lstore        24
     788: lload         22
     790: iconst_3
     791: lshl
     792: lload         22
     794: bipush        61
     796: lushr
     797: lor
     798: lstore        16
     800: lload         56
     802: lstore        22
     804: lload_2
     805: lload         4
     807: ldc2_w        #74                 // long -1l
     810: lxor
     811: lload         6
     813: land
     814: lxor
     815: lstore        54
     817: lload         4
     819: lload         6
     821: ldc2_w        #74                 // long -1l
     824: lxor
     825: lload         8
     827: land
     828: lxor
     829: lstore        56
     831: lload         6
     833: lload         8
     835: ldc2_w        #74                 // long -1l
     838: lxor
     839: lload         10
     841: land
     842: lxor
     843: lstore        6
     845: lload         8
     847: lload         10
     849: ldc2_w        #74                 // long -1l
     852: lxor
     853: lload_2
     854: land
     855: lxor
     856: lstore        8
     858: lload         10
     860: lload_2
     861: ldc2_w        #74                 // long -1l
     864: lxor
     865: lload         4
     867: land
     868: lxor
     869: lstore        10
     871: lload         54
     873: lstore_2
     874: lload         56
     876: lstore        4
     878: lload         12
     880: lload         14
     882: ldc2_w        #74                 // long -1l
     885: lxor
     886: lload         16
     888: land
     889: lxor
     890: lstore        54
     892: lload         14
     894: lload         16
     896: ldc2_w        #74                 // long -1l
     899: lxor
     900: lload         18
     902: land
     903: lxor
     904: lstore        56
     906: lload         16
     908: lload         18
     910: ldc2_w        #74                 // long -1l
     913: lxor
     914: lload         20
     916: land
     917: lxor
     918: lstore        16
     920: lload         18
     922: lload         20
     924: ldc2_w        #74                 // long -1l
     927: lxor
     928: lload         12
     930: land
     931: lxor
     932: lstore        18
     934: lload         20
     936: lload         12
     938: ldc2_w        #74                 // long -1l
     941: lxor
     942: lload         14
     944: land
     945: lxor
     946: lstore        20
     948: lload         54
     950: lstore        12
     952: lload         56
     954: lstore        14
     956: lload         22
     958: lload         24
     960: ldc2_w        #74                 // long -1l
     963: lxor
     964: lload         26
     966: land
     967: lxor
     968: lstore        54
     970: lload         24
     972: lload         26
     974: ldc2_w        #74                 // long -1l
     977: lxor
     978: lload         28
     980: land
     981: lxor
     982: lstore        56
     984: lload         26
     986: lload         28
     988: ldc2_w        #74                 // long -1l
     991: lxor
     992: lload         30
     994: land
     995: lxor
     996: lstore        26
     998: lload         28
    1000: lload         30
    1002: ldc2_w        #74                 // long -1l
    1005: lxor
    1006: lload         22
    1008: land
    1009: lxor
    1010: lstore        28
    1012: lload         30
    1014: lload         22
    1016: ldc2_w        #74                 // long -1l
    1019: lxor
    1020: lload         24
    1022: land
    1023: lxor
    1024: lstore        30
    1026: lload         54
    1028: lstore        22
    1030: lload         56
    1032: lstore        24
    1034: lload         32
    1036: lload         34
    1038: ldc2_w        #74                 // long -1l
    1041: lxor
    1042: lload         36
    1044: land
    1045: lxor
    1046: lstore        54
    1048: lload         34
    1050: lload         36
    1052: ldc2_w        #74                 // long -1l
    1055: lxor
    1056: lload         38
    1058: land
    1059: lxor
    1060: lstore        56
    1062: lload         36
    1064: lload         38
    1066: ldc2_w        #74                 // long -1l
    1069: lxor
    1070: lload         40
    1072: land
    1073: lxor
    1074: lstore        36
    1076: lload         38
    1078: lload         40
    1080: ldc2_w        #74                 // long -1l
    1083: lxor
    1084: lload         32
    1086: land
    1087: lxor
    1088: lstore        38
    1090: lload         40
    1092: lload         32
    1094: ldc2_w        #74                 // long -1l
    1097: lxor
    1098: lload         34
    1100: land
    1101: lxor
    1102: lstore        40
    1104: lload         54
    1106: lstore        32
    1108: lload         56
    1110: lstore        34
    1112: lload         42
    1114: lload         44
    1116: ldc2_w        #74                 // long -1l
    1119: lxor
    1120: lload         46
    1122: land
    1123: lxor
    1124: lstore        54
    1126: lload         44
    1128: lload         46
    1130: ldc2_w        #74                 // long -1l
    1133: lxor
    1134: lload         48
    1136: land
    1137: lxor
    1138: lstore        56
    1140: lload         46
    1142: lload         48
    1144: ldc2_w        #74                 // long -1l
    1147: lxor
    1148: lload         50
    1150: land
    1151: lxor
    1152: lstore        46
    1154: lload         48
    1156: lload         50
    1158: ldc2_w        #74                 // long -1l
    1161: lxor
    1162: lload         42
    1164: land
    1165: lxor
    1166: lstore        48
    1168: lload         50
    1170: lload         42
    1172: ldc2_w        #74                 // long -1l
    1175: lxor
    1176: lload         44
    1178: land
    1179: lxor
    1180: lstore        50
    1182: lload         54
    1184: lstore        42
    1186: lload         56
    1188: lstore        44
    1190: lload_2
    1191: getstatic     #134                // Field KeccakRoundConstants:[J
    1194: iload         52
    1196: iload         53
    1198: iadd
    1199: laload
    1200: lxor
    1201: lstore_2
    1202: iinc          53, 1
    1205: goto          162
    1208: aload_1
    1209: iconst_0
    1210: lload_2
    1211: lastore
    1212: aload_1
    1213: iconst_1
    1214: lload         4
    1216: lastore
    1217: aload_1
    1218: iconst_2
    1219: lload         6
    1221: lastore
    1222: aload_1
    1223: iconst_3
    1224: lload         8
    1226: lastore
    1227: aload_1
    1228: iconst_4
    1229: lload         10
    1231: lastore
    1232: aload_1
    1233: iconst_5
    1234: lload         12
    1236: lastore
    1237: aload_1
    1238: bipush        6
    1240: lload         14
    1242: lastore
    1243: aload_1
    1244: bipush        7
    1246: lload         16
    1248: lastore
    1249: aload_1
    1250: bipush        8
    1252: lload         18
    1254: lastore
    1255: aload_1
    1256: bipush        9
    1258: lload         20
    1260: lastore
    1261: aload_1
    1262: bipush        10
    1264: lload         22
    1266: lastore
    1267: aload_1
    1268: bipush        11
    1270: lload         24
    1272: lastore
    1273: aload_1
    1274: bipush        12
    1276: lload         26
    1278: lastore
    1279: aload_1
    1280: bipush        13
    1282: lload         28
    1284: lastore
    1285: aload_1
    1286: bipush        14
    1288: lload         30
    1290: lastore
    1291: aload_1
    1292: bipush        15
    1294: lload         32
    1296: lastore
    1297: aload_1
    1298: bipush        16
    1300: lload         34
    1302: lastore
    1303: aload_1
    1304: bipush        17
    1306: lload         36
    1308: lastore
    1309: aload_1
    1310: bipush        18
    1312: lload         38
    1314: lastore
    1315: aload_1
    1316: bipush        19
    1318: lload         40
    1320: lastore
    1321: aload_1
    1322: bipush        20
    1324: lload         42
    1326: lastore
    1327: aload_1
    1328: bipush        21
    1330: lload         44
    1332: lastore
    1333: aload_1
    1334: bipush        22
    1336: lload         46
    1338: lastore
    1339: aload_1
    1340: bipush        23
    1342: lload         48
    1344: lastore
    1345: aload_1
    1346: bipush        24
    1348: lload         50
    1350: lastore
    1351: return

  static int access$200(org.bouncycastle.crypto.digests.Kangaroo$KangarooSponge);
    Code:
       0: aload_0
       1: getfield      #130                // Field theRateBytes:I
       4: ireturn

  static void access$300(org.bouncycastle.crypto.digests.Kangaroo$KangarooSponge, byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #146                // Method squeeze:([BII)V
       7: return

  static void access$400(org.bouncycastle.crypto.digests.Kangaroo$KangarooSponge, byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #145                // Method absorb:([BII)V
       7: return

  static void access$500(org.bouncycastle.crypto.digests.Kangaroo$KangarooSponge);
    Code:
       0: aload_0
       1: invokespecial #142                // Method initSponge:()V
       4: return

  static void access$600(org.bouncycastle.crypto.digests.Kangaroo$KangarooSponge);
    Code:
       0: aload_0
       1: invokespecial #143                // Method padAndSwitchToSqueezingPhase:()V
       4: return

  static {};
    Code:
       0: bipush        24
       2: newarray       long
       4: dup
       5: iconst_0
       6: lconst_1
       7: lastore
       8: dup
       9: iconst_1
      10: ldc2_w        #82                 // long 32898l
      13: lastore
      14: dup
      15: iconst_2
      16: ldc2_w        #64                 // long -9223372036854742902l
      19: lastore
      20: dup
      21: iconst_3
      22: ldc2_w        #68                 // long -9223372034707259392l
      25: lastore
      26: dup
      27: iconst_4
      28: ldc2_w        #84                 // long 32907l
      31: lastore
      32: dup
      33: iconst_5
      34: ldc2_w        #86                 // long 2147483649l
      37: lastore
      38: dup
      39: bipush        6
      41: ldc2_w        #72                 // long -9223372034707259263l
      44: lastore
      45: dup
      46: bipush        7
      48: ldc2_w        #58                 // long -9223372036854743031l
      51: lastore
      52: dup
      53: bipush        8
      55: ldc2_w        #78                 // long 138l
      58: lastore
      59: dup
      60: bipush        9
      62: ldc2_w        #76                 // long 136l
      65: lastore
      66: dup
      67: bipush        10
      69: ldc2_w        #90                 // long 2147516425l
      72: lastore
      73: dup
      74: bipush        11
      76: ldc2_w        #88                 // long 2147483658l
      79: lastore
      80: dup
      81: bipush        12
      83: ldc2_w        #92                 // long 2147516555l
      86: lastore
      87: dup
      88: bipush        13
      90: ldc2_w        #52                 // long -9223372036854775669l
      93: lastore
      94: dup
      95: bipush        14
      97: ldc2_w        #62                 // long -9223372036854742903l
     100: lastore
     101: dup
     102: bipush        15
     104: ldc2_w        #56                 // long -9223372036854743037l
     107: lastore
     108: dup
     109: bipush        16
     111: ldc2_w        #54                 // long -9223372036854743038l
     114: lastore
     115: dup
     116: bipush        17
     118: ldc2_w        #50                 // long -9223372036854775680l
     121: lastore
     122: dup
     123: bipush        18
     125: ldc2_w        #80                 // long 32778l
     128: lastore
     129: dup
     130: bipush        19
     132: ldc2_w        #66                 // long -9223372034707292150l
     135: lastore
     136: dup
     137: bipush        20
     139: ldc2_w        #72                 // long -9223372034707259263l
     142: lastore
     143: dup
     144: bipush        21
     146: ldc2_w        #60                 // long -9223372036854742912l
     149: lastore
     150: dup
     151: bipush        22
     153: ldc2_w        #86                 // long 2147483649l
     156: lastore
     157: dup
     158: bipush        23
     160: ldc2_w        #70                 // long -9223372034707259384l
     163: lastore
     164: putstatic     #134                // Field KeccakRoundConstants:[J
     167: return
}
