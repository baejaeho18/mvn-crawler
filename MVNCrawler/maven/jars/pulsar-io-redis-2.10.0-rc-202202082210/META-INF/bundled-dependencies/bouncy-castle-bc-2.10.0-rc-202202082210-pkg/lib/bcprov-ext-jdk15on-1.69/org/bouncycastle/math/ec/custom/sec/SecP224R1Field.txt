public class org.bouncycastle.math.ec.custom.sec.SecP224R1Field {
  private static final long M;

  static final int[] P;

  private static final int[] PExt;

  private static final int[] PExtInv;

  private static final int P6;

  private static final int PExt13;

  public org.bouncycastle.math.ec.custom.sec.SecP224R1Field();
    Code:
       0: aload_0
       1: invokespecial #122                // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #146                // Method org/bouncycastle/math/raw/Nat224.add:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          29
      11: aload_2
      12: bipush        6
      14: iaload
      15: iconst_m1
      16: if_icmpne     33
      19: aload_2
      20: getstatic     #119                // Field P:[I
      23: invokestatic  #145                // Method org/bouncycastle/math/raw/Nat224.gte:([I[I)Z
      26: ifeq          33
      29: aload_2
      30: invokestatic  #125                // Method addPInvTo:([I)V
      33: return

  public static void addExt(int[], int[], int[]);
    Code:
       0: bipush        14
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #140                // Method org/bouncycastle/math/raw/Nat.add:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifne          33
      13: aload_2
      14: bipush        13
      16: iaload
      17: iconst_m1
      18: if_icmpne     58
      21: bipush        14
      23: aload_2
      24: getstatic     #120                // Field PExt:[I
      27: invokestatic  #139                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      30: ifeq          58
      33: getstatic     #121                // Field PExtInv:[I
      36: arraylength
      37: getstatic     #121                // Field PExtInv:[I
      40: aload_2
      41: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      44: ifeq          58
      47: bipush        14
      49: aload_2
      50: getstatic     #121                // Field PExtInv:[I
      53: arraylength
      54: invokestatic  #131                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      57: pop
      58: return

  public static void addOne(int[], int[]);
    Code:
       0: bipush        7
       2: aload_0
       3: aload_1
       4: invokestatic  #136                // Method org/bouncycastle/math/raw/Nat.inc:(I[I[I)I
       7: istore_2
       8: iload_2
       9: ifne          30
      12: aload_1
      13: bipush        6
      15: iaload
      16: iconst_m1
      17: if_icmpne     34
      20: aload_1
      21: getstatic     #119                // Field P:[I
      24: invokestatic  #145                // Method org/bouncycastle/math/raw/Nat224.gte:([I[I)Z
      27: ifeq          34
      30: aload_1
      31: invokestatic  #125                // Method addPInvTo:([I)V
      34: return

  public static int[] fromBigInteger(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #150                // Method org/bouncycastle/math/raw/Nat224.fromBigInteger:(Ljava/math/BigInteger;)[I
       4: astore_1
       5: aload_1
       6: bipush        6
       8: iaload
       9: iconst_m1
      10: if_icmpne     31
      13: aload_1
      14: getstatic     #119                // Field P:[I
      17: invokestatic  #145                // Method org/bouncycastle/math/raw/Nat224.gte:([I[I)Z
      20: ifeq          31
      23: getstatic     #119                // Field P:[I
      26: aload_1
      27: invokestatic  #143                // Method org/bouncycastle/math/raw/Nat224.subFrom:([I[I)I
      30: pop
      31: aload_1
      32: areturn

  public static void half(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: iconst_1
       4: iand
       5: ifne          20
       8: bipush        7
      10: aload_0
      11: iconst_0
      12: aload_1
      13: invokestatic  #133                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II[I)I
      16: pop
      17: goto          37
      20: aload_0
      21: getstatic     #119                // Field P:[I
      24: aload_1
      25: invokestatic  #146                // Method org/bouncycastle/math/raw/Nat224.add:([I[I[I)I
      28: istore_2
      29: bipush        7
      31: aload_1
      32: iload_2
      33: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II)I
      36: pop
      37: return

  public static void inv(int[], int[]);
    Code:
       0: getstatic     #119                // Field P:[I
       3: aload_0
       4: aload_1
       5: invokestatic  #129                // Method org/bouncycastle/math/raw/Mod.checkedModOddInverse:([I[I[I)V
       8: return

  public static int isZero(int[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: bipush        7
       7: if_icmpge     22
      10: iload_1
      11: aload_0
      12: iload_2
      13: iaload
      14: ior
      15: istore_1
      16: iinc          2, 1
      19: goto          4
      22: iload_1
      23: iconst_1
      24: iushr
      25: iload_1
      26: iconst_1
      27: iand
      28: ior
      29: istore_1
      30: iload_1
      31: iconst_1
      32: isub
      33: bipush        31
      35: ishr
      36: ireturn

  public static void multiply(int[], int[], int[]);
    Code:
       0: invokestatic  #142                // Method org/bouncycastle/math/raw/Nat224.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #149                // Method org/bouncycastle/math/raw/Nat224.mul:([I[I[I)V
      10: aload_3
      11: aload_2
      12: invokestatic  #127                // Method reduce:([I[I)V
      15: return

  public static void multiplyAddToExt(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #147                // Method org/bouncycastle/math/raw/Nat224.mulAddTo:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          31
      11: aload_2
      12: bipush        13
      14: iaload
      15: iconst_m1
      16: if_icmpne     56
      19: bipush        14
      21: aload_2
      22: getstatic     #120                // Field PExt:[I
      25: invokestatic  #139                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      28: ifeq          56
      31: getstatic     #121                // Field PExtInv:[I
      34: arraylength
      35: getstatic     #121                // Field PExtInv:[I
      38: aload_2
      39: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      42: ifeq          56
      45: bipush        14
      47: aload_2
      48: getstatic     #121                // Field PExtInv:[I
      51: arraylength
      52: invokestatic  #131                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      55: pop
      56: return

  public static void negate(int[], int[]);
    Code:
       0: iconst_0
       1: aload_0
       2: invokestatic  #124                // Method isZero:([I)I
       5: if_icmpeq     22
       8: getstatic     #119                // Field P:[I
      11: getstatic     #119                // Field P:[I
      14: aload_1
      15: invokestatic  #148                // Method org/bouncycastle/math/raw/Nat224.sub:([I[I[I)I
      18: pop
      19: goto          31
      22: getstatic     #119                // Field P:[I
      25: aload_0
      26: aload_1
      27: invokestatic  #148                // Method org/bouncycastle/math/raw/Nat224.sub:([I[I[I)I
      30: pop
      31: return

  public static void random(java.security.SecureRandom, int[]);
    Code:
       0: bipush        28
       2: newarray       byte
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #123                // Method java/security/SecureRandom.nextBytes:([B)V
      10: aload_2
      11: iconst_0
      12: aload_1
      13: iconst_0
      14: bipush        7
      16: invokestatic  #151                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI[III)V
      19: iconst_0
      20: bipush        7
      22: aload_1
      23: getstatic     #119                // Field P:[I
      26: invokestatic  #137                // Method org/bouncycastle/math/raw/Nat.lessThan:(I[I[I)I
      29: if_icmpeq     5
      32: return

  public static void randomMult(java.security.SecureRandom, int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // Method random:(Ljava/security/SecureRandom;[I)V
       5: iconst_0
       6: aload_1
       7: invokestatic  #124                // Method isZero:([I)I
      10: if_icmpne     0
      13: return

  public static void reduce(int[], int[]);
    Code:
       0: aload_0
       1: bipush        10
       3: iaload
       4: i2l
       5: ldc2_w        #75                 // long 4294967295l
       8: land
       9: lstore_2
      10: aload_0
      11: bipush        11
      13: iaload
      14: i2l
      15: ldc2_w        #75                 // long 4294967295l
      18: land
      19: lstore        4
      21: aload_0
      22: bipush        12
      24: iaload
      25: i2l
      26: ldc2_w        #75                 // long 4294967295l
      29: land
      30: lstore        6
      32: aload_0
      33: bipush        13
      35: iaload
      36: i2l
      37: ldc2_w        #75                 // long 4294967295l
      40: land
      41: lstore        8
      43: aload_0
      44: bipush        7
      46: iaload
      47: i2l
      48: ldc2_w        #75                 // long 4294967295l
      51: land
      52: lload         4
      54: ladd
      55: lconst_1
      56: lsub
      57: lstore        12
      59: aload_0
      60: bipush        8
      62: iaload
      63: i2l
      64: ldc2_w        #75                 // long 4294967295l
      67: land
      68: lload         6
      70: ladd
      71: lstore        14
      73: aload_0
      74: bipush        9
      76: iaload
      77: i2l
      78: ldc2_w        #75                 // long 4294967295l
      81: land
      82: lload         8
      84: ladd
      85: lstore        16
      87: lconst_0
      88: lstore        18
      90: lload         18
      92: aload_0
      93: iconst_0
      94: iaload
      95: i2l
      96: ldc2_w        #75                 // long 4294967295l
      99: land
     100: lload         12
     102: lsub
     103: ladd
     104: lstore        18
     106: lload         18
     108: ldc2_w        #75                 // long 4294967295l
     111: land
     112: lstore        20
     114: lload         18
     116: bipush        32
     118: lshr
     119: lstore        18
     121: lload         18
     123: aload_0
     124: iconst_1
     125: iaload
     126: i2l
     127: ldc2_w        #75                 // long 4294967295l
     130: land
     131: lload         14
     133: lsub
     134: ladd
     135: lstore        18
     137: aload_1
     138: iconst_1
     139: lload         18
     141: l2i
     142: iastore
     143: lload         18
     145: bipush        32
     147: lshr
     148: lstore        18
     150: lload         18
     152: aload_0
     153: iconst_2
     154: iaload
     155: i2l
     156: ldc2_w        #75                 // long 4294967295l
     159: land
     160: lload         16
     162: lsub
     163: ladd
     164: lstore        18
     166: aload_1
     167: iconst_2
     168: lload         18
     170: l2i
     171: iastore
     172: lload         18
     174: bipush        32
     176: lshr
     177: lstore        18
     179: lload         18
     181: aload_0
     182: iconst_3
     183: iaload
     184: i2l
     185: ldc2_w        #75                 // long 4294967295l
     188: land
     189: lload         12
     191: ladd
     192: lload_2
     193: lsub
     194: ladd
     195: lstore        18
     197: lload         18
     199: ldc2_w        #75                 // long 4294967295l
     202: land
     203: lstore        22
     205: lload         18
     207: bipush        32
     209: lshr
     210: lstore        18
     212: lload         18
     214: aload_0
     215: iconst_4
     216: iaload
     217: i2l
     218: ldc2_w        #75                 // long 4294967295l
     221: land
     222: lload         14
     224: ladd
     225: lload         4
     227: lsub
     228: ladd
     229: lstore        18
     231: aload_1
     232: iconst_4
     233: lload         18
     235: l2i
     236: iastore
     237: lload         18
     239: bipush        32
     241: lshr
     242: lstore        18
     244: lload         18
     246: aload_0
     247: iconst_5
     248: iaload
     249: i2l
     250: ldc2_w        #75                 // long 4294967295l
     253: land
     254: lload         16
     256: ladd
     257: lload         6
     259: lsub
     260: ladd
     261: lstore        18
     263: aload_1
     264: iconst_5
     265: lload         18
     267: l2i
     268: iastore
     269: lload         18
     271: bipush        32
     273: lshr
     274: lstore        18
     276: lload         18
     278: aload_0
     279: bipush        6
     281: iaload
     282: i2l
     283: ldc2_w        #75                 // long 4294967295l
     286: land
     287: lload_2
     288: ladd
     289: lload         8
     291: lsub
     292: ladd
     293: lstore        18
     295: aload_1
     296: bipush        6
     298: lload         18
     300: l2i
     301: iastore
     302: lload         18
     304: bipush        32
     306: lshr
     307: lstore        18
     309: lload         18
     311: lconst_1
     312: ladd
     313: lstore        18
     315: lload         22
     317: lload         18
     319: ladd
     320: lstore        22
     322: lload         20
     324: lload         18
     326: lsub
     327: lstore        20
     329: aload_1
     330: iconst_0
     331: lload         20
     333: l2i
     334: iastore
     335: lload         20
     337: bipush        32
     339: lshr
     340: lstore        18
     342: lload         18
     344: lconst_0
     345: lcmp
     346: ifeq          404
     349: lload         18
     351: aload_1
     352: iconst_1
     353: iaload
     354: i2l
     355: ldc2_w        #75                 // long 4294967295l
     358: land
     359: ladd
     360: lstore        18
     362: aload_1
     363: iconst_1
     364: lload         18
     366: l2i
     367: iastore
     368: lload         18
     370: bipush        32
     372: lshr
     373: lstore        18
     375: lload         18
     377: aload_1
     378: iconst_2
     379: iaload
     380: i2l
     381: ldc2_w        #75                 // long 4294967295l
     384: land
     385: ladd
     386: lstore        18
     388: aload_1
     389: iconst_2
     390: lload         18
     392: l2i
     393: iastore
     394: lload         22
     396: lload         18
     398: bipush        32
     400: lshr
     401: ladd
     402: lstore        22
     404: aload_1
     405: iconst_3
     406: lload         22
     408: l2i
     409: iastore
     410: lload         22
     412: bipush        32
     414: lshr
     415: lstore        18
     417: lload         18
     419: lconst_0
     420: lcmp
     421: ifeq          434
     424: bipush        7
     426: aload_1
     427: iconst_4
     428: invokestatic  #131                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
     431: ifne          452
     434: aload_1
     435: bipush        6
     437: iaload
     438: iconst_m1
     439: if_icmpne     456
     442: aload_1
     443: getstatic     #119                // Field P:[I
     446: invokestatic  #145                // Method org/bouncycastle/math/raw/Nat224.gte:([I[I)Z
     449: ifeq          456
     452: aload_1
     453: invokestatic  #125                // Method addPInvTo:([I)V
     456: return

  public static void reduce32(int, int[]);
    Code:
       0: lconst_0
       1: lstore_2
       2: iload_0
       3: ifeq          110
       6: iload_0
       7: i2l
       8: ldc2_w        #75                 // long 4294967295l
      11: land
      12: lstore        4
      14: lload_2
      15: aload_1
      16: iconst_0
      17: iaload
      18: i2l
      19: ldc2_w        #75                 // long 4294967295l
      22: land
      23: lload         4
      25: lsub
      26: ladd
      27: lstore_2
      28: aload_1
      29: iconst_0
      30: lload_2
      31: l2i
      32: iastore
      33: lload_2
      34: bipush        32
      36: lshr
      37: lstore_2
      38: lload_2
      39: lconst_0
      40: lcmp
      41: ifeq          86
      44: lload_2
      45: aload_1
      46: iconst_1
      47: iaload
      48: i2l
      49: ldc2_w        #75                 // long 4294967295l
      52: land
      53: ladd
      54: lstore_2
      55: aload_1
      56: iconst_1
      57: lload_2
      58: l2i
      59: iastore
      60: lload_2
      61: bipush        32
      63: lshr
      64: lstore_2
      65: lload_2
      66: aload_1
      67: iconst_2
      68: iaload
      69: i2l
      70: ldc2_w        #75                 // long 4294967295l
      73: land
      74: ladd
      75: lstore_2
      76: aload_1
      77: iconst_2
      78: lload_2
      79: l2i
      80: iastore
      81: lload_2
      82: bipush        32
      84: lshr
      85: lstore_2
      86: lload_2
      87: aload_1
      88: iconst_3
      89: iaload
      90: i2l
      91: ldc2_w        #75                 // long 4294967295l
      94: land
      95: lload         4
      97: ladd
      98: ladd
      99: lstore_2
     100: aload_1
     101: iconst_3
     102: lload_2
     103: l2i
     104: iastore
     105: lload_2
     106: bipush        32
     108: lshr
     109: lstore_2
     110: lload_2
     111: lconst_0
     112: lcmp
     113: ifeq          126
     116: bipush        7
     118: aload_1
     119: iconst_4
     120: invokestatic  #131                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
     123: ifne          144
     126: aload_1
     127: bipush        6
     129: iaload
     130: iconst_m1
     131: if_icmpne     148
     134: aload_1
     135: getstatic     #119                // Field P:[I
     138: invokestatic  #145                // Method org/bouncycastle/math/raw/Nat224.gte:([I[I)Z
     141: ifeq          148
     144: aload_1
     145: invokestatic  #125                // Method addPInvTo:([I)V
     148: return

  public static void square(int[], int[]);
    Code:
       0: invokestatic  #142                // Method org/bouncycastle/math/raw/Nat224.createExt:()[I
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #144                // Method org/bouncycastle/math/raw/Nat224.square:([I[I)V
       9: aload_2
      10: aload_1
      11: invokestatic  #127                // Method reduce:([I[I)V
      14: return

  public static void squareN(int[], int, int[]);
    Code:
       0: invokestatic  #142                // Method org/bouncycastle/math/raw/Nat224.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokestatic  #144                // Method org/bouncycastle/math/raw/Nat224.square:([I[I)V
       9: aload_3
      10: aload_2
      11: invokestatic  #127                // Method reduce:([I[I)V
      14: iinc          1, -1
      17: iload_1
      18: ifle          34
      21: aload_2
      22: aload_3
      23: invokestatic  #144                // Method org/bouncycastle/math/raw/Nat224.square:([I[I)V
      26: aload_3
      27: aload_2
      28: invokestatic  #127                // Method reduce:([I[I)V
      31: goto          14
      34: return

  public static void subtract(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #148                // Method org/bouncycastle/math/raw/Nat224.sub:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifeq          15
      11: aload_2
      12: invokestatic  #126                // Method subPInvFrom:([I)V
      15: return

  public static void subtractExt(int[], int[], int[]);
    Code:
       0: bipush        14
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #141                // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifeq          38
      13: getstatic     #121                // Field PExtInv:[I
      16: arraylength
      17: getstatic     #121                // Field PExtInv:[I
      20: aload_2
      21: invokestatic  #138                // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      24: ifeq          38
      27: bipush        14
      29: aload_2
      30: getstatic     #121                // Field PExtInv:[I
      33: arraylength
      34: invokestatic  #130                // Method org/bouncycastle/math/raw/Nat.decAt:(I[II)I
      37: pop
      38: return

  public static void twice(int[], int[]);
    Code:
       0: bipush        7
       2: aload_0
       3: iconst_0
       4: aload_1
       5: invokestatic  #134                // Method org/bouncycastle/math/raw/Nat.shiftUpBit:(I[II[I)I
       8: istore_2
       9: iload_2
      10: ifne          31
      13: aload_1
      14: bipush        6
      16: iaload
      17: iconst_m1
      18: if_icmpne     35
      21: aload_1
      22: getstatic     #119                // Field P:[I
      25: invokestatic  #145                // Method org/bouncycastle/math/raw/Nat224.gte:([I[I)Z
      28: ifeq          35
      31: aload_1
      32: invokestatic  #125                // Method addPInvTo:([I)V
      35: return

  private static void addPInvTo(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #75                 // long 4294967295l
       7: land
       8: lconst_1
       9: lsub
      10: lstore_1
      11: aload_0
      12: iconst_0
      13: lload_1
      14: l2i
      15: iastore
      16: lload_1
      17: bipush        32
      19: lshr
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifeq          69
      27: lload_1
      28: aload_0
      29: iconst_1
      30: iaload
      31: i2l
      32: ldc2_w        #75                 // long 4294967295l
      35: land
      36: ladd
      37: lstore_1
      38: aload_0
      39: iconst_1
      40: lload_1
      41: l2i
      42: iastore
      43: lload_1
      44: bipush        32
      46: lshr
      47: lstore_1
      48: lload_1
      49: aload_0
      50: iconst_2
      51: iaload
      52: i2l
      53: ldc2_w        #75                 // long 4294967295l
      56: land
      57: ladd
      58: lstore_1
      59: aload_0
      60: iconst_2
      61: lload_1
      62: l2i
      63: iastore
      64: lload_1
      65: bipush        32
      67: lshr
      68: lstore_1
      69: lload_1
      70: aload_0
      71: iconst_3
      72: iaload
      73: i2l
      74: ldc2_w        #75                 // long 4294967295l
      77: land
      78: lconst_1
      79: ladd
      80: ladd
      81: lstore_1
      82: aload_0
      83: iconst_3
      84: lload_1
      85: l2i
      86: iastore
      87: lload_1
      88: bipush        32
      90: lshr
      91: lstore_1
      92: lload_1
      93: lconst_0
      94: lcmp
      95: ifeq          106
      98: bipush        7
     100: aload_0
     101: iconst_4
     102: invokestatic  #131                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
     105: pop
     106: return

  private static void subPInvFrom(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #75                 // long 4294967295l
       7: land
       8: lconst_1
       9: ladd
      10: lstore_1
      11: aload_0
      12: iconst_0
      13: lload_1
      14: l2i
      15: iastore
      16: lload_1
      17: bipush        32
      19: lshr
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifeq          69
      27: lload_1
      28: aload_0
      29: iconst_1
      30: iaload
      31: i2l
      32: ldc2_w        #75                 // long 4294967295l
      35: land
      36: ladd
      37: lstore_1
      38: aload_0
      39: iconst_1
      40: lload_1
      41: l2i
      42: iastore
      43: lload_1
      44: bipush        32
      46: lshr
      47: lstore_1
      48: lload_1
      49: aload_0
      50: iconst_2
      51: iaload
      52: i2l
      53: ldc2_w        #75                 // long 4294967295l
      56: land
      57: ladd
      58: lstore_1
      59: aload_0
      60: iconst_2
      61: lload_1
      62: l2i
      63: iastore
      64: lload_1
      65: bipush        32
      67: lshr
      68: lstore_1
      69: lload_1
      70: aload_0
      71: iconst_3
      72: iaload
      73: i2l
      74: ldc2_w        #75                 // long 4294967295l
      77: land
      78: lconst_1
      79: lsub
      80: ladd
      81: lstore_1
      82: aload_0
      83: iconst_3
      84: lload_1
      85: l2i
      86: iastore
      87: lload_1
      88: bipush        32
      90: lshr
      91: lstore_1
      92: lload_1
      93: lconst_0
      94: lcmp
      95: ifeq          106
      98: bipush        7
     100: aload_0
     101: iconst_4
     102: invokestatic  #130                // Method org/bouncycastle/math/raw/Nat.decAt:(I[II)I
     105: pop
     106: return

  static {};
    Code:
       0: bipush        7
       2: newarray       int
       4: dup
       5: iconst_0
       6: iconst_1
       7: iastore
       8: dup
       9: iconst_1
      10: iconst_0
      11: iastore
      12: dup
      13: iconst_2
      14: iconst_0
      15: iastore
      16: dup
      17: iconst_3
      18: iconst_m1
      19: iastore
      20: dup
      21: iconst_4
      22: iconst_m1
      23: iastore
      24: dup
      25: iconst_5
      26: iconst_m1
      27: iastore
      28: dup
      29: bipush        6
      31: iconst_m1
      32: iastore
      33: putstatic     #119                // Field P:[I
      36: bipush        14
      38: newarray       int
      40: dup
      41: iconst_0
      42: iconst_1
      43: iastore
      44: dup
      45: iconst_1
      46: iconst_0
      47: iastore
      48: dup
      49: iconst_2
      50: iconst_0
      51: iastore
      52: dup
      53: iconst_3
      54: bipush        -2
      56: iastore
      57: dup
      58: iconst_4
      59: iconst_m1
      60: iastore
      61: dup
      62: iconst_5
      63: iconst_m1
      64: iastore
      65: dup
      66: bipush        6
      68: iconst_0
      69: iastore
      70: dup
      71: bipush        7
      73: iconst_2
      74: iastore
      75: dup
      76: bipush        8
      78: iconst_0
      79: iastore
      80: dup
      81: bipush        9
      83: iconst_0
      84: iastore
      85: dup
      86: bipush        10
      88: bipush        -2
      90: iastore
      91: dup
      92: bipush        11
      94: iconst_m1
      95: iastore
      96: dup
      97: bipush        12
      99: iconst_m1
     100: iastore
     101: dup
     102: bipush        13
     104: iconst_m1
     105: iastore
     106: putstatic     #120                // Field PExt:[I
     109: bipush        11
     111: newarray       int
     113: dup
     114: iconst_0
     115: iconst_m1
     116: iastore
     117: dup
     118: iconst_1
     119: iconst_m1
     120: iastore
     121: dup
     122: iconst_2
     123: iconst_m1
     124: iastore
     125: dup
     126: iconst_3
     127: iconst_1
     128: iastore
     129: dup
     130: iconst_4
     131: iconst_0
     132: iastore
     133: dup
     134: iconst_5
     135: iconst_0
     136: iastore
     137: dup
     138: bipush        6
     140: iconst_m1
     141: iastore
     142: dup
     143: bipush        7
     145: bipush        -3
     147: iastore
     148: dup
     149: bipush        8
     151: iconst_m1
     152: iastore
     153: dup
     154: bipush        9
     156: iconst_m1
     157: iastore
     158: dup
     159: bipush        10
     161: iconst_1
     162: iastore
     163: putstatic     #121                // Field PExtInv:[I
     166: return
}
