public class org.bouncycastle.crypto.agreement.srp.SRP6Server {
  protected java.math.BigInteger N;

  protected java.math.BigInteger g;

  protected java.math.BigInteger v;

  protected java.security.SecureRandom random;

  protected org.bouncycastle.crypto.Digest digest;

  protected java.math.BigInteger A;

  protected java.math.BigInteger b;

  protected java.math.BigInteger B;

  protected java.math.BigInteger u;

  protected java.math.BigInteger S;

  protected java.math.BigInteger M1;

  protected java.math.BigInteger M2;

  protected java.math.BigInteger Key;

  public org.bouncycastle.crypto.agreement.srp.SRP6Server();
    Code:
       0: aload_0
       1: invokespecial #116                // Method java/lang/Object."<init>":()V
       4: return

  public void init(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest, java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field N:Ljava/math/BigInteger;
       5: aload_0
       6: aload_2
       7: putfield      #111                // Field g:Ljava/math/BigInteger;
      10: aload_0
      11: aload_3
      12: putfield      #113                // Field v:Ljava/math/BigInteger;
      15: aload_0
      16: aload         5
      18: putfield      #114                // Field random:Ljava/security/SecureRandom;
      21: aload_0
      22: aload         4
      24: putfield      #115                // Field digest:Lorg/bouncycastle/crypto/Digest;
      27: return

  public void init(org.bouncycastle.crypto.params.SRP6GroupParameters, java.math.BigInteger, org.bouncycastle.crypto.Digest, java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #134                // Method org/bouncycastle/crypto/params/SRP6GroupParameters.getN:()Ljava/math/BigInteger;
       5: aload_1
       6: invokevirtual #133                // Method org/bouncycastle/crypto/params/SRP6GroupParameters.getG:()Ljava/math/BigInteger;
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokevirtual #125                // Method init:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Lorg/bouncycastle/crypto/Digest;Ljava/security/SecureRandom;)V
      16: return

  public java.math.BigInteger generateServerCredentials();
    Code:
       0: aload_0
       1: getfield      #115                // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: aload_0
       5: getfield      #108                // Field N:Ljava/math/BigInteger;
       8: aload_0
       9: getfield      #111                // Field g:Ljava/math/BigInteger;
      12: invokestatic  #127                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.calculateK:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      15: astore_1
      16: aload_0
      17: aload_0
      18: invokevirtual #124                // Method selectPrivateValue:()Ljava/math/BigInteger;
      21: putfield      #110                // Field b:Ljava/math/BigInteger;
      24: aload_0
      25: aload_1
      26: aload_0
      27: getfield      #113                // Field v:Ljava/math/BigInteger;
      30: invokevirtual #120                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      33: aload_0
      34: getfield      #108                // Field N:Ljava/math/BigInteger;
      37: invokevirtual #119                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      40: aload_0
      41: getfield      #111                // Field g:Ljava/math/BigInteger;
      44: aload_0
      45: getfield      #110                // Field b:Ljava/math/BigInteger;
      48: aload_0
      49: getfield      #108                // Field N:Ljava/math/BigInteger;
      52: invokevirtual #121                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      55: invokevirtual #118                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      58: aload_0
      59: getfield      #108                // Field N:Ljava/math/BigInteger;
      62: invokevirtual #119                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      65: putfield      #104                // Field B:Ljava/math/BigInteger;
      68: aload_0
      69: getfield      #104                // Field B:Ljava/math/BigInteger;
      72: areturn

  public java.math.BigInteger calculateSecret(java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #108                // Field N:Ljava/math/BigInteger;
       5: aload_1
       6: invokestatic  #126                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.validatePublicValue:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
       9: putfield      #103                // Field A:Ljava/math/BigInteger;
      12: aload_0
      13: aload_0
      14: getfield      #115                // Field digest:Lorg/bouncycastle/crypto/Digest;
      17: aload_0
      18: getfield      #108                // Field N:Ljava/math/BigInteger;
      21: aload_0
      22: getfield      #103                // Field A:Ljava/math/BigInteger;
      25: aload_0
      26: getfield      #104                // Field B:Ljava/math/BigInteger;
      29: invokestatic  #129                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.calculateU:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      32: putfield      #112                // Field u:Ljava/math/BigInteger;
      35: aload_0
      36: aload_0
      37: invokespecial #123                // Method calculateS:()Ljava/math/BigInteger;
      40: putfield      #109                // Field S:Ljava/math/BigInteger;
      43: aload_0
      44: getfield      #109                // Field S:Ljava/math/BigInteger;
      47: areturn

  protected java.math.BigInteger selectPrivateValue();
    Code:
       0: aload_0
       1: getfield      #115                // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: aload_0
       5: getfield      #108                // Field N:Ljava/math/BigInteger;
       8: aload_0
       9: getfield      #111                // Field g:Ljava/math/BigInteger;
      12: aload_0
      13: getfield      #114                // Field random:Ljava/security/SecureRandom;
      16: invokestatic  #130                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.generatePrivateValue:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      19: areturn

  private java.math.BigInteger calculateS();
    Code:
       0: aload_0
       1: getfield      #113                // Field v:Ljava/math/BigInteger;
       4: aload_0
       5: getfield      #112                // Field u:Ljava/math/BigInteger;
       8: aload_0
       9: getfield      #108                // Field N:Ljava/math/BigInteger;
      12: invokevirtual #121                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      15: aload_0
      16: getfield      #103                // Field A:Ljava/math/BigInteger;
      19: invokevirtual #120                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      22: aload_0
      23: getfield      #108                // Field N:Ljava/math/BigInteger;
      26: invokevirtual #119                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      29: aload_0
      30: getfield      #110                // Field b:Ljava/math/BigInteger;
      33: aload_0
      34: getfield      #108                // Field N:Ljava/math/BigInteger;
      37: invokevirtual #121                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      40: areturn

  public boolean verifyClientEvidenceMessage(java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: getfield      #103                // Field A:Ljava/math/BigInteger;
       4: ifnull        21
       7: aload_0
       8: getfield      #104                // Field B:Ljava/math/BigInteger;
      11: ifnull        21
      14: aload_0
      15: getfield      #109                // Field S:Ljava/math/BigInteger;
      18: ifnonnull     31
      21: new           #52                 // class org/bouncycastle/crypto/CryptoException
      24: dup
      25: ldc           #3                  // String Impossible to compute and verify M1: some data are missing from the previous operations (A,B,S)
      27: invokespecial #122                // Method org/bouncycastle/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #115                // Field digest:Lorg/bouncycastle/crypto/Digest;
      35: aload_0
      36: getfield      #108                // Field N:Ljava/math/BigInteger;
      39: aload_0
      40: getfield      #103                // Field A:Ljava/math/BigInteger;
      43: aload_0
      44: getfield      #104                // Field B:Ljava/math/BigInteger;
      47: aload_0
      48: getfield      #109                // Field S:Ljava/math/BigInteger;
      51: invokestatic  #131                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.calculateM1:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      54: astore_2
      55: aload_2
      56: aload_1
      57: invokevirtual #117                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      60: ifeq          70
      63: aload_0
      64: aload_1
      65: putfield      #106                // Field M1:Ljava/math/BigInteger;
      68: iconst_1
      69: ireturn
      70: iconst_0
      71: ireturn

  public java.math.BigInteger calculateServerEvidenceMessage() throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: getfield      #103                // Field A:Ljava/math/BigInteger;
       4: ifnull        21
       7: aload_0
       8: getfield      #106                // Field M1:Ljava/math/BigInteger;
      11: ifnull        21
      14: aload_0
      15: getfield      #109                // Field S:Ljava/math/BigInteger;
      18: ifnonnull     31
      21: new           #52                 // class org/bouncycastle/crypto/CryptoException
      24: dup
      25: ldc           #2                  // String Impossible to compute M2: some data are missing from the previous operations (A,M1,S)
      27: invokespecial #122                // Method org/bouncycastle/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: aload_0
      33: getfield      #115                // Field digest:Lorg/bouncycastle/crypto/Digest;
      36: aload_0
      37: getfield      #108                // Field N:Ljava/math/BigInteger;
      40: aload_0
      41: getfield      #103                // Field A:Ljava/math/BigInteger;
      44: aload_0
      45: getfield      #106                // Field M1:Ljava/math/BigInteger;
      48: aload_0
      49: getfield      #109                // Field S:Ljava/math/BigInteger;
      52: invokestatic  #132                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.calculateM2:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      55: putfield      #107                // Field M2:Ljava/math/BigInteger;
      58: aload_0
      59: getfield      #107                // Field M2:Ljava/math/BigInteger;
      62: areturn

  public java.math.BigInteger calculateSessionKey() throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: getfield      #109                // Field S:Ljava/math/BigInteger;
       4: ifnull        21
       7: aload_0
       8: getfield      #106                // Field M1:Ljava/math/BigInteger;
      11: ifnull        21
      14: aload_0
      15: getfield      #107                // Field M2:Ljava/math/BigInteger;
      18: ifnonnull     31
      21: new           #52                 // class org/bouncycastle/crypto/CryptoException
      24: dup
      25: ldc           #1                  // String Impossible to compute Key: some data are missing from the previous operations (S,M1,M2)
      27: invokespecial #122                // Method org/bouncycastle/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: aload_0
      33: getfield      #115                // Field digest:Lorg/bouncycastle/crypto/Digest;
      36: aload_0
      37: getfield      #108                // Field N:Ljava/math/BigInteger;
      40: aload_0
      41: getfield      #109                // Field S:Ljava/math/BigInteger;
      44: invokestatic  #128                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.calculateKey:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      47: putfield      #105                // Field Key:Ljava/math/BigInteger;
      50: aload_0
      51: getfield      #105                // Field Key:Ljava/math/BigInteger;
      54: areturn
}
