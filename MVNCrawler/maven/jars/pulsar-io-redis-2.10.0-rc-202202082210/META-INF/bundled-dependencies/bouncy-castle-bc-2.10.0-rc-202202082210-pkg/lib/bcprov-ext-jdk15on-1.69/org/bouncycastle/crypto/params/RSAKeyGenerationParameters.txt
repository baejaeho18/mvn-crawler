public class org.bouncycastle.crypto.params.RSAKeyGenerationParameters extends org.bouncycastle.crypto.KeyGenerationParameters {
  private java.math.BigInteger publicExponent;

  private int certainty;

  public org.bouncycastle.crypto.params.RSAKeyGenerationParameters(java.math.BigInteger, java.security.SecureRandom, int, int);
    Code:
       0: aload_0
       1: aload_2
       2: iload_3
       3: invokespecial #36                 // Method org/bouncycastle/crypto/KeyGenerationParameters."<init>":(Ljava/security/SecureRandom;I)V
       6: iload_3
       7: bipush        12
       9: if_icmpge     22
      12: new           #18                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #1                  // String key strength too small
      18: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_1
      23: iconst_0
      24: invokevirtual #35                 // Method java/math/BigInteger.testBit:(I)Z
      27: ifne          40
      30: new           #18                 // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #2                  // String public exponent cannot be even
      36: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: aload_1
      42: putfield      #33                 // Field publicExponent:Ljava/math/BigInteger;
      45: aload_0
      46: iload         4
      48: putfield      #32                 // Field certainty:I
      51: return

  public java.math.BigInteger getPublicExponent();
    Code:
       0: aload_0
       1: getfield      #33                 // Field publicExponent:Ljava/math/BigInteger;
       4: areturn

  public int getCertainty();
    Code:
       0: aload_0
       1: getfield      #32                 // Field certainty:I
       4: ireturn
}
