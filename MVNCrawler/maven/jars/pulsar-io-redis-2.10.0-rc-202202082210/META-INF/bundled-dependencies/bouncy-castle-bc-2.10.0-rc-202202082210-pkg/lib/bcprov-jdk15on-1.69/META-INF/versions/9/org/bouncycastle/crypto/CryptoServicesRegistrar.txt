Compiled from "CryptoServicesRegistrar.java"
public final class org.bouncycastle.crypto.CryptoServicesRegistrar {
  private static final java.security.Permission CanSetDefaultProperty;

  private static final java.security.Permission CanSetThreadProperty;

  private static final java.security.Permission CanSetDefaultRandom;

  private static final java.lang.ThreadLocal<java.util.Map<java.lang.String, java.lang.Object[]>> threadProperties;

  private static final java.util.Map<java.lang.String, java.lang.Object[]> globalProperties;

  private static final java.lang.Object cacheLock;

  private static java.security.SecureRandom defaultSecureRandom;

  private org.bouncycastle.crypto.CryptoServicesRegistrar();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.security.SecureRandom getSecureRandom();
    Code:
       0: getstatic     #2                  // Field cacheLock:Ljava/lang/Object;
       3: dup
       4: astore_0
       5: monitorenter
       6: aconst_null
       7: getstatic     #3                  // Field defaultSecureRandom:Ljava/security/SecureRandom;
      10: if_acmpeq     19
      13: getstatic     #3                  // Field defaultSecureRandom:Ljava/security/SecureRandom;
      16: aload_0
      17: monitorexit
      18: areturn
      19: aload_0
      20: monitorexit
      21: goto          29
      24: astore_1
      25: aload_0
      26: monitorexit
      27: aload_1
      28: athrow
      29: new           #4                  // class java/security/SecureRandom
      32: dup
      33: invokespecial #5                  // Method java/security/SecureRandom."<init>":()V
      36: astore_0
      37: getstatic     #2                  // Field cacheLock:Ljava/lang/Object;
      40: dup
      41: astore_1
      42: monitorenter
      43: aconst_null
      44: getstatic     #3                  // Field defaultSecureRandom:Ljava/security/SecureRandom;
      47: if_acmpne     54
      50: aload_0
      51: putstatic     #3                  // Field defaultSecureRandom:Ljava/security/SecureRandom;
      54: getstatic     #3                  // Field defaultSecureRandom:Ljava/security/SecureRandom;
      57: aload_1
      58: monitorexit
      59: areturn
      60: astore_2
      61: aload_1
      62: monitorexit
      63: aload_2
      64: athrow
    Exception table:
       from    to  target type
           6    18    24   any
          19    21    24   any
          24    27    24   any
          43    59    60   any
          60    63    60   any

  public static java.security.SecureRandom getSecureRandom(java.security.SecureRandom);
    Code:
       0: aconst_null
       1: aload_0
       2: if_acmpne     11
       5: invokestatic  #6                  // Method getSecureRandom:()Ljava/security/SecureRandom;
       8: goto          12
      11: aload_0
      12: areturn

  public static void setSecureRandom(java.security.SecureRandom);
    Code:
       0: getstatic     #7                  // Field CanSetDefaultRandom:Ljava/security/Permission;
       3: invokestatic  #8                  // Method checkPermission:(Ljava/security/Permission;)V
       6: getstatic     #2                  // Field cacheLock:Ljava/lang/Object;
       9: dup
      10: astore_1
      11: monitorenter
      12: aload_0
      13: putstatic     #3                  // Field defaultSecureRandom:Ljava/security/SecureRandom;
      16: aload_1
      17: monitorexit
      18: goto          26
      21: astore_2
      22: aload_1
      23: monitorexit
      24: aload_2
      25: athrow
      26: return
    Exception table:
       from    to  target type
          12    18    21   any
          21    24    21   any

  public static <T> T getProperty(org.bouncycastle.crypto.CryptoServicesRegistrar$Property);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method lookupProperty:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)[Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: iconst_0
      11: aaload
      12: areturn
      13: aconst_null
      14: areturn

  private static java.lang.Object[] lookupProperty(org.bouncycastle.crypto.CryptoServicesRegistrar$Property);
    Code:
       0: getstatic     #10                 // Field threadProperties:Ljava/lang/ThreadLocal;
       3: invokevirtual #11                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #12                 // class java/util/Map
       9: astore_1
      10: aload_1
      11: ifnull        27
      14: aload_1
      15: aload_0
      16: invokestatic  #13                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar$Property.access$000:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)Ljava/lang/String;
      19: invokeinterface #14,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      24: ifne          46
      27: getstatic     #15                 // Field globalProperties:Ljava/util/Map;
      30: aload_0
      31: invokestatic  #13                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar$Property.access$000:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)Ljava/lang/String;
      34: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #17                 // class "[Ljava/lang/Object;"
      42: astore_2
      43: goto          60
      46: aload_1
      47: aload_0
      48: invokestatic  #13                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar$Property.access$000:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)Ljava/lang/String;
      51: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #17                 // class "[Ljava/lang/Object;"
      59: astore_2
      60: aload_2
      61: areturn

  public static <T> T[] getSizedProperty(org.bouncycastle.crypto.CryptoServicesRegistrar$Property);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method lookupProperty:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)[Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: invokevirtual #18                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
      15: checkcast     #17                 // class "[Ljava/lang/Object;"
      18: areturn

  public static <T> T getSizedProperty(org.bouncycastle.crypto.CryptoServicesRegistrar$Property, int);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method lookupProperty:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)[Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_0
      12: invokestatic  #19                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar$Property.access$100:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)Ljava/lang/Class;
      15: ldc           #20                 // class org/bouncycastle/crypto/params/DHParameters
      17: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      20: ifeq          63
      23: iconst_0
      24: istore_3
      25: iload_3
      26: aload_2
      27: arraylength
      28: if_icmpeq     60
      31: aload_2
      32: iload_3
      33: aaload
      34: checkcast     #20                 // class org/bouncycastle/crypto/params/DHParameters
      37: astore        4
      39: aload         4
      41: invokevirtual #22                 // Method org/bouncycastle/crypto/params/DHParameters.getP:()Ljava/math/BigInteger;
      44: invokevirtual #23                 // Method java/math/BigInteger.bitLength:()I
      47: iload_1
      48: if_icmpne     54
      51: aload         4
      53: areturn
      54: iinc          3, 1
      57: goto          25
      60: goto          112
      63: aload_0
      64: invokestatic  #19                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar$Property.access$100:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)Ljava/lang/Class;
      67: ldc           #24                 // class org/bouncycastle/crypto/params/DSAParameters
      69: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      72: ifeq          112
      75: iconst_0
      76: istore_3
      77: iload_3
      78: aload_2
      79: arraylength
      80: if_icmpeq     112
      83: aload_2
      84: iload_3
      85: aaload
      86: checkcast     #24                 // class org/bouncycastle/crypto/params/DSAParameters
      89: astore        4
      91: aload         4
      93: invokevirtual #25                 // Method org/bouncycastle/crypto/params/DSAParameters.getP:()Ljava/math/BigInteger;
      96: invokevirtual #23                 // Method java/math/BigInteger.bitLength:()I
      99: iload_1
     100: if_icmpne     106
     103: aload         4
     105: areturn
     106: iinc          3, 1
     109: goto          77
     112: aconst_null
     113: areturn

  public static <T> void setThreadProperty(org.bouncycastle.crypto.CryptoServicesRegistrar$Property, T...);
    Code:
       0: getstatic     #26                 // Field CanSetThreadProperty:Ljava/security/Permission;
       3: invokestatic  #8                  // Method checkPermission:(Ljava/security/Permission;)V
       6: aload_0
       7: invokestatic  #19                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar$Property.access$100:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)Ljava/lang/Class;
      10: aload_1
      11: iconst_0
      12: aaload
      13: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      19: ifne          32
      22: new           #28                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #29                 // String Bad property value passed
      28: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: aload_1
      34: invokevirtual #31                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
      37: checkcast     #17                 // class "[Ljava/lang/Object;"
      40: invokestatic  #32                 // Method localSetThread:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;[Ljava/lang/Object;)V
      43: return

  public static <T> void setGlobalProperty(org.bouncycastle.crypto.CryptoServicesRegistrar$Property, T...);
    Code:
       0: getstatic     #33                 // Field CanSetDefaultProperty:Ljava/security/Permission;
       3: invokestatic  #8                  // Method checkPermission:(Ljava/security/Permission;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #34                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
      11: checkcast     #17                 // class "[Ljava/lang/Object;"
      14: invokestatic  #35                 // Method localSetGlobalProperty:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;[Ljava/lang/Object;)V
      17: return

  private static <T> void localSetThread(org.bouncycastle.crypto.CryptoServicesRegistrar$Property, T[]);
    Code:
       0: getstatic     #10                 // Field threadProperties:Ljava/lang/ThreadLocal;
       3: invokevirtual #11                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #12                 // class java/util/Map
       9: astore_2
      10: aload_2
      11: ifnonnull     29
      14: new           #36                 // class java/util/HashMap
      17: dup
      18: invokespecial #37                 // Method java/util/HashMap."<init>":()V
      21: astore_2
      22: getstatic     #10                 // Field threadProperties:Ljava/lang/ThreadLocal;
      25: aload_2
      26: invokevirtual #38                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      29: aload_2
      30: aload_0
      31: invokestatic  #13                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar$Property.access$000:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)Ljava/lang/String;
      34: aload_1
      35: invokeinterface #39,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: return

  private static <T> void localSetGlobalProperty(org.bouncycastle.crypto.CryptoServicesRegistrar$Property, T...);
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar$Property.access$100:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)Ljava/lang/Class;
       4: aload_1
       5: iconst_0
       6: aaload
       7: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      13: ifne          26
      16: new           #28                 // class java/lang/IllegalArgumentException
      19: dup
      20: ldc           #29                 // String Bad property value passed
      22: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: aload_1
      28: invokestatic  #32                 // Method localSetThread:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;[Ljava/lang/Object;)V
      31: getstatic     #15                 // Field globalProperties:Ljava/util/Map;
      34: aload_0
      35: invokestatic  #13                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar$Property.access$000:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)Ljava/lang/String;
      38: aload_1
      39: invokeinterface #39,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: return

  public static <T> T[] clearGlobalProperty(org.bouncycastle.crypto.CryptoServicesRegistrar$Property);
    Code:
       0: getstatic     #33                 // Field CanSetDefaultProperty:Ljava/security/Permission;
       3: invokestatic  #8                  // Method checkPermission:(Ljava/security/Permission;)V
       6: aload_0
       7: invokestatic  #40                 // Method localClearThreadProperty:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)[Ljava/lang/Object;
      10: pop
      11: getstatic     #15                 // Field globalProperties:Ljava/util/Map;
      14: aload_0
      15: invokestatic  #13                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar$Property.access$000:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)Ljava/lang/String;
      18: invokeinterface #41,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #17                 // class "[Ljava/lang/Object;"
      26: areturn

  public static <T> T[] clearThreadProperty(org.bouncycastle.crypto.CryptoServicesRegistrar$Property);
    Code:
       0: getstatic     #26                 // Field CanSetThreadProperty:Ljava/security/Permission;
       3: invokestatic  #8                  // Method checkPermission:(Ljava/security/Permission;)V
       6: aload_0
       7: invokestatic  #40                 // Method localClearThreadProperty:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)[Ljava/lang/Object;
      10: areturn

  private static java.lang.Object[] localClearThreadProperty(org.bouncycastle.crypto.CryptoServicesRegistrar$Property);
    Code:
       0: getstatic     #10                 // Field threadProperties:Ljava/lang/ThreadLocal;
       3: invokevirtual #11                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #12                 // class java/util/Map
       9: astore_1
      10: aload_1
      11: ifnonnull     29
      14: new           #36                 // class java/util/HashMap
      17: dup
      18: invokespecial #37                 // Method java/util/HashMap."<init>":()V
      21: astore_1
      22: getstatic     #10                 // Field threadProperties:Ljava/lang/ThreadLocal;
      25: aload_1
      26: invokevirtual #38                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      29: aload_1
      30: aload_0
      31: invokestatic  #13                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar$Property.access$000:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)Ljava/lang/String;
      34: invokeinterface #41,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #17                 // class "[Ljava/lang/Object;"
      42: areturn

  private static void checkPermission(java.security.Permission);
    Code:
       0: invokestatic  #42                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        21
       8: new           #43                 // class org/bouncycastle/crypto/CryptoServicesRegistrar$1
      11: dup
      12: aload_1
      13: aload_0
      14: invokespecial #44                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar$1."<init>":(Ljava/lang/SecurityManager;Ljava/security/Permission;)V
      17: invokestatic  #45                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      20: pop
      21: return

  private static org.bouncycastle.crypto.params.DHParameters toDH(org.bouncycastle.crypto.params.DSAParameters);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method org/bouncycastle/crypto/params/DSAParameters.getP:()Ljava/math/BigInteger;
       4: invokevirtual #23                 // Method java/math/BigInteger.bitLength:()I
       7: istore_1
       8: iload_1
       9: invokestatic  #46                 // Method chooseLowerBound:(I)I
      12: istore_2
      13: new           #20                 // class org/bouncycastle/crypto/params/DHParameters
      16: dup
      17: aload_0
      18: invokevirtual #25                 // Method org/bouncycastle/crypto/params/DSAParameters.getP:()Ljava/math/BigInteger;
      21: aload_0
      22: invokevirtual #47                 // Method org/bouncycastle/crypto/params/DSAParameters.getG:()Ljava/math/BigInteger;
      25: aload_0
      26: invokevirtual #48                 // Method org/bouncycastle/crypto/params/DSAParameters.getQ:()Ljava/math/BigInteger;
      29: iload_2
      30: iconst_0
      31: aconst_null
      32: new           #49                 // class org/bouncycastle/crypto/params/DHValidationParameters
      35: dup
      36: aload_0
      37: invokevirtual #50                 // Method org/bouncycastle/crypto/params/DSAParameters.getValidationParameters:()Lorg/bouncycastle/crypto/params/DSAValidationParameters;
      40: invokevirtual #51                 // Method org/bouncycastle/crypto/params/DSAValidationParameters.getSeed:()[B
      43: aload_0
      44: invokevirtual #50                 // Method org/bouncycastle/crypto/params/DSAParameters.getValidationParameters:()Lorg/bouncycastle/crypto/params/DSAValidationParameters;
      47: invokevirtual #52                 // Method org/bouncycastle/crypto/params/DSAValidationParameters.getCounter:()I
      50: invokespecial #53                 // Method org/bouncycastle/crypto/params/DHValidationParameters."<init>":([BI)V
      53: invokespecial #54                 // Method org/bouncycastle/crypto/params/DHParameters."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;IILjava/math/BigInteger;Lorg/bouncycastle/crypto/params/DHValidationParameters;)V
      56: areturn

  private static int chooseLowerBound(int);
    Code:
       0: sipush        160
       3: istore_1
       4: iload_0
       5: sipush        1024
       8: if_icmple     57
      11: iload_0
      12: sipush        2048
      15: if_icmpgt     25
      18: sipush        224
      21: istore_1
      22: goto          57
      25: iload_0
      26: sipush        3072
      29: if_icmpgt     39
      32: sipush        256
      35: istore_1
      36: goto          57
      39: iload_0
      40: sipush        7680
      43: if_icmpgt     53
      46: sipush        384
      49: istore_1
      50: goto          57
      53: sipush        512
      56: istore_1
      57: iload_1
      58: ireturn

  static {};
    Code:
       0: new           #55                 // class org/bouncycastle/crypto/CryptoServicesPermission
       3: dup
       4: ldc           #56                 // String globalConfig
       6: invokespecial #57                 // Method org/bouncycastle/crypto/CryptoServicesPermission."<init>":(Ljava/lang/String;)V
       9: putstatic     #33                 // Field CanSetDefaultProperty:Ljava/security/Permission;
      12: new           #55                 // class org/bouncycastle/crypto/CryptoServicesPermission
      15: dup
      16: ldc           #58                 // String threadLocalConfig
      18: invokespecial #57                 // Method org/bouncycastle/crypto/CryptoServicesPermission."<init>":(Ljava/lang/String;)V
      21: putstatic     #26                 // Field CanSetThreadProperty:Ljava/security/Permission;
      24: new           #55                 // class org/bouncycastle/crypto/CryptoServicesPermission
      27: dup
      28: ldc           #59                 // String defaultRandomConfig
      30: invokespecial #57                 // Method org/bouncycastle/crypto/CryptoServicesPermission."<init>":(Ljava/lang/String;)V
      33: putstatic     #7                  // Field CanSetDefaultRandom:Ljava/security/Permission;
      36: new           #60                 // class java/lang/ThreadLocal
      39: dup
      40: invokespecial #61                 // Method java/lang/ThreadLocal."<init>":()V
      43: putstatic     #10                 // Field threadProperties:Ljava/lang/ThreadLocal;
      46: new           #36                 // class java/util/HashMap
      49: dup
      50: invokespecial #37                 // Method java/util/HashMap."<init>":()V
      53: invokestatic  #62                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      56: putstatic     #15                 // Field globalProperties:Ljava/util/Map;
      59: new           #63                 // class java/lang/Object
      62: dup
      63: invokespecial #1                  // Method java/lang/Object."<init>":()V
      66: putstatic     #2                  // Field cacheLock:Ljava/lang/Object;
      69: new           #24                 // class org/bouncycastle/crypto/params/DSAParameters
      72: dup
      73: new           #64                 // class java/math/BigInteger
      76: dup
      77: ldc           #65                 // String fca682ce8e12caba26efccf7110e526db078b05edecbcd1eb4a208f3ae1617ae01f35b91a47e6df63413c5e12ed0899bcd132acd50d99151bdc43ee737592e17
      79: bipush        16
      81: invokespecial #66                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
      84: new           #64                 // class java/math/BigInteger
      87: dup
      88: ldc           #67                 // String 962eddcc369cba8ebb260ee6b6a126d9346e38c5
      90: bipush        16
      92: invokespecial #66                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
      95: new           #64                 // class java/math/BigInteger
      98: dup
      99: ldc           #68                 // String 678471b27a9cf44ee91a49c5147db1a9aaf244f05a434d6486931d2d14271b9e35030b71fd73da179069b32e2935630e1c2062354d0da20a6c416e50be794ca4
     101: bipush        16
     103: invokespecial #66                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     106: new           #69                 // class org/bouncycastle/crypto/params/DSAValidationParameters
     109: dup
     110: ldc           #70                 // String b869c82b35d70e1b1ff91b28e37a62ecdc34409b
     112: invokestatic  #71                 // Method org/bouncycastle/util/encoders/Hex.decodeStrict:(Ljava/lang/String;)[B
     115: bipush        123
     117: invokespecial #72                 // Method org/bouncycastle/crypto/params/DSAValidationParameters."<init>":([BI)V
     120: invokespecial #73                 // Method org/bouncycastle/crypto/params/DSAParameters."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Lorg/bouncycastle/crypto/params/DSAValidationParameters;)V
     123: astore_0
     124: new           #24                 // class org/bouncycastle/crypto/params/DSAParameters
     127: dup
     128: new           #64                 // class java/math/BigInteger
     131: dup
     132: ldc           #74                 // String e9e642599d355f37c97ffd3567120b8e25c9cd43e927b3a9670fbec5d890141922d2c3b3ad2480093799869d1e846aab49fab0ad26d2ce6a22219d470bce7d777d4a21fbe9c270b57f607002f3cef8393694cf45ee3688c11a8c56ab127a3daf
     134: bipush        16
     136: invokespecial #66                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     139: new           #64                 // class java/math/BigInteger
     142: dup
     143: ldc           #75                 // String 9cdbd84c9f1ac2f38d0f80f42ab952e7338bf511
     145: bipush        16
     147: invokespecial #66                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     150: new           #64                 // class java/math/BigInteger
     153: dup
     154: ldc           #76                 // String 30470ad5a005fb14ce2d9dcd87e38bc7d1b1c5facbaecbe95f190aa7a31d23c4dbbcbe06174544401a5b2c020965d8c2bd2171d3668445771f74ba084d2029d83c1c158547f3a9f1a2715be23d51ae4d3e5a1f6a7064f316933a346d3f529252
     156: bipush        16
     158: invokespecial #66                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     161: new           #69                 // class org/bouncycastle/crypto/params/DSAValidationParameters
     164: dup
     165: ldc           #77                 // String 77d0f8c4dad15eb8c4f2f8d6726cefd96d5bb399
     167: invokestatic  #71                 // Method org/bouncycastle/util/encoders/Hex.decodeStrict:(Ljava/lang/String;)[B
     170: sipush        263
     173: invokespecial #72                 // Method org/bouncycastle/crypto/params/DSAValidationParameters."<init>":([BI)V
     176: invokespecial #73                 // Method org/bouncycastle/crypto/params/DSAParameters."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Lorg/bouncycastle/crypto/params/DSAValidationParameters;)V
     179: astore_1
     180: new           #24                 // class org/bouncycastle/crypto/params/DSAParameters
     183: dup
     184: new           #64                 // class java/math/BigInteger
     187: dup
     188: ldc           #78                 // String fd7f53811d75122952df4a9c2eece4e7f611b7523cef4400c31e3f80b6512669455d402251fb593d8d58fabfc5f5ba30f6cb9b556cd7813b801d346ff26660b76b9950a5a49f9fe8047b1022c24fbba9d7feb7c61bf83b57e7c6a8a6150f04fb83f6d3c51ec3023554135a169132f675f3ae2b61d72aeff22203199dd14801c7
     190: bipush        16
     192: invokespecial #66                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     195: new           #64                 // class java/math/BigInteger
     198: dup
     199: ldc           #79                 // String 9760508f15230bccb292b982a2eb840bf0581cf5
     201: bipush        16
     203: invokespecial #66                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     206: new           #64                 // class java/math/BigInteger
     209: dup
     210: ldc           #80                 // String f7e1a085d69b3ddecbbcab5c36b857b97994afbbfa3aea82f9574c0b3d0782675159578ebad4594fe67107108180b449167123e84c281613b7cf09328cc8a6e13c167a8b547c8d28e0a3ae1e2bb3a675916ea37f0bfa213562f1fb627a01243bcca4f1bea8519089a883dfe15ae59f06928b665e807b552564014c3bfecf492a
     212: bipush        16
     214: invokespecial #66                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     217: new           #69                 // class org/bouncycastle/crypto/params/DSAValidationParameters
     220: dup
     221: ldc           #81                 // String 8d5155894229d5e689ee01e6018a237e2cae64cd
     223: invokestatic  #71                 // Method org/bouncycastle/util/encoders/Hex.decodeStrict:(Ljava/lang/String;)[B
     226: bipush        92
     228: invokespecial #72                 // Method org/bouncycastle/crypto/params/DSAValidationParameters."<init>":([BI)V
     231: invokespecial #73                 // Method org/bouncycastle/crypto/params/DSAParameters."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Lorg/bouncycastle/crypto/params/DSAValidationParameters;)V
     234: astore_2
     235: new           #24                 // class org/bouncycastle/crypto/params/DSAParameters
     238: dup
     239: new           #64                 // class java/math/BigInteger
     242: dup
     243: ldc           #82                 // String 95475cf5d93e596c3fcd1d902add02f427f5f3c7210313bb45fb4d5bb2e5fe1cbd678cd4bbdd84c9836be1f31c0777725aeb6c2fc38b85f48076fa76bcd8146cc89a6fb2f706dd719898c2083dc8d896f84062e2c9c94d137b054a8d8096adb8d51952398eeca852a0af12df83e475aa65d4ec0c38a9560d5661186ff98b9fc9eb60eee8b030376b236bc73be3acdbd74fd61c1d2475fa3077b8f080467881ff7e1ca56fee066d79506ade51edbb5443a563927dbc4ba520086746175c8885925ebc64c6147906773496990cb714ec667304e261faee33b3cbdf008e0c3fa90650d97d3909c9275bf4ac86ffcb3d03e6dfc8ada5934242dd6d3bcca2a406cb0b
     245: bipush        16
     247: invokespecial #66                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     250: new           #64                 // class java/math/BigInteger
     253: dup
     254: ldc           #83                 // String f8183668ba5fc5bb06b5981e6d8b795d30b8978d43ca0ec572e37e09939a9773
     256: bipush        16
     258: invokespecial #66                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     261: new           #64                 // class java/math/BigInteger
     264: dup
     265: ldc           #84                 // String 42debb9da5b3d88cc956e08787ec3f3a09bba5f48b889a74aaf53174aa0fbe7e3c5b8fcd7a53bef563b0e98560328960a9517f4014d3325fc7962bf1e049370d76d1314a76137e792f3f0db859d095e4a5b932024f079ecf2ef09c797452b0770e1350782ed57ddf794979dcef23cb96f183061965c4ebc93c9c71c56b925955a75f94cccf1449ac43d586d0beee43251b0b2287349d68de0d144403f13e802f4146d882e057af19b6f6275c6676c8fa0e3ca2713a3257fd1b27d0639f695e347d8d1cf9ac819a26ca9b04cb0eb9b7b035988d15bbac65212a55239cfc7e58fae38d7250ab9991ffbc97134025fe8ce04c4399ad96569be91a546f4978693c7a
     267: bipush        16
     269: invokespecial #66                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     272: new           #69                 // class org/bouncycastle/crypto/params/DSAValidationParameters
     275: dup
     276: ldc           #85                 // String b0b4417601b59cbc9d8ac8f935cadaec4f5fbb2f23785609ae466748d9b5a536
     278: invokestatic  #71                 // Method org/bouncycastle/util/encoders/Hex.decodeStrict:(Ljava/lang/String;)[B
     281: sipush        497
     284: invokespecial #72                 // Method org/bouncycastle/crypto/params/DSAValidationParameters."<init>":([BI)V
     287: invokespecial #73                 // Method org/bouncycastle/crypto/params/DSAParameters."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Lorg/bouncycastle/crypto/params/DSAValidationParameters;)V
     290: astore_3
     291: getstatic     #86                 // Field org/bouncycastle/crypto/CryptoServicesRegistrar$Property.DSA_DEFAULT_PARAMS:Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;
     294: iconst_4
     295: anewarray     #24                 // class org/bouncycastle/crypto/params/DSAParameters
     298: dup
     299: iconst_0
     300: aload_0
     301: aastore
     302: dup
     303: iconst_1
     304: aload_1
     305: aastore
     306: dup
     307: iconst_2
     308: aload_2
     309: aastore
     310: dup
     311: iconst_3
     312: aload_3
     313: aastore
     314: invokestatic  #35                 // Method localSetGlobalProperty:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;[Ljava/lang/Object;)V
     317: getstatic     #87                 // Field org/bouncycastle/crypto/CryptoServicesRegistrar$Property.DH_DEFAULT_PARAMS:Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;
     320: iconst_4
     321: anewarray     #20                 // class org/bouncycastle/crypto/params/DHParameters
     324: dup
     325: iconst_0
     326: aload_0
     327: invokestatic  #88                 // Method toDH:(Lorg/bouncycastle/crypto/params/DSAParameters;)Lorg/bouncycastle/crypto/params/DHParameters;
     330: aastore
     331: dup
     332: iconst_1
     333: aload_1
     334: invokestatic  #88                 // Method toDH:(Lorg/bouncycastle/crypto/params/DSAParameters;)Lorg/bouncycastle/crypto/params/DHParameters;
     337: aastore
     338: dup
     339: iconst_2
     340: aload_2
     341: invokestatic  #88                 // Method toDH:(Lorg/bouncycastle/crypto/params/DSAParameters;)Lorg/bouncycastle/crypto/params/DHParameters;
     344: aastore
     345: dup
     346: iconst_3
     347: aload_3
     348: invokestatic  #88                 // Method toDH:(Lorg/bouncycastle/crypto/params/DSAParameters;)Lorg/bouncycastle/crypto/params/DHParameters;
     351: aastore
     352: invokestatic  #35                 // Method localSetGlobalProperty:(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;[Ljava/lang/Object;)V
     355: return
}
