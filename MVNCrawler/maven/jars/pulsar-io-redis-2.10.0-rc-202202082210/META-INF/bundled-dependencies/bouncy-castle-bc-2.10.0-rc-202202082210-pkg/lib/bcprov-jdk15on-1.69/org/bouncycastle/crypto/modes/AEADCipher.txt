public interface org.bouncycastle.crypto.modes.AEADCipher {
  public abstract void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;

  public abstract java.lang.String getAlgorithmName();

  public abstract void processAADByte(byte);

  public abstract void processAADBytes(byte[], int, int);

  public abstract int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException;

  public abstract int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException;

  public abstract int doFinal(byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException;

  public abstract byte[] getMac();

  public abstract int getUpdateOutputSize(int);

  public abstract int getOutputSize(int);

  public abstract void reset();
}
