public final class org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters implements org.bouncycastle.crypto.DerivationParameters {
  private static final int UNUSED_R;

  private final byte[] ki;

  private final boolean useCounter;

  private final int r;

  private final byte[] fixedInputData;

  private org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters(byte[], byte[], int, boolean);
    Code:
       0: aload_0
       1: invokespecial #53                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #32                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #1                  // String A KDF requires Ki (a seed) as input
      14: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: invokestatic  #55                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      23: putfield      #51                 // Field ki:[B
      26: aload_2
      27: ifnonnull     40
      30: aload_0
      31: iconst_0
      32: newarray       byte
      34: putfield      #50                 // Field fixedInputData:[B
      37: goto          48
      40: aload_0
      41: aload_2
      42: invokestatic  #55                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      45: putfield      #50                 // Field fixedInputData:[B
      48: iload_3
      49: bipush        8
      51: if_icmpeq     82
      54: iload_3
      55: bipush        16
      57: if_icmpeq     82
      60: iload_3
      61: bipush        24
      63: if_icmpeq     82
      66: iload_3
      67: bipush        32
      69: if_icmpeq     82
      72: new           #32                 // class java/lang/IllegalArgumentException
      75: dup
      76: ldc           #2                  // String Length of counter should be 8, 16, 24 or 32
      78: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: aload_0
      83: iload_3
      84: putfield      #48                 // Field r:I
      87: aload_0
      88: iload         4
      90: putfield      #49                 // Field useCounter:Z
      93: return

  public static org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters createWithCounter(byte[], byte[], int);
    Code:
       0: new           #35                 // class org/bouncycastle/crypto/params/KDFDoublePipelineIterationParameters
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: iconst_1
       8: invokespecial #54                 // Method "<init>":([B[BIZ)V
      11: areturn

  public static org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters createWithoutCounter(byte[], byte[]);
    Code:
       0: new           #35                 // class org/bouncycastle/crypto/params/KDFDoublePipelineIterationParameters
       3: dup
       4: aload_0
       5: aload_1
       6: bipush        32
       8: iconst_0
       9: invokespecial #54                 // Method "<init>":([B[BIZ)V
      12: areturn

  public byte[] getKI();
    Code:
       0: aload_0
       1: getfield      #51                 // Field ki:[B
       4: areturn

  public boolean useCounter();
    Code:
       0: aload_0
       1: getfield      #49                 // Field useCounter:Z
       4: ireturn

  public int getR();
    Code:
       0: aload_0
       1: getfield      #48                 // Field r:I
       4: ireturn

  public byte[] getFixedInputData();
    Code:
       0: aload_0
       1: getfield      #50                 // Field fixedInputData:[B
       4: invokestatic  #55                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn
}
