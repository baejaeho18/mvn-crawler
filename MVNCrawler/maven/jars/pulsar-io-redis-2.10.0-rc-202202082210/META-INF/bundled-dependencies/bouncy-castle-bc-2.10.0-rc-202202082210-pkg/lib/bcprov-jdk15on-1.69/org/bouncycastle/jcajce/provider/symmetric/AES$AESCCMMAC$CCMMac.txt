class org.bouncycastle.jcajce.provider.symmetric.AES$AESCCMMAC$CCMMac implements org.bouncycastle.crypto.Mac {
  private final org.bouncycastle.crypto.modes.CCMBlockCipher ccm;

  private int macLength;

  private org.bouncycastle.jcajce.provider.symmetric.AES$AESCCMMAC$CCMMac();
    Code:
       0: aload_0
       1: invokespecial #78                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #48                 // class org/bouncycastle/crypto/modes/CCMBlockCipher
       8: dup
       9: new           #47                 // class org/bouncycastle/crypto/engines/AESEngine
      12: dup
      13: invokespecial #83                 // Method org/bouncycastle/crypto/engines/AESEngine."<init>":()V
      16: invokespecial #90                 // Method org/bouncycastle/crypto/modes/CCMBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
      19: putfield      #76                 // Field ccm:Lorg/bouncycastle/crypto/modes/CCMBlockCipher;
      22: aload_0
      23: bipush        8
      25: putfield      #75                 // Field macLength:I
      28: return

  public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #76                 // Field ccm:Lorg/bouncycastle/crypto/modes/CCMBlockCipher;
       4: iconst_1
       5: aload_1
       6: invokevirtual #91                 // Method org/bouncycastle/crypto/modes/CCMBlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
       9: aload_0
      10: aload_0
      11: getfield      #76                 // Field ccm:Lorg/bouncycastle/crypto/modes/CCMBlockCipher;
      14: invokevirtual #85                 // Method org/bouncycastle/crypto/modes/CCMBlockCipher.getMac:()[B
      17: arraylength
      18: putfield      #75                 // Field macLength:I
      21: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #76                 // Field ccm:Lorg/bouncycastle/crypto/modes/CCMBlockCipher;
      11: invokevirtual #89                 // Method org/bouncycastle/crypto/modes/CCMBlockCipher.getAlgorithmName:()Ljava/lang/String;
      14: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #1                  // String Mac
      19: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  public int getMacSize();
    Code:
       0: aload_0
       1: getfield      #75                 // Field macLength:I
       4: ireturn

  public void update(byte) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #76                 // Field ccm:Lorg/bouncycastle/crypto/modes/CCMBlockCipher;
       4: iload_1
       5: invokevirtual #86                 // Method org/bouncycastle/crypto/modes/CCMBlockCipher.processAADByte:(B)V
       8: return

  public void update(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #76                 // Field ccm:Lorg/bouncycastle/crypto/modes/CCMBlockCipher;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #88                 // Method org/bouncycastle/crypto/modes/CCMBlockCipher.processAADBytes:([BII)V
      10: return

  public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #76                 // Field ccm:Lorg/bouncycastle/crypto/modes/CCMBlockCipher;
       4: aload_1
       5: iconst_0
       6: invokevirtual #87                 // Method org/bouncycastle/crypto/modes/CCMBlockCipher.doFinal:([BI)I
       9: ireturn
      10: astore_3
      11: new           #41                 // class java/lang/IllegalStateException
      14: dup
      15: new           #43                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #2                  // String exception on doFinal():
      24: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_3
      28: invokevirtual #82                 // Method org/bouncycastle/crypto/InvalidCipherTextException.toString:()Ljava/lang/String;
      31: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #77                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      40: athrow
    Exception table:
       from    to  target type
           0     9    10   Class org/bouncycastle/crypto/InvalidCipherTextException

  public void reset();
    Code:
       0: aload_0
       1: getfield      #76                 // Field ccm:Lorg/bouncycastle/crypto/modes/CCMBlockCipher;
       4: invokevirtual #84                 // Method org/bouncycastle/crypto/modes/CCMBlockCipher.reset:()V
       7: return

  org.bouncycastle.jcajce.provider.symmetric.AES$AESCCMMAC$CCMMac(org.bouncycastle.jcajce.provider.symmetric.AES$1);
    Code:
       0: aload_0
       1: invokespecial #92                 // Method "<init>":()V
       4: return
}
