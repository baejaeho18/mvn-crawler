public class org.bouncycastle.pqc.jcajce.provider.newhope.KeyAgreementSpi extends org.bouncycastle.jcajce.provider.asymmetric.util.BaseAgreementSpi {
  private org.bouncycastle.pqc.crypto.newhope.NHAgreement agreement;

  private org.bouncycastle.pqc.jcajce.provider.newhope.BCNHPublicKey otherPartyKey;

  private org.bouncycastle.pqc.crypto.newhope.NHExchangePairGenerator exchangePairGenerator;

  private byte[] shared;

  public org.bouncycastle.pqc.jcajce.provider.newhope.KeyAgreementSpi();
    Code:
       0: aload_0
       1: ldc           #1                  // String NH
       3: aconst_null
       4: invokespecial #103                // Method org/bouncycastle/jcajce/provider/asymmetric/util/BaseAgreementSpi."<init>":(Ljava/lang/String;Lorg/bouncycastle/crypto/DerivationFunction;)V
       7: return

  protected void engineInit(java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException;
    Code:
       0: aload_1
       1: ifnull        32
       4: aload_0
       5: new           #54                 // class org/bouncycastle/pqc/crypto/newhope/NHAgreement
       8: dup
       9: invokespecial #106                // Method org/bouncycastle/pqc/crypto/newhope/NHAgreement."<init>":()V
      12: putfield      #97                 // Field agreement:Lorg/bouncycastle/pqc/crypto/newhope/NHAgreement;
      15: aload_0
      16: getfield      #97                 // Field agreement:Lorg/bouncycastle/pqc/crypto/newhope/NHAgreement;
      19: aload_1
      20: checkcast     #57                 // class org/bouncycastle/pqc/jcajce/provider/newhope/BCNHPrivateKey
      23: invokevirtual #111                // Method org/bouncycastle/pqc/jcajce/provider/newhope/BCNHPrivateKey.getKeyParams:()Lorg/bouncycastle/crypto/CipherParameters;
      26: invokevirtual #107                // Method org/bouncycastle/pqc/crypto/newhope/NHAgreement.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
      29: goto          44
      32: aload_0
      33: new           #55                 // class org/bouncycastle/pqc/crypto/newhope/NHExchangePairGenerator
      36: dup
      37: aload_2
      38: invokespecial #109                // Method org/bouncycastle/pqc/crypto/newhope/NHExchangePairGenerator."<init>":(Ljava/security/SecureRandom;)V
      41: putfield      #98                 // Field exchangePairGenerator:Lorg/bouncycastle/pqc/crypto/newhope/NHExchangePairGenerator;
      44: return

  protected void engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
    Code:
       0: new           #48                 // class java/security/InvalidAlgorithmParameterException
       3: dup
       4: ldc           #3                  // String NewHope does not require parameters
       6: invokespecial #102                // Method java/security/InvalidAlgorithmParameterException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected java.security.Key engineDoPhase(java.security.Key, boolean) throws java.security.InvalidKeyException, java.lang.IllegalStateException;
    Code:
       0: iload_2
       1: ifne          14
       4: new           #46                 // class java/lang/IllegalStateException
       7: dup
       8: ldc           #2                  // String NewHope can only be between two parties.
      10: invokespecial #100                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: checkcast     #58                 // class org/bouncycastle/pqc/jcajce/provider/newhope/BCNHPublicKey
      19: putfield      #99                 // Field otherPartyKey:Lorg/bouncycastle/pqc/jcajce/provider/newhope/BCNHPublicKey;
      22: aload_0
      23: getfield      #98                 // Field exchangePairGenerator:Lorg/bouncycastle/pqc/crypto/newhope/NHExchangePairGenerator;
      26: ifnull        70
      29: aload_0
      30: getfield      #98                 // Field exchangePairGenerator:Lorg/bouncycastle/pqc/crypto/newhope/NHExchangePairGenerator;
      33: aload_0
      34: getfield      #99                 // Field otherPartyKey:Lorg/bouncycastle/pqc/jcajce/provider/newhope/BCNHPublicKey;
      37: invokevirtual #112                // Method org/bouncycastle/pqc/jcajce/provider/newhope/BCNHPublicKey.getKeyParams:()Lorg/bouncycastle/crypto/CipherParameters;
      40: checkcast     #51                 // class org/bouncycastle/crypto/params/AsymmetricKeyParameter
      43: invokevirtual #110                // Method org/bouncycastle/pqc/crypto/newhope/NHExchangePairGenerator.generateExchange:(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)Lorg/bouncycastle/pqc/crypto/ExchangePair;
      46: astore_3
      47: aload_0
      48: aload_3
      49: invokevirtual #104                // Method org/bouncycastle/pqc/crypto/ExchangePair.getSharedValue:()[B
      52: putfield      #96                 // Field shared:[B
      55: new           #58                 // class org/bouncycastle/pqc/jcajce/provider/newhope/BCNHPublicKey
      58: dup
      59: aload_3
      60: invokevirtual #105                // Method org/bouncycastle/pqc/crypto/ExchangePair.getPublicKey:()Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      63: checkcast     #56                 // class org/bouncycastle/pqc/crypto/newhope/NHPublicKeyParameters
      66: invokespecial #113                // Method org/bouncycastle/pqc/jcajce/provider/newhope/BCNHPublicKey."<init>":(Lorg/bouncycastle/pqc/crypto/newhope/NHPublicKeyParameters;)V
      69: areturn
      70: aload_0
      71: aload_0
      72: getfield      #97                 // Field agreement:Lorg/bouncycastle/pqc/crypto/newhope/NHAgreement;
      75: aload_0
      76: getfield      #99                 // Field otherPartyKey:Lorg/bouncycastle/pqc/jcajce/provider/newhope/BCNHPublicKey;
      79: invokevirtual #112                // Method org/bouncycastle/pqc/jcajce/provider/newhope/BCNHPublicKey.getKeyParams:()Lorg/bouncycastle/crypto/CipherParameters;
      82: invokevirtual #108                // Method org/bouncycastle/pqc/crypto/newhope/NHAgreement.calculateAgreement:(Lorg/bouncycastle/crypto/CipherParameters;)[B
      85: putfield      #96                 // Field shared:[B
      88: aconst_null
      89: areturn

  protected byte[] engineGenerateSecret() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #96                 // Field shared:[B
       4: invokestatic  #115                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: astore_1
       8: aload_0
       9: getfield      #96                 // Field shared:[B
      12: iconst_0
      13: invokestatic  #116                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      16: aload_1
      17: areturn

  protected int engineGenerateSecret(byte[], int) throws java.lang.IllegalStateException, javax.crypto.ShortBufferException;
    Code:
       0: aload_0
       1: getfield      #96                 // Field shared:[B
       4: iconst_0
       5: aload_1
       6: iload_2
       7: aload_0
       8: getfield      #96                 // Field shared:[B
      11: arraylength
      12: invokestatic  #101                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      15: aload_0
      16: getfield      #96                 // Field shared:[B
      19: iconst_0
      20: invokestatic  #116                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      23: aload_0
      24: getfield      #96                 // Field shared:[B
      27: arraylength
      28: ireturn

  protected byte[] calcSecret();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method engineGenerateSecret:()[B
       4: areturn
}
