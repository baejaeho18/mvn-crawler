public class org.bouncycastle.crypto.engines.CamelliaLightEngine implements org.bouncycastle.crypto.BlockCipher {
  private static final int BLOCK_SIZE;

  private static final int MASK8;

  private boolean initialized;

  private boolean _keyis128;

  private int[] subkey;

  private int[] kw;

  private int[] ke;

  private int[] state;

  private static final int[] SIGMA;

  private static final byte[] SBOX1;

  private static int rightRotate(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iushr
       3: iload_0
       4: bipush        32
       6: iload_1
       7: isub
       8: ishl
       9: iadd
      10: ireturn

  private static int leftRotate(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: ishl
       3: iload_0
       4: bipush        32
       6: iload_1
       7: isub
       8: iushr
       9: iadd
      10: ireturn

  private static void roldq(int, int[], int, int[], int);
    Code:
       0: aload_3
       1: iconst_0
       2: iload         4
       4: iadd
       5: aload_1
       6: iconst_0
       7: iload_2
       8: iadd
       9: iaload
      10: iload_0
      11: ishl
      12: aload_1
      13: iconst_1
      14: iload_2
      15: iadd
      16: iaload
      17: bipush        32
      19: iload_0
      20: isub
      21: iushr
      22: ior
      23: iastore
      24: aload_3
      25: iconst_1
      26: iload         4
      28: iadd
      29: aload_1
      30: iconst_1
      31: iload_2
      32: iadd
      33: iaload
      34: iload_0
      35: ishl
      36: aload_1
      37: iconst_2
      38: iload_2
      39: iadd
      40: iaload
      41: bipush        32
      43: iload_0
      44: isub
      45: iushr
      46: ior
      47: iastore
      48: aload_3
      49: iconst_2
      50: iload         4
      52: iadd
      53: aload_1
      54: iconst_2
      55: iload_2
      56: iadd
      57: iaload
      58: iload_0
      59: ishl
      60: aload_1
      61: iconst_3
      62: iload_2
      63: iadd
      64: iaload
      65: bipush        32
      67: iload_0
      68: isub
      69: iushr
      70: ior
      71: iastore
      72: aload_3
      73: iconst_3
      74: iload         4
      76: iadd
      77: aload_1
      78: iconst_3
      79: iload_2
      80: iadd
      81: iaload
      82: iload_0
      83: ishl
      84: aload_1
      85: iconst_0
      86: iload_2
      87: iadd
      88: iaload
      89: bipush        32
      91: iload_0
      92: isub
      93: iushr
      94: ior
      95: iastore
      96: aload_1
      97: iconst_0
      98: iload_2
      99: iadd
     100: aload_3
     101: iconst_0
     102: iload         4
     104: iadd
     105: iaload
     106: iastore
     107: aload_1
     108: iconst_1
     109: iload_2
     110: iadd
     111: aload_3
     112: iconst_1
     113: iload         4
     115: iadd
     116: iaload
     117: iastore
     118: aload_1
     119: iconst_2
     120: iload_2
     121: iadd
     122: aload_3
     123: iconst_2
     124: iload         4
     126: iadd
     127: iaload
     128: iastore
     129: aload_1
     130: iconst_3
     131: iload_2
     132: iadd
     133: aload_3
     134: iconst_3
     135: iload         4
     137: iadd
     138: iaload
     139: iastore
     140: return

  private static void decroldq(int, int[], int, int[], int);
    Code:
       0: aload_3
       1: iconst_2
       2: iload         4
       4: iadd
       5: aload_1
       6: iconst_0
       7: iload_2
       8: iadd
       9: iaload
      10: iload_0
      11: ishl
      12: aload_1
      13: iconst_1
      14: iload_2
      15: iadd
      16: iaload
      17: bipush        32
      19: iload_0
      20: isub
      21: iushr
      22: ior
      23: iastore
      24: aload_3
      25: iconst_3
      26: iload         4
      28: iadd
      29: aload_1
      30: iconst_1
      31: iload_2
      32: iadd
      33: iaload
      34: iload_0
      35: ishl
      36: aload_1
      37: iconst_2
      38: iload_2
      39: iadd
      40: iaload
      41: bipush        32
      43: iload_0
      44: isub
      45: iushr
      46: ior
      47: iastore
      48: aload_3
      49: iconst_0
      50: iload         4
      52: iadd
      53: aload_1
      54: iconst_2
      55: iload_2
      56: iadd
      57: iaload
      58: iload_0
      59: ishl
      60: aload_1
      61: iconst_3
      62: iload_2
      63: iadd
      64: iaload
      65: bipush        32
      67: iload_0
      68: isub
      69: iushr
      70: ior
      71: iastore
      72: aload_3
      73: iconst_1
      74: iload         4
      76: iadd
      77: aload_1
      78: iconst_3
      79: iload_2
      80: iadd
      81: iaload
      82: iload_0
      83: ishl
      84: aload_1
      85: iconst_0
      86: iload_2
      87: iadd
      88: iaload
      89: bipush        32
      91: iload_0
      92: isub
      93: iushr
      94: ior
      95: iastore
      96: aload_1
      97: iconst_0
      98: iload_2
      99: iadd
     100: aload_3
     101: iconst_2
     102: iload         4
     104: iadd
     105: iaload
     106: iastore
     107: aload_1
     108: iconst_1
     109: iload_2
     110: iadd
     111: aload_3
     112: iconst_3
     113: iload         4
     115: iadd
     116: iaload
     117: iastore
     118: aload_1
     119: iconst_2
     120: iload_2
     121: iadd
     122: aload_3
     123: iconst_0
     124: iload         4
     126: iadd
     127: iaload
     128: iastore
     129: aload_1
     130: iconst_3
     131: iload_2
     132: iadd
     133: aload_3
     134: iconst_1
     135: iload         4
     137: iadd
     138: iaload
     139: iastore
     140: return

  private static void roldqo32(int, int[], int, int[], int);
    Code:
       0: aload_3
       1: iconst_0
       2: iload         4
       4: iadd
       5: aload_1
       6: iconst_1
       7: iload_2
       8: iadd
       9: iaload
      10: iload_0
      11: bipush        32
      13: isub
      14: ishl
      15: aload_1
      16: iconst_2
      17: iload_2
      18: iadd
      19: iaload
      20: bipush        64
      22: iload_0
      23: isub
      24: iushr
      25: ior
      26: iastore
      27: aload_3
      28: iconst_1
      29: iload         4
      31: iadd
      32: aload_1
      33: iconst_2
      34: iload_2
      35: iadd
      36: iaload
      37: iload_0
      38: bipush        32
      40: isub
      41: ishl
      42: aload_1
      43: iconst_3
      44: iload_2
      45: iadd
      46: iaload
      47: bipush        64
      49: iload_0
      50: isub
      51: iushr
      52: ior
      53: iastore
      54: aload_3
      55: iconst_2
      56: iload         4
      58: iadd
      59: aload_1
      60: iconst_3
      61: iload_2
      62: iadd
      63: iaload
      64: iload_0
      65: bipush        32
      67: isub
      68: ishl
      69: aload_1
      70: iconst_0
      71: iload_2
      72: iadd
      73: iaload
      74: bipush        64
      76: iload_0
      77: isub
      78: iushr
      79: ior
      80: iastore
      81: aload_3
      82: iconst_3
      83: iload         4
      85: iadd
      86: aload_1
      87: iconst_0
      88: iload_2
      89: iadd
      90: iaload
      91: iload_0
      92: bipush        32
      94: isub
      95: ishl
      96: aload_1
      97: iconst_1
      98: iload_2
      99: iadd
     100: iaload
     101: bipush        64
     103: iload_0
     104: isub
     105: iushr
     106: ior
     107: iastore
     108: aload_1
     109: iconst_0
     110: iload_2
     111: iadd
     112: aload_3
     113: iconst_0
     114: iload         4
     116: iadd
     117: iaload
     118: iastore
     119: aload_1
     120: iconst_1
     121: iload_2
     122: iadd
     123: aload_3
     124: iconst_1
     125: iload         4
     127: iadd
     128: iaload
     129: iastore
     130: aload_1
     131: iconst_2
     132: iload_2
     133: iadd
     134: aload_3
     135: iconst_2
     136: iload         4
     138: iadd
     139: iaload
     140: iastore
     141: aload_1
     142: iconst_3
     143: iload_2
     144: iadd
     145: aload_3
     146: iconst_3
     147: iload         4
     149: iadd
     150: iaload
     151: iastore
     152: return

  private static void decroldqo32(int, int[], int, int[], int);
    Code:
       0: aload_3
       1: iconst_2
       2: iload         4
       4: iadd
       5: aload_1
       6: iconst_1
       7: iload_2
       8: iadd
       9: iaload
      10: iload_0
      11: bipush        32
      13: isub
      14: ishl
      15: aload_1
      16: iconst_2
      17: iload_2
      18: iadd
      19: iaload
      20: bipush        64
      22: iload_0
      23: isub
      24: iushr
      25: ior
      26: iastore
      27: aload_3
      28: iconst_3
      29: iload         4
      31: iadd
      32: aload_1
      33: iconst_2
      34: iload_2
      35: iadd
      36: iaload
      37: iload_0
      38: bipush        32
      40: isub
      41: ishl
      42: aload_1
      43: iconst_3
      44: iload_2
      45: iadd
      46: iaload
      47: bipush        64
      49: iload_0
      50: isub
      51: iushr
      52: ior
      53: iastore
      54: aload_3
      55: iconst_0
      56: iload         4
      58: iadd
      59: aload_1
      60: iconst_3
      61: iload_2
      62: iadd
      63: iaload
      64: iload_0
      65: bipush        32
      67: isub
      68: ishl
      69: aload_1
      70: iconst_0
      71: iload_2
      72: iadd
      73: iaload
      74: bipush        64
      76: iload_0
      77: isub
      78: iushr
      79: ior
      80: iastore
      81: aload_3
      82: iconst_1
      83: iload         4
      85: iadd
      86: aload_1
      87: iconst_0
      88: iload_2
      89: iadd
      90: iaload
      91: iload_0
      92: bipush        32
      94: isub
      95: ishl
      96: aload_1
      97: iconst_1
      98: iload_2
      99: iadd
     100: iaload
     101: bipush        64
     103: iload_0
     104: isub
     105: iushr
     106: ior
     107: iastore
     108: aload_1
     109: iconst_0
     110: iload_2
     111: iadd
     112: aload_3
     113: iconst_2
     114: iload         4
     116: iadd
     117: iaload
     118: iastore
     119: aload_1
     120: iconst_1
     121: iload_2
     122: iadd
     123: aload_3
     124: iconst_3
     125: iload         4
     127: iadd
     128: iaload
     129: iastore
     130: aload_1
     131: iconst_2
     132: iload_2
     133: iadd
     134: aload_3
     135: iconst_0
     136: iload         4
     138: iadd
     139: iaload
     140: iastore
     141: aload_1
     142: iconst_3
     143: iload_2
     144: iadd
     145: aload_3
     146: iconst_1
     147: iload         4
     149: iadd
     150: iaload
     151: iastore
     152: return

  private int bytes2int(byte[], int);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iload         4
       7: iconst_4
       8: if_icmpge     33
      11: iload_3
      12: bipush        8
      14: ishl
      15: aload_1
      16: iload         4
      18: iload_2
      19: iadd
      20: baload
      21: sipush        255
      24: iand
      25: iadd
      26: istore_3
      27: iinc          4, 1
      30: goto          5
      33: iload_3
      34: ireturn

  private void int2bytes(int, byte[], int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iconst_4
       6: if_icmpge     30
       9: aload_2
      10: iconst_3
      11: iload         4
      13: isub
      14: iload_3
      15: iadd
      16: iload_1
      17: i2b
      18: bastore
      19: iload_1
      20: bipush        8
      22: iushr
      23: istore_1
      24: iinc          4, 1
      27: goto          3
      30: return

  private byte lRot8(byte, int);
    Code:
       0: iload_1
       1: iload_2
       2: ishl
       3: iload_1
       4: sipush        255
       7: iand
       8: bipush        8
      10: iload_2
      11: isub
      12: iushr
      13: ior
      14: i2b
      15: ireturn

  private int sbox2(int);
    Code:
       0: aload_0
       1: getstatic     #127                // Field SBOX1:[B
       4: iload_1
       5: baload
       6: iconst_1
       7: invokespecial #138                // Method lRot8:(BI)B
      10: sipush        255
      13: iand
      14: ireturn

  private int sbox3(int);
    Code:
       0: aload_0
       1: getstatic     #127                // Field SBOX1:[B
       4: iload_1
       5: baload
       6: bipush        7
       8: invokespecial #138                // Method lRot8:(BI)B
      11: sipush        255
      14: iand
      15: ireturn

  private int sbox4(int);
    Code:
       0: getstatic     #127                // Field SBOX1:[B
       3: aload_0
       4: iload_1
       5: i2b
       6: iconst_1
       7: invokespecial #138                // Method lRot8:(BI)B
      10: sipush        255
      13: iand
      14: baload
      15: sipush        255
      18: iand
      19: ireturn

  private void camelliaF2(int[], int[], int);
    Code:
       0: aload_1
       1: iconst_0
       2: iaload
       3: aload_2
       4: iconst_0
       5: iload_3
       6: iadd
       7: iaload
       8: ixor
       9: istore        4
      11: aload_0
      12: iload         4
      14: sipush        255
      17: iand
      18: invokespecial #141                // Method sbox4:(I)I
      21: istore        6
      23: iload         6
      25: aload_0
      26: iload         4
      28: bipush        8
      30: iushr
      31: sipush        255
      34: iand
      35: invokespecial #140                // Method sbox3:(I)I
      38: bipush        8
      40: ishl
      41: ior
      42: istore        6
      44: iload         6
      46: aload_0
      47: iload         4
      49: bipush        16
      51: iushr
      52: sipush        255
      55: iand
      56: invokespecial #139                // Method sbox2:(I)I
      59: bipush        16
      61: ishl
      62: ior
      63: istore        6
      65: iload         6
      67: getstatic     #127                // Field SBOX1:[B
      70: iload         4
      72: bipush        24
      74: iushr
      75: sipush        255
      78: iand
      79: baload
      80: sipush        255
      83: iand
      84: bipush        24
      86: ishl
      87: ior
      88: istore        6
      90: aload_1
      91: iconst_1
      92: iaload
      93: aload_2
      94: iconst_1
      95: iload_3
      96: iadd
      97: iaload
      98: ixor
      99: istore        5
     101: getstatic     #127                // Field SBOX1:[B
     104: iload         5
     106: sipush        255
     109: iand
     110: baload
     111: sipush        255
     114: iand
     115: istore        7
     117: iload         7
     119: aload_0
     120: iload         5
     122: bipush        8
     124: iushr
     125: sipush        255
     128: iand
     129: invokespecial #141                // Method sbox4:(I)I
     132: bipush        8
     134: ishl
     135: ior
     136: istore        7
     138: iload         7
     140: aload_0
     141: iload         5
     143: bipush        16
     145: iushr
     146: sipush        255
     149: iand
     150: invokespecial #140                // Method sbox3:(I)I
     153: bipush        16
     155: ishl
     156: ior
     157: istore        7
     159: iload         7
     161: aload_0
     162: iload         5
     164: bipush        24
     166: iushr
     167: sipush        255
     170: iand
     171: invokespecial #139                // Method sbox2:(I)I
     174: bipush        24
     176: ishl
     177: ior
     178: istore        7
     180: iload         7
     182: bipush        8
     184: invokestatic  #142                // Method leftRotate:(II)I
     187: istore        7
     189: iload         6
     191: iload         7
     193: ixor
     194: istore        6
     196: iload         7
     198: bipush        8
     200: invokestatic  #142                // Method leftRotate:(II)I
     203: iload         6
     205: ixor
     206: istore        7
     208: iload         6
     210: bipush        8
     212: invokestatic  #143                // Method rightRotate:(II)I
     215: iload         7
     217: ixor
     218: istore        6
     220: aload_1
     221: iconst_2
     222: dup2
     223: iaload
     224: iload         7
     226: bipush        16
     228: invokestatic  #142                // Method leftRotate:(II)I
     231: iload         6
     233: ixor
     234: ixor
     235: iastore
     236: aload_1
     237: iconst_3
     238: dup2
     239: iaload
     240: iload         6
     242: bipush        8
     244: invokestatic  #142                // Method leftRotate:(II)I
     247: ixor
     248: iastore
     249: aload_1
     250: iconst_2
     251: iaload
     252: aload_2
     253: iconst_2
     254: iload_3
     255: iadd
     256: iaload
     257: ixor
     258: istore        4
     260: aload_0
     261: iload         4
     263: sipush        255
     266: iand
     267: invokespecial #141                // Method sbox4:(I)I
     270: istore        6
     272: iload         6
     274: aload_0
     275: iload         4
     277: bipush        8
     279: iushr
     280: sipush        255
     283: iand
     284: invokespecial #140                // Method sbox3:(I)I
     287: bipush        8
     289: ishl
     290: ior
     291: istore        6
     293: iload         6
     295: aload_0
     296: iload         4
     298: bipush        16
     300: iushr
     301: sipush        255
     304: iand
     305: invokespecial #139                // Method sbox2:(I)I
     308: bipush        16
     310: ishl
     311: ior
     312: istore        6
     314: iload         6
     316: getstatic     #127                // Field SBOX1:[B
     319: iload         4
     321: bipush        24
     323: iushr
     324: sipush        255
     327: iand
     328: baload
     329: sipush        255
     332: iand
     333: bipush        24
     335: ishl
     336: ior
     337: istore        6
     339: aload_1
     340: iconst_3
     341: iaload
     342: aload_2
     343: iconst_3
     344: iload_3
     345: iadd
     346: iaload
     347: ixor
     348: istore        5
     350: getstatic     #127                // Field SBOX1:[B
     353: iload         5
     355: sipush        255
     358: iand
     359: baload
     360: sipush        255
     363: iand
     364: istore        7
     366: iload         7
     368: aload_0
     369: iload         5
     371: bipush        8
     373: iushr
     374: sipush        255
     377: iand
     378: invokespecial #141                // Method sbox4:(I)I
     381: bipush        8
     383: ishl
     384: ior
     385: istore        7
     387: iload         7
     389: aload_0
     390: iload         5
     392: bipush        16
     394: iushr
     395: sipush        255
     398: iand
     399: invokespecial #140                // Method sbox3:(I)I
     402: bipush        16
     404: ishl
     405: ior
     406: istore        7
     408: iload         7
     410: aload_0
     411: iload         5
     413: bipush        24
     415: iushr
     416: sipush        255
     419: iand
     420: invokespecial #139                // Method sbox2:(I)I
     423: bipush        24
     425: ishl
     426: ior
     427: istore        7
     429: iload         7
     431: bipush        8
     433: invokestatic  #142                // Method leftRotate:(II)I
     436: istore        7
     438: iload         6
     440: iload         7
     442: ixor
     443: istore        6
     445: iload         7
     447: bipush        8
     449: invokestatic  #142                // Method leftRotate:(II)I
     452: iload         6
     454: ixor
     455: istore        7
     457: iload         6
     459: bipush        8
     461: invokestatic  #143                // Method rightRotate:(II)I
     464: iload         7
     466: ixor
     467: istore        6
     469: aload_1
     470: iconst_0
     471: dup2
     472: iaload
     473: iload         7
     475: bipush        16
     477: invokestatic  #142                // Method leftRotate:(II)I
     480: iload         6
     482: ixor
     483: ixor
     484: iastore
     485: aload_1
     486: iconst_1
     487: dup2
     488: iaload
     489: iload         6
     491: bipush        8
     493: invokestatic  #142                // Method leftRotate:(II)I
     496: ixor
     497: iastore
     498: return

  private void camelliaFLs(int[], int[], int);
    Code:
       0: aload_1
       1: iconst_1
       2: dup2
       3: iaload
       4: aload_1
       5: iconst_0
       6: iaload
       7: aload_2
       8: iconst_0
       9: iload_3
      10: iadd
      11: iaload
      12: iand
      13: iconst_1
      14: invokestatic  #142                // Method leftRotate:(II)I
      17: ixor
      18: iastore
      19: aload_1
      20: iconst_0
      21: dup2
      22: iaload
      23: aload_2
      24: iconst_1
      25: iload_3
      26: iadd
      27: iaload
      28: aload_1
      29: iconst_1
      30: iaload
      31: ior
      32: ixor
      33: iastore
      34: aload_1
      35: iconst_2
      36: dup2
      37: iaload
      38: aload_2
      39: iconst_3
      40: iload_3
      41: iadd
      42: iaload
      43: aload_1
      44: iconst_3
      45: iaload
      46: ior
      47: ixor
      48: iastore
      49: aload_1
      50: iconst_3
      51: dup2
      52: iaload
      53: aload_2
      54: iconst_2
      55: iload_3
      56: iadd
      57: iaload
      58: aload_1
      59: iconst_2
      60: iaload
      61: iand
      62: iconst_1
      63: invokestatic  #142                // Method leftRotate:(II)I
      66: ixor
      67: iastore
      68: return

  private void setKey(boolean, byte[]);
    Code:
       0: bipush        8
       2: newarray       int
       4: astore_3
       5: iconst_4
       6: newarray       int
       8: astore        4
      10: iconst_4
      11: newarray       int
      13: astore        5
      15: iconst_4
      16: newarray       int
      18: astore        6
      20: aload_2
      21: arraylength
      22: lookupswitch  { // 3
                    16: 56
                    24: 120
                    32: 204
               default: 292
          }
      56: aload_0
      57: iconst_1
      58: putfield      #125                // Field _keyis128:Z
      61: aload_3
      62: iconst_0
      63: aload_0
      64: aload_2
      65: iconst_0
      66: invokespecial #150                // Method bytes2int:([BI)I
      69: iastore
      70: aload_3
      71: iconst_1
      72: aload_0
      73: aload_2
      74: iconst_4
      75: invokespecial #150                // Method bytes2int:([BI)I
      78: iastore
      79: aload_3
      80: iconst_2
      81: aload_0
      82: aload_2
      83: bipush        8
      85: invokespecial #150                // Method bytes2int:([BI)I
      88: iastore
      89: aload_3
      90: iconst_3
      91: aload_0
      92: aload_2
      93: bipush        12
      95: invokespecial #150                // Method bytes2int:([BI)I
      98: iastore
      99: aload_3
     100: iconst_4
     101: aload_3
     102: iconst_5
     103: aload_3
     104: bipush        6
     106: aload_3
     107: bipush        7
     109: iconst_0
     110: dup_x2
     111: iastore
     112: dup_x2
     113: iastore
     114: dup_x2
     115: iastore
     116: iastore
     117: goto          302
     120: aload_3
     121: iconst_0
     122: aload_0
     123: aload_2
     124: iconst_0
     125: invokespecial #150                // Method bytes2int:([BI)I
     128: iastore
     129: aload_3
     130: iconst_1
     131: aload_0
     132: aload_2
     133: iconst_4
     134: invokespecial #150                // Method bytes2int:([BI)I
     137: iastore
     138: aload_3
     139: iconst_2
     140: aload_0
     141: aload_2
     142: bipush        8
     144: invokespecial #150                // Method bytes2int:([BI)I
     147: iastore
     148: aload_3
     149: iconst_3
     150: aload_0
     151: aload_2
     152: bipush        12
     154: invokespecial #150                // Method bytes2int:([BI)I
     157: iastore
     158: aload_3
     159: iconst_4
     160: aload_0
     161: aload_2
     162: bipush        16
     164: invokespecial #150                // Method bytes2int:([BI)I
     167: iastore
     168: aload_3
     169: iconst_5
     170: aload_0
     171: aload_2
     172: bipush        20
     174: invokespecial #150                // Method bytes2int:([BI)I
     177: iastore
     178: aload_3
     179: bipush        6
     181: aload_3
     182: iconst_4
     183: iaload
     184: iconst_m1
     185: ixor
     186: iastore
     187: aload_3
     188: bipush        7
     190: aload_3
     191: iconst_5
     192: iaload
     193: iconst_m1
     194: ixor
     195: iastore
     196: aload_0
     197: iconst_0
     198: putfield      #125                // Field _keyis128:Z
     201: goto          302
     204: aload_3
     205: iconst_0
     206: aload_0
     207: aload_2
     208: iconst_0
     209: invokespecial #150                // Method bytes2int:([BI)I
     212: iastore
     213: aload_3
     214: iconst_1
     215: aload_0
     216: aload_2
     217: iconst_4
     218: invokespecial #150                // Method bytes2int:([BI)I
     221: iastore
     222: aload_3
     223: iconst_2
     224: aload_0
     225: aload_2
     226: bipush        8
     228: invokespecial #150                // Method bytes2int:([BI)I
     231: iastore
     232: aload_3
     233: iconst_3
     234: aload_0
     235: aload_2
     236: bipush        12
     238: invokespecial #150                // Method bytes2int:([BI)I
     241: iastore
     242: aload_3
     243: iconst_4
     244: aload_0
     245: aload_2
     246: bipush        16
     248: invokespecial #150                // Method bytes2int:([BI)I
     251: iastore
     252: aload_3
     253: iconst_5
     254: aload_0
     255: aload_2
     256: bipush        20
     258: invokespecial #150                // Method bytes2int:([BI)I
     261: iastore
     262: aload_3
     263: bipush        6
     265: aload_0
     266: aload_2
     267: bipush        24
     269: invokespecial #150                // Method bytes2int:([BI)I
     272: iastore
     273: aload_3
     274: bipush        7
     276: aload_0
     277: aload_2
     278: bipush        28
     280: invokespecial #150                // Method bytes2int:([BI)I
     283: iastore
     284: aload_0
     285: iconst_0
     286: putfield      #125                // Field _keyis128:Z
     289: goto          302
     292: new           #86                 // class java/lang/IllegalArgumentException
     295: dup
     296: ldc           #16                 // String key sizes are only 16/24/32 bytes.
     298: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     301: athrow
     302: iconst_0
     303: istore        7
     305: iload         7
     307: iconst_4
     308: if_icmpge     333
     311: aload         4
     313: iload         7
     315: aload_3
     316: iload         7
     318: iaload
     319: aload_3
     320: iload         7
     322: iconst_4
     323: iadd
     324: iaload
     325: ixor
     326: iastore
     327: iinc          7, 1
     330: goto          305
     333: aload_0
     334: aload         4
     336: getstatic     #128                // Field SIGMA:[I
     339: iconst_0
     340: invokespecial #153                // Method camelliaF2:([I[II)V
     343: iconst_0
     344: istore        7
     346: iload         7
     348: iconst_4
     349: if_icmpge     370
     352: aload         4
     354: iload         7
     356: dup2
     357: iaload
     358: aload_3
     359: iload         7
     361: iaload
     362: ixor
     363: iastore
     364: iinc          7, 1
     367: goto          346
     370: aload_0
     371: aload         4
     373: getstatic     #128                // Field SIGMA:[I
     376: iconst_4
     377: invokespecial #153                // Method camelliaF2:([I[II)V
     380: aload_0
     381: getfield      #125                // Field _keyis128:Z
     384: ifeq          946
     387: iload_1
     388: ifeq          666
     391: aload_0
     392: getfield      #130                // Field kw:[I
     395: iconst_0
     396: aload_3
     397: iconst_0
     398: iaload
     399: iastore
     400: aload_0
     401: getfield      #130                // Field kw:[I
     404: iconst_1
     405: aload_3
     406: iconst_1
     407: iaload
     408: iastore
     409: aload_0
     410: getfield      #130                // Field kw:[I
     413: iconst_2
     414: aload_3
     415: iconst_2
     416: iaload
     417: iastore
     418: aload_0
     419: getfield      #130                // Field kw:[I
     422: iconst_3
     423: aload_3
     424: iconst_3
     425: iaload
     426: iastore
     427: bipush        15
     429: aload_3
     430: iconst_0
     431: aload_0
     432: getfield      #132                // Field subkey:[I
     435: iconst_4
     436: invokestatic  #147                // Method roldq:(I[II[II)V
     439: bipush        30
     441: aload_3
     442: iconst_0
     443: aload_0
     444: getfield      #132                // Field subkey:[I
     447: bipush        12
     449: invokestatic  #147                // Method roldq:(I[II[II)V
     452: bipush        15
     454: aload_3
     455: iconst_0
     456: aload         6
     458: iconst_0
     459: invokestatic  #147                // Method roldq:(I[II[II)V
     462: aload_0
     463: getfield      #132                // Field subkey:[I
     466: bipush        18
     468: aload         6
     470: iconst_2
     471: iaload
     472: iastore
     473: aload_0
     474: getfield      #132                // Field subkey:[I
     477: bipush        19
     479: aload         6
     481: iconst_3
     482: iaload
     483: iastore
     484: bipush        17
     486: aload_3
     487: iconst_0
     488: aload_0
     489: getfield      #129                // Field ke:[I
     492: iconst_4
     493: invokestatic  #147                // Method roldq:(I[II[II)V
     496: bipush        17
     498: aload_3
     499: iconst_0
     500: aload_0
     501: getfield      #132                // Field subkey:[I
     504: bipush        24
     506: invokestatic  #147                // Method roldq:(I[II[II)V
     509: bipush        17
     511: aload_3
     512: iconst_0
     513: aload_0
     514: getfield      #132                // Field subkey:[I
     517: bipush        32
     519: invokestatic  #147                // Method roldq:(I[II[II)V
     522: aload_0
     523: getfield      #132                // Field subkey:[I
     526: iconst_0
     527: aload         4
     529: iconst_0
     530: iaload
     531: iastore
     532: aload_0
     533: getfield      #132                // Field subkey:[I
     536: iconst_1
     537: aload         4
     539: iconst_1
     540: iaload
     541: iastore
     542: aload_0
     543: getfield      #132                // Field subkey:[I
     546: iconst_2
     547: aload         4
     549: iconst_2
     550: iaload
     551: iastore
     552: aload_0
     553: getfield      #132                // Field subkey:[I
     556: iconst_3
     557: aload         4
     559: iconst_3
     560: iaload
     561: iastore
     562: bipush        15
     564: aload         4
     566: iconst_0
     567: aload_0
     568: getfield      #132                // Field subkey:[I
     571: bipush        8
     573: invokestatic  #147                // Method roldq:(I[II[II)V
     576: bipush        15
     578: aload         4
     580: iconst_0
     581: aload_0
     582: getfield      #129                // Field ke:[I
     585: iconst_0
     586: invokestatic  #147                // Method roldq:(I[II[II)V
     589: bipush        15
     591: aload         4
     593: iconst_0
     594: aload         6
     596: iconst_0
     597: invokestatic  #147                // Method roldq:(I[II[II)V
     600: aload_0
     601: getfield      #132                // Field subkey:[I
     604: bipush        16
     606: aload         6
     608: iconst_0
     609: iaload
     610: iastore
     611: aload_0
     612: getfield      #132                // Field subkey:[I
     615: bipush        17
     617: aload         6
     619: iconst_1
     620: iaload
     621: iastore
     622: bipush        15
     624: aload         4
     626: iconst_0
     627: aload_0
     628: getfield      #132                // Field subkey:[I
     631: bipush        20
     633: invokestatic  #147                // Method roldq:(I[II[II)V
     636: bipush        34
     638: aload         4
     640: iconst_0
     641: aload_0
     642: getfield      #132                // Field subkey:[I
     645: bipush        28
     647: invokestatic  #148                // Method roldqo32:(I[II[II)V
     650: bipush        17
     652: aload         4
     654: iconst_0
     655: aload_0
     656: getfield      #130                // Field kw:[I
     659: iconst_4
     660: invokestatic  #147                // Method roldq:(I[II[II)V
     663: goto          1606
     666: aload_0
     667: getfield      #130                // Field kw:[I
     670: iconst_4
     671: aload_3
     672: iconst_0
     673: iaload
     674: iastore
     675: aload_0
     676: getfield      #130                // Field kw:[I
     679: iconst_5
     680: aload_3
     681: iconst_1
     682: iaload
     683: iastore
     684: aload_0
     685: getfield      #130                // Field kw:[I
     688: bipush        6
     690: aload_3
     691: iconst_2
     692: iaload
     693: iastore
     694: aload_0
     695: getfield      #130                // Field kw:[I
     698: bipush        7
     700: aload_3
     701: iconst_3
     702: iaload
     703: iastore
     704: bipush        15
     706: aload_3
     707: iconst_0
     708: aload_0
     709: getfield      #132                // Field subkey:[I
     712: bipush        28
     714: invokestatic  #145                // Method decroldq:(I[II[II)V
     717: bipush        30
     719: aload_3
     720: iconst_0
     721: aload_0
     722: getfield      #132                // Field subkey:[I
     725: bipush        20
     727: invokestatic  #145                // Method decroldq:(I[II[II)V
     730: bipush        15
     732: aload_3
     733: iconst_0
     734: aload         6
     736: iconst_0
     737: invokestatic  #145                // Method decroldq:(I[II[II)V
     740: aload_0
     741: getfield      #132                // Field subkey:[I
     744: bipush        16
     746: aload         6
     748: iconst_0
     749: iaload
     750: iastore
     751: aload_0
     752: getfield      #132                // Field subkey:[I
     755: bipush        17
     757: aload         6
     759: iconst_1
     760: iaload
     761: iastore
     762: bipush        17
     764: aload_3
     765: iconst_0
     766: aload_0
     767: getfield      #129                // Field ke:[I
     770: iconst_0
     771: invokestatic  #145                // Method decroldq:(I[II[II)V
     774: bipush        17
     776: aload_3
     777: iconst_0
     778: aload_0
     779: getfield      #132                // Field subkey:[I
     782: bipush        8
     784: invokestatic  #145                // Method decroldq:(I[II[II)V
     787: bipush        17
     789: aload_3
     790: iconst_0
     791: aload_0
     792: getfield      #132                // Field subkey:[I
     795: iconst_0
     796: invokestatic  #145                // Method decroldq:(I[II[II)V
     799: aload_0
     800: getfield      #132                // Field subkey:[I
     803: bipush        34
     805: aload         4
     807: iconst_0
     808: iaload
     809: iastore
     810: aload_0
     811: getfield      #132                // Field subkey:[I
     814: bipush        35
     816: aload         4
     818: iconst_1
     819: iaload
     820: iastore
     821: aload_0
     822: getfield      #132                // Field subkey:[I
     825: bipush        32
     827: aload         4
     829: iconst_2
     830: iaload
     831: iastore
     832: aload_0
     833: getfield      #132                // Field subkey:[I
     836: bipush        33
     838: aload         4
     840: iconst_3
     841: iaload
     842: iastore
     843: bipush        15
     845: aload         4
     847: iconst_0
     848: aload_0
     849: getfield      #132                // Field subkey:[I
     852: bipush        24
     854: invokestatic  #145                // Method decroldq:(I[II[II)V
     857: bipush        15
     859: aload         4
     861: iconst_0
     862: aload_0
     863: getfield      #129                // Field ke:[I
     866: iconst_4
     867: invokestatic  #145                // Method decroldq:(I[II[II)V
     870: bipush        15
     872: aload         4
     874: iconst_0
     875: aload         6
     877: iconst_0
     878: invokestatic  #145                // Method decroldq:(I[II[II)V
     881: aload_0
     882: getfield      #132                // Field subkey:[I
     885: bipush        18
     887: aload         6
     889: iconst_2
     890: iaload
     891: iastore
     892: aload_0
     893: getfield      #132                // Field subkey:[I
     896: bipush        19
     898: aload         6
     900: iconst_3
     901: iaload
     902: iastore
     903: bipush        15
     905: aload         4
     907: iconst_0
     908: aload_0
     909: getfield      #132                // Field subkey:[I
     912: bipush        12
     914: invokestatic  #145                // Method decroldq:(I[II[II)V
     917: bipush        34
     919: aload         4
     921: iconst_0
     922: aload_0
     923: getfield      #132                // Field subkey:[I
     926: iconst_4
     927: invokestatic  #146                // Method decroldqo32:(I[II[II)V
     930: bipush        17
     932: aload         4
     934: iconst_0
     935: aload_0
     936: getfield      #130                // Field kw:[I
     939: iconst_0
     940: invokestatic  #147                // Method roldq:(I[II[II)V
     943: goto          1606
     946: iconst_0
     947: istore        7
     949: iload         7
     951: iconst_4
     952: if_icmpge     978
     955: aload         5
     957: iload         7
     959: aload         4
     961: iload         7
     963: iaload
     964: aload_3
     965: iload         7
     967: iconst_4
     968: iadd
     969: iaload
     970: ixor
     971: iastore
     972: iinc          7, 1
     975: goto          949
     978: aload_0
     979: aload         5
     981: getstatic     #128                // Field SIGMA:[I
     984: bipush        8
     986: invokespecial #153                // Method camelliaF2:([I[II)V
     989: iload_1
     990: ifeq          1300
     993: aload_0
     994: getfield      #130                // Field kw:[I
     997: iconst_0
     998: aload_3
     999: iconst_0
    1000: iaload
    1001: iastore
    1002: aload_0
    1003: getfield      #130                // Field kw:[I
    1006: iconst_1
    1007: aload_3
    1008: iconst_1
    1009: iaload
    1010: iastore
    1011: aload_0
    1012: getfield      #130                // Field kw:[I
    1015: iconst_2
    1016: aload_3
    1017: iconst_2
    1018: iaload
    1019: iastore
    1020: aload_0
    1021: getfield      #130                // Field kw:[I
    1024: iconst_3
    1025: aload_3
    1026: iconst_3
    1027: iaload
    1028: iastore
    1029: bipush        45
    1031: aload_3
    1032: iconst_0
    1033: aload_0
    1034: getfield      #132                // Field subkey:[I
    1037: bipush        16
    1039: invokestatic  #148                // Method roldqo32:(I[II[II)V
    1042: bipush        15
    1044: aload_3
    1045: iconst_0
    1046: aload_0
    1047: getfield      #129                // Field ke:[I
    1050: iconst_4
    1051: invokestatic  #147                // Method roldq:(I[II[II)V
    1054: bipush        17
    1056: aload_3
    1057: iconst_0
    1058: aload_0
    1059: getfield      #132                // Field subkey:[I
    1062: bipush        32
    1064: invokestatic  #147                // Method roldq:(I[II[II)V
    1067: bipush        34
    1069: aload_3
    1070: iconst_0
    1071: aload_0
    1072: getfield      #132                // Field subkey:[I
    1075: bipush        44
    1077: invokestatic  #148                // Method roldqo32:(I[II[II)V
    1080: bipush        15
    1082: aload_3
    1083: iconst_4
    1084: aload_0
    1085: getfield      #132                // Field subkey:[I
    1088: iconst_4
    1089: invokestatic  #147                // Method roldq:(I[II[II)V
    1092: bipush        15
    1094: aload_3
    1095: iconst_4
    1096: aload_0
    1097: getfield      #129                // Field ke:[I
    1100: iconst_0
    1101: invokestatic  #147                // Method roldq:(I[II[II)V
    1104: bipush        30
    1106: aload_3
    1107: iconst_4
    1108: aload_0
    1109: getfield      #132                // Field subkey:[I
    1112: bipush        24
    1114: invokestatic  #147                // Method roldq:(I[II[II)V
    1117: bipush        34
    1119: aload_3
    1120: iconst_4
    1121: aload_0
    1122: getfield      #132                // Field subkey:[I
    1125: bipush        36
    1127: invokestatic  #148                // Method roldqo32:(I[II[II)V
    1130: bipush        15
    1132: aload         4
    1134: iconst_0
    1135: aload_0
    1136: getfield      #132                // Field subkey:[I
    1139: bipush        8
    1141: invokestatic  #147                // Method roldq:(I[II[II)V
    1144: bipush        30
    1146: aload         4
    1148: iconst_0
    1149: aload_0
    1150: getfield      #132                // Field subkey:[I
    1153: bipush        20
    1155: invokestatic  #147                // Method roldq:(I[II[II)V
    1158: aload_0
    1159: getfield      #129                // Field ke:[I
    1162: bipush        8
    1164: aload         4
    1166: iconst_1
    1167: iaload
    1168: iastore
    1169: aload_0
    1170: getfield      #129                // Field ke:[I
    1173: bipush        9
    1175: aload         4
    1177: iconst_2
    1178: iaload
    1179: iastore
    1180: aload_0
    1181: getfield      #129                // Field ke:[I
    1184: bipush        10
    1186: aload         4
    1188: iconst_3
    1189: iaload
    1190: iastore
    1191: aload_0
    1192: getfield      #129                // Field ke:[I
    1195: bipush        11
    1197: aload         4
    1199: iconst_0
    1200: iaload
    1201: iastore
    1202: bipush        49
    1204: aload         4
    1206: iconst_0
    1207: aload_0
    1208: getfield      #132                // Field subkey:[I
    1211: bipush        40
    1213: invokestatic  #148                // Method roldqo32:(I[II[II)V
    1216: aload_0
    1217: getfield      #132                // Field subkey:[I
    1220: iconst_0
    1221: aload         5
    1223: iconst_0
    1224: iaload
    1225: iastore
    1226: aload_0
    1227: getfield      #132                // Field subkey:[I
    1230: iconst_1
    1231: aload         5
    1233: iconst_1
    1234: iaload
    1235: iastore
    1236: aload_0
    1237: getfield      #132                // Field subkey:[I
    1240: iconst_2
    1241: aload         5
    1243: iconst_2
    1244: iaload
    1245: iastore
    1246: aload_0
    1247: getfield      #132                // Field subkey:[I
    1250: iconst_3
    1251: aload         5
    1253: iconst_3
    1254: iaload
    1255: iastore
    1256: bipush        30
    1258: aload         5
    1260: iconst_0
    1261: aload_0
    1262: getfield      #132                // Field subkey:[I
    1265: bipush        12
    1267: invokestatic  #147                // Method roldq:(I[II[II)V
    1270: bipush        30
    1272: aload         5
    1274: iconst_0
    1275: aload_0
    1276: getfield      #132                // Field subkey:[I
    1279: bipush        28
    1281: invokestatic  #147                // Method roldq:(I[II[II)V
    1284: bipush        51
    1286: aload         5
    1288: iconst_0
    1289: aload_0
    1290: getfield      #130                // Field kw:[I
    1293: iconst_4
    1294: invokestatic  #148                // Method roldqo32:(I[II[II)V
    1297: goto          1606
    1300: aload_0
    1301: getfield      #130                // Field kw:[I
    1304: iconst_4
    1305: aload_3
    1306: iconst_0
    1307: iaload
    1308: iastore
    1309: aload_0
    1310: getfield      #130                // Field kw:[I
    1313: iconst_5
    1314: aload_3
    1315: iconst_1
    1316: iaload
    1317: iastore
    1318: aload_0
    1319: getfield      #130                // Field kw:[I
    1322: bipush        6
    1324: aload_3
    1325: iconst_2
    1326: iaload
    1327: iastore
    1328: aload_0
    1329: getfield      #130                // Field kw:[I
    1332: bipush        7
    1334: aload_3
    1335: iconst_3
    1336: iaload
    1337: iastore
    1338: bipush        45
    1340: aload_3
    1341: iconst_0
    1342: aload_0
    1343: getfield      #132                // Field subkey:[I
    1346: bipush        28
    1348: invokestatic  #146                // Method decroldqo32:(I[II[II)V
    1351: bipush        15
    1353: aload_3
    1354: iconst_0
    1355: aload_0
    1356: getfield      #129                // Field ke:[I
    1359: iconst_4
    1360: invokestatic  #145                // Method decroldq:(I[II[II)V
    1363: bipush        17
    1365: aload_3
    1366: iconst_0
    1367: aload_0
    1368: getfield      #132                // Field subkey:[I
    1371: bipush        12
    1373: invokestatic  #145                // Method decroldq:(I[II[II)V
    1376: bipush        34
    1378: aload_3
    1379: iconst_0
    1380: aload_0
    1381: getfield      #132                // Field subkey:[I
    1384: iconst_0
    1385: invokestatic  #146                // Method decroldqo32:(I[II[II)V
    1388: bipush        15
    1390: aload_3
    1391: iconst_4
    1392: aload_0
    1393: getfield      #132                // Field subkey:[I
    1396: bipush        40
    1398: invokestatic  #145                // Method decroldq:(I[II[II)V
    1401: bipush        15
    1403: aload_3
    1404: iconst_4
    1405: aload_0
    1406: getfield      #129                // Field ke:[I
    1409: bipush        8
    1411: invokestatic  #145                // Method decroldq:(I[II[II)V
    1414: bipush        30
    1416: aload_3
    1417: iconst_4
    1418: aload_0
    1419: getfield      #132                // Field subkey:[I
    1422: bipush        20
    1424: invokestatic  #145                // Method decroldq:(I[II[II)V
    1427: bipush        34
    1429: aload_3
    1430: iconst_4
    1431: aload_0
    1432: getfield      #132                // Field subkey:[I
    1435: bipush        8
    1437: invokestatic  #146                // Method decroldqo32:(I[II[II)V
    1440: bipush        15
    1442: aload         4
    1444: iconst_0
    1445: aload_0
    1446: getfield      #132                // Field subkey:[I
    1449: bipush        36
    1451: invokestatic  #145                // Method decroldq:(I[II[II)V
    1454: bipush        30
    1456: aload         4
    1458: iconst_0
    1459: aload_0
    1460: getfield      #132                // Field subkey:[I
    1463: bipush        24
    1465: invokestatic  #145                // Method decroldq:(I[II[II)V
    1468: aload_0
    1469: getfield      #129                // Field ke:[I
    1472: iconst_2
    1473: aload         4
    1475: iconst_1
    1476: iaload
    1477: iastore
    1478: aload_0
    1479: getfield      #129                // Field ke:[I
    1482: iconst_3
    1483: aload         4
    1485: iconst_2
    1486: iaload
    1487: iastore
    1488: aload_0
    1489: getfield      #129                // Field ke:[I
    1492: iconst_0
    1493: aload         4
    1495: iconst_3
    1496: iaload
    1497: iastore
    1498: aload_0
    1499: getfield      #129                // Field ke:[I
    1502: iconst_1
    1503: aload         4
    1505: iconst_0
    1506: iaload
    1507: iastore
    1508: bipush        49
    1510: aload         4
    1512: iconst_0
    1513: aload_0
    1514: getfield      #132                // Field subkey:[I
    1517: iconst_4
    1518: invokestatic  #146                // Method decroldqo32:(I[II[II)V
    1521: aload_0
    1522: getfield      #132                // Field subkey:[I
    1525: bipush        46
    1527: aload         5
    1529: iconst_0
    1530: iaload
    1531: iastore
    1532: aload_0
    1533: getfield      #132                // Field subkey:[I
    1536: bipush        47
    1538: aload         5
    1540: iconst_1
    1541: iaload
    1542: iastore
    1543: aload_0
    1544: getfield      #132                // Field subkey:[I
    1547: bipush        44
    1549: aload         5
    1551: iconst_2
    1552: iaload
    1553: iastore
    1554: aload_0
    1555: getfield      #132                // Field subkey:[I
    1558: bipush        45
    1560: aload         5
    1562: iconst_3
    1563: iaload
    1564: iastore
    1565: bipush        30
    1567: aload         5
    1569: iconst_0
    1570: aload_0
    1571: getfield      #132                // Field subkey:[I
    1574: bipush        32
    1576: invokestatic  #145                // Method decroldq:(I[II[II)V
    1579: bipush        30
    1581: aload         5
    1583: iconst_0
    1584: aload_0
    1585: getfield      #132                // Field subkey:[I
    1588: bipush        16
    1590: invokestatic  #145                // Method decroldq:(I[II[II)V
    1593: bipush        51
    1595: aload         5
    1597: iconst_0
    1598: aload_0
    1599: getfield      #130                // Field kw:[I
    1602: iconst_0
    1603: invokestatic  #148                // Method roldqo32:(I[II[II)V
    1606: return

  private int processBlock128(byte[], int, byte[], int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iconst_4
       6: if_icmpge     50
       9: aload_0
      10: getfield      #131                // Field state:[I
      13: iload         5
      15: aload_0
      16: aload_1
      17: iload_2
      18: iload         5
      20: iconst_4
      21: imul
      22: iadd
      23: invokespecial #150                // Method bytes2int:([BI)I
      26: iastore
      27: aload_0
      28: getfield      #131                // Field state:[I
      31: iload         5
      33: dup2
      34: iaload
      35: aload_0
      36: getfield      #130                // Field kw:[I
      39: iload         5
      41: iaload
      42: ixor
      43: iastore
      44: iinc          5, 1
      47: goto          3
      50: aload_0
      51: aload_0
      52: getfield      #131                // Field state:[I
      55: aload_0
      56: getfield      #132                // Field subkey:[I
      59: iconst_0
      60: invokespecial #153                // Method camelliaF2:([I[II)V
      63: aload_0
      64: aload_0
      65: getfield      #131                // Field state:[I
      68: aload_0
      69: getfield      #132                // Field subkey:[I
      72: iconst_4
      73: invokespecial #153                // Method camelliaF2:([I[II)V
      76: aload_0
      77: aload_0
      78: getfield      #131                // Field state:[I
      81: aload_0
      82: getfield      #132                // Field subkey:[I
      85: bipush        8
      87: invokespecial #153                // Method camelliaF2:([I[II)V
      90: aload_0
      91: aload_0
      92: getfield      #131                // Field state:[I
      95: aload_0
      96: getfield      #129                // Field ke:[I
      99: iconst_0
     100: invokespecial #154                // Method camelliaFLs:([I[II)V
     103: aload_0
     104: aload_0
     105: getfield      #131                // Field state:[I
     108: aload_0
     109: getfield      #132                // Field subkey:[I
     112: bipush        12
     114: invokespecial #153                // Method camelliaF2:([I[II)V
     117: aload_0
     118: aload_0
     119: getfield      #131                // Field state:[I
     122: aload_0
     123: getfield      #132                // Field subkey:[I
     126: bipush        16
     128: invokespecial #153                // Method camelliaF2:([I[II)V
     131: aload_0
     132: aload_0
     133: getfield      #131                // Field state:[I
     136: aload_0
     137: getfield      #132                // Field subkey:[I
     140: bipush        20
     142: invokespecial #153                // Method camelliaF2:([I[II)V
     145: aload_0
     146: aload_0
     147: getfield      #131                // Field state:[I
     150: aload_0
     151: getfield      #129                // Field ke:[I
     154: iconst_4
     155: invokespecial #154                // Method camelliaFLs:([I[II)V
     158: aload_0
     159: aload_0
     160: getfield      #131                // Field state:[I
     163: aload_0
     164: getfield      #132                // Field subkey:[I
     167: bipush        24
     169: invokespecial #153                // Method camelliaF2:([I[II)V
     172: aload_0
     173: aload_0
     174: getfield      #131                // Field state:[I
     177: aload_0
     178: getfield      #132                // Field subkey:[I
     181: bipush        28
     183: invokespecial #153                // Method camelliaF2:([I[II)V
     186: aload_0
     187: aload_0
     188: getfield      #131                // Field state:[I
     191: aload_0
     192: getfield      #132                // Field subkey:[I
     195: bipush        32
     197: invokespecial #153                // Method camelliaF2:([I[II)V
     200: aload_0
     201: getfield      #131                // Field state:[I
     204: iconst_2
     205: dup2
     206: iaload
     207: aload_0
     208: getfield      #130                // Field kw:[I
     211: iconst_4
     212: iaload
     213: ixor
     214: iastore
     215: aload_0
     216: getfield      #131                // Field state:[I
     219: iconst_3
     220: dup2
     221: iaload
     222: aload_0
     223: getfield      #130                // Field kw:[I
     226: iconst_5
     227: iaload
     228: ixor
     229: iastore
     230: aload_0
     231: getfield      #131                // Field state:[I
     234: iconst_0
     235: dup2
     236: iaload
     237: aload_0
     238: getfield      #130                // Field kw:[I
     241: bipush        6
     243: iaload
     244: ixor
     245: iastore
     246: aload_0
     247: getfield      #131                // Field state:[I
     250: iconst_1
     251: dup2
     252: iaload
     253: aload_0
     254: getfield      #130                // Field kw:[I
     257: bipush        7
     259: iaload
     260: ixor
     261: iastore
     262: aload_0
     263: aload_0
     264: getfield      #131                // Field state:[I
     267: iconst_2
     268: iaload
     269: aload_3
     270: iload         4
     272: invokespecial #144                // Method int2bytes:(I[BI)V
     275: aload_0
     276: aload_0
     277: getfield      #131                // Field state:[I
     280: iconst_3
     281: iaload
     282: aload_3
     283: iload         4
     285: iconst_4
     286: iadd
     287: invokespecial #144                // Method int2bytes:(I[BI)V
     290: aload_0
     291: aload_0
     292: getfield      #131                // Field state:[I
     295: iconst_0
     296: iaload
     297: aload_3
     298: iload         4
     300: bipush        8
     302: iadd
     303: invokespecial #144                // Method int2bytes:(I[BI)V
     306: aload_0
     307: aload_0
     308: getfield      #131                // Field state:[I
     311: iconst_1
     312: iaload
     313: aload_3
     314: iload         4
     316: bipush        12
     318: iadd
     319: invokespecial #144                // Method int2bytes:(I[BI)V
     322: bipush        16
     324: ireturn

  private int processBlock192or256(byte[], int, byte[], int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iconst_4
       6: if_icmpge     50
       9: aload_0
      10: getfield      #131                // Field state:[I
      13: iload         5
      15: aload_0
      16: aload_1
      17: iload_2
      18: iload         5
      20: iconst_4
      21: imul
      22: iadd
      23: invokespecial #150                // Method bytes2int:([BI)I
      26: iastore
      27: aload_0
      28: getfield      #131                // Field state:[I
      31: iload         5
      33: dup2
      34: iaload
      35: aload_0
      36: getfield      #130                // Field kw:[I
      39: iload         5
      41: iaload
      42: ixor
      43: iastore
      44: iinc          5, 1
      47: goto          3
      50: aload_0
      51: aload_0
      52: getfield      #131                // Field state:[I
      55: aload_0
      56: getfield      #132                // Field subkey:[I
      59: iconst_0
      60: invokespecial #153                // Method camelliaF2:([I[II)V
      63: aload_0
      64: aload_0
      65: getfield      #131                // Field state:[I
      68: aload_0
      69: getfield      #132                // Field subkey:[I
      72: iconst_4
      73: invokespecial #153                // Method camelliaF2:([I[II)V
      76: aload_0
      77: aload_0
      78: getfield      #131                // Field state:[I
      81: aload_0
      82: getfield      #132                // Field subkey:[I
      85: bipush        8
      87: invokespecial #153                // Method camelliaF2:([I[II)V
      90: aload_0
      91: aload_0
      92: getfield      #131                // Field state:[I
      95: aload_0
      96: getfield      #129                // Field ke:[I
      99: iconst_0
     100: invokespecial #154                // Method camelliaFLs:([I[II)V
     103: aload_0
     104: aload_0
     105: getfield      #131                // Field state:[I
     108: aload_0
     109: getfield      #132                // Field subkey:[I
     112: bipush        12
     114: invokespecial #153                // Method camelliaF2:([I[II)V
     117: aload_0
     118: aload_0
     119: getfield      #131                // Field state:[I
     122: aload_0
     123: getfield      #132                // Field subkey:[I
     126: bipush        16
     128: invokespecial #153                // Method camelliaF2:([I[II)V
     131: aload_0
     132: aload_0
     133: getfield      #131                // Field state:[I
     136: aload_0
     137: getfield      #132                // Field subkey:[I
     140: bipush        20
     142: invokespecial #153                // Method camelliaF2:([I[II)V
     145: aload_0
     146: aload_0
     147: getfield      #131                // Field state:[I
     150: aload_0
     151: getfield      #129                // Field ke:[I
     154: iconst_4
     155: invokespecial #154                // Method camelliaFLs:([I[II)V
     158: aload_0
     159: aload_0
     160: getfield      #131                // Field state:[I
     163: aload_0
     164: getfield      #132                // Field subkey:[I
     167: bipush        24
     169: invokespecial #153                // Method camelliaF2:([I[II)V
     172: aload_0
     173: aload_0
     174: getfield      #131                // Field state:[I
     177: aload_0
     178: getfield      #132                // Field subkey:[I
     181: bipush        28
     183: invokespecial #153                // Method camelliaF2:([I[II)V
     186: aload_0
     187: aload_0
     188: getfield      #131                // Field state:[I
     191: aload_0
     192: getfield      #132                // Field subkey:[I
     195: bipush        32
     197: invokespecial #153                // Method camelliaF2:([I[II)V
     200: aload_0
     201: aload_0
     202: getfield      #131                // Field state:[I
     205: aload_0
     206: getfield      #129                // Field ke:[I
     209: bipush        8
     211: invokespecial #154                // Method camelliaFLs:([I[II)V
     214: aload_0
     215: aload_0
     216: getfield      #131                // Field state:[I
     219: aload_0
     220: getfield      #132                // Field subkey:[I
     223: bipush        36
     225: invokespecial #153                // Method camelliaF2:([I[II)V
     228: aload_0
     229: aload_0
     230: getfield      #131                // Field state:[I
     233: aload_0
     234: getfield      #132                // Field subkey:[I
     237: bipush        40
     239: invokespecial #153                // Method camelliaF2:([I[II)V
     242: aload_0
     243: aload_0
     244: getfield      #131                // Field state:[I
     247: aload_0
     248: getfield      #132                // Field subkey:[I
     251: bipush        44
     253: invokespecial #153                // Method camelliaF2:([I[II)V
     256: aload_0
     257: getfield      #131                // Field state:[I
     260: iconst_2
     261: dup2
     262: iaload
     263: aload_0
     264: getfield      #130                // Field kw:[I
     267: iconst_4
     268: iaload
     269: ixor
     270: iastore
     271: aload_0
     272: getfield      #131                // Field state:[I
     275: iconst_3
     276: dup2
     277: iaload
     278: aload_0
     279: getfield      #130                // Field kw:[I
     282: iconst_5
     283: iaload
     284: ixor
     285: iastore
     286: aload_0
     287: getfield      #131                // Field state:[I
     290: iconst_0
     291: dup2
     292: iaload
     293: aload_0
     294: getfield      #130                // Field kw:[I
     297: bipush        6
     299: iaload
     300: ixor
     301: iastore
     302: aload_0
     303: getfield      #131                // Field state:[I
     306: iconst_1
     307: dup2
     308: iaload
     309: aload_0
     310: getfield      #130                // Field kw:[I
     313: bipush        7
     315: iaload
     316: ixor
     317: iastore
     318: aload_0
     319: aload_0
     320: getfield      #131                // Field state:[I
     323: iconst_2
     324: iaload
     325: aload_3
     326: iload         4
     328: invokespecial #144                // Method int2bytes:(I[BI)V
     331: aload_0
     332: aload_0
     333: getfield      #131                // Field state:[I
     336: iconst_3
     337: iaload
     338: aload_3
     339: iload         4
     341: iconst_4
     342: iadd
     343: invokespecial #144                // Method int2bytes:(I[BI)V
     346: aload_0
     347: aload_0
     348: getfield      #131                // Field state:[I
     351: iconst_0
     352: iaload
     353: aload_3
     354: iload         4
     356: bipush        8
     358: iadd
     359: invokespecial #144                // Method int2bytes:(I[BI)V
     362: aload_0
     363: aload_0
     364: getfield      #131                // Field state:[I
     367: iconst_1
     368: iaload
     369: aload_3
     370: iload         4
     372: bipush        12
     374: iadd
     375: invokespecial #144                // Method int2bytes:(I[BI)V
     378: bipush        16
     380: ireturn

  public org.bouncycastle.crypto.engines.CamelliaLightEngine();
    Code:
       0: aload_0
       1: invokespecial #135                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        96
       7: newarray       int
       9: putfield      #132                // Field subkey:[I
      12: aload_0
      13: bipush        8
      15: newarray       int
      17: putfield      #130                // Field kw:[I
      20: aload_0
      21: bipush        12
      23: newarray       int
      25: putfield      #129                // Field ke:[I
      28: aload_0
      29: iconst_4
      30: newarray       int
      32: putfield      #131                // Field state:[I
      35: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #13                 // String Camellia
       2: areturn

  public int getBlockSize();
    Code:
       0: bipush        16
       2: ireturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #93                 // class org/bouncycastle/crypto/params/KeyParameter
       4: ifne          17
       7: new           #86                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #17                 // String only simple KeyParameter expected.
      13: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iload_1
      19: aload_2
      20: checkcast     #93                 // class org/bouncycastle/crypto/params/KeyParameter
      23: invokevirtual #155                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      26: invokespecial #149                // Method setKey:(Z[B)V
      29: aload_0
      30: iconst_1
      31: putfield      #126                // Field initialized:Z
      34: return

  public int processBlock(byte[], int, byte[], int) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #126                // Field initialized:Z
       4: ifne          17
       7: new           #87                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #14                 // String Camellia is not initialized
      13: invokespecial #134                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_2
      18: bipush        16
      20: iadd
      21: aload_1
      22: arraylength
      23: if_icmple     36
      26: new           #90                 // class org/bouncycastle/crypto/DataLengthException
      29: dup
      30: ldc           #15                 // String input buffer too short
      32: invokespecial #136                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload         4
      38: bipush        16
      40: iadd
      41: aload_3
      42: arraylength
      43: if_icmple     56
      46: new           #91                 // class org/bouncycastle/crypto/OutputLengthException
      49: dup
      50: ldc           #18                 // String output buffer too short
      52: invokespecial #137                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: getfield      #125                // Field _keyis128:Z
      60: ifeq          73
      63: aload_0
      64: aload_1
      65: iload_2
      66: aload_3
      67: iload         4
      69: invokespecial #151                // Method processBlock128:([BI[BI)I
      72: ireturn
      73: aload_0
      74: aload_1
      75: iload_2
      76: aload_3
      77: iload         4
      79: invokespecial #152                // Method processBlock192or256:([BI[BI)I
      82: ireturn

  public void reset();
    Code:
       0: return

  static {};
    Code:
       0: bipush        12
       2: newarray       int
       4: dup
       5: iconst_0
       6: ldc           #1                  // int -1600231809
       8: iastore
       9: dup
      10: iconst_1
      11: ldc           #10                 // int 1003262091
      13: iastore
      14: dup
      15: iconst_2
      16: ldc           #4                  // int -1233459112
      18: iastore
      19: dup
      20: iconst_3
      21: ldc           #11                 // int 1286239154
      23: iastore
      24: dup
      25: iconst_4
      26: ldc           #5                  // int -957401297
      28: iastore
      29: dup
      30: iconst_5
      31: ldc           #7                  // int -380665154
      33: iastore
      34: dup
      35: bipush        6
      37: ldc           #12                 // int 1426019237
      39: iastore
      40: dup
      41: bipush        7
      43: ldc           #8                  // int -237801700
      45: iastore
      46: dup
      47: bipush        8
      49: ldc           #9                  // int 283453434
      51: iastore
      52: dup
      53: bipush        9
      55: ldc           #6                  // int -563598051
      57: iastore
      58: dup
      59: bipush        10
      61: ldc           #2                  // int -1336506174
      63: iastore
      64: dup
      65: bipush        11
      67: ldc           #3                  // int -1276722691
      69: iastore
      70: putstatic     #128                // Field SIGMA:[I
      73: sipush        256
      76: newarray       byte
      78: dup
      79: iconst_0
      80: bipush        112
      82: bastore
      83: dup
      84: iconst_1
      85: bipush        -126
      87: bastore
      88: dup
      89: iconst_2
      90: bipush        44
      92: bastore
      93: dup
      94: iconst_3
      95: bipush        -20
      97: bastore
      98: dup
      99: iconst_4
     100: bipush        -77
     102: bastore
     103: dup
     104: iconst_5
     105: bipush        39
     107: bastore
     108: dup
     109: bipush        6
     111: bipush        -64
     113: bastore
     114: dup
     115: bipush        7
     117: bipush        -27
     119: bastore
     120: dup
     121: bipush        8
     123: bipush        -28
     125: bastore
     126: dup
     127: bipush        9
     129: bipush        -123
     131: bastore
     132: dup
     133: bipush        10
     135: bipush        87
     137: bastore
     138: dup
     139: bipush        11
     141: bipush        53
     143: bastore
     144: dup
     145: bipush        12
     147: bipush        -22
     149: bastore
     150: dup
     151: bipush        13
     153: bipush        12
     155: bastore
     156: dup
     157: bipush        14
     159: bipush        -82
     161: bastore
     162: dup
     163: bipush        15
     165: bipush        65
     167: bastore
     168: dup
     169: bipush        16
     171: bipush        35
     173: bastore
     174: dup
     175: bipush        17
     177: bipush        -17
     179: bastore
     180: dup
     181: bipush        18
     183: bipush        107
     185: bastore
     186: dup
     187: bipush        19
     189: bipush        -109
     191: bastore
     192: dup
     193: bipush        20
     195: bipush        69
     197: bastore
     198: dup
     199: bipush        21
     201: bipush        25
     203: bastore
     204: dup
     205: bipush        22
     207: bipush        -91
     209: bastore
     210: dup
     211: bipush        23
     213: bipush        33
     215: bastore
     216: dup
     217: bipush        24
     219: bipush        -19
     221: bastore
     222: dup
     223: bipush        25
     225: bipush        14
     227: bastore
     228: dup
     229: bipush        26
     231: bipush        79
     233: bastore
     234: dup
     235: bipush        27
     237: bipush        78
     239: bastore
     240: dup
     241: bipush        28
     243: bipush        29
     245: bastore
     246: dup
     247: bipush        29
     249: bipush        101
     251: bastore
     252: dup
     253: bipush        30
     255: bipush        -110
     257: bastore
     258: dup
     259: bipush        31
     261: bipush        -67
     263: bastore
     264: dup
     265: bipush        32
     267: bipush        -122
     269: bastore
     270: dup
     271: bipush        33
     273: bipush        -72
     275: bastore
     276: dup
     277: bipush        34
     279: bipush        -81
     281: bastore
     282: dup
     283: bipush        35
     285: bipush        -113
     287: bastore
     288: dup
     289: bipush        36
     291: bipush        124
     293: bastore
     294: dup
     295: bipush        37
     297: bipush        -21
     299: bastore
     300: dup
     301: bipush        38
     303: bipush        31
     305: bastore
     306: dup
     307: bipush        39
     309: bipush        -50
     311: bastore
     312: dup
     313: bipush        40
     315: bipush        62
     317: bastore
     318: dup
     319: bipush        41
     321: bipush        48
     323: bastore
     324: dup
     325: bipush        42
     327: bipush        -36
     329: bastore
     330: dup
     331: bipush        43
     333: bipush        95
     335: bastore
     336: dup
     337: bipush        44
     339: bipush        94
     341: bastore
     342: dup
     343: bipush        45
     345: bipush        -59
     347: bastore
     348: dup
     349: bipush        46
     351: bipush        11
     353: bastore
     354: dup
     355: bipush        47
     357: bipush        26
     359: bastore
     360: dup
     361: bipush        48
     363: bipush        -90
     365: bastore
     366: dup
     367: bipush        49
     369: bipush        -31
     371: bastore
     372: dup
     373: bipush        50
     375: bipush        57
     377: bastore
     378: dup
     379: bipush        51
     381: bipush        -54
     383: bastore
     384: dup
     385: bipush        52
     387: bipush        -43
     389: bastore
     390: dup
     391: bipush        53
     393: bipush        71
     395: bastore
     396: dup
     397: bipush        54
     399: bipush        93
     401: bastore
     402: dup
     403: bipush        55
     405: bipush        61
     407: bastore
     408: dup
     409: bipush        56
     411: bipush        -39
     413: bastore
     414: dup
     415: bipush        57
     417: iconst_1
     418: bastore
     419: dup
     420: bipush        58
     422: bipush        90
     424: bastore
     425: dup
     426: bipush        59
     428: bipush        -42
     430: bastore
     431: dup
     432: bipush        60
     434: bipush        81
     436: bastore
     437: dup
     438: bipush        61
     440: bipush        86
     442: bastore
     443: dup
     444: bipush        62
     446: bipush        108
     448: bastore
     449: dup
     450: bipush        63
     452: bipush        77
     454: bastore
     455: dup
     456: bipush        64
     458: bipush        -117
     460: bastore
     461: dup
     462: bipush        65
     464: bipush        13
     466: bastore
     467: dup
     468: bipush        66
     470: bipush        -102
     472: bastore
     473: dup
     474: bipush        67
     476: bipush        102
     478: bastore
     479: dup
     480: bipush        68
     482: bipush        -5
     484: bastore
     485: dup
     486: bipush        69
     488: bipush        -52
     490: bastore
     491: dup
     492: bipush        70
     494: bipush        -80
     496: bastore
     497: dup
     498: bipush        71
     500: bipush        45
     502: bastore
     503: dup
     504: bipush        72
     506: bipush        116
     508: bastore
     509: dup
     510: bipush        73
     512: bipush        18
     514: bastore
     515: dup
     516: bipush        74
     518: bipush        43
     520: bastore
     521: dup
     522: bipush        75
     524: bipush        32
     526: bastore
     527: dup
     528: bipush        76
     530: bipush        -16
     532: bastore
     533: dup
     534: bipush        77
     536: bipush        -79
     538: bastore
     539: dup
     540: bipush        78
     542: bipush        -124
     544: bastore
     545: dup
     546: bipush        79
     548: bipush        -103
     550: bastore
     551: dup
     552: bipush        80
     554: bipush        -33
     556: bastore
     557: dup
     558: bipush        81
     560: bipush        76
     562: bastore
     563: dup
     564: bipush        82
     566: bipush        -53
     568: bastore
     569: dup
     570: bipush        83
     572: bipush        -62
     574: bastore
     575: dup
     576: bipush        84
     578: bipush        52
     580: bastore
     581: dup
     582: bipush        85
     584: bipush        126
     586: bastore
     587: dup
     588: bipush        86
     590: bipush        118
     592: bastore
     593: dup
     594: bipush        87
     596: iconst_5
     597: bastore
     598: dup
     599: bipush        88
     601: bipush        109
     603: bastore
     604: dup
     605: bipush        89
     607: bipush        -73
     609: bastore
     610: dup
     611: bipush        90
     613: bipush        -87
     615: bastore
     616: dup
     617: bipush        91
     619: bipush        49
     621: bastore
     622: dup
     623: bipush        92
     625: bipush        -47
     627: bastore
     628: dup
     629: bipush        93
     631: bipush        23
     633: bastore
     634: dup
     635: bipush        94
     637: iconst_4
     638: bastore
     639: dup
     640: bipush        95
     642: bipush        -41
     644: bastore
     645: dup
     646: bipush        96
     648: bipush        20
     650: bastore
     651: dup
     652: bipush        97
     654: bipush        88
     656: bastore
     657: dup
     658: bipush        98
     660: bipush        58
     662: bastore
     663: dup
     664: bipush        99
     666: bipush        97
     668: bastore
     669: dup
     670: bipush        100
     672: bipush        -34
     674: bastore
     675: dup
     676: bipush        101
     678: bipush        27
     680: bastore
     681: dup
     682: bipush        102
     684: bipush        17
     686: bastore
     687: dup
     688: bipush        103
     690: bipush        28
     692: bastore
     693: dup
     694: bipush        104
     696: bipush        50
     698: bastore
     699: dup
     700: bipush        105
     702: bipush        15
     704: bastore
     705: dup
     706: bipush        106
     708: bipush        -100
     710: bastore
     711: dup
     712: bipush        107
     714: bipush        22
     716: bastore
     717: dup
     718: bipush        108
     720: bipush        83
     722: bastore
     723: dup
     724: bipush        109
     726: bipush        24
     728: bastore
     729: dup
     730: bipush        110
     732: bipush        -14
     734: bastore
     735: dup
     736: bipush        111
     738: bipush        34
     740: bastore
     741: dup
     742: bipush        112
     744: bipush        -2
     746: bastore
     747: dup
     748: bipush        113
     750: bipush        68
     752: bastore
     753: dup
     754: bipush        114
     756: bipush        -49
     758: bastore
     759: dup
     760: bipush        115
     762: bipush        -78
     764: bastore
     765: dup
     766: bipush        116
     768: bipush        -61
     770: bastore
     771: dup
     772: bipush        117
     774: bipush        -75
     776: bastore
     777: dup
     778: bipush        118
     780: bipush        122
     782: bastore
     783: dup
     784: bipush        119
     786: bipush        -111
     788: bastore
     789: dup
     790: bipush        120
     792: bipush        36
     794: bastore
     795: dup
     796: bipush        121
     798: bipush        8
     800: bastore
     801: dup
     802: bipush        122
     804: bipush        -24
     806: bastore
     807: dup
     808: bipush        123
     810: bipush        -88
     812: bastore
     813: dup
     814: bipush        124
     816: bipush        96
     818: bastore
     819: dup
     820: bipush        125
     822: bipush        -4
     824: bastore
     825: dup
     826: bipush        126
     828: bipush        105
     830: bastore
     831: dup
     832: bipush        127
     834: bipush        80
     836: bastore
     837: dup
     838: sipush        128
     841: bipush        -86
     843: bastore
     844: dup
     845: sipush        129
     848: bipush        -48
     850: bastore
     851: dup
     852: sipush        130
     855: bipush        -96
     857: bastore
     858: dup
     859: sipush        131
     862: bipush        125
     864: bastore
     865: dup
     866: sipush        132
     869: bipush        -95
     871: bastore
     872: dup
     873: sipush        133
     876: bipush        -119
     878: bastore
     879: dup
     880: sipush        134
     883: bipush        98
     885: bastore
     886: dup
     887: sipush        135
     890: bipush        -105
     892: bastore
     893: dup
     894: sipush        136
     897: bipush        84
     899: bastore
     900: dup
     901: sipush        137
     904: bipush        91
     906: bastore
     907: dup
     908: sipush        138
     911: bipush        30
     913: bastore
     914: dup
     915: sipush        139
     918: bipush        -107
     920: bastore
     921: dup
     922: sipush        140
     925: bipush        -32
     927: bastore
     928: dup
     929: sipush        141
     932: iconst_m1
     933: bastore
     934: dup
     935: sipush        142
     938: bipush        100
     940: bastore
     941: dup
     942: sipush        143
     945: bipush        -46
     947: bastore
     948: dup
     949: sipush        144
     952: bipush        16
     954: bastore
     955: dup
     956: sipush        145
     959: bipush        -60
     961: bastore
     962: dup
     963: sipush        146
     966: iconst_0
     967: bastore
     968: dup
     969: sipush        147
     972: bipush        72
     974: bastore
     975: dup
     976: sipush        148
     979: bipush        -93
     981: bastore
     982: dup
     983: sipush        149
     986: bipush        -9
     988: bastore
     989: dup
     990: sipush        150
     993: bipush        117
     995: bastore
     996: dup
     997: sipush        151
    1000: bipush        -37
    1002: bastore
    1003: dup
    1004: sipush        152
    1007: bipush        -118
    1009: bastore
    1010: dup
    1011: sipush        153
    1014: iconst_3
    1015: bastore
    1016: dup
    1017: sipush        154
    1020: bipush        -26
    1022: bastore
    1023: dup
    1024: sipush        155
    1027: bipush        -38
    1029: bastore
    1030: dup
    1031: sipush        156
    1034: bipush        9
    1036: bastore
    1037: dup
    1038: sipush        157
    1041: bipush        63
    1043: bastore
    1044: dup
    1045: sipush        158
    1048: bipush        -35
    1050: bastore
    1051: dup
    1052: sipush        159
    1055: bipush        -108
    1057: bastore
    1058: dup
    1059: sipush        160
    1062: bipush        -121
    1064: bastore
    1065: dup
    1066: sipush        161
    1069: bipush        92
    1071: bastore
    1072: dup
    1073: sipush        162
    1076: bipush        -125
    1078: bastore
    1079: dup
    1080: sipush        163
    1083: iconst_2
    1084: bastore
    1085: dup
    1086: sipush        164
    1089: bipush        -51
    1091: bastore
    1092: dup
    1093: sipush        165
    1096: bipush        74
    1098: bastore
    1099: dup
    1100: sipush        166
    1103: bipush        -112
    1105: bastore
    1106: dup
    1107: sipush        167
    1110: bipush        51
    1112: bastore
    1113: dup
    1114: sipush        168
    1117: bipush        115
    1119: bastore
    1120: dup
    1121: sipush        169
    1124: bipush        103
    1126: bastore
    1127: dup
    1128: sipush        170
    1131: bipush        -10
    1133: bastore
    1134: dup
    1135: sipush        171
    1138: bipush        -13
    1140: bastore
    1141: dup
    1142: sipush        172
    1145: bipush        -99
    1147: bastore
    1148: dup
    1149: sipush        173
    1152: bipush        127
    1154: bastore
    1155: dup
    1156: sipush        174
    1159: bipush        -65
    1161: bastore
    1162: dup
    1163: sipush        175
    1166: bipush        -30
    1168: bastore
    1169: dup
    1170: sipush        176
    1173: bipush        82
    1175: bastore
    1176: dup
    1177: sipush        177
    1180: bipush        -101
    1182: bastore
    1183: dup
    1184: sipush        178
    1187: bipush        -40
    1189: bastore
    1190: dup
    1191: sipush        179
    1194: bipush        38
    1196: bastore
    1197: dup
    1198: sipush        180
    1201: bipush        -56
    1203: bastore
    1204: dup
    1205: sipush        181
    1208: bipush        55
    1210: bastore
    1211: dup
    1212: sipush        182
    1215: bipush        -58
    1217: bastore
    1218: dup
    1219: sipush        183
    1222: bipush        59
    1224: bastore
    1225: dup
    1226: sipush        184
    1229: bipush        -127
    1231: bastore
    1232: dup
    1233: sipush        185
    1236: bipush        -106
    1238: bastore
    1239: dup
    1240: sipush        186
    1243: bipush        111
    1245: bastore
    1246: dup
    1247: sipush        187
    1250: bipush        75
    1252: bastore
    1253: dup
    1254: sipush        188
    1257: bipush        19
    1259: bastore
    1260: dup
    1261: sipush        189
    1264: bipush        -66
    1266: bastore
    1267: dup
    1268: sipush        190
    1271: bipush        99
    1273: bastore
    1274: dup
    1275: sipush        191
    1278: bipush        46
    1280: bastore
    1281: dup
    1282: sipush        192
    1285: bipush        -23
    1287: bastore
    1288: dup
    1289: sipush        193
    1292: bipush        121
    1294: bastore
    1295: dup
    1296: sipush        194
    1299: bipush        -89
    1301: bastore
    1302: dup
    1303: sipush        195
    1306: bipush        -116
    1308: bastore
    1309: dup
    1310: sipush        196
    1313: bipush        -97
    1315: bastore
    1316: dup
    1317: sipush        197
    1320: bipush        110
    1322: bastore
    1323: dup
    1324: sipush        198
    1327: bipush        -68
    1329: bastore
    1330: dup
    1331: sipush        199
    1334: bipush        -114
    1336: bastore
    1337: dup
    1338: sipush        200
    1341: bipush        41
    1343: bastore
    1344: dup
    1345: sipush        201
    1348: bipush        -11
    1350: bastore
    1351: dup
    1352: sipush        202
    1355: bipush        -7
    1357: bastore
    1358: dup
    1359: sipush        203
    1362: bipush        -74
    1364: bastore
    1365: dup
    1366: sipush        204
    1369: bipush        47
    1371: bastore
    1372: dup
    1373: sipush        205
    1376: bipush        -3
    1378: bastore
    1379: dup
    1380: sipush        206
    1383: bipush        -76
    1385: bastore
    1386: dup
    1387: sipush        207
    1390: bipush        89
    1392: bastore
    1393: dup
    1394: sipush        208
    1397: bipush        120
    1399: bastore
    1400: dup
    1401: sipush        209
    1404: bipush        -104
    1406: bastore
    1407: dup
    1408: sipush        210
    1411: bipush        6
    1413: bastore
    1414: dup
    1415: sipush        211
    1418: bipush        106
    1420: bastore
    1421: dup
    1422: sipush        212
    1425: bipush        -25
    1427: bastore
    1428: dup
    1429: sipush        213
    1432: bipush        70
    1434: bastore
    1435: dup
    1436: sipush        214
    1439: bipush        113
    1441: bastore
    1442: dup
    1443: sipush        215
    1446: bipush        -70
    1448: bastore
    1449: dup
    1450: sipush        216
    1453: bipush        -44
    1455: bastore
    1456: dup
    1457: sipush        217
    1460: bipush        37
    1462: bastore
    1463: dup
    1464: sipush        218
    1467: bipush        -85
    1469: bastore
    1470: dup
    1471: sipush        219
    1474: bipush        66
    1476: bastore
    1477: dup
    1478: sipush        220
    1481: bipush        -120
    1483: bastore
    1484: dup
    1485: sipush        221
    1488: bipush        -94
    1490: bastore
    1491: dup
    1492: sipush        222
    1495: bipush        -115
    1497: bastore
    1498: dup
    1499: sipush        223
    1502: bipush        -6
    1504: bastore
    1505: dup
    1506: sipush        224
    1509: bipush        114
    1511: bastore
    1512: dup
    1513: sipush        225
    1516: bipush        7
    1518: bastore
    1519: dup
    1520: sipush        226
    1523: bipush        -71
    1525: bastore
    1526: dup
    1527: sipush        227
    1530: bipush        85
    1532: bastore
    1533: dup
    1534: sipush        228
    1537: bipush        -8
    1539: bastore
    1540: dup
    1541: sipush        229
    1544: bipush        -18
    1546: bastore
    1547: dup
    1548: sipush        230
    1551: bipush        -84
    1553: bastore
    1554: dup
    1555: sipush        231
    1558: bipush        10
    1560: bastore
    1561: dup
    1562: sipush        232
    1565: bipush        54
    1567: bastore
    1568: dup
    1569: sipush        233
    1572: bipush        73
    1574: bastore
    1575: dup
    1576: sipush        234
    1579: bipush        42
    1581: bastore
    1582: dup
    1583: sipush        235
    1586: bipush        104
    1588: bastore
    1589: dup
    1590: sipush        236
    1593: bipush        60
    1595: bastore
    1596: dup
    1597: sipush        237
    1600: bipush        56
    1602: bastore
    1603: dup
    1604: sipush        238
    1607: bipush        -15
    1609: bastore
    1610: dup
    1611: sipush        239
    1614: bipush        -92
    1616: bastore
    1617: dup
    1618: sipush        240
    1621: bipush        64
    1623: bastore
    1624: dup
    1625: sipush        241
    1628: bipush        40
    1630: bastore
    1631: dup
    1632: sipush        242
    1635: bipush        -45
    1637: bastore
    1638: dup
    1639: sipush        243
    1642: bipush        123
    1644: bastore
    1645: dup
    1646: sipush        244
    1649: bipush        -69
    1651: bastore
    1652: dup
    1653: sipush        245
    1656: bipush        -55
    1658: bastore
    1659: dup
    1660: sipush        246
    1663: bipush        67
    1665: bastore
    1666: dup
    1667: sipush        247
    1670: bipush        -63
    1672: bastore
    1673: dup
    1674: sipush        248
    1677: bipush        21
    1679: bastore
    1680: dup
    1681: sipush        249
    1684: bipush        -29
    1686: bastore
    1687: dup
    1688: sipush        250
    1691: bipush        -83
    1693: bastore
    1694: dup
    1695: sipush        251
    1698: bipush        -12
    1700: bastore
    1701: dup
    1702: sipush        252
    1705: bipush        119
    1707: bastore
    1708: dup
    1709: sipush        253
    1712: bipush        -57
    1714: bastore
    1715: dup
    1716: sipush        254
    1719: bipush        -128
    1721: bastore
    1722: dup
    1723: sipush        255
    1726: bipush        -98
    1728: bastore
    1729: putstatic     #127                // Field SBOX1:[B
    1732: return
}
