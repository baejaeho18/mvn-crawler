class org.bouncycastle.pqc.crypto.sphincs.Seed {
  org.bouncycastle.pqc.crypto.sphincs.Seed();
    Code:
       0: aload_0
       1: invokespecial #57                 // Method java/lang/Object."<init>":()V
       4: return

  static void get_seed(org.bouncycastle.pqc.crypto.sphincs.HashFunctions, byte[], int, byte[], org.bouncycastle.pqc.crypto.sphincs.Tree$leafaddr);
    Code:
       0: bipush        40
       2: newarray       byte
       4: astore        5
       6: iconst_0
       7: istore        8
       9: iload         8
      11: bipush        32
      13: if_icmpge     31
      16: aload         5
      18: iload         8
      20: aload_3
      21: iload         8
      23: baload
      24: bastore
      25: iinc          8, 1
      28: goto          9
      31: aload         4
      33: getfield      #54                 // Field org/bouncycastle/pqc/crypto/sphincs/Tree$leafaddr.level:I
      36: i2l
      37: lstore        6
      39: lload         6
      41: aload         4
      43: getfield      #56                 // Field org/bouncycastle/pqc/crypto/sphincs/Tree$leafaddr.subtree:J
      46: iconst_4
      47: lshl
      48: lor
      49: lstore        6
      51: lload         6
      53: aload         4
      55: getfield      #55                 // Field org/bouncycastle/pqc/crypto/sphincs/Tree$leafaddr.subleaf:J
      58: bipush        59
      60: lshl
      61: lor
      62: lstore        6
      64: lload         6
      66: aload         5
      68: bipush        32
      70: invokestatic  #62                 // Method org/bouncycastle/util/Pack.longToLittleEndian:(J[BI)V
      73: aload_0
      74: aload_1
      75: iload_2
      76: aload         5
      78: aload         5
      80: arraylength
      81: invokevirtual #61                 // Method org/bouncycastle/pqc/crypto/sphincs/HashFunctions.varlen_hash:([BI[BI)I
      84: pop
      85: return

  static void prg(byte[], int, long, byte[], int);
    Code:
       0: bipush        8
       2: newarray       byte
       4: astore        6
       6: new           #32                 // class org/bouncycastle/crypto/engines/ChaChaEngine
       9: dup
      10: bipush        12
      12: invokespecial #58                 // Method org/bouncycastle/crypto/engines/ChaChaEngine."<init>":(I)V
      15: astore        7
      17: aload         7
      19: iconst_1
      20: new           #34                 // class org/bouncycastle/crypto/params/ParametersWithIV
      23: dup
      24: new           #33                 // class org/bouncycastle/crypto/params/KeyParameter
      27: dup
      28: aload         4
      30: iload         5
      32: bipush        32
      34: invokespecial #59                 // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([BII)V
      37: aload         6
      39: invokespecial #60                 // Method org/bouncycastle/crypto/params/ParametersWithIV."<init>":(Lorg/bouncycastle/crypto/CipherParameters;[B)V
      42: invokeinterface #64,  3           // InterfaceMethod org/bouncycastle/crypto/StreamCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      47: aload         7
      49: aload_0
      50: iload_1
      51: lload_2
      52: l2i
      53: aload_0
      54: iload_1
      55: invokeinterface #63,  6           // InterfaceMethod org/bouncycastle/crypto/StreamCipher.processBytes:([BII[BI)I
      60: pop
      61: return
}
