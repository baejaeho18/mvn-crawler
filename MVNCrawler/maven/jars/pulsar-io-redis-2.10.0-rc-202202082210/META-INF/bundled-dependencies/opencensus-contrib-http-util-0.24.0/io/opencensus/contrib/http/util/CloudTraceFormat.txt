Compiled from "CloudTraceFormat.java"
final class io.opencensus.contrib.http.util.CloudTraceFormat extends io.opencensus.trace.propagation.TextFormat {
  static final java.lang.String HEADER_NAME;

  static final java.util.List<java.lang.String> FIELDS;

  static final char SPAN_ID_DELIMITER;

  static final java.lang.String TRACE_OPTION_DELIMITER;

  static final java.lang.String SAMPLED;

  static final java.lang.String NOT_SAMPLED;

  static final io.opencensus.trace.TraceOptions OPTIONS_SAMPLED;

  static final io.opencensus.trace.TraceOptions OPTIONS_NOT_SAMPLED;

  static final int TRACE_ID_SIZE;

  static final int TRACE_OPTION_DELIMITER_SIZE;

  static final int SPAN_ID_START_POS;

  static final int MIN_HEADER_SIZE;

  static final int CLOUD_TRACE_IS_SAMPLED;

  private static final io.opencensus.trace.Tracestate TRACESTATE_DEFAULT;

  io.opencensus.contrib.http.util.CloudTraceFormat();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method io/opencensus/trace/propagation/TextFormat."<init>":()V
       4: return

  public java.util.List<java.lang.String> fields();
    Code:
       0: getstatic     #4                  // Field FIELDS:Ljava/util/List;
       3: areturn

  public <C> void inject(io.opencensus.trace.SpanContext, C, io.opencensus.trace.propagation.TextFormat$Setter<C>);
    Code:
       0: aload_1
       1: ldc           #5                  // String spanContext
       3: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: ldc           #7                  // String setter
      10: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_2
      15: ldc           #8                  // String carrier
      17: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: new           #9                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      28: aload_1
      29: invokevirtual #11                 // Method io/opencensus/trace/SpanContext.getTraceId:()Lio/opencensus/trace/TraceId;
      32: invokevirtual #12                 // Method io/opencensus/trace/TraceId.toLowerBase16:()Ljava/lang/String;
      35: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: bipush        47
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #15                 // Method io/opencensus/trace/SpanContext.getSpanId:()Lio/opencensus/trace/SpanId;
      47: invokestatic  #16                 // Method spanIdToLong:(Lio/opencensus/trace/SpanId;)J
      50: invokestatic  #17                 // Method com/google/common/primitives/UnsignedLongs.toString:(J)Ljava/lang/String;
      53: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #18                 // String ;o=
      58: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_1
      62: invokevirtual #19                 // Method io/opencensus/trace/SpanContext.getTraceOptions:()Lio/opencensus/trace/TraceOptions;
      65: invokevirtual #20                 // Method io/opencensus/trace/TraceOptions.isSampled:()Z
      68: ifeq          76
      71: ldc           #21                 // String 1
      73: goto          78
      76: ldc           #22                 // String 0
      78: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: astore        4
      83: aload_3
      84: aload_2
      85: ldc           #23                 // String X-Cloud-Trace-Context
      87: aload         4
      89: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokevirtual #25                 // Method io/opencensus/trace/propagation/TextFormat$Setter.put:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V
      95: return

  public <C> io.opencensus.trace.SpanContext extract(C, io.opencensus.trace.propagation.TextFormat$Getter<C>) throws io.opencensus.trace.propagation.SpanContextParseException;
    Code:
       0: aload_1
       1: ldc           #8                  // String carrier
       3: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #26                 // String getter
      10: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_2
      15: aload_1
      16: ldc           #23                 // String X-Cloud-Trace-Context
      18: invokevirtual #27                 // Method io/opencensus/trace/propagation/TextFormat$Getter.get:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
      21: astore_3
      22: aload_3
      23: ifnull        35
      26: aload_3
      27: invokevirtual #28                 // Method java/lang/String.length:()I
      30: bipush        34
      32: if_icmpge     45
      35: new           #29                 // class io/opencensus/trace/propagation/SpanContextParseException
      38: dup
      39: ldc           #30                 // String Missing or too short header: X-Cloud-Trace-Context
      41: invokespecial #31                 // Method io/opencensus/trace/propagation/SpanContextParseException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_3
      46: bipush        32
      48: invokevirtual #32                 // Method java/lang/String.charAt:(I)C
      51: bipush        47
      53: if_icmpne     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ldc           #33                 // String Invalid TRACE_ID size
      63: invokestatic  #34                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      66: aload_3
      67: iconst_0
      68: bipush        32
      70: invokevirtual #35                 // Method java/lang/String.subSequence:(II)Ljava/lang/CharSequence;
      73: invokestatic  #36                 // Method io/opencensus/trace/TraceId.fromLowerBase16:(Ljava/lang/CharSequence;)Lio/opencensus/trace/TraceId;
      76: astore        4
      78: aload_3
      79: ldc           #18                 // String ;o=
      81: bipush        32
      83: invokevirtual #37                 // Method java/lang/String.indexOf:(Ljava/lang/String;I)I
      86: istore        5
      88: aload_3
      89: bipush        33
      91: iload         5
      93: ifge          103
      96: aload_3
      97: invokevirtual #28                 // Method java/lang/String.length:()I
     100: goto          105
     103: iload         5
     105: invokevirtual #35                 // Method java/lang/String.subSequence:(II)Ljava/lang/CharSequence;
     108: astore        6
     110: aload         6
     112: invokeinterface #38,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
     117: bipush        10
     119: invokestatic  #39                 // Method com/google/common/primitives/UnsignedLongs.parseUnsignedLong:(Ljava/lang/String;I)J
     122: invokestatic  #40                 // Method longToSpanId:(J)Lio/opencensus/trace/SpanId;
     125: astore        7
     127: getstatic     #41                 // Field OPTIONS_NOT_SAMPLED:Lio/opencensus/trace/TraceOptions;
     130: astore        8
     132: iload         5
     134: ifle          166
     137: aload_3
     138: iload         5
     140: getstatic     #42                 // Field TRACE_OPTION_DELIMITER_SIZE:I
     143: iadd
     144: invokevirtual #43                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     147: astore        9
     149: aload         9
     151: bipush        10
     153: invokestatic  #44                 // Method com/google/common/primitives/UnsignedInts.parseUnsignedInt:(Ljava/lang/String;I)I
     156: iconst_1
     157: iand
     158: ifeq          166
     161: getstatic     #45                 // Field OPTIONS_SAMPLED:Lio/opencensus/trace/TraceOptions;
     164: astore        8
     166: aload         4
     168: aload         7
     170: aload         8
     172: getstatic     #46                 // Field TRACESTATE_DEFAULT:Lio/opencensus/trace/Tracestate;
     175: invokestatic  #47                 // Method io/opencensus/trace/SpanContext.create:(Lio/opencensus/trace/TraceId;Lio/opencensus/trace/SpanId;Lio/opencensus/trace/TraceOptions;Lio/opencensus/trace/Tracestate;)Lio/opencensus/trace/SpanContext;
     178: areturn
     179: astore_3
     180: new           #29                 // class io/opencensus/trace/propagation/SpanContextParseException
     183: dup
     184: ldc           #49                 // String Invalid input
     186: aload_3
     187: invokespecial #50                 // Method io/opencensus/trace/propagation/SpanContextParseException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     190: athrow
    Exception table:
       from    to  target type
          14   178   179   Class java/lang/IllegalArgumentException

  private static io.opencensus.trace.SpanId longToSpanId(long);
    Code:
       0: bipush        8
       2: invokestatic  #52                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       5: astore_2
       6: aload_2
       7: lload_0
       8: invokevirtual #53                 // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      11: pop
      12: aload_2
      13: invokevirtual #54                 // Method java/nio/ByteBuffer.array:()[B
      16: invokestatic  #55                 // Method io/opencensus/trace/SpanId.fromBytes:([B)Lio/opencensus/trace/SpanId;
      19: areturn

  private static long spanIdToLong(io.opencensus.trace.SpanId);
    Code:
       0: bipush        8
       2: invokestatic  #52                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       5: astore_1
       6: aload_1
       7: aload_0
       8: invokevirtual #56                 // Method io/opencensus/trace/SpanId.getBytes:()[B
      11: invokevirtual #57                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      14: pop
      15: aload_1
      16: iconst_0
      17: invokevirtual #58                 // Method java/nio/ByteBuffer.getLong:(I)J
      20: lreturn

  static {};
    Code:
       0: ldc           #23                 // String X-Cloud-Trace-Context
       2: invokestatic  #59                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       5: putstatic     #4                  // Field FIELDS:Ljava/util/List;
       8: invokestatic  #60                 // Method io/opencensus/trace/TraceOptions.builder:()Lio/opencensus/trace/TraceOptions$Builder;
      11: iconst_1
      12: invokevirtual #61                 // Method io/opencensus/trace/TraceOptions$Builder.setIsSampled:(Z)Lio/opencensus/trace/TraceOptions$Builder;
      15: invokevirtual #62                 // Method io/opencensus/trace/TraceOptions$Builder.build:()Lio/opencensus/trace/TraceOptions;
      18: putstatic     #45                 // Field OPTIONS_SAMPLED:Lio/opencensus/trace/TraceOptions;
      21: getstatic     #63                 // Field io/opencensus/trace/TraceOptions.DEFAULT:Lio/opencensus/trace/TraceOptions;
      24: putstatic     #41                 // Field OPTIONS_NOT_SAMPLED:Lio/opencensus/trace/TraceOptions;
      27: ldc           #18                 // String ;o=
      29: invokevirtual #28                 // Method java/lang/String.length:()I
      32: putstatic     #42                 // Field TRACE_OPTION_DELIMITER_SIZE:I
      35: invokestatic  #64                 // Method io/opencensus/trace/Tracestate.builder:()Lio/opencensus/trace/Tracestate$Builder;
      38: invokevirtual #65                 // Method io/opencensus/trace/Tracestate$Builder.build:()Lio/opencensus/trace/Tracestate;
      41: putstatic     #46                 // Field TRACESTATE_DEFAULT:Lio/opencensus/trace/Tracestate;
      44: return
}
