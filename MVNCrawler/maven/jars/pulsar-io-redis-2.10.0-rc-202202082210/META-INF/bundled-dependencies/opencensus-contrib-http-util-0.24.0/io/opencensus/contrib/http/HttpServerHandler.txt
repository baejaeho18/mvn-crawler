Compiled from "HttpServerHandler.java"
public class io.opencensus.contrib.http.HttpServerHandler<Q, P, C> extends io.opencensus.contrib.http.AbstractHttpHandler<Q, P> {
  private final io.opencensus.trace.propagation.TextFormat$Getter<C> getter;

  private final io.opencensus.trace.propagation.TextFormat textFormat;

  private final io.opencensus.trace.Tracer tracer;

  private final java.lang.Boolean publicEndpoint;

  private final io.opencensus.stats.StatsRecorder statsRecorder;

  private final io.opencensus.tags.Tagger tagger;

  public io.opencensus.contrib.http.HttpServerHandler(io.opencensus.trace.Tracer, io.opencensus.contrib.http.HttpExtractor<Q, P>, io.opencensus.trace.propagation.TextFormat, io.opencensus.trace.propagation.TextFormat$Getter<C>, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method io/opencensus/contrib/http/AbstractHttpHandler."<init>":(Lio/opencensus/contrib/http/HttpExtractor;)V
       5: aload_1
       6: ldc           #2                  // String tracer
       8: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_3
      13: ldc           #4                  // String textFormat
      15: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload         4
      21: ldc           #5                  // String getter
      23: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload         5
      29: ldc           #6                  // String publicEndpoint
      31: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_0
      36: aload_1
      37: putfield      #7                  // Field tracer:Lio/opencensus/trace/Tracer;
      40: aload_0
      41: aload_3
      42: putfield      #8                  // Field textFormat:Lio/opencensus/trace/propagation/TextFormat;
      45: aload_0
      46: aload         4
      48: putfield      #9                  // Field getter:Lio/opencensus/trace/propagation/TextFormat$Getter;
      51: aload_0
      52: aload         5
      54: putfield      #10                 // Field publicEndpoint:Ljava/lang/Boolean;
      57: aload_0
      58: invokestatic  #11                 // Method io/opencensus/stats/Stats.getStatsRecorder:()Lio/opencensus/stats/StatsRecorder;
      61: putfield      #12                 // Field statsRecorder:Lio/opencensus/stats/StatsRecorder;
      64: aload_0
      65: invokestatic  #13                 // Method io/opencensus/tags/Tags.getTagger:()Lio/opencensus/tags/Tagger;
      68: putfield      #14                 // Field tagger:Lio/opencensus/tags/Tagger;
      71: return

  public io.opencensus.contrib.http.HttpRequestContext handleStart(C, Q);
    Code:
       0: aload_1
       1: ldc           #15                 // String carrier
       3: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #16                 // String request
      10: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aconst_null
      15: astore_3
      16: aload_0
      17: aload_2
      18: aload_0
      19: getfield      #17                 // Field extractor:Lio/opencensus/contrib/http/HttpExtractor;
      22: invokevirtual #18                 // Method getSpanName:(Ljava/lang/Object;Lio/opencensus/contrib/http/HttpExtractor;)Ljava/lang/String;
      25: astore        4
      27: aconst_null
      28: astore        5
      30: aload_0
      31: getfield      #8                  // Field textFormat:Lio/opencensus/trace/propagation/TextFormat;
      34: aload_1
      35: aload_0
      36: getfield      #9                  // Field getter:Lio/opencensus/trace/propagation/TextFormat$Getter;
      39: invokevirtual #19                 // Method io/opencensus/trace/propagation/TextFormat.extract:(Ljava/lang/Object;Lio/opencensus/trace/propagation/TextFormat$Getter;)Lio/opencensus/trace/SpanContext;
      42: astore        5
      44: goto          49
      47: astore        6
      49: aload         5
      51: ifnull        64
      54: aload_0
      55: getfield      #10                 // Field publicEndpoint:Ljava/lang/Boolean;
      58: invokevirtual #21                 // Method java/lang/Boolean.booleanValue:()Z
      61: ifeq          77
      64: aload_0
      65: getfield      #7                  // Field tracer:Lio/opencensus/trace/Tracer;
      68: aload         4
      70: invokevirtual #22                 // Method io/opencensus/trace/Tracer.spanBuilder:(Ljava/lang/String;)Lio/opencensus/trace/SpanBuilder;
      73: astore_3
      74: goto          89
      77: aload_0
      78: getfield      #7                  // Field tracer:Lio/opencensus/trace/Tracer;
      81: aload         4
      83: aload         5
      85: invokevirtual #23                 // Method io/opencensus/trace/Tracer.spanBuilderWithRemoteParent:(Ljava/lang/String;Lio/opencensus/trace/SpanContext;)Lio/opencensus/trace/SpanBuilder;
      88: astore_3
      89: aload_3
      90: getstatic     #24                 // Field io/opencensus/trace/Span$Kind.SERVER:Lio/opencensus/trace/Span$Kind;
      93: invokevirtual #25                 // Method io/opencensus/trace/SpanBuilder.setSpanKind:(Lio/opencensus/trace/Span$Kind;)Lio/opencensus/trace/SpanBuilder;
      96: invokevirtual #26                 // Method io/opencensus/trace/SpanBuilder.startSpan:()Lio/opencensus/trace/Span;
      99: astore        6
     101: aload_0
     102: getfield      #10                 // Field publicEndpoint:Ljava/lang/Boolean;
     105: invokevirtual #21                 // Method java/lang/Boolean.booleanValue:()Z
     108: ifeq          129
     111: aload         5
     113: ifnull        129
     116: aload         6
     118: aload         5
     120: getstatic     #27                 // Field io/opencensus/trace/Link$Type.PARENT_LINKED_SPAN:Lio/opencensus/trace/Link$Type;
     123: invokestatic  #28                 // Method io/opencensus/trace/Link.fromSpanContext:(Lio/opencensus/trace/SpanContext;Lio/opencensus/trace/Link$Type;)Lio/opencensus/trace/Link;
     126: invokevirtual #29                 // Method io/opencensus/trace/Span.addLink:(Lio/opencensus/trace/Link;)V
     129: aload         6
     131: invokevirtual #30                 // Method io/opencensus/trace/Span.getOptions:()Ljava/util/Set;
     134: getstatic     #31                 // Field io/opencensus/trace/Span$Options.RECORD_EVENTS:Lio/opencensus/trace/Span$Options;
     137: invokeinterface #32,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     142: ifeq          156
     145: aload_0
     146: aload         6
     148: aload_2
     149: aload_0
     150: getfield      #17                 // Field extractor:Lio/opencensus/contrib/http/HttpExtractor;
     153: invokevirtual #33                 // Method addSpanRequestAttributes:(Lio/opencensus/trace/Span;Ljava/lang/Object;Lio/opencensus/contrib/http/HttpExtractor;)V
     156: aload_0
     157: aload         6
     159: aload_0
     160: getfield      #14                 // Field tagger:Lio/opencensus/tags/Tagger;
     163: invokevirtual #34                 // Method io/opencensus/tags/Tagger.getCurrentTagContext:()Lio/opencensus/tags/TagContext;
     166: invokevirtual #35                 // Method getNewContext:(Lio/opencensus/trace/Span;Lio/opencensus/tags/TagContext;)Lio/opencensus/contrib/http/HttpRequestContext;
     169: areturn
    Exception table:
       from    to  target type
          30    44    47   Class io/opencensus/trace/propagation/SpanContextParseException

  public void handleEnd(io.opencensus.contrib.http.HttpRequestContext, Q, P, java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #36                 // String context
       3: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #16                 // String request
      10: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: getfield      #17                 // Field extractor:Lio/opencensus/contrib/http/HttpExtractor;
      18: aload_3
      19: invokevirtual #37                 // Method io/opencensus/contrib/http/HttpExtractor.getStatusCode:(Ljava/lang/Object;)I
      22: istore        5
      24: aload_0
      25: aload_1
      26: aload_2
      27: iload         5
      29: invokespecial #38                 // Method recordStats:(Lio/opencensus/contrib/http/HttpRequestContext;Ljava/lang/Object;I)V
      32: aload_0
      33: aload_1
      34: getfield      #39                 // Field io/opencensus/contrib/http/HttpRequestContext.span:Lio/opencensus/trace/Span;
      37: iload         5
      39: aload         4
      41: invokevirtual #40                 // Method spanEnd:(Lio/opencensus/trace/Span;ILjava/lang/Throwable;)V
      44: return

  private void recordStats(io.opencensus.contrib.http.HttpRequestContext, Q, int);
    Code:
       0: getstatic     #41                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       3: invokestatic  #42                 // Method java/lang/System.nanoTime:()J
       6: aload_1
       7: getfield      #43                 // Field io/opencensus/contrib/http/HttpRequestContext.requestStartTime:J
      10: lsub
      11: invokevirtual #44                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      14: l2d
      15: dstore        4
      17: aload_0
      18: getfield      #17                 // Field extractor:Lio/opencensus/contrib/http/HttpExtractor;
      21: aload_2
      22: invokevirtual #45                 // Method io/opencensus/contrib/http/HttpExtractor.getMethod:(Ljava/lang/Object;)Ljava/lang/String;
      25: astore        6
      27: aload_0
      28: getfield      #17                 // Field extractor:Lio/opencensus/contrib/http/HttpExtractor;
      31: aload_2
      32: invokevirtual #46                 // Method io/opencensus/contrib/http/HttpExtractor.getRoute:(Ljava/lang/Object;)Ljava/lang/String;
      35: astore        7
      37: aload_0
      38: getfield      #14                 // Field tagger:Lio/opencensus/tags/Tagger;
      41: aload_1
      42: getfield      #47                 // Field io/opencensus/contrib/http/HttpRequestContext.tagContext:Lio/opencensus/tags/TagContext;
      45: invokevirtual #48                 // Method io/opencensus/tags/Tagger.toBuilder:(Lio/opencensus/tags/TagContext;)Lio/opencensus/tags/TagContextBuilder;
      48: getstatic     #49                 // Field io/opencensus/contrib/http/util/HttpMeasureConstants.HTTP_SERVER_METHOD:Lio/opencensus/tags/TagKey;
      51: aload         6
      53: ifnonnull     61
      56: ldc           #50                 // String
      58: goto          63
      61: aload         6
      63: invokestatic  #51                 // Method io/opencensus/tags/TagValue.create:(Ljava/lang/String;)Lio/opencensus/tags/TagValue;
      66: getstatic     #52                 // Field io/opencensus/contrib/http/HttpRequestContext.METADATA_NO_PROPAGATION:Lio/opencensus/tags/TagMetadata;
      69: invokevirtual #53                 // Method io/opencensus/tags/TagContextBuilder.put:(Lio/opencensus/tags/TagKey;Lio/opencensus/tags/TagValue;Lio/opencensus/tags/TagMetadata;)Lio/opencensus/tags/TagContextBuilder;
      72: getstatic     #54                 // Field io/opencensus/contrib/http/util/HttpMeasureConstants.HTTP_SERVER_ROUTE:Lio/opencensus/tags/TagKey;
      75: aload         7
      77: ifnonnull     85
      80: ldc           #50                 // String
      82: goto          87
      85: aload         7
      87: invokestatic  #51                 // Method io/opencensus/tags/TagValue.create:(Ljava/lang/String;)Lio/opencensus/tags/TagValue;
      90: getstatic     #52                 // Field io/opencensus/contrib/http/HttpRequestContext.METADATA_NO_PROPAGATION:Lio/opencensus/tags/TagMetadata;
      93: invokevirtual #53                 // Method io/opencensus/tags/TagContextBuilder.put:(Lio/opencensus/tags/TagKey;Lio/opencensus/tags/TagValue;Lio/opencensus/tags/TagMetadata;)Lio/opencensus/tags/TagContextBuilder;
      96: getstatic     #55                 // Field io/opencensus/contrib/http/util/HttpMeasureConstants.HTTP_SERVER_STATUS:Lio/opencensus/tags/TagKey;
      99: iload_3
     100: ifne          108
     103: ldc           #56                 // String error
     105: goto          112
     108: iload_3
     109: invokestatic  #57                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     112: invokestatic  #51                 // Method io/opencensus/tags/TagValue.create:(Ljava/lang/String;)Lio/opencensus/tags/TagValue;
     115: getstatic     #52                 // Field io/opencensus/contrib/http/HttpRequestContext.METADATA_NO_PROPAGATION:Lio/opencensus/tags/TagMetadata;
     118: invokevirtual #53                 // Method io/opencensus/tags/TagContextBuilder.put:(Lio/opencensus/tags/TagKey;Lio/opencensus/tags/TagValue;Lio/opencensus/tags/TagMetadata;)Lio/opencensus/tags/TagContextBuilder;
     121: invokevirtual #58                 // Method io/opencensus/tags/TagContextBuilder.build:()Lio/opencensus/tags/TagContext;
     124: astore        8
     126: aload_0
     127: getfield      #12                 // Field statsRecorder:Lio/opencensus/stats/StatsRecorder;
     130: invokevirtual #59                 // Method io/opencensus/stats/StatsRecorder.newMeasureMap:()Lio/opencensus/stats/MeasureMap;
     133: getstatic     #60                 // Field io/opencensus/contrib/http/util/HttpMeasureConstants.HTTP_SERVER_LATENCY:Lio/opencensus/stats/Measure$MeasureDouble;
     136: dload         4
     138: invokevirtual #61                 // Method io/opencensus/stats/MeasureMap.put:(Lio/opencensus/stats/Measure$MeasureDouble;D)Lio/opencensus/stats/MeasureMap;
     141: getstatic     #62                 // Field io/opencensus/contrib/http/util/HttpMeasureConstants.HTTP_SERVER_RECEIVED_BYTES:Lio/opencensus/stats/Measure$MeasureLong;
     144: aload_1
     145: getfield      #63                 // Field io/opencensus/contrib/http/HttpRequestContext.receiveMessageSize:Ljava/util/concurrent/atomic/AtomicLong;
     148: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     151: invokevirtual #65                 // Method io/opencensus/stats/MeasureMap.put:(Lio/opencensus/stats/Measure$MeasureLong;J)Lio/opencensus/stats/MeasureMap;
     154: getstatic     #66                 // Field io/opencensus/contrib/http/util/HttpMeasureConstants.HTTP_SERVER_SENT_BYTES:Lio/opencensus/stats/Measure$MeasureLong;
     157: aload_1
     158: getfield      #67                 // Field io/opencensus/contrib/http/HttpRequestContext.sentMessageSize:Ljava/util/concurrent/atomic/AtomicLong;
     161: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     164: invokevirtual #65                 // Method io/opencensus/stats/MeasureMap.put:(Lio/opencensus/stats/Measure$MeasureLong;J)Lio/opencensus/stats/MeasureMap;
     167: aload         8
     169: invokevirtual #68                 // Method io/opencensus/stats/MeasureMap.record:(Lio/opencensus/tags/TagContext;)V
     172: return

  public io.opencensus.trace.Span getSpanFromContext(io.opencensus.contrib.http.HttpRequestContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #69                 // Method io/opencensus/contrib/http/AbstractHttpHandler.getSpanFromContext:(Lio/opencensus/contrib/http/HttpRequestContext;)Lio/opencensus/trace/Span;
       5: areturn
}
