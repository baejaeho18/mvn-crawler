Compiled from "SecT571Field.java"
public class org.bouncycastle.math.ec.custom.sec.SecT571Field {
  private static final long M59;

  private static final long[] ROOT_Z;

  public org.bouncycastle.math.ec.custom.sec.SecT571Field();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void add(long[], long[], long[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: bipush        9
       5: if_icmpge     24
       8: aload_2
       9: iload_3
      10: aload_0
      11: iload_3
      12: laload
      13: aload_1
      14: iload_3
      15: laload
      16: lxor
      17: lastore
      18: iinc          3, 1
      21: goto          2
      24: return

  private static void add(long[], int, long[], int, long[], int);
    Code:
       0: iconst_0
       1: istore        6
       3: iload         6
       5: bipush        9
       7: if_icmpge     37
      10: aload         4
      12: iload         5
      14: iload         6
      16: iadd
      17: aload_0
      18: iload_1
      19: iload         6
      21: iadd
      22: laload
      23: aload_2
      24: iload_3
      25: iload         6
      27: iadd
      28: laload
      29: lxor
      30: lastore
      31: iinc          6, 1
      34: goto          3
      37: return

  public static void addBothTo(long[], long[], long[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: bipush        9
       5: if_icmpge     27
       8: aload_2
       9: iload_3
      10: dup2
      11: laload
      12: aload_0
      13: iload_3
      14: laload
      15: aload_1
      16: iload_3
      17: laload
      18: lxor
      19: lxor
      20: lastore
      21: iinc          3, 1
      24: goto          2
      27: return

  private static void addBothTo(long[], int, long[], int, long[], int);
    Code:
       0: iconst_0
       1: istore        6
       3: iload         6
       5: bipush        9
       7: if_icmpge     40
      10: aload         4
      12: iload         5
      14: iload         6
      16: iadd
      17: dup2
      18: laload
      19: aload_0
      20: iload_1
      21: iload         6
      23: iadd
      24: laload
      25: aload_2
      26: iload_3
      27: iload         6
      29: iadd
      30: laload
      31: lxor
      32: lxor
      33: lastore
      34: iinc          6, 1
      37: goto          3
      40: return

  public static void addExt(long[], long[], long[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: bipush        18
       5: if_icmpge     24
       8: aload_2
       9: iload_3
      10: aload_0
      11: iload_3
      12: laload
      13: aload_1
      14: iload_3
      15: laload
      16: lxor
      17: lastore
      18: iinc          3, 1
      21: goto          2
      24: return

  public static void addOne(long[], long[]);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_0
       3: iconst_0
       4: laload
       5: lconst_1
       6: lxor
       7: lastore
       8: iconst_1
       9: istore_2
      10: iload_2
      11: bipush        9
      13: if_icmpge     28
      16: aload_1
      17: iload_2
      18: aload_0
      19: iload_2
      20: laload
      21: lastore
      22: iinc          2, 1
      25: goto          10
      28: return

  private static void addTo(long[], long[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: bipush        9
       5: if_icmpge     23
       8: aload_1
       9: iload_2
      10: dup2
      11: laload
      12: aload_0
      13: iload_2
      14: laload
      15: lxor
      16: lastore
      17: iinc          2, 1
      20: goto          2
      23: return

  public static long[] fromBigInteger(java.math.BigInteger);
    Code:
       0: sipush        571
       3: aload_0
       4: invokestatic  #2                  // Method org/bouncycastle/math/raw/Nat.fromBigInteger64:(ILjava/math/BigInteger;)[J
       7: areturn

  public static void halfTrace(long[], long[]);
    Code:
       0: invokestatic  #3                  // Method org/bouncycastle/math/raw/Nat576.createExt64:()[J
       3: astore_2
       4: aload_0
       5: aload_1
       6: invokestatic  #4                  // Method org/bouncycastle/math/raw/Nat576.copy64:([J[J)V
       9: iconst_1
      10: istore_3
      11: iload_3
      12: sipush        571
      15: if_icmpge     49
      18: aload_1
      19: aload_2
      20: invokestatic  #5                  // Method implSquare:([J[J)V
      23: aload_2
      24: aload_1
      25: invokestatic  #6                  // Method reduce:([J[J)V
      28: aload_1
      29: aload_2
      30: invokestatic  #5                  // Method implSquare:([J[J)V
      33: aload_2
      34: aload_1
      35: invokestatic  #6                  // Method reduce:([J[J)V
      38: aload_0
      39: aload_1
      40: invokestatic  #7                  // Method addTo:([J[J)V
      43: iinc          3, 2
      46: goto          11
      49: return

  public static void invert(long[], long[]);
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method org/bouncycastle/math/raw/Nat576.isZero64:([J)Z
       4: ifeq          15
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: invokestatic  #11                 // Method org/bouncycastle/math/raw/Nat576.create64:()[J
      18: astore_2
      19: invokestatic  #11                 // Method org/bouncycastle/math/raw/Nat576.create64:()[J
      22: astore_3
      23: invokestatic  #11                 // Method org/bouncycastle/math/raw/Nat576.create64:()[J
      26: astore        4
      28: aload_0
      29: aload         4
      31: invokestatic  #12                 // Method square:([J[J)V
      34: aload         4
      36: aload_2
      37: invokestatic  #12                 // Method square:([J[J)V
      40: aload_2
      41: aload_3
      42: invokestatic  #12                 // Method square:([J[J)V
      45: aload_2
      46: aload_3
      47: aload_2
      48: invokestatic  #13                 // Method multiply:([J[J[J)V
      51: aload_2
      52: iconst_2
      53: aload_3
      54: invokestatic  #14                 // Method squareN:([JI[J)V
      57: aload_2
      58: aload_3
      59: aload_2
      60: invokestatic  #13                 // Method multiply:([J[J[J)V
      63: aload_2
      64: aload         4
      66: aload_2
      67: invokestatic  #13                 // Method multiply:([J[J[J)V
      70: aload_2
      71: iconst_5
      72: aload_3
      73: invokestatic  #14                 // Method squareN:([JI[J)V
      76: aload_2
      77: aload_3
      78: aload_2
      79: invokestatic  #13                 // Method multiply:([J[J[J)V
      82: aload_3
      83: iconst_5
      84: aload_3
      85: invokestatic  #14                 // Method squareN:([JI[J)V
      88: aload_2
      89: aload_3
      90: aload_2
      91: invokestatic  #13                 // Method multiply:([J[J[J)V
      94: aload_2
      95: bipush        15
      97: aload_3
      98: invokestatic  #14                 // Method squareN:([JI[J)V
     101: aload_2
     102: aload_3
     103: aload         4
     105: invokestatic  #13                 // Method multiply:([J[J[J)V
     108: aload         4
     110: bipush        30
     112: aload_2
     113: invokestatic  #14                 // Method squareN:([JI[J)V
     116: aload_2
     117: bipush        30
     119: aload_3
     120: invokestatic  #14                 // Method squareN:([JI[J)V
     123: aload_2
     124: aload_3
     125: aload_2
     126: invokestatic  #13                 // Method multiply:([J[J[J)V
     129: aload_2
     130: bipush        60
     132: aload_3
     133: invokestatic  #14                 // Method squareN:([JI[J)V
     136: aload_2
     137: aload_3
     138: aload_2
     139: invokestatic  #13                 // Method multiply:([J[J[J)V
     142: aload_3
     143: bipush        60
     145: aload_3
     146: invokestatic  #14                 // Method squareN:([JI[J)V
     149: aload_2
     150: aload_3
     151: aload_2
     152: invokestatic  #13                 // Method multiply:([J[J[J)V
     155: aload_2
     156: sipush        180
     159: aload_3
     160: invokestatic  #14                 // Method squareN:([JI[J)V
     163: aload_2
     164: aload_3
     165: aload_2
     166: invokestatic  #13                 // Method multiply:([J[J[J)V
     169: aload_3
     170: sipush        180
     173: aload_3
     174: invokestatic  #14                 // Method squareN:([JI[J)V
     177: aload_2
     178: aload_3
     179: aload_2
     180: invokestatic  #13                 // Method multiply:([J[J[J)V
     183: aload_2
     184: aload         4
     186: aload_1
     187: invokestatic  #13                 // Method multiply:([J[J[J)V
     190: return

  public static void multiply(long[], long[], long[]);
    Code:
       0: invokestatic  #3                  // Method org/bouncycastle/math/raw/Nat576.createExt64:()[J
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #15                 // Method implMultiply:([J[J[J)V
      10: aload_3
      11: aload_2
      12: invokestatic  #6                  // Method reduce:([J[J)V
      15: return

  public static void multiplyAddToExt(long[], long[], long[]);
    Code:
       0: invokestatic  #3                  // Method org/bouncycastle/math/raw/Nat576.createExt64:()[J
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #15                 // Method implMultiply:([J[J[J)V
      10: aload_2
      11: aload_3
      12: aload_2
      13: invokestatic  #16                 // Method addExt:([J[J[J)V
      16: return

  public static void multiplyPrecomp(long[], long[], long[]);
    Code:
       0: invokestatic  #3                  // Method org/bouncycastle/math/raw/Nat576.createExt64:()[J
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #17                 // Method implMultiplyPrecomp:([J[J[J)V
      10: aload_3
      11: aload_2
      12: invokestatic  #6                  // Method reduce:([J[J)V
      15: return

  public static void multiplyPrecompAddToExt(long[], long[], long[]);
    Code:
       0: invokestatic  #3                  // Method org/bouncycastle/math/raw/Nat576.createExt64:()[J
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #17                 // Method implMultiplyPrecomp:([J[J[J)V
      10: aload_2
      11: aload_3
      12: aload_2
      13: invokestatic  #16                 // Method addExt:([J[J[J)V
      16: return

  public static long[] precompMultiplicand(long[]);
    Code:
       0: sipush        144
       3: istore_1
       4: iload_1
       5: iconst_1
       6: ishl
       7: newarray       long
       9: astore_2
      10: aload_0
      11: iconst_0
      12: aload_2
      13: bipush        9
      15: bipush        9
      17: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      20: iconst_0
      21: istore_3
      22: bipush        7
      24: istore        4
      26: iload         4
      28: ifle          71
      31: iinc          3, 18
      34: bipush        9
      36: aload_2
      37: iload_3
      38: iconst_1
      39: iushr
      40: lconst_0
      41: aload_2
      42: iload_3
      43: invokestatic  #19                 // Method org/bouncycastle/math/raw/Nat.shiftUpBit64:(I[JIJ[JI)J
      46: pop2
      47: aload_2
      48: iload_3
      49: invokestatic  #20                 // Method reduce5:([JI)V
      52: aload_2
      53: bipush        9
      55: aload_2
      56: iload_3
      57: aload_2
      58: iload_3
      59: bipush        9
      61: iadd
      62: invokestatic  #21                 // Method add:([JI[JI[JI)V
      65: iinc          4, -1
      68: goto          26
      71: iload_1
      72: aload_2
      73: iconst_0
      74: iconst_4
      75: lconst_0
      76: aload_2
      77: iload_1
      78: invokestatic  #22                 // Method org/bouncycastle/math/raw/Nat.shiftUpBits64:(I[JIIJ[JI)J
      81: pop2
      82: aload_2
      83: areturn

  public static void reduce(long[], long[]);
    Code:
       0: aload_0
       1: bipush        9
       3: laload
       4: lstore_2
       5: aload_0
       6: bipush        17
       8: laload
       9: lstore        4
      11: lload_2
      12: lstore        6
      14: lload         6
      16: lload         4
      18: bipush        59
      20: lushr
      21: lxor
      22: lload         4
      24: bipush        57
      26: lushr
      27: lxor
      28: lload         4
      30: bipush        54
      32: lushr
      33: lxor
      34: lload         4
      36: bipush        49
      38: lushr
      39: lxor
      40: lstore_2
      41: aload_0
      42: bipush        8
      44: laload
      45: lload         4
      47: iconst_5
      48: lshl
      49: lxor
      50: lload         4
      52: bipush        7
      54: lshl
      55: lxor
      56: lload         4
      58: bipush        10
      60: lshl
      61: lxor
      62: lload         4
      64: bipush        15
      66: lshl
      67: lxor
      68: lstore        6
      70: bipush        16
      72: istore        8
      74: iload         8
      76: bipush        10
      78: if_icmplt     158
      81: aload_0
      82: iload         8
      84: laload
      85: lstore        4
      87: aload_1
      88: iload         8
      90: bipush        8
      92: isub
      93: lload         6
      95: lload         4
      97: bipush        59
      99: lushr
     100: lxor
     101: lload         4
     103: bipush        57
     105: lushr
     106: lxor
     107: lload         4
     109: bipush        54
     111: lushr
     112: lxor
     113: lload         4
     115: bipush        49
     117: lushr
     118: lxor
     119: lastore
     120: aload_0
     121: iload         8
     123: bipush        9
     125: isub
     126: laload
     127: lload         4
     129: iconst_5
     130: lshl
     131: lxor
     132: lload         4
     134: bipush        7
     136: lshl
     137: lxor
     138: lload         4
     140: bipush        10
     142: lshl
     143: lxor
     144: lload         4
     146: bipush        15
     148: lshl
     149: lxor
     150: lstore        6
     152: iinc          8, -1
     155: goto          74
     158: lload_2
     159: lstore        4
     161: aload_1
     162: iconst_1
     163: lload         6
     165: lload         4
     167: bipush        59
     169: lushr
     170: lxor
     171: lload         4
     173: bipush        57
     175: lushr
     176: lxor
     177: lload         4
     179: bipush        54
     181: lushr
     182: lxor
     183: lload         4
     185: bipush        49
     187: lushr
     188: lxor
     189: lastore
     190: aload_0
     191: iconst_0
     192: laload
     193: lload         4
     195: iconst_5
     196: lshl
     197: lxor
     198: lload         4
     200: bipush        7
     202: lshl
     203: lxor
     204: lload         4
     206: bipush        10
     208: lshl
     209: lxor
     210: lload         4
     212: bipush        15
     214: lshl
     215: lxor
     216: lstore        6
     218: aload_1
     219: bipush        8
     221: laload
     222: lstore        8
     224: lload         8
     226: bipush        59
     228: lushr
     229: lstore        10
     231: aload_1
     232: iconst_0
     233: lload         6
     235: lload         10
     237: lxor
     238: lload         10
     240: iconst_2
     241: lshl
     242: lxor
     243: lload         10
     245: iconst_5
     246: lshl
     247: lxor
     248: lload         10
     250: bipush        10
     252: lshl
     253: lxor
     254: lastore
     255: aload_1
     256: bipush        8
     258: lload         8
     260: ldc2_w        #24                 // long 576460752303423487l
     263: land
     264: lastore
     265: return

  public static void reduce5(long[], int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: iadd
       5: laload
       6: lstore_2
       7: lload_2
       8: bipush        59
      10: lushr
      11: lstore        4
      13: aload_0
      14: iload_1
      15: dup2
      16: laload
      17: lload         4
      19: lload         4
      21: iconst_2
      22: lshl
      23: lxor
      24: lload         4
      26: iconst_5
      27: lshl
      28: lxor
      29: lload         4
      31: bipush        10
      33: lshl
      34: lxor
      35: lxor
      36: lastore
      37: aload_0
      38: iload_1
      39: bipush        8
      41: iadd
      42: lload_2
      43: ldc2_w        #24                 // long 576460752303423487l
      46: land
      47: lastore
      48: return

  public static void sqrt(long[], long[]);
    Code:
       0: invokestatic  #11                 // Method org/bouncycastle/math/raw/Nat576.create64:()[J
       3: astore_2
       4: invokestatic  #11                 // Method org/bouncycastle/math/raw/Nat576.create64:()[J
       7: astore_3
       8: iconst_0
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iconst_4
      17: if_icmpge     82
      20: aload_0
      21: iload         4
      23: iinc          4, 1
      26: laload
      27: invokestatic  #26                 // Method org/bouncycastle/math/raw/Interleave.unshuffle:(J)J
      30: lstore        6
      32: aload_0
      33: iload         4
      35: iinc          4, 1
      38: laload
      39: invokestatic  #26                 // Method org/bouncycastle/math/raw/Interleave.unshuffle:(J)J
      42: lstore        8
      44: aload_2
      45: iload         5
      47: lload         6
      49: ldc2_w        #27                 // long 4294967295l
      52: land
      53: lload         8
      55: bipush        32
      57: lshl
      58: lor
      59: lastore
      60: aload_3
      61: iload         5
      63: lload         6
      65: bipush        32
      67: lushr
      68: lload         8
      70: ldc2_w        #29                 // long -4294967296l
      73: land
      74: lor
      75: lastore
      76: iinc          5, 1
      79: goto          14
      82: aload_0
      83: iload         4
      85: laload
      86: invokestatic  #26                 // Method org/bouncycastle/math/raw/Interleave.unshuffle:(J)J
      89: lstore        5
      91: aload_2
      92: iconst_4
      93: lload         5
      95: ldc2_w        #27                 // long 4294967295l
      98: land
      99: lastore
     100: aload_3
     101: iconst_4
     102: lload         5
     104: bipush        32
     106: lushr
     107: lastore
     108: aload_3
     109: getstatic     #31                 // Field ROOT_Z:[J
     112: aload_1
     113: invokestatic  #13                 // Method multiply:([J[J[J)V
     116: aload_1
     117: aload_2
     118: aload_1
     119: invokestatic  #32                 // Method add:([J[J[J)V
     122: return

  public static void square(long[], long[]);
    Code:
       0: invokestatic  #3                  // Method org/bouncycastle/math/raw/Nat576.createExt64:()[J
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #5                  // Method implSquare:([J[J)V
       9: aload_2
      10: aload_1
      11: invokestatic  #6                  // Method reduce:([J[J)V
      14: return

  public static void squareAddToExt(long[], long[]);
    Code:
       0: invokestatic  #3                  // Method org/bouncycastle/math/raw/Nat576.createExt64:()[J
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #5                  // Method implSquare:([J[J)V
       9: aload_1
      10: aload_2
      11: aload_1
      12: invokestatic  #16                 // Method addExt:([J[J[J)V
      15: return

  public static void squareN(long[], int, long[]);
    Code:
       0: invokestatic  #3                  // Method org/bouncycastle/math/raw/Nat576.createExt64:()[J
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokestatic  #5                  // Method implSquare:([J[J)V
       9: aload_3
      10: aload_2
      11: invokestatic  #6                  // Method reduce:([J[J)V
      14: iinc          1, -1
      17: iload_1
      18: ifle          34
      21: aload_2
      22: aload_3
      23: invokestatic  #5                  // Method implSquare:([J[J)V
      26: aload_3
      27: aload_2
      28: invokestatic  #6                  // Method reduce:([J[J)V
      31: goto          14
      34: return

  public static int trace(long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: aload_0
       4: bipush        8
       6: laload
       7: bipush        49
       9: lushr
      10: lxor
      11: aload_0
      12: bipush        8
      14: laload
      15: bipush        57
      17: lushr
      18: lxor
      19: l2i
      20: iconst_1
      21: iand
      22: ireturn

  protected static void implMultiply(long[], long[], long[]);
    Code:
       0: bipush        16
       2: newarray       long
       4: astore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: bipush        9
      12: if_icmpge     38
      15: aload_3
      16: aload_0
      17: iload         4
      19: laload
      20: aload_1
      21: iload         4
      23: laload
      24: aload_2
      25: iload         4
      27: iconst_1
      28: ishl
      29: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
      32: iinc          4, 1
      35: goto          8
      38: aload_2
      39: iconst_0
      40: laload
      41: lstore        4
      43: aload_2
      44: iconst_1
      45: laload
      46: lstore        6
      48: lload         4
      50: aload_2
      51: iconst_2
      52: laload
      53: lxor
      54: lstore        4
      56: aload_2
      57: iconst_1
      58: lload         4
      60: lload         6
      62: lxor
      63: lastore
      64: lload         6
      66: aload_2
      67: iconst_3
      68: laload
      69: lxor
      70: lstore        6
      72: lload         4
      74: aload_2
      75: iconst_4
      76: laload
      77: lxor
      78: lstore        4
      80: aload_2
      81: iconst_2
      82: lload         4
      84: lload         6
      86: lxor
      87: lastore
      88: lload         6
      90: aload_2
      91: iconst_5
      92: laload
      93: lxor
      94: lstore        6
      96: lload         4
      98: aload_2
      99: bipush        6
     101: laload
     102: lxor
     103: lstore        4
     105: aload_2
     106: iconst_3
     107: lload         4
     109: lload         6
     111: lxor
     112: lastore
     113: lload         6
     115: aload_2
     116: bipush        7
     118: laload
     119: lxor
     120: lstore        6
     122: lload         4
     124: aload_2
     125: bipush        8
     127: laload
     128: lxor
     129: lstore        4
     131: aload_2
     132: iconst_4
     133: lload         4
     135: lload         6
     137: lxor
     138: lastore
     139: lload         6
     141: aload_2
     142: bipush        9
     144: laload
     145: lxor
     146: lstore        6
     148: lload         4
     150: aload_2
     151: bipush        10
     153: laload
     154: lxor
     155: lstore        4
     157: aload_2
     158: iconst_5
     159: lload         4
     161: lload         6
     163: lxor
     164: lastore
     165: lload         6
     167: aload_2
     168: bipush        11
     170: laload
     171: lxor
     172: lstore        6
     174: lload         4
     176: aload_2
     177: bipush        12
     179: laload
     180: lxor
     181: lstore        4
     183: aload_2
     184: bipush        6
     186: lload         4
     188: lload         6
     190: lxor
     191: lastore
     192: lload         6
     194: aload_2
     195: bipush        13
     197: laload
     198: lxor
     199: lstore        6
     201: lload         4
     203: aload_2
     204: bipush        14
     206: laload
     207: lxor
     208: lstore        4
     210: aload_2
     211: bipush        7
     213: lload         4
     215: lload         6
     217: lxor
     218: lastore
     219: lload         6
     221: aload_2
     222: bipush        15
     224: laload
     225: lxor
     226: lstore        6
     228: lload         4
     230: aload_2
     231: bipush        16
     233: laload
     234: lxor
     235: lstore        4
     237: aload_2
     238: bipush        8
     240: lload         4
     242: lload         6
     244: lxor
     245: lastore
     246: lload         6
     248: aload_2
     249: bipush        17
     251: laload
     252: lxor
     253: lstore        6
     255: lload         4
     257: lload         6
     259: lxor
     260: lstore        8
     262: aload_2
     263: bipush        9
     265: aload_2
     266: iconst_0
     267: laload
     268: lload         8
     270: lxor
     271: lastore
     272: aload_2
     273: bipush        10
     275: aload_2
     276: iconst_1
     277: laload
     278: lload         8
     280: lxor
     281: lastore
     282: aload_2
     283: bipush        11
     285: aload_2
     286: iconst_2
     287: laload
     288: lload         8
     290: lxor
     291: lastore
     292: aload_2
     293: bipush        12
     295: aload_2
     296: iconst_3
     297: laload
     298: lload         8
     300: lxor
     301: lastore
     302: aload_2
     303: bipush        13
     305: aload_2
     306: iconst_4
     307: laload
     308: lload         8
     310: lxor
     311: lastore
     312: aload_2
     313: bipush        14
     315: aload_2
     316: iconst_5
     317: laload
     318: lload         8
     320: lxor
     321: lastore
     322: aload_2
     323: bipush        15
     325: aload_2
     326: bipush        6
     328: laload
     329: lload         8
     331: lxor
     332: lastore
     333: aload_2
     334: bipush        16
     336: aload_2
     337: bipush        7
     339: laload
     340: lload         8
     342: lxor
     343: lastore
     344: aload_2
     345: bipush        17
     347: aload_2
     348: bipush        8
     350: laload
     351: lload         8
     353: lxor
     354: lastore
     355: aload_3
     356: aload_0
     357: iconst_0
     358: laload
     359: aload_0
     360: iconst_1
     361: laload
     362: lxor
     363: aload_1
     364: iconst_0
     365: laload
     366: aload_1
     367: iconst_1
     368: laload
     369: lxor
     370: aload_2
     371: iconst_1
     372: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     375: aload_3
     376: aload_0
     377: iconst_0
     378: laload
     379: aload_0
     380: iconst_2
     381: laload
     382: lxor
     383: aload_1
     384: iconst_0
     385: laload
     386: aload_1
     387: iconst_2
     388: laload
     389: lxor
     390: aload_2
     391: iconst_2
     392: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     395: aload_3
     396: aload_0
     397: iconst_0
     398: laload
     399: aload_0
     400: iconst_3
     401: laload
     402: lxor
     403: aload_1
     404: iconst_0
     405: laload
     406: aload_1
     407: iconst_3
     408: laload
     409: lxor
     410: aload_2
     411: iconst_3
     412: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     415: aload_3
     416: aload_0
     417: iconst_1
     418: laload
     419: aload_0
     420: iconst_2
     421: laload
     422: lxor
     423: aload_1
     424: iconst_1
     425: laload
     426: aload_1
     427: iconst_2
     428: laload
     429: lxor
     430: aload_2
     431: iconst_3
     432: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     435: aload_3
     436: aload_0
     437: iconst_0
     438: laload
     439: aload_0
     440: iconst_4
     441: laload
     442: lxor
     443: aload_1
     444: iconst_0
     445: laload
     446: aload_1
     447: iconst_4
     448: laload
     449: lxor
     450: aload_2
     451: iconst_4
     452: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     455: aload_3
     456: aload_0
     457: iconst_1
     458: laload
     459: aload_0
     460: iconst_3
     461: laload
     462: lxor
     463: aload_1
     464: iconst_1
     465: laload
     466: aload_1
     467: iconst_3
     468: laload
     469: lxor
     470: aload_2
     471: iconst_4
     472: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     475: aload_3
     476: aload_0
     477: iconst_0
     478: laload
     479: aload_0
     480: iconst_5
     481: laload
     482: lxor
     483: aload_1
     484: iconst_0
     485: laload
     486: aload_1
     487: iconst_5
     488: laload
     489: lxor
     490: aload_2
     491: iconst_5
     492: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     495: aload_3
     496: aload_0
     497: iconst_1
     498: laload
     499: aload_0
     500: iconst_4
     501: laload
     502: lxor
     503: aload_1
     504: iconst_1
     505: laload
     506: aload_1
     507: iconst_4
     508: laload
     509: lxor
     510: aload_2
     511: iconst_5
     512: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     515: aload_3
     516: aload_0
     517: iconst_2
     518: laload
     519: aload_0
     520: iconst_3
     521: laload
     522: lxor
     523: aload_1
     524: iconst_2
     525: laload
     526: aload_1
     527: iconst_3
     528: laload
     529: lxor
     530: aload_2
     531: iconst_5
     532: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     535: aload_3
     536: aload_0
     537: iconst_0
     538: laload
     539: aload_0
     540: bipush        6
     542: laload
     543: lxor
     544: aload_1
     545: iconst_0
     546: laload
     547: aload_1
     548: bipush        6
     550: laload
     551: lxor
     552: aload_2
     553: bipush        6
     555: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     558: aload_3
     559: aload_0
     560: iconst_1
     561: laload
     562: aload_0
     563: iconst_5
     564: laload
     565: lxor
     566: aload_1
     567: iconst_1
     568: laload
     569: aload_1
     570: iconst_5
     571: laload
     572: lxor
     573: aload_2
     574: bipush        6
     576: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     579: aload_3
     580: aload_0
     581: iconst_2
     582: laload
     583: aload_0
     584: iconst_4
     585: laload
     586: lxor
     587: aload_1
     588: iconst_2
     589: laload
     590: aload_1
     591: iconst_4
     592: laload
     593: lxor
     594: aload_2
     595: bipush        6
     597: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     600: aload_3
     601: aload_0
     602: iconst_0
     603: laload
     604: aload_0
     605: bipush        7
     607: laload
     608: lxor
     609: aload_1
     610: iconst_0
     611: laload
     612: aload_1
     613: bipush        7
     615: laload
     616: lxor
     617: aload_2
     618: bipush        7
     620: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     623: aload_3
     624: aload_0
     625: iconst_1
     626: laload
     627: aload_0
     628: bipush        6
     630: laload
     631: lxor
     632: aload_1
     633: iconst_1
     634: laload
     635: aload_1
     636: bipush        6
     638: laload
     639: lxor
     640: aload_2
     641: bipush        7
     643: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     646: aload_3
     647: aload_0
     648: iconst_2
     649: laload
     650: aload_0
     651: iconst_5
     652: laload
     653: lxor
     654: aload_1
     655: iconst_2
     656: laload
     657: aload_1
     658: iconst_5
     659: laload
     660: lxor
     661: aload_2
     662: bipush        7
     664: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     667: aload_3
     668: aload_0
     669: iconst_3
     670: laload
     671: aload_0
     672: iconst_4
     673: laload
     674: lxor
     675: aload_1
     676: iconst_3
     677: laload
     678: aload_1
     679: iconst_4
     680: laload
     681: lxor
     682: aload_2
     683: bipush        7
     685: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     688: aload_3
     689: aload_0
     690: iconst_0
     691: laload
     692: aload_0
     693: bipush        8
     695: laload
     696: lxor
     697: aload_1
     698: iconst_0
     699: laload
     700: aload_1
     701: bipush        8
     703: laload
     704: lxor
     705: aload_2
     706: bipush        8
     708: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     711: aload_3
     712: aload_0
     713: iconst_1
     714: laload
     715: aload_0
     716: bipush        7
     718: laload
     719: lxor
     720: aload_1
     721: iconst_1
     722: laload
     723: aload_1
     724: bipush        7
     726: laload
     727: lxor
     728: aload_2
     729: bipush        8
     731: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     734: aload_3
     735: aload_0
     736: iconst_2
     737: laload
     738: aload_0
     739: bipush        6
     741: laload
     742: lxor
     743: aload_1
     744: iconst_2
     745: laload
     746: aload_1
     747: bipush        6
     749: laload
     750: lxor
     751: aload_2
     752: bipush        8
     754: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     757: aload_3
     758: aload_0
     759: iconst_3
     760: laload
     761: aload_0
     762: iconst_5
     763: laload
     764: lxor
     765: aload_1
     766: iconst_3
     767: laload
     768: aload_1
     769: iconst_5
     770: laload
     771: lxor
     772: aload_2
     773: bipush        8
     775: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     778: aload_3
     779: aload_0
     780: iconst_1
     781: laload
     782: aload_0
     783: bipush        8
     785: laload
     786: lxor
     787: aload_1
     788: iconst_1
     789: laload
     790: aload_1
     791: bipush        8
     793: laload
     794: lxor
     795: aload_2
     796: bipush        9
     798: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     801: aload_3
     802: aload_0
     803: iconst_2
     804: laload
     805: aload_0
     806: bipush        7
     808: laload
     809: lxor
     810: aload_1
     811: iconst_2
     812: laload
     813: aload_1
     814: bipush        7
     816: laload
     817: lxor
     818: aload_2
     819: bipush        9
     821: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     824: aload_3
     825: aload_0
     826: iconst_3
     827: laload
     828: aload_0
     829: bipush        6
     831: laload
     832: lxor
     833: aload_1
     834: iconst_3
     835: laload
     836: aload_1
     837: bipush        6
     839: laload
     840: lxor
     841: aload_2
     842: bipush        9
     844: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     847: aload_3
     848: aload_0
     849: iconst_4
     850: laload
     851: aload_0
     852: iconst_5
     853: laload
     854: lxor
     855: aload_1
     856: iconst_4
     857: laload
     858: aload_1
     859: iconst_5
     860: laload
     861: lxor
     862: aload_2
     863: bipush        9
     865: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     868: aload_3
     869: aload_0
     870: iconst_2
     871: laload
     872: aload_0
     873: bipush        8
     875: laload
     876: lxor
     877: aload_1
     878: iconst_2
     879: laload
     880: aload_1
     881: bipush        8
     883: laload
     884: lxor
     885: aload_2
     886: bipush        10
     888: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     891: aload_3
     892: aload_0
     893: iconst_3
     894: laload
     895: aload_0
     896: bipush        7
     898: laload
     899: lxor
     900: aload_1
     901: iconst_3
     902: laload
     903: aload_1
     904: bipush        7
     906: laload
     907: lxor
     908: aload_2
     909: bipush        10
     911: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     914: aload_3
     915: aload_0
     916: iconst_4
     917: laload
     918: aload_0
     919: bipush        6
     921: laload
     922: lxor
     923: aload_1
     924: iconst_4
     925: laload
     926: aload_1
     927: bipush        6
     929: laload
     930: lxor
     931: aload_2
     932: bipush        10
     934: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     937: aload_3
     938: aload_0
     939: iconst_3
     940: laload
     941: aload_0
     942: bipush        8
     944: laload
     945: lxor
     946: aload_1
     947: iconst_3
     948: laload
     949: aload_1
     950: bipush        8
     952: laload
     953: lxor
     954: aload_2
     955: bipush        11
     957: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     960: aload_3
     961: aload_0
     962: iconst_4
     963: laload
     964: aload_0
     965: bipush        7
     967: laload
     968: lxor
     969: aload_1
     970: iconst_4
     971: laload
     972: aload_1
     973: bipush        7
     975: laload
     976: lxor
     977: aload_2
     978: bipush        11
     980: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
     983: aload_3
     984: aload_0
     985: iconst_5
     986: laload
     987: aload_0
     988: bipush        6
     990: laload
     991: lxor
     992: aload_1
     993: iconst_5
     994: laload
     995: aload_1
     996: bipush        6
     998: laload
     999: lxor
    1000: aload_2
    1001: bipush        11
    1003: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
    1006: aload_3
    1007: aload_0
    1008: iconst_4
    1009: laload
    1010: aload_0
    1011: bipush        8
    1013: laload
    1014: lxor
    1015: aload_1
    1016: iconst_4
    1017: laload
    1018: aload_1
    1019: bipush        8
    1021: laload
    1022: lxor
    1023: aload_2
    1024: bipush        12
    1026: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
    1029: aload_3
    1030: aload_0
    1031: iconst_5
    1032: laload
    1033: aload_0
    1034: bipush        7
    1036: laload
    1037: lxor
    1038: aload_1
    1039: iconst_5
    1040: laload
    1041: aload_1
    1042: bipush        7
    1044: laload
    1045: lxor
    1046: aload_2
    1047: bipush        12
    1049: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
    1052: aload_3
    1053: aload_0
    1054: iconst_5
    1055: laload
    1056: aload_0
    1057: bipush        8
    1059: laload
    1060: lxor
    1061: aload_1
    1062: iconst_5
    1063: laload
    1064: aload_1
    1065: bipush        8
    1067: laload
    1068: lxor
    1069: aload_2
    1070: bipush        13
    1072: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
    1075: aload_3
    1076: aload_0
    1077: bipush        6
    1079: laload
    1080: aload_0
    1081: bipush        7
    1083: laload
    1084: lxor
    1085: aload_1
    1086: bipush        6
    1088: laload
    1089: aload_1
    1090: bipush        7
    1092: laload
    1093: lxor
    1094: aload_2
    1095: bipush        13
    1097: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
    1100: aload_3
    1101: aload_0
    1102: bipush        6
    1104: laload
    1105: aload_0
    1106: bipush        8
    1108: laload
    1109: lxor
    1110: aload_1
    1111: bipush        6
    1113: laload
    1114: aload_1
    1115: bipush        8
    1117: laload
    1118: lxor
    1119: aload_2
    1120: bipush        14
    1122: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
    1125: aload_3
    1126: aload_0
    1127: bipush        7
    1129: laload
    1130: aload_0
    1131: bipush        8
    1133: laload
    1134: lxor
    1135: aload_1
    1136: bipush        7
    1138: laload
    1139: aload_1
    1140: bipush        8
    1142: laload
    1143: lxor
    1144: aload_2
    1145: bipush        15
    1147: invokestatic  #33                 // Method implMulwAcc:([JJJ[JI)V
    1150: return

  protected static void implMultiplyPrecomp(long[], long[], long[]);
    Code:
       0: bipush        15
       2: istore_3
       3: bipush        56
       5: istore        4
       7: iload         4
       9: iflt          92
      12: iconst_1
      13: istore        5
      15: iload         5
      17: bipush        9
      19: if_icmpge     75
      22: aload_0
      23: iload         5
      25: laload
      26: iload         4
      28: lushr
      29: l2i
      30: istore        6
      32: iload         6
      34: iload_3
      35: iand
      36: istore        7
      38: iload         6
      40: iconst_4
      41: iushr
      42: iload_3
      43: iand
      44: istore        8
      46: aload_1
      47: bipush        9
      49: iload         7
      51: imul
      52: aload_1
      53: bipush        9
      55: iload         8
      57: bipush        16
      59: iadd
      60: imul
      61: aload_2
      62: iload         5
      64: iconst_1
      65: isub
      66: invokestatic  #34                 // Method addBothTo:([JI[JI[JI)V
      69: iinc          5, 2
      72: goto          15
      75: bipush        16
      77: aload_2
      78: iconst_0
      79: bipush        8
      81: lconst_0
      82: invokestatic  #35                 // Method org/bouncycastle/math/raw/Nat.shiftUpBits64:(I[JIIJ)J
      85: pop2
      86: iinc          4, -8
      89: goto          7
      92: bipush        56
      94: istore        4
      96: iload         4
      98: iflt          184
     101: iconst_0
     102: istore        5
     104: iload         5
     106: bipush        9
     108: if_icmpge     162
     111: aload_0
     112: iload         5
     114: laload
     115: iload         4
     117: lushr
     118: l2i
     119: istore        6
     121: iload         6
     123: iload_3
     124: iand
     125: istore        7
     127: iload         6
     129: iconst_4
     130: iushr
     131: iload_3
     132: iand
     133: istore        8
     135: aload_1
     136: bipush        9
     138: iload         7
     140: imul
     141: aload_1
     142: bipush        9
     144: iload         8
     146: bipush        16
     148: iadd
     149: imul
     150: aload_2
     151: iload         5
     153: invokestatic  #34                 // Method addBothTo:([JI[JI[JI)V
     156: iinc          5, 2
     159: goto          104
     162: iload         4
     164: ifle          178
     167: bipush        18
     169: aload_2
     170: iconst_0
     171: bipush        8
     173: lconst_0
     174: invokestatic  #35                 // Method org/bouncycastle/math/raw/Nat.shiftUpBits64:(I[JIIJ)J
     177: pop2
     178: iinc          4, -8
     181: goto          96
     184: return

  protected static void implMulwAcc(long[], long, long, long[], int);
    Code:
       0: aload_0
       1: iconst_1
       2: lload_3
       3: lastore
       4: iconst_2
       5: istore        7
       7: iload         7
       9: bipush        16
      11: if_icmpge     44
      14: aload_0
      15: iload         7
      17: aload_0
      18: iload         7
      20: iconst_1
      21: iushr
      22: laload
      23: iconst_1
      24: lshl
      25: lastore
      26: aload_0
      27: iload         7
      29: iconst_1
      30: iadd
      31: aload_0
      32: iload         7
      34: laload
      35: lload_3
      36: lxor
      37: lastore
      38: iinc          7, 2
      41: goto          7
      44: lload_1
      45: l2i
      46: istore        7
      48: lconst_0
      49: lstore        10
      51: aload_0
      52: iload         7
      54: bipush        15
      56: iand
      57: laload
      58: aload_0
      59: iload         7
      61: iconst_4
      62: iushr
      63: bipush        15
      65: iand
      66: laload
      67: iconst_4
      68: lshl
      69: lxor
      70: lstore        12
      72: bipush        56
      74: istore        14
      76: lload_1
      77: iload         14
      79: lushr
      80: l2i
      81: istore        7
      83: aload_0
      84: iload         7
      86: bipush        15
      88: iand
      89: laload
      90: aload_0
      91: iload         7
      93: iconst_4
      94: iushr
      95: bipush        15
      97: iand
      98: laload
      99: iconst_4
     100: lshl
     101: lxor
     102: lstore        8
     104: lload         12
     106: lload         8
     108: iload         14
     110: lshl
     111: lxor
     112: lstore        12
     114: lload         10
     116: lload         8
     118: iload         14
     120: ineg
     121: lushr
     122: lxor
     123: lstore        10
     125: iinc          14, -8
     128: iload         14
     130: ifgt          76
     133: iconst_0
     134: istore        15
     136: iload         15
     138: bipush        7
     140: if_icmpge     171
     143: lload_1
     144: ldc2_w        #36                 // long -72340172838076674l
     147: land
     148: iconst_1
     149: lushr
     150: lstore_1
     151: lload         10
     153: lload_1
     154: lload_3
     155: iload         15
     157: lshl
     158: bipush        63
     160: lshr
     161: land
     162: lxor
     163: lstore        10
     165: iinc          15, 1
     168: goto          136
     171: aload         5
     173: iload         6
     175: dup2
     176: laload
     177: lload         12
     179: lxor
     180: lastore
     181: aload         5
     183: iload         6
     185: iconst_1
     186: iadd
     187: dup2
     188: laload
     189: lload         10
     191: lxor
     192: lastore
     193: return

  protected static void implSquare(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: bipush        9
       4: aload_1
       5: iconst_0
       6: invokestatic  #38                 // Method org/bouncycastle/math/raw/Interleave.expand64To128:([JII[JI)V
       9: return

  static {};
    Code:
       0: bipush        9
       2: newarray       long
       4: dup
       5: iconst_0
       6: ldc2_w        #39                 // long 3161836309350906777l
       9: lastore
      10: dup
      11: iconst_1
      12: ldc2_w        #41                 // long -7642453882179322845l
      15: lastore
      16: dup
      17: iconst_2
      18: ldc2_w        #43                 // long -3821226941089661423l
      21: lastore
      22: dup
      23: iconst_3
      24: ldc2_w        #45                 // long 7312758566309945096l
      27: lastore
      28: dup
      29: iconst_4
      30: ldc2_w        #47                 // long -556661012383879292l
      33: lastore
      34: dup
      35: iconst_5
      36: ldc2_w        #49                 // long 8945041530681231562l
      39: lastore
      40: dup
      41: bipush        6
      43: ldc2_w        #51                 // long -4750851271514160027l
      46: lastore
      47: dup
      48: bipush        7
      50: ldc2_w        #53                 // long 6847946401097695794l
      53: lastore
      54: dup
      55: bipush        8
      57: ldc2_w        #55                 // long 541669439031730457l
      60: lastore
      61: putstatic     #31                 // Field ROOT_Z:[J
      64: return
}
