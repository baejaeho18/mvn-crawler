Compiled from "SHA512tDigest.java"
public class org.bouncycastle.crypto.digests.SHA512tDigest extends org.bouncycastle.crypto.digests.LongDigest {
  private int digestLength;

  private long H1t;

  private long H2t;

  private long H3t;

  private long H4t;

  private long H5t;

  private long H6t;

  private long H7t;

  private long H8t;

  public org.bouncycastle.crypto.digests.SHA512tDigest(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/bouncycastle/crypto/digests/LongDigest."<init>":()V
       4: iload_1
       5: sipush        512
       8: if_icmplt     21
      11: new           #2                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #3                  // String bitLength cannot be >= 512
      17: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload_1
      22: bipush        8
      24: irem
      25: ifeq          38
      28: new           #2                  // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #5                  // String bitLength needs to be a multiple of 8
      34: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iload_1
      39: sipush        384
      42: if_icmpne     55
      45: new           #2                  // class java/lang/IllegalArgumentException
      48: dup
      49: ldc           #6                  // String bitLength cannot be 384 use SHA384 instead
      51: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: iload_1
      57: bipush        8
      59: idiv
      60: putfield      #7                  // Field digestLength:I
      63: aload_0
      64: aload_0
      65: getfield      #7                  // Field digestLength:I
      68: bipush        8
      70: imul
      71: invokespecial #8                  // Method tIvGenerate:(I)V
      74: aload_0
      75: invokevirtual #9                  // Method reset:()V
      78: return

  public org.bouncycastle.crypto.digests.SHA512tDigest(org.bouncycastle.crypto.digests.SHA512tDigest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method org/bouncycastle/crypto/digests/LongDigest."<init>":(Lorg/bouncycastle/crypto/digests/LongDigest;)V
       5: aload_0
       6: aload_1
       7: getfield      #7                  // Field digestLength:I
      10: putfield      #7                  // Field digestLength:I
      13: aload_0
      14: aload_1
      15: invokevirtual #11                 // Method reset:(Lorg/bouncycastle/util/Memoable;)V
      18: return

  public org.bouncycastle.crypto.digests.SHA512tDigest(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method readDigestLength:([B)I
       5: invokespecial #13                 // Method "<init>":(I)V
       8: aload_0
       9: aload_1
      10: invokevirtual #14                 // Method restoreState:([B)V
      13: return

  private static int readDigestLength(byte[]);
    Code:
       0: aload_0
       1: aload_0
       2: arraylength
       3: iconst_4
       4: isub
       5: invokestatic  #15                 // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI)I
       8: ireturn

  public java.lang.String getAlgorithmName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field digestLength:I
       4: bipush        8
       6: imul
       7: invokestatic  #16                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      10: invokedynamic #17,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      15: areturn

  public int getDigestSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field digestLength:I
       4: ireturn

  public int doFinal(byte[], int);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method finish:()V
       4: aload_0
       5: getfield      #19                 // Field H1:J
       8: aload_1
       9: iload_2
      10: aload_0
      11: getfield      #7                  // Field digestLength:I
      14: invokestatic  #20                 // Method longToBigEndian:(J[BII)V
      17: aload_0
      18: getfield      #21                 // Field H2:J
      21: aload_1
      22: iload_2
      23: bipush        8
      25: iadd
      26: aload_0
      27: getfield      #7                  // Field digestLength:I
      30: bipush        8
      32: isub
      33: invokestatic  #20                 // Method longToBigEndian:(J[BII)V
      36: aload_0
      37: getfield      #22                 // Field H3:J
      40: aload_1
      41: iload_2
      42: bipush        16
      44: iadd
      45: aload_0
      46: getfield      #7                  // Field digestLength:I
      49: bipush        16
      51: isub
      52: invokestatic  #20                 // Method longToBigEndian:(J[BII)V
      55: aload_0
      56: getfield      #23                 // Field H4:J
      59: aload_1
      60: iload_2
      61: bipush        24
      63: iadd
      64: aload_0
      65: getfield      #7                  // Field digestLength:I
      68: bipush        24
      70: isub
      71: invokestatic  #20                 // Method longToBigEndian:(J[BII)V
      74: aload_0
      75: getfield      #24                 // Field H5:J
      78: aload_1
      79: iload_2
      80: bipush        32
      82: iadd
      83: aload_0
      84: getfield      #7                  // Field digestLength:I
      87: bipush        32
      89: isub
      90: invokestatic  #20                 // Method longToBigEndian:(J[BII)V
      93: aload_0
      94: getfield      #25                 // Field H6:J
      97: aload_1
      98: iload_2
      99: bipush        40
     101: iadd
     102: aload_0
     103: getfield      #7                  // Field digestLength:I
     106: bipush        40
     108: isub
     109: invokestatic  #20                 // Method longToBigEndian:(J[BII)V
     112: aload_0
     113: getfield      #26                 // Field H7:J
     116: aload_1
     117: iload_2
     118: bipush        48
     120: iadd
     121: aload_0
     122: getfield      #7                  // Field digestLength:I
     125: bipush        48
     127: isub
     128: invokestatic  #20                 // Method longToBigEndian:(J[BII)V
     131: aload_0
     132: getfield      #27                 // Field H8:J
     135: aload_1
     136: iload_2
     137: bipush        56
     139: iadd
     140: aload_0
     141: getfield      #7                  // Field digestLength:I
     144: bipush        56
     146: isub
     147: invokestatic  #20                 // Method longToBigEndian:(J[BII)V
     150: aload_0
     151: invokevirtual #9                  // Method reset:()V
     154: aload_0
     155: getfield      #7                  // Field digestLength:I
     158: ireturn

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method org/bouncycastle/crypto/digests/LongDigest.reset:()V
       4: aload_0
       5: aload_0
       6: getfield      #29                 // Field H1t:J
       9: putfield      #19                 // Field H1:J
      12: aload_0
      13: aload_0
      14: getfield      #30                 // Field H2t:J
      17: putfield      #21                 // Field H2:J
      20: aload_0
      21: aload_0
      22: getfield      #31                 // Field H3t:J
      25: putfield      #22                 // Field H3:J
      28: aload_0
      29: aload_0
      30: getfield      #32                 // Field H4t:J
      33: putfield      #23                 // Field H4:J
      36: aload_0
      37: aload_0
      38: getfield      #33                 // Field H5t:J
      41: putfield      #24                 // Field H5:J
      44: aload_0
      45: aload_0
      46: getfield      #34                 // Field H6t:J
      49: putfield      #25                 // Field H6:J
      52: aload_0
      53: aload_0
      54: getfield      #35                 // Field H7t:J
      57: putfield      #26                 // Field H7:J
      60: aload_0
      61: aload_0
      62: getfield      #36                 // Field H8t:J
      65: putfield      #27                 // Field H8:J
      68: return

  private void tIvGenerate(int);
    Code:
       0: aload_0
       1: ldc2_w        #37                 // long -3482333909917012819l
       4: putfield      #19                 // Field H1:J
       7: aload_0
       8: ldc2_w        #39                 // long 2216346199247487646l
      11: putfield      #21                 // Field H2:J
      14: aload_0
      15: ldc2_w        #41                 // long -7364697282686394994l
      18: putfield      #22                 // Field H3:J
      21: aload_0
      22: ldc2_w        #43                 // long 65953792586715988l
      25: putfield      #23                 // Field H4:J
      28: aload_0
      29: ldc2_w        #45                 // long -816286391624063116l
      32: putfield      #24                 // Field H5:J
      35: aload_0
      36: ldc2_w        #47                 // long 4512832404995164602l
      39: putfield      #25                 // Field H6:J
      42: aload_0
      43: ldc2_w        #49                 // long -5033199132376557362l
      46: putfield      #26                 // Field H7:J
      49: aload_0
      50: ldc2_w        #51                 // long -124578254951840548l
      53: putfield      #27                 // Field H8:J
      56: aload_0
      57: bipush        83
      59: invokevirtual #53                 // Method update:(B)V
      62: aload_0
      63: bipush        72
      65: invokevirtual #53                 // Method update:(B)V
      68: aload_0
      69: bipush        65
      71: invokevirtual #53                 // Method update:(B)V
      74: aload_0
      75: bipush        45
      77: invokevirtual #53                 // Method update:(B)V
      80: aload_0
      81: bipush        53
      83: invokevirtual #53                 // Method update:(B)V
      86: aload_0
      87: bipush        49
      89: invokevirtual #53                 // Method update:(B)V
      92: aload_0
      93: bipush        50
      95: invokevirtual #53                 // Method update:(B)V
      98: aload_0
      99: bipush        47
     101: invokevirtual #53                 // Method update:(B)V
     104: iload_1
     105: bipush        100
     107: if_icmple     156
     110: aload_0
     111: iload_1
     112: bipush        100
     114: idiv
     115: bipush        48
     117: iadd
     118: i2b
     119: invokevirtual #53                 // Method update:(B)V
     122: iload_1
     123: bipush        100
     125: irem
     126: istore_1
     127: aload_0
     128: iload_1
     129: bipush        10
     131: idiv
     132: bipush        48
     134: iadd
     135: i2b
     136: invokevirtual #53                 // Method update:(B)V
     139: iload_1
     140: bipush        10
     142: irem
     143: istore_1
     144: aload_0
     145: iload_1
     146: bipush        48
     148: iadd
     149: i2b
     150: invokevirtual #53                 // Method update:(B)V
     153: goto          200
     156: iload_1
     157: bipush        10
     159: if_icmple     191
     162: aload_0
     163: iload_1
     164: bipush        10
     166: idiv
     167: bipush        48
     169: iadd
     170: i2b
     171: invokevirtual #53                 // Method update:(B)V
     174: iload_1
     175: bipush        10
     177: irem
     178: istore_1
     179: aload_0
     180: iload_1
     181: bipush        48
     183: iadd
     184: i2b
     185: invokevirtual #53                 // Method update:(B)V
     188: goto          200
     191: aload_0
     192: iload_1
     193: bipush        48
     195: iadd
     196: i2b
     197: invokevirtual #53                 // Method update:(B)V
     200: aload_0
     201: invokevirtual #18                 // Method finish:()V
     204: aload_0
     205: aload_0
     206: getfield      #19                 // Field H1:J
     209: putfield      #29                 // Field H1t:J
     212: aload_0
     213: aload_0
     214: getfield      #21                 // Field H2:J
     217: putfield      #30                 // Field H2t:J
     220: aload_0
     221: aload_0
     222: getfield      #22                 // Field H3:J
     225: putfield      #31                 // Field H3t:J
     228: aload_0
     229: aload_0
     230: getfield      #23                 // Field H4:J
     233: putfield      #32                 // Field H4t:J
     236: aload_0
     237: aload_0
     238: getfield      #24                 // Field H5:J
     241: putfield      #33                 // Field H5t:J
     244: aload_0
     245: aload_0
     246: getfield      #25                 // Field H6:J
     249: putfield      #34                 // Field H6t:J
     252: aload_0
     253: aload_0
     254: getfield      #26                 // Field H7:J
     257: putfield      #35                 // Field H7t:J
     260: aload_0
     261: aload_0
     262: getfield      #27                 // Field H8:J
     265: putfield      #36                 // Field H8t:J
     268: return

  private static void longToBigEndian(long, byte[], int, int);
    Code:
       0: iload         4
       2: ifle          40
       5: lload_0
       6: bipush        32
       8: lushr
       9: l2i
      10: aload_2
      11: iload_3
      12: iload         4
      14: invokestatic  #54                 // Method intToBigEndian:(I[BII)V
      17: iload         4
      19: iconst_4
      20: if_icmple     40
      23: lload_0
      24: ldc2_w        #55                 // long 4294967295l
      27: land
      28: l2i
      29: aload_2
      30: iload_3
      31: iconst_4
      32: iadd
      33: iload         4
      35: iconst_4
      36: isub
      37: invokestatic  #54                 // Method intToBigEndian:(I[BII)V
      40: return

  private static void intToBigEndian(int, byte[], int, int);
    Code:
       0: iconst_4
       1: iload_3
       2: invokestatic  #57                 // Method java/lang/Math.min:(II)I
       5: istore        4
       7: iinc          4, -1
      10: iload         4
      12: iflt          38
      15: bipush        8
      17: iconst_3
      18: iload         4
      20: isub
      21: imul
      22: istore        5
      24: aload_1
      25: iload_2
      26: iload         4
      28: iadd
      29: iload_0
      30: iload         5
      32: iushr
      33: i2b
      34: bastore
      35: goto          7
      38: return

  public org.bouncycastle.util.Memoable copy();
    Code:
       0: new           #58                 // class org/bouncycastle/crypto/digests/SHA512tDigest
       3: dup
       4: aload_0
       5: invokespecial #59                 // Method "<init>":(Lorg/bouncycastle/crypto/digests/SHA512tDigest;)V
       8: areturn

  public void reset(org.bouncycastle.util.Memoable);
    Code:
       0: aload_1
       1: checkcast     #58                 // class org/bouncycastle/crypto/digests/SHA512tDigest
       4: astore_2
       5: aload_0
       6: getfield      #7                  // Field digestLength:I
       9: aload_2
      10: getfield      #7                  // Field digestLength:I
      13: if_icmpeq     26
      16: new           #60                 // class org/bouncycastle/util/MemoableResetException
      19: dup
      20: ldc           #61                 // String digestLength inappropriate in other
      22: invokespecial #62                 // Method org/bouncycastle/util/MemoableResetException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: aload_2
      28: invokespecial #63                 // Method org/bouncycastle/crypto/digests/LongDigest.copyIn:(Lorg/bouncycastle/crypto/digests/LongDigest;)V
      31: aload_0
      32: aload_2
      33: getfield      #29                 // Field H1t:J
      36: putfield      #29                 // Field H1t:J
      39: aload_0
      40: aload_2
      41: getfield      #30                 // Field H2t:J
      44: putfield      #30                 // Field H2t:J
      47: aload_0
      48: aload_2
      49: getfield      #31                 // Field H3t:J
      52: putfield      #31                 // Field H3t:J
      55: aload_0
      56: aload_2
      57: getfield      #32                 // Field H4t:J
      60: putfield      #32                 // Field H4t:J
      63: aload_0
      64: aload_2
      65: getfield      #33                 // Field H5t:J
      68: putfield      #33                 // Field H5t:J
      71: aload_0
      72: aload_2
      73: getfield      #34                 // Field H6t:J
      76: putfield      #34                 // Field H6t:J
      79: aload_0
      80: aload_2
      81: getfield      #35                 // Field H7t:J
      84: putfield      #35                 // Field H7t:J
      87: aload_0
      88: aload_2
      89: getfield      #36                 // Field H8t:J
      92: putfield      #36                 // Field H8t:J
      95: return

  public byte[] getEncodedState();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getEncodedStateSize:()I
       4: istore_1
       5: iload_1
       6: iconst_4
       7: iadd
       8: newarray       byte
      10: astore_2
      11: aload_0
      12: aload_2
      13: invokevirtual #65                 // Method populateState:([B)V
      16: aload_0
      17: getfield      #7                  // Field digestLength:I
      20: bipush        8
      22: imul
      23: aload_2
      24: iload_1
      25: invokestatic  #66                 // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
      28: aload_2
      29: areturn
}
