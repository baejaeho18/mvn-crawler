Compiled from "DERSet.java"
public class org.bouncycastle.asn1.DERSet extends org.bouncycastle.asn1.ASN1Set {
  private int bodyLength;

  public static org.bouncycastle.asn1.DERSet convert(org.bouncycastle.asn1.ASN1Set);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method org/bouncycastle/asn1/ASN1Set.toDERObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
       4: checkcast     #2                  // class org/bouncycastle/asn1/DERSet
       7: areturn

  public org.bouncycastle.asn1.DERSet();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/bouncycastle/asn1/ASN1Set."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #4                  // Field bodyLength:I
       9: return

  public org.bouncycastle.asn1.DERSet(org.bouncycastle.asn1.ASN1Encodable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/bouncycastle/asn1/ASN1Set."<init>":(Lorg/bouncycastle/asn1/ASN1Encodable;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #4                  // Field bodyLength:I
      10: return

  public org.bouncycastle.asn1.DERSet(org.bouncycastle.asn1.ASN1EncodableVector);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #6                  // Method org/bouncycastle/asn1/ASN1Set."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;Z)V
       6: aload_0
       7: iconst_m1
       8: putfield      #4                  // Field bodyLength:I
      11: return

  public org.bouncycastle.asn1.DERSet(org.bouncycastle.asn1.ASN1Encodable[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #7                  // Method org/bouncycastle/asn1/ASN1Set."<init>":([Lorg/bouncycastle/asn1/ASN1Encodable;Z)V
       6: aload_0
       7: iconst_m1
       8: putfield      #4                  // Field bodyLength:I
      11: return

  org.bouncycastle.asn1.DERSet(boolean, org.bouncycastle.asn1.ASN1Encodable[]);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #8                  // Method checkSorted:(Z)Z
       5: aload_2
       6: invokespecial #9                  // Method org/bouncycastle/asn1/ASN1Set."<init>":(Z[Lorg/bouncycastle/asn1/ASN1Encodable;)V
       9: aload_0
      10: iconst_m1
      11: putfield      #4                  // Field bodyLength:I
      14: return

  private int getBodyLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field bodyLength:I
       4: ifge          57
       7: aload_0
       8: getfield      #10                 // Field elements:[Lorg/bouncycastle/asn1/ASN1Encodable;
      11: arraylength
      12: istore_1
      13: iconst_0
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_1
      19: if_icmpge     52
      22: aload_0
      23: getfield      #10                 // Field elements:[Lorg/bouncycastle/asn1/ASN1Encodable;
      26: iload_3
      27: aaload
      28: invokeinterface #11,  1           // InterfaceMethod org/bouncycastle/asn1/ASN1Encodable.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
      33: invokevirtual #12                 // Method org/bouncycastle/asn1/ASN1Primitive.toDERObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      36: astore        4
      38: iload_2
      39: aload         4
      41: invokevirtual #13                 // Method org/bouncycastle/asn1/ASN1Primitive.encodedLength:()I
      44: iadd
      45: istore_2
      46: iinc          3, 1
      49: goto          17
      52: aload_0
      53: iload_2
      54: putfield      #4                  // Field bodyLength:I
      57: aload_0
      58: getfield      #4                  // Field bodyLength:I
      61: ireturn

  int encodedLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method getBodyLength:()I
       4: istore_1
       5: iconst_1
       6: iload_1
       7: invokestatic  #15                 // Method org/bouncycastle/asn1/StreamUtil.calculateBodyLength:(I)I
      10: iadd
      11: iload_1
      12: iadd
      13: ireturn

  void encode(org.bouncycastle.asn1.ASN1OutputStream, boolean) throws java.io.IOException;
    Code:
       0: iload_2
       1: ifeq          10
       4: aload_1
       5: bipush        49
       7: invokevirtual #17                 // Method org/bouncycastle/asn1/ASN1OutputStream.write:(I)V
      10: aload_1
      11: invokevirtual #18                 // Method org/bouncycastle/asn1/ASN1OutputStream.getDERSubStream:()Lorg/bouncycastle/asn1/DEROutputStream;
      14: astore_3
      15: aload_0
      16: getfield      #10                 // Field elements:[Lorg/bouncycastle/asn1/ASN1Encodable;
      19: arraylength
      20: istore        4
      22: aload_0
      23: getfield      #4                  // Field bodyLength:I
      26: ifge          36
      29: iload         4
      31: bipush        16
      33: if_icmple     87
      36: aload_1
      37: aload_0
      38: invokespecial #14                 // Method getBodyLength:()I
      41: invokevirtual #19                 // Method org/bouncycastle/asn1/ASN1OutputStream.writeLength:(I)V
      44: iconst_0
      45: istore        5
      47: iload         5
      49: iload         4
      51: if_icmpge     84
      54: aload_0
      55: getfield      #10                 // Field elements:[Lorg/bouncycastle/asn1/ASN1Encodable;
      58: iload         5
      60: aaload
      61: invokeinterface #11,  1           // InterfaceMethod org/bouncycastle/asn1/ASN1Encodable.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
      66: invokevirtual #12                 // Method org/bouncycastle/asn1/ASN1Primitive.toDERObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      69: astore        6
      71: aload         6
      73: aload_3
      74: iconst_1
      75: invokevirtual #20                 // Method org/bouncycastle/asn1/ASN1Primitive.encode:(Lorg/bouncycastle/asn1/ASN1OutputStream;Z)V
      78: iinc          5, 1
      81: goto          47
      84: goto          185
      87: iconst_0
      88: istore        5
      90: iload         4
      92: anewarray     #21                 // class org/bouncycastle/asn1/ASN1Primitive
      95: astore        6
      97: iconst_0
      98: istore        7
     100: iload         7
     102: iload         4
     104: if_icmpge     147
     107: aload_0
     108: getfield      #10                 // Field elements:[Lorg/bouncycastle/asn1/ASN1Encodable;
     111: iload         7
     113: aaload
     114: invokeinterface #11,  1           // InterfaceMethod org/bouncycastle/asn1/ASN1Encodable.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
     119: invokevirtual #12                 // Method org/bouncycastle/asn1/ASN1Primitive.toDERObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
     122: astore        8
     124: aload         6
     126: iload         7
     128: aload         8
     130: aastore
     131: iload         5
     133: aload         8
     135: invokevirtual #13                 // Method org/bouncycastle/asn1/ASN1Primitive.encodedLength:()I
     138: iadd
     139: istore        5
     141: iinc          7, 1
     144: goto          100
     147: aload_0
     148: iload         5
     150: putfield      #4                  // Field bodyLength:I
     153: aload_1
     154: iload         5
     156: invokevirtual #19                 // Method org/bouncycastle/asn1/ASN1OutputStream.writeLength:(I)V
     159: iconst_0
     160: istore        7
     162: iload         7
     164: iload         4
     166: if_icmpge     185
     169: aload         6
     171: iload         7
     173: aaload
     174: aload_3
     175: iconst_1
     176: invokevirtual #20                 // Method org/bouncycastle/asn1/ASN1Primitive.encode:(Lorg/bouncycastle/asn1/ASN1OutputStream;Z)V
     179: iinc          7, 1
     182: goto          162
     185: return

  org.bouncycastle.asn1.ASN1Primitive toDERObject();
    Code:
       0: aload_0
       1: getfield      #22                 // Field isSorted:Z
       4: ifeq          11
       7: aload_0
       8: goto          15
      11: aload_0
      12: invokespecial #1                  // Method org/bouncycastle/asn1/ASN1Set.toDERObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      15: areturn

  org.bouncycastle.asn1.ASN1Primitive toDLObject();
    Code:
       0: aload_0
       1: areturn

  private static boolean checkSorted(boolean);
    Code:
       0: iload_0
       1: ifne          14
       4: new           #23                 // class java/lang/IllegalStateException
       7: dup
       8: ldc           #24                 // String DERSet elements should always be in sorted order
      10: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_0
      15: ireturn
}
