Compiled from "FixedPointUtil.java"
class org.bouncycastle.math.ec.FixedPointUtil$1 implements org.bouncycastle.math.ec.PreCompCallback {
  final org.bouncycastle.math.ec.ECCurve val$c;

  final org.bouncycastle.math.ec.ECPoint val$p;

  org.bouncycastle.math.ec.FixedPointUtil$1(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$c:Lorg/bouncycastle/math/ec/ECCurve;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$p:Lorg/bouncycastle/math/ec/ECPoint;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public org.bouncycastle.math.ec.PreCompInfo precompute(org.bouncycastle.math.ec.PreCompInfo);
    Code:
       0: aload_1
       1: instanceof    #4                  // class org/bouncycastle/math/ec/FixedPointPreCompInfo
       4: ifeq          14
       7: aload_1
       8: checkcast     #4                  // class org/bouncycastle/math/ec/FixedPointPreCompInfo
      11: goto          15
      14: aconst_null
      15: astore_2
      16: aload_0
      17: getfield      #1                  // Field val$c:Lorg/bouncycastle/math/ec/ECCurve;
      20: invokestatic  #5                  // Method org/bouncycastle/math/ec/FixedPointUtil.getCombSize:(Lorg/bouncycastle/math/ec/ECCurve;)I
      23: istore_3
      24: iload_3
      25: sipush        250
      28: if_icmple     36
      31: bipush        6
      33: goto          37
      36: iconst_5
      37: istore        4
      39: iconst_1
      40: iload         4
      42: ishl
      43: istore        5
      45: aload_0
      46: aload_2
      47: iload         5
      49: invokespecial #6                  // Method checkExisting:(Lorg/bouncycastle/math/ec/FixedPointPreCompInfo;I)Z
      52: ifeq          57
      55: aload_2
      56: areturn
      57: iload_3
      58: iload         4
      60: iadd
      61: iconst_1
      62: isub
      63: iload         4
      65: idiv
      66: istore        6
      68: iload         4
      70: iconst_1
      71: iadd
      72: anewarray     #7                  // class org/bouncycastle/math/ec/ECPoint
      75: astore        7
      77: aload         7
      79: iconst_0
      80: aload_0
      81: getfield      #2                  // Field val$p:Lorg/bouncycastle/math/ec/ECPoint;
      84: aastore
      85: iconst_1
      86: istore        8
      88: iload         8
      90: iload         4
      92: if_icmpge     118
      95: aload         7
      97: iload         8
      99: aload         7
     101: iload         8
     103: iconst_1
     104: isub
     105: aaload
     106: iload         6
     108: invokevirtual #8                  // Method org/bouncycastle/math/ec/ECPoint.timesPow2:(I)Lorg/bouncycastle/math/ec/ECPoint;
     111: aastore
     112: iinc          8, 1
     115: goto          88
     118: aload         7
     120: iload         4
     122: aload         7
     124: iconst_0
     125: aaload
     126: aload         7
     128: iconst_1
     129: aaload
     130: invokevirtual #9                  // Method org/bouncycastle/math/ec/ECPoint.subtract:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
     133: aastore
     134: aload_0
     135: getfield      #1                  // Field val$c:Lorg/bouncycastle/math/ec/ECCurve;
     138: aload         7
     140: invokevirtual #10                 // Method org/bouncycastle/math/ec/ECCurve.normalizeAll:([Lorg/bouncycastle/math/ec/ECPoint;)V
     143: iload         5
     145: anewarray     #7                  // class org/bouncycastle/math/ec/ECPoint
     148: astore        8
     150: aload         8
     152: iconst_0
     153: aload         7
     155: iconst_0
     156: aaload
     157: aastore
     158: iload         4
     160: iconst_1
     161: isub
     162: istore        9
     164: iload         9
     166: iflt          229
     169: aload         7
     171: iload         9
     173: aaload
     174: astore        10
     176: iconst_1
     177: iload         9
     179: ishl
     180: istore        11
     182: iload         11
     184: istore        12
     186: iload         12
     188: iload         5
     190: if_icmpge     223
     193: aload         8
     195: iload         12
     197: aload         8
     199: iload         12
     201: iload         11
     203: isub
     204: aaload
     205: aload         10
     207: invokevirtual #11                 // Method org/bouncycastle/math/ec/ECPoint.add:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
     210: aastore
     211: iload         12
     213: iload         11
     215: iconst_1
     216: ishl
     217: iadd
     218: istore        12
     220: goto          186
     223: iinc          9, -1
     226: goto          164
     229: aload_0
     230: getfield      #1                  // Field val$c:Lorg/bouncycastle/math/ec/ECCurve;
     233: aload         8
     235: invokevirtual #10                 // Method org/bouncycastle/math/ec/ECCurve.normalizeAll:([Lorg/bouncycastle/math/ec/ECPoint;)V
     238: new           #4                  // class org/bouncycastle/math/ec/FixedPointPreCompInfo
     241: dup
     242: invokespecial #12                 // Method org/bouncycastle/math/ec/FixedPointPreCompInfo."<init>":()V
     245: astore        9
     247: aload         9
     249: aload_0
     250: getfield      #1                  // Field val$c:Lorg/bouncycastle/math/ec/ECCurve;
     253: aload         8
     255: iconst_0
     256: aload         8
     258: arraylength
     259: invokevirtual #13                 // Method org/bouncycastle/math/ec/ECCurve.createCacheSafeLookupTable:([Lorg/bouncycastle/math/ec/ECPoint;II)Lorg/bouncycastle/math/ec/ECLookupTable;
     262: invokevirtual #14                 // Method org/bouncycastle/math/ec/FixedPointPreCompInfo.setLookupTable:(Lorg/bouncycastle/math/ec/ECLookupTable;)V
     265: aload         9
     267: aload         7
     269: iload         4
     271: aaload
     272: invokevirtual #15                 // Method org/bouncycastle/math/ec/FixedPointPreCompInfo.setOffset:(Lorg/bouncycastle/math/ec/ECPoint;)V
     275: aload         9
     277: iload         4
     279: invokevirtual #16                 // Method org/bouncycastle/math/ec/FixedPointPreCompInfo.setWidth:(I)V
     282: aload         9
     284: areturn

  private boolean checkExisting(org.bouncycastle.math.ec.FixedPointPreCompInfo, int);
    Code:
       0: aload_1
       1: ifnull        20
       4: aload_0
       5: aload_1
       6: invokevirtual #17                 // Method org/bouncycastle/math/ec/FixedPointPreCompInfo.getLookupTable:()Lorg/bouncycastle/math/ec/ECLookupTable;
       9: iload_2
      10: invokespecial #18                 // Method checkTable:(Lorg/bouncycastle/math/ec/ECLookupTable;I)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private boolean checkTable(org.bouncycastle.math.ec.ECLookupTable, int);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_1
       5: invokeinterface #19,  1           // InterfaceMethod org/bouncycastle/math/ec/ECLookupTable.getSize:()I
      10: iload_2
      11: if_icmplt     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn
}
