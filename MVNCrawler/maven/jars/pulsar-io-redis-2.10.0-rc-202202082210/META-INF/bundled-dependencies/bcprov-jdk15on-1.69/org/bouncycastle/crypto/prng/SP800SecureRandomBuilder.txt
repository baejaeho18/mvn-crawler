public class org.bouncycastle.crypto.prng.SP800SecureRandomBuilder {
  private final java.security.SecureRandom random;

  private final org.bouncycastle.crypto.prng.EntropySourceProvider entropySourceProvider;

  private byte[] personalizationString;

  private int securityStrength;

  private int entropyBitsRequired;

  public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder();
    Code:
       0: aload_0
       1: invokestatic  #113                // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
       4: iconst_0
       5: invokespecial #116                // Method "<init>":(Ljava/security/SecureRandom;Z)V
       8: return

  public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder(java.security.SecureRandom, boolean);
    Code:
       0: aload_0
       1: invokespecial #105                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        256
       8: putfield      #101                // Field securityStrength:I
      11: aload_0
      12: sipush        256
      15: putfield      #100                // Field entropyBitsRequired:I
      18: aload_0
      19: aload_1
      20: putfield      #103                // Field random:Ljava/security/SecureRandom;
      23: aload_0
      24: new           #49                 // class org/bouncycastle/crypto/prng/BasicEntropySourceProvider
      27: dup
      28: aload_0
      29: getfield      #103                // Field random:Ljava/security/SecureRandom;
      32: iload_2
      33: invokespecial #114                // Method org/bouncycastle/crypto/prng/BasicEntropySourceProvider."<init>":(Ljava/security/SecureRandom;Z)V
      36: putfield      #104                // Field entropySourceProvider:Lorg/bouncycastle/crypto/prng/EntropySourceProvider;
      39: return

  public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder(org.bouncycastle.crypto.prng.EntropySourceProvider);
    Code:
       0: aload_0
       1: invokespecial #105                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        256
       8: putfield      #101                // Field securityStrength:I
      11: aload_0
      12: sipush        256
      15: putfield      #100                // Field entropyBitsRequired:I
      18: aload_0
      19: aconst_null
      20: putfield      #103                // Field random:Ljava/security/SecureRandom;
      23: aload_0
      24: aload_1
      25: putfield      #104                // Field entropySourceProvider:Lorg/bouncycastle/crypto/prng/EntropySourceProvider;
      28: return

  public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder setPersonalizationString(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #121                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       5: putfield      #102                // Field personalizationString:[B
       8: aload_0
       9: areturn

  public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder setSecurityStrength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #101                // Field securityStrength:I
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder setEntropyBitsRequired(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #100                // Field entropyBitsRequired:I
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.prng.SP800SecureRandom buildHash(org.bouncycastle.crypto.Digest, byte[], boolean);
    Code:
       0: new           #51                 // class org/bouncycastle/crypto/prng/SP800SecureRandom
       3: dup
       4: aload_0
       5: getfield      #103                // Field random:Ljava/security/SecureRandom;
       8: aload_0
       9: getfield      #104                // Field entropySourceProvider:Lorg/bouncycastle/crypto/prng/EntropySourceProvider;
      12: aload_0
      13: getfield      #100                // Field entropyBitsRequired:I
      16: invokeinterface #123,  2          // InterfaceMethod org/bouncycastle/crypto/prng/EntropySourceProvider.get:(I)Lorg/bouncycastle/crypto/prng/EntropySource;
      21: new           #55                 // class org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$HashDRBGProvider
      24: dup
      25: aload_1
      26: aload_2
      27: aload_0
      28: getfield      #102                // Field personalizationString:[B
      31: aload_0
      32: getfield      #101                // Field securityStrength:I
      35: invokespecial #120                // Method org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$HashDRBGProvider."<init>":(Lorg/bouncycastle/crypto/Digest;[B[BI)V
      38: iload_3
      39: invokespecial #115                // Method org/bouncycastle/crypto/prng/SP800SecureRandom."<init>":(Ljava/security/SecureRandom;Lorg/bouncycastle/crypto/prng/EntropySource;Lorg/bouncycastle/crypto/prng/DRBGProvider;Z)V
      42: areturn

  public org.bouncycastle.crypto.prng.SP800SecureRandom buildCTR(org.bouncycastle.crypto.BlockCipher, int, byte[], boolean);
    Code:
       0: new           #51                 // class org/bouncycastle/crypto/prng/SP800SecureRandom
       3: dup
       4: aload_0
       5: getfield      #103                // Field random:Ljava/security/SecureRandom;
       8: aload_0
       9: getfield      #104                // Field entropySourceProvider:Lorg/bouncycastle/crypto/prng/EntropySourceProvider;
      12: aload_0
      13: getfield      #100                // Field entropyBitsRequired:I
      16: invokeinterface #123,  2          // InterfaceMethod org/bouncycastle/crypto/prng/EntropySourceProvider.get:(I)Lorg/bouncycastle/crypto/prng/EntropySource;
      21: new           #53                 // class org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$CTRDRBGProvider
      24: dup
      25: aload_1
      26: iload_2
      27: aload_3
      28: aload_0
      29: getfield      #102                // Field personalizationString:[B
      32: aload_0
      33: getfield      #101                // Field securityStrength:I
      36: invokespecial #118                // Method org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$CTRDRBGProvider."<init>":(Lorg/bouncycastle/crypto/BlockCipher;I[B[BI)V
      39: iload         4
      41: invokespecial #115                // Method org/bouncycastle/crypto/prng/SP800SecureRandom."<init>":(Ljava/security/SecureRandom;Lorg/bouncycastle/crypto/prng/EntropySource;Lorg/bouncycastle/crypto/prng/DRBGProvider;Z)V
      44: areturn

  public org.bouncycastle.crypto.prng.SP800SecureRandom buildHMAC(org.bouncycastle.crypto.Mac, byte[], boolean);
    Code:
       0: new           #51                 // class org/bouncycastle/crypto/prng/SP800SecureRandom
       3: dup
       4: aload_0
       5: getfield      #103                // Field random:Ljava/security/SecureRandom;
       8: aload_0
       9: getfield      #104                // Field entropySourceProvider:Lorg/bouncycastle/crypto/prng/EntropySourceProvider;
      12: aload_0
      13: getfield      #100                // Field entropyBitsRequired:I
      16: invokeinterface #123,  2          // InterfaceMethod org/bouncycastle/crypto/prng/EntropySourceProvider.get:(I)Lorg/bouncycastle/crypto/prng/EntropySource;
      21: new           #54                 // class org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$HMacDRBGProvider
      24: dup
      25: aload_1
      26: aload_2
      27: aload_0
      28: getfield      #102                // Field personalizationString:[B
      31: aload_0
      32: getfield      #101                // Field securityStrength:I
      35: invokespecial #119                // Method org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$HMacDRBGProvider."<init>":(Lorg/bouncycastle/crypto/Mac;[B[BI)V
      38: iload_3
      39: invokespecial #115                // Method org/bouncycastle/crypto/prng/SP800SecureRandom."<init>":(Ljava/security/SecureRandom;Lorg/bouncycastle/crypto/prng/EntropySource;Lorg/bouncycastle/crypto/prng/DRBGProvider;Z)V
      42: areturn

  private static java.lang.String getSimplifiedName(org.bouncycastle.crypto.Digest);
    Code:
       0: aload_0
       1: invokeinterface #122,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getAlgorithmName:()Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: bipush        45
      10: invokevirtual #106                // Method java/lang/String.indexOf:(I)I
      13: istore_2
      14: iload_2
      15: ifle          57
      18: aload_1
      19: ldc           #1                  // String SHA3
      21: invokevirtual #109                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      24: ifne          57
      27: new           #46                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #110                // Method java/lang/StringBuilder."<init>":()V
      34: aload_1
      35: iconst_0
      36: iload_2
      37: invokevirtual #108                // Method java/lang/String.substring:(II)Ljava/lang/String;
      40: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: iload_2
      45: iconst_1
      46: iadd
      47: invokevirtual #107                // Method java/lang/String.substring:(I)Ljava/lang/String;
      50: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn
      57: aload_1
      58: areturn

  static java.lang.String access$000(org.bouncycastle.crypto.Digest);
    Code:
       0: aload_0
       1: invokestatic  #117                // Method getSimplifiedName:(Lorg/bouncycastle/crypto/Digest;)Ljava/lang/String;
       4: areturn
}
