public class org.bouncycastle.crypto.params.DSTU4145Parameters extends org.bouncycastle.crypto.params.ECDomainParameters {
  private final byte[] dke;

  public org.bouncycastle.crypto.params.DSTU4145Parameters(org.bouncycastle.crypto.params.ECDomainParameters, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       5: aload_1
       6: invokevirtual #37                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
       9: aload_1
      10: invokevirtual #35                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      13: aload_1
      14: invokevirtual #34                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getH:()Ljava/math/BigInteger;
      17: aload_1
      18: invokevirtual #33                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getSeed:()[B
      21: invokespecial #38                 // Method org/bouncycastle/crypto/params/ECDomainParameters."<init>":(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;Ljava/math/BigInteger;[B)V
      24: aload_0
      25: aload_2
      26: invokestatic  #39                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      29: putfield      #32                 // Field dke:[B
      32: return

  public byte[] getDKE();
    Code:
       0: aload_0
       1: getfield      #32                 // Field dke:[B
       4: invokestatic  #39                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn
}
