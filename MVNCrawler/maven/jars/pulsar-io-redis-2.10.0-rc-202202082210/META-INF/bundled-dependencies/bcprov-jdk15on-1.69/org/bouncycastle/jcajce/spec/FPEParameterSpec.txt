public class org.bouncycastle.jcajce.spec.FPEParameterSpec implements java.security.spec.AlgorithmParameterSpec {
  private final int radix;

  private final byte[] tweak;

  private final boolean useInverse;

  public org.bouncycastle.jcajce.spec.FPEParameterSpec(int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #37                 // Method "<init>":(I[BZ)V
       7: return

  public org.bouncycastle.jcajce.spec.FPEParameterSpec(int, byte[], boolean);
    Code:
       0: aload_0
       1: invokespecial #36                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #33                 // Field radix:I
       9: aload_0
      10: aload_2
      11: invokestatic  #38                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      14: putfield      #35                 // Field tweak:[B
      17: aload_0
      18: iload_3
      19: putfield      #34                 // Field useInverse:Z
      22: return

  public int getRadix();
    Code:
       0: aload_0
       1: getfield      #33                 // Field radix:I
       4: ireturn

  public byte[] getTweak();
    Code:
       0: aload_0
       1: getfield      #35                 // Field tweak:[B
       4: invokestatic  #38                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public boolean isUsingInverseFunction();
    Code:
       0: aload_0
       1: getfield      #34                 // Field useInverse:Z
       4: ireturn
}
