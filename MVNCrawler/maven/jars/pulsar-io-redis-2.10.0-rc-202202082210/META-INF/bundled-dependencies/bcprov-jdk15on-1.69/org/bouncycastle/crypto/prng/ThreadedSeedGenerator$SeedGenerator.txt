class org.bouncycastle.crypto.prng.ThreadedSeedGenerator$SeedGenerator implements java.lang.Runnable {
  private volatile int counter;

  private volatile boolean stop;

  final org.bouncycastle.crypto.prng.ThreadedSeedGenerator this$0;

  private org.bouncycastle.crypto.prng.ThreadedSeedGenerator$SeedGenerator(org.bouncycastle.crypto.prng.ThreadedSeedGenerator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field this$0:Lorg/bouncycastle/crypto/prng/ThreadedSeedGenerator;
       5: aload_0
       6: invokespecial #43                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #40                 // Field counter:I
      14: aload_0
      15: iconst_0
      16: putfield      #41                 // Field stop:Z
      19: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #41                 // Field stop:Z
       4: ifne          20
       7: aload_0
       8: dup
       9: getfield      #40                 // Field counter:I
      12: iconst_1
      13: iadd
      14: putfield      #40                 // Field counter:I
      17: goto          0
      20: return

  public byte[] generateSeed(int, boolean);
    Code:
       0: new           #24                 // class java/lang/Thread
       3: dup
       4: aload_0
       5: invokespecial #46                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
       8: astore_3
       9: iload_1
      10: newarray       byte
      12: astore        4
      14: aload_0
      15: iconst_0
      16: putfield      #40                 // Field counter:I
      19: aload_0
      20: iconst_0
      21: putfield      #41                 // Field stop:Z
      24: iconst_0
      25: istore        5
      27: aload_3
      28: invokevirtual #44                 // Method java/lang/Thread.start:()V
      31: iload_2
      32: ifeq          41
      35: iload_1
      36: istore        6
      38: goto          47
      41: iload_1
      42: bipush        8
      44: imul
      45: istore        6
      47: iconst_0
      48: istore        7
      50: iload         7
      52: iload         6
      54: if_icmpge     134
      57: aload_0
      58: getfield      #40                 // Field counter:I
      61: iload         5
      63: if_icmpne     78
      66: lconst_1
      67: invokestatic  #45                 // Method java/lang/Thread.sleep:(J)V
      70: goto          57
      73: astore        8
      75: goto          57
      78: aload_0
      79: getfield      #40                 // Field counter:I
      82: istore        5
      84: iload_2
      85: ifeq          103
      88: aload         4
      90: iload         7
      92: iload         5
      94: sipush        255
      97: iand
      98: i2b
      99: bastore
     100: goto          128
     103: iload         7
     105: bipush        8
     107: idiv
     108: istore        8
     110: aload         4
     112: iload         8
     114: aload         4
     116: iload         8
     118: baload
     119: iconst_1
     120: ishl
     121: iload         5
     123: iconst_1
     124: iand
     125: ior
     126: i2b
     127: bastore
     128: iinc          7, 1
     131: goto          50
     134: aload_0
     135: iconst_1
     136: putfield      #41                 // Field stop:Z
     139: aload         4
     141: areturn
    Exception table:
       from    to  target type
          66    70    73   Class java/lang/InterruptedException

  org.bouncycastle.crypto.prng.ThreadedSeedGenerator$SeedGenerator(org.bouncycastle.crypto.prng.ThreadedSeedGenerator, org.bouncycastle.crypto.prng.ThreadedSeedGenerator$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #47                 // Method "<init>":(Lorg/bouncycastle/crypto/prng/ThreadedSeedGenerator;)V
       5: return
}
