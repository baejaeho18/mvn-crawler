public class org.bouncycastle.crypto.macs.CFBBlockCipherMac implements org.bouncycastle.crypto.Mac {
  private byte[] mac;

  private byte[] buf;

  private int bufOff;

  private org.bouncycastle.crypto.macs.MacCFBBlockCipher cipher;

  private org.bouncycastle.crypto.paddings.BlockCipherPadding padding;

  private int macSize;

  public org.bouncycastle.crypto.macs.CFBBlockCipherMac(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        8
       4: aload_1
       5: invokeinterface #95,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      10: bipush        8
      12: imul
      13: iconst_2
      14: idiv
      15: aconst_null
      16: invokespecial #87                 // Method "<init>":(Lorg/bouncycastle/crypto/BlockCipher;IILorg/bouncycastle/crypto/paddings/BlockCipherPadding;)V
      19: return

  public org.bouncycastle.crypto.macs.CFBBlockCipherMac(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.paddings.BlockCipherPadding);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        8
       4: aload_1
       5: invokeinterface #95,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      10: bipush        8
      12: imul
      13: iconst_2
      14: idiv
      15: aload_2
      16: invokespecial #87                 // Method "<init>":(Lorg/bouncycastle/crypto/BlockCipher;IILorg/bouncycastle/crypto/paddings/BlockCipherPadding;)V
      19: return

  public org.bouncycastle.crypto.macs.CFBBlockCipherMac(org.bouncycastle.crypto.BlockCipher, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aconst_null
       5: invokespecial #87                 // Method "<init>":(Lorg/bouncycastle/crypto/BlockCipher;IILorg/bouncycastle/crypto/paddings/BlockCipherPadding;)V
       8: return

  public org.bouncycastle.crypto.macs.CFBBlockCipherMac(org.bouncycastle.crypto.BlockCipher, int, int, org.bouncycastle.crypto.paddings.BlockCipherPadding);
    Code:
       0: aload_0
       1: invokespecial #84                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #82                 // Field padding:Lorg/bouncycastle/crypto/paddings/BlockCipherPadding;
       9: iload_3
      10: bipush        8
      12: irem
      13: ifeq          26
      16: new           #40                 // class java/lang/IllegalArgumentException
      19: dup
      20: ldc           #2                  // String MAC size must be multiple of 8
      22: invokespecial #83                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: aload_1
      28: invokeinterface #95,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      33: newarray       byte
      35: putfield      #80                 // Field mac:[B
      38: aload_0
      39: new           #46                 // class org/bouncycastle/crypto/macs/MacCFBBlockCipher
      42: dup
      43: aload_1
      44: iload_2
      45: invokespecial #93                 // Method org/bouncycastle/crypto/macs/MacCFBBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;I)V
      48: putfield      #81                 // Field cipher:Lorg/bouncycastle/crypto/macs/MacCFBBlockCipher;
      51: aload_0
      52: aload         4
      54: putfield      #82                 // Field padding:Lorg/bouncycastle/crypto/paddings/BlockCipherPadding;
      57: aload_0
      58: iload_3
      59: bipush        8
      61: idiv
      62: putfield      #78                 // Field macSize:I
      65: aload_0
      66: aload_0
      67: getfield      #81                 // Field cipher:Lorg/bouncycastle/crypto/macs/MacCFBBlockCipher;
      70: invokevirtual #88                 // Method org/bouncycastle/crypto/macs/MacCFBBlockCipher.getBlockSize:()I
      73: newarray       byte
      75: putfield      #79                 // Field buf:[B
      78: aload_0
      79: iconst_0
      80: putfield      #77                 // Field bufOff:I
      83: return

  public java.lang.String getAlgorithmName();
    Code:
       0: aload_0
       1: getfield      #81                 // Field cipher:Lorg/bouncycastle/crypto/macs/MacCFBBlockCipher;
       4: invokevirtual #92                 // Method org/bouncycastle/crypto/macs/MacCFBBlockCipher.getAlgorithmName:()Ljava/lang/String;
       7: areturn

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method reset:()V
       4: aload_0
       5: getfield      #81                 // Field cipher:Lorg/bouncycastle/crypto/macs/MacCFBBlockCipher;
       8: aload_1
       9: invokevirtual #94                 // Method org/bouncycastle/crypto/macs/MacCFBBlockCipher.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
      12: return

  public int getMacSize();
    Code:
       0: aload_0
       1: getfield      #78                 // Field macSize:I
       4: ireturn

  public void update(byte);
    Code:
       0: aload_0
       1: getfield      #77                 // Field bufOff:I
       4: aload_0
       5: getfield      #79                 // Field buf:[B
       8: arraylength
       9: if_icmpne     35
      12: aload_0
      13: getfield      #81                 // Field cipher:Lorg/bouncycastle/crypto/macs/MacCFBBlockCipher;
      16: aload_0
      17: getfield      #79                 // Field buf:[B
      20: iconst_0
      21: aload_0
      22: getfield      #80                 // Field mac:[B
      25: iconst_0
      26: invokevirtual #91                 // Method org/bouncycastle/crypto/macs/MacCFBBlockCipher.processBlock:([BI[BI)I
      29: pop
      30: aload_0
      31: iconst_0
      32: putfield      #77                 // Field bufOff:I
      35: aload_0
      36: getfield      #79                 // Field buf:[B
      39: aload_0
      40: dup
      41: getfield      #77                 // Field bufOff:I
      44: dup_x1
      45: iconst_1
      46: iadd
      47: putfield      #77                 // Field bufOff:I
      50: iload_1
      51: bastore
      52: return

  public void update(byte[], int, int);
    Code:
       0: iload_3
       1: ifge          14
       4: new           #40                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #1                  // String Can\'t have a negative input length!
      10: invokespecial #83                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #81                 // Field cipher:Lorg/bouncycastle/crypto/macs/MacCFBBlockCipher;
      18: invokevirtual #88                 // Method org/bouncycastle/crypto/macs/MacCFBBlockCipher.getBlockSize:()I
      21: istore        4
      23: iconst_0
      24: istore        5
      26: iload         4
      28: aload_0
      29: getfield      #77                 // Field bufOff:I
      32: isub
      33: istore        6
      35: iload_3
      36: iload         6
      38: if_icmple     131
      41: aload_1
      42: iload_2
      43: aload_0
      44: getfield      #79                 // Field buf:[B
      47: aload_0
      48: getfield      #77                 // Field bufOff:I
      51: iload         6
      53: invokestatic  #85                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: iload         5
      58: aload_0
      59: getfield      #81                 // Field cipher:Lorg/bouncycastle/crypto/macs/MacCFBBlockCipher;
      62: aload_0
      63: getfield      #79                 // Field buf:[B
      66: iconst_0
      67: aload_0
      68: getfield      #80                 // Field mac:[B
      71: iconst_0
      72: invokevirtual #91                 // Method org/bouncycastle/crypto/macs/MacCFBBlockCipher.processBlock:([BI[BI)I
      75: iadd
      76: istore        5
      78: aload_0
      79: iconst_0
      80: putfield      #77                 // Field bufOff:I
      83: iload_3
      84: iload         6
      86: isub
      87: istore_3
      88: iload_2
      89: iload         6
      91: iadd
      92: istore_2
      93: iload_3
      94: iload         4
      96: if_icmple     131
      99: iload         5
     101: aload_0
     102: getfield      #81                 // Field cipher:Lorg/bouncycastle/crypto/macs/MacCFBBlockCipher;
     105: aload_1
     106: iload_2
     107: aload_0
     108: getfield      #80                 // Field mac:[B
     111: iconst_0
     112: invokevirtual #91                 // Method org/bouncycastle/crypto/macs/MacCFBBlockCipher.processBlock:([BI[BI)I
     115: iadd
     116: istore        5
     118: iload_3
     119: iload         4
     121: isub
     122: istore_3
     123: iload_2
     124: iload         4
     126: iadd
     127: istore_2
     128: goto          93
     131: aload_1
     132: iload_2
     133: aload_0
     134: getfield      #79                 // Field buf:[B
     137: aload_0
     138: getfield      #77                 // Field bufOff:I
     141: iload_3
     142: invokestatic  #85                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     145: aload_0
     146: dup
     147: getfield      #77                 // Field bufOff:I
     150: iload_3
     151: iadd
     152: putfield      #77                 // Field bufOff:I
     155: return

  public int doFinal(byte[], int);
    Code:
       0: aload_0
       1: getfield      #81                 // Field cipher:Lorg/bouncycastle/crypto/macs/MacCFBBlockCipher;
       4: invokevirtual #88                 // Method org/bouncycastle/crypto/macs/MacCFBBlockCipher.getBlockSize:()I
       7: istore_3
       8: aload_0
       9: getfield      #82                 // Field padding:Lorg/bouncycastle/crypto/paddings/BlockCipherPadding;
      12: ifnonnull     46
      15: aload_0
      16: getfield      #77                 // Field bufOff:I
      19: iload_3
      20: if_icmpge     64
      23: aload_0
      24: getfield      #79                 // Field buf:[B
      27: aload_0
      28: getfield      #77                 // Field bufOff:I
      31: iconst_0
      32: bastore
      33: aload_0
      34: dup
      35: getfield      #77                 // Field bufOff:I
      38: iconst_1
      39: iadd
      40: putfield      #77                 // Field bufOff:I
      43: goto          15
      46: aload_0
      47: getfield      #82                 // Field padding:Lorg/bouncycastle/crypto/paddings/BlockCipherPadding;
      50: aload_0
      51: getfield      #79                 // Field buf:[B
      54: aload_0
      55: getfield      #77                 // Field bufOff:I
      58: invokeinterface #96,  3           // InterfaceMethod org/bouncycastle/crypto/paddings/BlockCipherPadding.addPadding:([BI)I
      63: pop
      64: aload_0
      65: getfield      #81                 // Field cipher:Lorg/bouncycastle/crypto/macs/MacCFBBlockCipher;
      68: aload_0
      69: getfield      #79                 // Field buf:[B
      72: iconst_0
      73: aload_0
      74: getfield      #80                 // Field mac:[B
      77: iconst_0
      78: invokevirtual #91                 // Method org/bouncycastle/crypto/macs/MacCFBBlockCipher.processBlock:([BI[BI)I
      81: pop
      82: aload_0
      83: getfield      #81                 // Field cipher:Lorg/bouncycastle/crypto/macs/MacCFBBlockCipher;
      86: aload_0
      87: getfield      #80                 // Field mac:[B
      90: invokevirtual #90                 // Method org/bouncycastle/crypto/macs/MacCFBBlockCipher.getMacBlock:([B)V
      93: aload_0
      94: getfield      #80                 // Field mac:[B
      97: iconst_0
      98: aload_1
      99: iload_2
     100: aload_0
     101: getfield      #78                 // Field macSize:I
     104: invokestatic  #85                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     107: aload_0
     108: invokevirtual #86                 // Method reset:()V
     111: aload_0
     112: getfield      #78                 // Field macSize:I
     115: ireturn

  public void reset();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #79                 // Field buf:[B
       7: arraylength
       8: if_icmpge     24
      11: aload_0
      12: getfield      #79                 // Field buf:[B
      15: iload_1
      16: iconst_0
      17: bastore
      18: iinc          1, 1
      21: goto          2
      24: aload_0
      25: iconst_0
      26: putfield      #77                 // Field bufOff:I
      29: aload_0
      30: getfield      #81                 // Field cipher:Lorg/bouncycastle/crypto/macs/MacCFBBlockCipher;
      33: invokevirtual #89                 // Method org/bouncycastle/crypto/macs/MacCFBBlockCipher.reset:()V
      36: return
}
