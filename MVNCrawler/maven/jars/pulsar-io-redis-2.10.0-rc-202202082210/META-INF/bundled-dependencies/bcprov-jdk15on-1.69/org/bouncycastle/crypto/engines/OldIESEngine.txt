public class org.bouncycastle.crypto.engines.OldIESEngine extends org.bouncycastle.crypto.engines.IESEngine {
  public org.bouncycastle.crypto.engines.OldIESEngine(org.bouncycastle.crypto.BasicAgreement, org.bouncycastle.crypto.DerivationFunction, org.bouncycastle.crypto.Mac);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #17                 // Method org/bouncycastle/crypto/engines/IESEngine."<init>":(Lorg/bouncycastle/crypto/BasicAgreement;Lorg/bouncycastle/crypto/DerivationFunction;Lorg/bouncycastle/crypto/Mac;)V
       7: return

  public org.bouncycastle.crypto.engines.OldIESEngine(org.bouncycastle.crypto.BasicAgreement, org.bouncycastle.crypto.DerivationFunction, org.bouncycastle.crypto.Mac, org.bouncycastle.crypto.BufferedBlockCipher);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #18                 // Method org/bouncycastle/crypto/engines/IESEngine."<init>":(Lorg/bouncycastle/crypto/BasicAgreement;Lorg/bouncycastle/crypto/DerivationFunction;Lorg/bouncycastle/crypto/Mac;Lorg/bouncycastle/crypto/BufferedBlockCipher;)V
       9: return

  protected byte[] getLengthTag(byte[]);
    Code:
       0: iconst_4
       1: newarray       byte
       3: astore_2
       4: aload_1
       5: ifnull        18
       8: aload_1
       9: arraylength
      10: bipush        8
      12: imul
      13: aload_2
      14: iconst_0
      15: invokestatic  #19                 // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
      18: aload_2
      19: areturn
}
