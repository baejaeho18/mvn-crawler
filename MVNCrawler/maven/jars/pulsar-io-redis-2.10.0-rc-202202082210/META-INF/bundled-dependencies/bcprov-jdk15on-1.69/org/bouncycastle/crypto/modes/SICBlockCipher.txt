public class org.bouncycastle.crypto.modes.SICBlockCipher extends org.bouncycastle.crypto.StreamBlockCipher implements org.bouncycastle.crypto.SkippingStreamCipher {
  private final org.bouncycastle.crypto.BlockCipher cipher;

  private final int blockSize;

  private byte[] IV;

  private byte[] counter;

  private byte[] counterOut;

  private int byteCount;

  public org.bouncycastle.crypto.modes.SICBlockCipher(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #146                // Method org/bouncycastle/crypto/StreamBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
       5: aload_0
       6: aload_1
       7: putfield      #136                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      10: aload_0
      11: aload_0
      12: getfield      #136                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      15: invokeinterface #161,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      20: putfield      #131                // Field blockSize:I
      23: aload_0
      24: aload_0
      25: getfield      #131                // Field blockSize:I
      28: newarray       byte
      30: putfield      #133                // Field IV:[B
      33: aload_0
      34: aload_0
      35: getfield      #131                // Field blockSize:I
      38: newarray       byte
      40: putfield      #134                // Field counter:[B
      43: aload_0
      44: aload_0
      45: getfield      #131                // Field blockSize:I
      48: newarray       byte
      50: putfield      #135                // Field counterOut:[B
      53: aload_0
      54: iconst_0
      55: putfield      #132                // Field byteCount:I
      58: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_2
       1: instanceof    #88                 // class org/bouncycastle/crypto/params/ParametersWithIV
       4: ifeq          175
       7: aload_2
       8: checkcast     #88                 // class org/bouncycastle/crypto/params/ParametersWithIV
      11: astore_3
      12: aload_0
      13: aload_3
      14: invokevirtual #156                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      17: invokestatic  #158                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      20: putfield      #133                // Field IV:[B
      23: aload_0
      24: getfield      #131                // Field blockSize:I
      27: aload_0
      28: getfield      #133                // Field IV:[B
      31: arraylength
      32: if_icmpge     70
      35: new           #78                 // class java/lang/IllegalArgumentException
      38: dup
      39: new           #80                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #139                // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #3                  // String CTR/SIC mode requires IV no greater than:
      48: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #131                // Field blockSize:I
      55: invokevirtual #141                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: ldc           #1                  // String  bytes.
      60: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #140                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #137                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: bipush        8
      72: aload_0
      73: getfield      #131                // Field blockSize:I
      76: iconst_2
      77: idiv
      78: if_icmple     90
      81: aload_0
      82: getfield      #131                // Field blockSize:I
      85: iconst_2
      86: idiv
      87: goto          92
      90: bipush        8
      92: istore        4
      94: aload_0
      95: getfield      #131                // Field blockSize:I
      98: aload_0
      99: getfield      #133                // Field IV:[B
     102: arraylength
     103: isub
     104: iload         4
     106: if_icmple     147
     109: new           #78                 // class java/lang/IllegalArgumentException
     112: dup
     113: new           #80                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #139                // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #4                  // String CTR/SIC mode requires IV of at least:
     122: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_0
     126: getfield      #131                // Field blockSize:I
     129: iload         4
     131: isub
     132: invokevirtual #141                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     135: ldc           #1                  // String  bytes.
     137: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #140                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokespecial #137                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     146: athrow
     147: aload_3
     148: invokevirtual #157                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
     151: ifnull        168
     154: aload_0
     155: getfield      #136                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     158: iconst_1
     159: aload_3
     160: invokevirtual #157                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
     163: invokeinterface #165,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     168: aload_0
     169: invokevirtual #149                // Method reset:()V
     172: goto          185
     175: new           #78                 // class java/lang/IllegalArgumentException
     178: dup
     179: ldc           #5                  // String CTR/SIC mode requires ParametersWithIV
     181: invokespecial #137                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     184: athrow
     185: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #80                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #139                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #136                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: invokeinterface #164,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      16: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #2                  // String /SIC
      21: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #140                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #136                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: invokeinterface #161,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
       9: ireturn

  public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #132                // Field byteCount:I
       4: ifeq          26
       7: aload_0
       8: aload_1
       9: iload_2
      10: aload_0
      11: getfield      #131                // Field blockSize:I
      14: aload_3
      15: iload         4
      17: invokevirtual #155                // Method processBytes:([BII[BI)I
      20: pop
      21: aload_0
      22: getfield      #131                // Field blockSize:I
      25: ireturn
      26: iload_2
      27: aload_0
      28: getfield      #131                // Field blockSize:I
      31: iadd
      32: aload_1
      33: arraylength
      34: if_icmple     47
      37: new           #83                 // class org/bouncycastle/crypto/DataLengthException
      40: dup
      41: ldc           #7                  // String input buffer too small
      43: invokespecial #144                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: iload         4
      49: aload_0
      50: getfield      #131                // Field blockSize:I
      53: iadd
      54: aload_3
      55: arraylength
      56: if_icmple     69
      59: new           #84                 // class org/bouncycastle/crypto/OutputLengthException
      62: dup
      63: ldc           #8                  // String output buffer too short
      65: invokespecial #145                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_0
      70: getfield      #136                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      73: aload_0
      74: getfield      #134                // Field counter:[B
      77: iconst_0
      78: aload_0
      79: getfield      #135                // Field counterOut:[B
      82: iconst_0
      83: invokeinterface #163,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      88: pop
      89: iconst_0
      90: istore        5
      92: iload         5
      94: aload_0
      95: getfield      #131                // Field blockSize:I
      98: if_icmpge     129
     101: aload_3
     102: iload         4
     104: iload         5
     106: iadd
     107: aload_1
     108: iload_2
     109: iload         5
     111: iadd
     112: baload
     113: aload_0
     114: getfield      #135                // Field counterOut:[B
     117: iload         5
     119: baload
     120: ixor
     121: i2b
     122: bastore
     123: iinc          5, 1
     126: goto          92
     129: aload_0
     130: invokespecial #148                // Method incrementCounterChecked:()V
     133: aload_0
     134: getfield      #131                // Field blockSize:I
     137: ireturn

  public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #131                // Field blockSize:I
       5: iadd
       6: aload_1
       7: arraylength
       8: if_icmple     21
      11: new           #83                 // class org/bouncycastle/crypto/DataLengthException
      14: dup
      15: ldc           #7                  // String input buffer too small
      17: invokespecial #144                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload         5
      23: aload_0
      24: getfield      #131                // Field blockSize:I
      27: iadd
      28: aload         4
      30: arraylength
      31: if_icmple     44
      34: new           #84                 // class org/bouncycastle/crypto/OutputLengthException
      37: dup
      38: ldc           #8                  // String output buffer too short
      40: invokespecial #145                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: iconst_0
      45: istore        6
      47: iload         6
      49: iload_3
      50: if_icmpge     172
      53: aload_0
      54: getfield      #132                // Field byteCount:I
      57: ifne          109
      60: aload_0
      61: getfield      #136                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      64: aload_0
      65: getfield      #134                // Field counter:[B
      68: iconst_0
      69: aload_0
      70: getfield      #135                // Field counterOut:[B
      73: iconst_0
      74: invokeinterface #163,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      79: pop
      80: aload_1
      81: iload_2
      82: iload         6
      84: iadd
      85: baload
      86: aload_0
      87: getfield      #135                // Field counterOut:[B
      90: aload_0
      91: dup
      92: getfield      #132                // Field byteCount:I
      95: dup_x1
      96: iconst_1
      97: iadd
      98: putfield      #132                // Field byteCount:I
     101: baload
     102: ixor
     103: i2b
     104: istore        7
     106: goto          156
     109: aload_1
     110: iload_2
     111: iload         6
     113: iadd
     114: baload
     115: aload_0
     116: getfield      #135                // Field counterOut:[B
     119: aload_0
     120: dup
     121: getfield      #132                // Field byteCount:I
     124: dup_x1
     125: iconst_1
     126: iadd
     127: putfield      #132                // Field byteCount:I
     130: baload
     131: ixor
     132: i2b
     133: istore        7
     135: aload_0
     136: getfield      #132                // Field byteCount:I
     139: aload_0
     140: getfield      #134                // Field counter:[B
     143: arraylength
     144: if_icmpne     156
     147: aload_0
     148: iconst_0
     149: putfield      #132                // Field byteCount:I
     152: aload_0
     153: invokespecial #148                // Method incrementCounterChecked:()V
     156: aload         4
     158: iload         5
     160: iload         6
     162: iadd
     163: iload         7
     165: bastore
     166: iinc          6, 1
     169: goto          47
     172: iload_3
     173: ireturn

  protected byte calculateByte(byte) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #132                // Field byteCount:I
       4: ifne          47
       7: aload_0
       8: getfield      #136                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: aload_0
      12: getfield      #134                // Field counter:[B
      15: iconst_0
      16: aload_0
      17: getfield      #135                // Field counterOut:[B
      20: iconst_0
      21: invokeinterface #163,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      26: pop
      27: aload_0
      28: getfield      #135                // Field counterOut:[B
      31: aload_0
      32: dup
      33: getfield      #132                // Field byteCount:I
      36: dup_x1
      37: iconst_1
      38: iadd
      39: putfield      #132                // Field byteCount:I
      42: baload
      43: iload_1
      44: ixor
      45: i2b
      46: ireturn
      47: aload_0
      48: getfield      #135                // Field counterOut:[B
      51: aload_0
      52: dup
      53: getfield      #132                // Field byteCount:I
      56: dup_x1
      57: iconst_1
      58: iadd
      59: putfield      #132                // Field byteCount:I
      62: baload
      63: iload_1
      64: ixor
      65: i2b
      66: istore_2
      67: aload_0
      68: getfield      #132                // Field byteCount:I
      71: aload_0
      72: getfield      #134                // Field counter:[B
      75: arraylength
      76: if_icmpne     88
      79: aload_0
      80: iconst_0
      81: putfield      #132                // Field byteCount:I
      84: aload_0
      85: invokespecial #148                // Method incrementCounterChecked:()V
      88: iload_2
      89: ireturn

  private void checkCounter();
    Code:
       0: aload_0
       1: getfield      #133                // Field IV:[B
       4: arraylength
       5: aload_0
       6: getfield      #131                // Field blockSize:I
       9: if_icmpge     54
      12: iconst_0
      13: istore_1
      14: iload_1
      15: aload_0
      16: getfield      #133                // Field IV:[B
      19: arraylength
      20: if_icmpeq     54
      23: aload_0
      24: getfield      #134                // Field counter:[B
      27: iload_1
      28: baload
      29: aload_0
      30: getfield      #133                // Field IV:[B
      33: iload_1
      34: baload
      35: if_icmpeq     48
      38: new           #79                 // class java/lang/IllegalStateException
      41: dup
      42: ldc           #6                  // String Counter in CTR/SIC mode out of range.
      44: invokespecial #138                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: iinc          1, 1
      51: goto          14
      54: return

  private void incrementCounterChecked();
    Code:
       0: aload_0
       1: getfield      #134                // Field counter:[B
       4: arraylength
       5: istore_1
       6: iinc          1, -1
       9: iload_1
      10: iflt          31
      13: aload_0
      14: getfield      #134                // Field counter:[B
      17: iload_1
      18: dup2
      19: baload
      20: iconst_1
      21: iadd
      22: i2b
      23: dup_x2
      24: bastore
      25: ifeq          6
      28: goto          31
      31: iload_1
      32: aload_0
      33: getfield      #133                // Field IV:[B
      36: arraylength
      37: if_icmpge     62
      40: aload_0
      41: getfield      #133                // Field IV:[B
      44: arraylength
      45: aload_0
      46: getfield      #131                // Field blockSize:I
      49: if_icmpge     62
      52: new           #79                 // class java/lang/IllegalStateException
      55: dup
      56: ldc           #6                  // String Counter in CTR/SIC mode out of range.
      58: invokespecial #138                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: return

  private void incrementCounterAt(int);
    Code:
       0: aload_0
       1: getfield      #134                // Field counter:[B
       4: arraylength
       5: iload_1
       6: isub
       7: istore_2
       8: iinc          2, -1
      11: iload_2
      12: iflt          33
      15: aload_0
      16: getfield      #134                // Field counter:[B
      19: iload_2
      20: dup2
      21: baload
      22: iconst_1
      23: iadd
      24: i2b
      25: dup_x2
      26: bastore
      27: ifeq          8
      30: goto          33
      33: return

  private void incrementCounter(int);
    Code:
       0: aload_0
       1: getfield      #134                // Field counter:[B
       4: aload_0
       5: getfield      #134                // Field counter:[B
       8: arraylength
       9: iconst_1
      10: isub
      11: baload
      12: istore_2
      13: aload_0
      14: getfield      #134                // Field counter:[B
      17: aload_0
      18: getfield      #134                // Field counter:[B
      21: arraylength
      22: iconst_1
      23: isub
      24: dup2
      25: baload
      26: iload_1
      27: iadd
      28: i2b
      29: bastore
      30: iload_2
      31: ifeq          55
      34: aload_0
      35: getfield      #134                // Field counter:[B
      38: aload_0
      39: getfield      #134                // Field counter:[B
      42: arraylength
      43: iconst_1
      44: isub
      45: baload
      46: iload_2
      47: if_icmpge     55
      50: aload_0
      51: iconst_1
      52: invokespecial #152                // Method incrementCounterAt:(I)V
      55: return

  private void decrementCounterAt(int);
    Code:
       0: aload_0
       1: getfield      #134                // Field counter:[B
       4: arraylength
       5: iload_1
       6: isub
       7: istore_2
       8: iinc          2, -1
      11: iload_2
      12: iflt          32
      15: aload_0
      16: getfield      #134                // Field counter:[B
      19: iload_2
      20: dup2
      21: baload
      22: iconst_1
      23: isub
      24: i2b
      25: dup_x2
      26: bastore
      27: iconst_m1
      28: if_icmpeq     8
      31: return
      32: return

  private void adjustCounter(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          110
       6: lload_1
       7: aload_0
       8: getfield      #132                // Field byteCount:I
      11: i2l
      12: ladd
      13: aload_0
      14: getfield      #131                // Field blockSize:I
      17: i2l
      18: ldiv
      19: lstore_3
      20: lload_3
      21: lstore        5
      23: lload         5
      25: ldc2_w        #76                 // long 255l
      28: lcmp
      29: ifle          80
      32: iconst_5
      33: istore        7
      35: iload         7
      37: iconst_1
      38: if_icmplt     80
      41: lconst_1
      42: bipush        8
      44: iload         7
      46: imul
      47: lshl
      48: lstore        8
      50: lload         5
      52: lload         8
      54: lcmp
      55: iflt          74
      58: aload_0
      59: iload         7
      61: invokespecial #152                // Method incrementCounterAt:(I)V
      64: lload         5
      66: lload         8
      68: lsub
      69: lstore        5
      71: goto          50
      74: iinc          7, -1
      77: goto          35
      80: aload_0
      81: lload         5
      83: l2i
      84: invokespecial #151                // Method incrementCounter:(I)V
      87: aload_0
      88: lload_1
      89: aload_0
      90: getfield      #132                // Field byteCount:I
      93: i2l
      94: ladd
      95: aload_0
      96: getfield      #131                // Field blockSize:I
      99: i2l
     100: lload_3
     101: lmul
     102: lsub
     103: l2i
     104: putfield      #132                // Field byteCount:I
     107: goto          257
     110: lload_1
     111: lneg
     112: aload_0
     113: getfield      #132                // Field byteCount:I
     116: i2l
     117: lsub
     118: aload_0
     119: getfield      #131                // Field blockSize:I
     122: i2l
     123: ldiv
     124: lstore_3
     125: lload_3
     126: lstore        5
     128: lload         5
     130: ldc2_w        #76                 // long 255l
     133: lcmp
     134: ifle          185
     137: iconst_5
     138: istore        7
     140: iload         7
     142: iconst_1
     143: if_icmplt     185
     146: lconst_1
     147: bipush        8
     149: iload         7
     151: imul
     152: lshl
     153: lstore        8
     155: lload         5
     157: lload         8
     159: lcmp
     160: ifle          179
     163: aload_0
     164: iload         7
     166: invokespecial #150                // Method decrementCounterAt:(I)V
     169: lload         5
     171: lload         8
     173: lsub
     174: lstore        5
     176: goto          155
     179: iinc          7, -1
     182: goto          140
     185: lconst_0
     186: lstore        7
     188: lload         7
     190: lload         5
     192: lcmp
     193: ifeq          210
     196: aload_0
     197: iconst_0
     198: invokespecial #150                // Method decrementCounterAt:(I)V
     201: lload         7
     203: lconst_1
     204: ladd
     205: lstore        7
     207: goto          188
     210: aload_0
     211: getfield      #132                // Field byteCount:I
     214: i2l
     215: lload_1
     216: ladd
     217: aload_0
     218: getfield      #131                // Field blockSize:I
     221: i2l
     222: lload_3
     223: lmul
     224: ladd
     225: l2i
     226: istore        7
     228: iload         7
     230: iflt          241
     233: aload_0
     234: iconst_0
     235: putfield      #132                // Field byteCount:I
     238: goto          257
     241: aload_0
     242: iconst_0
     243: invokespecial #150                // Method decrementCounterAt:(I)V
     246: aload_0
     247: aload_0
     248: getfield      #131                // Field blockSize:I
     251: iload         7
     253: iadd
     254: putfield      #132                // Field byteCount:I
     257: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #134                // Field counter:[B
       4: iconst_0
       5: invokestatic  #159                // Method org/bouncycastle/util/Arrays.fill:([BB)V
       8: aload_0
       9: getfield      #133                // Field IV:[B
      12: iconst_0
      13: aload_0
      14: getfield      #134                // Field counter:[B
      17: iconst_0
      18: aload_0
      19: getfield      #133                // Field IV:[B
      22: arraylength
      23: invokestatic  #143                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      26: aload_0
      27: getfield      #136                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      30: invokeinterface #162,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
      35: aload_0
      36: iconst_0
      37: putfield      #132                // Field byteCount:I
      40: return

  public long skip(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #154                // Method adjustCounter:(J)V
       5: aload_0
       6: invokespecial #147                // Method checkCounter:()V
       9: aload_0
      10: getfield      #136                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      13: aload_0
      14: getfield      #134                // Field counter:[B
      17: iconst_0
      18: aload_0
      19: getfield      #135                // Field counterOut:[B
      22: iconst_0
      23: invokeinterface #163,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      28: pop
      29: lload_1
      30: lreturn

  public long seekTo(long);
    Code:
       0: aload_0
       1: invokevirtual #149                // Method reset:()V
       4: aload_0
       5: lload_1
       6: invokevirtual #153                // Method skip:(J)J
       9: lreturn

  public long getPosition();
    Code:
       0: aload_0
       1: getfield      #134                // Field counter:[B
       4: arraylength
       5: newarray       byte
       7: astore_1
       8: aload_0
       9: getfield      #134                // Field counter:[B
      12: iconst_0
      13: aload_1
      14: iconst_0
      15: aload_1
      16: arraylength
      17: invokestatic  #143                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      20: aload_1
      21: arraylength
      22: iconst_1
      23: isub
      24: istore_2
      25: iload_2
      26: iconst_1
      27: if_icmplt     100
      30: iload_2
      31: aload_0
      32: getfield      #133                // Field IV:[B
      35: arraylength
      36: if_icmpge     61
      39: aload_1
      40: iload_2
      41: baload
      42: sipush        255
      45: iand
      46: aload_0
      47: getfield      #133                // Field IV:[B
      50: iload_2
      51: baload
      52: sipush        255
      55: iand
      56: isub
      57: istore_3
      58: goto          69
      61: aload_1
      62: iload_2
      63: baload
      64: sipush        255
      67: iand
      68: istore_3
      69: iload_3
      70: ifge          89
      73: aload_1
      74: iload_2
      75: iconst_1
      76: isub
      77: dup2
      78: baload
      79: iconst_1
      80: isub
      81: i2b
      82: bastore
      83: iinc_w        3, 256
      89: aload_1
      90: iload_2
      91: iload_3
      92: i2b
      93: bastore
      94: iinc          2, -1
      97: goto          25
     100: aload_1
     101: aload_1
     102: arraylength
     103: bipush        8
     105: isub
     106: invokestatic  #160                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
     109: aload_0
     110: getfield      #131                // Field blockSize:I
     113: i2l
     114: lmul
     115: aload_0
     116: getfield      #132                // Field byteCount:I
     119: i2l
     120: ladd
     121: lreturn
}
