public class org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil {
  public static final org.bouncycastle.asn1.ASN1ObjectIdentifier[] rsaOids;

  public org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil();
    Code:
       0: aload_0
       1: invokespecial #96                 // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isRsaOid(org.bouncycastle.asn1.ASN1ObjectIdentifier);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: getstatic     #95                 // Field rsaOids:[Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
       6: arraylength
       7: if_icmpeq     30
      10: aload_0
      11: getstatic     #95                 // Field rsaOids:[Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      14: iload_1
      15: aaload
      16: invokevirtual #98                 // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.equals:(Lorg/bouncycastle/asn1/ASN1Primitive;)Z
      19: ifeq          24
      22: iconst_1
      23: ireturn
      24: iinc          1, 1
      27: goto          2
      30: iconst_0
      31: ireturn

  static org.bouncycastle.crypto.params.RSAKeyParameters generatePublicKeyParameter(java.security.interfaces.RSAPublicKey);
    Code:
       0: aload_0
       1: instanceof    #54                 // class org/bouncycastle/jcajce/provider/asymmetric/rsa/BCRSAPublicKey
       4: ifeq          15
       7: aload_0
       8: checkcast     #54                 // class org/bouncycastle/jcajce/provider/asymmetric/rsa/BCRSAPublicKey
      11: invokevirtual #102                // Method org/bouncycastle/jcajce/provider/asymmetric/rsa/BCRSAPublicKey.engineGetKeyParameters:()Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      14: areturn
      15: new           #51                 // class org/bouncycastle/crypto/params/RSAKeyParameters
      18: dup
      19: iconst_0
      20: aload_0
      21: invokeinterface #116,  1          // InterfaceMethod java/security/interfaces/RSAPublicKey.getModulus:()Ljava/math/BigInteger;
      26: aload_0
      27: invokeinterface #117,  1          // InterfaceMethod java/security/interfaces/RSAPublicKey.getPublicExponent:()Ljava/math/BigInteger;
      32: invokespecial #99                 // Method org/bouncycastle/crypto/params/RSAKeyParameters."<init>":(ZLjava/math/BigInteger;Ljava/math/BigInteger;)V
      35: areturn

  static org.bouncycastle.crypto.params.RSAKeyParameters generatePrivateKeyParameter(java.security.interfaces.RSAPrivateKey);
    Code:
       0: aload_0
       1: instanceof    #53                 // class org/bouncycastle/jcajce/provider/asymmetric/rsa/BCRSAPrivateKey
       4: ifeq          15
       7: aload_0
       8: checkcast     #53                 // class org/bouncycastle/jcajce/provider/asymmetric/rsa/BCRSAPrivateKey
      11: invokevirtual #101                // Method org/bouncycastle/jcajce/provider/asymmetric/rsa/BCRSAPrivateKey.engineGetKeyParameters:()Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      14: areturn
      15: aload_0
      16: instanceof    #45                 // class java/security/interfaces/RSAPrivateCrtKey
      19: ifeq          83
      22: aload_0
      23: checkcast     #45                 // class java/security/interfaces/RSAPrivateCrtKey
      26: astore_1
      27: new           #52                 // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
      30: dup
      31: aload_1
      32: invokeinterface #107,  1          // InterfaceMethod java/security/interfaces/RSAPrivateCrtKey.getModulus:()Ljava/math/BigInteger;
      37: aload_1
      38: invokeinterface #113,  1          // InterfaceMethod java/security/interfaces/RSAPrivateCrtKey.getPublicExponent:()Ljava/math/BigInteger;
      43: aload_1
      44: invokeinterface #112,  1          // InterfaceMethod java/security/interfaces/RSAPrivateCrtKey.getPrivateExponent:()Ljava/math/BigInteger;
      49: aload_1
      50: invokeinterface #110,  1          // InterfaceMethod java/security/interfaces/RSAPrivateCrtKey.getPrimeP:()Ljava/math/BigInteger;
      55: aload_1
      56: invokeinterface #111,  1          // InterfaceMethod java/security/interfaces/RSAPrivateCrtKey.getPrimeQ:()Ljava/math/BigInteger;
      61: aload_1
      62: invokeinterface #108,  1          // InterfaceMethod java/security/interfaces/RSAPrivateCrtKey.getPrimeExponentP:()Ljava/math/BigInteger;
      67: aload_1
      68: invokeinterface #109,  1          // InterfaceMethod java/security/interfaces/RSAPrivateCrtKey.getPrimeExponentQ:()Ljava/math/BigInteger;
      73: aload_1
      74: invokeinterface #106,  1          // InterfaceMethod java/security/interfaces/RSAPrivateCrtKey.getCrtCoefficient:()Ljava/math/BigInteger;
      79: invokespecial #100                // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      82: areturn
      83: aload_0
      84: astore_1
      85: new           #51                 // class org/bouncycastle/crypto/params/RSAKeyParameters
      88: dup
      89: iconst_1
      90: aload_1
      91: invokeinterface #114,  1          // InterfaceMethod java/security/interfaces/RSAPrivateKey.getModulus:()Ljava/math/BigInteger;
      96: aload_1
      97: invokeinterface #115,  1          // InterfaceMethod java/security/interfaces/RSAPrivateKey.getPrivateExponent:()Ljava/math/BigInteger;
     102: invokespecial #99                 // Method org/bouncycastle/crypto/params/RSAKeyParameters."<init>":(ZLjava/math/BigInteger;Ljava/math/BigInteger;)V
     105: areturn

  static java.lang.String generateKeyFingerprint(java.math.BigInteger);
    Code:
       0: new           #56                 // class org/bouncycastle/util/Fingerprint
       3: dup
       4: aload_0
       5: invokevirtual #97                 // Method java/math/BigInteger.toByteArray:()[B
       8: invokespecial #103                // Method org/bouncycastle/util/Fingerprint."<init>":([B)V
      11: invokevirtual #105                // Method org/bouncycastle/util/Fingerprint.toString:()Ljava/lang/String;
      14: areturn

  static java.lang.String generateExponentFingerprint(java.math.BigInteger);
    Code:
       0: new           #56                 // class org/bouncycastle/util/Fingerprint
       3: dup
       4: aload_0
       5: invokevirtual #97                 // Method java/math/BigInteger.toByteArray:()[B
       8: bipush        32
      10: invokespecial #104                // Method org/bouncycastle/util/Fingerprint."<init>":([BI)V
      13: invokevirtual #105                // Method org/bouncycastle/util/Fingerprint.toString:()Ljava/lang/String;
      16: areturn

  static {};
    Code:
       0: iconst_4
       1: anewarray     #48                 // class org/bouncycastle/asn1/ASN1ObjectIdentifier
       4: dup
       5: iconst_0
       6: getstatic     #93                 // Field org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.rsaEncryption:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
       9: aastore
      10: dup
      11: iconst_1
      12: getstatic     #94                 // Field org/bouncycastle/asn1/x509/X509ObjectIdentifiers.id_ea_rsa:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      15: aastore
      16: dup
      17: iconst_2
      18: getstatic     #91                 // Field org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.id_RSAES_OAEP:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      21: aastore
      22: dup
      23: iconst_3
      24: getstatic     #92                 // Field org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.id_RSASSA_PSS:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      27: aastore
      28: putstatic     #95                 // Field rsaOids:[Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      31: return
}
