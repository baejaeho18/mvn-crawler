public class org.bouncycastle.crypto.modes.gcm.BasicGCMExponentiator implements org.bouncycastle.crypto.modes.gcm.GCMExponentiator {
  private long[] x;

  public org.bouncycastle.crypto.modes.gcm.BasicGCMExponentiator();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.asLongs:([B)[J
       5: putfield      #35                 // Field x:[J
       8: return

  public void exponentiateX(long, byte[]);
    Code:
       0: invokestatic  #37                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.oneAsLongs:()[J
       3: astore        4
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifle          57
      11: iconst_2
      12: newarray       long
      14: astore        5
      16: aload_0
      17: getfield      #35                 // Field x:[J
      20: aload         5
      22: invokestatic  #40                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.copy:([J[J)V
      25: lload_1
      26: lconst_1
      27: land
      28: lconst_0
      29: lcmp
      30: ifeq          40
      33: aload         4
      35: aload         5
      37: invokestatic  #41                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.multiply:([J[J)V
      40: aload         5
      42: aload         5
      44: invokestatic  #42                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.square:([J[J)V
      47: lload_1
      48: iconst_1
      49: lushr
      50: lstore_1
      51: lload_1
      52: lconst_0
      53: lcmp
      54: ifgt          25
      57: aload         4
      59: aload_3
      60: invokestatic  #39                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.asBytes:([J[B)V
      63: return
}
