public class org.bouncycastle.crypto.engines.NoekeonEngine implements org.bouncycastle.crypto.BlockCipher {
  private static final int SIZE;

  private static final byte[] roundConstants;

  private final int[] k;

  private boolean _initialised;

  private boolean _forEncryption;

  public org.bouncycastle.crypto.engines.NoekeonEngine();
    Code:
       0: aload_0
       1: invokespecial #102                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_4
       6: newarray       int
       8: putfield      #98                 // Field k:[I
      11: aload_0
      12: iconst_0
      13: putfield      #96                 // Field _initialised:Z
      16: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #3                  // String Noekeon
       2: areturn

  public int getBlockSize();
    Code:
       0: bipush        16
       2: ireturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #69                 // class org/bouncycastle/crypto/params/KeyParameter
       4: ifne          40
       7: new           #61                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #64                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #5                  // String invalid parameter passed to Noekeon init -
      20: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #103                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #99                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #100                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_2
      41: checkcast     #69                 // class org/bouncycastle/crypto/params/KeyParameter
      44: astore_3
      45: aload_3
      46: invokevirtual #112                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      49: astore        4
      51: aload         4
      53: arraylength
      54: bipush        16
      56: if_icmpeq     69
      59: new           #61                 // class java/lang/IllegalArgumentException
      62: dup
      63: ldc           #2                  // String Key length not 128 bits.
      65: invokespecial #100                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload         4
      71: iconst_0
      72: aload_0
      73: getfield      #98                 // Field k:[I
      76: iconst_0
      77: iconst_4
      78: invokestatic  #116                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI[III)V
      81: iload_1
      82: ifne          231
      85: aload_0
      86: getfield      #98                 // Field k:[I
      89: iconst_0
      90: iaload
      91: istore        5
      93: aload_0
      94: getfield      #98                 // Field k:[I
      97: iconst_1
      98: iaload
      99: istore        6
     101: aload_0
     102: getfield      #98                 // Field k:[I
     105: iconst_2
     106: iaload
     107: istore        7
     109: aload_0
     110: getfield      #98                 // Field k:[I
     113: iconst_3
     114: iaload
     115: istore        8
     117: iload         5
     119: iload         7
     121: ixor
     122: istore        9
     124: iload         9
     126: iload         9
     128: bipush        8
     130: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     133: iload         9
     135: bipush        24
     137: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     140: ixor
     141: ixor
     142: istore        9
     144: iload         6
     146: iload         8
     148: ixor
     149: istore        10
     151: iload         10
     153: iload         10
     155: bipush        8
     157: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     160: iload         10
     162: bipush        24
     164: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     167: ixor
     168: ixor
     169: istore        10
     171: iload         5
     173: iload         10
     175: ixor
     176: istore        5
     178: iload         6
     180: iload         9
     182: ixor
     183: istore        6
     185: iload         7
     187: iload         10
     189: ixor
     190: istore        7
     192: iload         8
     194: iload         9
     196: ixor
     197: istore        8
     199: aload_0
     200: getfield      #98                 // Field k:[I
     203: iconst_0
     204: iload         5
     206: iastore
     207: aload_0
     208: getfield      #98                 // Field k:[I
     211: iconst_1
     212: iload         6
     214: iastore
     215: aload_0
     216: getfield      #98                 // Field k:[I
     219: iconst_2
     220: iload         7
     222: iastore
     223: aload_0
     224: getfield      #98                 // Field k:[I
     227: iconst_3
     228: iload         8
     230: iastore
     231: aload_0
     232: iload_1
     233: putfield      #95                 // Field _forEncryption:Z
     236: aload_0
     237: iconst_1
     238: putfield      #96                 // Field _initialised:Z
     241: return

  public int processBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: getfield      #96                 // Field _initialised:Z
       4: ifne          37
       7: new           #62                 // class java/lang/IllegalStateException
      10: dup
      11: new           #64                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
      18: aload_0
      19: invokevirtual #111                // Method getAlgorithmName:()Ljava/lang/String;
      22: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #1                  // String  not initialised
      27: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #101                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_2
      38: aload_1
      39: arraylength
      40: bipush        16
      42: isub
      43: if_icmple     56
      46: new           #66                 // class org/bouncycastle/crypto/DataLengthException
      49: dup
      50: ldc           #4                  // String input buffer too short
      52: invokespecial #107                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: iload         4
      58: aload_3
      59: arraylength
      60: bipush        16
      62: isub
      63: if_icmple     76
      66: new           #67                 // class org/bouncycastle/crypto/OutputLengthException
      69: dup
      70: ldc           #6                  // String output buffer too short
      72: invokespecial #108                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_0
      77: getfield      #95                 // Field _forEncryption:Z
      80: ifeq          95
      83: aload_0
      84: aload_1
      85: iload_2
      86: aload_3
      87: iload         4
      89: invokespecial #110                // Method encryptBlock:([BI[BI)I
      92: goto          104
      95: aload_0
      96: aload_1
      97: iload_2
      98: aload_3
      99: iload         4
     101: invokespecial #109                // Method decryptBlock:([BI[BI)I
     104: ireturn

  public void reset();
    Code:
       0: return

  private int encryptBlock(byte[], int, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: invokestatic  #115                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI)I
       5: istore        5
       7: aload_1
       8: iload_2
       9: iconst_4
      10: iadd
      11: invokestatic  #115                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI)I
      14: istore        6
      16: aload_1
      17: iload_2
      18: bipush        8
      20: iadd
      21: invokestatic  #115                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI)I
      24: istore        7
      26: aload_1
      27: iload_2
      28: bipush        12
      30: iadd
      31: invokestatic  #115                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI)I
      34: istore        8
      36: aload_0
      37: getfield      #98                 // Field k:[I
      40: iconst_0
      41: iaload
      42: istore        9
      44: aload_0
      45: getfield      #98                 // Field k:[I
      48: iconst_1
      49: iaload
      50: istore        10
      52: aload_0
      53: getfield      #98                 // Field k:[I
      56: iconst_2
      57: iaload
      58: istore        11
      60: aload_0
      61: getfield      #98                 // Field k:[I
      64: iconst_3
      65: iaload
      66: istore        12
      68: iconst_0
      69: istore        13
      71: iload         5
      73: getstatic     #97                 // Field roundConstants:[B
      76: iload         13
      78: baload
      79: sipush        255
      82: iand
      83: ixor
      84: istore        5
      86: iload         5
      88: iload         7
      90: ixor
      91: istore        14
      93: iload         14
      95: iload         14
      97: bipush        8
      99: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     102: iload         14
     104: bipush        24
     106: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     109: ixor
     110: ixor
     111: istore        14
     113: iload         5
     115: iload         9
     117: ixor
     118: istore        5
     120: iload         6
     122: iload         10
     124: ixor
     125: istore        6
     127: iload         7
     129: iload         11
     131: ixor
     132: istore        7
     134: iload         8
     136: iload         12
     138: ixor
     139: istore        8
     141: iload         6
     143: iload         8
     145: ixor
     146: istore        15
     148: iload         15
     150: iload         15
     152: bipush        8
     154: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     157: iload         15
     159: bipush        24
     161: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     164: ixor
     165: ixor
     166: istore        15
     168: iload         5
     170: iload         15
     172: ixor
     173: istore        5
     175: iload         6
     177: iload         14
     179: ixor
     180: istore        6
     182: iload         7
     184: iload         15
     186: ixor
     187: istore        7
     189: iload         8
     191: iload         14
     193: ixor
     194: istore        8
     196: iinc          13, 1
     199: iload         13
     201: bipush        16
     203: if_icmple     209
     206: goto          324
     209: iload         6
     211: iconst_1
     212: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     215: istore        6
     217: iload         7
     219: iconst_5
     220: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     223: istore        7
     225: iload         8
     227: iconst_2
     228: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     231: istore        8
     233: iload         8
     235: istore        14
     237: iload         6
     239: iload         8
     241: iload         7
     243: ior
     244: ixor
     245: istore        6
     247: iload         5
     249: iload         7
     251: iload         6
     253: iconst_m1
     254: ixor
     255: iand
     256: ixor
     257: istore        8
     259: iload         14
     261: iload         6
     263: iconst_m1
     264: ixor
     265: ixor
     266: iload         7
     268: ixor
     269: iload         8
     271: ixor
     272: istore        7
     274: iload         6
     276: iload         8
     278: iload         7
     280: ior
     281: ixor
     282: istore        6
     284: iload         14
     286: iload         7
     288: iload         6
     290: iand
     291: ixor
     292: istore        5
     294: iload         6
     296: bipush        31
     298: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     301: istore        6
     303: iload         7
     305: bipush        27
     307: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     310: istore        7
     312: iload         8
     314: bipush        30
     316: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     319: istore        8
     321: goto          71
     324: iload         5
     326: aload_3
     327: iload         4
     329: invokestatic  #114                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
     332: iload         6
     334: aload_3
     335: iload         4
     337: iconst_4
     338: iadd
     339: invokestatic  #114                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
     342: iload         7
     344: aload_3
     345: iload         4
     347: bipush        8
     349: iadd
     350: invokestatic  #114                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
     353: iload         8
     355: aload_3
     356: iload         4
     358: bipush        12
     360: iadd
     361: invokestatic  #114                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
     364: bipush        16
     366: ireturn

  private int decryptBlock(byte[], int, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: invokestatic  #115                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI)I
       5: istore        5
       7: aload_1
       8: iload_2
       9: iconst_4
      10: iadd
      11: invokestatic  #115                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI)I
      14: istore        6
      16: aload_1
      17: iload_2
      18: bipush        8
      20: iadd
      21: invokestatic  #115                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI)I
      24: istore        7
      26: aload_1
      27: iload_2
      28: bipush        12
      30: iadd
      31: invokestatic  #115                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI)I
      34: istore        8
      36: aload_0
      37: getfield      #98                 // Field k:[I
      40: iconst_0
      41: iaload
      42: istore        9
      44: aload_0
      45: getfield      #98                 // Field k:[I
      48: iconst_1
      49: iaload
      50: istore        10
      52: aload_0
      53: getfield      #98                 // Field k:[I
      56: iconst_2
      57: iaload
      58: istore        11
      60: aload_0
      61: getfield      #98                 // Field k:[I
      64: iconst_3
      65: iaload
      66: istore        12
      68: bipush        16
      70: istore        13
      72: iload         5
      74: iload         7
      76: ixor
      77: istore        14
      79: iload         14
      81: iload         14
      83: bipush        8
      85: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
      88: iload         14
      90: bipush        24
      92: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
      95: ixor
      96: ixor
      97: istore        14
      99: iload         5
     101: iload         9
     103: ixor
     104: istore        5
     106: iload         6
     108: iload         10
     110: ixor
     111: istore        6
     113: iload         7
     115: iload         11
     117: ixor
     118: istore        7
     120: iload         8
     122: iload         12
     124: ixor
     125: istore        8
     127: iload         6
     129: iload         8
     131: ixor
     132: istore        15
     134: iload         15
     136: iload         15
     138: bipush        8
     140: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     143: iload         15
     145: bipush        24
     147: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     150: ixor
     151: ixor
     152: istore        15
     154: iload         5
     156: iload         15
     158: ixor
     159: istore        5
     161: iload         6
     163: iload         14
     165: ixor
     166: istore        6
     168: iload         7
     170: iload         15
     172: ixor
     173: istore        7
     175: iload         8
     177: iload         14
     179: ixor
     180: istore        8
     182: iload         5
     184: getstatic     #97                 // Field roundConstants:[B
     187: iload         13
     189: baload
     190: sipush        255
     193: iand
     194: ixor
     195: istore        5
     197: iinc          13, -1
     200: iload         13
     202: ifge          208
     205: goto          323
     208: iload         6
     210: iconst_1
     211: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     214: istore        6
     216: iload         7
     218: iconst_5
     219: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     222: istore        7
     224: iload         8
     226: iconst_2
     227: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     230: istore        8
     232: iload         8
     234: istore        14
     236: iload         6
     238: iload         8
     240: iload         7
     242: ior
     243: ixor
     244: istore        6
     246: iload         5
     248: iload         7
     250: iload         6
     252: iconst_m1
     253: ixor
     254: iand
     255: ixor
     256: istore        8
     258: iload         14
     260: iload         6
     262: iconst_m1
     263: ixor
     264: ixor
     265: iload         7
     267: ixor
     268: iload         8
     270: ixor
     271: istore        7
     273: iload         6
     275: iload         8
     277: iload         7
     279: ior
     280: ixor
     281: istore        6
     283: iload         14
     285: iload         7
     287: iload         6
     289: iand
     290: ixor
     291: istore        5
     293: iload         6
     295: bipush        31
     297: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     300: istore        6
     302: iload         7
     304: bipush        27
     306: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     309: istore        7
     311: iload         8
     313: bipush        30
     315: invokestatic  #113                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
     318: istore        8
     320: goto          72
     323: iload         5
     325: aload_3
     326: iload         4
     328: invokestatic  #114                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
     331: iload         6
     333: aload_3
     334: iload         4
     336: iconst_4
     337: iadd
     338: invokestatic  #114                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
     341: iload         7
     343: aload_3
     344: iload         4
     346: bipush        8
     348: iadd
     349: invokestatic  #114                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
     352: iload         8
     354: aload_3
     355: iload         4
     357: bipush        12
     359: iadd
     360: invokestatic  #114                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
     363: bipush        16
     365: ireturn

  static {};
    Code:
       0: bipush        17
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        -128
       8: bastore
       9: dup
      10: iconst_1
      11: bipush        27
      13: bastore
      14: dup
      15: iconst_2
      16: bipush        54
      18: bastore
      19: dup
      20: iconst_3
      21: bipush        108
      23: bastore
      24: dup
      25: iconst_4
      26: bipush        -40
      28: bastore
      29: dup
      30: iconst_5
      31: bipush        -85
      33: bastore
      34: dup
      35: bipush        6
      37: bipush        77
      39: bastore
      40: dup
      41: bipush        7
      43: bipush        -102
      45: bastore
      46: dup
      47: bipush        8
      49: bipush        47
      51: bastore
      52: dup
      53: bipush        9
      55: bipush        94
      57: bastore
      58: dup
      59: bipush        10
      61: bipush        -68
      63: bastore
      64: dup
      65: bipush        11
      67: bipush        99
      69: bastore
      70: dup
      71: bipush        12
      73: bipush        -58
      75: bastore
      76: dup
      77: bipush        13
      79: bipush        -105
      81: bastore
      82: dup
      83: bipush        14
      85: bipush        53
      87: bastore
      88: dup
      89: bipush        15
      91: bipush        106
      93: bastore
      94: dup
      95: bipush        16
      97: bipush        -44
      99: bastore
     100: putstatic     #97                 // Field roundConstants:[B
     103: return
}
