public class org.bouncycastle.crypto.engines.DESedeEngine extends org.bouncycastle.crypto.engines.DESEngine {
  protected static final int BLOCK_SIZE;

  private int[] workingKey1;

  private int[] workingKey2;

  private int[] workingKey3;

  private boolean forEncryption;

  public org.bouncycastle.crypto.engines.DESedeEngine();
    Code:
       0: aload_0
       1: invokespecial #98                 // Method org/bouncycastle/crypto/engines/DESEngine."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #85                 // Field workingKey1:[I
       9: aload_0
      10: aconst_null
      11: putfield      #86                 // Field workingKey2:[I
      14: aload_0
      15: aconst_null
      16: putfield      #87                 // Field workingKey3:[I
      19: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #63                 // class org/bouncycastle/crypto/params/KeyParameter
       4: ifne          40
       7: new           #54                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #57                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #92                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #4                  // String invalid parameter passed to DESede init -
      20: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #91                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #88                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #89                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_2
      41: checkcast     #63                 // class org/bouncycastle/crypto/params/KeyParameter
      44: invokevirtual #101                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      47: astore_3
      48: aload_3
      49: arraylength
      50: bipush        24
      52: if_icmpeq     72
      55: aload_3
      56: arraylength
      57: bipush        16
      59: if_icmpeq     72
      62: new           #54                 // class java/lang/IllegalArgumentException
      65: dup
      66: ldc           #5                  // String key size must be 16 or 24 bytes.
      68: invokespecial #89                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: iload_1
      74: putfield      #84                 // Field forEncryption:Z
      77: bipush        8
      79: newarray       byte
      81: astore        4
      83: aload_3
      84: iconst_0
      85: aload         4
      87: iconst_0
      88: aload         4
      90: arraylength
      91: invokestatic  #95                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      94: aload_0
      95: aload_0
      96: iload_1
      97: aload         4
      99: invokevirtual #99                 // Method generateWorkingKey:(Z[B)[I
     102: putfield      #85                 // Field workingKey1:[I
     105: bipush        8
     107: newarray       byte
     109: astore        5
     111: aload_3
     112: bipush        8
     114: aload         5
     116: iconst_0
     117: aload         5
     119: arraylength
     120: invokestatic  #95                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     123: aload_0
     124: aload_0
     125: iload_1
     126: ifne          133
     129: iconst_1
     130: goto          134
     133: iconst_0
     134: aload         5
     136: invokevirtual #99                 // Method generateWorkingKey:(Z[B)[I
     139: putfield      #86                 // Field workingKey2:[I
     142: aload_3
     143: arraylength
     144: bipush        24
     146: if_icmpne     181
     149: bipush        8
     151: newarray       byte
     153: astore        6
     155: aload_3
     156: bipush        16
     158: aload         6
     160: iconst_0
     161: aload         6
     163: arraylength
     164: invokestatic  #95                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     167: aload_0
     168: aload_0
     169: iload_1
     170: aload         6
     172: invokevirtual #99                 // Method generateWorkingKey:(Z[B)[I
     175: putfield      #87                 // Field workingKey3:[I
     178: goto          189
     181: aload_0
     182: aload_0
     183: getfield      #85                 // Field workingKey1:[I
     186: putfield      #87                 // Field workingKey3:[I
     189: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #1                  // String DESede
       2: areturn

  public int getBlockSize();
    Code:
       0: bipush        8
       2: ireturn

  public int processBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: getfield      #85                 // Field workingKey1:[I
       4: ifnonnull     17
       7: new           #55                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #2                  // String DESede engine not initialised
      13: invokespecial #90                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_2
      18: bipush        8
      20: iadd
      21: aload_1
      22: arraylength
      23: if_icmple     36
      26: new           #59                 // class org/bouncycastle/crypto/DataLengthException
      29: dup
      30: ldc           #3                  // String input buffer too short
      32: invokespecial #96                 // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload         4
      38: bipush        8
      40: iadd
      41: aload_3
      42: arraylength
      43: if_icmple     56
      46: new           #60                 // class org/bouncycastle/crypto/OutputLengthException
      49: dup
      50: ldc           #6                  // String output buffer too short
      52: invokespecial #97                 // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: bipush        8
      58: newarray       byte
      60: astore        5
      62: aload_0
      63: getfield      #84                 // Field forEncryption:Z
      66: ifeq          113
      69: aload_0
      70: aload_0
      71: getfield      #85                 // Field workingKey1:[I
      74: aload_1
      75: iload_2
      76: aload         5
      78: iconst_0
      79: invokevirtual #100                // Method desFunc:([I[BI[BI)V
      82: aload_0
      83: aload_0
      84: getfield      #86                 // Field workingKey2:[I
      87: aload         5
      89: iconst_0
      90: aload         5
      92: iconst_0
      93: invokevirtual #100                // Method desFunc:([I[BI[BI)V
      96: aload_0
      97: aload_0
      98: getfield      #87                 // Field workingKey3:[I
     101: aload         5
     103: iconst_0
     104: aload_3
     105: iload         4
     107: invokevirtual #100                // Method desFunc:([I[BI[BI)V
     110: goto          154
     113: aload_0
     114: aload_0
     115: getfield      #87                 // Field workingKey3:[I
     118: aload_1
     119: iload_2
     120: aload         5
     122: iconst_0
     123: invokevirtual #100                // Method desFunc:([I[BI[BI)V
     126: aload_0
     127: aload_0
     128: getfield      #86                 // Field workingKey2:[I
     131: aload         5
     133: iconst_0
     134: aload         5
     136: iconst_0
     137: invokevirtual #100                // Method desFunc:([I[BI[BI)V
     140: aload_0
     141: aload_0
     142: getfield      #85                 // Field workingKey1:[I
     145: aload         5
     147: iconst_0
     148: aload_3
     149: iload         4
     151: invokevirtual #100                // Method desFunc:([I[BI[BI)V
     154: bipush        8
     156: ireturn

  public void reset();
    Code:
       0: return
}
