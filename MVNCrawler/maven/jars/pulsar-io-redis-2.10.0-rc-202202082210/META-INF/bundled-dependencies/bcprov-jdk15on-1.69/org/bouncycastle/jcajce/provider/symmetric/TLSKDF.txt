public class org.bouncycastle.jcajce.provider.symmetric.TLSKDF {
  public org.bouncycastle.jcajce.provider.symmetric.TLSKDF();
    Code:
       0: aload_0
       1: invokespecial #94                 // Method java/lang/Object."<init>":()V
       4: return

  private static byte[] PRF_legacy(org.bouncycastle.jcajce.spec.TLSKeyMaterialSpec);
    Code:
       0: new           #51                 // class org/bouncycastle/crypto/macs/HMac
       3: dup
       4: invokestatic  #98                 // Method org/bouncycastle/crypto/util/DigestFactory.createMD5:()Lorg/bouncycastle/crypto/Digest;
       7: invokespecial #96                 // Method org/bouncycastle/crypto/macs/HMac."<init>":(Lorg/bouncycastle/crypto/Digest;)V
      10: astore_1
      11: new           #51                 // class org/bouncycastle/crypto/macs/HMac
      14: dup
      15: invokestatic  #99                 // Method org/bouncycastle/crypto/util/DigestFactory.createSHA1:()Lorg/bouncycastle/crypto/Digest;
      18: invokespecial #96                 // Method org/bouncycastle/crypto/macs/HMac."<init>":(Lorg/bouncycastle/crypto/Digest;)V
      21: astore_2
      22: aload_0
      23: invokevirtual #105                // Method org/bouncycastle/jcajce/spec/TLSKeyMaterialSpec.getLabel:()Ljava/lang/String;
      26: invokestatic  #107                // Method org/bouncycastle/util/Strings.toByteArray:(Ljava/lang/String;)[B
      29: astore_3
      30: aload_3
      31: aload_0
      32: invokevirtual #104                // Method org/bouncycastle/jcajce/spec/TLSKeyMaterialSpec.getSeed:()[B
      35: invokestatic  #106                // Method org/bouncycastle/util/Arrays.concatenate:([B[B)[B
      38: astore        4
      40: aload_0
      41: invokevirtual #103                // Method org/bouncycastle/jcajce/spec/TLSKeyMaterialSpec.getSecret:()[B
      44: astore        5
      46: aload         5
      48: arraylength
      49: iconst_1
      50: iadd
      51: iconst_2
      52: idiv
      53: istore        6
      55: iload         6
      57: newarray       byte
      59: astore        7
      61: iload         6
      63: newarray       byte
      65: astore        8
      67: aload         5
      69: iconst_0
      70: aload         7
      72: iconst_0
      73: iload         6
      75: invokestatic  #95                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      78: aload         5
      80: aload         5
      82: arraylength
      83: iload         6
      85: isub
      86: aload         8
      88: iconst_0
      89: iload         6
      91: invokestatic  #95                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      94: aload_0
      95: invokevirtual #102                // Method org/bouncycastle/jcajce/spec/TLSKeyMaterialSpec.getLength:()I
      98: istore        9
     100: iload         9
     102: newarray       byte
     104: astore        10
     106: iload         9
     108: newarray       byte
     110: astore        11
     112: aload_1
     113: aload         7
     115: aload         4
     117: aload         10
     119: invokestatic  #100                // Method hmac_hash:(Lorg/bouncycastle/crypto/Mac;[B[B[B)V
     122: aload_2
     123: aload         8
     125: aload         4
     127: aload         11
     129: invokestatic  #100                // Method hmac_hash:(Lorg/bouncycastle/crypto/Mac;[B[B[B)V
     132: iconst_0
     133: istore        12
     135: iload         12
     137: iload         9
     139: if_icmpge     162
     142: aload         10
     144: iload         12
     146: dup2
     147: baload
     148: aload         11
     150: iload         12
     152: baload
     153: ixor
     154: i2b
     155: bastore
     156: iinc          12, 1
     159: goto          135
     162: aload         10
     164: areturn

  private static void hmac_hash(org.bouncycastle.crypto.Mac, byte[], byte[], byte[]);
    Code:
       0: aload_0
       1: new           #52                 // class org/bouncycastle/crypto/params/KeyParameter
       4: dup
       5: aload_1
       6: invokespecial #97                 // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
       9: invokeinterface #111,  2          // InterfaceMethod org/bouncycastle/crypto/Mac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
      14: aload_2
      15: astore        4
      17: aload_0
      18: invokeinterface #108,  1          // InterfaceMethod org/bouncycastle/crypto/Mac.getMacSize:()I
      23: istore        5
      25: aload_3
      26: arraylength
      27: iload         5
      29: iadd
      30: iconst_1
      31: isub
      32: iload         5
      34: idiv
      35: istore        6
      37: aload_0
      38: invokeinterface #108,  1          // InterfaceMethod org/bouncycastle/crypto/Mac.getMacSize:()I
      43: newarray       byte
      45: astore        7
      47: aload_0
      48: invokeinterface #108,  1          // InterfaceMethod org/bouncycastle/crypto/Mac.getMacSize:()I
      53: newarray       byte
      55: astore        8
      57: iconst_0
      58: istore        9
      60: iload         9
      62: iload         6
      64: if_icmpge     156
      67: aload_0
      68: aload         4
      70: iconst_0
      71: aload         4
      73: arraylength
      74: invokeinterface #110,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
      79: aload_0
      80: aload         7
      82: iconst_0
      83: invokeinterface #109,  3          // InterfaceMethod org/bouncycastle/crypto/Mac.doFinal:([BI)I
      88: pop
      89: aload         7
      91: astore        4
      93: aload_0
      94: aload         4
      96: iconst_0
      97: aload         4
      99: arraylength
     100: invokeinterface #110,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
     105: aload_0
     106: aload_2
     107: iconst_0
     108: aload_2
     109: arraylength
     110: invokeinterface #110,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
     115: aload_0
     116: aload         8
     118: iconst_0
     119: invokeinterface #109,  3          // InterfaceMethod org/bouncycastle/crypto/Mac.doFinal:([BI)I
     124: pop
     125: aload         8
     127: iconst_0
     128: aload_3
     129: iload         5
     131: iload         9
     133: imul
     134: iload         5
     136: aload_3
     137: arraylength
     138: iload         5
     140: iload         9
     142: imul
     143: isub
     144: invokestatic  #93                 // Method java/lang/Math.min:(II)I
     147: invokestatic  #95                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     150: iinc          9, 1
     153: goto          60
     156: return

  static byte[] access$000(org.bouncycastle.jcajce.spec.TLSKeyMaterialSpec);
    Code:
       0: aload_0
       1: invokestatic  #101                // Method PRF_legacy:(Lorg/bouncycastle/jcajce/spec/TLSKeyMaterialSpec;)[B
       4: areturn

  static void access$100(org.bouncycastle.crypto.Mac, byte[], byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #100                // Method hmac_hash:(Lorg/bouncycastle/crypto/Mac;[B[B[B)V
       7: return
}
