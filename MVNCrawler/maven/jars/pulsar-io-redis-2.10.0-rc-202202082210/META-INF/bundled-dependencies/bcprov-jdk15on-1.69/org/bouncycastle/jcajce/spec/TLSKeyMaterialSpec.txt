public class org.bouncycastle.jcajce.spec.TLSKeyMaterialSpec implements java.security.spec.KeySpec {
  public static final java.lang.String MASTER_SECRET;

  public static final java.lang.String KEY_EXPANSION;

  private final byte[] secret;

  private final java.lang.String label;

  private final int length;

  private final byte[] seed;

  public org.bouncycastle.jcajce.spec.TLSKeyMaterialSpec(byte[], java.lang.String, int, byte[]...);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #48                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       9: putfield      #44                 // Field secret:[B
      12: aload_0
      13: aload_2
      14: putfield      #46                 // Field label:Ljava/lang/String;
      17: aload_0
      18: iload_3
      19: putfield      #43                 // Field length:I
      22: aload_0
      23: aload         4
      25: invokestatic  #49                 // Method org/bouncycastle/util/Arrays.concatenate:([[B)[B
      28: putfield      #45                 // Field seed:[B
      31: return

  public java.lang.String getLabel();
    Code:
       0: aload_0
       1: getfield      #46                 // Field label:Ljava/lang/String;
       4: areturn

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #43                 // Field length:I
       4: ireturn

  public byte[] getSecret();
    Code:
       0: aload_0
       1: getfield      #44                 // Field secret:[B
       4: invokestatic  #48                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public byte[] getSeed();
    Code:
       0: aload_0
       1: getfield      #45                 // Field seed:[B
       4: invokestatic  #48                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn
}
