public class org.bouncycastle.crypto.engines.IDEAEngine implements org.bouncycastle.crypto.BlockCipher {
  protected static final int BLOCK_SIZE;

  private int[] workingKey;

  private static final int MASK;

  private static final int BASE;

  public org.bouncycastle.crypto.engines.IDEAEngine();
    Code:
       0: aload_0
       1: invokespecial #104                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #100                // Field workingKey:[I
       9: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #75                 // class org/bouncycastle/crypto/params/KeyParameter
       4: ifeq          24
       7: aload_0
       8: aload_0
       9: iload_1
      10: aload_2
      11: checkcast     #75                 // class org/bouncycastle/crypto/params/KeyParameter
      14: invokevirtual #121                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      17: invokespecial #116                // Method generateWorkingKey:(Z[B)[I
      20: putfield      #100                // Field workingKey:[I
      23: return
      24: new           #66                 // class java/lang/IllegalArgumentException
      27: dup
      28: new           #69                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #7                  // String invalid parameter passed to IDEA init -
      37: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_2
      41: invokevirtual #105                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      44: invokevirtual #101                // Method java/lang/Class.getName:()Ljava/lang/String;
      47: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #107                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #102                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #4                  // String IDEA
       2: areturn

  public int getBlockSize();
    Code:
       0: bipush        8
       2: ireturn

  public int processBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: getfield      #100                // Field workingKey:[I
       4: ifnonnull     17
       7: new           #67                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #5                  // String IDEA engine not initialised
      13: invokespecial #103                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_2
      18: bipush        8
      20: iadd
      21: aload_1
      22: arraylength
      23: if_icmple     36
      26: new           #72                 // class org/bouncycastle/crypto/DataLengthException
      29: dup
      30: ldc           #6                  // String input buffer too short
      32: invokespecial #110                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload         4
      38: bipush        8
      40: iadd
      41: aload_3
      42: arraylength
      43: if_icmple     56
      46: new           #73                 // class org/bouncycastle/crypto/OutputLengthException
      49: dup
      50: ldc           #8                  // String output buffer too short
      52: invokespecial #111                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: aload_0
      58: getfield      #100                // Field workingKey:[I
      61: aload_1
      62: iload_2
      63: aload_3
      64: iload         4
      66: invokespecial #120                // Method ideaFunc:([I[BI[BI)V
      69: bipush        8
      71: ireturn

  public void reset();
    Code:
       0: return

  private int bytesToWord(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: baload
       3: bipush        8
       5: ishl
       6: ldc           #1                  // int 65280
       8: iand
       9: aload_1
      10: iload_2
      11: iconst_1
      12: iadd
      13: baload
      14: sipush        255
      17: iand
      18: iadd
      19: ireturn

  private void wordToBytes(int, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: iload_1
       3: bipush        8
       5: iushr
       6: i2b
       7: bastore
       8: aload_2
       9: iload_3
      10: iconst_1
      11: iadd
      12: iload_1
      13: i2b
      14: bastore
      15: return

  private int mul(int, int);
    Code:
       0: iload_1
       1: ifne          12
       4: ldc           #3                  // int 65537
       6: iload_2
       7: isub
       8: istore_1
       9: goto          53
      12: iload_2
      13: ifne          24
      16: ldc           #3                  // int 65537
      18: iload_1
      19: isub
      20: istore_1
      21: goto          53
      24: iload_1
      25: iload_2
      26: imul
      27: istore_3
      28: iload_3
      29: ldc           #2                  // int 65535
      31: iand
      32: istore_2
      33: iload_3
      34: bipush        16
      36: iushr
      37: istore_1
      38: iload_2
      39: iload_1
      40: isub
      41: iload_2
      42: iload_1
      43: if_icmpge     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: iadd
      52: istore_1
      53: iload_1
      54: ldc           #2                  // int 65535
      56: iand
      57: ireturn

  private void ideaFunc(int[], byte[], int, byte[], int);
    Code:
       0: iconst_0
       1: istore        12
       3: aload_0
       4: aload_2
       5: iload_3
       6: invokespecial #118                // Method bytesToWord:([BI)I
       9: istore        6
      11: aload_0
      12: aload_2
      13: iload_3
      14: iconst_2
      15: iadd
      16: invokespecial #118                // Method bytesToWord:([BI)I
      19: istore        7
      21: aload_0
      22: aload_2
      23: iload_3
      24: iconst_4
      25: iadd
      26: invokespecial #118                // Method bytesToWord:([BI)I
      29: istore        8
      31: aload_0
      32: aload_2
      33: iload_3
      34: bipush        6
      36: iadd
      37: invokespecial #118                // Method bytesToWord:([BI)I
      40: istore        9
      42: iconst_0
      43: istore        13
      45: iload         13
      47: bipush        8
      49: if_icmpge     234
      52: aload_0
      53: iload         6
      55: aload_1
      56: iload         12
      58: iinc          12, 1
      61: iaload
      62: invokespecial #114                // Method mul:(II)I
      65: istore        6
      67: iload         7
      69: aload_1
      70: iload         12
      72: iinc          12, 1
      75: iaload
      76: iadd
      77: istore        7
      79: iload         7
      81: ldc           #2                  // int 65535
      83: iand
      84: istore        7
      86: iload         8
      88: aload_1
      89: iload         12
      91: iinc          12, 1
      94: iaload
      95: iadd
      96: istore        8
      98: iload         8
     100: ldc           #2                  // int 65535
     102: iand
     103: istore        8
     105: aload_0
     106: iload         9
     108: aload_1
     109: iload         12
     111: iinc          12, 1
     114: iaload
     115: invokespecial #114                // Method mul:(II)I
     118: istore        9
     120: iload         7
     122: istore        10
     124: iload         8
     126: istore        11
     128: iload         8
     130: iload         6
     132: ixor
     133: istore        8
     135: iload         7
     137: iload         9
     139: ixor
     140: istore        7
     142: aload_0
     143: iload         8
     145: aload_1
     146: iload         12
     148: iinc          12, 1
     151: iaload
     152: invokespecial #114                // Method mul:(II)I
     155: istore        8
     157: iload         7
     159: iload         8
     161: iadd
     162: istore        7
     164: iload         7
     166: ldc           #2                  // int 65535
     168: iand
     169: istore        7
     171: aload_0
     172: iload         7
     174: aload_1
     175: iload         12
     177: iinc          12, 1
     180: iaload
     181: invokespecial #114                // Method mul:(II)I
     184: istore        7
     186: iload         8
     188: iload         7
     190: iadd
     191: istore        8
     193: iload         8
     195: ldc           #2                  // int 65535
     197: iand
     198: istore        8
     200: iload         6
     202: iload         7
     204: ixor
     205: istore        6
     207: iload         9
     209: iload         8
     211: ixor
     212: istore        9
     214: iload         7
     216: iload         11
     218: ixor
     219: istore        7
     221: iload         8
     223: iload         10
     225: ixor
     226: istore        8
     228: iinc          13, 1
     231: goto          45
     234: aload_0
     235: aload_0
     236: iload         6
     238: aload_1
     239: iload         12
     241: iinc          12, 1
     244: iaload
     245: invokespecial #114                // Method mul:(II)I
     248: aload         4
     250: iload         5
     252: invokespecial #115                // Method wordToBytes:(I[BI)V
     255: aload_0
     256: iload         8
     258: aload_1
     259: iload         12
     261: iinc          12, 1
     264: iaload
     265: iadd
     266: aload         4
     268: iload         5
     270: iconst_2
     271: iadd
     272: invokespecial #115                // Method wordToBytes:(I[BI)V
     275: aload_0
     276: iload         7
     278: aload_1
     279: iload         12
     281: iinc          12, 1
     284: iaload
     285: iadd
     286: aload         4
     288: iload         5
     290: iconst_4
     291: iadd
     292: invokespecial #115                // Method wordToBytes:(I[BI)V
     295: aload_0
     296: aload_0
     297: iload         9
     299: aload_1
     300: iload         12
     302: iaload
     303: invokespecial #114                // Method mul:(II)I
     306: aload         4
     308: iload         5
     310: bipush        6
     312: iadd
     313: invokespecial #115                // Method wordToBytes:(I[BI)V
     316: return

  private int[] expandKey(byte[]);
    Code:
       0: bipush        52
       2: newarray       int
       4: astore_2
       5: aload_1
       6: arraylength
       7: bipush        16
       9: if_icmpge     32
      12: bipush        16
      14: newarray       byte
      16: astore_3
      17: aload_1
      18: iconst_0
      19: aload_3
      20: aload_3
      21: arraylength
      22: aload_1
      23: arraylength
      24: isub
      25: aload_1
      26: arraylength
      27: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      30: aload_3
      31: astore_1
      32: iconst_0
      33: istore_3
      34: iload_3
      35: bipush        8
      37: if_icmpge     57
      40: aload_2
      41: iload_3
      42: aload_0
      43: aload_1
      44: iload_3
      45: iconst_2
      46: imul
      47: invokespecial #118                // Method bytesToWord:([BI)I
      50: iastore
      51: iinc          3, 1
      54: goto          34
      57: bipush        8
      59: istore_3
      60: iload_3
      61: bipush        52
      63: if_icmpge     180
      66: iload_3
      67: bipush        7
      69: iand
      70: bipush        6
      72: if_icmpge     106
      75: aload_2
      76: iload_3
      77: aload_2
      78: iload_3
      79: bipush        7
      81: isub
      82: iaload
      83: bipush        127
      85: iand
      86: bipush        9
      88: ishl
      89: aload_2
      90: iload_3
      91: bipush        6
      93: isub
      94: iaload
      95: bipush        7
      97: ishr
      98: ior
      99: ldc           #2                  // int 65535
     101: iand
     102: iastore
     103: goto          174
     106: iload_3
     107: bipush        7
     109: iand
     110: bipush        6
     112: if_icmpne     146
     115: aload_2
     116: iload_3
     117: aload_2
     118: iload_3
     119: bipush        7
     121: isub
     122: iaload
     123: bipush        127
     125: iand
     126: bipush        9
     128: ishl
     129: aload_2
     130: iload_3
     131: bipush        14
     133: isub
     134: iaload
     135: bipush        7
     137: ishr
     138: ior
     139: ldc           #2                  // int 65535
     141: iand
     142: iastore
     143: goto          174
     146: aload_2
     147: iload_3
     148: aload_2
     149: iload_3
     150: bipush        15
     152: isub
     153: iaload
     154: bipush        127
     156: iand
     157: bipush        9
     159: ishl
     160: aload_2
     161: iload_3
     162: bipush        14
     164: isub
     165: iaload
     166: bipush        7
     168: ishr
     169: ior
     170: ldc           #2                  // int 65535
     172: iand
     173: iastore
     174: iinc          3, 1
     177: goto          60
     180: aload_2
     181: areturn

  private int mulInv(int);
    Code:
       0: iload_1
       1: iconst_2
       2: if_icmpge     7
       5: iload_1
       6: ireturn
       7: iconst_1
       8: istore_2
       9: ldc           #3                  // int 65537
      11: iload_1
      12: idiv
      13: istore_3
      14: ldc           #3                  // int 65537
      16: iload_1
      17: irem
      18: istore        5
      20: iload         5
      22: iconst_1
      23: if_icmpeq     79
      26: iload_1
      27: iload         5
      29: idiv
      30: istore        4
      32: iload_1
      33: iload         5
      35: irem
      36: istore_1
      37: iload_2
      38: iload_3
      39: iload         4
      41: imul
      42: iadd
      43: ldc           #2                  // int 65535
      45: iand
      46: istore_2
      47: iload_1
      48: iconst_1
      49: if_icmpne     54
      52: iload_2
      53: ireturn
      54: iload         5
      56: iload_1
      57: idiv
      58: istore        4
      60: iload         5
      62: iload_1
      63: irem
      64: istore        5
      66: iload_3
      67: iload_2
      68: iload         4
      70: imul
      71: iadd
      72: ldc           #2                  // int 65535
      74: iand
      75: istore_3
      76: goto          20
      79: iconst_1
      80: iload_3
      81: isub
      82: ldc           #2                  // int 65535
      84: iand
      85: ireturn

  int addInv(int);
    Code:
       0: iconst_0
       1: iload_1
       2: isub
       3: ldc           #2                  // int 65535
       5: iand
       6: ireturn

  private int[] invertKey(int[]);
    Code:
       0: bipush        52
       2: istore        6
       4: bipush        52
       6: newarray       int
       8: astore        7
      10: iconst_0
      11: istore        8
      13: aload_0
      14: aload_1
      15: iload         8
      17: iinc          8, 1
      20: iaload
      21: invokespecial #113                // Method mulInv:(I)I
      24: istore_2
      25: aload_0
      26: aload_1
      27: iload         8
      29: iinc          8, 1
      32: iaload
      33: invokevirtual #112                // Method addInv:(I)I
      36: istore_3
      37: aload_0
      38: aload_1
      39: iload         8
      41: iinc          8, 1
      44: iaload
      45: invokevirtual #112                // Method addInv:(I)I
      48: istore        4
      50: aload_0
      51: aload_1
      52: iload         8
      54: iinc          8, 1
      57: iaload
      58: invokespecial #113                // Method mulInv:(I)I
      61: istore        5
      63: aload         7
      65: iinc          6, -1
      68: iload         6
      70: iload         5
      72: iastore
      73: aload         7
      75: iinc          6, -1
      78: iload         6
      80: iload         4
      82: iastore
      83: aload         7
      85: iinc          6, -1
      88: iload         6
      90: iload_3
      91: iastore
      92: aload         7
      94: iinc          6, -1
      97: iload         6
      99: iload_2
     100: iastore
     101: iconst_1
     102: istore        9
     104: iload         9
     106: bipush        8
     108: if_icmpge     239
     111: aload_1
     112: iload         8
     114: iinc          8, 1
     117: iaload
     118: istore_2
     119: aload_1
     120: iload         8
     122: iinc          8, 1
     125: iaload
     126: istore_3
     127: aload         7
     129: iinc          6, -1
     132: iload         6
     134: iload_3
     135: iastore
     136: aload         7
     138: iinc          6, -1
     141: iload         6
     143: iload_2
     144: iastore
     145: aload_0
     146: aload_1
     147: iload         8
     149: iinc          8, 1
     152: iaload
     153: invokespecial #113                // Method mulInv:(I)I
     156: istore_2
     157: aload_0
     158: aload_1
     159: iload         8
     161: iinc          8, 1
     164: iaload
     165: invokevirtual #112                // Method addInv:(I)I
     168: istore_3
     169: aload_0
     170: aload_1
     171: iload         8
     173: iinc          8, 1
     176: iaload
     177: invokevirtual #112                // Method addInv:(I)I
     180: istore        4
     182: aload_0
     183: aload_1
     184: iload         8
     186: iinc          8, 1
     189: iaload
     190: invokespecial #113                // Method mulInv:(I)I
     193: istore        5
     195: aload         7
     197: iinc          6, -1
     200: iload         6
     202: iload         5
     204: iastore
     205: aload         7
     207: iinc          6, -1
     210: iload         6
     212: iload_3
     213: iastore
     214: aload         7
     216: iinc          6, -1
     219: iload         6
     221: iload         4
     223: iastore
     224: aload         7
     226: iinc          6, -1
     229: iload         6
     231: iload_2
     232: iastore
     233: iinc          9, 1
     236: goto          104
     239: aload_1
     240: iload         8
     242: iinc          8, 1
     245: iaload
     246: istore_2
     247: aload_1
     248: iload         8
     250: iinc          8, 1
     253: iaload
     254: istore_3
     255: aload         7
     257: iinc          6, -1
     260: iload         6
     262: iload_3
     263: iastore
     264: aload         7
     266: iinc          6, -1
     269: iload         6
     271: iload_2
     272: iastore
     273: aload_0
     274: aload_1
     275: iload         8
     277: iinc          8, 1
     280: iaload
     281: invokespecial #113                // Method mulInv:(I)I
     284: istore_2
     285: aload_0
     286: aload_1
     287: iload         8
     289: iinc          8, 1
     292: iaload
     293: invokevirtual #112                // Method addInv:(I)I
     296: istore_3
     297: aload_0
     298: aload_1
     299: iload         8
     301: iinc          8, 1
     304: iaload
     305: invokevirtual #112                // Method addInv:(I)I
     308: istore        4
     310: aload_0
     311: aload_1
     312: iload         8
     314: iaload
     315: invokespecial #113                // Method mulInv:(I)I
     318: istore        5
     320: aload         7
     322: iinc          6, -1
     325: iload         6
     327: iload         5
     329: iastore
     330: aload         7
     332: iinc          6, -1
     335: iload         6
     337: iload         4
     339: iastore
     340: aload         7
     342: iinc          6, -1
     345: iload         6
     347: iload_3
     348: iastore
     349: aload         7
     351: iinc          6, -1
     354: iload         6
     356: iload_2
     357: iastore
     358: aload         7
     360: areturn

  private int[] generateWorkingKey(boolean, byte[]);
    Code:
       0: iload_1
       1: ifeq          10
       4: aload_0
       5: aload_2
       6: invokespecial #117                // Method expandKey:([B)[I
       9: areturn
      10: aload_0
      11: aload_0
      12: aload_2
      13: invokespecial #117                // Method expandKey:([B)[I
      16: invokespecial #119                // Method invertKey:([I)[I
      19: areturn
}
