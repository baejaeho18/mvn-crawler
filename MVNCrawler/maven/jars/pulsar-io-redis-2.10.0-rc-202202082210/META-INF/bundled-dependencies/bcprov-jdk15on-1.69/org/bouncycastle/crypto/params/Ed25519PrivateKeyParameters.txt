public final class org.bouncycastle.crypto.params.Ed25519PrivateKeyParameters extends org.bouncycastle.crypto.params.AsymmetricKeyParameter {
  public static final int KEY_SIZE;

  public static final int SIGNATURE_SIZE;

  private final byte[] data;

  private org.bouncycastle.crypto.params.Ed25519PublicKeyParameters cachedPublicKey;

  public org.bouncycastle.crypto.params.Ed25519PrivateKeyParameters(java.security.SecureRandom);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #91                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: bipush        32
       8: newarray       byte
      10: putfield      #86                 // Field data:[B
      13: aload_1
      14: aload_0
      15: getfield      #86                 // Field data:[B
      18: invokestatic  #102                // Method org/bouncycastle/math/ec/rfc8032/Ed25519.generatePrivateKey:(Ljava/security/SecureRandom;[B)V
      21: return

  public org.bouncycastle.crypto.params.Ed25519PrivateKeyParameters(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #93                 // Method validate:([B)[B
       5: iconst_0
       6: invokespecial #94                 // Method "<init>":([BI)V
       9: return

  public org.bouncycastle.crypto.params.Ed25519PrivateKeyParameters(byte[], int);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #91                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: bipush        32
       8: newarray       byte
      10: putfield      #86                 // Field data:[B
      13: aload_1
      14: iload_2
      15: aload_0
      16: getfield      #86                 // Field data:[B
      19: iconst_0
      20: bipush        32
      22: invokestatic  #90                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: return

  public org.bouncycastle.crypto.params.Ed25519PrivateKeyParameters(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #91                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: bipush        32
       8: newarray       byte
      10: putfield      #86                 // Field data:[B
      13: bipush        32
      15: aload_1
      16: aload_0
      17: getfield      #86                 // Field data:[B
      20: invokestatic  #104                // Method org/bouncycastle/util/io/Streams.readFully:(Ljava/io/InputStream;[B)I
      23: if_icmpeq     36
      26: new           #50                 // class java/io/EOFException
      29: dup
      30: ldc           #2                  // String EOF encountered in middle of Ed25519 private key
      32: invokespecial #88                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  public void encode(byte[], int);
    Code:
       0: aload_0
       1: getfield      #86                 // Field data:[B
       4: iconst_0
       5: aload_1
       6: iload_2
       7: bipush        32
       9: invokestatic  #90                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      12: return

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: getfield      #86                 // Field data:[B
       4: invokestatic  #103                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public org.bouncycastle.crypto.params.Ed25519PublicKeyParameters generatePublicKey();
    Code:
       0: aload_0
       1: getfield      #86                 // Field data:[B
       4: dup
       5: astore_1
       6: monitorenter
       7: aconst_null
       8: aload_0
       9: getfield      #87                 // Field cachedPublicKey:Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;
      12: if_acmpne     43
      15: bipush        32
      17: newarray       byte
      19: astore_2
      20: aload_0
      21: getfield      #86                 // Field data:[B
      24: iconst_0
      25: aload_2
      26: iconst_0
      27: invokestatic  #98                 // Method org/bouncycastle/math/ec/rfc8032/Ed25519.generatePublicKey:([BI[BI)V
      30: aload_0
      31: new           #56                 // class org/bouncycastle/crypto/params/Ed25519PublicKeyParameters
      34: dup
      35: aload_2
      36: iconst_0
      37: invokespecial #96                 // Method org/bouncycastle/crypto/params/Ed25519PublicKeyParameters."<init>":([BI)V
      40: putfield      #87                 // Field cachedPublicKey:Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;
      43: aload_0
      44: getfield      #87                 // Field cachedPublicKey:Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;
      47: aload_1
      48: monitorexit
      49: areturn
      50: astore_3
      51: aload_1
      52: monitorexit
      53: aload_3
      54: athrow
    Exception table:
       from    to  target type
           7    49    50   any
          50    53    50   any

  public void sign(int, org.bouncycastle.crypto.params.Ed25519PublicKeyParameters, byte[], byte[], int, int, byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_3
       3: aload         4
       5: iload         5
       7: iload         6
       9: aload         7
      11: iload         8
      13: invokevirtual #92                 // Method sign:(I[B[BII[BI)V
      16: return

  public void sign(int, byte[], byte[], int, int, byte[], int);
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method generatePublicKey:()Lorg/bouncycastle/crypto/params/Ed25519PublicKeyParameters;
       4: astore        8
       6: bipush        32
       8: newarray       byte
      10: astore        9
      12: aload         8
      14: aload         9
      16: iconst_0
      17: invokevirtual #97                 // Method org/bouncycastle/crypto/params/Ed25519PublicKeyParameters.encode:([BI)V
      20: iload_1
      21: tableswitch   { // 0 to 2
                     0: 48
                     1: 86
                     2: 110
               default: 149
          }
      48: aconst_null
      49: aload_2
      50: if_acmpeq     63
      53: new           #52                 // class java/lang/IllegalArgumentException
      56: dup
      57: ldc           #4                  // String ctx
      59: invokespecial #89                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_0
      64: getfield      #86                 // Field data:[B
      67: iconst_0
      68: aload         9
      70: iconst_0
      71: aload_3
      72: iload         4
      74: iload         5
      76: aload         6
      78: iload         7
      80: invokestatic  #99                 // Method org/bouncycastle/math/ec/rfc8032/Ed25519.sign:([BI[BI[BII[BI)V
      83: goto          159
      86: aload_0
      87: getfield      #86                 // Field data:[B
      90: iconst_0
      91: aload         9
      93: iconst_0
      94: aload_2
      95: aload_3
      96: iload         4
      98: iload         5
     100: aload         6
     102: iload         7
     104: invokestatic  #100                // Method org/bouncycastle/math/ec/rfc8032/Ed25519.sign:([BI[BI[B[BII[BI)V
     107: goto          159
     110: bipush        64
     112: iload         5
     114: if_icmpeq     127
     117: new           #52                 // class java/lang/IllegalArgumentException
     120: dup
     121: ldc           #5                  // String msgLen
     123: invokespecial #89                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: aload_0
     128: getfield      #86                 // Field data:[B
     131: iconst_0
     132: aload         9
     134: iconst_0
     135: aload_2
     136: aload_3
     137: iload         4
     139: aload         6
     141: iload         7
     143: invokestatic  #101                // Method org/bouncycastle/math/ec/rfc8032/Ed25519.signPrehash:([BI[BI[B[BI[BI)V
     146: goto          159
     149: new           #52                 // class java/lang/IllegalArgumentException
     152: dup
     153: ldc           #3                  // String algorithm
     155: invokespecial #89                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: return

  private static byte[] validate(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: bipush        32
       4: if_icmpeq     17
       7: new           #52                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #1                  // String \'buf\' must have length 32
      13: invokespecial #89                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: areturn
}
