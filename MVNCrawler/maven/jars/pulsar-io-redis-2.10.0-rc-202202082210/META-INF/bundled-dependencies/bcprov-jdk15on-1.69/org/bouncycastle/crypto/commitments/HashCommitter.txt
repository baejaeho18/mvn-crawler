public class org.bouncycastle.crypto.commitments.HashCommitter implements org.bouncycastle.crypto.Committer {
  private final org.bouncycastle.crypto.Digest digest;

  private final int byteLength;

  private final java.security.SecureRandom random;

  public org.bouncycastle.crypto.commitments.HashCommitter(org.bouncycastle.crypto.ExtendedDigest, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #72                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #71                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       9: aload_0
      10: aload_1
      11: invokeinterface #83,  1           // InterfaceMethod org/bouncycastle/crypto/ExtendedDigest.getByteLength:()I
      16: putfield      #69                 // Field byteLength:I
      19: aload_0
      20: aload_2
      21: putfield      #70                 // Field random:Ljava/security/SecureRandom;
      24: return

  public org.bouncycastle.crypto.Commitment commit(byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: getfield      #69                 // Field byteLength:I
       6: iconst_2
       7: idiv
       8: if_icmple     21
      11: new           #43                 // class org/bouncycastle/crypto/DataLengthException
      14: dup
      15: ldc           #2                  // String Message to be committed to too large for digest.
      17: invokespecial #77                 // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #69                 // Field byteLength:I
      25: aload_1
      26: arraylength
      27: isub
      28: newarray       byte
      30: astore_2
      31: aload_0
      32: getfield      #70                 // Field random:Ljava/security/SecureRandom;
      35: aload_2
      36: invokevirtual #73                 // Method java/security/SecureRandom.nextBytes:([B)V
      39: new           #41                 // class org/bouncycastle/crypto/Commitment
      42: dup
      43: aload_2
      44: aload_0
      45: aload_2
      46: aload_1
      47: invokespecial #78                 // Method calculateCommitment:([B[B)[B
      50: invokespecial #76                 // Method org/bouncycastle/crypto/Commitment."<init>":([B[B)V
      53: areturn

  public boolean isRevealed(org.bouncycastle.crypto.Commitment, byte[]);
    Code:
       0: aload_2
       1: arraylength
       2: aload_1
       3: invokevirtual #75                 // Method org/bouncycastle/crypto/Commitment.getSecret:()[B
       6: arraylength
       7: iadd
       8: aload_0
       9: getfield      #69                 // Field byteLength:I
      12: if_icmpeq     25
      15: new           #43                 // class org/bouncycastle/crypto/DataLengthException
      18: dup
      19: ldc           #1                  // String Message and witness secret lengths do not match.
      21: invokespecial #77                 // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: aload_1
      27: invokevirtual #75                 // Method org/bouncycastle/crypto/Commitment.getSecret:()[B
      30: aload_2
      31: invokespecial #78                 // Method calculateCommitment:([B[B)[B
      34: astore_3
      35: aload_1
      36: invokevirtual #74                 // Method org/bouncycastle/crypto/Commitment.getCommitment:()[B
      39: aload_3
      40: invokestatic  #79                 // Method org/bouncycastle/util/Arrays.constantTimeAreEqual:([B[B)Z
      43: ireturn

  private byte[] calculateCommitment(byte[], byte[]);
    Code:
       0: aload_0
       1: getfield      #71                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: invokeinterface #80,  1           // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
       9: newarray       byte
      11: astore_3
      12: aload_0
      13: getfield      #71                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      16: aload_1
      17: iconst_0
      18: aload_1
      19: arraylength
      20: invokeinterface #82,  4           // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      25: aload_0
      26: getfield      #71                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      29: aload_2
      30: iconst_0
      31: aload_2
      32: arraylength
      33: invokeinterface #82,  4           // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      38: aload_0
      39: getfield      #71                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      42: aload_3
      43: iconst_0
      44: invokeinterface #81,  3           // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      49: pop
      50: aload_3
      51: areturn
}
