Compiled from "Context.java"
public final class io.grpc.Context$CancellableContext extends io.grpc.Context implements java.io.Closeable {
  private final io.grpc.Deadline deadline;

  private final io.grpc.Context uncancellableSurrogate;

  private java.util.ArrayList<io.grpc.Context$ExecutableListener> listeners;

  private io.grpc.Context$CancellationListener parentListener;

  private java.lang.Throwable cancellationCause;

  private java.util.concurrent.ScheduledFuture<?> pendingDeadline;

  private boolean cancelled;

  private io.grpc.Context$CancellableContext(io.grpc.Context);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: getfield      #6                  // Field io/grpc/Context.keyValueEntries:Lio/grpc/PersistentHashArrayMappedTrie$Node;
       6: aconst_null
       7: invokespecial #7                  // Method io/grpc/Context."<init>":(Lio/grpc/Context;Lio/grpc/PersistentHashArrayMappedTrie$Node;Lio/grpc/Context$1;)V
      10: aload_0
      11: aload_1
      12: invokevirtual #8                  // Method io/grpc/Context.getDeadline:()Lio/grpc/Deadline;
      15: putfield      #9                  // Field deadline:Lio/grpc/Deadline;
      18: aload_0
      19: new           #10                 // class io/grpc/Context
      22: dup
      23: aload_0
      24: aload_0
      25: getfield      #11                 // Field keyValueEntries:Lio/grpc/PersistentHashArrayMappedTrie$Node;
      28: aconst_null
      29: invokespecial #7                  // Method io/grpc/Context."<init>":(Lio/grpc/Context;Lio/grpc/PersistentHashArrayMappedTrie$Node;Lio/grpc/Context$1;)V
      32: putfield      #12                 // Field uncancellableSurrogate:Lio/grpc/Context;
      35: return

  private io.grpc.Context$CancellableContext(io.grpc.Context, io.grpc.Deadline);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: getfield      #6                  // Field io/grpc/Context.keyValueEntries:Lio/grpc/PersistentHashArrayMappedTrie$Node;
       6: aconst_null
       7: invokespecial #7                  // Method io/grpc/Context."<init>":(Lio/grpc/Context;Lio/grpc/PersistentHashArrayMappedTrie$Node;Lio/grpc/Context$1;)V
      10: aload_0
      11: aload_2
      12: putfield      #9                  // Field deadline:Lio/grpc/Deadline;
      15: aload_0
      16: new           #10                 // class io/grpc/Context
      19: dup
      20: aload_0
      21: aload_0
      22: getfield      #11                 // Field keyValueEntries:Lio/grpc/PersistentHashArrayMappedTrie$Node;
      25: aconst_null
      26: invokespecial #7                  // Method io/grpc/Context."<init>":(Lio/grpc/Context;Lio/grpc/PersistentHashArrayMappedTrie$Node;Lio/grpc/Context$1;)V
      29: putfield      #12                 // Field uncancellableSurrogate:Lio/grpc/Context;
      32: return

  private void setUpDeadlineCancellation(io.grpc.Deadline, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method io/grpc/Deadline.isExpired:()Z
       4: ifne          43
       7: aload_0
       8: dup
       9: astore_3
      10: monitorenter
      11: aload_0
      12: aload_1
      13: new           #14                 // class io/grpc/Context$CancellableContext$1CancelOnExpiration
      16: dup
      17: aload_0
      18: invokespecial #15                 // Method io/grpc/Context$CancellableContext$1CancelOnExpiration."<init>":(Lio/grpc/Context$CancellableContext;)V
      21: aload_2
      22: invokevirtual #16                 // Method io/grpc/Deadline.runOnExpiration:(Ljava/lang/Runnable;Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/ScheduledFuture;
      25: putfield      #17                 // Field pendingDeadline:Ljava/util/concurrent/ScheduledFuture;
      28: aload_3
      29: monitorexit
      30: goto          40
      33: astore        4
      35: aload_3
      36: monitorexit
      37: aload         4
      39: athrow
      40: goto          57
      43: aload_0
      44: new           #18                 // class java/util/concurrent/TimeoutException
      47: dup
      48: ldc           #19                 // String context timed out
      50: invokespecial #20                 // Method java/util/concurrent/TimeoutException."<init>":(Ljava/lang/String;)V
      53: invokevirtual #21                 // Method cancel:(Ljava/lang/Throwable;)Z
      56: pop
      57: return
    Exception table:
       from    to  target type
          11    30    33   any
          33    37    33   any

  public io.grpc.Context attach();
    Code:
       0: aload_0
       1: getfield      #12                 // Field uncancellableSurrogate:Lio/grpc/Context;
       4: invokevirtual #22                 // Method io/grpc/Context.attach:()Lio/grpc/Context;
       7: areturn

  public void detach(io.grpc.Context);
    Code:
       0: aload_0
       1: getfield      #12                 // Field uncancellableSurrogate:Lio/grpc/Context;
       4: aload_1
       5: invokevirtual #23                 // Method io/grpc/Context.detach:(Lio/grpc/Context;)V
       8: return

  public void addListener(io.grpc.Context$CancellationListener, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: ldc           #24                 // String cancellationListener
       3: invokestatic  #25                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #26                 // String executor
      10: invokestatic  #25                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: new           #27                 // class io/grpc/Context$ExecutableListener
      18: dup
      19: aload_2
      20: aload_1
      21: aload_0
      22: invokespecial #28                 // Method io/grpc/Context$ExecutableListener."<init>":(Ljava/util/concurrent/Executor;Lio/grpc/Context$CancellationListener;Lio/grpc/Context;)V
      25: invokespecial #2                  // Method addListenerInternal:(Lio/grpc/Context$ExecutableListener;)V
      28: return

  private void addListenerInternal(io.grpc.Context$ExecutableListener);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: invokevirtual #29                 // Method isCancelled:()Z
       8: ifeq          18
      11: aload_1
      12: invokevirtual #30                 // Method io/grpc/Context$ExecutableListener.deliver:()V
      15: goto          98
      18: aload_0
      19: getfield      #31                 // Field listeners:Ljava/util/ArrayList;
      22: ifnonnull     89
      25: aload_0
      26: new           #32                 // class java/util/ArrayList
      29: dup
      30: invokespecial #33                 // Method java/util/ArrayList."<init>":()V
      33: putfield      #31                 // Field listeners:Ljava/util/ArrayList;
      36: aload_0
      37: getfield      #31                 // Field listeners:Ljava/util/ArrayList;
      40: aload_1
      41: invokevirtual #34                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload_0
      46: getfield      #35                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      49: ifnull        98
      52: aload_0
      53: new           #36                 // class io/grpc/Context$CancellableContext$1
      56: dup
      57: aload_0
      58: invokespecial #37                 // Method io/grpc/Context$CancellableContext$1."<init>":(Lio/grpc/Context$CancellableContext;)V
      61: putfield      #38                 // Field parentListener:Lio/grpc/Context$CancellationListener;
      64: aload_0
      65: getfield      #35                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      68: new           #27                 // class io/grpc/Context$ExecutableListener
      71: dup
      72: getstatic     #39                 // Field io/grpc/Context$DirectExecutor.INSTANCE:Lio/grpc/Context$DirectExecutor;
      75: aload_0
      76: getfield      #38                 // Field parentListener:Lio/grpc/Context$CancellationListener;
      79: aload_0
      80: invokespecial #28                 // Method io/grpc/Context$ExecutableListener."<init>":(Ljava/util/concurrent/Executor;Lio/grpc/Context$CancellationListener;Lio/grpc/Context;)V
      83: invokespecial #2                  // Method addListenerInternal:(Lio/grpc/Context$ExecutableListener;)V
      86: goto          98
      89: aload_0
      90: getfield      #31                 // Field listeners:Ljava/util/ArrayList;
      93: aload_1
      94: invokevirtual #34                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      97: pop
      98: aload_2
      99: monitorexit
     100: goto          108
     103: astore_3
     104: aload_2
     105: monitorexit
     106: aload_3
     107: athrow
     108: return
    Exception table:
       from    to  target type
           4   100   103   any
         103   106   103   any

  public void removeListener(io.grpc.Context$CancellationListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokespecial #1                  // Method removeListenerInternal:(Lio/grpc/Context$CancellationListener;Lio/grpc/Context;)V
       6: return

  private void removeListenerInternal(io.grpc.Context$CancellationListener, io.grpc.Context);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #31                 // Field listeners:Ljava/util/ArrayList;
       8: ifnull        116
      11: aload_0
      12: getfield      #31                 // Field listeners:Ljava/util/ArrayList;
      15: invokevirtual #40                 // Method java/util/ArrayList.size:()I
      18: iconst_1
      19: isub
      20: istore        4
      22: iload         4
      24: iflt          78
      27: aload_0
      28: getfield      #31                 // Field listeners:Ljava/util/ArrayList;
      31: iload         4
      33: invokevirtual #41                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      36: checkcast     #27                 // class io/grpc/Context$ExecutableListener
      39: astore        5
      41: aload         5
      43: getfield      #42                 // Field io/grpc/Context$ExecutableListener.listener:Lio/grpc/Context$CancellationListener;
      46: aload_1
      47: if_acmpne     72
      50: aload         5
      52: invokestatic  #43                 // Method io/grpc/Context$ExecutableListener.access$600:(Lio/grpc/Context$ExecutableListener;)Lio/grpc/Context;
      55: aload_2
      56: if_acmpne     72
      59: aload_0
      60: getfield      #31                 // Field listeners:Ljava/util/ArrayList;
      63: iload         4
      65: invokevirtual #44                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
      68: pop
      69: goto          78
      72: iinc          4, -1
      75: goto          22
      78: aload_0
      79: getfield      #31                 // Field listeners:Ljava/util/ArrayList;
      82: invokevirtual #45                 // Method java/util/ArrayList.isEmpty:()Z
      85: ifeq          116
      88: aload_0
      89: getfield      #35                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      92: ifnull        106
      95: aload_0
      96: getfield      #35                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      99: aload_0
     100: getfield      #38                 // Field parentListener:Lio/grpc/Context$CancellationListener;
     103: invokevirtual #46                 // Method removeListener:(Lio/grpc/Context$CancellationListener;)V
     106: aload_0
     107: aconst_null
     108: putfield      #38                 // Field parentListener:Lio/grpc/Context$CancellationListener;
     111: aload_0
     112: aconst_null
     113: putfield      #31                 // Field listeners:Ljava/util/ArrayList;
     116: aload_3
     117: monitorexit
     118: goto          128
     121: astore        6
     123: aload_3
     124: monitorexit
     125: aload         6
     127: athrow
     128: return
    Exception table:
       from    to  target type
           4   118   121   any
         121   125   121   any

  public boolean isCurrent();
    Code:
       0: aload_0
       1: getfield      #12                 // Field uncancellableSurrogate:Lio/grpc/Context;
       4: invokevirtual #47                 // Method io/grpc/Context.isCurrent:()Z
       7: ireturn

  public boolean cancel(java.lang.Throwable);
    Code:
       0: iconst_0
       1: istore_2
       2: aconst_null
       3: astore_3
       4: aload_0
       5: dup
       6: astore        4
       8: monitorenter
       9: aload_0
      10: getfield      #48                 // Field cancelled:Z
      13: ifne          45
      16: aload_0
      17: iconst_1
      18: putfield      #48                 // Field cancelled:Z
      21: aload_0
      22: getfield      #17                 // Field pendingDeadline:Ljava/util/concurrent/ScheduledFuture;
      25: ifnull        38
      28: aload_0
      29: getfield      #17                 // Field pendingDeadline:Ljava/util/concurrent/ScheduledFuture;
      32: astore_3
      33: aload_0
      34: aconst_null
      35: putfield      #17                 // Field pendingDeadline:Ljava/util/concurrent/ScheduledFuture;
      38: aload_0
      39: aload_1
      40: putfield      #49                 // Field cancellationCause:Ljava/lang/Throwable;
      43: iconst_1
      44: istore_2
      45: aload         4
      47: monitorexit
      48: goto          59
      51: astore        5
      53: aload         4
      55: monitorexit
      56: aload         5
      58: athrow
      59: aload_3
      60: ifnull        71
      63: aload_3
      64: iconst_0
      65: invokeinterface #50,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      70: pop
      71: iload_2
      72: ifeq          79
      75: aload_0
      76: invokespecial #51                 // Method notifyAndClearListeners:()V
      79: iload_2
      80: ireturn
    Exception table:
       from    to  target type
           9    48    51   any
          51    56    51   any

  private void notifyAndClearListeners();
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #31                 // Field listeners:Ljava/util/ArrayList;
       8: ifnonnull     14
      11: aload_3
      12: monitorexit
      13: return
      14: aload_0
      15: getfield      #38                 // Field parentListener:Lio/grpc/Context$CancellationListener;
      18: astore_2
      19: aload_0
      20: aconst_null
      21: putfield      #38                 // Field parentListener:Lio/grpc/Context$CancellationListener;
      24: aload_0
      25: getfield      #31                 // Field listeners:Ljava/util/ArrayList;
      28: astore_1
      29: aload_0
      30: aconst_null
      31: putfield      #31                 // Field listeners:Ljava/util/ArrayList;
      34: aload_3
      35: monitorexit
      36: goto          46
      39: astore        4
      41: aload_3
      42: monitorexit
      43: aload         4
      45: athrow
      46: aload_1
      47: invokevirtual #52                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      50: astore_3
      51: aload_3
      52: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          88
      60: aload_3
      61: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #27                 // class io/grpc/Context$ExecutableListener
      69: astore        4
      71: aload         4
      73: invokestatic  #43                 // Method io/grpc/Context$ExecutableListener.access$600:(Lio/grpc/Context$ExecutableListener;)Lio/grpc/Context;
      76: aload_0
      77: if_acmpne     85
      80: aload         4
      82: invokevirtual #30                 // Method io/grpc/Context$ExecutableListener.deliver:()V
      85: goto          51
      88: aload_1
      89: invokevirtual #52                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      92: astore_3
      93: aload_3
      94: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      99: ifeq          130
     102: aload_3
     103: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: checkcast     #27                 // class io/grpc/Context$ExecutableListener
     111: astore        4
     113: aload         4
     115: invokestatic  #43                 // Method io/grpc/Context$ExecutableListener.access$600:(Lio/grpc/Context$ExecutableListener;)Lio/grpc/Context;
     118: aload_0
     119: if_acmpeq     127
     122: aload         4
     124: invokevirtual #30                 // Method io/grpc/Context$ExecutableListener.deliver:()V
     127: goto          93
     130: aload_0
     131: getfield      #35                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
     134: ifnull        145
     137: aload_0
     138: getfield      #35                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
     141: aload_2
     142: invokevirtual #46                 // Method removeListener:(Lio/grpc/Context$CancellationListener;)V
     145: return
    Exception table:
       from    to  target type
           4    13    39   any
          14    36    39   any
          39    43    39   any

  int listenerCount();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #31                 // Field listeners:Ljava/util/ArrayList;
       8: ifnonnull     15
      11: iconst_0
      12: goto          22
      15: aload_0
      16: getfield      #31                 // Field listeners:Ljava/util/ArrayList;
      19: invokevirtual #40                 // Method java/util/ArrayList.size:()I
      22: aload_1
      23: monitorexit
      24: ireturn
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           4    24    25   any
          25    28    25   any

  public void detachAndCancel(io.grpc.Context, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method detach:(Lio/grpc/Context;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #21                 // Method cancel:(Ljava/lang/Throwable;)Z
      10: pop
      11: goto          23
      14: astore_3
      15: aload_0
      16: aload_2
      17: invokevirtual #21                 // Method cancel:(Ljava/lang/Throwable;)Z
      20: pop
      21: aload_3
      22: athrow
      23: return
    Exception table:
       from    to  target type
           0     5    14   any

  public boolean isCancelled();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #48                 // Field cancelled:Z
       8: ifeq          15
      11: iconst_1
      12: aload_1
      13: monitorexit
      14: ireturn
      15: aload_1
      16: monitorexit
      17: goto          25
      20: astore_2
      21: aload_1
      22: monitorexit
      23: aload_2
      24: athrow
      25: aload_0
      26: invokespecial #56                 // Method io/grpc/Context.isCancelled:()Z
      29: ifeq          43
      32: aload_0
      33: aload_0
      34: invokespecial #57                 // Method io/grpc/Context.cancellationCause:()Ljava/lang/Throwable;
      37: invokevirtual #21                 // Method cancel:(Ljava/lang/Throwable;)Z
      40: pop
      41: iconst_1
      42: ireturn
      43: iconst_0
      44: ireturn
    Exception table:
       from    to  target type
           4    14    20   any
          15    17    20   any
          20    23    20   any

  public java.lang.Throwable cancellationCause();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method isCancelled:()Z
       4: ifeq          12
       7: aload_0
       8: getfield      #49                 // Field cancellationCause:Ljava/lang/Throwable;
      11: areturn
      12: aconst_null
      13: areturn

  public io.grpc.Deadline getDeadline();
    Code:
       0: aload_0
       1: getfield      #9                  // Field deadline:Lio/grpc/Deadline;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #21                 // Method cancel:(Ljava/lang/Throwable;)Z
       5: pop
       6: return

  io.grpc.Context$CancellableContext(io.grpc.Context, io.grpc.Context$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method "<init>":(Lio/grpc/Context;)V
       5: return

  io.grpc.Context$CancellableContext(io.grpc.Context, io.grpc.Deadline, io.grpc.Context$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method "<init>":(Lio/grpc/Context;Lio/grpc/Deadline;)V
       6: return

  static void access$200(io.grpc.Context$CancellableContext, io.grpc.Deadline, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method setUpDeadlineCancellation:(Lio/grpc/Deadline;Ljava/util/concurrent/ScheduledExecutorService;)V
       6: return

  static void access$300(io.grpc.Context$CancellableContext, io.grpc.Context$ExecutableListener);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method addListenerInternal:(Lio/grpc/Context$ExecutableListener;)V
       5: return

  static void access$400(io.grpc.Context$CancellableContext, io.grpc.Context$CancellationListener, io.grpc.Context);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method removeListenerInternal:(Lio/grpc/Context$CancellationListener;Lio/grpc/Context;)V
       6: return
}
