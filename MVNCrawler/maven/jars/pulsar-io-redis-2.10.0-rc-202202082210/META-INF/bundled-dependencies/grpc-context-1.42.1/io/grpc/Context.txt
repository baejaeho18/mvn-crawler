Compiled from "Context.java"
public class io.grpc.Context {
  static final java.util.logging.Logger log;

  static final int CONTEXT_DEPTH_WARN_THRESH;

  public static final io.grpc.Context ROOT;

  final io.grpc.Context$CancellableContext cancellableAncestor;

  final io.grpc.PersistentHashArrayMappedTrie$Node<io.grpc.Context$Key<?>, java.lang.Object> keyValueEntries;

  final int generation;

  static io.grpc.Context$Storage storage();
    Code:
       0: getstatic     #2                  // Field io/grpc/Context$LazyStorage.storage:Lio/grpc/Context$Storage;
       3: areturn

  public static <T> io.grpc.Context$Key<T> key(java.lang.String);
    Code:
       0: new           #3                  // class io/grpc/Context$Key
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method io/grpc/Context$Key."<init>":(Ljava/lang/String;)V
       8: areturn

  public static <T> io.grpc.Context$Key<T> keyWithDefault(java.lang.String, T);
    Code:
       0: new           #3                  // class io/grpc/Context$Key
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #5                  // Method io/grpc/Context$Key."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
       9: areturn

  public static io.grpc.Context current();
    Code:
       0: invokestatic  #6                  // Method storage:()Lio/grpc/Context$Storage;
       3: invokevirtual #7                  // Method io/grpc/Context$Storage.current:()Lio/grpc/Context;
       6: astore_0
       7: aload_0
       8: ifnonnull     15
      11: getstatic     #8                  // Field ROOT:Lio/grpc/Context;
      14: areturn
      15: aload_0
      16: areturn

  private io.grpc.Context(io.grpc.PersistentHashArrayMappedTrie$Node<io.grpc.Context$Key<?>, java.lang.Object>, int);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
       9: aload_0
      10: aload_1
      11: putfield      #11                 // Field keyValueEntries:Lio/grpc/PersistentHashArrayMappedTrie$Node;
      14: aload_0
      15: iload_2
      16: putfield      #12                 // Field generation:I
      19: iload_2
      20: invokestatic  #13                 // Method validateGeneration:(I)V
      23: return

  private io.grpc.Context(io.grpc.Context, io.grpc.PersistentHashArrayMappedTrie$Node<io.grpc.Context$Key<?>, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #14                 // Method cancellableAncestor:(Lio/grpc/Context;)Lio/grpc/Context$CancellableContext;
       9: putfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      12: aload_0
      13: aload_2
      14: putfield      #11                 // Field keyValueEntries:Lio/grpc/PersistentHashArrayMappedTrie$Node;
      17: aload_0
      18: aload_1
      19: getfield      #12                 // Field generation:I
      22: iconst_1
      23: iadd
      24: putfield      #12                 // Field generation:I
      27: aload_0
      28: getfield      #12                 // Field generation:I
      31: invokestatic  #13                 // Method validateGeneration:(I)V
      34: return

  private io.grpc.Context();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
       9: aload_0
      10: aconst_null
      11: putfield      #11                 // Field keyValueEntries:Lio/grpc/PersistentHashArrayMappedTrie$Node;
      14: aload_0
      15: iconst_0
      16: putfield      #12                 // Field generation:I
      19: aload_0
      20: getfield      #12                 // Field generation:I
      23: invokestatic  #13                 // Method validateGeneration:(I)V
      26: return

  public io.grpc.Context$CancellableContext withCancellation();
    Code:
       0: new           #15                 // class io/grpc/Context$CancellableContext
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #16                 // Method io/grpc/Context$CancellableContext."<init>":(Lio/grpc/Context;Lio/grpc/Context$1;)V
       9: areturn

  public io.grpc.Context$CancellableContext withDeadlineAfter(long, java.util.concurrent.TimeUnit, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokestatic  #17                 // Method io/grpc/Deadline.after:(JLjava/util/concurrent/TimeUnit;)Lio/grpc/Deadline;
       6: aload         4
       8: invokevirtual #18                 // Method withDeadline:(Lio/grpc/Deadline;Ljava/util/concurrent/ScheduledExecutorService;)Lio/grpc/Context$CancellableContext;
      11: areturn

  public io.grpc.Context$CancellableContext withDeadline(io.grpc.Deadline, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_1
       1: ldc           #19                 // String deadline
       3: invokestatic  #20                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #21                 // String scheduler
      10: invokestatic  #20                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: invokevirtual #22                 // Method getDeadline:()Lio/grpc/Deadline;
      18: astore_3
      19: iconst_1
      20: istore        4
      22: aload_3
      23: ifnull        39
      26: aload_3
      27: aload_1
      28: invokevirtual #23                 // Method io/grpc/Deadline.compareTo:(Lio/grpc/Deadline;)I
      31: ifgt          39
      34: aload_3
      35: astore_1
      36: iconst_0
      37: istore        4
      39: new           #15                 // class io/grpc/Context$CancellableContext
      42: dup
      43: aload_0
      44: aload_1
      45: aconst_null
      46: invokespecial #24                 // Method io/grpc/Context$CancellableContext."<init>":(Lio/grpc/Context;Lio/grpc/Deadline;Lio/grpc/Context$1;)V
      49: astore        5
      51: iload         4
      53: ifeq          63
      56: aload         5
      58: aload_1
      59: aload_2
      60: invokestatic  #25                 // Method io/grpc/Context$CancellableContext.access$200:(Lio/grpc/Context$CancellableContext;Lio/grpc/Deadline;Ljava/util/concurrent/ScheduledExecutorService;)V
      63: aload         5
      65: areturn

  public <V> io.grpc.Context withValue(io.grpc.Context$Key<V>, V);
    Code:
       0: aload_0
       1: getfield      #11                 // Field keyValueEntries:Lio/grpc/PersistentHashArrayMappedTrie$Node;
       4: aload_1
       5: aload_2
       6: invokestatic  #26                 // Method io/grpc/PersistentHashArrayMappedTrie.put:(Lio/grpc/PersistentHashArrayMappedTrie$Node;Ljava/lang/Object;Ljava/lang/Object;)Lio/grpc/PersistentHashArrayMappedTrie$Node;
       9: astore_3
      10: new           #27                 // class io/grpc/Context
      13: dup
      14: aload_0
      15: aload_3
      16: invokespecial #1                  // Method "<init>":(Lio/grpc/Context;Lio/grpc/PersistentHashArrayMappedTrie$Node;)V
      19: areturn

  public <V1, V2> io.grpc.Context withValues(io.grpc.Context$Key<V1>, V1, io.grpc.Context$Key<V2>, V2);
    Code:
       0: aload_0
       1: getfield      #11                 // Field keyValueEntries:Lio/grpc/PersistentHashArrayMappedTrie$Node;
       4: aload_1
       5: aload_2
       6: invokestatic  #26                 // Method io/grpc/PersistentHashArrayMappedTrie.put:(Lio/grpc/PersistentHashArrayMappedTrie$Node;Ljava/lang/Object;Ljava/lang/Object;)Lio/grpc/PersistentHashArrayMappedTrie$Node;
       9: astore        5
      11: aload         5
      13: aload_3
      14: aload         4
      16: invokestatic  #26                 // Method io/grpc/PersistentHashArrayMappedTrie.put:(Lio/grpc/PersistentHashArrayMappedTrie$Node;Ljava/lang/Object;Ljava/lang/Object;)Lio/grpc/PersistentHashArrayMappedTrie$Node;
      19: astore        5
      21: new           #27                 // class io/grpc/Context
      24: dup
      25: aload_0
      26: aload         5
      28: invokespecial #1                  // Method "<init>":(Lio/grpc/Context;Lio/grpc/PersistentHashArrayMappedTrie$Node;)V
      31: areturn

  public <V1, V2, V3> io.grpc.Context withValues(io.grpc.Context$Key<V1>, V1, io.grpc.Context$Key<V2>, V2, io.grpc.Context$Key<V3>, V3);
    Code:
       0: aload_0
       1: getfield      #11                 // Field keyValueEntries:Lio/grpc/PersistentHashArrayMappedTrie$Node;
       4: aload_1
       5: aload_2
       6: invokestatic  #26                 // Method io/grpc/PersistentHashArrayMappedTrie.put:(Lio/grpc/PersistentHashArrayMappedTrie$Node;Ljava/lang/Object;Ljava/lang/Object;)Lio/grpc/PersistentHashArrayMappedTrie$Node;
       9: astore        7
      11: aload         7
      13: aload_3
      14: aload         4
      16: invokestatic  #26                 // Method io/grpc/PersistentHashArrayMappedTrie.put:(Lio/grpc/PersistentHashArrayMappedTrie$Node;Ljava/lang/Object;Ljava/lang/Object;)Lio/grpc/PersistentHashArrayMappedTrie$Node;
      19: astore        7
      21: aload         7
      23: aload         5
      25: aload         6
      27: invokestatic  #26                 // Method io/grpc/PersistentHashArrayMappedTrie.put:(Lio/grpc/PersistentHashArrayMappedTrie$Node;Ljava/lang/Object;Ljava/lang/Object;)Lio/grpc/PersistentHashArrayMappedTrie$Node;
      30: astore        7
      32: new           #27                 // class io/grpc/Context
      35: dup
      36: aload_0
      37: aload         7
      39: invokespecial #1                  // Method "<init>":(Lio/grpc/Context;Lio/grpc/PersistentHashArrayMappedTrie$Node;)V
      42: areturn

  public <V1, V2, V3, V4> io.grpc.Context withValues(io.grpc.Context$Key<V1>, V1, io.grpc.Context$Key<V2>, V2, io.grpc.Context$Key<V3>, V3, io.grpc.Context$Key<V4>, V4);
    Code:
       0: aload_0
       1: getfield      #11                 // Field keyValueEntries:Lio/grpc/PersistentHashArrayMappedTrie$Node;
       4: aload_1
       5: aload_2
       6: invokestatic  #26                 // Method io/grpc/PersistentHashArrayMappedTrie.put:(Lio/grpc/PersistentHashArrayMappedTrie$Node;Ljava/lang/Object;Ljava/lang/Object;)Lio/grpc/PersistentHashArrayMappedTrie$Node;
       9: astore        9
      11: aload         9
      13: aload_3
      14: aload         4
      16: invokestatic  #26                 // Method io/grpc/PersistentHashArrayMappedTrie.put:(Lio/grpc/PersistentHashArrayMappedTrie$Node;Ljava/lang/Object;Ljava/lang/Object;)Lio/grpc/PersistentHashArrayMappedTrie$Node;
      19: astore        9
      21: aload         9
      23: aload         5
      25: aload         6
      27: invokestatic  #26                 // Method io/grpc/PersistentHashArrayMappedTrie.put:(Lio/grpc/PersistentHashArrayMappedTrie$Node;Ljava/lang/Object;Ljava/lang/Object;)Lio/grpc/PersistentHashArrayMappedTrie$Node;
      30: astore        9
      32: aload         9
      34: aload         7
      36: aload         8
      38: invokestatic  #26                 // Method io/grpc/PersistentHashArrayMappedTrie.put:(Lio/grpc/PersistentHashArrayMappedTrie$Node;Ljava/lang/Object;Ljava/lang/Object;)Lio/grpc/PersistentHashArrayMappedTrie$Node;
      41: astore        9
      43: new           #27                 // class io/grpc/Context
      46: dup
      47: aload_0
      48: aload         9
      50: invokespecial #1                  // Method "<init>":(Lio/grpc/Context;Lio/grpc/PersistentHashArrayMappedTrie$Node;)V
      53: areturn

  public io.grpc.Context fork();
    Code:
       0: new           #27                 // class io/grpc/Context
       3: dup
       4: aload_0
       5: getfield      #11                 // Field keyValueEntries:Lio/grpc/PersistentHashArrayMappedTrie$Node;
       8: aload_0
       9: getfield      #12                 // Field generation:I
      12: iconst_1
      13: iadd
      14: invokespecial #28                 // Method "<init>":(Lio/grpc/PersistentHashArrayMappedTrie$Node;I)V
      17: areturn

  public io.grpc.Context attach();
    Code:
       0: invokestatic  #6                  // Method storage:()Lio/grpc/Context$Storage;
       3: aload_0
       4: invokevirtual #29                 // Method io/grpc/Context$Storage.doAttach:(Lio/grpc/Context;)Lio/grpc/Context;
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: getstatic     #8                  // Field ROOT:Lio/grpc/Context;
      15: areturn
      16: aload_1
      17: areturn

  public void detach(io.grpc.Context);
    Code:
       0: aload_1
       1: ldc           #30                 // String toAttach
       3: invokestatic  #20                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: invokestatic  #6                  // Method storage:()Lio/grpc/Context$Storage;
      10: aload_0
      11: aload_1
      12: invokevirtual #31                 // Method io/grpc/Context$Storage.detach:(Lio/grpc/Context;Lio/grpc/Context;)V
      15: return

  boolean isCurrent();
    Code:
       0: invokestatic  #32                 // Method current:()Lio/grpc/Context;
       3: aload_0
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      13: invokevirtual #33                 // Method io/grpc/Context$CancellableContext.isCancelled:()Z
      16: ireturn

  public java.lang.Throwable cancellationCause();
    Code:
       0: aload_0
       1: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      13: invokevirtual #34                 // Method io/grpc/Context$CancellableContext.cancellationCause:()Ljava/lang/Throwable;
      16: areturn

  public io.grpc.Deadline getDeadline();
    Code:
       0: aload_0
       1: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      13: invokevirtual #35                 // Method io/grpc/Context$CancellableContext.getDeadline:()Lio/grpc/Deadline;
      16: areturn

  public void addListener(io.grpc.Context$CancellationListener, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: ldc           #36                 // String cancellationListener
       3: invokestatic  #20                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #37                 // String executor
      10: invokestatic  #20                 // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      18: ifnonnull     22
      21: return
      22: aload_0
      23: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      26: new           #38                 // class io/grpc/Context$ExecutableListener
      29: dup
      30: aload_2
      31: aload_1
      32: aload_0
      33: invokespecial #39                 // Method io/grpc/Context$ExecutableListener."<init>":(Ljava/util/concurrent/Executor;Lio/grpc/Context$CancellationListener;Lio/grpc/Context;)V
      36: invokestatic  #40                 // Method io/grpc/Context$CancellableContext.access$300:(Lio/grpc/Context$CancellableContext;Lio/grpc/Context$ExecutableListener;)V
      39: return

  public void removeListener(io.grpc.Context$CancellationListener);
    Code:
       0: aload_0
       1: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      12: aload_1
      13: aload_0
      14: invokestatic  #41                 // Method io/grpc/Context$CancellableContext.access$400:(Lio/grpc/Context$CancellableContext;Lio/grpc/Context$CancellationListener;Lio/grpc/Context;)V
      17: return

  int listenerCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      13: invokevirtual #42                 // Method io/grpc/Context$CancellableContext.listenerCount:()I
      16: ireturn

  public void run(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method attach:()Lio/grpc/Context;
       4: astore_2
       5: aload_1
       6: invokeinterface #44,  1           // InterfaceMethod java/lang/Runnable.run:()V
      11: aload_0
      12: aload_2
      13: invokevirtual #45                 // Method detach:(Lio/grpc/Context;)V
      16: goto          27
      19: astore_3
      20: aload_0
      21: aload_2
      22: invokevirtual #45                 // Method detach:(Lio/grpc/Context;)V
      25: aload_3
      26: athrow
      27: return
    Exception table:
       from    to  target type
           5    11    19   any

  public <V> V call(java.util.concurrent.Callable<V>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method attach:()Lio/grpc/Context;
       4: astore_2
       5: aload_1
       6: invokeinterface #46,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      11: astore_3
      12: aload_0
      13: aload_2
      14: invokevirtual #45                 // Method detach:(Lio/grpc/Context;)V
      17: aload_3
      18: areturn
      19: astore        4
      21: aload_0
      22: aload_2
      23: invokevirtual #45                 // Method detach:(Lio/grpc/Context;)V
      26: aload         4
      28: athrow
    Exception table:
       from    to  target type
           5    12    19   any
          19    21    19   any

  public java.lang.Runnable wrap(java.lang.Runnable);
    Code:
       0: new           #47                 // class io/grpc/Context$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #48                 // Method io/grpc/Context$1."<init>":(Lio/grpc/Context;Ljava/lang/Runnable;)V
       9: areturn

  public <C> java.util.concurrent.Callable<C> wrap(java.util.concurrent.Callable<C>);
    Code:
       0: new           #49                 // class io/grpc/Context$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #50                 // Method io/grpc/Context$2."<init>":(Lio/grpc/Context;Ljava/util/concurrent/Callable;)V
       9: areturn

  public java.util.concurrent.Executor fixedContextExecutor(java.util.concurrent.Executor);
    Code:
       0: new           #51                 // class io/grpc/Context$1FixedContextExecutor
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #52                 // Method io/grpc/Context$1FixedContextExecutor."<init>":(Lio/grpc/Context;Ljava/util/concurrent/Executor;)V
       9: areturn

  public static java.util.concurrent.Executor currentContextExecutor(java.util.concurrent.Executor);
    Code:
       0: new           #53                 // class io/grpc/Context$1CurrentContextExecutor
       3: dup
       4: aload_0
       5: invokespecial #54                 // Method io/grpc/Context$1CurrentContextExecutor."<init>":(Ljava/util/concurrent/Executor;)V
       8: areturn

  static <T> T checkNotNull(T, java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     16
       4: new           #55                 // class java/lang/NullPointerException
       7: dup
       8: aload_1
       9: invokestatic  #56                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokespecial #57                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: areturn

  static io.grpc.Context$CancellableContext cancellableAncestor(io.grpc.Context);
    Code:
       0: aload_0
       1: instanceof    #15                 // class io/grpc/Context$CancellableContext
       4: ifeq          12
       7: aload_0
       8: checkcast     #15                 // class io/grpc/Context$CancellableContext
      11: areturn
      12: aload_0
      13: getfield      #10                 // Field cancellableAncestor:Lio/grpc/Context$CancellableContext;
      16: areturn

  private static void validateGeneration(int);
    Code:
       0: iload_0
       1: sipush        1000
       4: if_icmpne     25
       7: getstatic     #58                 // Field log:Ljava/util/logging/Logger;
      10: getstatic     #59                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      13: ldc           #60                 // String Context ancestry chain length is abnormally long. This suggests an error in application code. Length exceeded: 1000
      15: new           #61                 // class java/lang/Exception
      18: dup
      19: invokespecial #62                 // Method java/lang/Exception."<init>":()V
      22: invokevirtual #63                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  io.grpc.Context(io.grpc.Context, io.grpc.PersistentHashArrayMappedTrie$Node, io.grpc.Context$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lio/grpc/Context;Lio/grpc/PersistentHashArrayMappedTrie$Node;)V
       6: return

  static {};
    Code:
       0: ldc           #27                 // class io/grpc/Context
       2: invokevirtual #64                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #65                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #58                 // Field log:Ljava/util/logging/Logger;
      11: new           #27                 // class io/grpc/Context
      14: dup
      15: invokespecial #66                 // Method "<init>":()V
      18: putstatic     #8                  // Field ROOT:Lio/grpc/Context;
      21: return
}
