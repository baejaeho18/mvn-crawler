Compiled from "Deadline.java"
public final class io.grpc.Deadline implements java.lang.Comparable<io.grpc.Deadline> {
  private static final io.grpc.Deadline$SystemTicker SYSTEM_TICKER;

  private static final long MAX_OFFSET;

  private static final long MIN_OFFSET;

  private static final long NANOS_PER_SECOND;

  private final io.grpc.Deadline$Ticker ticker;

  private final long deadlineNanos;

  private volatile boolean expired;

  public static io.grpc.Deadline$Ticker getSystemTicker();
    Code:
       0: getstatic     #1                  // Field SYSTEM_TICKER:Lio/grpc/Deadline$SystemTicker;
       3: areturn

  public static io.grpc.Deadline after(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_0
       1: aload_2
       2: getstatic     #1                  // Field SYSTEM_TICKER:Lio/grpc/Deadline$SystemTicker;
       5: invokestatic  #2                  // Method after:(JLjava/util/concurrent/TimeUnit;Lio/grpc/Deadline$Ticker;)Lio/grpc/Deadline;
       8: areturn

  public static io.grpc.Deadline after(long, java.util.concurrent.TimeUnit, io.grpc.Deadline$Ticker);
    Code:
       0: aload_2
       1: ldc           #3                  // String units
       3: invokestatic  #4                  // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: new           #5                  // class io/grpc/Deadline
      10: dup
      11: aload_3
      12: aload_2
      13: lload_0
      14: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      17: iconst_1
      18: invokespecial #7                  // Method "<init>":(Lio/grpc/Deadline$Ticker;JZ)V
      21: areturn

  private io.grpc.Deadline(io.grpc.Deadline$Ticker, long, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #8                  // Method io/grpc/Deadline$Ticker.nanoTime:()J
       6: lload_2
       7: iload         4
       9: invokespecial #9                  // Method "<init>":(Lio/grpc/Deadline$Ticker;JJZ)V
      12: return

  private io.grpc.Deadline(io.grpc.Deadline$Ticker, long, long, boolean);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
       9: getstatic     #12                 // Field MAX_OFFSET:J
      12: getstatic     #13                 // Field MIN_OFFSET:J
      15: lload         4
      17: invokestatic  #14                 // Method java/lang/Math.max:(JJ)J
      20: invokestatic  #15                 // Method java/lang/Math.min:(JJ)J
      23: lstore        4
      25: aload_0
      26: lload_2
      27: lload         4
      29: ladd
      30: putfield      #16                 // Field deadlineNanos:J
      33: aload_0
      34: iload         6
      36: ifeq          50
      39: lload         4
      41: lconst_0
      42: lcmp
      43: ifgt          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: putfield      #17                 // Field expired:Z
      54: return

  public boolean isExpired();
    Code:
       0: aload_0
       1: getfield      #17                 // Field expired:Z
       4: ifne          34
       7: aload_0
       8: getfield      #16                 // Field deadlineNanos:J
      11: aload_0
      12: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
      15: invokevirtual #8                  // Method io/grpc/Deadline$Ticker.nanoTime:()J
      18: lsub
      19: lconst_0
      20: lcmp
      21: ifgt          32
      24: aload_0
      25: iconst_1
      26: putfield      #17                 // Field expired:Z
      29: goto          34
      32: iconst_0
      33: ireturn
      34: iconst_1
      35: ireturn

  public boolean isBefore(io.grpc.Deadline);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method checkTicker:(Lio/grpc/Deadline;)V
       5: aload_0
       6: getfield      #16                 // Field deadlineNanos:J
       9: aload_1
      10: getfield      #16                 // Field deadlineNanos:J
      13: lsub
      14: lconst_0
      15: lcmp
      16: ifge          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public io.grpc.Deadline minimum(io.grpc.Deadline);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method checkTicker:(Lio/grpc/Deadline;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #19                 // Method isBefore:(Lio/grpc/Deadline;)Z
      10: ifeq          17
      13: aload_0
      14: goto          18
      17: aload_1
      18: areturn

  public io.grpc.Deadline offset(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifne          8
       6: aload_0
       7: areturn
       8: new           #5                  // class io/grpc/Deadline
      11: dup
      12: aload_0
      13: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
      16: aload_0
      17: getfield      #16                 // Field deadlineNanos:J
      20: aload_3
      21: lload_1
      22: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      25: aload_0
      26: invokevirtual #20                 // Method isExpired:()Z
      29: invokespecial #9                  // Method "<init>":(Lio/grpc/Deadline$Ticker;JJZ)V
      32: areturn

  public long timeRemaining(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
       4: invokevirtual #8                  // Method io/grpc/Deadline$Ticker.nanoTime:()J
       7: lstore_2
       8: aload_0
       9: getfield      #17                 // Field expired:Z
      12: ifne          31
      15: aload_0
      16: getfield      #16                 // Field deadlineNanos:J
      19: lload_2
      20: lsub
      21: lconst_0
      22: lcmp
      23: ifgt          31
      26: aload_0
      27: iconst_1
      28: putfield      #17                 // Field expired:Z
      31: aload_1
      32: aload_0
      33: getfield      #16                 // Field deadlineNanos:J
      36: lload_2
      37: lsub
      38: getstatic     #21                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      41: invokevirtual #22                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      44: lreturn

  public java.util.concurrent.ScheduledFuture<?> runOnExpiration(java.lang.Runnable, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_1
       1: ldc           #23                 // String task
       3: invokestatic  #4                  // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #24                 // String scheduler
      10: invokestatic  #4                  // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_2
      15: aload_1
      16: aload_0
      17: getfield      #16                 // Field deadlineNanos:J
      20: aload_0
      21: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
      24: invokevirtual #8                  // Method io/grpc/Deadline$Ticker.nanoTime:()J
      27: lsub
      28: getstatic     #21                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      31: invokeinterface #25,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      36: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getstatic     #21                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       4: invokevirtual #26                 // Method timeRemaining:(Ljava/util/concurrent/TimeUnit;)J
       7: lstore_1
       8: lload_1
       9: invokestatic  #27                 // Method java/lang/Math.abs:(J)J
      12: getstatic     #28                 // Field NANOS_PER_SECOND:J
      15: ldiv
      16: lstore_3
      17: lload_1
      18: invokestatic  #27                 // Method java/lang/Math.abs:(J)J
      21: getstatic     #28                 // Field NANOS_PER_SECOND:J
      24: lrem
      25: lstore        5
      27: new           #29                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      34: astore        7
      36: lload_1
      37: lconst_0
      38: lcmp
      39: ifge          50
      42: aload         7
      44: bipush        45
      46: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      49: pop
      50: aload         7
      52: lload_3
      53: invokevirtual #32                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      56: pop
      57: lload         5
      59: lconst_0
      60: lcmp
      61: ifle          90
      64: aload         7
      66: getstatic     #33                 // Field java/util/Locale.US:Ljava/util/Locale;
      69: ldc           #34                 // String .%09d
      71: iconst_1
      72: anewarray     #35                 // class java/lang/Object
      75: dup
      76: iconst_0
      77: lload         5
      79: invokestatic  #36                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      82: aastore
      83: invokestatic  #37                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      86: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: pop
      90: aload         7
      92: ldc           #39                 // String s from now
      94: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: pop
      98: aload_0
      99: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
     102: getstatic     #1                  // Field SYSTEM_TICKER:Lio/grpc/Deadline$SystemTicker;
     105: if_acmpeq     141
     108: aload         7
     110: new           #29                 // class java/lang/StringBuilder
     113: dup
     114: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     117: ldc           #40                 // String  (ticker=
     119: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
     126: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     129: ldc           #42                 // String )
     131: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: pop
     141: aload         7
     143: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: areturn

  public int compareTo(io.grpc.Deadline);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method checkTicker:(Lio/grpc/Deadline;)V
       5: aload_0
       6: getfield      #16                 // Field deadlineNanos:J
       9: aload_1
      10: getfield      #16                 // Field deadlineNanos:J
      13: lsub
      14: lstore_2
      15: lload_2
      16: lconst_0
      17: lcmp
      18: ifge          23
      21: iconst_m1
      22: ireturn
      23: lload_2
      24: lconst_0
      25: lcmp
      26: ifle          31
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  public int hashCode();
    Code:
       0: iconst_2
       1: anewarray     #35                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #16                 // Field deadlineNanos:J
      17: invokestatic  #36                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      20: aastore
      21: invokestatic  #44                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      24: invokeinterface #45,  1           // InterfaceMethod java/util/List.hashCode:()I
      29: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #5                  // class io/grpc/Deadline
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #5                  // class io/grpc/Deadline
      20: astore_2
      21: aload_0
      22: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
      25: ifnonnull     38
      28: aload_2
      29: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
      32: ifnull        51
      35: goto          49
      38: aload_0
      39: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
      42: aload_2
      43: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
      46: if_acmpeq     51
      49: iconst_0
      50: ireturn
      51: aload_0
      52: getfield      #16                 // Field deadlineNanos:J
      55: aload_2
      56: getfield      #16                 // Field deadlineNanos:J
      59: lcmp
      60: ifeq          65
      63: iconst_0
      64: ireturn
      65: iconst_1
      66: ireturn

  private static <T> T checkNotNull(T, java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     16
       4: new           #46                 // class java/lang/NullPointerException
       7: dup
       8: aload_1
       9: invokestatic  #47                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokespecial #48                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: areturn

  private void checkTicker(io.grpc.Deadline);
    Code:
       0: aload_0
       1: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
       4: aload_1
       5: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
       8: if_acmpeq     58
      11: new           #49                 // class java/lang/AssertionError
      14: dup
      15: new           #29                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #50                 // String Tickers (
      24: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
      31: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #51                 // String  and
      36: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: getfield      #11                 // Field ticker:Lio/grpc/Deadline$Ticker;
      43: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: ldc           #52                 // String ) don\'t match. Custom Ticker should only be used in tests!
      48: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #53                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: return

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class io/grpc/Deadline
       5: invokevirtual #54                 // Method compareTo:(Lio/grpc/Deadline;)I
       8: ireturn

  static {};
    Code:
       0: new           #55                 // class io/grpc/Deadline$SystemTicker
       3: dup
       4: aconst_null
       5: invokespecial #56                 // Method io/grpc/Deadline$SystemTicker."<init>":(Lio/grpc/Deadline$1;)V
       8: putstatic     #1                  // Field SYSTEM_TICKER:Lio/grpc/Deadline$SystemTicker;
      11: getstatic     #57                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
      14: ldc2_w        #58                 // long 36500l
      17: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      20: putstatic     #12                 // Field MAX_OFFSET:J
      23: getstatic     #12                 // Field MAX_OFFSET:J
      26: lneg
      27: putstatic     #13                 // Field MIN_OFFSET:J
      30: getstatic     #60                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      33: lconst_1
      34: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      37: putstatic     #28                 // Field NANOS_PER_SECOND:J
      40: return
}
