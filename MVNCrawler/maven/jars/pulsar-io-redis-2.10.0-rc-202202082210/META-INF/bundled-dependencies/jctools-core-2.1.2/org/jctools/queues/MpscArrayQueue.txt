Compiled from "MpscArrayQueue.java"
public class org.jctools.queues.MpscArrayQueue<E> extends org.jctools.queues.MpscArrayQueueL3Pad<E> {
  public org.jctools.queues.MpscArrayQueue(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method org/jctools/queues/MpscArrayQueueL3Pad."<init>":(I)V
       5: return

  public boolean offerIfBelowThreshold(E, int);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #2                  // class java/lang/NullPointerException
       8: dup
       9: invokespecial #3                  // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: getfield      #4                  // Field mask:J
      17: lstore_3
      18: lload_3
      19: lconst_1
      20: ladd
      21: lstore        5
      23: aload_0
      24: invokevirtual #5                  // Method lvProducerLimit:()J
      27: lstore        7
      29: aload_0
      30: invokevirtual #6                  // Method lvProducerIndex:()J
      33: lstore        9
      35: lload         7
      37: lload         9
      39: lsub
      40: lstore        11
      42: lload         5
      44: lload         11
      46: lsub
      47: lstore        13
      49: lload         13
      51: iload_2
      52: i2l
      53: lcmp
      54: iflt          93
      57: aload_0
      58: invokevirtual #7                  // Method lvConsumerIndex:()J
      61: lstore        15
      63: lload         9
      65: lload         15
      67: lsub
      68: lstore        13
      70: lload         13
      72: iload_2
      73: i2l
      74: lcmp
      75: iflt          80
      78: iconst_0
      79: ireturn
      80: lload         15
      82: lload         5
      84: ladd
      85: lstore        7
      87: aload_0
      88: lload         7
      90: invokevirtual #8                  // Method soProducerLimit:(J)V
      93: aload_0
      94: lload         9
      96: lload         9
      98: lconst_1
      99: ladd
     100: invokevirtual #9                  // Method casProducerIndex:(JJ)Z
     103: ifeq          29
     106: lload         9
     108: lload_3
     109: invokestatic  #10                 // Method calcElementOffset:(JJ)J
     112: lstore        11
     114: aload_0
     115: getfield      #11                 // Field buffer:[Ljava/lang/Object;
     118: lload         11
     120: aload_1
     121: invokestatic  #12                 // Method org/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
     124: iconst_1
     125: ireturn

  public boolean offer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #2                  // class java/lang/NullPointerException
       8: dup
       9: invokespecial #3                  // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: getfield      #4                  // Field mask:J
      17: lstore_2
      18: aload_0
      19: invokevirtual #5                  // Method lvProducerLimit:()J
      22: lstore        4
      24: aload_0
      25: invokevirtual #6                  // Method lvProducerIndex:()J
      28: lstore        6
      30: lload         6
      32: lload         4
      34: lcmp
      35: iflt          68
      38: aload_0
      39: invokevirtual #7                  // Method lvConsumerIndex:()J
      42: lstore        8
      44: lload         8
      46: lload_2
      47: ladd
      48: lconst_1
      49: ladd
      50: lstore        4
      52: lload         6
      54: lload         4
      56: lcmp
      57: iflt          62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: lload         4
      65: invokevirtual #8                  // Method soProducerLimit:(J)V
      68: aload_0
      69: lload         6
      71: lload         6
      73: lconst_1
      74: ladd
      75: invokevirtual #9                  // Method casProducerIndex:(JJ)Z
      78: ifeq          24
      81: lload         6
      83: lload_2
      84: invokestatic  #10                 // Method calcElementOffset:(JJ)J
      87: lstore        8
      89: aload_0
      90: getfield      #11                 // Field buffer:[Ljava/lang/Object;
      93: lload         8
      95: aload_1
      96: invokestatic  #12                 // Method org/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      99: iconst_1
     100: ireturn

  public final int failFastOffer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #2                  // class java/lang/NullPointerException
       8: dup
       9: invokespecial #3                  // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: getfield      #4                  // Field mask:J
      17: lstore_2
      18: lload_2
      19: lconst_1
      20: ladd
      21: lstore        4
      23: aload_0
      24: invokevirtual #6                  // Method lvProducerIndex:()J
      27: lstore        6
      29: aload_0
      30: invokevirtual #5                  // Method lvProducerLimit:()J
      33: lstore        8
      35: lload         6
      37: lload         8
      39: lcmp
      40: iflt          72
      43: aload_0
      44: invokevirtual #7                  // Method lvConsumerIndex:()J
      47: lstore        10
      49: lload         10
      51: lload         4
      53: ladd
      54: lstore        8
      56: lload         6
      58: lload         8
      60: lcmp
      61: iflt          66
      64: iconst_1
      65: ireturn
      66: aload_0
      67: lload         8
      69: invokevirtual #8                  // Method soProducerLimit:(J)V
      72: aload_0
      73: lload         6
      75: lload         6
      77: lconst_1
      78: ladd
      79: invokevirtual #9                  // Method casProducerIndex:(JJ)Z
      82: ifne          87
      85: iconst_m1
      86: ireturn
      87: lload         6
      89: lload_2
      90: invokestatic  #10                 // Method calcElementOffset:(JJ)J
      93: lstore        10
      95: aload_0
      96: getfield      #11                 // Field buffer:[Ljava/lang/Object;
      99: lload         10
     101: aload_1
     102: invokestatic  #12                 // Method org/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
     105: iconst_0
     106: ireturn

  public E poll();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method lpConsumerIndex:()J
       4: lstore_1
       5: aload_0
       6: lload_1
       7: invokevirtual #14                 // Method calcElementOffset:(J)J
      10: lstore_3
      11: aload_0
      12: getfield      #11                 // Field buffer:[Ljava/lang/Object;
      15: astore        5
      17: aload         5
      19: lload_3
      20: invokestatic  #15                 // Method org/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      23: astore        6
      25: aconst_null
      26: aload         6
      28: if_acmpne     58
      31: lload_1
      32: aload_0
      33: invokevirtual #6                  // Method lvProducerIndex:()J
      36: lcmp
      37: ifeq          56
      40: aload         5
      42: lload_3
      43: invokestatic  #15                 // Method org/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      46: astore        6
      48: aload         6
      50: ifnull        40
      53: goto          58
      56: aconst_null
      57: areturn
      58: aload         5
      60: lload_3
      61: aconst_null
      62: invokestatic  #16                 // Method org/jctools/util/UnsafeRefArrayAccess.spElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      65: aload_0
      66: lload_1
      67: lconst_1
      68: ladd
      69: invokevirtual #17                 // Method soConsumerIndex:(J)V
      72: aload         6
      74: areturn

  public E peek();
    Code:
       0: aload_0
       1: getfield      #11                 // Field buffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: invokevirtual #13                 // Method lpConsumerIndex:()J
       9: lstore_2
      10: aload_0
      11: lload_2
      12: invokevirtual #14                 // Method calcElementOffset:(J)J
      15: lstore        4
      17: aload_1
      18: lload         4
      20: invokestatic  #15                 // Method org/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      23: astore        6
      25: aconst_null
      26: aload         6
      28: if_acmpne     58
      31: lload_2
      32: aload_0
      33: invokevirtual #6                  // Method lvProducerIndex:()J
      36: lcmp
      37: ifeq          56
      40: aload_1
      41: lload         4
      43: invokestatic  #15                 // Method org/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      46: astore        6
      48: aload         6
      50: ifnull        40
      53: goto          58
      56: aconst_null
      57: areturn
      58: aload         6
      60: areturn

  public boolean relaxedOffer(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method offer:(Ljava/lang/Object;)Z
       5: ireturn

  public E relaxedPoll();
    Code:
       0: aload_0
       1: getfield      #11                 // Field buffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: invokevirtual #13                 // Method lpConsumerIndex:()J
       9: lstore_2
      10: aload_0
      11: lload_2
      12: invokevirtual #14                 // Method calcElementOffset:(J)J
      15: lstore        4
      17: aload_1
      18: lload         4
      20: invokestatic  #15                 // Method org/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      23: astore        6
      25: aconst_null
      26: aload         6
      28: if_acmpne     33
      31: aconst_null
      32: areturn
      33: aload_1
      34: lload         4
      36: aconst_null
      37: invokestatic  #16                 // Method org/jctools/util/UnsafeRefArrayAccess.spElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      40: aload_0
      41: lload_2
      42: lconst_1
      43: ladd
      44: invokevirtual #17                 // Method soConsumerIndex:(J)V
      47: aload         6
      49: areturn

  public E relaxedPeek();
    Code:
       0: aload_0
       1: getfield      #11                 // Field buffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #4                  // Field mask:J
       9: lstore_2
      10: aload_0
      11: invokevirtual #13                 // Method lpConsumerIndex:()J
      14: lstore        4
      16: aload_1
      17: lload         4
      19: lload_2
      20: invokestatic  #10                 // Method calcElementOffset:(JJ)J
      23: invokestatic  #15                 // Method org/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      26: areturn

  public int drain(org.jctools.queues.MessagePassingQueue$Consumer<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #19                 // Method capacity:()I
       6: invokevirtual #20                 // Method drain:(Lorg/jctools/queues/MessagePassingQueue$Consumer;I)I
       9: ireturn

  public int fill(org.jctools.queues.MessagePassingQueue$Supplier<E>);
    Code:
       0: lconst_0
       1: lstore_2
       2: aload_0
       3: invokevirtual #19                 // Method capacity:()I
       6: istore        4
       8: aload_0
       9: aload_1
      10: getstatic     #21                 // Field org/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      13: invokevirtual #22                 // Method fill:(Lorg/jctools/queues/MessagePassingQueue$Supplier;I)I
      16: istore        5
      18: iload         5
      20: ifne          26
      23: lload_2
      24: l2i
      25: ireturn
      26: lload_2
      27: iload         5
      29: i2l
      30: ladd
      31: lstore_2
      32: lload_2
      33: iload         4
      35: i2l
      36: lcmp
      37: ifle          8
      40: lload_2
      41: l2i
      42: ireturn

  public int drain(org.jctools.queues.MessagePassingQueue$Consumer<E>, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field buffer:[Ljava/lang/Object;
       4: astore_3
       5: aload_0
       6: getfield      #4                  // Field mask:J
       9: lstore        4
      11: aload_0
      12: invokevirtual #13                 // Method lpConsumerIndex:()J
      15: lstore        6
      17: iconst_0
      18: istore        8
      20: iload         8
      22: iload_2
      23: if_icmpge     89
      26: lload         6
      28: iload         8
      30: i2l
      31: ladd
      32: lstore        9
      34: lload         9
      36: lload         4
      38: invokestatic  #10                 // Method calcElementOffset:(JJ)J
      41: lstore        11
      43: aload_3
      44: lload         11
      46: invokestatic  #15                 // Method org/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      49: astore        13
      51: aconst_null
      52: aload         13
      54: if_acmpne     60
      57: iload         8
      59: ireturn
      60: aload_3
      61: lload         11
      63: aconst_null
      64: invokestatic  #16                 // Method org/jctools/util/UnsafeRefArrayAccess.spElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      67: aload_0
      68: lload         9
      70: lconst_1
      71: ladd
      72: invokevirtual #17                 // Method soConsumerIndex:(J)V
      75: aload_1
      76: aload         13
      78: invokeinterface #23,  2           // InterfaceMethod org/jctools/queues/MessagePassingQueue$Consumer.accept:(Ljava/lang/Object;)V
      83: iinc          8, 1
      86: goto          20
      89: iload_2
      90: ireturn

  public int fill(org.jctools.queues.MessagePassingQueue$Supplier<E>, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mask:J
       4: lstore_3
       5: lload_3
       6: lconst_1
       7: ladd
       8: lstore        5
      10: aload_0
      11: invokevirtual #5                  // Method lvProducerLimit:()J
      14: lstore        7
      16: iconst_0
      17: istore        11
      19: aload_0
      20: invokevirtual #6                  // Method lvProducerIndex:()J
      23: lstore        9
      25: lload         7
      27: lload         9
      29: lsub
      30: lstore        12
      32: lload         12
      34: lconst_0
      35: lcmp
      36: ifgt          74
      39: aload_0
      40: invokevirtual #7                  // Method lvConsumerIndex:()J
      43: lstore        14
      45: lload         14
      47: lload         5
      49: ladd
      50: lstore        7
      52: lload         7
      54: lload         9
      56: lsub
      57: lstore        12
      59: lload         12
      61: lconst_0
      62: lcmp
      63: ifgt          68
      66: iconst_0
      67: ireturn
      68: aload_0
      69: lload         7
      71: invokevirtual #8                  // Method soProducerLimit:(J)V
      74: lload         12
      76: l2i
      77: iload_2
      78: invokestatic  #24                 // Method java/lang/Math.min:(II)I
      81: istore        11
      83: aload_0
      84: lload         9
      86: lload         9
      88: iload         11
      90: i2l
      91: ladd
      92: invokevirtual #9                  // Method casProducerIndex:(JJ)Z
      95: ifeq          19
      98: aload_0
      99: getfield      #11                 // Field buffer:[Ljava/lang/Object;
     102: astore        12
     104: iconst_0
     105: istore        13
     107: iload         13
     109: iload         11
     111: if_icmpge     145
     114: lload         9
     116: iload         13
     118: i2l
     119: ladd
     120: lload_3
     121: invokestatic  #10                 // Method calcElementOffset:(JJ)J
     124: lstore        14
     126: aload         12
     128: lload         14
     130: aload_1
     131: invokeinterface #25,  1           // InterfaceMethod org/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
     136: invokestatic  #12                 // Method org/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
     139: iinc          13, 1
     142: goto          107
     145: iload         11
     147: ireturn

  public void drain(org.jctools.queues.MessagePassingQueue$Consumer<E>, org.jctools.queues.MessagePassingQueue$WaitStrategy, org.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: aload_0
       1: getfield      #11                 // Field buffer:[Ljava/lang/Object;
       4: astore        4
       6: aload_0
       7: getfield      #4                  // Field mask:J
      10: lstore        5
      12: aload_0
      13: invokevirtual #13                 // Method lpConsumerIndex:()J
      16: lstore        7
      18: iconst_0
      19: istore        9
      21: aload_3
      22: invokeinterface #26,  1           // InterfaceMethod org/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
      27: ifeq          118
      30: iconst_0
      31: istore        10
      33: iload         10
      35: sipush        4096
      38: if_icmpge     115
      41: lload         7
      43: lload         5
      45: invokestatic  #10                 // Method calcElementOffset:(JJ)J
      48: lstore        11
      50: aload         4
      52: lload         11
      54: invokestatic  #15                 // Method org/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      57: astore        13
      59: aconst_null
      60: aload         13
      62: if_acmpne     78
      65: aload_2
      66: iload         9
      68: invokeinterface #27,  2           // InterfaceMethod org/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      73: istore        9
      75: goto          109
      78: lload         7
      80: lconst_1
      81: ladd
      82: lstore        7
      84: iconst_0
      85: istore        9
      87: aload         4
      89: lload         11
      91: aconst_null
      92: invokestatic  #16                 // Method org/jctools/util/UnsafeRefArrayAccess.spElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      95: aload_0
      96: lload         7
      98: invokevirtual #17                 // Method soConsumerIndex:(J)V
     101: aload_1
     102: aload         13
     104: invokeinterface #23,  2           // InterfaceMethod org/jctools/queues/MessagePassingQueue$Consumer.accept:(Ljava/lang/Object;)V
     109: iinc          10, 1
     112: goto          33
     115: goto          21
     118: return

  public void fill(org.jctools.queues.MessagePassingQueue$Supplier<E>, org.jctools.queues.MessagePassingQueue$WaitStrategy, org.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_3
       4: invokeinterface #26,  1           // InterfaceMethod org/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
       9: ifeq          42
      12: aload_0
      13: aload_1
      14: getstatic     #21                 // Field org/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      17: invokevirtual #22                 // Method fill:(Lorg/jctools/queues/MessagePassingQueue$Supplier;I)I
      20: ifne          36
      23: aload_2
      24: iload         4
      26: invokeinterface #27,  2           // InterfaceMethod org/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      31: istore        4
      33: goto          3
      36: iconst_0
      37: istore        4
      39: goto          3
      42: return
}
