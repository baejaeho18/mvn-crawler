Compiled from "NonBlockingHashMap.java"
class org.jctools.maps.NonBlockingHashMap$3 extends java.util.AbstractSet<java.util.Map$Entry<TypeK, TypeV>> {
  final org.jctools.maps.NonBlockingHashMap this$0;

  org.jctools.maps.NonBlockingHashMap$3(org.jctools.maps.NonBlockingHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/util/AbstractSet."<init>":()V
       9: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
       4: invokevirtual #3                  // Method org/jctools/maps/NonBlockingHashMap.clear:()V
       7: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
       4: invokevirtual #4                  // Method org/jctools/maps/NonBlockingHashMap.size:()I
       7: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #5                  // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #5                  // class java/util/Map$Entry
      13: astore_2
      14: aload_0
      15: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
      18: aload_2
      19: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      24: aload_2
      25: invokeinterface #7,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      30: invokevirtual #8                  // Method org/jctools/maps/NonBlockingHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      33: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #5                  // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #5                  // class java/util/Map$Entry
      13: astore_2
      14: aload_0
      15: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
      18: aload_2
      19: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      24: invokevirtual #9                  // Method org/jctools/maps/NonBlockingHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: astore_3
      28: aload_3
      29: ifnull        49
      32: aload_3
      33: aload_2
      34: invokeinterface #7,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      39: invokevirtual #10                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  public java.util.Iterator<java.util.Map$Entry<TypeK, TypeV>> iterator();
    Code:
       0: new           #11                 // class org/jctools/maps/NonBlockingHashMap$SnapshotE
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
       8: invokespecial #12                 // Method org/jctools/maps/NonBlockingHashMap$SnapshotE."<init>":(Lorg/jctools/maps/NonBlockingHashMap;)V
      11: areturn
}
