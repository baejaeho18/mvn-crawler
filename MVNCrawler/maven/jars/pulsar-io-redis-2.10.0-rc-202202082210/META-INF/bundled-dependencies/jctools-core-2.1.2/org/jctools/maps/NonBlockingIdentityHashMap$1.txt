Compiled from "NonBlockingIdentityHashMap.java"
class org.jctools.maps.NonBlockingIdentityHashMap$1 extends java.util.AbstractCollection<TypeV> {
  final org.jctools.maps.NonBlockingIdentityHashMap this$0;

  org.jctools.maps.NonBlockingIdentityHashMap$1(org.jctools.maps.NonBlockingIdentityHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingIdentityHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/util/AbstractCollection."<init>":()V
       9: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingIdentityHashMap;
       4: invokevirtual #3                  // Method org/jctools/maps/NonBlockingIdentityHashMap.clear:()V
       7: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingIdentityHashMap;
       4: invokevirtual #4                  // Method org/jctools/maps/NonBlockingIdentityHashMap.size:()I
       7: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingIdentityHashMap;
       4: aload_1
       5: invokevirtual #5                  // Method org/jctools/maps/NonBlockingIdentityHashMap.containsValue:(Ljava/lang/Object;)Z
       8: ireturn

  public java.util.Iterator<TypeV> iterator();
    Code:
       0: new           #6                  // class org/jctools/maps/NonBlockingIdentityHashMap$SnapshotV
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingIdentityHashMap;
       8: invokespecial #7                  // Method org/jctools/maps/NonBlockingIdentityHashMap$SnapshotV."<init>":(Lorg/jctools/maps/NonBlockingIdentityHashMap;)V
      11: areturn
}
