Compiled from "BaseMpscLinkedArrayQueue.java"
abstract class org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields<E> extends org.jctools.queues.BaseMpscLinkedArrayQueuePad3<E> {
  private static final long P_LIMIT_OFFSET;

  private volatile long producerLimit;

  protected long producerMask;

  protected E[] producerBuffer;

  org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jctools/queues/BaseMpscLinkedArrayQueuePad3."<init>":()V
       4: return

  final long lvProducerLimit();
    Code:
       0: aload_0
       1: getfield      #2                  // Field producerLimit:J
       4: lreturn

  final boolean casProducerLimit(long, long);
    Code:
       0: getstatic     #3                  // Field org/jctools/util/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #4                  // Field P_LIMIT_OFFSET:J
       7: lload_1
       8: lload_3
       9: invokevirtual #5                  // Method sun/misc/Unsafe.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      12: ireturn

  final void soProducerLimit(long);
    Code:
       0: getstatic     #3                  // Field org/jctools/util/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #4                  // Field P_LIMIT_OFFSET:J
       7: lload_1
       8: invokevirtual #6                  // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      11: return

  static {};
    Code:
       0: ldc           #7                  // class org/jctools/queues/BaseMpscLinkedArrayQueueColdProducerFields
       2: ldc           #8                  // String producerLimit
       4: invokestatic  #9                  // Method org/jctools/util/UnsafeAccess.fieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
       7: putstatic     #4                  // Field P_LIMIT_OFFSET:J
      10: return
}
