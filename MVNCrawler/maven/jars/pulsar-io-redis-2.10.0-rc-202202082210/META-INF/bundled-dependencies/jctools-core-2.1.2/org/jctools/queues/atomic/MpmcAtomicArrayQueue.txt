Compiled from "MpmcAtomicArrayQueue.java"
public class org.jctools.queues.atomic.MpmcAtomicArrayQueue<E> extends org.jctools.queues.atomic.MpmcAtomicArrayQueueL3Pad<E> {
  public org.jctools.queues.atomic.MpmcAtomicArrayQueue(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: ldc           #1                  // String capacity
       5: invokestatic  #2                  // Method org/jctools/util/RangeUtil.checkGreaterThanOrEqual:(IILjava/lang/String;)I
       8: invokespecial #3                  // Method org/jctools/queues/atomic/MpmcAtomicArrayQueueL3Pad."<init>":(I)V
      11: return

  public boolean offer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #4                  // class java/lang/NullPointerException
       8: dup
       9: invokespecial #5                  // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: getfield      #6                  // Field mask:I
      17: istore_2
      18: iload_2
      19: iconst_1
      20: iadd
      21: i2l
      22: lstore_3
      23: aload_0
      24: getfield      #7                  // Field sequenceBuffer:Ljava/util/concurrent/atomic/AtomicLongArray;
      27: astore        5
      29: ldc2_w        #9                  // long -9223372036854775808l
      32: lstore        11
      34: aload_0
      35: invokevirtual #11                 // Method lvProducerIndex:()J
      38: lstore        6
      40: lload         6
      42: iload_2
      43: invokestatic  #12                 // Method calcSequenceOffset:(JI)I
      46: istore        8
      48: aload_0
      49: aload         5
      51: iload         8
      53: invokevirtual #13                 // Method lvSequence:(Ljava/util/concurrent/atomic/AtomicLongArray;I)J
      56: lstore        9
      58: lload         9
      60: lload         6
      62: lcmp
      63: ifge          99
      66: lload         6
      68: lload_3
      69: lsub
      70: lload         11
      72: lcmp
      73: iflt          93
      76: lload         6
      78: lload_3
      79: lsub
      80: aload_0
      81: invokevirtual #14                 // Method lvConsumerIndex:()J
      84: dup2
      85: lstore        11
      87: lcmp
      88: iflt          93
      91: iconst_0
      92: ireturn
      93: lload         6
      95: lconst_1
      96: ladd
      97: lstore        9
      99: lload         9
     101: lload         6
     103: lcmp
     104: ifgt          34
     107: aload_0
     108: lload         6
     110: lload         6
     112: lconst_1
     113: ladd
     114: invokevirtual #15                 // Method casProducerIndex:(JJ)Z
     117: ifeq          34
     120: aload_0
     121: getfield      #16                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     124: aload_0
     125: lload         6
     127: iload_2
     128: invokevirtual #17                 // Method calcElementOffset:(JI)I
     131: aload_1
     132: invokestatic  #18                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     135: aload_0
     136: aload         5
     138: iload         8
     140: lload         6
     142: lconst_1
     143: ladd
     144: invokevirtual #19                 // Method soSequence:(Ljava/util/concurrent/atomic/AtomicLongArray;IJ)V
     147: iconst_1
     148: ireturn

  public E poll();
    Code:
       0: aload_0
       1: getfield      #7                  // Field sequenceBuffer:Ljava/util/concurrent/atomic/AtomicLongArray;
       4: astore_1
       5: aload_0
       6: getfield      #6                  // Field mask:I
       9: istore_2
      10: ldc2_w        #20                 // long -1l
      13: lstore        10
      15: aload_0
      16: invokevirtual #14                 // Method lvConsumerIndex:()J
      19: lstore_3
      20: lload_3
      21: iload_2
      22: invokestatic  #12                 // Method calcSequenceOffset:(JI)I
      25: istore        7
      27: aload_0
      28: aload_1
      29: iload         7
      31: invokevirtual #13                 // Method lvSequence:(Ljava/util/concurrent/atomic/AtomicLongArray;I)J
      34: lstore        5
      36: lload_3
      37: lconst_1
      38: ladd
      39: lstore        8
      41: lload         5
      43: lload         8
      45: lcmp
      46: ifge          76
      49: lload_3
      50: lload         10
      52: lcmp
      53: iflt          70
      56: lload_3
      57: aload_0
      58: invokevirtual #11                 // Method lvProducerIndex:()J
      61: dup2
      62: lstore        10
      64: lcmp
      65: ifne          70
      68: aconst_null
      69: areturn
      70: lload         8
      72: lconst_1
      73: ladd
      74: lstore        5
      76: lload         5
      78: lload         8
      80: lcmp
      81: ifgt          15
      84: aload_0
      85: lload_3
      86: lload_3
      87: lconst_1
      88: ladd
      89: invokevirtual #22                 // Method casConsumerIndex:(JJ)Z
      92: ifeq          15
      95: aload_0
      96: lload_3
      97: iload_2
      98: invokevirtual #17                 // Method calcElementOffset:(JI)I
     101: istore        12
     103: aload_0
     104: getfield      #16                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     107: iload         12
     109: invokestatic  #23                 // Method lpElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
     112: astore        13
     114: aload_0
     115: getfield      #16                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     118: iload         12
     120: aconst_null
     121: invokestatic  #18                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     124: aload_0
     125: aload_1
     126: iload         7
     128: lload_3
     129: iload_2
     130: i2l
     131: ladd
     132: lconst_1
     133: ladd
     134: invokevirtual #19                 // Method soSequence:(Ljava/util/concurrent/atomic/AtomicLongArray;IJ)V
     137: aload         13
     139: areturn

  public E peek();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method lvConsumerIndex:()J
       4: lstore_1
       5: aload_0
       6: getfield      #16                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       9: aload_0
      10: lload_1
      11: invokevirtual #24                 // Method calcElementOffset:(J)I
      14: invokestatic  #23                 // Method lpElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      17: astore_3
      18: aload_3
      19: ifnonnull     31
      22: lload_1
      23: aload_0
      24: invokevirtual #11                 // Method lvProducerIndex:()J
      27: lcmp
      28: ifne          0
      31: aload_3
      32: areturn

  public boolean relaxedOffer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #4                  // class java/lang/NullPointerException
       8: dup
       9: invokespecial #5                  // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: getfield      #6                  // Field mask:I
      17: istore_2
      18: aload_0
      19: getfield      #7                  // Field sequenceBuffer:Ljava/util/concurrent/atomic/AtomicLongArray;
      22: astore_3
      23: aload_0
      24: invokevirtual #11                 // Method lvProducerIndex:()J
      27: lstore        4
      29: lload         4
      31: iload_2
      32: invokestatic  #12                 // Method calcSequenceOffset:(JI)I
      35: istore        6
      37: aload_0
      38: aload_3
      39: iload         6
      41: invokevirtual #13                 // Method lvSequence:(Ljava/util/concurrent/atomic/AtomicLongArray;I)J
      44: lstore        7
      46: lload         7
      48: lload         4
      50: lcmp
      51: ifge          56
      54: iconst_0
      55: ireturn
      56: lload         7
      58: lload         4
      60: lcmp
      61: ifgt          23
      64: aload_0
      65: lload         4
      67: lload         4
      69: lconst_1
      70: ladd
      71: invokevirtual #15                 // Method casProducerIndex:(JJ)Z
      74: ifeq          23
      77: aload_0
      78: getfield      #16                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      81: aload_0
      82: lload         4
      84: iload_2
      85: invokevirtual #17                 // Method calcElementOffset:(JI)I
      88: aload_1
      89: invokestatic  #18                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      92: aload_0
      93: aload_3
      94: iload         6
      96: lload         4
      98: lconst_1
      99: ladd
     100: invokevirtual #19                 // Method soSequence:(Ljava/util/concurrent/atomic/AtomicLongArray;IJ)V
     103: iconst_1
     104: ireturn

  public E relaxedPoll();
    Code:
       0: aload_0
       1: getfield      #7                  // Field sequenceBuffer:Ljava/util/concurrent/atomic/AtomicLongArray;
       4: astore_1
       5: aload_0
       6: getfield      #6                  // Field mask:I
       9: istore_2
      10: aload_0
      11: invokevirtual #14                 // Method lvConsumerIndex:()J
      14: lstore_3
      15: lload_3
      16: iload_2
      17: invokestatic  #12                 // Method calcSequenceOffset:(JI)I
      20: istore        5
      22: aload_0
      23: aload_1
      24: iload         5
      26: invokevirtual #13                 // Method lvSequence:(Ljava/util/concurrent/atomic/AtomicLongArray;I)J
      29: lstore        6
      31: lload_3
      32: lconst_1
      33: ladd
      34: lstore        8
      36: lload         6
      38: lload         8
      40: lcmp
      41: ifge          46
      44: aconst_null
      45: areturn
      46: lload         6
      48: lload         8
      50: lcmp
      51: ifgt          10
      54: aload_0
      55: lload_3
      56: lload_3
      57: lconst_1
      58: ladd
      59: invokevirtual #22                 // Method casConsumerIndex:(JJ)Z
      62: ifeq          10
      65: aload_0
      66: lload_3
      67: iload_2
      68: invokevirtual #17                 // Method calcElementOffset:(JI)I
      71: istore        10
      73: aload_0
      74: getfield      #16                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      77: iload         10
      79: invokestatic  #23                 // Method lpElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      82: astore        11
      84: aload_0
      85: getfield      #16                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      88: iload         10
      90: aconst_null
      91: invokestatic  #18                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      94: aload_0
      95: aload_1
      96: iload         5
      98: lload_3
      99: iload_2
     100: i2l
     101: ladd
     102: lconst_1
     103: ladd
     104: invokevirtual #19                 // Method soSequence:(Ljava/util/concurrent/atomic/AtomicLongArray;IJ)V
     107: aload         11
     109: areturn

  public E relaxedPeek();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method lvConsumerIndex:()J
       4: lstore_1
       5: aload_0
       6: getfield      #16                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       9: aload_0
      10: lload_1
      11: invokevirtual #24                 // Method calcElementOffset:(J)I
      14: invokestatic  #23                 // Method lpElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      17: areturn

  public int drain(org.jctools.queues.MessagePassingQueue$Consumer<E>);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method capacity:()I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     40
      12: iconst_0
      13: istore        4
      15: aload_0
      16: aload_1
      17: getstatic     #26                 // Field org/jctools/util/PortableJvmInfo.RECOMENDED_POLL_BATCH:I
      20: invokevirtual #27                 // Method drain:(Lorg/jctools/queues/MessagePassingQueue$Consumer;I)I
      23: dup
      24: istore        4
      26: ifne          32
      29: goto          40
      32: iload_3
      33: iload         4
      35: iadd
      36: istore_3
      37: goto          7
      40: iload_3
      41: ireturn

  public int fill(org.jctools.queues.MessagePassingQueue$Supplier<E>);
    Code:
       0: lconst_0
       1: lstore_2
       2: aload_0
       3: invokevirtual #25                 // Method capacity:()I
       6: istore        4
       8: aload_0
       9: aload_1
      10: getstatic     #28                 // Field org/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      13: invokevirtual #29                 // Method fill:(Lorg/jctools/queues/MessagePassingQueue$Supplier;I)I
      16: istore        5
      18: iload         5
      20: ifne          26
      23: lload_2
      24: l2i
      25: ireturn
      26: lload_2
      27: iload         5
      29: i2l
      30: ladd
      31: lstore_2
      32: lload_2
      33: iload         4
      35: i2l
      36: lcmp
      37: ifle          8
      40: lload_2
      41: l2i
      42: ireturn

  public int drain(org.jctools.queues.MessagePassingQueue$Consumer<E>, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field sequenceBuffer:Ljava/util/concurrent/atomic/AtomicLongArray;
       4: astore_3
       5: aload_0
       6: getfield      #6                  // Field mask:I
       9: istore        4
      11: aload_0
      12: getfield      #16                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      15: astore        5
      17: iconst_0
      18: istore        13
      20: iload         13
      22: iload_2
      23: if_icmpge     144
      26: aload_0
      27: invokevirtual #14                 // Method lvConsumerIndex:()J
      30: lstore        6
      32: lload         6
      34: iload         4
      36: invokestatic  #12                 // Method calcSequenceOffset:(JI)I
      39: istore        8
      41: aload_0
      42: aload_3
      43: iload         8
      45: invokevirtual #13                 // Method lvSequence:(Ljava/util/concurrent/atomic/AtomicLongArray;I)J
      48: lstore        9
      50: lload         6
      52: lconst_1
      53: ladd
      54: lstore        11
      56: lload         9
      58: lload         11
      60: lcmp
      61: ifge          67
      64: iload         13
      66: ireturn
      67: lload         9
      69: lload         11
      71: lcmp
      72: ifgt          26
      75: aload_0
      76: lload         6
      78: lload         6
      80: lconst_1
      81: ladd
      82: invokevirtual #22                 // Method casConsumerIndex:(JJ)Z
      85: ifeq          26
      88: aload_0
      89: lload         6
      91: iload         4
      93: invokevirtual #17                 // Method calcElementOffset:(JI)I
      96: istore        14
      98: aload         5
     100: iload         14
     102: invokestatic  #23                 // Method lpElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
     105: astore        15
     107: aload         5
     109: iload         14
     111: aconst_null
     112: invokestatic  #18                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     115: aload_0
     116: aload_3
     117: iload         8
     119: lload         6
     121: iload         4
     123: i2l
     124: ladd
     125: lconst_1
     126: ladd
     127: invokevirtual #19                 // Method soSequence:(Ljava/util/concurrent/atomic/AtomicLongArray;IJ)V
     130: aload_1
     131: aload         15
     133: invokeinterface #30,  2           // InterfaceMethod org/jctools/queues/MessagePassingQueue$Consumer.accept:(Ljava/lang/Object;)V
     138: iinc          13, 1
     141: goto          20
     144: iload_2
     145: ireturn

  public int fill(org.jctools.queues.MessagePassingQueue$Supplier<E>, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field sequenceBuffer:Ljava/util/concurrent/atomic/AtomicLongArray;
       4: astore_3
       5: aload_0
       6: getfield      #6                  // Field mask:I
       9: istore        4
      11: aload_0
      12: getfield      #16                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      15: astore        5
      17: iconst_0
      18: istore        11
      20: iload         11
      22: iload_2
      23: if_icmpge     118
      26: aload_0
      27: invokevirtual #11                 // Method lvProducerIndex:()J
      30: lstore        6
      32: lload         6
      34: iload         4
      36: invokestatic  #12                 // Method calcSequenceOffset:(JI)I
      39: istore        8
      41: aload_0
      42: aload_3
      43: iload         8
      45: invokevirtual #13                 // Method lvSequence:(Ljava/util/concurrent/atomic/AtomicLongArray;I)J
      48: lstore        9
      50: lload         9
      52: lload         6
      54: lcmp
      55: ifge          61
      58: iload         11
      60: ireturn
      61: lload         9
      63: lload         6
      65: lcmp
      66: ifgt          26
      69: aload_0
      70: lload         6
      72: lload         6
      74: lconst_1
      75: ladd
      76: invokevirtual #15                 // Method casProducerIndex:(JJ)Z
      79: ifeq          26
      82: aload         5
      84: aload_0
      85: lload         6
      87: iload         4
      89: invokevirtual #17                 // Method calcElementOffset:(JI)I
      92: aload_1
      93: invokeinterface #31,  1           // InterfaceMethod org/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
      98: invokestatic  #18                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     101: aload_0
     102: aload_3
     103: iload         8
     105: lload         6
     107: lconst_1
     108: ladd
     109: invokevirtual #19                 // Method soSequence:(Ljava/util/concurrent/atomic/AtomicLongArray;IJ)V
     112: iinc          11, 1
     115: goto          20
     118: iload_2
     119: ireturn

  public void drain(org.jctools.queues.MessagePassingQueue$Consumer<E>, org.jctools.queues.MessagePassingQueue$WaitStrategy, org.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_3
       4: invokeinterface #32,  1           // InterfaceMethod org/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
       9: ifeq          42
      12: aload_0
      13: aload_1
      14: getstatic     #26                 // Field org/jctools/util/PortableJvmInfo.RECOMENDED_POLL_BATCH:I
      17: invokevirtual #27                 // Method drain:(Lorg/jctools/queues/MessagePassingQueue$Consumer;I)I
      20: ifne          36
      23: aload_2
      24: iload         4
      26: invokeinterface #33,  2           // InterfaceMethod org/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      31: istore        4
      33: goto          3
      36: iconst_0
      37: istore        4
      39: goto          3
      42: return

  public void fill(org.jctools.queues.MessagePassingQueue$Supplier<E>, org.jctools.queues.MessagePassingQueue$WaitStrategy, org.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_3
       4: invokeinterface #32,  1           // InterfaceMethod org/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
       9: ifeq          42
      12: aload_0
      13: aload_1
      14: getstatic     #28                 // Field org/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      17: invokevirtual #29                 // Method fill:(Lorg/jctools/queues/MessagePassingQueue$Supplier;I)I
      20: ifne          36
      23: aload_2
      24: iload         4
      26: invokeinterface #33,  2           // InterfaceMethod org/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      31: istore        4
      33: goto          3
      36: iconst_0
      37: istore        4
      39: goto          3
      42: return

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method org/jctools/queues/atomic/MpmcAtomicArrayQueueL3Pad.clear:()V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method org/jctools/queues/atomic/MpmcAtomicArrayQueueL3Pad.toString:()Ljava/lang/String;
       4: areturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method org/jctools/queues/atomic/MpmcAtomicArrayQueueL3Pad.iterator:()Ljava/util/Iterator;
       4: areturn
}
