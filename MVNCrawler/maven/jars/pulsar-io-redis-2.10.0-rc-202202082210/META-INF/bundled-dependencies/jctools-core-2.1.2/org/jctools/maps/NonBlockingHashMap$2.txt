Compiled from "NonBlockingHashMap.java"
class org.jctools.maps.NonBlockingHashMap$2 extends java.util.AbstractSet<TypeK> {
  final org.jctools.maps.NonBlockingHashMap this$0;

  org.jctools.maps.NonBlockingHashMap$2(org.jctools.maps.NonBlockingHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/util/AbstractSet."<init>":()V
       9: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
       4: invokevirtual #3                  // Method org/jctools/maps/NonBlockingHashMap.clear:()V
       7: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
       4: invokevirtual #4                  // Method org/jctools/maps/NonBlockingHashMap.size:()I
       7: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
       4: aload_1
       5: invokevirtual #5                  // Method org/jctools/maps/NonBlockingHashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
       4: aload_1
       5: invokevirtual #6                  // Method org/jctools/maps/NonBlockingHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public java.util.Iterator<TypeK> iterator();
    Code:
       0: new           #7                  // class org/jctools/maps/NonBlockingHashMap$SnapshotK
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
       8: invokespecial #8                  // Method org/jctools/maps/NonBlockingHashMap$SnapshotK."<init>":(Lorg/jctools/maps/NonBlockingHashMap;)V
      11: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jctools/maps/NonBlockingHashMap;
       4: invokevirtual #9                  // Method org/jctools/maps/NonBlockingHashMap.raw_array:()[Ljava/lang/Object;
       7: astore_2
       8: aload_0
       9: invokevirtual #10                 // Method size:()I
      12: istore_3
      13: aload_1
      14: arraylength
      15: iload_3
      16: if_icmplt     23
      19: aload_1
      20: goto          40
      23: aload_1
      24: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #12                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      30: iload_3
      31: invokestatic  #13                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      34: checkcast     #14                 // class "[Ljava/lang/Object;"
      37: checkcast     #14                 // class "[Ljava/lang/Object;"
      40: astore        4
      42: iconst_0
      43: istore        5
      45: iconst_0
      46: istore        6
      48: iload         6
      50: aload_2
      51: invokestatic  #15                 // Method org/jctools/maps/NonBlockingHashMap.access$800:([Ljava/lang/Object;)I
      54: if_icmpge     167
      57: aload_2
      58: iload         6
      60: invokestatic  #16                 // Method org/jctools/maps/NonBlockingHashMap.access$1300:([Ljava/lang/Object;I)Ljava/lang/Object;
      63: astore        7
      65: aload_2
      66: iload         6
      68: invokestatic  #17                 // Method org/jctools/maps/NonBlockingHashMap.access$1500:([Ljava/lang/Object;I)Ljava/lang/Object;
      71: invokestatic  #18                 // Method org/jctools/maps/NonBlockingHashMap$Prime.unbox:(Ljava/lang/Object;)Ljava/lang/Object;
      74: astore        8
      76: aload         7
      78: ifnull        161
      81: aload         7
      83: getstatic     #19                 // Field org/jctools/maps/NonBlockingHashMap.TOMBSTONE:Ljava/lang/Object;
      86: if_acmpeq     161
      89: aload         8
      91: ifnull        161
      94: aload         8
      96: getstatic     #19                 // Field org/jctools/maps/NonBlockingHashMap.TOMBSTONE:Ljava/lang/Object;
      99: if_acmpeq     161
     102: iload         5
     104: aload         4
     106: arraylength
     107: if_icmplt     151
     110: ldc2_w        #21                 // long 2147483639l
     113: iload         5
     115: i2l
     116: iconst_1
     117: lshl
     118: invokestatic  #23                 // Method java/lang/Math.min:(JJ)J
     121: l2i
     122: istore        9
     124: iload         9
     126: aload         4
     128: arraylength
     129: if_icmpgt     142
     132: new           #24                 // class java/lang/OutOfMemoryError
     135: dup
     136: ldc           #25                 // String Required array size too large
     138: invokespecial #26                 // Method java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
     141: athrow
     142: aload         4
     144: iload         9
     146: invokestatic  #27                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     149: astore        4
     151: aload         4
     153: iload         5
     155: iinc          5, 1
     158: aload         7
     160: aastore
     161: iinc          6, 1
     164: goto          48
     167: iload         5
     169: aload_1
     170: arraylength
     171: if_icmpgt     208
     174: aload_1
     175: aload         4
     177: if_acmpeq     190
     180: aload         4
     182: iconst_0
     183: aload_1
     184: iconst_0
     185: iload         5
     187: invokestatic  #28                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     190: iload         5
     192: aload_1
     193: arraylength
     194: if_icmpge     206
     197: aload         4
     199: iload         5
     201: iinc          5, 1
     204: aconst_null
     205: aastore
     206: aload_1
     207: areturn
     208: aload         4
     210: iload         5
     212: invokestatic  #27                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     215: areturn
}
