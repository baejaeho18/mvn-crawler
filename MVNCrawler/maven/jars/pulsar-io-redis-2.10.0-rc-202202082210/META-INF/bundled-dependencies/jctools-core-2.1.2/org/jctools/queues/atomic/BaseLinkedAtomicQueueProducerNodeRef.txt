Compiled from "BaseLinkedAtomicQueue.java"
abstract class org.jctools.queues.atomic.BaseLinkedAtomicQueueProducerNodeRef<E> extends org.jctools.queues.atomic.BaseLinkedAtomicQueuePad0<E> {
  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.jctools.queues.atomic.BaseLinkedAtomicQueueProducerNodeRef, org.jctools.queues.atomic.LinkedQueueAtomicNode> P_NODE_UPDATER;

  protected volatile org.jctools.queues.atomic.LinkedQueueAtomicNode<E> producerNode;

  org.jctools.queues.atomic.BaseLinkedAtomicQueueProducerNodeRef();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jctools/queues/atomic/BaseLinkedAtomicQueuePad0."<init>":()V
       4: return

  protected final void spProducerNode(org.jctools.queues.atomic.LinkedQueueAtomicNode<E>);
    Code:
       0: getstatic     #2                  // Field P_NODE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: return

  protected final org.jctools.queues.atomic.LinkedQueueAtomicNode<E> lvProducerNode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field producerNode:Lorg/jctools/queues/atomic/LinkedQueueAtomicNode;
       4: areturn

  protected final boolean casProducerNode(org.jctools.queues.atomic.LinkedQueueAtomicNode<E>, org.jctools.queues.atomic.LinkedQueueAtomicNode<E>);
    Code:
       0: getstatic     #2                  // Field P_NODE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ireturn

  protected final org.jctools.queues.atomic.LinkedQueueAtomicNode<E> lpProducerNode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field producerNode:Lorg/jctools/queues/atomic/LinkedQueueAtomicNode;
       4: areturn

  protected final org.jctools.queues.atomic.LinkedQueueAtomicNode<E> xchgProducerNode(org.jctools.queues.atomic.LinkedQueueAtomicNode<E>);
    Code:
       0: getstatic     #2                  // Field P_NODE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #7                  // class org/jctools/queues/atomic/LinkedQueueAtomicNode
      11: areturn

  static {};
    Code:
       0: ldc           #8                  // class org/jctools/queues/atomic/BaseLinkedAtomicQueueProducerNodeRef
       2: ldc           #7                  // class org/jctools/queues/atomic/LinkedQueueAtomicNode
       4: ldc           #9                  // String producerNode
       6: invokestatic  #10                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #2                  // Field P_NODE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: return
}
