Compiled from "ConcurrentQueueSpec.java"
public final class org.jctools.queues.spec.ConcurrentQueueSpec {
  public final int producers;

  public final int consumers;

  public final int capacity;

  public final org.jctools.queues.spec.Ordering ordering;

  public final org.jctools.queues.spec.Preference preference;

  public static org.jctools.queues.spec.ConcurrentQueueSpec createBoundedSpsc(int);
    Code:
       0: new           #1                  // class org/jctools/queues/spec/ConcurrentQueueSpec
       3: dup
       4: iconst_1
       5: iconst_1
       6: iload_0
       7: getstatic     #2                  // Field org/jctools/queues/spec/Ordering.FIFO:Lorg/jctools/queues/spec/Ordering;
      10: getstatic     #3                  // Field org/jctools/queues/spec/Preference.NONE:Lorg/jctools/queues/spec/Preference;
      13: invokespecial #4                  // Method "<init>":(IIILorg/jctools/queues/spec/Ordering;Lorg/jctools/queues/spec/Preference;)V
      16: areturn

  public static org.jctools.queues.spec.ConcurrentQueueSpec createBoundedMpsc(int);
    Code:
       0: new           #1                  // class org/jctools/queues/spec/ConcurrentQueueSpec
       3: dup
       4: iconst_0
       5: iconst_1
       6: iload_0
       7: getstatic     #2                  // Field org/jctools/queues/spec/Ordering.FIFO:Lorg/jctools/queues/spec/Ordering;
      10: getstatic     #3                  // Field org/jctools/queues/spec/Preference.NONE:Lorg/jctools/queues/spec/Preference;
      13: invokespecial #4                  // Method "<init>":(IIILorg/jctools/queues/spec/Ordering;Lorg/jctools/queues/spec/Preference;)V
      16: areturn

  public static org.jctools.queues.spec.ConcurrentQueueSpec createBoundedSpmc(int);
    Code:
       0: new           #1                  // class org/jctools/queues/spec/ConcurrentQueueSpec
       3: dup
       4: iconst_1
       5: iconst_0
       6: iload_0
       7: getstatic     #2                  // Field org/jctools/queues/spec/Ordering.FIFO:Lorg/jctools/queues/spec/Ordering;
      10: getstatic     #3                  // Field org/jctools/queues/spec/Preference.NONE:Lorg/jctools/queues/spec/Preference;
      13: invokespecial #4                  // Method "<init>":(IIILorg/jctools/queues/spec/Ordering;Lorg/jctools/queues/spec/Preference;)V
      16: areturn

  public static org.jctools.queues.spec.ConcurrentQueueSpec createBoundedMpmc(int);
    Code:
       0: new           #1                  // class org/jctools/queues/spec/ConcurrentQueueSpec
       3: dup
       4: iconst_0
       5: iconst_0
       6: iload_0
       7: getstatic     #2                  // Field org/jctools/queues/spec/Ordering.FIFO:Lorg/jctools/queues/spec/Ordering;
      10: getstatic     #3                  // Field org/jctools/queues/spec/Preference.NONE:Lorg/jctools/queues/spec/Preference;
      13: invokespecial #4                  // Method "<init>":(IIILorg/jctools/queues/spec/Ordering;Lorg/jctools/queues/spec/Preference;)V
      16: areturn

  public org.jctools.queues.spec.ConcurrentQueueSpec(int, int, int, org.jctools.queues.spec.Ordering, org.jctools.queues.spec.Preference);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #6                  // Field producers:I
       9: aload_0
      10: iload_2
      11: putfield      #7                  // Field consumers:I
      14: aload_0
      15: iload_3
      16: putfield      #8                  // Field capacity:I
      19: aload_0
      20: aload         4
      22: putfield      #9                  // Field ordering:Lorg/jctools/queues/spec/Ordering;
      25: aload_0
      26: aload         5
      28: putfield      #10                 // Field preference:Lorg/jctools/queues/spec/Preference;
      31: return

  public boolean isSpsc();
    Code:
       0: aload_0
       1: getfield      #7                  // Field consumers:I
       4: iconst_1
       5: if_icmpne     20
       8: aload_0
       9: getfield      #6                  // Field producers:I
      12: iconst_1
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean isMpsc();
    Code:
       0: aload_0
       1: getfield      #7                  // Field consumers:I
       4: iconst_1
       5: if_icmpne     20
       8: aload_0
       9: getfield      #6                  // Field producers:I
      12: iconst_1
      13: if_icmpeq     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean isSpmc();
    Code:
       0: aload_0
       1: getfield      #7                  // Field consumers:I
       4: iconst_1
       5: if_icmpeq     20
       8: aload_0
       9: getfield      #6                  // Field producers:I
      12: iconst_1
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean isMpmc();
    Code:
       0: aload_0
       1: getfield      #7                  // Field consumers:I
       4: iconst_1
       5: if_icmpeq     20
       8: aload_0
       9: getfield      #6                  // Field producers:I
      12: iconst_1
      13: if_icmpeq     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean isBounded();
    Code:
       0: aload_0
       1: getfield      #8                  // Field capacity:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
