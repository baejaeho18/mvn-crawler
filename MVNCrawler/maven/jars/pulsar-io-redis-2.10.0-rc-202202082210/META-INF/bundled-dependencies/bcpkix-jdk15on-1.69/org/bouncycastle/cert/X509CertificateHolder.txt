public class org.bouncycastle.cert.X509CertificateHolder implements org.bouncycastle.util.Encodable,java.io.Serializable {
  private static final long serialVersionUID;

  private transient org.bouncycastle.asn1.x509.Certificate x509Certificate;

  private transient org.bouncycastle.asn1.x509.Extensions extensions;

  private static org.bouncycastle.asn1.x509.Certificate parseBytes(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #249                // Method org/bouncycastle/cert/CertUtils.parseNonEmptyASN1:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
       4: invokestatic  #240                // Method org/bouncycastle/asn1/x509/Certificate.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/Certificate;
       7: areturn
       8: astore_1
       9: new           #115                // class org/bouncycastle/cert/CertIOException
      12: dup
      13: new           #105                // class java/lang/StringBuilder
      16: dup
      17: invokespecial #219                // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #2                  // String malformed data:
      22: invokevirtual #221                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #215                // Method java/lang/ClassCastException.getMessage:()Ljava/lang/String;
      29: invokevirtual #221                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: aload_1
      36: invokespecial #248                // Method org/bouncycastle/cert/CertIOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      39: athrow
      40: astore_1
      41: new           #115                // class org/bouncycastle/cert/CertIOException
      44: dup
      45: new           #105                // class java/lang/StringBuilder
      48: dup
      49: invokespecial #219                // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #2                  // String malformed data:
      54: invokevirtual #221                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_1
      58: invokevirtual #217                // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
      61: invokevirtual #221                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: aload_1
      68: invokespecial #248                // Method org/bouncycastle/cert/CertIOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      71: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/ClassCastException
           0     7    40   Class java/lang/IllegalArgumentException

  public org.bouncycastle.cert.X509CertificateHolder(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #258                // Method parseBytes:([B)Lorg/bouncycastle/asn1/x509/Certificate;
       5: invokespecial #256                // Method "<init>":(Lorg/bouncycastle/asn1/x509/Certificate;)V
       8: return

  public org.bouncycastle.cert.X509CertificateHolder(org.bouncycastle.asn1.x509.Certificate);
    Code:
       0: aload_0
       1: invokespecial #218                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #257                // Method init:(Lorg/bouncycastle/asn1/x509/Certificate;)V
       9: return

  private void init(org.bouncycastle.asn1.x509.Certificate);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       5: aload_0
       6: aload_1
       7: invokevirtual #237                // Method org/bouncycastle/asn1/x509/Certificate.getTBSCertificate:()Lorg/bouncycastle/asn1/x509/TBSCertificate;
      10: invokevirtual #243                // Method org/bouncycastle/asn1/x509/TBSCertificate.getExtensions:()Lorg/bouncycastle/asn1/x509/Extensions;
      13: putfield      #209                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
      16: return

  public int getVersionNumber();
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #227                // Method org/bouncycastle/asn1/x509/Certificate.getVersionNumber:()I
       7: ireturn

  public int getVersion();
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #227                // Method org/bouncycastle/asn1/x509/Certificate.getVersionNumber:()I
       7: ireturn

  public boolean hasExtensions();
    Code:
       0: aload_0
       1: getfield      #209                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.bouncycastle.asn1.x509.Extension getExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier);
    Code:
       0: aload_0
       1: getfield      #209                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: ifnull        16
       7: aload_0
       8: getfield      #209                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
      11: aload_1
      12: invokevirtual #241                // Method org/bouncycastle/asn1/x509/Extensions.getExtension:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)Lorg/bouncycastle/asn1/x509/Extension;
      15: areturn
      16: aconst_null
      17: areturn

  public org.bouncycastle.asn1.x509.Extensions getExtensions();
    Code:
       0: aload_0
       1: getfield      #209                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: areturn

  public java.util.List getExtensionOIDs();
    Code:
       0: aload_0
       1: getfield      #209                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: invokestatic  #250                // Method org/bouncycastle/cert/CertUtils.getExtensionOIDs:(Lorg/bouncycastle/asn1/x509/Extensions;)Ljava/util/List;
       7: areturn

  public java.util.Set getCriticalExtensionOIDs();
    Code:
       0: aload_0
       1: getfield      #209                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: invokestatic  #251                // Method org/bouncycastle/cert/CertUtils.getCriticalExtensionOIDs:(Lorg/bouncycastle/asn1/x509/Extensions;)Ljava/util/Set;
       7: areturn

  public java.util.Set getNonCriticalExtensionOIDs();
    Code:
       0: aload_0
       1: getfield      #209                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: invokestatic  #252                // Method org/bouncycastle/cert/CertUtils.getNonCriticalExtensionOIDs:(Lorg/bouncycastle/asn1/x509/Extensions;)Ljava/util/Set;
       7: areturn

  public java.math.BigInteger getSerialNumber();
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #231                // Method org/bouncycastle/asn1/x509/Certificate.getSerialNumber:()Lorg/bouncycastle/asn1/ASN1Integer;
       7: invokevirtual #224                // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
      10: areturn

  public org.bouncycastle.asn1.x500.X500Name getIssuer();
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #233                // Method org/bouncycastle/asn1/x509/Certificate.getIssuer:()Lorg/bouncycastle/asn1/x500/X500Name;
       7: invokestatic  #226                // Method org/bouncycastle/asn1/x500/X500Name.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x500/X500Name;
      10: areturn

  public org.bouncycastle.asn1.x500.X500Name getSubject();
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #234                // Method org/bouncycastle/asn1/x509/Certificate.getSubject:()Lorg/bouncycastle/asn1/x500/X500Name;
       7: invokestatic  #226                // Method org/bouncycastle/asn1/x500/X500Name.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x500/X500Name;
      10: areturn

  public java.util.Date getNotBefore();
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #239                // Method org/bouncycastle/asn1/x509/Certificate.getStartDate:()Lorg/bouncycastle/asn1/x509/Time;
       7: invokevirtual #245                // Method org/bouncycastle/asn1/x509/Time.getDate:()Ljava/util/Date;
      10: areturn

  public java.util.Date getNotAfter();
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #238                // Method org/bouncycastle/asn1/x509/Certificate.getEndDate:()Lorg/bouncycastle/asn1/x509/Time;
       7: invokevirtual #245                // Method org/bouncycastle/asn1/x509/Time.getDate:()Ljava/util/Date;
      10: areturn

  public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo();
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #236                // Method org/bouncycastle/asn1/x509/Certificate.getSubjectPublicKeyInfo:()Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
       7: areturn

  public org.bouncycastle.asn1.x509.Certificate toASN1Structure();
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: areturn

  public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm();
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #235                // Method org/bouncycastle/asn1/x509/Certificate.getSignatureAlgorithm:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
       7: areturn

  public byte[] getSignature();
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #232                // Method org/bouncycastle/asn1/x509/Certificate.getSignature:()Lorg/bouncycastle/asn1/DERBitString;
       7: invokevirtual #225                // Method org/bouncycastle/asn1/DERBitString.getOctets:()[B
      10: areturn

  public boolean isValidOn(java.util.Date);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       5: invokevirtual #239                // Method org/bouncycastle/asn1/x509/Certificate.getStartDate:()Lorg/bouncycastle/asn1/x509/Time;
       8: invokevirtual #245                // Method org/bouncycastle/asn1/x509/Time.getDate:()Ljava/util/Date;
      11: invokevirtual #223                // Method java/util/Date.before:(Ljava/util/Date;)Z
      14: ifne          38
      17: aload_1
      18: aload_0
      19: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
      22: invokevirtual #238                // Method org/bouncycastle/asn1/x509/Certificate.getEndDate:()Lorg/bouncycastle/asn1/x509/Time;
      25: invokevirtual #245                // Method org/bouncycastle/asn1/x509/Time.getDate:()Ljava/util/Date;
      28: invokevirtual #222                // Method java/util/Date.after:(Ljava/util/Date;)Z
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public boolean isSignatureValid(org.bouncycastle.operator.ContentVerifierProvider) throws org.bouncycastle.cert.CertException;
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #237                // Method org/bouncycastle/asn1/x509/Certificate.getTBSCertificate:()Lorg/bouncycastle/asn1/x509/TBSCertificate;
       7: astore_2
       8: aload_2
       9: invokevirtual #242                // Method org/bouncycastle/asn1/x509/TBSCertificate.getSignature:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
      12: aload_0
      13: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
      16: invokevirtual #235                // Method org/bouncycastle/asn1/x509/Certificate.getSignatureAlgorithm:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
      19: invokestatic  #253                // Method org/bouncycastle/cert/CertUtils.isAlgIdEqual:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;)Z
      22: ifne          35
      25: new           #114                // class org/bouncycastle/cert/CertException
      28: dup
      29: ldc           #3                  // String signature invalid - algorithm identifier mismatch
      31: invokespecial #246                // Method org/bouncycastle/cert/CertException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_1
      36: aload_2
      37: invokevirtual #242                // Method org/bouncycastle/asn1/x509/TBSCertificate.getSignature:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
      40: invokeinterface #261,  2          // InterfaceMethod org/bouncycastle/operator/ContentVerifierProvider.get:(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;)Lorg/bouncycastle/operator/ContentVerifier;
      45: astore_3
      46: aload_3
      47: invokeinterface #260,  1          // InterfaceMethod org/bouncycastle/operator/ContentVerifier.getOutputStream:()Ljava/io/OutputStream;
      52: astore        4
      54: aload_2
      55: aload         4
      57: ldc           #1                  // String DER
      59: invokevirtual #244                // Method org/bouncycastle/asn1/x509/TBSCertificate.encodeTo:(Ljava/io/OutputStream;Ljava/lang/String;)V
      62: aload         4
      64: invokevirtual #214                // Method java/io/OutputStream.close:()V
      67: goto          105
      70: astore        4
      72: new           #114                // class org/bouncycastle/cert/CertException
      75: dup
      76: new           #105                // class java/lang/StringBuilder
      79: dup
      80: invokespecial #219                // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #4                  // String unable to process signature:
      85: invokevirtual #221                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload         4
      90: invokevirtual #216                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      93: invokevirtual #221                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: aload         4
     101: invokespecial #247                // Method org/bouncycastle/cert/CertException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     104: athrow
     105: aload_3
     106: aload_0
     107: invokevirtual #255                // Method getSignature:()[B
     110: invokeinterface #259,  2          // InterfaceMethod org/bouncycastle/operator/ContentVerifier.verify:([B)Z
     115: ireturn
    Exception table:
       from    to  target type
          35    67    70   Class java/lang/Exception

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #117                // class org/bouncycastle/cert/X509CertificateHolder
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #117                // class org/bouncycastle/cert/X509CertificateHolder
      20: astore_2
      21: aload_0
      22: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
      25: aload_2
      26: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
      29: invokevirtual #230                // Method org/bouncycastle/asn1/x509/Certificate.equals:(Ljava/lang/Object;)Z
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #228                // Method org/bouncycastle/asn1/x509/Certificate.hashCode:()I
       7: ireturn

  public byte[] getEncoded() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #208                // Field x509Certificate:Lorg/bouncycastle/asn1/x509/Certificate;
       4: invokevirtual #229                // Method org/bouncycastle/asn1/x509/Certificate.getEncoded:()[B
       7: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #210                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #211                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       9: invokestatic  #240                // Method org/bouncycastle/asn1/x509/Certificate.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/Certificate;
      12: invokespecial #257                // Method init:(Lorg/bouncycastle/asn1/x509/Certificate;)V
      15: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #212                // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #254                // Method getEncoded:()[B
       9: invokevirtual #213                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      12: return
}
