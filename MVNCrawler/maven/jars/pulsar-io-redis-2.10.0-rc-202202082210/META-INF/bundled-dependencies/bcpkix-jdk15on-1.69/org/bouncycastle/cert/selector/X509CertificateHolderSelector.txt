public class org.bouncycastle.cert.selector.X509CertificateHolderSelector implements org.bouncycastle.util.Selector {
  private byte[] subjectKeyId;

  private org.bouncycastle.asn1.x500.X500Name issuer;

  private java.math.BigInteger serialNumber;

  public org.bouncycastle.cert.selector.X509CertificateHolderSelector(byte[]);
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: aload_1
       4: invokespecial #122                // Method "<init>":(Lorg/bouncycastle/asn1/x500/X500Name;Ljava/math/BigInteger;[B)V
       7: return

  public org.bouncycastle.cert.selector.X509CertificateHolderSelector(org.bouncycastle.asn1.x500.X500Name, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #122                // Method "<init>":(Lorg/bouncycastle/asn1/x500/X500Name;Ljava/math/BigInteger;[B)V
       7: return

  public org.bouncycastle.cert.selector.X509CertificateHolderSelector(org.bouncycastle.asn1.x500.X500Name, java.math.BigInteger, byte[]);
    Code:
       0: aload_0
       1: invokespecial #104                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #103                // Field issuer:Lorg/bouncycastle/asn1/x500/X500Name;
       9: aload_0
      10: aload_2
      11: putfield      #102                // Field serialNumber:Ljava/math/BigInteger;
      14: aload_0
      15: aload_3
      16: putfield      #101                // Field subjectKeyId:[B
      19: return

  public org.bouncycastle.asn1.x500.X500Name getIssuer();
    Code:
       0: aload_0
       1: getfield      #103                // Field issuer:Lorg/bouncycastle/asn1/x500/X500Name;
       4: areturn

  public java.math.BigInteger getSerialNumber();
    Code:
       0: aload_0
       1: getfield      #102                // Field serialNumber:Ljava/math/BigInteger;
       4: areturn

  public byte[] getSubjectKeyIdentifier();
    Code:
       0: aload_0
       1: getfield      #101                // Field subjectKeyId:[B
       4: invokestatic  #124                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #101                // Field subjectKeyId:[B
       4: invokestatic  #123                // Method org/bouncycastle/util/Arrays.hashCode:([B)I
       7: istore_1
       8: aload_0
       9: getfield      #102                // Field serialNumber:Ljava/math/BigInteger;
      12: ifnull        25
      15: iload_1
      16: aload_0
      17: getfield      #102                // Field serialNumber:Ljava/math/BigInteger;
      20: invokevirtual #106                // Method java/math/BigInteger.hashCode:()I
      23: ixor
      24: istore_1
      25: aload_0
      26: getfield      #103                // Field issuer:Lorg/bouncycastle/asn1/x500/X500Name;
      29: ifnull        42
      32: iload_1
      33: aload_0
      34: getfield      #103                // Field issuer:Lorg/bouncycastle/asn1/x500/X500Name;
      37: invokevirtual #113                // Method org/bouncycastle/asn1/x500/X500Name.hashCode:()I
      40: ixor
      41: istore_1
      42: iload_1
      43: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #54                 // class org/bouncycastle/cert/selector/X509CertificateHolderSelector
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #54                 // class org/bouncycastle/cert/selector/X509CertificateHolderSelector
      13: astore_2
      14: aload_0
      15: getfield      #101                // Field subjectKeyId:[B
      18: aload_2
      19: getfield      #101                // Field subjectKeyId:[B
      22: invokestatic  #125                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      25: ifeq          62
      28: aload_0
      29: aload_0
      30: getfield      #102                // Field serialNumber:Ljava/math/BigInteger;
      33: aload_2
      34: getfield      #102                // Field serialNumber:Ljava/math/BigInteger;
      37: invokespecial #121                // Method equalsObj:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifeq          62
      43: aload_0
      44: aload_0
      45: getfield      #103                // Field issuer:Lorg/bouncycastle/asn1/x500/X500Name;
      48: aload_2
      49: getfield      #103                // Field issuer:Lorg/bouncycastle/asn1/x500/X500Name;
      52: invokespecial #121                // Method equalsObj:(Ljava/lang/Object;Ljava/lang/Object;)Z
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ireturn

  private boolean equalsObj(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_1
       5: aload_2
       6: invokevirtual #105                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: goto          21
      12: aload_2
      13: ifnonnull     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean match(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #52                 // class org/bouncycastle/cert/X509CertificateHolder
       4: ifeq          124
       7: aload_1
       8: checkcast     #52                 // class org/bouncycastle/cert/X509CertificateHolder
      11: astore_2
      12: aload_0
      13: invokevirtual #120                // Method getSerialNumber:()Ljava/math/BigInteger;
      16: ifnull        65
      19: new           #49                 // class org/bouncycastle/asn1/cms/IssuerAndSerialNumber
      22: dup
      23: aload_2
      24: invokevirtual #116                // Method org/bouncycastle/cert/X509CertificateHolder.toASN1Structure:()Lorg/bouncycastle/asn1/x509/Certificate;
      27: invokespecial #112                // Method org/bouncycastle/asn1/cms/IssuerAndSerialNumber."<init>":(Lorg/bouncycastle/asn1/x509/Certificate;)V
      30: astore_3
      31: aload_3
      32: invokevirtual #111                // Method org/bouncycastle/asn1/cms/IssuerAndSerialNumber.getName:()Lorg/bouncycastle/asn1/x500/X500Name;
      35: aload_0
      36: getfield      #103                // Field issuer:Lorg/bouncycastle/asn1/x500/X500Name;
      39: invokevirtual #114                // Method org/bouncycastle/asn1/x500/X500Name.equals:(Ljava/lang/Object;)Z
      42: ifeq          63
      45: aload_3
      46: invokevirtual #110                // Method org/bouncycastle/asn1/cms/IssuerAndSerialNumber.getSerialNumber:()Lorg/bouncycastle/asn1/ASN1Integer;
      49: aload_0
      50: getfield      #102                // Field serialNumber:Ljava/math/BigInteger;
      53: invokevirtual #107                // Method org/bouncycastle/asn1/ASN1Integer.hasValue:(Ljava/math/BigInteger;)Z
      56: ifeq          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: ireturn
      65: aload_0
      66: getfield      #101                // Field subjectKeyId:[B
      69: ifnull        121
      72: aload_2
      73: getstatic     #100                // Field org/bouncycastle/asn1/x509/Extension.subjectKeyIdentifier:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      76: invokevirtual #118                // Method org/bouncycastle/cert/X509CertificateHolder.getExtension:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)Lorg/bouncycastle/asn1/x509/Extension;
      79: astore_3
      80: aload_3
      81: ifnonnull     99
      84: aload_0
      85: getfield      #101                // Field subjectKeyId:[B
      88: aload_2
      89: invokevirtual #117                // Method org/bouncycastle/cert/X509CertificateHolder.getSubjectPublicKeyInfo:()Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      92: invokestatic  #119                // Method org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator.calculateKeyId:(Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;)[B
      95: invokestatic  #125                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      98: ireturn
      99: aload_3
     100: invokevirtual #115                // Method org/bouncycastle/asn1/x509/Extension.getParsedValue:()Lorg/bouncycastle/asn1/ASN1Encodable;
     103: invokestatic  #109                // Method org/bouncycastle/asn1/ASN1OctetString.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1OctetString;
     106: invokevirtual #108                // Method org/bouncycastle/asn1/ASN1OctetString.getOctets:()[B
     109: astore        4
     111: aload_0
     112: getfield      #101                // Field subjectKeyId:[B
     115: aload         4
     117: invokestatic  #125                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
     120: ireturn
     121: goto          146
     124: aload_1
     125: instanceof    #44                 // class "[B"
     128: ifeq          146
     131: aload_0
     132: getfield      #101                // Field subjectKeyId:[B
     135: aload_1
     136: checkcast     #44                 // class "[B"
     139: checkcast     #44                 // class "[B"
     142: invokestatic  #125                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
     145: ireturn
     146: iconst_0
     147: ireturn

  public java.lang.Object clone();
    Code:
       0: new           #54                 // class org/bouncycastle/cert/selector/X509CertificateHolderSelector
       3: dup
       4: aload_0
       5: getfield      #103                // Field issuer:Lorg/bouncycastle/asn1/x500/X500Name;
       8: aload_0
       9: getfield      #102                // Field serialNumber:Ljava/math/BigInteger;
      12: aload_0
      13: getfield      #101                // Field subjectKeyId:[B
      16: invokespecial #122                // Method "<init>":(Lorg/bouncycastle/asn1/x500/X500Name;Ljava/math/BigInteger;[B)V
      19: areturn
}
