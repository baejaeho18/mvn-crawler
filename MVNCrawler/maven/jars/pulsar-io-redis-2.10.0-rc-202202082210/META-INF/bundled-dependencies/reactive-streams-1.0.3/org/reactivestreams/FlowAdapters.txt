Compiled from "FlowAdapters.java"
public final class org.reactivestreams.FlowAdapters {
  private org.reactivestreams.FlowAdapters();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: new           #2                  // class java/lang/IllegalStateException
       7: dup
       8: ldc           #3                  // String No instances!
      10: invokespecial #4                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      13: athrow

  public static <T> org.reactivestreams.Publisher<T> toPublisher(java.util.concurrent.Flow$Publisher<? extends T>);
    Code:
       0: aload_0
       1: ldc           #5                  // String flowPublisher
       3: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: instanceof    #7                  // class org/reactivestreams/FlowAdapters$FlowPublisherFromReactive
      11: ifeq          25
      14: aload_0
      15: checkcast     #7                  // class org/reactivestreams/FlowAdapters$FlowPublisherFromReactive
      18: getfield      #8                  // Field org/reactivestreams/FlowAdapters$FlowPublisherFromReactive.reactiveStreams:Lorg/reactivestreams/Publisher;
      21: astore_1
      22: goto          49
      25: aload_0
      26: instanceof    #9                  // class org/reactivestreams/Publisher
      29: ifeq          40
      32: aload_0
      33: checkcast     #9                  // class org/reactivestreams/Publisher
      36: astore_1
      37: goto          49
      40: new           #10                 // class org/reactivestreams/FlowAdapters$ReactivePublisherFromFlow
      43: dup
      44: aload_0
      45: invokespecial #11                 // Method org/reactivestreams/FlowAdapters$ReactivePublisherFromFlow."<init>":(Ljava/util/concurrent/Flow$Publisher;)V
      48: astore_1
      49: aload_1
      50: areturn

  public static <T> java.util.concurrent.Flow$Publisher<T> toFlowPublisher(org.reactivestreams.Publisher<? extends T>);
    Code:
       0: aload_0
       1: ldc           #12                 // String reactiveStreamsPublisher
       3: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: instanceof    #10                 // class org/reactivestreams/FlowAdapters$ReactivePublisherFromFlow
      11: ifeq          25
      14: aload_0
      15: checkcast     #10                 // class org/reactivestreams/FlowAdapters$ReactivePublisherFromFlow
      18: getfield      #13                 // Field org/reactivestreams/FlowAdapters$ReactivePublisherFromFlow.flow:Ljava/util/concurrent/Flow$Publisher;
      21: astore_1
      22: goto          49
      25: aload_0
      26: instanceof    #14                 // class java/util/concurrent/Flow$Publisher
      29: ifeq          40
      32: aload_0
      33: checkcast     #14                 // class java/util/concurrent/Flow$Publisher
      36: astore_1
      37: goto          49
      40: new           #7                  // class org/reactivestreams/FlowAdapters$FlowPublisherFromReactive
      43: dup
      44: aload_0
      45: invokespecial #15                 // Method org/reactivestreams/FlowAdapters$FlowPublisherFromReactive."<init>":(Lorg/reactivestreams/Publisher;)V
      48: astore_1
      49: aload_1
      50: areturn

  public static <T, U> org.reactivestreams.Processor<T, U> toProcessor(java.util.concurrent.Flow$Processor<? super T, ? extends U>);
    Code:
       0: aload_0
       1: ldc           #16                 // String flowProcessor
       3: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: instanceof    #17                 // class org/reactivestreams/FlowAdapters$FlowToReactiveProcessor
      11: ifeq          25
      14: aload_0
      15: checkcast     #17                 // class org/reactivestreams/FlowAdapters$FlowToReactiveProcessor
      18: getfield      #18                 // Field org/reactivestreams/FlowAdapters$FlowToReactiveProcessor.reactiveStreams:Lorg/reactivestreams/Processor;
      21: astore_1
      22: goto          49
      25: aload_0
      26: instanceof    #19                 // class org/reactivestreams/Processor
      29: ifeq          40
      32: aload_0
      33: checkcast     #19                 // class org/reactivestreams/Processor
      36: astore_1
      37: goto          49
      40: new           #20                 // class org/reactivestreams/FlowAdapters$ReactiveToFlowProcessor
      43: dup
      44: aload_0
      45: invokespecial #21                 // Method org/reactivestreams/FlowAdapters$ReactiveToFlowProcessor."<init>":(Ljava/util/concurrent/Flow$Processor;)V
      48: astore_1
      49: aload_1
      50: areturn

  public static <T, U> java.util.concurrent.Flow$Processor<T, U> toFlowProcessor(org.reactivestreams.Processor<? super T, ? extends U>);
    Code:
       0: aload_0
       1: ldc           #22                 // String reactiveStreamsProcessor
       3: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: instanceof    #20                 // class org/reactivestreams/FlowAdapters$ReactiveToFlowProcessor
      11: ifeq          25
      14: aload_0
      15: checkcast     #20                 // class org/reactivestreams/FlowAdapters$ReactiveToFlowProcessor
      18: getfield      #23                 // Field org/reactivestreams/FlowAdapters$ReactiveToFlowProcessor.flow:Ljava/util/concurrent/Flow$Processor;
      21: astore_1
      22: goto          49
      25: aload_0
      26: instanceof    #24                 // class java/util/concurrent/Flow$Processor
      29: ifeq          40
      32: aload_0
      33: checkcast     #24                 // class java/util/concurrent/Flow$Processor
      36: astore_1
      37: goto          49
      40: new           #17                 // class org/reactivestreams/FlowAdapters$FlowToReactiveProcessor
      43: dup
      44: aload_0
      45: invokespecial #25                 // Method org/reactivestreams/FlowAdapters$FlowToReactiveProcessor."<init>":(Lorg/reactivestreams/Processor;)V
      48: astore_1
      49: aload_1
      50: areturn

  public static <T> java.util.concurrent.Flow$Subscriber<T> toFlowSubscriber(org.reactivestreams.Subscriber<T>);
    Code:
       0: aload_0
       1: ldc           #26                 // String reactiveStreamsSubscriber
       3: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: instanceof    #27                 // class org/reactivestreams/FlowAdapters$ReactiveToFlowSubscriber
      11: ifeq          25
      14: aload_0
      15: checkcast     #27                 // class org/reactivestreams/FlowAdapters$ReactiveToFlowSubscriber
      18: getfield      #28                 // Field org/reactivestreams/FlowAdapters$ReactiveToFlowSubscriber.flow:Ljava/util/concurrent/Flow$Subscriber;
      21: astore_1
      22: goto          49
      25: aload_0
      26: instanceof    #29                 // class java/util/concurrent/Flow$Subscriber
      29: ifeq          40
      32: aload_0
      33: checkcast     #29                 // class java/util/concurrent/Flow$Subscriber
      36: astore_1
      37: goto          49
      40: new           #30                 // class org/reactivestreams/FlowAdapters$FlowToReactiveSubscriber
      43: dup
      44: aload_0
      45: invokespecial #31                 // Method org/reactivestreams/FlowAdapters$FlowToReactiveSubscriber."<init>":(Lorg/reactivestreams/Subscriber;)V
      48: astore_1
      49: aload_1
      50: areturn

  public static <T> org.reactivestreams.Subscriber<T> toSubscriber(java.util.concurrent.Flow$Subscriber<T>);
    Code:
       0: aload_0
       1: ldc           #32                 // String flowSubscriber
       3: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: instanceof    #30                 // class org/reactivestreams/FlowAdapters$FlowToReactiveSubscriber
      11: ifeq          25
      14: aload_0
      15: checkcast     #30                 // class org/reactivestreams/FlowAdapters$FlowToReactiveSubscriber
      18: getfield      #33                 // Field org/reactivestreams/FlowAdapters$FlowToReactiveSubscriber.reactiveStreams:Lorg/reactivestreams/Subscriber;
      21: astore_1
      22: goto          49
      25: aload_0
      26: instanceof    #34                 // class org/reactivestreams/Subscriber
      29: ifeq          40
      32: aload_0
      33: checkcast     #34                 // class org/reactivestreams/Subscriber
      36: astore_1
      37: goto          49
      40: new           #27                 // class org/reactivestreams/FlowAdapters$ReactiveToFlowSubscriber
      43: dup
      44: aload_0
      45: invokespecial #35                 // Method org/reactivestreams/FlowAdapters$ReactiveToFlowSubscriber."<init>":(Ljava/util/concurrent/Flow$Subscriber;)V
      48: astore_1
      49: aload_1
      50: areturn
}
