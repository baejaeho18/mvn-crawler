Compiled from "FlowAdapters.java"
final class org.reactivestreams.FlowAdapters$ReactivePublisherFromFlow<T> implements org.reactivestreams.Publisher<T> {
  final java.util.concurrent.Flow$Publisher<? extends T> flow;

  public org.reactivestreams.FlowAdapters$ReactivePublisherFromFlow(java.util.concurrent.Flow$Publisher<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field flow:Ljava/util/concurrent/Flow$Publisher;
       9: return

  public void subscribe(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field flow:Ljava/util/concurrent/Flow$Publisher;
       4: aload_1
       5: ifnonnull     12
       8: aconst_null
       9: goto          20
      12: new           #3                  // class org/reactivestreams/FlowAdapters$FlowToReactiveSubscriber
      15: dup
      16: aload_1
      17: invokespecial #4                  // Method org/reactivestreams/FlowAdapters$FlowToReactiveSubscriber."<init>":(Lorg/reactivestreams/Subscriber;)V
      20: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/Flow$Publisher.subscribe:(Ljava/util/concurrent/Flow$Subscriber;)V
      25: return
}
