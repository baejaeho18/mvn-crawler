Compiled from "FlowAdapters.java"
final class org.reactivestreams.FlowAdapters$ReactiveToFlowProcessor<T, U> implements org.reactivestreams.Processor<T, U> {
  final java.util.concurrent.Flow$Processor<? super T, ? extends U> flow;

  public org.reactivestreams.FlowAdapters$ReactiveToFlowProcessor(java.util.concurrent.Flow$Processor<? super T, ? extends U>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field flow:Ljava/util/concurrent/Flow$Processor;
       9: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #2                  // Field flow:Ljava/util/concurrent/Flow$Processor;
       4: aload_1
       5: ifnonnull     12
       8: aconst_null
       9: goto          20
      12: new           #3                  // class org/reactivestreams/FlowAdapters$FlowToReactiveSubscription
      15: dup
      16: aload_1
      17: invokespecial #4                  // Method org/reactivestreams/FlowAdapters$FlowToReactiveSubscription."<init>":(Lorg/reactivestreams/Subscription;)V
      20: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/Flow$Processor.onSubscribe:(Ljava/util/concurrent/Flow$Subscription;)V
      25: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field flow:Ljava/util/concurrent/Flow$Processor;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/Flow$Processor.onNext:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field flow:Ljava/util/concurrent/Flow$Processor;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/concurrent/Flow$Processor.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field flow:Ljava/util/concurrent/Flow$Processor;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/Flow$Processor.onComplete:()V
       9: return

  public void subscribe(org.reactivestreams.Subscriber<? super U>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field flow:Ljava/util/concurrent/Flow$Processor;
       4: aload_1
       5: ifnonnull     12
       8: aconst_null
       9: goto          20
      12: new           #9                  // class org/reactivestreams/FlowAdapters$FlowToReactiveSubscriber
      15: dup
      16: aload_1
      17: invokespecial #10                 // Method org/reactivestreams/FlowAdapters$FlowToReactiveSubscriber."<init>":(Lorg/reactivestreams/Subscriber;)V
      20: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/Flow$Processor.subscribe:(Ljava/util/concurrent/Flow$Subscriber;)V
      25: return
}
