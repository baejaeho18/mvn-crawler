Compiled from "AbstractLongCrc.java"
abstract class com.scurrilous.circe.crc.AbstractLongCrc extends com.scurrilous.circe.impl.AbstractIncrementalLongHash {
  private final java.lang.String algorithm;

  protected final int bitWidth;

  private final long initial;

  private final long xorOut;

  com.scurrilous.circe.crc.AbstractLongCrc(java.lang.String, int, long, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/scurrilous/circe/impl/AbstractIncrementalLongHash."<init>":()V
       4: iload_2
       5: iconst_1
       6: if_icmplt     15
       9: iload_2
      10: bipush        64
      12: if_icmple     25
      15: new           #2                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #3                  // String invalid CRC width
      21: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: aload_1
      27: putfield      #5                  // Field algorithm:Ljava/lang/String;
      30: aload_0
      31: iload_2
      32: putfield      #6                  // Field bitWidth:I
      35: aload_0
      36: lload_3
      37: putfield      #7                  // Field initial:J
      40: aload_0
      41: lload         5
      43: putfield      #8                  // Field xorOut:J
      46: return

  public java.lang.String algorithm();
    Code:
       0: aload_0
       1: getfield      #5                  // Field algorithm:Ljava/lang/String;
       4: areturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bitWidth:I
       4: bipush        7
       6: iadd
       7: bipush        8
       9: idiv
      10: ireturn

  protected long initial();
    Code:
       0: aload_0
       1: getfield      #7                  // Field initial:J
       4: aload_0
       5: getfield      #8                  // Field xorOut:J
       8: lxor
       9: lreturn

  protected long resumeUnchecked(long, byte[], int, int);
    Code:
       0: aload_0
       1: lload_1
       2: aload_0
       3: getfield      #8                  // Field xorOut:J
       6: lxor
       7: aload_3
       8: iload         4
      10: iload         5
      12: invokevirtual #9                  // Method resumeRaw:(J[BII)J
      15: aload_0
      16: getfield      #8                  // Field xorOut:J
      19: lxor
      20: lreturn

  protected abstract long resumeRaw(long, byte[], int, int);

  protected final long reflect(long);
    Code:
       0: lload_1
       1: invokestatic  #10                 // Method java/lang/Long.reverse:(J)J
       4: bipush        64
       6: aload_0
       7: getfield      #6                  // Field bitWidth:I
      10: isub
      11: lushr
      12: lreturn
}
