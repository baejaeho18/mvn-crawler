Compiled from "ObjectGraphImpl.java"
final class org.glassfish.jersey.message.filtering.ObjectGraphImpl implements org.glassfish.jersey.message.filtering.spi.ObjectGraph {
  private final java.util.Set<java.lang.String> filteringScopes;

  private final java.util.Map<java.lang.Class<?>, org.glassfish.jersey.message.filtering.spi.EntityGraph> classToGraph;

  private final org.glassfish.jersey.message.filtering.spi.EntityGraph graph;

  private java.util.Set<java.lang.String> fields;

  private java.util.Map<java.lang.String, org.glassfish.jersey.message.filtering.spi.ObjectGraph> subgraphs;

  org.glassfish.jersey.message.filtering.ObjectGraphImpl(java.util.Map<java.lang.Class<?>, org.glassfish.jersey.message.filtering.spi.EntityGraph>, org.glassfish.jersey.message.filtering.spi.EntityGraph, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_3
       6: putfield      #1                  // Field filteringScopes:Ljava/util/Set;
       9: aload_0
      10: aload_1
      11: putfield      #2                  // Field classToGraph:Ljava/util/Map;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field graph:Lorg/glassfish/jersey/message/filtering/spi/EntityGraph;
      19: return

  public java.lang.Class<?> getEntityClass();
    Code:
       0: aload_0
       1: getfield      #4                  // Field graph:Lorg/glassfish/jersey/message/filtering/spi/EntityGraph;
       4: invokeinterface #5,  1            // InterfaceMethod org/glassfish/jersey/message/filtering/spi/EntityGraph.getEntityClass:()Ljava/lang/Class;
       9: areturn

  public java.util.Set<java.lang.String> getFields();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #6                  // Method getFields:(Ljava/lang/String;)Ljava/util/Set;
       5: areturn

  public java.util.Set<java.lang.String> getFields(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method getFilteringScopes:(Ljava/lang/String;)Ljava/util/Set;
       5: astore_2
       6: aload_0
       7: getfield      #8                  // Field fields:Ljava/util/Set;
      10: ifnonnull     36
      13: aload_0
      14: aload_0
      15: getfield      #4                  // Field graph:Lorg/glassfish/jersey/message/filtering/spi/EntityGraph;
      18: aload_2
      19: getstatic     #9                  // Field org/glassfish/jersey/message/filtering/spi/ScopeProvider.DEFAULT_SCOPE:Ljava/lang/String;
      22: invokestatic  #10                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      25: invokestatic  #11                 // Method org/glassfish/jersey/internal/util/collection/Views.setUnionView:(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;
      28: invokeinterface #12,  2           // InterfaceMethod org/glassfish/jersey/message/filtering/spi/EntityGraph.getFields:(Ljava/util/Set;)Ljava/util/Set;
      33: putfield      #8                  // Field fields:Ljava/util/Set;
      36: aload_0
      37: getfield      #8                  // Field fields:Ljava/util/Set;
      40: areturn

  public java.util.Map<java.lang.String, org.glassfish.jersey.message.filtering.spi.ObjectGraph> getSubgraphs();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #13                 // Method getSubgraphs:(Ljava/lang/String;)Ljava/util/Map;
       5: areturn

  public java.util.Map<java.lang.String, org.glassfish.jersey.message.filtering.spi.ObjectGraph> getSubgraphs(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method getFilteringScopes:(Ljava/lang/String;)Ljava/util/Set;
       5: astore_2
       6: aload_0
       7: getfield      #14                 // Field subgraphs:Ljava/util/Map;
      10: ifnonnull     58
      13: aload_0
      14: getfield      #4                  // Field graph:Lorg/glassfish/jersey/message/filtering/spi/EntityGraph;
      17: aload_2
      18: invokeinterface #15,  2           // InterfaceMethod org/glassfish/jersey/message/filtering/spi/EntityGraph.getSubgraphs:(Ljava/util/Set;)Ljava/util/Map;
      23: astore_3
      24: aload_3
      25: aload_0
      26: getfield      #4                  // Field graph:Lorg/glassfish/jersey/message/filtering/spi/EntityGraph;
      29: getstatic     #9                  // Field org/glassfish/jersey/message/filtering/spi/ScopeProvider.DEFAULT_SCOPE:Ljava/lang/String;
      32: invokeinterface #16,  2           // InterfaceMethod org/glassfish/jersey/message/filtering/spi/EntityGraph.getSubgraphs:(Ljava/lang/String;)Ljava/util/Map;
      37: invokeinterface #17,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      42: aload_0
      43: aload_3
      44: new           #18                 // class org/glassfish/jersey/message/filtering/ObjectGraphImpl$1
      47: dup
      48: aload_0
      49: invokespecial #19                 // Method org/glassfish/jersey/message/filtering/ObjectGraphImpl$1."<init>":(Lorg/glassfish/jersey/message/filtering/ObjectGraphImpl;)V
      52: invokestatic  #20                 // Method org/glassfish/jersey/internal/util/collection/Views.mapView:(Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/Map;
      55: putfield      #14                 // Field subgraphs:Ljava/util/Map;
      58: aload_0
      59: getfield      #14                 // Field subgraphs:Ljava/util/Map;
      62: areturn

  private java.util.Set<java.lang.String> getFilteringScopes(java.lang.String);
    Code:
       0: new           #21                 // class java/util/HashSet
       3: dup
       4: invokespecial #22                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #1                  // Field filteringScopes:Ljava/util/Set;
      12: getstatic     #23                 // Field org/glassfish/jersey/message/filtering/SelectableScopeResolver.DEFAULT_SCOPE:Ljava/lang/String;
      15: invokeinterface #24,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      20: ifne          27
      23: aload_1
      24: ifnonnull     35
      27: aload_0
      28: getfield      #1                  // Field filteringScopes:Ljava/util/Set;
      31: astore_2
      32: goto          159
      35: aload_0
      36: getfield      #1                  // Field filteringScopes:Ljava/util/Set;
      39: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      44: astore_3
      45: aload_3
      46: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          159
      54: aload_3
      55: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #28                 // class java/lang/String
      63: astore        4
      65: new           #29                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      72: getstatic     #31                 // Field org/glassfish/jersey/message/filtering/SelectableScopeResolver.PREFIX:Ljava/lang/String;
      75: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_1
      79: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: ldc           #33                 // String \\.(\\w+)(\\.\\w+)*$
      84: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokestatic  #35                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      93: astore        5
      95: aload         5
      97: aload         4
      99: invokevirtual #36                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     102: astore        6
     104: aload         6
     106: invokevirtual #37                 // Method java/util/regex/Matcher.matches:()Z
     109: ifeq          147
     112: aload_2
     113: new           #29                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     120: getstatic     #31                 // Field org/glassfish/jersey/message/filtering/SelectableScopeResolver.PREFIX:Ljava/lang/String;
     123: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         6
     128: iconst_1
     129: invokevirtual #38                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     132: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokeinterface #39,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     143: pop
     144: goto          156
     147: aload_2
     148: aload         4
     150: invokeinterface #39,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     155: pop
     156: goto          45
     159: aload_2
     160: areturn

  static java.util.Map access$000(org.glassfish.jersey.message.filtering.ObjectGraphImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field classToGraph:Ljava/util/Map;
       4: areturn

  static java.util.Set access$100(org.glassfish.jersey.message.filtering.ObjectGraphImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field filteringScopes:Ljava/util/Set;
       4: areturn
}
