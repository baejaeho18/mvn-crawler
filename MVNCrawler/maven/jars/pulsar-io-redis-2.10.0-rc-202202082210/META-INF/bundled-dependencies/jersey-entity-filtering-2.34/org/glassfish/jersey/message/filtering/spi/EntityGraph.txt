Compiled from "EntityGraph.java"
public interface org.glassfish.jersey.message.filtering.spi.EntityGraph {
  public abstract org.glassfish.jersey.message.filtering.spi.EntityGraph addField(java.lang.String);

  public abstract org.glassfish.jersey.message.filtering.spi.EntityGraph addField(java.lang.String, java.lang.String...);

  public abstract org.glassfish.jersey.message.filtering.spi.EntityGraph addField(java.lang.String, java.util.Set<java.lang.String>);

  public abstract org.glassfish.jersey.message.filtering.spi.EntityGraph addSubgraph(java.lang.String, java.lang.Class<?>);

  public abstract org.glassfish.jersey.message.filtering.spi.EntityGraph addSubgraph(java.lang.String, java.lang.Class<?>, java.lang.String...);

  public abstract org.glassfish.jersey.message.filtering.spi.EntityGraph addSubgraph(java.lang.String, java.lang.Class<?>, java.util.Set<java.lang.String>);

  public abstract org.glassfish.jersey.message.filtering.spi.EntityGraph addFilteringScopes(java.util.Set<java.lang.String>);

  public abstract boolean presentInScope(java.lang.String, java.lang.String);

  public abstract boolean presentInScopes(java.lang.String);

  public abstract java.lang.Class<?> getEntityClass();

  public abstract java.util.Set<java.lang.String> getFields(java.lang.String);

  public abstract java.util.Set<java.lang.String> getFields(java.lang.String...);

  public abstract java.util.Set<java.lang.String> getFields(java.util.Set<java.lang.String>);

  public abstract java.util.Set<java.lang.String> getFilteringScopes();

  public abstract java.util.Set<java.lang.String> getClassFilteringScopes();

  public abstract java.util.Map<java.lang.String, java.lang.Class<?>> getSubgraphs(java.lang.String);

  public abstract java.util.Map<java.lang.String, java.lang.Class<?>> getSubgraphs(java.lang.String...);

  public abstract java.util.Map<java.lang.String, java.lang.Class<?>> getSubgraphs(java.util.Set<java.lang.String>);

  public abstract org.glassfish.jersey.message.filtering.spi.EntityGraph remove(java.lang.String);
}
