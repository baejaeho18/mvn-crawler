Compiled from "FluxWithLatestFrom.java"
final class reactor.core.publisher.FluxWithLatestFrom$WithLatestFromSubscriber<T, U, R> implements reactor.core.publisher.InnerOperator<T, R> {
  final reactor.core.CoreSubscriber<? super R> actual;

  final java.util.function.BiFunction<? super T, ? super U, ? extends R> combiner;

  volatile org.reactivestreams.Subscription main;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxWithLatestFrom$WithLatestFromSubscriber, org.reactivestreams.Subscription> MAIN;

  volatile org.reactivestreams.Subscription other;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxWithLatestFrom$WithLatestFromSubscriber, org.reactivestreams.Subscription> OTHER;

  volatile U otherValue;

  reactor.core.publisher.FluxWithLatestFrom$WithLatestFromSubscriber(reactor.core.CoreSubscriber<? super R>, java.util.function.BiFunction<? super T, ? super U, ? extends R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field combiner:Ljava/util/function/BiFunction;
      14: return

  void setOther(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #4                  // Field OTHER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: aload_1
       6: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifne          31
      12: aload_1
      13: invokeinterface #6,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      18: aload_0
      19: getfield      #7                  // Field other:Lorg/reactivestreams/Subscription;
      22: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      25: if_acmpeq     31
      28: invokestatic  #9                  // Method reactor/core/publisher/Operators.reportSubscriptionSet:()V
      31: return

  public reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #10                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     26
       7: aload_0
       8: getfield      #11                 // Field main:Lorg/reactivestreams/Subscription;
      11: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      14: if_acmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      25: areturn
      26: aload_1
      27: getstatic     #13                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      30: if_acmpne     38
      33: aload_0
      34: getfield      #11                 // Field main:Lorg/reactivestreams/Subscription;
      37: areturn
      38: aload_0
      39: aload_1
      40: invokespecial #14                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      43: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #7                  // Field other:Lorg/reactivestreams/Subscription;
       4: invokestatic  #15                 // InterfaceMethod reactor/core/Scannable.from:(Ljava/lang/Object;)Lreactor/core/Scannable;
       7: invokestatic  #16                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      10: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field main:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #17,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  void cancelMain();
    Code:
       0: aload_0
       1: getfield      #11                 // Field main:Lorg/reactivestreams/Subscription;
       4: astore_1
       5: aload_1
       6: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
       9: if_acmpeq     43
      12: getstatic     #18                 // Field MAIN:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      19: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #20                 // class org/reactivestreams/Subscription
      25: astore_1
      26: aload_1
      27: ifnull        43
      30: aload_1
      31: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      34: if_acmpeq     43
      37: aload_1
      38: invokeinterface #6,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      43: return

  void cancelOther();
    Code:
       0: aload_0
       1: getfield      #7                  // Field other:Lorg/reactivestreams/Subscription;
       4: astore_1
       5: aload_1
       6: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
       9: if_acmpeq     43
      12: getstatic     #4                  // Field OTHER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      19: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #20                 // class org/reactivestreams/Subscription
      25: astore_1
      26: aload_1
      27: ifnull        43
      30: aload_1
      31: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      34: if_acmpeq     43
      37: aload_1
      38: invokeinterface #6,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      43: return

  public void cancel();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method cancelMain:()V
       4: aload_0
       5: invokevirtual #22                 // Method cancelOther:()V
       8: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #18                 // Field MAIN:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: aload_1
       6: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifne          34
      12: aload_1
      13: invokeinterface #6,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      18: aload_0
      19: getfield      #11                 // Field main:Lorg/reactivestreams/Subscription;
      22: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      25: if_acmpeq     44
      28: invokestatic  #9                  // Method reactor/core/publisher/Operators.reportSubscriptionSet:()V
      31: goto          44
      34: aload_0
      35: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      38: aload_0
      39: invokeinterface #23,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      44: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #24                 // Field otherValue:Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: ifnull        65
       9: aload_0
      10: getfield      #3                  // Field combiner:Ljava/util/function/BiFunction;
      13: aload_1
      14: aload_2
      15: invokeinterface #25,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: ldc           #26                 // String The combiner returned a null value
      22: invokestatic  #27                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      25: astore_3
      26: goto          52
      29: astore        4
      31: aload_0
      32: aload_0
      33: aload         4
      35: aload_1
      36: aload_0
      37: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      40: invokeinterface #29,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      45: invokestatic  #30                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      48: invokevirtual #31                 // Method onError:(Ljava/lang/Throwable;)V
      51: return
      52: aload_0
      53: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      56: aload_3
      57: invokeinterface #32,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      62: goto          75
      65: aload_0
      66: getfield      #11                 // Field main:Lorg/reactivestreams/Subscription;
      69: lconst_1
      70: invokeinterface #17,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      75: return
    Exception table:
       from    to  target type
           9    26    29   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field main:Lorg/reactivestreams/Subscription;
       4: ifnonnull     34
       7: getstatic     #18                 // Field MAIN:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      10: aload_0
      11: aconst_null
      12: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      15: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ifeq          34
      21: aload_0
      22: invokevirtual #22                 // Method cancelOther:()V
      25: aload_0
      26: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      29: aload_1
      30: invokestatic  #33                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      33: return
      34: aload_0
      35: invokevirtual #22                 // Method cancelOther:()V
      38: aload_0
      39: aconst_null
      40: putfield      #24                 // Field otherValue:Ljava/lang/Object;
      43: aload_0
      44: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      47: aload_1
      48: invokeinterface #34,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      53: return

  public void onComplete();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method cancelOther:()V
       4: aload_0
       5: aconst_null
       6: putfield      #24                 // Field otherValue:Ljava/lang/Object;
       9: aload_0
      10: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      13: invokeinterface #35,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      18: return

  void otherError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field main:Lorg/reactivestreams/Subscription;
       4: ifnonnull     34
       7: getstatic     #18                 // Field MAIN:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      10: aload_0
      11: aconst_null
      12: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      15: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ifeq          34
      21: aload_0
      22: invokevirtual #21                 // Method cancelMain:()V
      25: aload_0
      26: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      29: aload_1
      30: invokestatic  #33                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      33: return
      34: aload_0
      35: invokevirtual #21                 // Method cancelMain:()V
      38: aload_0
      39: aconst_null
      40: putfield      #24                 // Field otherValue:Ljava/lang/Object;
      43: aload_0
      44: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      47: aload_1
      48: invokeinterface #34,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      53: return

  void otherComplete();
    Code:
       0: aload_0
       1: getfield      #24                 // Field otherValue:Ljava/lang/Object;
       4: ifnonnull     53
       7: aload_0
       8: getfield      #11                 // Field main:Lorg/reactivestreams/Subscription;
      11: ifnonnull     40
      14: getstatic     #18                 // Field MAIN:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      17: aload_0
      18: aconst_null
      19: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      22: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      25: ifeq          40
      28: aload_0
      29: invokevirtual #21                 // Method cancelMain:()V
      32: aload_0
      33: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      36: invokestatic  #36                 // Method reactor/core/publisher/Operators.complete:(Lorg/reactivestreams/Subscriber;)V
      39: return
      40: aload_0
      41: invokevirtual #21                 // Method cancelMain:()V
      44: aload_0
      45: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      48: invokeinterface #35,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      53: return

  static {};
    Code:
       0: ldc           #37                 // class reactor/core/publisher/FluxWithLatestFrom$WithLatestFromSubscriber
       2: ldc           #20                 // class org/reactivestreams/Subscription
       4: ldc           #38                 // String main
       6: invokestatic  #39                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #18                 // Field MAIN:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #37                 // class reactor/core/publisher/FluxWithLatestFrom$WithLatestFromSubscriber
      14: ldc           #20                 // class org/reactivestreams/Subscription
      16: ldc           #40                 // String other
      18: invokestatic  #39                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      21: putstatic     #4                  // Field OTHER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      24: return
}
