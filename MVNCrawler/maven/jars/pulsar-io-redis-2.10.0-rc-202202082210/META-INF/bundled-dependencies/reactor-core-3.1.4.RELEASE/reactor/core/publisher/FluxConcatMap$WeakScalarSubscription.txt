Compiled from "FluxConcatMap.java"
final class reactor.core.publisher.FluxConcatMap$WeakScalarSubscription<T> implements org.reactivestreams.Subscription {
  final reactor.core.CoreSubscriber<? super T> actual;

  final T value;

  boolean once;

  reactor.core.publisher.FluxConcatMap$WeakScalarSubscription(T, reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field value:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      14: return

  public void request(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          39
       6: aload_0
       7: getfield      #4                  // Field once:Z
      10: ifne          39
      13: aload_0
      14: iconst_1
      15: putfield      #4                  // Field once:Z
      18: aload_0
      19: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      22: astore_3
      23: aload_3
      24: aload_0
      25: getfield      #2                  // Field value:Ljava/lang/Object;
      28: invokeinterface #5,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      33: aload_3
      34: invokeinterface #6,  1            // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      39: return

  public void cancel();
    Code:
       0: return
}
