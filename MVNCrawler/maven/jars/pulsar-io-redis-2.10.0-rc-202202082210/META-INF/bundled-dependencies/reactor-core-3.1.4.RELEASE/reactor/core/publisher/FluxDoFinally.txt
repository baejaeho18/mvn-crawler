Compiled from "FluxDoFinally.java"
final class reactor.core.publisher.FluxDoFinally<T> extends reactor.core.publisher.FluxOperator<T, T> {
  final java.util.function.Consumer<reactor.core.publisher.SignalType> onFinally;

  static <T> reactor.core.CoreSubscriber<T> createSubscriber(reactor.core.CoreSubscriber<? super T>, java.util.function.Consumer<reactor.core.publisher.SignalType>, boolean);
    Code:
       0: iload_2
       1: ifeq          34
       4: aload_0
       5: instanceof    #1                  // class reactor/core/Fuseable$ConditionalSubscriber
       8: ifeq          24
      11: new           #2                  // class reactor/core/publisher/FluxDoFinally$DoFinallyFuseableConditionalSubscriber
      14: dup
      15: aload_0
      16: checkcast     #1                  // class reactor/core/Fuseable$ConditionalSubscriber
      19: aload_1
      20: invokespecial #3                  // Method reactor/core/publisher/FluxDoFinally$DoFinallyFuseableConditionalSubscriber."<init>":(Lreactor/core/Fuseable$ConditionalSubscriber;Ljava/util/function/Consumer;)V
      23: areturn
      24: new           #4                  // class reactor/core/publisher/FluxDoFinally$DoFinallyFuseableSubscriber
      27: dup
      28: aload_0
      29: aload_1
      30: invokespecial #5                  // Method reactor/core/publisher/FluxDoFinally$DoFinallyFuseableSubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/Consumer;)V
      33: areturn
      34: aload_0
      35: instanceof    #1                  // class reactor/core/Fuseable$ConditionalSubscriber
      38: ifeq          54
      41: new           #6                  // class reactor/core/publisher/FluxDoFinally$DoFinallyConditionalSubscriber
      44: dup
      45: aload_0
      46: checkcast     #1                  // class reactor/core/Fuseable$ConditionalSubscriber
      49: aload_1
      50: invokespecial #7                  // Method reactor/core/publisher/FluxDoFinally$DoFinallyConditionalSubscriber."<init>":(Lreactor/core/Fuseable$ConditionalSubscriber;Ljava/util/function/Consumer;)V
      53: areturn
      54: new           #8                  // class reactor/core/publisher/FluxDoFinally$DoFinallySubscriber
      57: dup
      58: aload_0
      59: aload_1
      60: invokespecial #9                  // Method reactor/core/publisher/FluxDoFinally$DoFinallySubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/Consumer;)V
      63: areturn

  reactor.core.publisher.FluxDoFinally(reactor.core.publisher.Flux<? extends T>, java.util.function.Consumer<reactor.core.publisher.SignalType>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: aload_0
       6: aload_2
       7: putfield      #11                 // Field onFinally:Ljava/util/function/Consumer;
      10: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field source:Lreactor/core/publisher/Flux;
       4: aload_1
       5: aload_0
       6: getfield      #11                 // Field onFinally:Ljava/util/function/Consumer;
       9: iconst_0
      10: invokestatic  #13                 // Method createSubscriber:(Lreactor/core/CoreSubscriber;Ljava/util/function/Consumer;Z)Lreactor/core/CoreSubscriber;
      13: invokevirtual #14                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      16: return
}
