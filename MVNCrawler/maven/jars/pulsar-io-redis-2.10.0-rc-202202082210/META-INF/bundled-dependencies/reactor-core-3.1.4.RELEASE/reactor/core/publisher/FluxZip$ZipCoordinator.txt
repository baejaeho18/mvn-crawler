Compiled from "FluxZip.java"
final class reactor.core.publisher.FluxZip$ZipCoordinator<T, R> implements reactor.core.publisher.InnerProducer<R> {
  final reactor.core.CoreSubscriber<? super R> actual;

  final reactor.core.publisher.FluxZip$ZipInner<T>[] subscribers;

  final java.util.function.Function<? super java.lang.Object[], ? extends R> zipper;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxZip$ZipCoordinator> WIP;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxZip$ZipCoordinator> REQUESTED;

  volatile java.lang.Throwable error;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxZip$ZipCoordinator, java.lang.Throwable> ERROR;

  volatile boolean cancelled;

  final java.lang.Object[] current;

  reactor.core.publisher.FluxZip$ZipCoordinator(reactor.core.CoreSubscriber<? super R>, java.util.function.Function<? super java.lang.Object[], ? extends R>, int, java.util.function.Supplier<? extends java.util.Queue<T>>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field zipper:Ljava/util/function/Function;
      14: iload_3
      15: anewarray     #4                  // class reactor/core/publisher/FluxZip$ZipInner
      18: astore        6
      20: iconst_0
      21: istore        7
      23: iload         7
      25: iload_3
      26: if_icmpge     54
      29: aload         6
      31: iload         7
      33: new           #4                  // class reactor/core/publisher/FluxZip$ZipInner
      36: dup
      37: aload_0
      38: iload         5
      40: iload         7
      42: aload         4
      44: invokespecial #5                  // Method reactor/core/publisher/FluxZip$ZipInner."<init>":(Lreactor/core/publisher/FluxZip$ZipCoordinator;IILjava/util/function/Supplier;)V
      47: aastore
      48: iinc          7, 1
      51: goto          23
      54: aload_0
      55: iload_3
      56: anewarray     #6                  // class java/lang/Object
      59: putfield      #7                  // Field current:[Ljava/lang/Object;
      62: aload_0
      63: aload         6
      65: putfield      #8                  // Field subscribers:[Lreactor/core/publisher/FluxZip$ZipInner;
      68: return

  void subscribe(org.reactivestreams.Publisher<? extends T>[], int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field subscribers:[Lreactor/core/publisher/FluxZip$ZipInner;
       4: astore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_2
      11: if_icmpge     48
      14: aload_0
      15: getfield      #9                  // Field cancelled:Z
      18: ifne          28
      21: aload_0
      22: getfield      #10                 // Field error:Ljava/lang/Throwable;
      25: ifnull        29
      28: return
      29: aload_1
      30: iload         4
      32: aaload
      33: aload_3
      34: iload         4
      36: aaload
      37: invokeinterface #11,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      42: iinc          4, 1
      45: goto          8
      48: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #12                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          20
       7: getstatic     #13                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #14                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #15                 // Method drain:()V
      20: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field cancelled:Z
       4: ifne          16
       7: aload_0
       8: iconst_1
       9: putfield      #9                  // Field cancelled:Z
      12: aload_0
      13: invokevirtual #16                 // Method cancelAll:()V
      16: return

  public reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #8                  // Field subscribers:[Lreactor/core/publisher/FluxZip$ZipInner;
       4: invokestatic  #17                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #18                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #19                 // Field requested:J
      11: invokestatic  #20                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      14: areturn
      15: aload_1
      16: getstatic     #21                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      19: if_acmpne     27
      22: aload_0
      23: getfield      #10                 // Field error:Ljava/lang/Throwable;
      26: areturn
      27: aload_1
      28: getstatic     #22                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      31: if_acmpne     42
      34: aload_0
      35: getfield      #9                  // Field cancelled:Z
      38: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: areturn
      42: aload_0
      43: aload_1
      44: invokespecial #24                 // InterfaceMethod reactor/core/publisher/InnerProducer.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      47: areturn

  void error(java.lang.Throwable, int);
    Code:
       0: getstatic     #25                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #26                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: ifeq          18
      11: aload_0
      12: invokevirtual #15                 // Method drain:()V
      15: goto          31
      18: aload_1
      19: aload_0
      20: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      23: invokeinterface #27,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      28: invokestatic  #28                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      31: return

  void cancelAll();
    Code:
       0: aload_0
       1: getfield      #8                  // Field subscribers:[Lreactor/core/publisher/FluxZip$ZipInner;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     31
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #29                 // Method reactor/core/publisher/FluxZip$ZipInner.cancel:()V
      25: iinc          3, 1
      28: goto          10
      31: return

  void drain();
    Code:
       0: getstatic     #30                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      15: astore_1
      16: aload_0
      17: getfield      #8                  // Field subscribers:[Lreactor/core/publisher/FluxZip$ZipInner;
      20: astore_2
      21: aload_2
      22: arraylength
      23: istore_3
      24: aload_0
      25: getfield      #7                  // Field current:[Ljava/lang/Object;
      28: astore        4
      30: iconst_1
      31: istore        5
      33: aload_0
      34: getfield      #19                 // Field requested:J
      37: lstore        6
      39: lconst_0
      40: lstore        8
      42: lload         6
      44: lload         8
      46: lcmp
      47: ifeq          366
      50: aload_0
      51: getfield      #9                  // Field cancelled:Z
      54: ifeq          58
      57: return
      58: aload_0
      59: getfield      #10                 // Field error:Ljava/lang/Throwable;
      62: ifnull        87
      65: aload_0
      66: invokevirtual #16                 // Method cancelAll:()V
      69: getstatic     #25                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      72: aload_0
      73: invokestatic  #32                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
      76: astore        10
      78: aload_1
      79: aload         10
      81: invokeinterface #33,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      86: return
      87: iconst_0
      88: istore        10
      90: iconst_0
      91: istore        11
      93: iload         11
      95: iload_3
      96: if_icmpge     255
      99: aload_2
     100: iload         11
     102: aaload
     103: astore        12
     105: aload         4
     107: iload         11
     109: aaload
     110: ifnonnull     249
     113: aload         12
     115: getfield      #34                 // Field reactor/core/publisher/FluxZip$ZipInner.done:Z
     118: istore        13
     120: aload         12
     122: getfield      #35                 // Field reactor/core/publisher/FluxZip$ZipInner.queue:Ljava/util/Queue;
     125: astore        14
     127: aload         14
     129: ifnull        142
     132: aload         14
     134: invokeinterface #36,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     139: goto          143
     142: aconst_null
     143: astore        15
     145: aload         15
     147: ifnonnull     154
     150: iconst_1
     151: goto          155
     154: iconst_0
     155: istore        16
     157: iload         13
     159: ifeq          178
     162: iload         16
     164: ifeq          178
     167: aload_0
     168: invokevirtual #16                 // Method cancelAll:()V
     171: aload_1
     172: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     177: return
     178: iload         16
     180: ifne          193
     183: aload         4
     185: iload         11
     187: aload         15
     189: aastore
     190: goto          196
     193: iconst_1
     194: istore        10
     196: goto          249
     199: astore        13
     201: aload         13
     203: aload_0
     204: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     207: invokeinterface #27,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     212: invokestatic  #39                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     215: astore        13
     217: aload_0
     218: invokevirtual #16                 // Method cancelAll:()V
     221: getstatic     #25                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     224: aload_0
     225: aload         13
     227: invokestatic  #26                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     230: pop
     231: getstatic     #25                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     234: aload_0
     235: invokestatic  #32                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     238: astore        13
     240: aload_1
     241: aload         13
     243: invokeinterface #33,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     248: return
     249: iinc          11, 1
     252: goto          93
     255: iload         10
     257: ifeq          263
     260: goto          366
     263: aload_0
     264: getfield      #3                  // Field zipper:Ljava/util/function/Function;
     267: aload         4
     269: invokevirtual #40                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
     272: invokeinterface #41,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     277: ldc           #42                 // String The zipper returned a null value
     279: invokestatic  #43                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     282: astore        11
     284: goto          343
     287: astore        12
     289: aconst_null
     290: aload         12
     292: aload         4
     294: invokevirtual #44                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
     297: aload_0
     298: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     301: invokeinterface #27,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     306: invokestatic  #45                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     309: astore        12
     311: aload_0
     312: invokevirtual #16                 // Method cancelAll:()V
     315: getstatic     #25                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     318: aload_0
     319: aload         12
     321: invokestatic  #26                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     324: pop
     325: getstatic     #25                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     328: aload_0
     329: invokestatic  #32                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     332: astore        12
     334: aload_1
     335: aload         12
     337: invokeinterface #33,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     342: return
     343: aload_1
     344: aload         11
     346: invokeinterface #46,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     351: lload         8
     353: lconst_1
     354: ladd
     355: lstore        8
     357: aload         4
     359: aconst_null
     360: invokestatic  #47                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
     363: goto          42
     366: lload         6
     368: lload         8
     370: lcmp
     371: ifne          573
     374: aload_0
     375: getfield      #9                  // Field cancelled:Z
     378: ifeq          382
     381: return
     382: aload_0
     383: getfield      #10                 // Field error:Ljava/lang/Throwable;
     386: ifnull        411
     389: aload_0
     390: invokevirtual #16                 // Method cancelAll:()V
     393: getstatic     #25                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     396: aload_0
     397: invokestatic  #32                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     400: astore        10
     402: aload_1
     403: aload         10
     405: invokeinterface #33,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     410: return
     411: iconst_0
     412: istore        10
     414: iload         10
     416: iload_3
     417: if_icmpge     573
     420: aload_2
     421: iload         10
     423: aaload
     424: astore        11
     426: aload         4
     428: iload         10
     430: aaload
     431: ifnonnull     567
     434: aload         11
     436: getfield      #34                 // Field reactor/core/publisher/FluxZip$ZipInner.done:Z
     439: istore        12
     441: aload         11
     443: getfield      #35                 // Field reactor/core/publisher/FluxZip$ZipInner.queue:Ljava/util/Queue;
     446: astore        13
     448: aload         13
     450: ifnull        463
     453: aload         13
     455: invokeinterface #36,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     460: goto          464
     463: aconst_null
     464: astore        14
     466: aload         14
     468: ifnonnull     475
     471: iconst_1
     472: goto          476
     475: iconst_0
     476: istore        15
     478: iload         12
     480: ifeq          499
     483: iload         15
     485: ifeq          499
     488: aload_0
     489: invokevirtual #16                 // Method cancelAll:()V
     492: aload_1
     493: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     498: return
     499: iload         15
     501: ifne          511
     504: aload         4
     506: iload         10
     508: aload         14
     510: aastore
     511: goto          567
     514: astore        12
     516: aconst_null
     517: aload         12
     519: aload         4
     521: aload_0
     522: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     525: invokeinterface #27,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     530: invokestatic  #45                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     533: astore        12
     535: aload_0
     536: invokevirtual #16                 // Method cancelAll:()V
     539: getstatic     #25                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     542: aload_0
     543: aload         12
     545: invokestatic  #26                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     548: pop
     549: getstatic     #25                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     552: aload_0
     553: invokestatic  #32                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     556: astore        12
     558: aload_1
     559: aload         12
     561: invokeinterface #33,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     566: return
     567: iinc          10, 1
     570: goto          414
     573: lload         8
     575: lconst_0
     576: lcmp
     577: ifeq          628
     580: iconst_0
     581: istore        10
     583: iload         10
     585: iload_3
     586: if_icmpge     608
     589: aload_2
     590: iload         10
     592: aaload
     593: astore        11
     595: aload         11
     597: lload         8
     599: invokevirtual #48                 // Method reactor/core/publisher/FluxZip$ZipInner.request:(J)V
     602: iinc          10, 1
     605: goto          583
     608: lload         6
     610: ldc2_w        #50                 // long 9223372036854775807l
     613: lcmp
     614: ifeq          628
     617: getstatic     #13                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     620: aload_0
     621: lload         8
     623: lneg
     624: invokevirtual #52                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
     627: pop2
     628: getstatic     #30                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     631: aload_0
     632: iload         5
     634: ineg
     635: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     638: istore        5
     640: iload         5
     642: ifne          648
     645: goto          651
     648: goto          33
     651: return
    Exception table:
       from    to  target type
         113   177   199   Class java/lang/Throwable
         178   196   199   Class java/lang/Throwable
         263   284   287   Class java/lang/Throwable
         434   498   514   Class java/lang/Throwable
         499   511   514   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #54                 // class reactor/core/publisher/FluxZip$ZipCoordinator
       2: ldc           #55                 // String wip
       4: invokestatic  #56                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #30                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: ldc           #54                 // class reactor/core/publisher/FluxZip$ZipCoordinator
      12: ldc           #57                 // String requested
      14: invokestatic  #58                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      17: putstatic     #13                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      20: ldc           #54                 // class reactor/core/publisher/FluxZip$ZipCoordinator
      22: ldc           #38                 // class java/lang/Throwable
      24: ldc           #59                 // String error
      26: invokestatic  #60                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      29: putstatic     #25                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      32: return
}
