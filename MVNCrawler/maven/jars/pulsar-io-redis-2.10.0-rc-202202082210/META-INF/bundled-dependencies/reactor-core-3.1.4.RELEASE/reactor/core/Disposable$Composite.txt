Compiled from "Disposable.java"
public interface reactor.core.Disposable$Composite extends reactor.core.Disposable {
  public abstract boolean add(reactor.core.Disposable);

  public default boolean addAll(java.util.Collection<? extends reactor.core.Disposable>);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod isDisposed:()Z
       6: istore_2
       7: aload_1
       8: invokeinterface #2,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          68
      23: aload_3
      24: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #5                  // class reactor/core/Disposable
      32: astore        4
      34: iload_2
      35: ifeq          48
      38: aload         4
      40: invokeinterface #6,  1            // InterfaceMethod reactor/core/Disposable.dispose:()V
      45: goto          65
      48: aload_0
      49: aload         4
      51: invokeinterface #7,  2            // InterfaceMethod add:(Lreactor/core/Disposable;)Z
      56: ifne          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: istore_2
      65: goto          14
      68: iload_2
      69: ifne          76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: ireturn

  public abstract void dispose();

  public abstract boolean isDisposed();

  public abstract boolean remove(reactor.core.Disposable);

  public abstract int size();
}
