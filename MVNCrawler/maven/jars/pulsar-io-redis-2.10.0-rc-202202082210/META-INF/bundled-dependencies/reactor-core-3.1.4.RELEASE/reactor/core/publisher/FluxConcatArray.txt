Compiled from "FluxConcatArray.java"
final class reactor.core.publisher.FluxConcatArray<T> extends reactor.core.publisher.Flux<T> {
  final org.reactivestreams.Publisher<? extends T>[] array;

  final boolean delayError;

  reactor.core.publisher.FluxConcatArray(boolean, org.reactivestreams.Publisher<? extends T>...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Flux."<init>":()V
       4: aload_0
       5: aload_2
       6: ldc           #2                  // String array
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class "[Lorg/reactivestreams/Publisher;"
      14: putfield      #5                  // Field array:[Lorg/reactivestreams/Publisher;
      17: aload_0
      18: iload_1
      19: putfield      #6                  // Field delayError:Z
      22: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field array:[Lorg/reactivestreams/Publisher;
       4: astore_2
       5: aload_2
       6: arraylength
       7: ifne          15
      10: aload_1
      11: invokestatic  #7                  // Method reactor/core/publisher/Operators.complete:(Lorg/reactivestreams/Subscriber;)V
      14: return
      15: aload_2
      16: arraylength
      17: iconst_1
      18: if_icmpne     53
      21: aload_2
      22: iconst_0
      23: aaload
      24: astore_3
      25: aload_3
      26: ifnonnull     45
      29: aload_1
      30: new           #8                  // class java/lang/NullPointerException
      33: dup
      34: ldc           #9                  // String The single source Publisher is null
      36: invokespecial #10                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      39: invokestatic  #11                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      42: goto          52
      45: aload_3
      46: aload_1
      47: invokeinterface #12,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      52: return
      53: aload_0
      54: getfield      #6                  // Field delayError:Z
      57: ifeq          89
      60: new           #13                 // class reactor/core/publisher/FluxConcatArray$ConcatArrayDelayErrorSubscriber
      63: dup
      64: aload_1
      65: aload_2
      66: invokespecial #14                 // Method reactor/core/publisher/FluxConcatArray$ConcatArrayDelayErrorSubscriber."<init>":(Lreactor/core/CoreSubscriber;[Lorg/reactivestreams/Publisher;)V
      69: astore_3
      70: aload_1
      71: aload_3
      72: invokeinterface #15,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      77: aload_3
      78: invokevirtual #16                 // Method reactor/core/publisher/FluxConcatArray$ConcatArrayDelayErrorSubscriber.isCancelled:()Z
      81: ifne          88
      84: aload_3
      85: invokevirtual #17                 // Method reactor/core/publisher/FluxConcatArray$ConcatArrayDelayErrorSubscriber.onComplete:()V
      88: return
      89: new           #18                 // class reactor/core/publisher/FluxConcatArray$ConcatArraySubscriber
      92: dup
      93: aload_1
      94: aload_2
      95: invokespecial #19                 // Method reactor/core/publisher/FluxConcatArray$ConcatArraySubscriber."<init>":(Lreactor/core/CoreSubscriber;[Lorg/reactivestreams/Publisher;)V
      98: astore_3
      99: aload_1
     100: aload_3
     101: invokeinterface #15,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
     106: aload_3
     107: invokevirtual #20                 // Method reactor/core/publisher/FluxConcatArray$ConcatArraySubscriber.isCancelled:()Z
     110: ifne          117
     113: aload_3
     114: invokevirtual #21                 // Method reactor/core/publisher/FluxConcatArray$ConcatArraySubscriber.onComplete:()V
     117: return

  reactor.core.publisher.FluxConcatArray<T> concatAdditionalSourceLast(org.reactivestreams.Publisher<? extends T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field array:[Lorg/reactivestreams/Publisher;
       4: arraylength
       5: istore_2
       6: iload_2
       7: iconst_1
       8: iadd
       9: anewarray     #22                 // class org/reactivestreams/Publisher
      12: astore_3
      13: aload_0
      14: getfield      #5                  // Field array:[Lorg/reactivestreams/Publisher;
      17: iconst_0
      18: aload_3
      19: iconst_0
      20: iload_2
      21: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_3
      25: iload_2
      26: aload_1
      27: aastore
      28: new           #24                 // class reactor/core/publisher/FluxConcatArray
      31: dup
      32: aload_0
      33: getfield      #6                  // Field delayError:Z
      36: aload_3
      37: invokespecial #25                 // Method "<init>":(Z[Lorg/reactivestreams/Publisher;)V
      40: areturn

  <V> reactor.core.publisher.FluxConcatArray<V> concatAdditionalIgnoredLast(org.reactivestreams.Publisher<? extends V>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field array:[Lorg/reactivestreams/Publisher;
       4: arraylength
       5: istore_2
       6: iload_2
       7: iconst_1
       8: iadd
       9: anewarray     #22                 // class org/reactivestreams/Publisher
      12: astore_3
      13: aload_0
      14: getfield      #5                  // Field array:[Lorg/reactivestreams/Publisher;
      17: iconst_0
      18: aload_3
      19: iconst_0
      20: iload_2
      21: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_3
      25: iload_2
      26: iconst_1
      27: isub
      28: aload_3
      29: iload_2
      30: iconst_1
      31: isub
      32: aaload
      33: invokestatic  #26                 // Method reactor/core/publisher/Mono.ignoreElements:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
      36: aastore
      37: aload_3
      38: iload_2
      39: aload_1
      40: aastore
      41: new           #24                 // class reactor/core/publisher/FluxConcatArray
      44: dup
      45: aload_0
      46: getfield      #6                  // Field delayError:Z
      49: aload_3
      50: invokespecial #25                 // Method "<init>":(Z[Lorg/reactivestreams/Publisher;)V
      53: areturn

  reactor.core.publisher.FluxConcatArray<T> concatAdditionalSourceFirst(org.reactivestreams.Publisher<? extends T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field array:[Lorg/reactivestreams/Publisher;
       4: arraylength
       5: istore_2
       6: iload_2
       7: iconst_1
       8: iadd
       9: anewarray     #22                 // class org/reactivestreams/Publisher
      12: astore_3
      13: aload_0
      14: getfield      #5                  // Field array:[Lorg/reactivestreams/Publisher;
      17: iconst_0
      18: aload_3
      19: iconst_1
      20: iload_2
      21: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_3
      25: iconst_0
      26: aload_1
      27: aastore
      28: new           #24                 // class reactor/core/publisher/FluxConcatArray
      31: dup
      32: aload_0
      33: getfield      #6                  // Field delayError:Z
      36: aload_3
      37: invokespecial #25                 // Method "<init>":(Z[Lorg/reactivestreams/Publisher;)V
      40: areturn
}
