Compiled from "FluxDoOnEach.java"
final class reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T>, reactor.core.publisher.Signal<T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final reactor.util.context.Context cachedContext;

  final java.util.function.Consumer<? super reactor.core.publisher.Signal<T>> onSignal;

  T t;

  org.reactivestreams.Subscription s;

  boolean done;

  reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber(reactor.core.CoreSubscriber<? super T>, java.util.function.Consumer<? super reactor.core.publisher.Signal<T>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      16: putfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field onSignal:Ljava/util/function/Consumer;
      24: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #7,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #8,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       5: aload_0
       6: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: invokeinterface #9,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      15: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #10                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #11                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #12                 // Field done:Z
      23: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #14                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #12                 // Field done:Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      12: invokestatic  #15                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: aload_1
      18: putfield      #16                 // Field t:Ljava/lang/Object;
      21: aload_0
      22: getfield      #5                  // Field onSignal:Ljava/util/function/Consumer;
      25: aload_0
      26: invokeinterface #17,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      31: goto          53
      34: astore_2
      35: aload_0
      36: aload_0
      37: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      40: aload_2
      41: aload_1
      42: aload_0
      43: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      46: invokestatic  #19                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      49: invokevirtual #20                 // Method onError:(Ljava/lang/Throwable;)V
      52: return
      53: aload_0
      54: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      57: aload_1
      58: invokeinterface #21,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      63: return
    Exception table:
       from    to  target type
          16    31    34   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field done:Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      12: invokestatic  #22                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: iconst_1
      18: putfield      #12                 // Field done:Z
      21: aload_0
      22: getfield      #5                  // Field onSignal:Ljava/util/function/Consumer;
      25: aload_1
      26: aload_0
      27: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      30: invokestatic  #23                 // InterfaceMethod reactor/core/publisher/Signal.error:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
      33: invokeinterface #17,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      38: goto          53
      41: astore_2
      42: aconst_null
      43: aload_2
      44: aload_1
      45: aload_0
      46: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      49: invokestatic  #19                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      52: astore_1
      53: aload_0
      54: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      57: aload_1
      58: invokeinterface #24,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      63: goto          84
      66: astore_2
      67: aload_2
      68: invokestatic  #26                 // Method reactor/core/Exceptions.isErrorCallbackNotImplemented:(Ljava/lang/Throwable;)Z
      71: ifne          84
      74: aload_2
      75: invokevirtual #27                 // Method java/lang/UnsupportedOperationException.getCause:()Ljava/lang/Throwable;
      78: aload_1
      79: if_acmpeq     84
      82: aload_2
      83: athrow
      84: return
    Exception table:
       from    to  target type
          21    38    41   Class java/lang/Throwable
          53    63    66   Class java/lang/UnsupportedOperationException

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #12                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #12                 // Field done:Z
      13: aload_0
      14: getfield      #5                  // Field onSignal:Ljava/util/function/Consumer;
      17: aload_0
      18: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      21: invokestatic  #28                 // InterfaceMethod reactor/core/publisher/Signal.complete:(Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      29: goto          55
      32: astore_1
      33: aload_0
      34: iconst_0
      35: putfield      #12                 // Field done:Z
      38: aload_0
      39: aload_0
      40: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      43: aload_1
      44: aload_0
      45: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      48: invokestatic  #29                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      51: invokevirtual #20                 // Method onError:(Ljava/lang/Throwable;)V
      54: return
      55: aload_0
      56: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      59: invokeinterface #30,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      64: return
    Exception table:
       from    to  target type
          13    29    32   Class java/lang/Throwable

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Throwable getThrowable();
    Code:
       0: aconst_null
       1: areturn

  public org.reactivestreams.Subscription getSubscription();
    Code:
       0: aconst_null
       1: areturn

  public T get();
    Code:
       0: aload_0
       1: getfield      #16                 // Field t:Ljava/lang/Object;
       4: areturn

  public reactor.util.context.Context getContext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
       4: areturn

  public reactor.core.publisher.SignalType getType();
    Code:
       0: getstatic     #31                 // Field reactor/core/publisher/SignalType.ON_NEXT:Lreactor/core/publisher/SignalType;
       3: areturn

  public java.lang.String toString();
    Code:
       0: new           #32                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #34                 // String doOnEach_onNext(
       9: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #16                 // Field t:Ljava/lang/Object;
      16: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #37                 // String )
      21: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn
}
