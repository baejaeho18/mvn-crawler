Compiled from "FluxZipIterable.java"
final class reactor.core.publisher.FluxZipIterable<T, U, R> extends reactor.core.publisher.FluxOperator<T, R> {
  final java.lang.Iterable<? extends U> other;

  final java.util.function.BiFunction<? super T, ? super U, ? extends R> zipper;

  reactor.core.publisher.FluxZipIterable(reactor.core.publisher.Flux<? extends T>, java.lang.Iterable<? extends U>, java.util.function.BiFunction<? super T, ? super U, ? extends R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: aload_0
       6: aload_2
       7: ldc           #2                  // String other
       9: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/lang/Iterable
      15: putfield      #5                  // Field other:Ljava/lang/Iterable;
      18: aload_0
      19: aload_3
      20: ldc           #6                  // String zipper
      22: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      25: checkcast     #7                  // class java/util/function/BiFunction
      28: putfield      #8                  // Field zipper:Ljava/util/function/BiFunction;
      31: return

  public void subscribe(reactor.core.CoreSubscriber<? super R>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field other:Ljava/lang/Iterable;
       4: invokeinterface #9,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       9: ldc           #10                 // String The other iterable produced a null iterator
      11: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #11                 // class java/util/Iterator
      17: astore_2
      18: goto          37
      21: astore_3
      22: aload_1
      23: aload_3
      24: aload_1
      25: invokeinterface #13,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      30: invokestatic  #14                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      33: invokestatic  #15                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      36: return
      37: aload_2
      38: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: istore_3
      44: goto          65
      47: astore        4
      49: aload_1
      50: aload         4
      52: aload_1
      53: invokeinterface #13,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      58: invokestatic  #14                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      61: invokestatic  #15                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      64: return
      65: iload_3
      66: ifne          74
      69: aload_1
      70: invokestatic  #17                 // Method reactor/core/publisher/Operators.complete:(Lorg/reactivestreams/Subscriber;)V
      73: return
      74: aload_0
      75: getfield      #18                 // Field source:Lreactor/core/publisher/Flux;
      78: new           #19                 // class reactor/core/publisher/FluxZipIterable$ZipSubscriber
      81: dup
      82: aload_1
      83: aload_2
      84: aload_0
      85: getfield      #8                  // Field zipper:Ljava/util/function/BiFunction;
      88: invokespecial #20                 // Method reactor/core/publisher/FluxZipIterable$ZipSubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/Iterator;Ljava/util/function/BiFunction;)V
      91: invokevirtual #21                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      94: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/Throwable
          37    44    47   Class java/lang/Throwable
}
