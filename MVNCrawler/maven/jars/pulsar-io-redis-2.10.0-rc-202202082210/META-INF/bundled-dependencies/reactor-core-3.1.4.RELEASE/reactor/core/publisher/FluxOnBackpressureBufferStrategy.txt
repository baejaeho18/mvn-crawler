Compiled from "FluxOnBackpressureBufferStrategy.java"
final class reactor.core.publisher.FluxOnBackpressureBufferStrategy<O> extends reactor.core.publisher.FluxOperator<O, O> {
  final java.util.function.Consumer<? super O> onBufferOverflow;

  final int bufferSize;

  final boolean delayError;

  final reactor.core.publisher.BufferOverflowStrategy bufferOverflowStrategy;

  reactor.core.publisher.FluxOnBackpressureBufferStrategy(reactor.core.publisher.Flux<? extends O>, int, java.util.function.Consumer<? super O>, reactor.core.publisher.BufferOverflowStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field bufferSize:I
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field onBufferOverflow:Ljava/util/function/Consumer;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field bufferOverflowStrategy:Lreactor/core/publisher/BufferOverflowStrategy;
      21: aload_0
      22: aload_3
      23: ifnull        30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: putfield      #5                  // Field delayError:Z
      34: return

  public void subscribe(reactor.core.CoreSubscriber<? super O>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field source:Lreactor/core/publisher/Flux;
       4: new           #7                  // class reactor/core/publisher/FluxOnBackpressureBufferStrategy$BackpressureBufferDropOldestSubscriber
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field bufferSize:I
      13: aload_0
      14: getfield      #5                  // Field delayError:Z
      17: aload_0
      18: getfield      #3                  // Field onBufferOverflow:Ljava/util/function/Consumer;
      21: aload_0
      22: getfield      #4                  // Field bufferOverflowStrategy:Lreactor/core/publisher/BufferOverflowStrategy;
      25: invokespecial #8                  // Method reactor/core/publisher/FluxOnBackpressureBufferStrategy$BackpressureBufferDropOldestSubscriber."<init>":(Lreactor/core/CoreSubscriber;IZLjava/util/function/Consumer;Lreactor/core/publisher/BufferOverflowStrategy;)V
      28: invokevirtual #9                  // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      31: return

  public int getPrefetch();
    Code:
       0: ldc           #11                 // int 2147483647
       2: ireturn
}
