Compiled from "MpscLinkedQueue.java"
final class reactor.util.concurrent.MpscLinkedQueue<E> extends java.util.AbstractQueue<E> implements java.util.function.BiPredicate<E, E> {
  private volatile reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode<E> producerNode;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.util.concurrent.MpscLinkedQueue, reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode> PRODUCER_NODE_UPDATER;

  private volatile reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode<E> consumerNode;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.util.concurrent.MpscLinkedQueue, reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode> CONSUMER_NODE_UPDATER;

  public reactor.util.concurrent.MpscLinkedQueue();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractQueue."<init>":()V
       4: new           #2                  // class reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode
       7: dup
       8: invokespecial #3                  // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode."<init>":()V
      11: astore_1
      12: getstatic     #4                  // Field CONSUMER_NODE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: aload_1
      17: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V
      20: getstatic     #6                  // Field PRODUCER_NODE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      23: aload_0
      24: aload_1
      25: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: return

  public final boolean offer(E);
    Code:
       0: aload_1
       1: ldc           #8                  // String The offered value \'e\' must be non-null
       3: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #2                  // class reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode
      10: dup
      11: aload_1
      12: invokespecial #10                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode."<init>":(Ljava/lang/Object;)V
      15: astore_2
      16: getstatic     #6                  // Field PRODUCER_NODE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      19: aload_0
      20: aload_2
      21: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #2                  // class reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode
      27: astore_3
      28: aload_3
      29: aload_2
      30: invokevirtual #11                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.soNext:(Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;)V
      33: iconst_1
      34: ireturn

  public boolean test(E, E);
    Code:
       0: aload_1
       1: ldc           #12                 // String The offered value \'e1\' must be non-null
       3: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #13                 // String The offered value \'e2\' must be non-null
      10: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: new           #2                  // class reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode
      17: dup
      18: aload_1
      19: invokespecial #10                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode."<init>":(Ljava/lang/Object;)V
      22: astore_3
      23: new           #2                  // class reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode
      26: dup
      27: aload_2
      28: invokespecial #10                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode."<init>":(Ljava/lang/Object;)V
      31: astore        4
      33: getstatic     #6                  // Field PRODUCER_NODE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      36: aload_0
      37: aload         4
      39: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #2                  // class reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode
      45: astore        5
      47: aload_3
      48: aload         4
      50: invokevirtual #11                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.soNext:(Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;)V
      53: aload         5
      55: aload_3
      56: invokevirtual #11                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.soNext:(Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;)V
      59: iconst_1
      60: ireturn

  public E poll();
    Code:
       0: aload_0
       1: getfield      #14                 // Field consumerNode:Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
       4: astore_1
       5: aload_1
       6: invokevirtual #15                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.lvNext:()Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
       9: astore_2
      10: aload_2
      11: ifnull        34
      14: aload_2
      15: invokevirtual #16                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.getAndNullValue:()Ljava/lang/Object;
      18: astore_3
      19: aload_1
      20: aload_1
      21: invokevirtual #11                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.soNext:(Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;)V
      24: getstatic     #4                  // Field CONSUMER_NODE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      27: aload_0
      28: aload_2
      29: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V
      32: aload_3
      33: areturn
      34: aload_1
      35: aload_0
      36: getfield      #17                 // Field producerNode:Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
      39: if_acmpeq     74
      42: aload_1
      43: invokevirtual #15                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.lvNext:()Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
      46: dup
      47: astore_2
      48: ifnonnull     54
      51: goto          42
      54: aload_2
      55: invokevirtual #16                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.getAndNullValue:()Ljava/lang/Object;
      58: astore_3
      59: aload_1
      60: aload_1
      61: invokevirtual #11                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.soNext:(Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;)V
      64: getstatic     #4                  // Field CONSUMER_NODE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      67: aload_0
      68: aload_2
      69: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V
      72: aload_3
      73: areturn
      74: aconst_null
      75: areturn

  public E peek();
    Code:
       0: aload_0
       1: getfield      #14                 // Field consumerNode:Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
       4: astore_1
       5: aload_1
       6: invokevirtual #15                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.lvNext:()Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
       9: astore_2
      10: aload_2
      11: ifnull        19
      14: aload_2
      15: invokevirtual #18                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.lpValue:()Ljava/lang/Object;
      18: areturn
      19: aload_1
      20: aload_0
      21: getfield      #17                 // Field producerNode:Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
      24: if_acmpeq     44
      27: aload_1
      28: invokevirtual #15                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.lvNext:()Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
      31: dup
      32: astore_2
      33: ifnonnull     39
      36: goto          27
      39: aload_2
      40: invokevirtual #18                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.lpValue:()Ljava/lang/Object;
      43: areturn
      44: aconst_null
      45: areturn

  public boolean remove(java.lang.Object);
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method poll:()Ljava/lang/Object;
       4: ifnull        17
       7: aload_0
       8: invokevirtual #22                 // Method isEmpty:()Z
      11: ifne          17
      14: goto          0
      17: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #14                 // Field consumerNode:Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
       4: astore_1
       5: aload_0
       6: getfield      #17                 // Field producerNode:Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
       9: astore_2
      10: iconst_0
      11: istore_3
      12: aload_1
      13: aload_2
      14: if_acmpeq     50
      17: aload_1
      18: ifnull        50
      21: iload_3
      22: ldc           #24                 // int 2147483647
      24: if_icmpge     50
      27: aload_1
      28: invokevirtual #15                 // Method reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode.lvNext:()Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
      31: astore        4
      33: aload         4
      35: aload_1
      36: if_acmpne     41
      39: iload_3
      40: ireturn
      41: aload         4
      43: astore_1
      44: iinc          3, 1
      47: goto          12
      50: iload_3
      51: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #14                 // Field consumerNode:Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
       4: aload_0
       5: getfield      #17                 // Field producerNode:Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
       8: if_acmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  static {};
    Code:
       0: ldc           #25                 // class reactor/util/concurrent/MpscLinkedQueue
       2: ldc           #2                  // class reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode
       4: ldc           #26                 // String producerNode
       6: invokestatic  #27                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #6                  // Field PRODUCER_NODE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #25                 // class reactor/util/concurrent/MpscLinkedQueue
      14: ldc           #2                  // class reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode
      16: ldc           #28                 // String consumerNode
      18: invokestatic  #27                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      21: putstatic     #4                  // Field CONSUMER_NODE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      24: return
}
