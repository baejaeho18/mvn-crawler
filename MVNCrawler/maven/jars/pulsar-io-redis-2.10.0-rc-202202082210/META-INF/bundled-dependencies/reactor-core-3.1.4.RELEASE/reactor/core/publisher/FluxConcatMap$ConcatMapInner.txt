Compiled from "FluxConcatMap.java"
final class reactor.core.publisher.FluxConcatMap$ConcatMapInner<R> extends reactor.core.publisher.Operators$MultiSubscriptionSubscriber<R, R> {
  final reactor.core.publisher.FluxConcatMap$FluxConcatMapSupport<?, R> parent;

  long produced;

  reactor.core.publisher.FluxConcatMap$ConcatMapInner(reactor.core.publisher.FluxConcatMap$FluxConcatMapSupport<?, R>);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method reactor/core/publisher/Operators.emptySubscriber:()Lreactor/core/CoreSubscriber;
       4: invokespecial #2                  // Method reactor/core/publisher/Operators$MultiSubscriptionSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       7: aload_0
       8: aload_1
       9: putfield      #3                  // Field parent:Lreactor/core/publisher/FluxConcatMap$FluxConcatMapSupport;
      12: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field parent:Lreactor/core/publisher/FluxConcatMap$FluxConcatMapSupport;
       4: invokeinterface #4,  1            // InterfaceMethod reactor/core/publisher/FluxConcatMap$FluxConcatMapSupport.currentContext:()Lreactor/util/context/Context;
       9: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field reactor/core/Scannable$Attr.ACTUAL:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #3                  // Field parent:Lreactor/core/publisher/FluxConcatMap$FluxConcatMapSupport;
      11: areturn
      12: aload_0
      13: aload_1
      14: invokespecial #6                  // Method reactor/core/publisher/Operators$MultiSubscriptionSubscriber.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      17: areturn

  public void onNext(R);
    Code:
       0: aload_0
       1: dup
       2: getfield      #7                  // Field produced:J
       5: lconst_1
       6: ladd
       7: putfield      #7                  // Field produced:J
      10: aload_0
      11: getfield      #3                  // Field parent:Lreactor/core/publisher/FluxConcatMap$FluxConcatMapSupport;
      14: aload_1
      15: invokeinterface #8,  2            // InterfaceMethod reactor/core/publisher/FluxConcatMap$FluxConcatMapSupport.innerNext:(Ljava/lang/Object;)V
      20: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field produced:J
       4: lstore_2
       5: lload_2
       6: lconst_0
       7: lcmp
       8: ifeq          21
      11: aload_0
      12: lconst_0
      13: putfield      #7                  // Field produced:J
      16: aload_0
      17: lload_2
      18: invokevirtual #9                  // Method produced:(J)V
      21: aload_0
      22: getfield      #3                  // Field parent:Lreactor/core/publisher/FluxConcatMap$FluxConcatMapSupport;
      25: aload_1
      26: invokeinterface #10,  2           // InterfaceMethod reactor/core/publisher/FluxConcatMap$FluxConcatMapSupport.innerError:(Ljava/lang/Throwable;)V
      31: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #7                  // Field produced:J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifeq          21
      11: aload_0
      12: lconst_0
      13: putfield      #7                  // Field produced:J
      16: aload_0
      17: lload_1
      18: invokevirtual #9                  // Method produced:(J)V
      21: aload_0
      22: getfield      #3                  // Field parent:Lreactor/core/publisher/FluxConcatMap$FluxConcatMapSupport;
      25: invokeinterface #11,  1           // InterfaceMethod reactor/core/publisher/FluxConcatMap$FluxConcatMapSupport.innerComplete:()V
      30: return
}
