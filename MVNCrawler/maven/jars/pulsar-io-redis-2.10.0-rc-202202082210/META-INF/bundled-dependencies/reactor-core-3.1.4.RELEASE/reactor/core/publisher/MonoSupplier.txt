Compiled from "MonoSupplier.java"
final class reactor.core.publisher.MonoSupplier<T> extends reactor.core.publisher.Mono<T> implements java.util.concurrent.Callable<T>, reactor.core.Fuseable {
  final java.util.function.Supplier<? extends T> supplier;

  reactor.core.publisher.MonoSupplier(java.util.function.Supplier<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Mono."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String callable
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/util/function/Supplier
      14: putfield      #5                  // Field supplier:Ljava/util/function/Supplier;
      17: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: new           #6                  // class reactor/core/publisher/Operators$MonoSubscriber
       3: dup
       4: aload_1
       5: invokespecial #7                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       8: astore_2
       9: aload_1
      10: aload_2
      11: invokeinterface #8,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      16: aload_2
      17: invokevirtual #9                  // Method reactor/core/publisher/Operators$MonoSubscriber.isCancelled:()Z
      20: ifeq          24
      23: return
      24: aload_0
      25: getfield      #5                  // Field supplier:Ljava/util/function/Supplier;
      28: invokeinterface #10,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      33: astore_3
      34: aload_3
      35: ifnonnull     45
      38: aload_2
      39: invokevirtual #11                 // Method reactor/core/publisher/Operators$MonoSubscriber.onComplete:()V
      42: goto          50
      45: aload_2
      46: aload_3
      47: invokevirtual #12                 // Method reactor/core/publisher/Operators$MonoSubscriber.complete:(Ljava/lang/Object;)V
      50: goto          70
      53: astore_3
      54: aload_1
      55: aload_3
      56: aload_1
      57: invokeinterface #14,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      62: invokestatic  #15                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      65: invokeinterface #16,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      70: return
    Exception table:
       from    to  target type
          24    50    53   Class java/lang/Throwable

  public T block(java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #5                  // Field supplier:Ljava/util/function/Supplier;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: areturn

  public T block();
    Code:
       0: aload_0
       1: getstatic     #17                 // Field java/time/Duration.ZERO:Ljava/time/Duration;
       4: invokevirtual #18                 // Method block:(Ljava/time/Duration;)Ljava/lang/Object;
       7: areturn

  public T call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field supplier:Ljava/util/function/Supplier;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: areturn
}
