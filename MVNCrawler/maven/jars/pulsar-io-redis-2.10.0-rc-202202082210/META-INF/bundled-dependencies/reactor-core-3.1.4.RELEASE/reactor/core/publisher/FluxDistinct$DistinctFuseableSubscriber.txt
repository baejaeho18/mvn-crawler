Compiled from "FluxDistinct.java"
final class reactor.core.publisher.FluxDistinct$DistinctFuseableSubscriber<T, K, C> implements reactor.core.Fuseable$ConditionalSubscriber<T>, reactor.core.publisher.InnerOperator<T, T>, reactor.core.Fuseable$QueueSubscription<T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final C collection;

  final java.util.function.Function<? super T, ? extends K> keyExtractor;

  final java.util.function.BiPredicate<C, K> distinctPredicate;

  final java.util.function.Consumer<C> cleanupCallback;

  reactor.core.Fuseable$QueueSubscription<T> qs;

  boolean done;

  int sourceMode;

  reactor.core.publisher.FluxDistinct$DistinctFuseableSubscriber(reactor.core.CoreSubscriber<? super T>, C, java.util.function.Function<? super T, ? extends K>, java.util.function.BiPredicate<C, K>, java.util.function.Consumer<C>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field collection:Ljava/lang/Object;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field keyExtractor:Ljava/util/function/Function;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field distinctPredicate:Ljava/util/function/BiPredicate;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field cleanupCallback:Ljava/util/function/Consumer;
      31: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: aload_1
       5: invokestatic  #8                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          29
      11: aload_0
      12: aload_1
      13: checkcast     #9                  // class reactor/core/Fuseable$QueueSubscription
      16: putfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      19: aload_0
      20: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      23: aload_0
      24: invokeinterface #10,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      29: return

  public void onNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method tryOnNext:(Ljava/lang/Object;)Z
       5: ifne          18
       8: aload_0
       9: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      12: lconst_1
      13: invokeinterface #12,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      18: return

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     20
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: aconst_null
      13: invokeinterface #15,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      18: iconst_1
      19: ireturn
      20: aload_0
      21: getfield      #16                 // Field done:Z
      24: ifeq          42
      27: aload_1
      28: aload_0
      29: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      32: invokeinterface #17,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      37: invokestatic  #18                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      40: iconst_1
      41: ireturn
      42: aload_0
      43: getfield      #4                  // Field keyExtractor:Ljava/util/function/Function;
      46: aload_1
      47: invokeinterface #19,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      52: ldc           #20                 // String The distinct extractor returned a null value.
      54: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      57: astore_2
      58: goto          86
      61: astore_3
      62: aload_0
      63: aload_0
      64: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      67: aload_3
      68: aload_1
      69: aload_0
      70: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      73: invokeinterface #17,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      78: invokestatic  #23                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      81: invokevirtual #24                 // Method onError:(Ljava/lang/Throwable;)V
      84: iconst_1
      85: ireturn
      86: aload_0
      87: getfield      #5                  // Field distinctPredicate:Ljava/util/function/BiPredicate;
      90: aload_0
      91: getfield      #3                  // Field collection:Ljava/lang/Object;
      94: aload_2
      95: invokeinterface #25,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
     100: istore_3
     101: goto          131
     104: astore        4
     106: aload_0
     107: aload_0
     108: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
     111: aload         4
     113: aload_1
     114: aload_0
     115: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     118: invokeinterface #17,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     123: invokestatic  #23                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     126: invokevirtual #24                 // Method onError:(Ljava/lang/Throwable;)V
     129: iconst_1
     130: ireturn
     131: iload_3
     132: ifeq          147
     135: aload_0
     136: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     139: aload_1
     140: invokeinterface #15,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     145: iconst_1
     146: ireturn
     147: iconst_0
     148: ireturn
    Exception table:
       from    to  target type
          42    58    61   Class java/lang/Throwable
          86   101   104   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #16                 // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #17,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #26                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #16                 // Field done:Z
      26: aload_0
      27: getfield      #6                  // Field cleanupCallback:Ljava/util/function/Consumer;
      30: aload_0
      31: getfield      #3                  // Field collection:Ljava/lang/Object;
      34: invokeinterface #27,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      43: aload_1
      44: invokeinterface #28,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      49: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #16                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #16                 // Field done:Z
      13: aload_0
      14: getfield      #6                  // Field cleanupCallback:Ljava/util/function/Consumer;
      17: aload_0
      18: getfield      #3                  // Field collection:Ljava/lang/Object;
      21: invokeinterface #27,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      26: aload_0
      27: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      30: invokeinterface #29,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      35: return

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: lload_1
       5: invokeinterface #12,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #30,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
       9: return

  public int requestFusion(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: iload_1
       5: invokeinterface #31,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      10: istore_2
      11: aload_0
      12: iload_2
      13: putfield      #13                 // Field sourceMode:I
      16: iload_2
      17: ireturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #32                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      11: areturn
      12: aload_1
      13: getstatic     #33                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #16                 // Field done:Z
      23: invokestatic  #34                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #35                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public T poll();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     81
       8: lconst_0
       9: lstore_1
      10: aload_0
      11: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      14: invokeinterface #36,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
      19: astore_3
      20: aload_3
      21: ifnonnull     26
      24: aconst_null
      25: areturn
      26: aload_0
      27: getfield      #4                  // Field keyExtractor:Ljava/util/function/Function;
      30: aload_3
      31: invokeinterface #19,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: ldc           #37                 // String The keyExtractor returned a null collection
      38: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      41: astore        4
      43: aload_0
      44: getfield      #5                  // Field distinctPredicate:Ljava/util/function/BiPredicate;
      47: aload_0
      48: getfield      #3                  // Field collection:Ljava/lang/Object;
      51: aload         4
      53: invokeinterface #25,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      58: ifeq          74
      61: lload_1
      62: lconst_0
      63: lcmp
      64: ifeq          72
      67: aload_0
      68: lload_1
      69: invokevirtual #38                 // Method request:(J)V
      72: aload_3
      73: areturn
      74: lload_1
      75: lconst_1
      76: ladd
      77: lstore_1
      78: goto          10
      81: aload_0
      82: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      85: invokeinterface #36,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
      90: astore_1
      91: aload_1
      92: ifnonnull     97
      95: aconst_null
      96: areturn
      97: aload_0
      98: getfield      #4                  // Field keyExtractor:Ljava/util/function/Function;
     101: aload_1
     102: invokeinterface #19,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     107: ldc           #37                 // String The keyExtractor returned a null collection
     109: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     112: astore_2
     113: aload_0
     114: getfield      #5                  // Field distinctPredicate:Ljava/util/function/BiPredicate;
     117: aload_0
     118: getfield      #3                  // Field collection:Ljava/lang/Object;
     121: aload_2
     122: invokeinterface #25,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
     127: ifeq          132
     130: aload_1
     131: areturn
     132: goto          81

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #39,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
       9: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #40,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
       9: aload_0
      10: getfield      #6                  // Field cleanupCallback:Ljava/util/function/Consumer;
      13: aload_0
      14: getfield      #3                  // Field collection:Ljava/lang/Object;
      17: invokeinterface #27,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      22: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #7                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #41,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
       9: ireturn
}
