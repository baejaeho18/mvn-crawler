Compiled from "MonoIgnoreThen.java"
final class reactor.core.publisher.MonoIgnoreThen<T> extends reactor.core.publisher.Mono<T> implements reactor.core.Fuseable {
  final org.reactivestreams.Publisher<?>[] ignore;

  final reactor.core.publisher.Mono<T> last;

  reactor.core.publisher.MonoIgnoreThen(org.reactivestreams.Publisher<?>[], reactor.core.publisher.Mono<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Mono."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String ignore
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class "[Lorg/reactivestreams/Publisher;"
      14: putfield      #5                  // Field ignore:[Lorg/reactivestreams/Publisher;
      17: aload_0
      18: aload_2
      19: ldc           #6                  // String last
      21: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #7                  // class reactor/core/publisher/Mono
      27: putfield      #8                  // Field last:Lreactor/core/publisher/Mono;
      30: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: new           #9                  // class reactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #5                  // Field ignore:[Lorg/reactivestreams/Publisher;
       9: aload_0
      10: getfield      #8                  // Field last:Lreactor/core/publisher/Mono;
      13: invokespecial #10                 // Method reactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain."<init>":(Lreactor/core/CoreSubscriber;[Lorg/reactivestreams/Publisher;Lreactor/core/publisher/Mono;)V
      16: astore_2
      17: aload_1
      18: aload_2
      19: invokeinterface #11,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      24: aload_2
      25: invokevirtual #12                 // Method reactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain.drain:()V
      28: return

  <U> reactor.core.publisher.MonoIgnoreThen<U> shift(reactor.core.publisher.Mono<U>);
    Code:
       0: aload_1
       1: ldc           #13                 // String newLast
       3: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #5                  // Field ignore:[Lorg/reactivestreams/Publisher;
      11: astore_2
      12: aload_2
      13: arraylength
      14: istore_3
      15: iload_3
      16: iconst_1
      17: iadd
      18: anewarray     #14                 // class org/reactivestreams/Publisher
      21: astore        4
      23: aload_2
      24: iconst_0
      25: aload         4
      27: iconst_0
      28: iload_3
      29: invokestatic  #15                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      32: aload         4
      34: iload_3
      35: aload_0
      36: getfield      #8                  // Field last:Lreactor/core/publisher/Mono;
      39: aastore
      40: new           #16                 // class reactor/core/publisher/MonoIgnoreThen
      43: dup
      44: aload         4
      46: aload_1
      47: invokespecial #17                 // Method "<init>":([Lorg/reactivestreams/Publisher;Lreactor/core/publisher/Mono;)V
      50: areturn
}
