Compiled from "MonoCreate.java"
final class reactor.core.publisher.MonoCreate<T> extends reactor.core.publisher.Mono<T> {
  final java.util.function.Consumer<reactor.core.publisher.MonoSink<T>> callback;

  reactor.core.publisher.MonoCreate(java.util.function.Consumer<reactor.core.publisher.MonoSink<T>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Mono."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field callback:Ljava/util/function/Consumer;
       9: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: new           #3                  // class reactor/core/publisher/MonoCreate$DefaultMonoSink
       3: dup
       4: aload_1
       5: invokespecial #4                  // Method reactor/core/publisher/MonoCreate$DefaultMonoSink."<init>":(Lreactor/core/CoreSubscriber;)V
       8: astore_2
       9: aload_1
      10: aload_2
      11: invokeinterface #5,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      16: aload_0
      17: getfield      #2                  // Field callback:Ljava/util/function/Consumer;
      20: aload_2
      21: invokeinterface #6,  2            // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      26: goto          44
      29: astore_3
      30: aload_2
      31: aload_3
      32: aload_1
      33: invokeinterface #8,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      38: invokestatic  #9                  // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      41: invokevirtual #10                 // Method reactor/core/publisher/MonoCreate$DefaultMonoSink.error:(Ljava/lang/Throwable;)V
      44: return
    Exception table:
       from    to  target type
          16    26    29   Class java/lang/Throwable
}
