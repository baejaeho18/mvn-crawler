Compiled from "MonoToCompletableFuture.java"
final class reactor.core.publisher.MonoToCompletableFuture<T> extends java.util.concurrent.CompletableFuture<T> implements reactor.core.CoreSubscriber<T> {
  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> ref;

  reactor.core.publisher.MonoToCompletableFuture();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/CompletableFuture."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field ref:Ljava/util/concurrent/atomic/AtomicReference;
      15: return

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #5                  // Method java/util/concurrent/CompletableFuture.cancel:(Z)Z
       5: istore_2
       6: iload_2
       7: ifeq          32
      10: aload_0
      11: getfield      #4                  // Field ref:Ljava/util/concurrent/atomic/AtomicReference;
      14: aconst_null
      15: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #7                  // class org/reactivestreams/Subscription
      21: astore_3
      22: aload_3
      23: ifnull        32
      26: aload_3
      27: invokeinterface #8,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      32: iload_2
      33: ireturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ref:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #7                  // class org/reactivestreams/Subscription
      11: aload_1
      12: invokestatic  #9                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
      15: ifeq          30
      18: aload_1
      19: ldc2_w        #11                 // long 9223372036854775807l
      22: invokeinterface #13,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      27: goto          36
      30: aload_1
      31: invokeinterface #8,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      36: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ref:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #7                  // class org/reactivestreams/Subscription
      11: astore_2
      12: aload_2
      13: ifnull        31
      16: aload_0
      17: aload_1
      18: invokevirtual #14                 // Method complete:(Ljava/lang/Object;)Z
      21: pop
      22: aload_2
      23: invokeinterface #8,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      28: goto          39
      31: aload_1
      32: aload_0
      33: invokevirtual #15                 // Method currentContext:()Lreactor/util/context/Context;
      36: invokestatic  #16                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      39: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ref:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnull        17
      11: aload_0
      12: aload_1
      13: invokevirtual #17                 // Method completeExceptionally:(Ljava/lang/Throwable;)Z
      16: pop
      17: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ref:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnull        17
      11: aload_0
      12: aconst_null
      13: invokevirtual #14                 // Method complete:(Ljava/lang/Object;)Z
      16: pop
      17: return
}
