Compiled from "Scannable.java"
public class reactor.core.Scannable$Attr<T> {
  public static final reactor.core.Scannable$Attr<reactor.core.Scannable> ACTUAL;

  public static final reactor.core.Scannable$Attr<java.lang.Integer> BUFFERED;

  public static final reactor.core.Scannable$Attr<java.lang.Integer> CAPACITY;

  public static final reactor.core.Scannable$Attr<java.lang.Boolean> CANCELLED;

  public static final reactor.core.Scannable$Attr<java.lang.Boolean> DELAY_ERROR;

  public static final reactor.core.Scannable$Attr<java.lang.Throwable> ERROR;

  public static final reactor.core.Scannable$Attr<java.lang.Long> LARGE_BUFFERED;

  public static final reactor.core.Scannable$Attr<java.lang.String> NAME;

  public static final reactor.core.Scannable$Attr<reactor.core.Scannable> PARENT;

  public static final reactor.core.Scannable$Attr<reactor.core.Scannable> RUN_ON;

  public static final reactor.core.Scannable$Attr<java.lang.Integer> PREFETCH;

  public static final reactor.core.Scannable$Attr<java.lang.Long> REQUESTED_FROM_DOWNSTREAM;

  public static final reactor.core.Scannable$Attr<java.lang.Boolean> TERMINATED;

  public static final reactor.core.Scannable$Attr<java.util.stream.Stream<reactor.util.function.Tuple2<java.lang.String, java.lang.String>>> TAGS;

  final T defaultValue;

  final java.util.function.Function<java.lang.Object, ? extends T> safeConverter;

  static final reactor.core.Scannable UNAVAILABLE_SCAN;

  static final reactor.core.Scannable NULL_SCAN;

  public T defaultValue();
    Code:
       0: aload_0
       1: getfield      #1                  // Field defaultValue:Ljava/lang/Object;
       4: areturn

  boolean isConversionSafe();
    Code:
       0: aload_0
       1: getfield      #2                  // Field safeConverter:Ljava/util/function/Function;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  T tryConvert(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #2                  // Field safeConverter:Ljava/util/function/Function;
      10: ifnonnull     15
      13: aload_1
      14: areturn
      15: aload_0
      16: getfield      #2                  // Field safeConverter:Ljava/util/function/Function;
      19: aload_1
      20: invokeinterface #3,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: areturn

  protected reactor.core.Scannable$Attr(T);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #4                  // Method "<init>":(Ljava/lang/Object;Ljava/util/function/Function;)V
       6: return

  protected reactor.core.Scannable$Attr(T, java.util.function.Function<java.lang.Object, ? extends T>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field defaultValue:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #2                  // Field safeConverter:Ljava/util/function/Function;
      14: return

  static java.util.stream.Stream<? extends reactor.core.Scannable> recurse(reactor.core.Scannable, reactor.core.Scannable$Attr<reactor.core.Scannable>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #6,  2            // InterfaceMethod reactor/core/Scannable.scan:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
       7: invokestatic  #7                  // InterfaceMethod reactor/core/Scannable.from:(Ljava/lang/Object;)Lreactor/core/Scannable;
      10: astore_2
      11: aload_2
      12: invokeinterface #8,  1            // InterfaceMethod reactor/core/Scannable.isScanAvailable:()Z
      17: ifne          24
      20: invokestatic  #9                  // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
      23: areturn
      24: new           #10                 // class reactor/core/Scannable$Attr$3
      27: dup
      28: aload_2
      29: aload_1
      30: invokespecial #11                 // Method reactor/core/Scannable$Attr$3."<init>":(Lreactor/core/Scannable;Lreactor/core/Scannable$Attr;)V
      33: iconst_0
      34: invokestatic  #12                 // Method java/util/Spliterators.spliteratorUnknownSize:(Ljava/util/Iterator;I)Ljava/util/Spliterator;
      37: iconst_0
      38: invokestatic  #13                 // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      41: areturn

  static {};
    Code:
       0: new           #14                 // class reactor/core/Scannable$Attr
       3: dup
       4: aconst_null
       5: invokedynamic #15,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: invokespecial #4                  // Method "<init>":(Ljava/lang/Object;Ljava/util/function/Function;)V
      13: putstatic     #16                 // Field ACTUAL:Lreactor/core/Scannable$Attr;
      16: new           #14                 // class reactor/core/Scannable$Attr
      19: dup
      20: iconst_0
      21: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: invokespecial #18                 // Method "<init>":(Ljava/lang/Object;)V
      27: putstatic     #19                 // Field BUFFERED:Lreactor/core/Scannable$Attr;
      30: new           #14                 // class reactor/core/Scannable$Attr
      33: dup
      34: iconst_0
      35: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: invokespecial #18                 // Method "<init>":(Ljava/lang/Object;)V
      41: putstatic     #20                 // Field CAPACITY:Lreactor/core/Scannable$Attr;
      44: new           #14                 // class reactor/core/Scannable$Attr
      47: dup
      48: iconst_0
      49: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      52: invokespecial #18                 // Method "<init>":(Ljava/lang/Object;)V
      55: putstatic     #22                 // Field CANCELLED:Lreactor/core/Scannable$Attr;
      58: new           #14                 // class reactor/core/Scannable$Attr
      61: dup
      62: iconst_0
      63: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      66: invokespecial #18                 // Method "<init>":(Ljava/lang/Object;)V
      69: putstatic     #23                 // Field DELAY_ERROR:Lreactor/core/Scannable$Attr;
      72: new           #14                 // class reactor/core/Scannable$Attr
      75: dup
      76: aconst_null
      77: invokespecial #18                 // Method "<init>":(Ljava/lang/Object;)V
      80: putstatic     #24                 // Field ERROR:Lreactor/core/Scannable$Attr;
      83: new           #14                 // class reactor/core/Scannable$Attr
      86: dup
      87: aconst_null
      88: invokespecial #18                 // Method "<init>":(Ljava/lang/Object;)V
      91: putstatic     #25                 // Field LARGE_BUFFERED:Lreactor/core/Scannable$Attr;
      94: new           #14                 // class reactor/core/Scannable$Attr
      97: dup
      98: aconst_null
      99: invokespecial #18                 // Method "<init>":(Ljava/lang/Object;)V
     102: putstatic     #26                 // Field NAME:Lreactor/core/Scannable$Attr;
     105: new           #14                 // class reactor/core/Scannable$Attr
     108: dup
     109: aconst_null
     110: invokedynamic #15,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     115: invokespecial #4                  // Method "<init>":(Ljava/lang/Object;Ljava/util/function/Function;)V
     118: putstatic     #27                 // Field PARENT:Lreactor/core/Scannable$Attr;
     121: new           #14                 // class reactor/core/Scannable$Attr
     124: dup
     125: aconst_null
     126: invokedynamic #15,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     131: invokespecial #4                  // Method "<init>":(Ljava/lang/Object;Ljava/util/function/Function;)V
     134: putstatic     #28                 // Field RUN_ON:Lreactor/core/Scannable$Attr;
     137: new           #14                 // class reactor/core/Scannable$Attr
     140: dup
     141: iconst_0
     142: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     145: invokespecial #18                 // Method "<init>":(Ljava/lang/Object;)V
     148: putstatic     #29                 // Field PREFETCH:Lreactor/core/Scannable$Attr;
     151: new           #14                 // class reactor/core/Scannable$Attr
     154: dup
     155: lconst_0
     156: invokestatic  #30                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     159: invokespecial #18                 // Method "<init>":(Ljava/lang/Object;)V
     162: putstatic     #31                 // Field REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
     165: new           #14                 // class reactor/core/Scannable$Attr
     168: dup
     169: iconst_0
     170: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     173: invokespecial #18                 // Method "<init>":(Ljava/lang/Object;)V
     176: putstatic     #32                 // Field TERMINATED:Lreactor/core/Scannable$Attr;
     179: new           #14                 // class reactor/core/Scannable$Attr
     182: dup
     183: aconst_null
     184: invokespecial #18                 // Method "<init>":(Ljava/lang/Object;)V
     187: putstatic     #33                 // Field TAGS:Lreactor/core/Scannable$Attr;
     190: new           #34                 // class reactor/core/Scannable$Attr$1
     193: dup
     194: invokespecial #35                 // Method reactor/core/Scannable$Attr$1."<init>":()V
     197: putstatic     #36                 // Field UNAVAILABLE_SCAN:Lreactor/core/Scannable;
     200: new           #37                 // class reactor/core/Scannable$Attr$2
     203: dup
     204: invokespecial #38                 // Method reactor/core/Scannable$Attr$2."<init>":()V
     207: putstatic     #39                 // Field NULL_SCAN:Lreactor/core/Scannable;
     210: return
}
