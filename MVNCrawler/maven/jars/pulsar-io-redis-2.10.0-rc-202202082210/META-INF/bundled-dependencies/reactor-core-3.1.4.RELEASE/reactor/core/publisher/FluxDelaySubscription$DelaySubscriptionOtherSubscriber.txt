Compiled from "FluxDelaySubscription.java"
final class reactor.core.publisher.FluxDelaySubscription$DelaySubscriptionOtherSubscriber<T, U> extends reactor.core.publisher.Operators$DeferredSubscription implements reactor.core.publisher.InnerOperator<U, T> {
  final java.util.function.Consumer<reactor.core.publisher.FluxDelaySubscription$DelaySubscriptionOtherSubscriber<T, U>> source;

  final reactor.core.CoreSubscriber<? super T> actual;

  org.reactivestreams.Subscription s;

  boolean done;

  reactor.core.publisher.FluxDelaySubscription$DelaySubscriptionOtherSubscriber(reactor.core.CoreSubscriber<? super T>, java.util.function.Consumer<reactor.core.publisher.FluxDelaySubscription$DelaySubscriptionOtherSubscriber<T, U>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Operators$DeferredSubscription."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field source:Ljava/util/function/Consumer;
      14: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: invokeinterface #4,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
       9: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #7                  // Field reactor/core/Scannable$Attr.ACTUAL:Lreactor/core/Scannable$Attr;
      16: if_acmpne     24
      19: aload_0
      20: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      23: areturn
      24: aload_1
      25: getstatic     #8                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      28: if_acmpne     39
      31: aload_0
      32: getfield      #9                  // Field done:Z
      35: invokestatic  #10                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      38: areturn
      39: aload_0
      40: aload_1
      41: invokespecial #11                 // Method reactor/core/publisher/Operators$DeferredSubscription.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      44: areturn

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #12,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: aload_0
      10: invokespecial #13                 // Method reactor/core/publisher/Operators$DeferredSubscription.cancel:()V
      13: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #14                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          35
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #15,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: ldc2_w        #17                 // long 9223372036854775807l
      30: invokeinterface #19,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      35: return

  public void onNext(U);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #9                  // Field done:Z
      13: aload_0
      14: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      17: invokeinterface #12,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      22: aload_0
      23: getfield      #3                  // Field source:Ljava/util/function/Consumer;
      26: aload_0
      27: invokeinterface #20,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      32: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #4,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #21                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #9                  // Field done:Z
      26: aload_0
      27: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: invokeinterface #22,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #9                  // Field done:Z
      13: aload_0
      14: getfield      #3                  // Field source:Ljava/util/function/Consumer;
      17: aload_0
      18: invokeinterface #20,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      23: return
}
