Compiled from "FluxFlatMap.java"
final class reactor.core.publisher.FluxFlatMap<T, R> extends reactor.core.publisher.FluxOperator<T, R> {
  final java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>> mapper;

  final boolean delayError;

  final int maxConcurrency;

  final java.util.function.Supplier<? extends java.util.Queue<R>> mainQueueSupplier;

  final int prefetch;

  final java.util.function.Supplier<? extends java.util.Queue<R>> innerQueueSupplier;

  reactor.core.publisher.FluxFlatMap(reactor.core.publisher.Flux<? extends T>, java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>>, boolean, int, java.util.function.Supplier<? extends java.util.Queue<R>>, int, java.util.function.Supplier<? extends java.util.Queue<R>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: iload         6
       7: ifgt          38
      10: new           #2                  // class java/lang/IllegalArgumentException
      13: dup
      14: new           #3                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #5                  // String prefetch > 0 required but it was
      23: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload         6
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iload         4
      40: ifgt          71
      43: new           #2                  // class java/lang/IllegalArgumentException
      46: dup
      47: new           #3                  // class java/lang/StringBuilder
      50: dup
      51: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #10                 // String maxConcurrency > 0 required but it was
      56: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: iload         4
      61: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: aload_2
      73: ldc           #11                 // String mapper
      75: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      78: checkcast     #13                 // class java/util/function/Function
      81: putfield      #14                 // Field mapper:Ljava/util/function/Function;
      84: aload_0
      85: iload_3
      86: putfield      #15                 // Field delayError:Z
      89: aload_0
      90: iload         6
      92: putfield      #16                 // Field prefetch:I
      95: aload_0
      96: iload         4
      98: putfield      #17                 // Field maxConcurrency:I
     101: aload_0
     102: aload         5
     104: ldc           #18                 // String mainQueueSupplier
     106: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     109: checkcast     #19                 // class java/util/function/Supplier
     112: putfield      #20                 // Field mainQueueSupplier:Ljava/util/function/Supplier;
     115: aload_0
     116: aload         7
     118: ldc           #21                 // String innerQueueSupplier
     120: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     123: checkcast     #19                 // class java/util/function/Supplier
     126: putfield      #22                 // Field innerQueueSupplier:Ljava/util/function/Supplier;
     129: return

  public int getPrefetch();
    Code:
       0: aload_0
       1: getfield      #16                 // Field prefetch:I
       4: ireturn

  public void subscribe(reactor.core.CoreSubscriber<? super R>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field source:Lreactor/core/publisher/Flux;
       4: aload_1
       5: aload_0
       6: getfield      #14                 // Field mapper:Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #24                 // Method trySubscribeScalarMap:(Lorg/reactivestreams/Publisher;Lreactor/core/CoreSubscriber;Ljava/util/function/Function;Z)Z
      13: ifeq          17
      16: return
      17: aload_0
      18: getfield      #23                 // Field source:Lreactor/core/publisher/Flux;
      21: new           #25                 // class reactor/core/publisher/FluxFlatMap$FlatMapMain
      24: dup
      25: aload_1
      26: aload_0
      27: getfield      #14                 // Field mapper:Ljava/util/function/Function;
      30: aload_0
      31: getfield      #15                 // Field delayError:Z
      34: aload_0
      35: getfield      #17                 // Field maxConcurrency:I
      38: aload_0
      39: getfield      #20                 // Field mainQueueSupplier:Ljava/util/function/Supplier;
      42: aload_0
      43: getfield      #16                 // Field prefetch:I
      46: aload_0
      47: getfield      #22                 // Field innerQueueSupplier:Ljava/util/function/Supplier;
      50: invokespecial #26                 // Method reactor/core/publisher/FluxFlatMap$FlatMapMain."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/Function;ZILjava/util/function/Supplier;ILjava/util/function/Supplier;)V
      53: invokevirtual #27                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      56: return

  static <T, R> boolean trySubscribeScalarMap(org.reactivestreams.Publisher<? extends T>, reactor.core.CoreSubscriber<? super R>, java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>>, boolean);
    Code:
       0: aload_0
       1: instanceof    #28                 // class java/util/concurrent/Callable
       4: ifeq          206
       7: aload_0
       8: checkcast     #28                 // class java/util/concurrent/Callable
      11: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      16: astore        4
      18: goto          40
      21: astore        5
      23: aload_1
      24: aload         5
      26: aload_1
      27: invokeinterface #31,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      32: invokestatic  #32                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      35: invokestatic  #33                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      38: iconst_1
      39: ireturn
      40: aload         4
      42: ifnonnull     51
      45: aload_1
      46: invokestatic  #34                 // Method reactor/core/publisher/Operators.complete:(Lorg/reactivestreams/Subscriber;)V
      49: iconst_1
      50: ireturn
      51: aload_2
      52: aload         4
      54: invokeinterface #35,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      59: ldc           #36                 // String The mapper returned a null Publisher
      61: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      64: checkcast     #37                 // class org/reactivestreams/Publisher
      67: astore        5
      69: goto          94
      72: astore        6
      74: aload_1
      75: aconst_null
      76: aload         6
      78: aload         4
      80: aload_1
      81: invokeinterface #31,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      86: invokestatic  #38                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      89: invokestatic  #33                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      92: iconst_1
      93: ireturn
      94: aload         5
      96: instanceof    #28                 // class java/util/concurrent/Callable
      99: ifeq          166
     102: aload         5
     104: checkcast     #28                 // class java/util/concurrent/Callable
     107: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
     112: astore        6
     114: goto          139
     117: astore        7
     119: aload_1
     120: aconst_null
     121: aload         7
     123: aload         4
     125: aload_1
     126: invokeinterface #31,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     131: invokestatic  #38                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     134: invokestatic  #33                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
     137: iconst_1
     138: ireturn
     139: aload         6
     141: ifnull        159
     144: aload_1
     145: aload_1
     146: aload         6
     148: invokestatic  #39                 // Method reactor/core/publisher/Operators.scalarSubscription:(Lreactor/core/CoreSubscriber;Ljava/lang/Object;)Lorg/reactivestreams/Subscription;
     151: invokeinterface #40,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
     156: goto          163
     159: aload_1
     160: invokestatic  #34                 // Method reactor/core/publisher/Operators.complete:(Lorg/reactivestreams/Subscriber;)V
     163: goto          204
     166: iload_3
     167: ifeq          178
     170: aload         5
     172: instanceof    #41                 // class reactor/core/Fuseable
     175: ifeq          189
     178: aload         5
     180: aload_1
     181: invokeinterface #42,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     186: goto          204
     189: aload         5
     191: new           #43                 // class reactor/core/publisher/FluxHide$SuppressFuseableSubscriber
     194: dup
     195: aload_1
     196: invokespecial #44                 // Method reactor/core/publisher/FluxHide$SuppressFuseableSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
     199: invokeinterface #42,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     204: iconst_1
     205: ireturn
     206: iconst_0
     207: ireturn
    Exception table:
       from    to  target type
           7    18    21   Class java/lang/Throwable
          51    69    72   Class java/lang/Throwable
         102   114   117   Class java/lang/Throwable
}
