Compiled from "FluxFlattenIterable.java"
final class reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber<T, R> implements reactor.core.publisher.InnerOperator<T, R>, reactor.core.Fuseable$QueueSubscription<R> {
  final reactor.core.CoreSubscriber<? super R> actual;

  final java.util.function.Function<? super T, ? extends java.lang.Iterable<? extends R>> mapper;

  final int prefetch;

  final int limit;

  final java.util.function.Supplier<java.util.Queue<T>> queueSupplier;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber> WIP;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber> REQUESTED;

  org.reactivestreams.Subscription s;

  java.util.Queue<T> queue;

  volatile boolean done;

  volatile boolean cancelled;

  volatile java.lang.Throwable error;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber, java.lang.Throwable> ERROR;

  java.util.Iterator<? extends R> current;

  int consumed;

  int fusionMode;

  reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber(reactor.core.CoreSubscriber<? super R>, java.util.function.Function<? super T, ? extends java.lang.Iterable<? extends R>>, int, java.util.function.Supplier<java.util.Queue<T>>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field mapper:Ljava/util/function/Function;
      14: aload_0
      15: iload_3
      16: putfield      #5                  // Field prefetch:I
      19: aload_0
      20: aload         4
      22: putfield      #6                  // Field queueSupplier:Ljava/util/function/Supplier;
      25: aload_0
      26: iload_3
      27: invokestatic  #7                  // Method reactor/core/publisher/Operators.unboundedOrLimit:(I)I
      30: putfield      #8                  // Field limit:I
      33: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #9                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #11                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #12                 // Field done:Z
      23: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_1
      28: getstatic     #14                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      31: if_acmpne     39
      34: aload_0
      35: getfield      #15                 // Field error:Ljava/lang/Throwable;
      38: areturn
      39: aload_1
      40: getstatic     #16                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      43: if_acmpne     54
      46: aload_0
      47: getfield      #17                 // Field requested:J
      50: invokestatic  #18                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      53: areturn
      54: aload_1
      55: getstatic     #19                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      58: if_acmpne     69
      61: aload_0
      62: getfield      #20                 // Field cancelled:Z
      65: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      68: areturn
      69: aload_1
      70: getstatic     #21                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      73: if_acmpne     84
      76: aload_0
      77: getfield      #5                  // Field prefetch:I
      80: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      83: areturn
      84: aload_1
      85: getstatic     #23                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      88: if_acmpne     115
      91: aload_0
      92: getfield      #24                 // Field queue:Ljava/util/Queue;
      95: ifnull        110
      98: aload_0
      99: getfield      #24                 // Field queue:Ljava/util/Queue;
     102: invokeinterface #25,  1           // InterfaceMethod java/util/Queue.size:()I
     107: goto          111
     110: iconst_0
     111: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     114: areturn
     115: aload_0
     116: aload_1
     117: invokespecial #26                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
     120: areturn

  public reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #27                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          145
      11: aload_0
      12: aload_1
      13: putfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
      16: aload_1
      17: instanceof    #28                 // class reactor/core/Fuseable$QueueSubscription
      20: ifeq          106
      23: aload_1
      24: checkcast     #28                 // class reactor/core/Fuseable$QueueSubscription
      27: astore_2
      28: aload_2
      29: iconst_3
      30: invokeinterface #29,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      35: istore_3
      36: iload_3
      37: iconst_1
      38: if_icmpne     67
      41: aload_0
      42: iload_3
      43: putfield      #30                 // Field fusionMode:I
      46: aload_0
      47: aload_2
      48: putfield      #24                 // Field queue:Ljava/util/Queue;
      51: aload_0
      52: iconst_1
      53: putfield      #12                 // Field done:Z
      56: aload_0
      57: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      60: aload_0
      61: invokeinterface #31,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      66: return
      67: iload_3
      68: iconst_2
      69: if_icmpne     106
      72: aload_0
      73: iload_3
      74: putfield      #30                 // Field fusionMode:I
      77: aload_0
      78: aload_2
      79: putfield      #24                 // Field queue:Ljava/util/Queue;
      82: aload_0
      83: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      86: aload_0
      87: invokeinterface #31,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      92: aload_1
      93: aload_0
      94: getfield      #5                  // Field prefetch:I
      97: invokestatic  #32                 // Method reactor/core/publisher/Operators.unboundedOrPrefetch:(I)J
     100: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     105: return
     106: aload_0
     107: aload_0
     108: getfield      #6                  // Field queueSupplier:Ljava/util/function/Supplier;
     111: invokeinterface #34,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
     116: checkcast     #35                 // class java/util/Queue
     119: putfield      #24                 // Field queue:Ljava/util/Queue;
     122: aload_0
     123: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     126: aload_0
     127: invokeinterface #31,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
     132: aload_1
     133: aload_0
     134: getfield      #5                  // Field prefetch:I
     137: invokestatic  #32                 // Method reactor/core/publisher/Operators.unboundedOrPrefetch:(I)J
     140: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     145: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #30                 // Field fusionMode:I
       4: iconst_2
       5: if_icmpeq     47
       8: aload_0
       9: getfield      #24                 // Field queue:Ljava/util/Queue;
      12: aload_1
      13: invokeinterface #36,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      18: ifne          47
      21: aload_0
      22: aload_0
      23: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
      26: ldc           #38                 // String Queue is full: Reactive Streams source doesn\'t respect backpressure
      28: invokestatic  #39                 // Method reactor/core/Exceptions.failWithOverflow:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      31: aload_0
      32: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      35: invokeinterface #40,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      40: invokestatic  #41                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      43: invokevirtual #42                 // Method onError:(Ljava/lang/Throwable;)V
      46: return
      47: aload_0
      48: invokevirtual #43                 // Method drain:()V
      51: return

  public void onError(java.lang.Throwable);
    Code:
       0: getstatic     #44                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #45                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: ifeq          23
      11: aload_0
      12: iconst_1
      13: putfield      #12                 // Field done:Z
      16: aload_0
      17: invokevirtual #43                 // Method drain:()V
      20: goto          36
      23: aload_1
      24: aload_0
      25: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      28: invokeinterface #40,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      33: invokestatic  #46                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field done:Z
       5: aload_0
       6: invokevirtual #43                 // Method drain:()V
       9: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #47                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          20
       7: getstatic     #48                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #49                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #43                 // Method drain:()V
      20: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #20                 // Field cancelled:Z
       4: ifne          40
       7: aload_0
       8: iconst_1
       9: putfield      #20                 // Field cancelled:Z
      12: aload_0
      13: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
      16: invokeinterface #50,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      21: getstatic     #51                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      24: aload_0
      25: invokevirtual #52                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      28: ifne          40
      31: aload_0
      32: getfield      #24                 // Field queue:Ljava/util/Queue;
      35: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
      40: return

  void drainAsync();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: astore_1
       5: aload_0
       6: getfield      #24                 // Field queue:Ljava/util/Queue;
       9: astore_2
      10: iconst_1
      11: istore_3
      12: aload_0
      13: getfield      #54                 // Field current:Ljava/util/Iterator;
      16: astore        4
      18: aload         4
      20: ifnonnull     273
      23: aload_0
      24: getfield      #20                 // Field cancelled:Z
      27: ifeq          37
      30: aload_2
      31: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
      36: return
      37: aload_0
      38: getfield      #15                 // Field error:Ljava/lang/Throwable;
      41: astore        5
      43: aload         5
      45: ifnull        77
      48: getstatic     #44                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      51: aload_0
      52: invokestatic  #55                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
      55: astore        5
      57: aload_0
      58: aconst_null
      59: putfield      #54                 // Field current:Ljava/util/Iterator;
      62: aload_2
      63: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
      68: aload_1
      69: aload         5
      71: invokeinterface #56,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      76: return
      77: aload_0
      78: getfield      #12                 // Field done:Z
      81: istore        6
      83: aload_2
      84: invokeinterface #57,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      89: astore        7
      91: goto          116
      94: astore        8
      96: aload_0
      97: aconst_null
      98: putfield      #54                 // Field current:Ljava/util/Iterator;
     101: aload_2
     102: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
     107: aload_1
     108: aload         8
     110: invokeinterface #56,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     115: return
     116: aload         7
     118: ifnonnull     125
     121: iconst_1
     122: goto          126
     125: iconst_0
     126: istore        8
     128: iload         6
     130: ifeq          145
     133: iload         8
     135: ifeq          145
     138: aload_1
     139: invokeinterface #59,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     144: return
     145: iload         8
     147: ifne          273
     150: aload_0
     151: getfield      #4                  // Field mapper:Ljava/util/function/Function;
     154: aload         7
     156: invokeinterface #60,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     161: checkcast     #61                 // class java/lang/Iterable
     164: astore        9
     166: aload         9
     168: invokeinterface #62,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     173: astore        4
     175: aload         4
     177: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     182: istore        10
     184: goto          219
     187: astore        11
     189: aconst_null
     190: astore        4
     192: aload_0
     193: aload_0
     194: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     197: aload         11
     199: aload         7
     201: aload_0
     202: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     205: invokeinterface #40,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     210: invokestatic  #64                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     213: invokevirtual #42                 // Method onError:(Ljava/lang/Throwable;)V
     216: goto          18
     219: iload         10
     221: ifne          273
     224: aconst_null
     225: astore        4
     227: aload_0
     228: getfield      #65                 // Field consumed:I
     231: iconst_1
     232: iadd
     233: istore        11
     235: iload         11
     237: aload_0
     238: getfield      #8                  // Field limit:I
     241: if_icmpne     264
     244: aload_0
     245: iconst_0
     246: putfield      #65                 // Field consumed:I
     249: aload_0
     250: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     253: iload         11
     255: i2l
     256: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     261: goto          18
     264: aload_0
     265: iload         11
     267: putfield      #65                 // Field consumed:I
     270: goto          18
     273: aload         4
     275: ifnull        683
     278: aload_0
     279: getfield      #17                 // Field requested:J
     282: lstore        5
     284: lconst_0
     285: lstore        7
     287: lload         7
     289: lload         5
     291: lcmp
     292: ifeq          532
     295: aload_0
     296: getfield      #20                 // Field cancelled:Z
     299: ifeq          314
     302: aload_0
     303: aconst_null
     304: putfield      #54                 // Field current:Ljava/util/Iterator;
     307: aload_2
     308: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
     313: return
     314: aload_0
     315: getfield      #15                 // Field error:Ljava/lang/Throwable;
     318: astore        9
     320: aload         9
     322: ifnull        354
     325: getstatic     #44                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     328: aload_0
     329: invokestatic  #55                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     332: astore        9
     334: aload_0
     335: aconst_null
     336: putfield      #54                 // Field current:Ljava/util/Iterator;
     339: aload_2
     340: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
     345: aload_1
     346: aload         9
     348: invokeinterface #56,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     353: return
     354: aload         4
     356: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     361: ldc           #67                 // String iterator returned null
     363: invokestatic  #68                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     366: astore        10
     368: goto          398
     371: astore        11
     373: aload_0
     374: aload_0
     375: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     378: aload         11
     380: aload_0
     381: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     384: invokeinterface #40,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     389: invokestatic  #41                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     392: invokevirtual #42                 // Method onError:(Ljava/lang/Throwable;)V
     395: goto          287
     398: aload_1
     399: aload         10
     401: invokeinterface #69,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     406: aload_0
     407: getfield      #20                 // Field cancelled:Z
     410: ifeq          425
     413: aload_0
     414: aconst_null
     415: putfield      #54                 // Field current:Ljava/util/Iterator;
     418: aload_2
     419: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
     424: return
     425: lload         7
     427: lconst_1
     428: ladd
     429: lstore        7
     431: aload         4
     433: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     438: istore        11
     440: goto          470
     443: astore        12
     445: aload_0
     446: aload_0
     447: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     450: aload         12
     452: aload_0
     453: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     456: invokeinterface #40,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     461: invokestatic  #41                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     464: invokevirtual #42                 // Method onError:(Ljava/lang/Throwable;)V
     467: goto          287
     470: iload         11
     472: ifne          529
     475: aload_0
     476: getfield      #65                 // Field consumed:I
     479: iconst_1
     480: iadd
     481: istore        12
     483: iload         12
     485: aload_0
     486: getfield      #8                  // Field limit:I
     489: if_icmpne     512
     492: aload_0
     493: iconst_0
     494: putfield      #65                 // Field consumed:I
     497: aload_0
     498: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     501: iload         12
     503: i2l
     504: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     509: goto          518
     512: aload_0
     513: iload         12
     515: putfield      #65                 // Field consumed:I
     518: aconst_null
     519: astore        4
     521: aload_0
     522: aconst_null
     523: putfield      #54                 // Field current:Ljava/util/Iterator;
     526: goto          532
     529: goto          287
     532: lload         7
     534: lload         5
     536: lcmp
     537: ifne          648
     540: aload_0
     541: getfield      #20                 // Field cancelled:Z
     544: ifeq          559
     547: aload_0
     548: aconst_null
     549: putfield      #54                 // Field current:Ljava/util/Iterator;
     552: aload_2
     553: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
     558: return
     559: aload_0
     560: getfield      #15                 // Field error:Ljava/lang/Throwable;
     563: astore        9
     565: aload         9
     567: ifnull        599
     570: getstatic     #44                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     573: aload_0
     574: invokestatic  #55                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     577: astore        9
     579: aload_0
     580: aconst_null
     581: putfield      #54                 // Field current:Ljava/util/Iterator;
     584: aload_2
     585: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
     590: aload_1
     591: aload         9
     593: invokeinterface #56,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     598: return
     599: aload_0
     600: getfield      #12                 // Field done:Z
     603: istore        10
     605: aload_2
     606: invokeinterface #70,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
     611: ifeq          623
     614: aload         4
     616: ifnonnull     623
     619: iconst_1
     620: goto          624
     623: iconst_0
     624: istore        11
     626: iload         10
     628: ifeq          648
     631: iload         11
     633: ifeq          648
     636: aload_0
     637: aconst_null
     638: putfield      #54                 // Field current:Ljava/util/Iterator;
     641: aload_1
     642: invokeinterface #59,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     647: return
     648: lload         7
     650: lconst_0
     651: lcmp
     652: ifeq          675
     655: lload         5
     657: ldc2_w        #72                 // long 9223372036854775807l
     660: lcmp
     661: ifeq          675
     664: getstatic     #48                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     667: aload_0
     668: lload         7
     670: lneg
     671: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
     674: pop2
     675: aload         4
     677: ifnonnull     683
     680: goto          18
     683: aload_0
     684: aload         4
     686: putfield      #54                 // Field current:Ljava/util/Iterator;
     689: getstatic     #51                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     692: aload_0
     693: iload_3
     694: ineg
     695: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     698: istore_3
     699: iload_3
     700: ifne          18
     703: goto          706
     706: return
    Exception table:
       from    to  target type
          83    91    94   Class java/lang/Throwable
         150   184   187   Class java/lang/Throwable
         354   368   371   Class java/lang/Throwable
         431   440   443   Class java/lang/Throwable

  void drainSync();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: astore_1
       5: iconst_1
       6: istore_2
       7: aload_0
       8: getfield      #54                 // Field current:Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: ifnonnull     193
      16: aload_0
      17: getfield      #20                 // Field cancelled:Z
      20: ifeq          33
      23: aload_0
      24: getfield      #24                 // Field queue:Ljava/util/Queue;
      27: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
      32: return
      33: aload_0
      34: getfield      #12                 // Field done:Z
      37: istore        4
      39: aload_0
      40: getfield      #24                 // Field queue:Ljava/util/Queue;
      43: astore        6
      45: aload         6
      47: invokeinterface #57,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      52: astore        5
      54: goto          80
      57: astore        7
      59: aload_0
      60: aconst_null
      61: putfield      #54                 // Field current:Ljava/util/Iterator;
      64: aload         6
      66: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
      71: aload_1
      72: aload         7
      74: invokeinterface #56,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      79: return
      80: aload         5
      82: ifnonnull     89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: istore        7
      92: iload         4
      94: ifeq          109
      97: iload         7
      99: ifeq          109
     102: aload_1
     103: invokeinterface #59,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     108: return
     109: iload         7
     111: ifne          193
     114: aload_0
     115: getfield      #4                  // Field mapper:Ljava/util/function/Function;
     118: aload         5
     120: invokeinterface #60,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     125: checkcast     #61                 // class java/lang/Iterable
     128: astore        8
     130: aload         8
     132: invokeinterface #62,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     137: astore_3
     138: aload_3
     139: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     144: istore        9
     146: goto          183
     149: astore        10
     151: aload_0
     152: aconst_null
     153: putfield      #54                 // Field current:Ljava/util/Iterator;
     156: aload_1
     157: aload_0
     158: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     161: aload         10
     163: aload         5
     165: aload_0
     166: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     169: invokeinterface #40,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     174: invokestatic  #64                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     177: invokeinterface #56,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     182: return
     183: iload         9
     185: ifne          193
     188: aconst_null
     189: astore_3
     190: goto          12
     193: aload_3
     194: ifnull        496
     197: aload_0
     198: getfield      #17                 // Field requested:J
     201: lstore        4
     203: lconst_0
     204: lstore        6
     206: lload         6
     208: lload         4
     210: lcmp
     211: ifeq          381
     214: aload_0
     215: getfield      #20                 // Field cancelled:Z
     218: ifeq          236
     221: aload_0
     222: aconst_null
     223: putfield      #54                 // Field current:Ljava/util/Iterator;
     226: aload_0
     227: getfield      #24                 // Field queue:Ljava/util/Queue;
     230: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
     235: return
     236: aload_3
     237: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     242: ldc           #67                 // String iterator returned null
     244: invokestatic  #68                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     247: astore        8
     249: goto          284
     252: astore        9
     254: aload_0
     255: aconst_null
     256: putfield      #54                 // Field current:Ljava/util/Iterator;
     259: aload_1
     260: aload_0
     261: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     264: aload         9
     266: aload_0
     267: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     270: invokeinterface #40,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     275: invokestatic  #41                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     278: invokeinterface #56,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     283: return
     284: aload_1
     285: aload         8
     287: invokeinterface #69,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     292: aload_0
     293: getfield      #20                 // Field cancelled:Z
     296: ifeq          314
     299: aload_0
     300: aconst_null
     301: putfield      #54                 // Field current:Ljava/util/Iterator;
     304: aload_0
     305: getfield      #24                 // Field queue:Ljava/util/Queue;
     308: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
     313: return
     314: lload         6
     316: lconst_1
     317: ladd
     318: lstore        6
     320: aload_3
     321: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     326: istore        9
     328: goto          363
     331: astore        10
     333: aload_0
     334: aconst_null
     335: putfield      #54                 // Field current:Ljava/util/Iterator;
     338: aload_1
     339: aload_0
     340: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     343: aload         10
     345: aload_0
     346: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     349: invokeinterface #40,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     354: invokestatic  #41                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     357: invokeinterface #56,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     362: return
     363: iload         9
     365: ifne          378
     368: aconst_null
     369: astore_3
     370: aload_0
     371: aconst_null
     372: putfield      #54                 // Field current:Ljava/util/Iterator;
     375: goto          381
     378: goto          206
     381: lload         6
     383: lload         4
     385: lcmp
     386: ifne          462
     389: aload_0
     390: getfield      #20                 // Field cancelled:Z
     393: ifeq          411
     396: aload_0
     397: aconst_null
     398: putfield      #54                 // Field current:Ljava/util/Iterator;
     401: aload_0
     402: getfield      #24                 // Field queue:Ljava/util/Queue;
     405: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
     410: return
     411: aload_0
     412: getfield      #12                 // Field done:Z
     415: istore        8
     417: aload_0
     418: getfield      #24                 // Field queue:Ljava/util/Queue;
     421: invokeinterface #70,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
     426: ifeq          437
     429: aload_3
     430: ifnonnull     437
     433: iconst_1
     434: goto          438
     437: iconst_0
     438: istore        9
     440: iload         8
     442: ifeq          462
     445: iload         9
     447: ifeq          462
     450: aload_0
     451: aconst_null
     452: putfield      #54                 // Field current:Ljava/util/Iterator;
     455: aload_1
     456: invokeinterface #59,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     461: return
     462: lload         6
     464: lconst_0
     465: lcmp
     466: ifeq          489
     469: lload         4
     471: ldc2_w        #72                 // long 9223372036854775807l
     474: lcmp
     475: ifeq          489
     478: getstatic     #48                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     481: aload_0
     482: lload         6
     484: lneg
     485: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
     488: pop2
     489: aload_3
     490: ifnonnull     496
     493: goto          12
     496: aload_0
     497: aload_3
     498: putfield      #54                 // Field current:Ljava/util/Iterator;
     501: getstatic     #51                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     504: aload_0
     505: iload_2
     506: ineg
     507: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     510: istore_2
     511: iload_2
     512: ifne          12
     515: goto          518
     518: return
    Exception table:
       from    to  target type
          45    54    57   Class java/lang/Throwable
         114   146   149   Class java/lang/Throwable
         236   249   252   Class java/lang/Throwable
         320   328   331   Class java/lang/Throwable

  void drain();
    Code:
       0: getstatic     #51                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #52                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #30                 // Field fusionMode:I
      15: iconst_1
      16: if_icmpne     26
      19: aload_0
      20: invokevirtual #76                 // Method drainSync:()V
      23: goto          30
      26: aload_0
      27: invokevirtual #77                 // Method drainAsync:()V
      30: return

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #54                 // Field current:Ljava/util/Iterator;
       5: aload_0
       6: getfield      #24                 // Field queue:Ljava/util/Queue;
       9: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.clear:()V
      14: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #54                 // Field current:Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: ifnull        24
       9: aload_1
      10: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #24                 // Field queue:Ljava/util/Queue;
      28: invokeinterface #70,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      33: ireturn

  public R poll();
    Code:
       0: aload_0
       1: getfield      #54                 // Field current:Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: ifnonnull     64
       9: aload_0
      10: getfield      #24                 // Field queue:Ljava/util/Queue;
      13: invokeinterface #57,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      18: astore_2
      19: aload_2
      20: ifnonnull     25
      23: aconst_null
      24: areturn
      25: aload_0
      26: getfield      #4                  // Field mapper:Ljava/util/function/Function;
      29: aload_2
      30: invokeinterface #60,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #61                 // class java/lang/Iterable
      38: invokeinterface #62,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      43: astore_1
      44: aload_1
      45: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifne          56
      53: goto          5
      56: aload_0
      57: aload_1
      58: putfield      #54                 // Field current:Ljava/util/Iterator;
      61: goto          78
      64: aload_1
      65: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      70: ifne          78
      73: aconst_null
      74: astore_1
      75: goto          5
      78: aload_1
      79: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: ldc           #67                 // String iterator returned null
      86: invokestatic  #68                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      89: astore_2
      90: aload_1
      91: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      96: ifne          104
      99: aload_0
     100: aconst_null
     101: putfield      #54                 // Field current:Ljava/util/Iterator;
     104: aload_2
     105: areturn

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iand
       3: ifeq          16
       6: aload_0
       7: getfield      #30                 // Field fusionMode:I
      10: iconst_1
      11: if_icmpne     16
      14: iconst_1
      15: ireturn
      16: iconst_0
      17: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #24                 // Field queue:Ljava/util/Queue;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/Queue.size:()I
       9: ireturn

  static {};
    Code:
       0: ldc           #78                 // class reactor/core/publisher/FluxFlattenIterable$FlattenIterableSubscriber
       2: ldc           #79                 // String wip
       4: invokestatic  #80                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #51                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: ldc           #78                 // class reactor/core/publisher/FluxFlattenIterable$FlattenIterableSubscriber
      12: ldc           #81                 // String requested
      14: invokestatic  #82                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      17: putstatic     #48                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      20: ldc           #78                 // class reactor/core/publisher/FluxFlattenIterable$FlattenIterableSubscriber
      22: ldc           #58                 // class java/lang/Throwable
      24: ldc           #83                 // String error
      26: invokestatic  #84                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      29: putstatic     #44                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      32: return
}
