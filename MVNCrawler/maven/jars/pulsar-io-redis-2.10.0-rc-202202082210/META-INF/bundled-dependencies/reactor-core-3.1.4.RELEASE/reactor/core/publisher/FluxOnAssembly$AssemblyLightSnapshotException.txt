Compiled from "FluxOnAssembly.java"
final class reactor.core.publisher.FluxOnAssembly$AssemblyLightSnapshotException extends reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException {
  reactor.core.publisher.FluxOnAssembly$AssemblyLightSnapshotException(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOnAssembly$AssemblySnapshotException."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #2                  // class java/lang/StringBuilder
       9: dup
      10: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      13: ldc           #4                  // String \"description\" : \"
      15: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_1
      19: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #6                  // String \"
      24: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: putfield      #8                  // Field cached:Ljava/lang/String;
      33: return

  public synchronized java.lang.Throwable fillInStackTrace();
    Code:
       0: aload_0
       1: areturn

  public boolean isLight();
    Code:
       0: iconst_1
       1: ireturn

  java.lang.String stackFirst();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method toString:()Ljava/lang/String;
       4: areturn
}
