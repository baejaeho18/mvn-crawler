Compiled from "FluxIterable.java"
final class reactor.core.publisher.FluxIterable$IterableSubscription<T> implements reactor.core.publisher.InnerProducer<T>, reactor.core.Fuseable$SynchronousSubscription<T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final java.util.Iterator<? extends T> iterator;

  final java.lang.Runnable onClose;

  volatile boolean cancelled;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxIterable$IterableSubscription> REQUESTED;

  int state;

  static final int STATE_HAS_NEXT_NO_VALUE;

  static final int STATE_HAS_NEXT_HAS_VALUE;

  static final int STATE_NO_NEXT;

  static final int STATE_CALL_HAS_NEXT;

  T current;

  reactor.core.publisher.FluxIterable$IterableSubscription(reactor.core.CoreSubscriber<? super T>, java.util.Iterator<? extends T>, java.lang.Runnable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field iterator:Ljava/util/Iterator;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field onClose:Ljava/lang/Runnable;
      19: return

  reactor.core.publisher.FluxIterable$IterableSubscription(reactor.core.CoreSubscriber<? super T>, java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #5                  // Method "<init>":(Lreactor/core/CoreSubscriber;Ljava/util/Iterator;Ljava/lang/Runnable;)V
       7: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #6                  // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          40
       7: getstatic     #7                  // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #8                  // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: lconst_0
      16: lcmp
      17: ifne          40
      20: lload_1
      21: ldc2_w        #10                 // long 9223372036854775807l
      24: lcmp
      25: ifne          35
      28: aload_0
      29: invokevirtual #12                 // Method fastPath:()V
      32: goto          40
      35: aload_0
      36: lload_1
      37: invokevirtual #13                 // Method slowPath:(J)V
      40: return

  private void onCloseWithDropError();
    Code:
       0: aload_0
       1: getfield      #4                  // Field onClose:Ljava/lang/Runnable;
       4: ifnull        33
       7: aload_0
       8: getfield      #4                  // Field onClose:Ljava/lang/Runnable;
      11: invokeinterface #14,  1           // InterfaceMethod java/lang/Runnable.run:()V
      16: goto          33
      19: astore_1
      20: aload_1
      21: aload_0
      22: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      25: invokeinterface #16,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      30: invokestatic  #17                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      33: return
    Exception table:
       from    to  target type
           7    16    19   Class java/lang/Throwable

  void slowPath(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field iterator:Ljava/util/Iterator;
       4: astore_3
       5: aload_0
       6: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: astore        4
      11: lconst_0
      12: lstore        5
      14: lload         5
      16: lload_1
      17: lcmp
      18: ifeq          139
      21: aload_3
      22: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: ldc           #19                 // String The iterator returned a null value
      29: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      32: astore        7
      34: goto          53
      37: astore        8
      39: aload         4
      41: aload         8
      43: invokeinterface #21,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      48: aload_0
      49: invokespecial #22                 // Method onCloseWithDropError:()V
      52: return
      53: aload_0
      54: getfield      #23                 // Field cancelled:Z
      57: ifeq          61
      60: return
      61: aload         4
      63: aload         7
      65: invokeinterface #24,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      70: aload_0
      71: getfield      #23                 // Field cancelled:Z
      74: ifeq          78
      77: return
      78: aload_3
      79: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      84: istore        8
      86: goto          105
      89: astore        9
      91: aload         4
      93: aload         9
      95: invokeinterface #21,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     100: aload_0
     101: invokespecial #22                 // Method onCloseWithDropError:()V
     104: return
     105: aload_0
     106: getfield      #23                 // Field cancelled:Z
     109: ifeq          113
     112: return
     113: iload         8
     115: ifne          130
     118: aload         4
     120: invokeinterface #26,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     125: aload_0
     126: invokespecial #22                 // Method onCloseWithDropError:()V
     129: return
     130: lload         5
     132: lconst_1
     133: ladd
     134: lstore        5
     136: goto          14
     139: aload_0
     140: getfield      #27                 // Field requested:J
     143: lstore_1
     144: lload_1
     145: lload         5
     147: lcmp
     148: ifne          14
     151: getstatic     #7                  // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     154: aload_0
     155: lload         5
     157: lneg
     158: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
     161: lstore_1
     162: lload_1
     163: lconst_0
     164: lcmp
     165: ifne          169
     168: return
     169: lconst_0
     170: lstore        5
     172: goto          14
    Exception table:
       from    to  target type
          21    34    37   Class java/lang/Throwable
          78    86    89   Class java/lang/Throwable

  void fastPath();
    Code:
       0: aload_0
       1: getfield      #3                  // Field iterator:Ljava/util/Iterator;
       4: astore_1
       5: aload_0
       6: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: astore_2
      10: aload_0
      11: getfield      #23                 // Field cancelled:Z
      14: ifeq          18
      17: return
      18: aload_1
      19: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: ldc           #19                 // String The iterator returned a null value
      26: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      29: astore_3
      30: goto          48
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokeinterface #21,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      43: aload_0
      44: invokespecial #22                 // Method onCloseWithDropError:()V
      47: return
      48: aload_0
      49: getfield      #23                 // Field cancelled:Z
      52: ifeq          56
      55: return
      56: aload_2
      57: aload_3
      58: invokeinterface #24,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      63: aload_0
      64: getfield      #23                 // Field cancelled:Z
      67: ifeq          71
      70: return
      71: aload_1
      72: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      77: istore        4
      79: goto          97
      82: astore        5
      84: aload_2
      85: aload         5
      87: invokeinterface #21,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      92: aload_0
      93: invokespecial #22                 // Method onCloseWithDropError:()V
      96: return
      97: aload_0
      98: getfield      #23                 // Field cancelled:Z
     101: ifeq          105
     104: return
     105: iload         4
     107: ifne          121
     110: aload_2
     111: invokeinterface #26,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     116: aload_0
     117: invokespecial #22                 // Method onCloseWithDropError:()V
     120: return
     121: goto          10
    Exception table:
       from    to  target type
          18    30    33   Class java/lang/Exception
          71    79    82   Class java/lang/Exception

  public void cancel();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method onCloseWithDropError:()V
       4: aload_0
       5: iconst_1
       6: putfield      #23                 // Field cancelled:Z
       9: return

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #30                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #23                 // Field cancelled:Z
      11: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #32                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      19: if_acmpne     30
      22: aload_0
      23: getfield      #27                 // Field requested:J
      26: invokestatic  #33                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: areturn
      30: aload_1
      31: getstatic     #34                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      34: if_acmpne     54
      37: aload_0
      38: getfield      #35                 // Field state:I
      41: iconst_2
      42: if_icmpne     49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      53: areturn
      54: aload_0
      55: aload_1
      56: invokespecial #37                 // InterfaceMethod reactor/core/publisher/InnerProducer.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      59: areturn

  public void clear();
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #35                 // Field state:I
       5: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #35                 // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_2
       7: if_icmpne     12
      10: iconst_1
      11: ireturn
      12: iload_1
      13: iconst_1
      14: if_icmpeq     21
      17: iload_1
      18: ifne          23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #3                  // Field iterator:Ljava/util/Iterator;
      27: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          42
      35: aload_0
      36: iconst_0
      37: putfield      #35                 // Field state:I
      40: iconst_0
      41: ireturn
      42: aload_0
      43: iconst_2
      44: putfield      #35                 // Field state:I
      47: iconst_1
      48: ireturn

  public T poll();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method isEmpty:()Z
       4: ifne          62
       7: aload_0
       8: getfield      #35                 // Field state:I
      11: ifne          27
      14: aload_0
      15: getfield      #3                  // Field iterator:Ljava/util/Iterator;
      18: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: astore_1
      24: goto          37
      27: aload_0
      28: getfield      #39                 // Field current:Ljava/lang/Object;
      31: astore_1
      32: aload_0
      33: aconst_null
      34: putfield      #39                 // Field current:Ljava/lang/Object;
      37: aload_0
      38: iconst_3
      39: putfield      #35                 // Field state:I
      42: aload_1
      43: ifnonnull     60
      46: aload_0
      47: invokespecial #22                 // Method onCloseWithDropError:()V
      50: new           #40                 // class java/lang/NullPointerException
      53: dup
      54: ldc           #41                 // String iterator returned a null value
      56: invokespecial #42                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_1
      61: areturn
      62: aload_0
      63: invokespecial #22                 // Method onCloseWithDropError:()V
      66: aconst_null
      67: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #35                 // Field state:I
       4: iconst_2
       5: if_icmpne     10
       8: iconst_0
       9: ireturn
      10: iconst_1
      11: ireturn

  static {};
    Code:
       0: ldc           #36                 // class reactor/core/publisher/FluxIterable$IterableSubscription
       2: ldc           #43                 // String requested
       4: invokestatic  #44                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #7                  // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: return
}
