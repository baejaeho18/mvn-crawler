Compiled from "BlockingSingleSubscriber.java"
abstract class reactor.core.publisher.BlockingSingleSubscriber<T> extends java.util.concurrent.CountDownLatch implements reactor.core.publisher.InnerConsumer<T>, reactor.core.Disposable {
  T value;

  java.lang.Throwable error;

  org.reactivestreams.Subscription s;

  volatile boolean cancelled;

  reactor.core.publisher.BlockingSingleSubscriber();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method java/util/concurrent/CountDownLatch."<init>":(I)V
       5: return

  public final void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field s:Lorg/reactivestreams/Subscription;
       5: aload_0
       6: getfield      #3                  // Field cancelled:Z
       9: ifne          21
      12: aload_1
      13: ldc2_w        #5                  // long 9223372036854775807l
      16: invokeinterface #7,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      21: return

  public final void onComplete();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method countDown:()V
       4: return

  public final void dispose();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field cancelled:Z
       5: aload_0
       6: getfield      #2                  // Field s:Lorg/reactivestreams/Subscription;
       9: astore_1
      10: aload_1
      11: ifnull        25
      14: aload_0
      15: aconst_null
      16: putfield      #2                  // Field s:Lorg/reactivestreams/Subscription;
      19: aload_1
      20: invokeinterface #9,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      25: return

  final T blockingGet();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getCount:()J
       4: lconst_0
       5: lcmp
       6: ifeq          26
       9: aload_0
      10: invokevirtual #11                 // Method await:()V
      13: goto          26
      16: astore_1
      17: aload_0
      18: invokevirtual #13                 // Method dispose:()V
      21: aload_1
      22: invokestatic  #14                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      25: athrow
      26: aload_0
      27: getfield      #15                 // Field error:Ljava/lang/Throwable;
      30: astore_1
      31: aload_1
      32: ifnull        55
      35: aload_1
      36: invokestatic  #14                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      39: astore_2
      40: aload_2
      41: new           #16                 // class java/lang/Exception
      44: dup
      45: ldc           #17                 // String #block terminated with an error
      47: invokespecial #18                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      50: invokevirtual #19                 // Method java/lang/RuntimeException.addSuppressed:(Ljava/lang/Throwable;)V
      53: aload_2
      54: athrow
      55: aload_0
      56: getfield      #20                 // Field value:Ljava/lang/Object;
      59: areturn
    Exception table:
       from    to  target type
           9    13    16   Class java/lang/InterruptedException

  final T blockingGet(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getCount:()J
       4: lconst_0
       5: lcmp
       6: ifeq          91
       9: aload_0
      10: lload_1
      11: aload_3
      12: invokevirtual #21                 // Method await:(JLjava/util/concurrent/TimeUnit;)Z
      15: ifne          58
      18: aload_0
      19: invokevirtual #13                 // Method dispose:()V
      22: new           #22                 // class java/lang/IllegalStateException
      25: dup
      26: new           #23                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #25                 // String Timeout on blocking read for
      35: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: lload_1
      39: invokevirtual #27                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      42: ldc           #28                 // String
      44: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_3
      48: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: goto          91
      61: astore        4
      63: aload_0
      64: invokevirtual #13                 // Method dispose:()V
      67: aload         4
      69: invokestatic  #14                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      72: astore        5
      74: aload         5
      76: new           #16                 // class java/lang/Exception
      79: dup
      80: ldc           #32                 // String #block has been interrupted
      82: invokespecial #18                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      85: invokevirtual #19                 // Method java/lang/RuntimeException.addSuppressed:(Ljava/lang/Throwable;)V
      88: aload         5
      90: athrow
      91: aload_0
      92: getfield      #15                 // Field error:Ljava/lang/Throwable;
      95: astore        4
      97: aload         4
      99: ifnull        126
     102: aload         4
     104: invokestatic  #14                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     107: astore        5
     109: aload         5
     111: new           #16                 // class java/lang/Exception
     114: dup
     115: ldc           #17                 // String #block terminated with an error
     117: invokespecial #18                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
     120: invokevirtual #19                 // Method java/lang/RuntimeException.addSuppressed:(Ljava/lang/Throwable;)V
     123: aload         5
     125: athrow
     126: aload_0
     127: getfield      #20                 // Field value:Ljava/lang/Object;
     130: areturn
    Exception table:
       from    to  target type
           9    58    61   Class java/lang/InterruptedException

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #33                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     25
       7: aload_0
       8: invokevirtual #10                 // Method getCount:()J
      11: lconst_0
      12: lcmp
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: invokestatic  #34                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      24: areturn
      25: aload_1
      26: getstatic     #35                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      29: if_acmpne     37
      32: aload_0
      33: getfield      #2                  // Field s:Lorg/reactivestreams/Subscription;
      36: areturn
      37: aload_1
      38: getstatic     #36                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      41: if_acmpne     52
      44: aload_0
      45: getfield      #3                  // Field cancelled:Z
      48: invokestatic  #34                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: areturn
      52: aload_1
      53: getstatic     #37                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      56: if_acmpne     64
      59: aload_0
      60: getfield      #15                 // Field error:Ljava/lang/Throwable;
      63: areturn
      64: aload_1
      65: getstatic     #38                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      68: if_acmpne     77
      71: ldc           #40                 // int 2147483647
      73: invokestatic  #41                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: areturn
      77: aconst_null
      78: areturn

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cancelled:Z
       4: ifne          16
       7: aload_0
       8: invokevirtual #10                 // Method getCount:()J
      11: lconst_0
      12: lcmp
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn
}
