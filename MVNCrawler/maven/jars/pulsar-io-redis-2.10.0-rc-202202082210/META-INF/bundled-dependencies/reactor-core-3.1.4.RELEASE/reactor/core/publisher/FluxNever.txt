Compiled from "FluxNever.java"
final class reactor.core.publisher.FluxNever extends reactor.core.publisher.Flux<java.lang.Object> {
  static final org.reactivestreams.Publisher<java.lang.Object> INSTANCE;

  reactor.core.publisher.FluxNever();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Flux."<init>":()V
       4: return

  public void subscribe(reactor.core.CoreSubscriber<? super java.lang.Object>);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method reactor/core/publisher/Operators.emptySubscription:()Lorg/reactivestreams/Subscription;
       4: invokeinterface #3,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
       9: return

  static <T> reactor.core.publisher.Flux<T> instance();
    Code:
       0: getstatic     #4                  // Field INSTANCE:Lorg/reactivestreams/Publisher;
       3: checkcast     #5                  // class reactor/core/publisher/Flux
       6: areturn

  static {};
    Code:
       0: new           #6                  // class reactor/core/publisher/FluxNever
       3: dup
       4: invokespecial #7                  // Method "<init>":()V
       7: putstatic     #4                  // Field INSTANCE:Lorg/reactivestreams/Publisher;
      10: return
}
