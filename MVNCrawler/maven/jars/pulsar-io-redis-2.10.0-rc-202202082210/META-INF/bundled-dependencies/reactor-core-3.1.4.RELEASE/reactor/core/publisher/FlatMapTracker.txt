Compiled from "FluxFlatMap.java"
abstract class reactor.core.publisher.FlatMapTracker<T> {
  volatile T[] array;

  int[] free;

  long producerIndex;

  long consumerIndex;

  volatile int size;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FlatMapTracker> SIZE;

  static final int[] FREE_EMPTY;

  reactor.core.publisher.FlatMapTracker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method empty:()[Ljava/lang/Object;
       9: putfield      #3                  // Field array:[Ljava/lang/Object;
      12: aload_0
      13: getstatic     #4                  // Field FREE_EMPTY:[I
      16: putfield      #5                  // Field free:[I
      19: return

  abstract T[] empty();

  abstract T[] terminated();

  abstract T[] newArray(int);

  abstract void unsubscribeEntry(T);

  abstract void setIndex(T, int);

  final void unsubscribe();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method terminated:()[Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: dup
       7: astore_3
       8: monitorenter
       9: aload_0
      10: getfield      #3                  // Field array:[Ljava/lang/Object;
      13: astore_1
      14: aload_1
      15: aload_2
      16: if_acmpne     22
      19: aload_3
      20: monitorexit
      21: return
      22: getstatic     #7                  // Field SIZE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      25: aload_0
      26: iconst_0
      27: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
      30: aload_0
      31: aconst_null
      32: putfield      #5                  // Field free:[I
      35: aload_0
      36: aload_2
      37: putfield      #3                  // Field array:[Ljava/lang/Object;
      40: aload_3
      41: monitorexit
      42: goto          52
      45: astore        4
      47: aload_3
      48: monitorexit
      49: aload         4
      51: athrow
      52: aload_1
      53: astore_3
      54: aload_3
      55: arraylength
      56: istore        4
      58: iconst_0
      59: istore        5
      61: iload         5
      63: iload         4
      65: if_icmpge     91
      68: aload_3
      69: iload         5
      71: aaload
      72: astore        6
      74: aload         6
      76: ifnull        85
      79: aload_0
      80: aload         6
      82: invokevirtual #9                  // Method unsubscribeEntry:(Ljava/lang/Object;)V
      85: iinc          5, 1
      88: goto          61
      91: return
    Exception table:
       from    to  target type
           9    21    45   any
          22    42    45   any
          45    49    45   any

  final T[] get();
    Code:
       0: aload_0
       1: getfield      #3                  // Field array:[Ljava/lang/Object;
       4: areturn

  final boolean add(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field array:[Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: aload_0
       7: invokevirtual #6                  // Method terminated:()[Ljava/lang/Object;
      10: if_acmpne     15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: dup
      17: astore_3
      18: monitorenter
      19: aload_0
      20: getfield      #3                  // Field array:[Ljava/lang/Object;
      23: astore_2
      24: aload_2
      25: aload_0
      26: invokevirtual #6                  // Method terminated:()[Ljava/lang/Object;
      29: if_acmpne     36
      32: iconst_0
      33: aload_3
      34: monitorexit
      35: ireturn
      36: aload_0
      37: invokevirtual #10                 // Method pollFree:()I
      40: istore        4
      42: iload         4
      44: ifge          156
      47: aload_2
      48: arraylength
      49: istore        5
      51: iload         5
      53: ifeq          67
      56: aload_0
      57: iload         5
      59: iconst_1
      60: ishl
      61: invokevirtual #11                 // Method newArray:(I)[Ljava/lang/Object;
      64: goto          72
      67: aload_0
      68: iconst_4
      69: invokevirtual #11                 // Method newArray:(I)[Ljava/lang/Object;
      72: astore        6
      74: aload_2
      75: iconst_0
      76: aload         6
      78: iconst_0
      79: iload         5
      81: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      84: aload_0
      85: aload         6
      87: putfield      #3                  // Field array:[Ljava/lang/Object;
      90: aload         6
      92: astore_2
      93: aload         6
      95: arraylength
      96: istore        7
      98: iload         7
     100: newarray       int
     102: astore        8
     104: iload         5
     106: iconst_1
     107: iadd
     108: istore        9
     110: iload         9
     112: iload         7
     114: if_icmpge     130
     117: aload         8
     119: iload         9
     121: iload         9
     123: iastore
     124: iinc          9, 1
     127: goto          110
     130: aload_0
     131: aload         8
     133: putfield      #5                  // Field free:[I
     136: aload_0
     137: iload         5
     139: iconst_1
     140: iadd
     141: i2l
     142: putfield      #13                 // Field consumerIndex:J
     145: aload_0
     146: iload         7
     148: i2l
     149: putfield      #14                 // Field producerIndex:J
     152: iload         5
     154: istore        4
     156: aload_0
     157: aload_1
     158: iload         4
     160: invokevirtual #15                 // Method setIndex:(Ljava/lang/Object;I)V
     163: getstatic     #7                  // Field SIZE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     166: aload_0
     167: aload_0
     168: getfield      #16                 // Field size:I
     171: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     174: aload_2
     175: iload         4
     177: aload_1
     178: aastore
     179: getstatic     #7                  // Field SIZE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     182: aload_0
     183: aload_0
     184: getfield      #16                 // Field size:I
     187: iconst_1
     188: iadd
     189: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     192: aload_3
     193: monitorexit
     194: goto          204
     197: astore        10
     199: aload_3
     200: monitorexit
     201: aload         10
     203: athrow
     204: iconst_1
     205: ireturn
    Exception table:
       from    to  target type
          19    35   197   any
          36   194   197   any
         197   201   197   any

  final void remove(int);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #3                  // Field array:[Ljava/lang/Object;
       8: astore_3
       9: aload_3
      10: aload_0
      11: invokevirtual #6                  // Method terminated:()[Ljava/lang/Object;
      14: if_acmpeq     39
      17: aload_3
      18: iload_1
      19: aconst_null
      20: aastore
      21: aload_0
      22: iload_1
      23: invokevirtual #17                 // Method offerFree:(I)V
      26: getstatic     #7                  // Field SIZE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      29: aload_0
      30: aload_0
      31: getfield      #16                 // Field size:I
      34: iconst_1
      35: isub
      36: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
      39: aload_2
      40: monitorexit
      41: goto          51
      44: astore        4
      46: aload_2
      47: monitorexit
      48: aload         4
      50: athrow
      51: return
    Exception table:
       from    to  target type
           4    41    44   any
          44    48    44   any

  int pollFree();
    Code:
       0: aload_0
       1: getfield      #5                  // Field free:[I
       4: astore_1
       5: aload_1
       6: arraylength
       7: iconst_1
       8: isub
       9: istore_2
      10: aload_0
      11: getfield      #13                 // Field consumerIndex:J
      14: lstore_3
      15: aload_0
      16: getfield      #14                 // Field producerIndex:J
      19: lload_3
      20: lcmp
      21: ifne          26
      24: iconst_m1
      25: ireturn
      26: lload_3
      27: l2i
      28: iload_2
      29: iand
      30: istore        5
      32: aload_0
      33: lload_3
      34: lconst_1
      35: ladd
      36: putfield      #13                 // Field consumerIndex:J
      39: aload_1
      40: iload         5
      42: iaload
      43: ireturn

  void offerFree(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field free:[I
       4: astore_2
       5: aload_2
       6: arraylength
       7: iconst_1
       8: isub
       9: istore_3
      10: aload_0
      11: getfield      #14                 // Field producerIndex:J
      14: lstore        4
      16: lload         4
      18: l2i
      19: iload_3
      20: iand
      21: istore        6
      23: aload_2
      24: iload         6
      26: iload_1
      27: iastore
      28: aload_0
      29: lload         4
      31: lconst_1
      32: ladd
      33: putfield      #14                 // Field producerIndex:J
      36: return

  final boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #16                 // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  static {};
    Code:
       0: ldc           #18                 // class reactor/core/publisher/FlatMapTracker
       2: ldc           #19                 // String size
       4: invokestatic  #20                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #7                  // Field SIZE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: iconst_0
      11: newarray       int
      13: putstatic     #4                  // Field FREE_EMPTY:[I
      16: return
}
