Compiled from "Tuple8.java"
public class reactor.util.function.Tuple8<T1, T2, T3, T4, T5, T6, T7, T8> extends reactor.util.function.Tuple7<T1, T2, T3, T4, T5, T6, T7> {
  private static final long serialVersionUID;

  final T8 t8;

  reactor.util.function.Tuple8(T1, T2, T3, T4, T5, T6, T7, T8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokespecial #1                  // Method reactor/util/function/Tuple7."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_0
      16: aload         8
      18: ldc           #2                  // String t8
      20: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      23: putfield      #4                  // Field t8:Ljava/lang/Object;
      26: return

  public T8 getT8();
    Code:
       0: aload_0
       1: getfield      #4                  // Field t8:Ljava/lang/Object;
       4: areturn

  public java.lang.Object get(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 7
                     0: 48
                     1: 53
                     2: 58
                     3: 63
                     4: 68
                     5: 73
                     6: 78
                     7: 83
               default: 88
          }
      48: aload_0
      49: getfield      #5                  // Field t1:Ljava/lang/Object;
      52: areturn
      53: aload_0
      54: getfield      #6                  // Field t2:Ljava/lang/Object;
      57: areturn
      58: aload_0
      59: getfield      #7                  // Field t3:Ljava/lang/Object;
      62: areturn
      63: aload_0
      64: getfield      #8                  // Field t4:Ljava/lang/Object;
      67: areturn
      68: aload_0
      69: getfield      #9                  // Field t5:Ljava/lang/Object;
      72: areturn
      73: aload_0
      74: getfield      #10                 // Field t6:Ljava/lang/Object;
      77: areturn
      78: aload_0
      79: getfield      #11                 // Field t7:Ljava/lang/Object;
      82: areturn
      83: aload_0
      84: getfield      #4                  // Field t8:Ljava/lang/Object;
      87: areturn
      88: aconst_null
      89: areturn

  public java.lang.Object[] toArray();
    Code:
       0: bipush        8
       2: anewarray     #12                 // class java/lang/Object
       5: dup
       6: iconst_0
       7: aload_0
       8: getfield      #5                  // Field t1:Ljava/lang/Object;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_0
      15: getfield      #6                  // Field t2:Ljava/lang/Object;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_0
      22: getfield      #7                  // Field t3:Ljava/lang/Object;
      25: aastore
      26: dup
      27: iconst_3
      28: aload_0
      29: getfield      #8                  // Field t4:Ljava/lang/Object;
      32: aastore
      33: dup
      34: iconst_4
      35: aload_0
      36: getfield      #9                  // Field t5:Ljava/lang/Object;
      39: aastore
      40: dup
      41: iconst_5
      42: aload_0
      43: getfield      #10                 // Field t6:Ljava/lang/Object;
      46: aastore
      47: dup
      48: bipush        6
      50: aload_0
      51: getfield      #11                 // Field t7:Ljava/lang/Object;
      54: aastore
      55: dup
      56: bipush        7
      58: aload_0
      59: getfield      #4                  // Field t8:Ljava/lang/Object;
      62: aastore
      63: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #13                 // class reactor/util/function/Tuple8
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: aload_1
      18: invokespecial #14                 // Method reactor/util/function/Tuple7.equals:(Ljava/lang/Object;)Z
      21: ifne          26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #13                 // class reactor/util/function/Tuple8
      30: astore_2
      31: aload_0
      32: getfield      #4                  // Field t8:Ljava/lang/Object;
      35: aload_2
      36: getfield      #4                  // Field t8:Ljava/lang/Object;
      39: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      42: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method reactor/util/function/Tuple7.hashCode:()I
       4: istore_1
       5: bipush        31
       7: iload_1
       8: imul
       9: aload_0
      10: getfield      #4                  // Field t8:Ljava/lang/Object;
      13: invokevirtual #17                 // Method java/lang/Object.hashCode:()I
      16: iadd
      17: istore_1
      18: iload_1
      19: ireturn

  public int size();
    Code:
       0: bipush        8
       2: ireturn
}
