Compiled from "MonoPeekTerminal.java"
final class reactor.core.publisher.MonoPeekTerminal<T> extends reactor.core.publisher.MonoOperator<T, T> implements reactor.core.Fuseable {
  final java.util.function.BiConsumer<? super T, java.lang.Throwable> onAfterTerminateCall;

  final java.util.function.BiConsumer<? super T, java.lang.Throwable> onTerminateCall;

  final java.util.function.Consumer<? super T> onSuccessCall;

  reactor.core.publisher.MonoPeekTerminal(reactor.core.publisher.Mono<? extends T>, java.util.function.Consumer<? super T>, java.util.function.BiConsumer<? super T, java.lang.Throwable>, java.util.function.BiConsumer<? super T, java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoOperator."<init>":(Lreactor/core/publisher/Mono;)V
       5: aload_0
       6: aload         4
       8: putfield      #2                  // Field onAfterTerminateCall:Ljava/util/function/BiConsumer;
      11: aload_0
      12: aload_3
      13: putfield      #3                  // Field onTerminateCall:Ljava/util/function/BiConsumer;
      16: aload_0
      17: aload_2
      18: putfield      #4                  // Field onSuccessCall:Ljava/util/function/Consumer;
      21: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_1
       1: instanceof    #5                  // class reactor/core/Fuseable$ConditionalSubscriber
       4: ifeq          27
       7: aload_0
       8: getfield      #6                  // Field source:Lreactor/core/publisher/Mono;
      11: new           #7                  // class reactor/core/publisher/MonoPeekTerminal$MonoTerminalPeekSubscriber
      14: dup
      15: aload_1
      16: checkcast     #5                  // class reactor/core/Fuseable$ConditionalSubscriber
      19: aload_0
      20: invokespecial #8                  // Method reactor/core/publisher/MonoPeekTerminal$MonoTerminalPeekSubscriber."<init>":(Lreactor/core/Fuseable$ConditionalSubscriber;Lreactor/core/publisher/MonoPeekTerminal;)V
      23: invokevirtual #9                  // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      26: return
      27: aload_0
      28: getfield      #6                  // Field source:Lreactor/core/publisher/Mono;
      31: new           #7                  // class reactor/core/publisher/MonoPeekTerminal$MonoTerminalPeekSubscriber
      34: dup
      35: aload_1
      36: aload_0
      37: invokespecial #10                 // Method reactor/core/publisher/MonoPeekTerminal$MonoTerminalPeekSubscriber."<init>":(Lreactor/core/CoreSubscriber;Lreactor/core/publisher/MonoPeekTerminal;)V
      40: invokevirtual #9                  // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      43: return
}
