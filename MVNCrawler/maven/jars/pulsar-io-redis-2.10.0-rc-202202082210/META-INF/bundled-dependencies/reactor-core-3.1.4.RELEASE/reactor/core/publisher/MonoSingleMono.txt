Compiled from "MonoSingleMono.java"
final class reactor.core.publisher.MonoSingleMono<T> extends reactor.core.publisher.MonoOperator<T, T> implements reactor.core.Fuseable {
  reactor.core.publisher.MonoSingleMono(reactor.core.publisher.Mono<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoOperator."<init>":(Lreactor/core/publisher/Mono;)V
       5: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lreactor/core/publisher/Mono;
       4: new           #3                  // class reactor/core/publisher/MonoSingle$SingleSubscriber
       7: dup
       8: aload_1
       9: aconst_null
      10: iconst_0
      11: invokespecial #4                  // Method reactor/core/publisher/MonoSingle$SingleSubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/lang/Object;Z)V
      14: invokevirtual #5                  // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      17: return
}
