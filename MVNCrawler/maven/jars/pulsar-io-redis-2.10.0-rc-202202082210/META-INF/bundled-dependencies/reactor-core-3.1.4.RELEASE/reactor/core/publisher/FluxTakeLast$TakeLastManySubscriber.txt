Compiled from "FluxTakeLast.java"
final class reactor.core.publisher.FluxTakeLast$TakeLastManySubscriber<T> extends java.util.ArrayDeque<T> implements java.util.function.BooleanSupplier, reactor.core.publisher.InnerOperator<T, T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final int n;

  volatile boolean cancelled;

  org.reactivestreams.Subscription s;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxTakeLast$TakeLastManySubscriber> REQUESTED;

  reactor.core.publisher.FluxTakeLast$TakeLastManySubscriber(reactor.core.CoreSubscriber<? super T>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/ArrayDeque."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field n:I
      14: return

  public boolean getAsBoolean();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancelled:Z
       4: ireturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #5                  // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          22
       7: lload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: aload_0
      13: getstatic     #6                  // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      16: aload_0
      17: aload_0
      18: invokestatic  #7                  // Method reactor/core/publisher/DrainUtils.postCompleteRequest:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;Ljava/util/function/BooleanSupplier;)Z
      21: pop
      22: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field cancelled:Z
       5: aload_0
       6: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
       9: invokeinterface #9,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      14: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #10                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          35
      11: aload_0
      12: aload_1
      13: putfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #11,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: ldc2_w        #13                 // long 9223372036854775807l
      30: invokeinterface #15,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      35: return

  public void onNext(T);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method size:()I
       4: aload_0
       5: getfield      #3                  // Field n:I
       8: if_icmpne     16
      11: aload_0
      12: invokevirtual #17                 // Method poll:()Ljava/lang/Object;
      15: pop
      16: aload_0
      17: aload_1
      18: invokevirtual #18                 // Method offer:(Ljava/lang/Object;)Z
      21: pop
      22: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_0
       5: getstatic     #6                  // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       8: aload_0
       9: aload_0
      10: invokestatic  #20                 // Method reactor/core/publisher/DrainUtils.postComplete:(Lreactor/core/CoreSubscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;Ljava/util/function/BooleanSupplier;)V
      13: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #21                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #4                  // Field cancelled:Z
      11: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #23                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      19: if_acmpne     30
      22: aload_0
      23: getfield      #24                 // Field requested:J
      26: invokestatic  #25                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: areturn
      30: aload_1
      31: getstatic     #26                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      34: if_acmpne     42
      37: aload_0
      38: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
      41: areturn
      42: aload_1
      43: getstatic     #27                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      46: if_acmpne     57
      49: aload_0
      50: invokevirtual #16                 // Method size:()I
      53: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: areturn
      57: aload_0
      58: aload_1
      59: invokespecial #29                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      62: areturn

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  static {};
    Code:
       0: ldc           #30                 // class reactor/core/publisher/FluxTakeLast$TakeLastManySubscriber
       2: ldc           #31                 // String requested
       4: invokestatic  #32                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #6                  // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: return
}
