Compiled from "MonoDelayElement.java"
final class reactor.core.publisher.MonoDelayElement$DelayElementSubscriber<T> extends reactor.core.publisher.Operators$MonoSubscriber<T, T> {
  final long delay;

  final reactor.core.scheduler.Scheduler scheduler;

  final java.util.concurrent.TimeUnit unit;

  org.reactivestreams.Subscription s;

  volatile reactor.core.Disposable task;

  boolean done;

  reactor.core.publisher.MonoDelayElement$DelayElementSubscriber(reactor.core.CoreSubscriber<? super T>, reactor.core.scheduler.Scheduler, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field scheduler:Lreactor/core/scheduler/Scheduler;
      10: aload_0
      11: lload_3
      12: putfield      #3                  // Field delay:J
      15: aload_0
      16: aload         5
      18: putfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      21: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #6                  // Field done:Z
      11: invokestatic  #7                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #8                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      19: if_acmpne     27
      22: aload_0
      23: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
      26: areturn
      27: aload_1
      28: getstatic     #10                 // Field reactor/core/Scannable$Attr.RUN_ON:Lreactor/core/Scannable$Attr;
      31: if_acmpne     39
      34: aload_0
      35: getfield      #2                  // Field scheduler:Lreactor/core/scheduler/Scheduler;
      38: areturn
      39: aload_0
      40: aload_1
      41: invokespecial #11                 // Method reactor/core/publisher/Operators$MonoSubscriber.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      44: areturn

  public void cancel();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method reactor/core/publisher/Operators$MonoSubscriber.cancel:()V
       4: aload_0
       5: getfield      #13                 // Field task:Lreactor/core/Disposable;
       8: ifnull        20
      11: aload_0
      12: getfield      #13                 // Field task:Lreactor/core/Disposable;
      15: invokeinterface #14,  1           // InterfaceMethod reactor/core/Disposable.dispose:()V
      20: aload_0
      21: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
      24: invokestatic  #15                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      27: if_acmpeq     39
      30: aload_0
      31: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
      34: invokeinterface #16,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      39: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #17                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          35
      11: aload_0
      12: aload_1
      13: putfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #19,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: ldc2_w        #21                 // long 9223372036854775807l
      30: invokeinterface #23,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      35: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #24,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #25                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #6                  // Field done:Z
      26: aload_0
      27: aload_0
      28: getfield      #2                  // Field scheduler:Lreactor/core/scheduler/Scheduler;
      31: aload_0
      32: aload_1
      33: invokedynamic #26,  0             // InvokeDynamic #0:run:(Lreactor/core/publisher/MonoDelayElement$DelayElementSubscriber;Ljava/lang/Object;)Ljava/lang/Runnable;
      38: aload_0
      39: getfield      #3                  // Field delay:J
      42: aload_0
      43: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      46: invokeinterface #27,  5           // InterfaceMethod reactor/core/scheduler/Scheduler.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
      51: putfield      #13                 // Field task:Lreactor/core/Disposable;
      54: goto          75
      57: astore_2
      58: aload_2
      59: aload_0
      60: aconst_null
      61: aload_1
      62: aload_0
      63: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      66: invokeinterface #24,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      71: invokestatic  #29                 // Method reactor/core/publisher/Operators.onRejectedExecution:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
      74: athrow
      75: return
    Exception table:
       from    to  target type
          26    54    57   Class java/util/concurrent/RejectedExecutionException

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #6                  // Field done:Z
      13: aload_0
      14: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      17: invokeinterface #30,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      22: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #24,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #31                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #6                  // Field done:Z
      26: aload_0
      27: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: invokeinterface #32,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  private void lambda$onNext$0(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method complete:(Ljava/lang/Object;)V
       5: return
}
