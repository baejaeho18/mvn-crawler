Compiled from "MonoCacheTime.java"
final class reactor.core.publisher.MonoCacheTime$CacheMonoSubscriber<T> extends reactor.core.publisher.Operators$MonoSubscriber<T, T> {
  final reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber<T> coordinator;

  reactor.core.publisher.MonoCacheTime$CacheMonoSubscriber(reactor.core.CoreSubscriber<? super T>, reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field coordinator:Lreactor/core/publisher/MonoCacheTime$CoordinatorSubscriber;
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method reactor/core/publisher/Operators$MonoSubscriber.cancel:()V
       4: aload_0
       5: getfield      #2                  // Field coordinator:Lreactor/core/publisher/MonoCacheTime$CoordinatorSubscriber;
       8: aload_0
       9: invokevirtual #4                  // Method reactor/core/publisher/MonoCacheTime$CoordinatorSubscriber.remove:(Lreactor/core/publisher/Operators$MonoSubscriber;)V
      12: return
}
