Compiled from "FluxFilterWhen.java"
class reactor.core.publisher.FluxFilterWhen<T> extends reactor.core.publisher.FluxOperator<T, T> {
  final java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<java.lang.Boolean>> asyncPredicate;

  final int bufferSize;

  reactor.core.publisher.FluxFilterWhen(reactor.core.publisher.Flux<T>, java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<java.lang.Boolean>>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field asyncPredicate:Ljava/util/function/Function;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field bufferSize:I
      15: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field source:Lreactor/core/publisher/Flux;
       4: new           #5                  // class reactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field asyncPredicate:Ljava/util/function/Function;
      13: aload_0
      14: getfield      #3                  // Field bufferSize:I
      17: invokespecial #6                  // Method reactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/Function;I)V
      20: invokevirtual #7                  // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      23: return
}
