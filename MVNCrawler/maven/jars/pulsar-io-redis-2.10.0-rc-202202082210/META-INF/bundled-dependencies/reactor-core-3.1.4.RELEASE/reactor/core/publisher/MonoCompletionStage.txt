Compiled from "MonoCompletionStage.java"
final class reactor.core.publisher.MonoCompletionStage<T> extends reactor.core.publisher.Mono<T> implements reactor.core.Fuseable {
  final java.util.concurrent.CompletionStage<? extends T> future;

  reactor.core.publisher.MonoCompletionStage(java.util.concurrent.CompletionStage<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Mono."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String future
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/util/concurrent/CompletionStage
      14: putfield      #5                  // Field future:Ljava/util/concurrent/CompletionStage;
      17: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: new           #6                  // class reactor/core/publisher/Operators$MonoSubscriber
       3: dup
       4: aload_1
       5: invokespecial #7                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       8: astore_2
       9: aload_1
      10: aload_2
      11: invokeinterface #8,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      16: aload_2
      17: invokevirtual #9                  // Method reactor/core/publisher/Operators$MonoSubscriber.isCancelled:()Z
      20: ifeq          24
      23: return
      24: aload_0
      25: getfield      #5                  // Field future:Ljava/util/concurrent/CompletionStage;
      28: aload_1
      29: aload_2
      30: invokedynamic #10,  0             // InvokeDynamic #0:accept:(Lreactor/core/CoreSubscriber;Lreactor/core/publisher/Operators$MonoSubscriber;)Ljava/util/function/BiConsumer;
      35: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/CompletionStage.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;
      40: pop
      41: return

  private static void lambda$subscribe$0(reactor.core.CoreSubscriber, reactor.core.publisher.Operators$MonoSubscriber, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_3
       1: ifnull        14
       4: aload_0
       5: aload_3
       6: invokeinterface #12,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      11: goto          32
      14: aload_2
      15: ifnull        26
      18: aload_1
      19: aload_2
      20: invokevirtual #13                 // Method reactor/core/publisher/Operators$MonoSubscriber.complete:(Ljava/lang/Object;)V
      23: goto          32
      26: aload_0
      27: invokeinterface #14,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      32: return
}
