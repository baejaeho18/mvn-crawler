Compiled from "FluxSkipWhile.java"
final class reactor.core.publisher.FluxSkipWhile$SkipWhileSubscriber<T> implements reactor.core.Fuseable$ConditionalSubscriber<T>, reactor.core.publisher.InnerOperator<T, T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final java.util.function.Predicate<? super T> predicate;

  org.reactivestreams.Subscription s;

  boolean done;

  boolean skipped;

  reactor.core.publisher.FluxSkipWhile$SkipWhileSubscriber(reactor.core.CoreSubscriber<? super T>, java.util.function.Predicate<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field predicate:Ljava/util/function/Predicate;
      14: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #5                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #6,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #8,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #9                  // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: getfield      #10                 // Field skipped:Z
      25: ifeq          39
      28: aload_0
      29: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      32: aload_1
      33: invokeinterface #11,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      38: return
      39: aload_0
      40: getfield      #3                  // Field predicate:Ljava/util/function/Predicate;
      43: aload_1
      44: invokeinterface #12,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      49: istore_2
      50: goto          77
      53: astore_3
      54: aload_0
      55: aload_0
      56: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      59: aload_3
      60: aload_1
      61: aload_0
      62: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      65: invokeinterface #8,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      70: invokestatic  #14                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      73: invokevirtual #15                 // Method onError:(Ljava/lang/Throwable;)V
      76: return
      77: iload_2
      78: ifeq          92
      81: aload_0
      82: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      85: lconst_1
      86: invokeinterface #16,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      91: return
      92: aload_0
      93: iconst_1
      94: putfield      #10                 // Field skipped:Z
      97: aload_0
      98: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     101: aload_1
     102: invokeinterface #11,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     107: return
    Exception table:
       from    to  target type
          39    50    53   Class java/lang/Throwable

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          22
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #8,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #9                  // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: iconst_1
      21: ireturn
      22: aload_0
      23: getfield      #10                 // Field skipped:Z
      26: ifeq          41
      29: aload_0
      30: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      33: aload_1
      34: invokeinterface #11,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      39: iconst_1
      40: ireturn
      41: aload_0
      42: getfield      #3                  // Field predicate:Ljava/util/function/Predicate;
      45: aload_1
      46: invokeinterface #12,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      51: istore_2
      52: goto          80
      55: astore_3
      56: aload_0
      57: aload_0
      58: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      61: aload_3
      62: aload_1
      63: aload_0
      64: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      67: invokeinterface #8,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      72: invokestatic  #14                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      75: invokevirtual #15                 // Method onError:(Ljava/lang/Throwable;)V
      78: iconst_1
      79: ireturn
      80: iload_2
      81: ifeq          86
      84: iconst_0
      85: ireturn
      86: aload_0
      87: iconst_1
      88: putfield      #10                 // Field skipped:Z
      91: aload_0
      92: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      95: aload_1
      96: invokeinterface #11,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     101: iconst_1
     102: ireturn
    Exception table:
       from    to  target type
          41    52    55   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #8,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #17                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #7                  // Field done:Z
      26: aload_0
      27: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #7                  // Field done:Z
      13: aload_0
      14: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      17: invokeinterface #19,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      22: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #20                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #21                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #7                  // Field done:Z
      23: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #23                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #16,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #24,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return
}
