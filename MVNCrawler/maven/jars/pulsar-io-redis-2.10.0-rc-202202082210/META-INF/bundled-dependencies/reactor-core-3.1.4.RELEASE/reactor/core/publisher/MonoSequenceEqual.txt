Compiled from "MonoSequenceEqual.java"
final class reactor.core.publisher.MonoSequenceEqual<T> extends reactor.core.publisher.Mono<java.lang.Boolean> {
  final org.reactivestreams.Publisher<? extends T> first;

  final org.reactivestreams.Publisher<? extends T> second;

  final java.util.function.BiPredicate<? super T, ? super T> comparer;

  final int prefetch;

  reactor.core.publisher.MonoSequenceEqual(org.reactivestreams.Publisher<? extends T>, org.reactivestreams.Publisher<? extends T>, java.util.function.BiPredicate<? super T, ? super T>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Mono."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String first
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class org/reactivestreams/Publisher
      14: putfield      #5                  // Field first:Lorg/reactivestreams/Publisher;
      17: aload_0
      18: aload_2
      19: ldc           #6                  // String second
      21: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #4                  // class org/reactivestreams/Publisher
      27: putfield      #7                  // Field second:Lorg/reactivestreams/Publisher;
      30: aload_0
      31: aload_3
      32: ldc           #8                  // String comparer
      34: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      37: checkcast     #9                  // class java/util/function/BiPredicate
      40: putfield      #10                 // Field comparer:Ljava/util/function/BiPredicate;
      43: iload         4
      45: iconst_1
      46: if_icmpge     77
      49: new           #11                 // class java/lang/IllegalArgumentException
      52: dup
      53: new           #12                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #14                 // String Buffer size must be strictly positive:
      62: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: iload         4
      67: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      70: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_0
      78: iload         4
      80: putfield      #19                 // Field prefetch:I
      83: return

  public void subscribe(reactor.core.CoreSubscriber<? super java.lang.Boolean>);
    Code:
       0: new           #20                 // class reactor/core/publisher/MonoSequenceEqual$EqualCoordinator
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #19                 // Field prefetch:I
       9: aload_0
      10: getfield      #5                  // Field first:Lorg/reactivestreams/Publisher;
      13: aload_0
      14: getfield      #7                  // Field second:Lorg/reactivestreams/Publisher;
      17: aload_0
      18: getfield      #10                 // Field comparer:Ljava/util/function/BiPredicate;
      21: invokespecial #21                 // Method reactor/core/publisher/MonoSequenceEqual$EqualCoordinator."<init>":(Lreactor/core/CoreSubscriber;ILorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Ljava/util/function/BiPredicate;)V
      24: astore_2
      25: aload_1
      26: aload_2
      27: invokeinterface #22,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      32: aload_2
      33: invokevirtual #23                 // Method reactor/core/publisher/MonoSequenceEqual$EqualCoordinator.subscribe:()V
      36: return
}
