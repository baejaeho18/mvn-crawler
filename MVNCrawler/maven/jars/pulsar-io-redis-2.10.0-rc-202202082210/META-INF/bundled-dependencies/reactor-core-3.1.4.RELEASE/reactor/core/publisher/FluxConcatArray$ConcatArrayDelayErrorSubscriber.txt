Compiled from "FluxConcatArray.java"
final class reactor.core.publisher.FluxConcatArray$ConcatArrayDelayErrorSubscriber<T> extends reactor.core.publisher.Operators$MultiSubscriptionSubscriber<T, T> {
  final org.reactivestreams.Publisher<? extends T>[] sources;

  int index;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxConcatArray$ConcatArrayDelayErrorSubscriber> WIP;

  volatile java.lang.Throwable error;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxConcatArray$ConcatArrayDelayErrorSubscriber, java.lang.Throwable> ERROR;

  long produced;

  reactor.core.publisher.FluxConcatArray$ConcatArrayDelayErrorSubscriber(reactor.core.CoreSubscriber<? super T>, org.reactivestreams.Publisher<? extends T>[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MultiSubscriptionSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field sources:[Lorg/reactivestreams/Publisher;
      10: return

  public void onNext(T);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field produced:J
       5: lconst_1
       6: ladd
       7: putfield      #3                  // Field produced:J
      10: aload_0
      11: getfield      #4                  // Field actual:Lreactor/core/CoreSubscriber;
      14: aload_1
      15: invokeinterface #5,  2            // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      20: return

  public void onError(java.lang.Throwable);
    Code:
       0: getstatic     #6                  // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #7                  // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: ifeq          18
      11: aload_0
      12: invokevirtual #8                  // Method onComplete:()V
      15: goto          31
      18: aload_1
      19: aload_0
      20: getfield      #4                  // Field actual:Lreactor/core/CoreSubscriber;
      23: invokeinterface #9,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      28: invokestatic  #10                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      31: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #11                 // Field reactor/core/Scannable$Attr.DELAY_ERROR:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: iconst_1
       8: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      11: areturn
      12: aload_1
      13: getstatic     #13                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      16: if_acmpne     24
      19: aload_0
      20: getfield      #14                 // Field error:Ljava/lang/Throwable;
      23: areturn
      24: aload_0
      25: aload_1
      26: invokespecial #15                 // Method reactor/core/publisher/Operators$MultiSubscriptionSubscriber.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      29: areturn

  public void onComplete();
    Code:
       0: getstatic     #16                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifne          175
      10: aload_0
      11: getfield      #2                  // Field sources:[Lorg/reactivestreams/Publisher;
      14: astore_1
      15: aload_0
      16: invokevirtual #18                 // Method isCancelled:()Z
      19: ifeq          23
      22: return
      23: aload_0
      24: getfield      #19                 // Field index:I
      27: istore_2
      28: iload_2
      29: aload_1
      30: arraylength
      31: if_icmpne     69
      34: getstatic     #6                  // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      37: aload_0
      38: invokestatic  #20                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
      41: astore_3
      42: aload_3
      43: ifnull        59
      46: aload_0
      47: getfield      #4                  // Field actual:Lreactor/core/CoreSubscriber;
      50: aload_3
      51: invokeinterface #21,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      56: goto          68
      59: aload_0
      60: getfield      #4                  // Field actual:Lreactor/core/CoreSubscriber;
      63: invokeinterface #22,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      68: return
      69: aload_1
      70: iload_2
      71: aaload
      72: astore_3
      73: aload_3
      74: ifnonnull     118
      77: aload_0
      78: getfield      #4                  // Field actual:Lreactor/core/CoreSubscriber;
      81: new           #23                 // class java/lang/NullPointerException
      84: dup
      85: new           #24                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #26                 // String The
      94: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: iload_2
      98: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     101: ldc           #29                 // String th source Publisher is null
     103: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: invokespecial #31                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     112: invokeinterface #21,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     117: return
     118: aload_0
     119: getfield      #3                  // Field produced:J
     122: lstore        4
     124: lload         4
     126: lconst_0
     127: lcmp
     128: ifeq          142
     131: aload_0
     132: lconst_0
     133: putfield      #3                  // Field produced:J
     136: aload_0
     137: lload         4
     139: invokevirtual #32                 // Method produced:(J)V
     142: aload_3
     143: aload_0
     144: invokeinterface #33,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     149: aload_0
     150: invokevirtual #18                 // Method isCancelled:()Z
     153: ifeq          157
     156: return
     157: aload_0
     158: iinc          2, 1
     161: iload_2
     162: putfield      #19                 // Field index:I
     165: getstatic     #16                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     168: aload_0
     169: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
     172: ifne          15
     175: return

  static {};
    Code:
       0: ldc           #35                 // class reactor/core/publisher/FluxConcatArray$ConcatArrayDelayErrorSubscriber
       2: ldc           #36                 // String wip
       4: invokestatic  #37                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #16                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: ldc           #35                 // class reactor/core/publisher/FluxConcatArray$ConcatArrayDelayErrorSubscriber
      12: ldc           #38                 // class java/lang/Throwable
      14: ldc           #39                 // String error
      16: invokestatic  #40                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      19: putstatic     #6                  // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      22: return
}
