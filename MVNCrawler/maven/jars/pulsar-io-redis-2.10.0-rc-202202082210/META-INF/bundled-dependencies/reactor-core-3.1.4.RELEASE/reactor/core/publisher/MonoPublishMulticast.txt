Compiled from "MonoPublishMulticast.java"
final class reactor.core.publisher.MonoPublishMulticast<T, R> extends reactor.core.publisher.MonoOperator<T, R> implements reactor.core.Fuseable {
  final java.util.function.Function<? super reactor.core.publisher.Mono<T>, ? extends reactor.core.publisher.Mono<? extends R>> transform;

  reactor.core.publisher.MonoPublishMulticast(reactor.core.publisher.Mono<? extends T>, java.util.function.Function<? super reactor.core.publisher.Mono<T>, ? extends reactor.core.publisher.Mono<? extends R>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoOperator."<init>":(Lreactor/core/publisher/Mono;)V
       5: aload_0
       6: aload_2
       7: ldc           #2                  // String transform
       9: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/util/function/Function
      15: putfield      #5                  // Field transform:Ljava/util/function/Function;
      18: return

  public void subscribe(reactor.core.CoreSubscriber<? super R>);
    Code:
       0: new           #6                  // class reactor/core/publisher/FluxPublishMulticast$FluxPublishMulticaster
       3: dup
       4: ldc           #8                  // int 2147483647
       6: invokestatic  #9                  // Method reactor/util/concurrent/Queues.one:()Ljava/util/function/Supplier;
       9: aload_1
      10: invokeinterface #10,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      15: invokespecial #11                 // Method reactor/core/publisher/FluxPublishMulticast$FluxPublishMulticaster."<init>":(ILjava/util/function/Supplier;Lreactor/util/context/Context;)V
      18: astore_2
      19: aload_0
      20: getfield      #5                  // Field transform:Ljava/util/function/Function;
      23: aload_2
      24: invokestatic  #12                 // Method fromDirect:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
      27: invokeinterface #13,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: ldc           #14                 // String The transform returned a null Mono
      34: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      37: checkcast     #15                 // class reactor/core/publisher/Mono
      40: astore_3
      41: goto          62
      44: astore        4
      46: aload_1
      47: aload         4
      49: aload_1
      50: invokeinterface #10,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      55: invokestatic  #17                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      58: invokestatic  #18                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      61: return
      62: aload_3
      63: instanceof    #19                 // class reactor/core/Fuseable
      66: ifeq          85
      69: aload_3
      70: new           #20                 // class reactor/core/publisher/FluxPublishMulticast$CancelFuseableMulticaster
      73: dup
      74: aload_1
      75: aload_2
      76: invokespecial #21                 // Method reactor/core/publisher/FluxPublishMulticast$CancelFuseableMulticaster."<init>":(Lreactor/core/CoreSubscriber;Lreactor/core/publisher/FluxPublishMulticast$FluxPublishMulticaster;)V
      79: invokevirtual #22                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      82: goto          98
      85: aload_3
      86: new           #23                 // class reactor/core/publisher/FluxPublishMulticast$CancelMulticaster
      89: dup
      90: aload_1
      91: aload_2
      92: invokespecial #24                 // Method reactor/core/publisher/FluxPublishMulticast$CancelMulticaster."<init>":(Lreactor/core/CoreSubscriber;Lreactor/core/publisher/FluxPublishMulticast$FluxPublishMulticaster;)V
      95: invokevirtual #22                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      98: aload_0
      99: getfield      #25                 // Field source:Lreactor/core/publisher/Mono;
     102: aload_2
     103: invokevirtual #22                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
     106: return
    Exception table:
       from    to  target type
          19    41    44   Class java/lang/Throwable
}
