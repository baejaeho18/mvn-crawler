Compiled from "FluxExtensions.kt"
public final class reactor.core.publisher.FluxExtensionsKt {
  public static final <T> reactor.core.publisher.Flux<T> toFlux(org.reactivestreams.Publisher<T>);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #20                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      10: dup
      11: ldc           #22                 // String Flux.from(this)
      13: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: areturn

  public static final <T> reactor.core.publisher.Flux<T> toFlux(java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #31                 // Method toIterable:(Ljava/util/Iterator;)Lreactor/core/publisher/FluxExtensionsKt$toIterable$1;
      10: checkcast     #33                 // class java/lang/Iterable
      13: invokestatic  #36                 // Method toFlux:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      16: areturn

  public static final <T> reactor.core.publisher.Flux<T> toFlux(java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #40                 // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      10: dup
      11: ldc           #42                 // String Flux.fromIterable(this)
      13: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: areturn

  public static final <T> reactor.core.publisher.Flux<T> toFlux(kotlin.sequences.Sequence<? extends T>);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #46                 // class reactor/core/publisher/FluxExtensionsKt$toFlux$1
       9: dup
      10: aload_0
      11: invokespecial #50                 // Method reactor/core/publisher/FluxExtensionsKt$toFlux$1."<init>":(Lkotlin/sequences/Sequence;)V
      14: checkcast     #33                 // class java/lang/Iterable
      17: invokestatic  #40                 // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      20: dup
      21: ldc           #52                 // String Flux.fromIterable(objectâ€¦this@toFlux.iterator()\n})
      23: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: areturn

  public static final <T> reactor.core.publisher.Flux<T> toFlux(java.util.stream.Stream<T>);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #57                 // Method reactor/core/publisher/Flux.fromStream:(Ljava/util/stream/Stream;)Lreactor/core/publisher/Flux;
      10: dup
      11: ldc           #59                 // String Flux.fromStream(this)
      13: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: areturn

  public static final reactor.core.publisher.Flux<java.lang.Boolean> toFlux(boolean[]);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #67                 // Method kotlin/collections/ArraysKt.toList:([Z)Ljava/util/List;
      10: checkcast     #33                 // class java/lang/Iterable
      13: invokestatic  #36                 // Method toFlux:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      16: areturn

  public static final reactor.core.publisher.Flux<java.lang.Byte> toFlux(byte[]);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #72                 // Method kotlin/collections/ArraysKt.toList:([B)Ljava/util/List;
      10: checkcast     #33                 // class java/lang/Iterable
      13: invokestatic  #36                 // Method toFlux:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      16: areturn

  public static final reactor.core.publisher.Flux<java.lang.Short> toFlux(short[]);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #77                 // Method kotlin/collections/ArraysKt.toList:([S)Ljava/util/List;
      10: checkcast     #33                 // class java/lang/Iterable
      13: invokestatic  #36                 // Method toFlux:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      16: areturn

  public static final reactor.core.publisher.Flux<java.lang.Integer> toFlux(int[]);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #82                 // Method kotlin/collections/ArraysKt.toList:([I)Ljava/util/List;
      10: checkcast     #33                 // class java/lang/Iterable
      13: invokestatic  #36                 // Method toFlux:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      16: areturn

  public static final reactor.core.publisher.Flux<java.lang.Long> toFlux(long[]);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #87                 // Method kotlin/collections/ArraysKt.toList:([J)Ljava/util/List;
      10: checkcast     #33                 // class java/lang/Iterable
      13: invokestatic  #36                 // Method toFlux:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      16: areturn

  public static final reactor.core.publisher.Flux<java.lang.Float> toFlux(float[]);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #92                 // Method kotlin/collections/ArraysKt.toList:([F)Ljava/util/List;
      10: checkcast     #33                 // class java/lang/Iterable
      13: invokestatic  #36                 // Method toFlux:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      16: areturn

  public static final reactor.core.publisher.Flux<java.lang.Double> toFlux(double[]);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #97                 // Method kotlin/collections/ArraysKt.toList:([D)Ljava/util/List;
      10: checkcast     #33                 // class java/lang/Iterable
      13: invokestatic  #36                 // Method toFlux:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      16: areturn

  public static final <T> reactor.core.publisher.Flux<T> toFlux(T[]);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #102                // Method reactor/core/publisher/Flux.fromArray:([Ljava/lang/Object;)Lreactor/core/publisher/Flux;
      10: dup
      11: ldc           #104                // String Flux.fromArray(this)
      13: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: areturn

  private static final <T> reactor.core.publisher.FluxExtensionsKt$toIterable$1 toIterable(java.util.Iterator<? extends T>);
    Code:
       0: new           #107                // class reactor/core/publisher/FluxExtensionsKt$toIterable$1
       3: dup
       4: aload_0
       5: invokespecial #110                // Method reactor/core/publisher/FluxExtensionsKt$toIterable$1."<init>":(Ljava/util/Iterator;)V
       8: areturn

  public static final <T> reactor.core.publisher.Flux<T> toFlux(java.lang.Throwable);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #114                // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      10: dup
      11: ldc           #116                // String Flux.error(this)
      13: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: areturn

  private static final <T> reactor.core.publisher.Flux<T> cast(reactor.core.publisher.Flux<?>);
    Code:
       0: aload_0
       1: iconst_4
       2: ldc           #121                // String T
       4: invokestatic  #125                // Method kotlin/jvm/internal/Intrinsics.reifiedOperationMarker:(ILjava/lang/String;)V
       7: ldc           #4                  // class java/lang/Object
       9: invokevirtual #128                // Method reactor/core/publisher/Flux.cast:(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
      12: dup
      13: ldc           #130                // String cast(T::class.java)
      15: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: areturn

  public static final <T, E extends java.lang.Throwable> reactor.core.publisher.Flux<T> doOnError(reactor.core.publisher.Flux<T>, kotlin.reflect.KClass<E>, kotlin.jvm.functions.Function1<? super E, kotlin.Unit>);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #137                // String exceptionType
       9: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #139                // String onError
      15: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: invokestatic  #145                // Method kotlin/jvm/JvmClassMappingKt.getJavaClass:(Lkotlin/reflect/KClass;)Ljava/lang/Class;
      23: new           #147                // class reactor/core/publisher/FluxExtensionsKt$doOnError$1
      26: dup
      27: aload_2
      28: invokespecial #150                // Method reactor/core/publisher/FluxExtensionsKt$doOnError$1."<init>":(Lkotlin/jvm/functions/Function1;)V
      31: checkcast     #152                // class java/util/function/Consumer
      34: invokevirtual #155                // Method reactor/core/publisher/Flux.doOnError:(Ljava/lang/Class;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      37: dup
      38: ldc           #157                // String doOnError(exceptionType.java, { onError(it) })
      40: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      43: areturn

  public static final <T, E extends java.lang.Throwable> reactor.core.publisher.Flux<T> onErrorMap(reactor.core.publisher.Flux<T>, kotlin.reflect.KClass<E>, kotlin.jvm.functions.Function1<? super E, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #137                // String exceptionType
       9: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #162                // String mapper
      15: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: invokestatic  #145                // Method kotlin/jvm/JvmClassMappingKt.getJavaClass:(Lkotlin/reflect/KClass;)Ljava/lang/Class;
      23: new           #164                // class reactor/core/publisher/FluxExtensionsKt$onErrorMap$1
      26: dup
      27: aload_2
      28: invokespecial #165                // Method reactor/core/publisher/FluxExtensionsKt$onErrorMap$1."<init>":(Lkotlin/jvm/functions/Function1;)V
      31: checkcast     #167                // class java/util/function/Function
      34: invokevirtual #170                // Method reactor/core/publisher/Flux.onErrorMap:(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      37: dup
      38: ldc           #172                // String onErrorMap(exceptionType.java, { mapper(it) })
      40: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      43: areturn

  private static final <T> reactor.core.publisher.Flux<T> ofType(reactor.core.publisher.Flux<?>);
    Code:
       0: aload_0
       1: iconst_4
       2: ldc           #121                // String T
       4: invokestatic  #125                // Method kotlin/jvm/internal/Intrinsics.reifiedOperationMarker:(ILjava/lang/String;)V
       7: ldc           #4                  // class java/lang/Object
       9: invokevirtual #175                // Method reactor/core/publisher/Flux.ofType:(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
      12: dup
      13: ldc           #177                // String ofType(T::class.java)
      15: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: areturn

  public static final <T, E extends java.lang.Throwable> reactor.core.publisher.Flux<T> onErrorResume(reactor.core.publisher.Flux<T>, kotlin.reflect.KClass<E>, kotlin.jvm.functions.Function1<? super E, ? extends org.reactivestreams.Publisher<T>>);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #137                // String exceptionType
       9: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #181                // String fallback
      15: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: invokestatic  #145                // Method kotlin/jvm/JvmClassMappingKt.getJavaClass:(Lkotlin/reflect/KClass;)Ljava/lang/Class;
      23: new           #183                // class reactor/core/publisher/FluxExtensionsKt$onErrorResume$1
      26: dup
      27: aload_2
      28: invokespecial #184                // Method reactor/core/publisher/FluxExtensionsKt$onErrorResume$1."<init>":(Lkotlin/jvm/functions/Function1;)V
      31: checkcast     #167                // class java/util/function/Function
      34: invokevirtual #186                // Method reactor/core/publisher/Flux.onErrorResume:(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      37: dup
      38: ldc           #188                // String onErrorResume(exceptionTâ€¦e.java, { fallback(it) })
      40: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      43: areturn

  public static final <T, E extends java.lang.Throwable> reactor.core.publisher.Flux<T> onErrorReturn(reactor.core.publisher.Flux<T>, kotlin.reflect.KClass<E>, T);
    Code:
       0: aload_0
       1: ldc           #9                  // String $receiver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #137                // String exceptionType
       9: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #192                // String value
      15: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: invokestatic  #145                // Method kotlin/jvm/JvmClassMappingKt.getJavaClass:(Lkotlin/reflect/KClass;)Ljava/lang/Class;
      23: aload_2
      24: invokevirtual #195                // Method reactor/core/publisher/Flux.onErrorReturn:(Ljava/lang/Class;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
      27: dup
      28: ldc           #197                // String onErrorReturn(exceptionType.java, value)
      30: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      33: areturn
}
