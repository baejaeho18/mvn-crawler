Compiled from "FluxOnAssembly.java"
class reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException extends java.lang.RuntimeException {
  final boolean checkpointed;

  java.lang.String cached;

  reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/RuntimeException."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field checkpointed:Z
       9: return

  reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: iconst_1
       7: putfield      #2                  // Field checkpointed:Z
      10: return

  public boolean isLight();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cached:Ljava/lang/String;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokestatic  #5                  // Method reactor/core/publisher/FluxOnAssembly.getStacktrace:(Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshotException;)Ljava/lang/String;
      12: putfield      #4                  // Field cached:Ljava/lang/String;
      15: aload_0
      16: getfield      #4                  // Field cached:Ljava/lang/String;
      19: areturn

  java.lang.String stackFirst();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method toString:()Ljava/lang/String;
       4: iconst_0
       5: invokestatic  #7                  // Method reactor/core/publisher/FluxOnAssembly.extract:(Ljava/lang/String;Z)Ljava/lang/String;
       8: areturn
}
