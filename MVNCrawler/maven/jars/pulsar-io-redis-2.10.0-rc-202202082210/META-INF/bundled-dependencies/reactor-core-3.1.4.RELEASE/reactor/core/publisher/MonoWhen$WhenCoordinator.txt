Compiled from "MonoWhen.java"
final class reactor.core.publisher.MonoWhen$WhenCoordinator extends reactor.core.publisher.Operators$MonoSubscriber<java.lang.Object, java.lang.Void> {
  final reactor.core.publisher.MonoWhen$WhenInner[] subscribers;

  final boolean delayError;

  volatile int done;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.MonoWhen$WhenCoordinator> DONE;

  reactor.core.publisher.MonoWhen$WhenCoordinator(reactor.core.CoreSubscriber<? super java.lang.Void>, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: iload_3
       7: putfield      #2                  // Field delayError:Z
      10: aload_0
      11: iload_2
      12: anewarray     #3                  // class reactor/core/publisher/MonoWhen$WhenInner
      15: putfield      #4                  // Field subscribers:[Lreactor/core/publisher/MonoWhen$WhenInner;
      18: iconst_0
      19: istore        4
      21: iload         4
      23: iload_2
      24: if_icmpge     48
      27: aload_0
      28: getfield      #4                  // Field subscribers:[Lreactor/core/publisher/MonoWhen$WhenInner;
      31: iload         4
      33: new           #3                  // class reactor/core/publisher/MonoWhen$WhenInner
      36: dup
      37: aload_0
      38: invokespecial #5                  // Method reactor/core/publisher/MonoWhen$WhenInner."<init>":(Lreactor/core/publisher/MonoWhen$WhenCoordinator;)V
      41: aastore
      42: iinc          4, 1
      45: goto          21
      48: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #6                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     28
       7: aload_0
       8: getfield      #7                  // Field done:I
      11: aload_0
      12: getfield      #4                  // Field subscribers:[Lreactor/core/publisher/MonoWhen$WhenInner;
      15: arraylength
      16: if_icmpne     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn
      28: aload_1
      29: getstatic     #9                  // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      32: if_acmpne     44
      35: aload_0
      36: getfield      #4                  // Field subscribers:[Lreactor/core/publisher/MonoWhen$WhenInner;
      39: arraylength
      40: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: areturn
      44: aload_1
      45: getstatic     #11                 // Field reactor/core/Scannable$Attr.DELAY_ERROR:Lreactor/core/Scannable$Attr;
      48: if_acmpne     59
      51: aload_0
      52: getfield      #2                  // Field delayError:Z
      55: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      58: areturn
      59: aload_0
      60: aload_1
      61: invokespecial #12                 // Method reactor/core/publisher/Operators$MonoSubscriber.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      64: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #4                  // Field subscribers:[Lreactor/core/publisher/MonoWhen$WhenInner;
       4: invokestatic  #13                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: areturn

  void subscribe(org.reactivestreams.Publisher<?>[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field subscribers:[Lreactor/core/publisher/MonoWhen$WhenInner;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: aload_2
       9: arraylength
      10: if_icmpge     30
      13: aload_1
      14: iload_3
      15: aaload
      16: aload_2
      17: iload_3
      18: aaload
      19: invokeinterface #14,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      24: iinc          3, 1
      27: goto          7
      30: return

  void signalError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delayError:Z
       4: ifeq          14
       7: aload_0
       8: invokevirtual #15                 // Method signal:()V
      11: goto          46
      14: aload_0
      15: getfield      #4                  // Field subscribers:[Lreactor/core/publisher/MonoWhen$WhenInner;
      18: arraylength
      19: istore_2
      20: getstatic     #16                 // Field DONE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      23: aload_0
      24: iload_2
      25: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      28: iload_2
      29: if_icmpeq     46
      32: aload_0
      33: invokevirtual #18                 // Method cancel:()V
      36: aload_0
      37: getfield      #19                 // Field actual:Lreactor/core/CoreSubscriber;
      40: aload_1
      41: invokeinterface #20,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      46: return

  void signal();
    Code:
       0: aload_0
       1: getfield      #4                  // Field subscribers:[Lreactor/core/publisher/MonoWhen$WhenInner;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: getstatic     #16                 // Field DONE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      11: aload_0
      12: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
      15: iload_2
      16: if_icmpeq     20
      19: return
      20: aconst_null
      21: astore_3
      22: aconst_null
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: aload_1
      31: arraylength
      32: if_icmpge     102
      35: aload_1
      36: iload         5
      38: aaload
      39: astore        6
      41: aload         6
      43: getfield      #22                 // Field reactor/core/publisher/MonoWhen$WhenInner.error:Ljava/lang/Throwable;
      46: astore        7
      48: aload         7
      50: ifnull        96
      53: aload         4
      55: ifnull        68
      58: aload         4
      60: aload         7
      62: invokevirtual #23                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      65: goto          96
      68: aload_3
      69: ifnull        93
      72: iconst_2
      73: anewarray     #24                 // class java/lang/Throwable
      76: dup
      77: iconst_0
      78: aload_3
      79: aastore
      80: dup
      81: iconst_1
      82: aload         7
      84: aastore
      85: invokestatic  #25                 // Method reactor/core/Exceptions.multiple:([Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      88: astore        4
      90: goto          96
      93: aload         7
      95: astore_3
      96: iinc          5, 1
      99: goto          28
     102: aload         4
     104: ifnull        121
     107: aload_0
     108: getfield      #19                 // Field actual:Lreactor/core/CoreSubscriber;
     111: aload         4
     113: invokeinterface #20,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     118: goto          147
     121: aload_3
     122: ifnull        138
     125: aload_0
     126: getfield      #19                 // Field actual:Lreactor/core/CoreSubscriber;
     129: aload_3
     130: invokeinterface #20,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     135: goto          147
     138: aload_0
     139: getfield      #19                 // Field actual:Lreactor/core/CoreSubscriber;
     142: invokeinterface #26,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     147: return

  public void cancel();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method isCancelled:()Z
       4: ifne          42
       7: aload_0
       8: invokespecial #28                 // Method reactor/core/publisher/Operators$MonoSubscriber.cancel:()V
      11: aload_0
      12: getfield      #4                  // Field subscribers:[Lreactor/core/publisher/MonoWhen$WhenInner;
      15: astore_1
      16: aload_1
      17: arraylength
      18: istore_2
      19: iconst_0
      20: istore_3
      21: iload_3
      22: iload_2
      23: if_icmpge     42
      26: aload_1
      27: iload_3
      28: aaload
      29: astore        4
      31: aload         4
      33: invokevirtual #29                 // Method reactor/core/publisher/MonoWhen$WhenInner.cancel:()V
      36: iinc          3, 1
      39: goto          21
      42: return

  static {};
    Code:
       0: ldc           #30                 // class reactor/core/publisher/MonoWhen$WhenCoordinator
       2: ldc           #31                 // String done
       4: invokestatic  #32                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #16                 // Field DONE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
