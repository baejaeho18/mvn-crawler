Compiled from "DelegateServiceScheduler.java"
final class reactor.core.scheduler.DelegateServiceScheduler implements reactor.core.scheduler.Scheduler,reactor.core.Scannable {
  final java.util.concurrent.ScheduledExecutorService executor;

  reactor.core.scheduler.DelegateServiceScheduler(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #2                  // Method convert:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/ScheduledExecutorService;
       8: astore_2
       9: aload_0
      10: ldc           #3                  // String ExecutorService
      12: aload_2
      13: invokedynamic #4,  0              // InvokeDynamic #0:get:(Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/function/Supplier;
      18: invokestatic  #5                  // Method reactor/core/scheduler/Schedulers.decorateExecutorService:(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/concurrent/ScheduledExecutorService;
      21: putfield      #6                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      24: return

  public reactor.core.scheduler.Scheduler$Worker createWorker();
    Code:
       0: new           #7                  // class reactor/core/scheduler/ExecutorServiceWorker
       3: dup
       4: aload_0
       5: getfield      #6                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       8: invokespecial #8                  // Method reactor/core/scheduler/ExecutorServiceWorker."<init>":(Ljava/util/concurrent/ScheduledExecutorService;)V
      11: areturn

  public reactor.core.Disposable schedule(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lconst_0
       6: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       9: invokestatic  #10                 // Method reactor/core/scheduler/Schedulers.directSchedule:(Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
      12: areturn

  public reactor.core.Disposable schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokestatic  #10                 // Method reactor/core/scheduler/Schedulers.directSchedule:(Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
      11: areturn

  public reactor.core.Disposable schedulePeriodically(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: lload_2
       6: lload         4
       8: aload         6
      10: invokestatic  #11                 // Method reactor/core/scheduler/Schedulers.directSchedulePeriodically:(Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
      13: areturn

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.isShutdown:()Z
       9: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdownNow:()Ljava/util/List;
       9: pop
      10: return

  static java.util.concurrent.ScheduledExecutorService convert(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: instanceof    #14                 // class java/util/concurrent/ScheduledExecutorService
       4: ifeq          12
       7: aload_0
       8: checkcast     #14                 // class java/util/concurrent/ScheduledExecutorService
      11: areturn
      12: new           #15                 // class reactor/core/scheduler/DelegateServiceScheduler$UnsupportedScheduledExecutorService
      15: dup
      16: aload_0
      17: invokespecial #16                 // Method reactor/core/scheduler/DelegateServiceScheduler$UnsupportedScheduledExecutorService."<init>":(Ljava/util/concurrent/ExecutorService;)V
      20: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #17                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpeq     14
       7: aload_1
       8: getstatic     #18                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      11: if_acmpne     22
      14: aload_0
      15: invokevirtual #19                 // Method isDisposed:()Z
      18: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      21: areturn
      22: aload_1
      23: getstatic     #21                 // Field reactor/core/Scannable$Attr.NAME:Lreactor/core/Scannable$Attr;
      26: if_acmpne     57
      29: new           #22                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #25                 // String fromExecutorService(
      38: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #6                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: ldc           #28                 // String )
      50: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn
      57: aload_0
      58: getfield      #6                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      61: aload_1
      62: invokestatic  #30                 // Method reactor/core/scheduler/Schedulers.scanExecutor:(Ljava/util/concurrent/Executor;Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      65: areturn

  private static java.util.concurrent.ScheduledExecutorService lambda$new$0(java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: areturn
}
