Compiled from "FluxErrorOnRequest.java"
final class reactor.core.publisher.FluxErrorOnRequest<T> extends reactor.core.publisher.Flux<T> {
  final java.lang.Throwable error;

  reactor.core.publisher.FluxErrorOnRequest(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Flux."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class java/lang/Throwable
      12: putfield      #4                  // Field error:Ljava/lang/Throwable;
      15: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_1
       1: new           #5                  // class reactor/core/publisher/FluxErrorOnRequest$ErrorSubscription
       4: dup
       5: aload_1
       6: aload_0
       7: getfield      #4                  // Field error:Ljava/lang/Throwable;
      10: invokespecial #6                  // Method reactor/core/publisher/FluxErrorOnRequest$ErrorSubscription."<init>":(Lreactor/core/CoreSubscriber;Ljava/lang/Throwable;)V
      13: invokeinterface #7,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      18: return
}
