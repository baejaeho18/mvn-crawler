Compiled from "ParallelMergeSort.java"
final class reactor.core.publisher.ParallelMergeSort$MergeSortInner<T> implements reactor.core.publisher.InnerConsumer<java.util.List<T>> {
  final reactor.core.publisher.ParallelMergeSort$MergeSortMain<T> parent;

  final int index;

  volatile org.reactivestreams.Subscription s;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.ParallelMergeSort$MergeSortInner, org.reactivestreams.Subscription> S;

  reactor.core.publisher.ParallelMergeSort$MergeSortInner(reactor.core.publisher.ParallelMergeSort$MergeSortMain<T>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parent:Lreactor/core/publisher/ParallelMergeSort$MergeSortMain;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field index:I
      14: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/ParallelMergeSort$MergeSortMain;
       4: getfield      #4                  // Field reactor/core/publisher/ParallelMergeSort$MergeSortMain.actual:Lreactor/core/CoreSubscriber;
       7: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      12: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #6                  // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     26
       7: aload_0
       8: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
      11: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      14: if_acmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      25: areturn
      26: aload_1
      27: getstatic     #10                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      30: if_acmpne     38
      33: aload_0
      34: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
      37: areturn
      38: aload_1
      39: getstatic     #11                 // Field reactor/core/Scannable$Attr.ACTUAL:Lreactor/core/Scannable$Attr;
      42: if_acmpne     50
      45: aload_0
      46: getfield      #2                  // Field parent:Lreactor/core/publisher/ParallelMergeSort$MergeSortMain;
      49: areturn
      50: aload_1
      51: getstatic     #12                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      54: if_acmpne     63
      57: ldc           #14                 // int 2147483647
      59: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: areturn
      63: aconst_null
      64: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #17                 // Method reactor/core/publisher/Operators.setOnce:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          20
      11: aload_1
      12: ldc2_w        #19                 // long 9223372036854775807l
      15: invokeinterface #21,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      20: return

  public void onNext(java.util.List<T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/ParallelMergeSort$MergeSortMain;
       4: aload_1
       5: aload_0
       6: getfield      #3                  // Field index:I
       9: invokevirtual #22                 // Method reactor/core/publisher/ParallelMergeSort$MergeSortMain.innerNext:(Ljava/util/List;I)V
      12: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/ParallelMergeSort$MergeSortMain;
       4: aload_1
       5: invokevirtual #23                 // Method reactor/core/publisher/ParallelMergeSort$MergeSortMain.innerError:(Ljava/lang/Throwable;)V
       8: return

  public void onComplete();
    Code:
       0: return

  void cancel();
    Code:
       0: getstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #24                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
       7: pop
       8: return

  public void onNext(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class java/util/List
       5: invokevirtual #26                 // Method onNext:(Ljava/util/List;)V
       8: return

  static {};
    Code:
       0: ldc           #27                 // class reactor/core/publisher/ParallelMergeSort$MergeSortInner
       2: ldc           #28                 // class org/reactivestreams/Subscription
       4: ldc           #29                 // String s
       6: invokestatic  #30                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: return
}
