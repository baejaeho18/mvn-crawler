Compiled from "MonoCollectList.java"
final class reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber<T, C extends java.util.Collection<? super T>> extends reactor.core.publisher.Operators$MonoSubscriber<T, C> {
  C collection;

  org.reactivestreams.Subscription s;

  reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber(reactor.core.CoreSubscriber<? super C>, C);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field collection:Ljava/util/Collection;
      10: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #3                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #5                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     35
      19: aload_0
      20: getfield      #2                  // Field collection:Ljava/util/Collection;
      23: ifnonnull     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: invokestatic  #6                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      34: areturn
      35: aload_0
      36: aload_1
      37: invokespecial #7                  // Method reactor/core/publisher/Operators$MonoSubscriber.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      40: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #8                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          35
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #10,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: ldc2_w        #12                 // long 9223372036854775807l
      30: invokeinterface #14,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      35: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field collection:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field collection:Ljava/util/Collection;
       4: astore_2
       5: aload_2
       6: ifnonnull     10
       9: return
      10: aload_0
      11: aconst_null
      12: putfield      #2                  // Field collection:Ljava/util/Collection;
      15: aload_0
      16: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      19: aload_1
      20: invokeinterface #16,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      25: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field collection:Ljava/util/Collection;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: aconst_null
      12: putfield      #2                  // Field collection:Ljava/util/Collection;
      15: aload_0
      16: aload_1
      17: invokevirtual #17                 // Method complete:(Ljava/lang/Object;)V
      20: return

  public void cancel();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method reactor/core/publisher/Operators$MonoSubscriber.cancel:()V
       4: aload_0
       5: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
       8: invokeinterface #19,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      13: return
}
