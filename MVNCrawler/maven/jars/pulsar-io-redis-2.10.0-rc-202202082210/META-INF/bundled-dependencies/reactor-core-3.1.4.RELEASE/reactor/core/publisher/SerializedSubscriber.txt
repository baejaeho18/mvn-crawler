Compiled from "SerializedSubscriber.java"
final class reactor.core.publisher.SerializedSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  boolean emitting;

  boolean missed;

  volatile boolean done;

  volatile boolean cancelled;

  reactor.core.publisher.SerializedSubscriber$LinkedArrayNode<T> head;

  reactor.core.publisher.SerializedSubscriber$LinkedArrayNode<T> tail;

  java.lang.Throwable error;

  org.reactivestreams.Subscription s;

  reactor.core.publisher.SerializedSubscriber(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #3                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #4                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #3                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #5,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #6                  // Field cancelled:Z
       4: ifne          14
       7: aload_0
       8: getfield      #7                  // Field done:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: dup
      17: astore_2
      18: monitorenter
      19: aload_0
      20: getfield      #6                  // Field cancelled:Z
      23: ifne          33
      26: aload_0
      27: getfield      #7                  // Field done:Z
      30: ifeq          36
      33: aload_2
      34: monitorexit
      35: return
      36: aload_0
      37: getfield      #8                  // Field emitting:Z
      40: ifeq          56
      43: aload_0
      44: aload_1
      45: invokevirtual #9                  // Method serAdd:(Ljava/lang/Object;)V
      48: aload_0
      49: iconst_1
      50: putfield      #10                 // Field missed:Z
      53: aload_2
      54: monitorexit
      55: return
      56: aload_0
      57: iconst_1
      58: putfield      #8                  // Field emitting:Z
      61: aload_2
      62: monitorexit
      63: goto          71
      66: astore_3
      67: aload_2
      68: monitorexit
      69: aload_3
      70: athrow
      71: aload_0
      72: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      75: aload_1
      76: invokeinterface #11,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      81: aload_0
      82: aload_0
      83: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      86: invokevirtual #12                 // Method serDrainLoop:(Lreactor/core/CoreSubscriber;)V
      89: return
    Exception table:
       from    to  target type
          19    35    66   any
          36    55    66   any
          56    63    66   any
          66    69    66   any

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field cancelled:Z
       4: ifne          14
       7: aload_0
       8: getfield      #7                  // Field done:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: dup
      17: astore_2
      18: monitorenter
      19: aload_0
      20: getfield      #6                  // Field cancelled:Z
      23: ifne          33
      26: aload_0
      27: getfield      #7                  // Field done:Z
      30: ifeq          36
      33: aload_2
      34: monitorexit
      35: return
      36: aload_0
      37: iconst_1
      38: putfield      #7                  // Field done:Z
      41: aload_0
      42: aload_1
      43: putfield      #13                 // Field error:Ljava/lang/Throwable;
      46: aload_0
      47: getfield      #8                  // Field emitting:Z
      50: ifeq          61
      53: aload_0
      54: iconst_1
      55: putfield      #10                 // Field missed:Z
      58: aload_2
      59: monitorexit
      60: return
      61: aload_2
      62: monitorexit
      63: goto          71
      66: astore_3
      67: aload_2
      68: monitorexit
      69: aload_3
      70: athrow
      71: aload_0
      72: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      75: aload_1
      76: invokeinterface #14,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      81: return
    Exception table:
       from    to  target type
          19    35    66   any
          36    60    66   any
          61    63    66   any
          66    69    66   any

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cancelled:Z
       4: ifne          14
       7: aload_0
       8: getfield      #7                  // Field done:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: dup
      17: astore_1
      18: monitorenter
      19: aload_0
      20: getfield      #6                  // Field cancelled:Z
      23: ifne          33
      26: aload_0
      27: getfield      #7                  // Field done:Z
      30: ifeq          36
      33: aload_1
      34: monitorexit
      35: return
      36: aload_0
      37: iconst_1
      38: putfield      #7                  // Field done:Z
      41: aload_0
      42: getfield      #8                  // Field emitting:Z
      45: ifeq          56
      48: aload_0
      49: iconst_1
      50: putfield      #10                 // Field missed:Z
      53: aload_1
      54: monitorexit
      55: return
      56: aload_1
      57: monitorexit
      58: goto          66
      61: astore_2
      62: aload_1
      63: monitorexit
      64: aload_2
      65: athrow
      66: aload_0
      67: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      70: invokeinterface #15,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      75: return
    Exception table:
       from    to  target type
          19    35    61   any
          36    55    61   any
          56    58    61   any
          61    64    61   any

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #16,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field cancelled:Z
       5: aload_0
       6: getfield      #3                  // Field s:Lorg/reactivestreams/Subscription;
       9: invokeinterface #17,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      14: return

  void serAdd(T);
    Code:
       0: aload_0
       1: getfield      #18                 // Field tail:Lreactor/core/publisher/SerializedSubscriber$LinkedArrayNode;
       4: astore_2
       5: aload_2
       6: ifnonnull     31
       9: new           #19                 // class reactor/core/publisher/SerializedSubscriber$LinkedArrayNode
      12: dup
      13: aload_1
      14: invokespecial #20                 // Method reactor/core/publisher/SerializedSubscriber$LinkedArrayNode."<init>":(Ljava/lang/Object;)V
      17: astore_2
      18: aload_0
      19: aload_2
      20: putfield      #21                 // Field head:Lreactor/core/publisher/SerializedSubscriber$LinkedArrayNode;
      23: aload_0
      24: aload_2
      25: putfield      #18                 // Field tail:Lreactor/core/publisher/SerializedSubscriber$LinkedArrayNode;
      28: goto          79
      31: aload_2
      32: getfield      #22                 // Field reactor/core/publisher/SerializedSubscriber$LinkedArrayNode.count:I
      35: bipush        16
      37: if_icmpne     62
      40: new           #19                 // class reactor/core/publisher/SerializedSubscriber$LinkedArrayNode
      43: dup
      44: aload_1
      45: invokespecial #20                 // Method reactor/core/publisher/SerializedSubscriber$LinkedArrayNode."<init>":(Ljava/lang/Object;)V
      48: astore_3
      49: aload_2
      50: aload_3
      51: putfield      #23                 // Field reactor/core/publisher/SerializedSubscriber$LinkedArrayNode.next:Lreactor/core/publisher/SerializedSubscriber$LinkedArrayNode;
      54: aload_0
      55: aload_3
      56: putfield      #18                 // Field tail:Lreactor/core/publisher/SerializedSubscriber$LinkedArrayNode;
      59: goto          79
      62: aload_2
      63: getfield      #24                 // Field reactor/core/publisher/SerializedSubscriber$LinkedArrayNode.array:[Ljava/lang/Object;
      66: aload_2
      67: dup
      68: getfield      #22                 // Field reactor/core/publisher/SerializedSubscriber$LinkedArrayNode.count:I
      71: dup_x1
      72: iconst_1
      73: iadd
      74: putfield      #22                 // Field reactor/core/publisher/SerializedSubscriber$LinkedArrayNode.count:I
      77: aload_1
      78: aastore
      79: return

  void serDrainLoop(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field cancelled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: dup
      10: astore        5
      12: monitorenter
      13: aload_0
      14: getfield      #6                  // Field cancelled:Z
      17: ifeq          24
      20: aload         5
      22: monitorexit
      23: return
      24: aload_0
      25: getfield      #10                 // Field missed:Z
      28: ifne          40
      31: aload_0
      32: iconst_0
      33: putfield      #8                  // Field emitting:Z
      36: aload         5
      38: monitorexit
      39: return
      40: aload_0
      41: iconst_0
      42: putfield      #10                 // Field missed:Z
      45: aload_0
      46: getfield      #7                  // Field done:Z
      49: istore_2
      50: aload_0
      51: getfield      #13                 // Field error:Ljava/lang/Throwable;
      54: astore_3
      55: aload_0
      56: getfield      #21                 // Field head:Lreactor/core/publisher/SerializedSubscriber$LinkedArrayNode;
      59: astore        4
      61: aload_0
      62: aconst_null
      63: putfield      #21                 // Field head:Lreactor/core/publisher/SerializedSubscriber$LinkedArrayNode;
      66: aload_0
      67: aconst_null
      68: putfield      #18                 // Field tail:Lreactor/core/publisher/SerializedSubscriber$LinkedArrayNode;
      71: aload         5
      73: monitorexit
      74: goto          85
      77: astore        6
      79: aload         5
      81: monitorexit
      82: aload         6
      84: athrow
      85: aload         4
      87: ifnull        149
      90: aload         4
      92: getfield      #24                 // Field reactor/core/publisher/SerializedSubscriber$LinkedArrayNode.array:[Ljava/lang/Object;
      95: astore        5
      97: aload         4
      99: getfield      #22                 // Field reactor/core/publisher/SerializedSubscriber$LinkedArrayNode.count:I
     102: istore        6
     104: iconst_0
     105: istore        7
     107: iload         7
     109: iload         6
     111: if_icmpge     139
     114: aload_0
     115: getfield      #6                  // Field cancelled:Z
     118: ifeq          122
     121: return
     122: aload_1
     123: aload         5
     125: iload         7
     127: aaload
     128: invokeinterface #11,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     133: iinc          7, 1
     136: goto          107
     139: aload         4
     141: getfield      #23                 // Field reactor/core/publisher/SerializedSubscriber$LinkedArrayNode.next:Lreactor/core/publisher/SerializedSubscriber$LinkedArrayNode;
     144: astore        4
     146: goto          85
     149: aload_0
     150: getfield      #6                  // Field cancelled:Z
     153: ifeq          157
     156: return
     157: aload_3
     158: ifnull        169
     161: aload_1
     162: aload_3
     163: invokeinterface #14,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     168: return
     169: iload_2
     170: ifeq          180
     173: aload_1
     174: invokeinterface #15,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     179: return
     180: goto          0
    Exception table:
       from    to  target type
          13    23    77   any
          24    39    77   any
          40    74    77   any
          77    82    77   any

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #25                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #3                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #26                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      16: if_acmpne     24
      19: aload_0
      20: getfield      #13                 // Field error:Ljava/lang/Throwable;
      23: areturn
      24: aload_1
      25: getstatic     #27                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      28: if_acmpne     39
      31: aload_0
      32: invokevirtual #28                 // Method producerCapacity:()I
      35: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: areturn
      39: aload_1
      40: getstatic     #30                 // Field reactor/core/Scannable$Attr.CAPACITY:Lreactor/core/Scannable$Attr;
      43: if_acmpne     52
      46: bipush        16
      48: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: areturn
      52: aload_1
      53: getstatic     #31                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      56: if_acmpne     67
      59: aload_0
      60: getfield      #6                  // Field cancelled:Z
      63: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      66: areturn
      67: aload_1
      68: getstatic     #33                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      71: if_acmpne     82
      74: aload_0
      75: getfield      #7                  // Field done:Z
      78: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      81: areturn
      82: aload_0
      83: aload_1
      84: invokespecial #34                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      87: areturn

  int producerCapacity();
    Code:
       0: aload_0
       1: getfield      #18                 // Field tail:Lreactor/core/publisher/SerializedSubscriber$LinkedArrayNode;
       4: astore_1
       5: aload_1
       6: ifnull        14
       9: aload_1
      10: getfield      #22                 // Field reactor/core/publisher/SerializedSubscriber$LinkedArrayNode.count:I
      13: ireturn
      14: iconst_0
      15: ireturn
}
