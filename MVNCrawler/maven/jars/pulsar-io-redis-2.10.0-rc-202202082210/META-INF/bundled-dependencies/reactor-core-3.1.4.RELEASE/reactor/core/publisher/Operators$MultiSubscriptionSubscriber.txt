Compiled from "Operators.java"
abstract class reactor.core.publisher.Operators$MultiSubscriptionSubscriber<I, O> implements reactor.core.publisher.InnerOperator<I, O> {
  final reactor.core.CoreSubscriber<? super O> actual;

  protected boolean unbounded;

  org.reactivestreams.Subscription subscription;

  long requested;

  volatile org.reactivestreams.Subscription missedSubscription;

  volatile long missedRequested;

  volatile long missedProduced;

  volatile int wip;

  volatile boolean cancelled;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.Operators$MultiSubscriptionSubscriber, org.reactivestreams.Subscription> MISSED_SUBSCRIPTION;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.Operators$MultiSubscriptionSubscriber> MISSED_REQUESTED;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.Operators$MultiSubscriptionSubscriber> MISSED_PRODUCED;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.Operators$MultiSubscriptionSubscriber> WIP;

  public reactor.core.publisher.Operators$MultiSubscriptionSubscriber(reactor.core.CoreSubscriber<? super O>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: return

  public reactor.core.CoreSubscriber<? super O> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cancelled:Z
       4: ifne          16
       7: aload_0
       8: iconst_1
       9: putfield      #3                  // Field cancelled:Z
      12: aload_0
      13: invokevirtual #4                  // Method drain:()V
      16: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     26
       7: aload_0
       8: getfield      #6                  // Field missedSubscription:Lorg/reactivestreams/Subscription;
      11: ifnull        21
      14: aload_0
      15: getfield      #6                  // Field missedSubscription:Lorg/reactivestreams/Subscription;
      18: goto          25
      21: aload_0
      22: getfield      #7                  // Field subscription:Lorg/reactivestreams/Subscription;
      25: areturn
      26: aload_1
      27: getstatic     #8                  // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      30: if_acmpne     41
      33: aload_0
      34: invokevirtual #9                  // Method isCancelled:()Z
      37: invokestatic  #10                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      40: areturn
      41: aload_1
      42: getstatic     #11                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      45: if_acmpne     63
      48: aload_0
      49: getfield      #12                 // Field requested:J
      52: aload_0
      53: getfield      #13                 // Field missedRequested:J
      56: invokestatic  #14                 // Method reactor/core/publisher/Operators.addCap:(JJ)J
      59: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      62: areturn
      63: aload_0
      64: aload_1
      65: invokespecial #16                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      68: areturn

  public final boolean isUnbounded();
    Code:
       0: aload_0
       1: getfield      #17                 // Field unbounded:Z
       4: ireturn

  final boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cancelled:Z
       4: ireturn

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: invokeinterface #18,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
       9: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method set:(Lorg/reactivestreams/Subscription;)V
       5: return

  public final void produced(long);
    Code:
       0: aload_0
       1: getfield      #17                 // Field unbounded:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #21                 // Field wip:I
      12: ifne          88
      15: getstatic     #22                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      18: aload_0
      19: iconst_0
      20: iconst_1
      21: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      24: ifeq          88
      27: aload_0
      28: getfield      #12                 // Field requested:J
      31: lstore_3
      32: lload_3
      33: ldc2_w        #25                 // long 9223372036854775807l
      36: lcmp
      37: ifeq          67
      40: lload_3
      41: lload_1
      42: lsub
      43: lstore        5
      45: lload         5
      47: lconst_0
      48: lcmp
      49: ifge          58
      52: invokestatic  #27                 // Method reactor/core/publisher/Operators.reportMoreProduced:()V
      55: lconst_0
      56: lstore        5
      58: aload_0
      59: lload         5
      61: putfield      #12                 // Field requested:J
      64: goto          72
      67: aload_0
      68: iconst_1
      69: putfield      #17                 // Field unbounded:Z
      72: getstatic     #22                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      75: aload_0
      76: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      79: ifne          83
      82: return
      83: aload_0
      84: invokevirtual #29                 // Method drainLoop:()V
      87: return
      88: getstatic     #30                 // Field MISSED_PRODUCED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      91: aload_0
      92: lload_1
      93: invokestatic  #31                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      96: pop2
      97: aload_0
      98: invokevirtual #4                  // Method drain:()V
     101: return

  final void producedOne();
    Code:
       0: aload_0
       1: getfield      #17                 // Field unbounded:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #21                 // Field wip:I
      12: ifne          84
      15: getstatic     #22                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      18: aload_0
      19: iconst_0
      20: iconst_1
      21: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      24: ifeq          84
      27: aload_0
      28: getfield      #12                 // Field requested:J
      31: lstore_1
      32: lload_1
      33: ldc2_w        #25                 // long 9223372036854775807l
      36: lcmp
      37: ifeq          63
      40: lload_1
      41: lconst_1
      42: lsub
      43: lstore_1
      44: lload_1
      45: lconst_0
      46: lcmp
      47: ifge          55
      50: invokestatic  #27                 // Method reactor/core/publisher/Operators.reportMoreProduced:()V
      53: lconst_0
      54: lstore_1
      55: aload_0
      56: lload_1
      57: putfield      #12                 // Field requested:J
      60: goto          68
      63: aload_0
      64: iconst_1
      65: putfield      #17                 // Field unbounded:Z
      68: getstatic     #22                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      71: aload_0
      72: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      75: ifne          79
      78: return
      79: aload_0
      80: invokevirtual #29                 // Method drainLoop:()V
      83: return
      84: getstatic     #30                 // Field MISSED_PRODUCED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      87: aload_0
      88: lconst_1
      89: invokestatic  #31                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      92: pop2
      93: aload_0
      94: invokevirtual #4                  // Method drain:()V
      97: return

  public final void request(long);
    Code:
       0: lload_1
       1: invokestatic  #32                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          118
       7: aload_0
       8: getfield      #17                 // Field unbounded:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: getfield      #21                 // Field wip:I
      19: ifne          105
      22: getstatic     #22                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      25: aload_0
      26: iconst_0
      27: iconst_1
      28: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      31: ifeq          105
      34: aload_0
      35: getfield      #12                 // Field requested:J
      38: lstore_3
      39: lload_3
      40: ldc2_w        #25                 // long 9223372036854775807l
      43: lcmp
      44: ifeq          71
      47: lload_3
      48: lload_1
      49: invokestatic  #14                 // Method reactor/core/publisher/Operators.addCap:(JJ)J
      52: lstore_3
      53: aload_0
      54: lload_3
      55: putfield      #12                 // Field requested:J
      58: lload_3
      59: ldc2_w        #25                 // long 9223372036854775807l
      62: lcmp
      63: ifne          71
      66: aload_0
      67: iconst_1
      68: putfield      #17                 // Field unbounded:Z
      71: aload_0
      72: getfield      #7                  // Field subscription:Lorg/reactivestreams/Subscription;
      75: astore        5
      77: getstatic     #22                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      80: aload_0
      81: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      84: ifeq          91
      87: aload_0
      88: invokevirtual #29                 // Method drainLoop:()V
      91: aload         5
      93: ifnull        104
      96: aload         5
      98: lload_1
      99: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     104: return
     105: getstatic     #34                 // Field MISSED_REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     108: aload_0
     109: lload_1
     110: invokestatic  #31                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
     113: pop2
     114: aload_0
     115: invokevirtual #4                  // Method drain:()V
     118: return

  public final void set(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cancelled:Z
       4: ifeq          14
       7: aload_1
       8: invokeinterface #35,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      13: return
      14: aload_1
      15: invokestatic  #36                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: getfield      #21                 // Field wip:I
      23: ifne          98
      26: getstatic     #22                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      29: aload_0
      30: iconst_0
      31: iconst_1
      32: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      35: ifeq          98
      38: aload_0
      39: getfield      #7                  // Field subscription:Lorg/reactivestreams/Subscription;
      42: astore_2
      43: aload_2
      44: ifnull        60
      47: aload_0
      48: invokevirtual #37                 // Method shouldCancelCurrent:()Z
      51: ifeq          60
      54: aload_2
      55: invokeinterface #35,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      60: aload_0
      61: aload_1
      62: putfield      #7                  // Field subscription:Lorg/reactivestreams/Subscription;
      65: aload_0
      66: getfield      #12                 // Field requested:J
      69: lstore_3
      70: getstatic     #22                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      73: aload_0
      74: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      77: ifeq          84
      80: aload_0
      81: invokevirtual #29                 // Method drainLoop:()V
      84: lload_3
      85: lconst_0
      86: lcmp
      87: ifeq          97
      90: aload_1
      91: lload_3
      92: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      97: return
      98: getstatic     #38                 // Field MISSED_SUBSCRIPTION:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     101: aload_0
     102: aload_1
     103: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     106: checkcast     #40                 // class org/reactivestreams/Subscription
     109: astore_2
     110: aload_2
     111: ifnull        127
     114: aload_0
     115: invokevirtual #37                 // Method shouldCancelCurrent:()Z
     118: ifeq          127
     121: aload_2
     122: invokeinterface #35,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     127: aload_0
     128: invokevirtual #4                  // Method drain:()V
     131: return

  protected boolean shouldCancelCurrent();
    Code:
       0: iconst_0
       1: ireturn

  final void drain();
    Code:
       0: getstatic     #22                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: aload_0
      12: invokevirtual #29                 // Method drainLoop:()V
      15: return

  final void drainLoop();
    Code:
       0: iconst_1
       1: istore_1
       2: lconst_0
       3: lstore_2
       4: aconst_null
       5: astore        4
       7: aload_0
       8: getfield      #6                  // Field missedSubscription:Lorg/reactivestreams/Subscription;
      11: astore        5
      13: aload         5
      15: ifnull        31
      18: getstatic     #38                 // Field MISSED_SUBSCRIPTION:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      21: aload_0
      22: aconst_null
      23: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #40                 // class org/reactivestreams/Subscription
      29: astore        5
      31: aload_0
      32: getfield      #13                 // Field missedRequested:J
      35: lstore        6
      37: lload         6
      39: lconst_0
      40: lcmp
      41: ifeq          54
      44: getstatic     #34                 // Field MISSED_REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      47: aload_0
      48: lconst_0
      49: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndSet:(Ljava/lang/Object;J)J
      52: lstore        6
      54: aload_0
      55: getfield      #43                 // Field missedProduced:J
      58: lstore        8
      60: lload         8
      62: lconst_0
      63: lcmp
      64: ifeq          77
      67: getstatic     #30                 // Field MISSED_PRODUCED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      70: aload_0
      71: lconst_0
      72: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndSet:(Ljava/lang/Object;J)J
      75: lstore        8
      77: aload_0
      78: getfield      #7                  // Field subscription:Lorg/reactivestreams/Subscription;
      81: astore        10
      83: aload_0
      84: getfield      #3                  // Field cancelled:Z
      87: ifeq          122
      90: aload         10
      92: ifnull        107
      95: aload         10
      97: invokeinterface #35,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     102: aload_0
     103: aconst_null
     104: putfield      #7                  // Field subscription:Lorg/reactivestreams/Subscription;
     107: aload         5
     109: ifnull        266
     112: aload         5
     114: invokeinterface #35,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     119: goto          266
     122: aload_0
     123: getfield      #12                 // Field requested:J
     126: lstore        11
     128: lload         11
     130: ldc2_w        #25                 // long 9223372036854775807l
     133: lcmp
     134: ifeq          192
     137: lload         11
     139: lload         6
     141: invokestatic  #14                 // Method reactor/core/publisher/Operators.addCap:(JJ)J
     144: lstore        13
     146: lload         13
     148: ldc2_w        #25                 // long 9223372036854775807l
     151: lcmp
     152: ifeq          182
     155: lload         13
     157: lload         8
     159: lsub
     160: lstore        15
     162: lload         15
     164: lconst_0
     165: lcmp
     166: ifge          175
     169: invokestatic  #27                 // Method reactor/core/publisher/Operators.reportMoreProduced:()V
     172: lconst_0
     173: lstore        15
     175: lload         15
     177: lstore        11
     179: goto          186
     182: lload         13
     184: lstore        11
     186: aload_0
     187: lload         11
     189: putfield      #12                 // Field requested:J
     192: aload         5
     194: ifnull        243
     197: aload         10
     199: ifnull        216
     202: aload_0
     203: invokevirtual #37                 // Method shouldCancelCurrent:()Z
     206: ifeq          216
     209: aload         10
     211: invokeinterface #35,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     216: aload_0
     217: aload         5
     219: putfield      #7                  // Field subscription:Lorg/reactivestreams/Subscription;
     222: lload         11
     224: lconst_0
     225: lcmp
     226: ifeq          266
     229: lload_2
     230: lload         11
     232: invokestatic  #14                 // Method reactor/core/publisher/Operators.addCap:(JJ)J
     235: lstore_2
     236: aload         5
     238: astore        4
     240: goto          266
     243: lload         6
     245: lconst_0
     246: lcmp
     247: ifeq          266
     250: aload         10
     252: ifnull        266
     255: lload_2
     256: lload         6
     258: invokestatic  #14                 // Method reactor/core/publisher/Operators.addCap:(JJ)J
     261: lstore_2
     262: aload         10
     264: astore        4
     266: getstatic     #22                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     269: aload_0
     270: iload_1
     271: ineg
     272: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     275: istore_1
     276: iload_1
     277: ifne          295
     280: lload_2
     281: lconst_0
     282: lcmp
     283: ifeq          294
     286: aload         4
     288: lload_2
     289: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     294: return
     295: goto          7

  static {};
    Code:
       0: ldc           #45                 // class reactor/core/publisher/Operators$MultiSubscriptionSubscriber
       2: ldc           #40                 // class org/reactivestreams/Subscription
       4: ldc           #46                 // String missedSubscription
       6: invokestatic  #47                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #38                 // Field MISSED_SUBSCRIPTION:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #45                 // class reactor/core/publisher/Operators$MultiSubscriptionSubscriber
      14: ldc           #48                 // String missedRequested
      16: invokestatic  #49                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      19: putstatic     #34                 // Field MISSED_REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      22: ldc           #45                 // class reactor/core/publisher/Operators$MultiSubscriptionSubscriber
      24: ldc           #50                 // String missedProduced
      26: invokestatic  #49                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      29: putstatic     #30                 // Field MISSED_PRODUCED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      32: ldc           #45                 // class reactor/core/publisher/Operators$MultiSubscriptionSubscriber
      34: ldc           #51                 // String wip
      36: invokestatic  #52                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      39: putstatic     #22                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      42: return
}
