Compiled from "ParallelMergeSequential.java"
final class reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain<T> implements reactor.core.publisher.InnerProducer<T> {
  final reactor.core.publisher.ParallelMergeSequential$MergeSequentialInner<T>[] subscribers;

  final java.util.function.Supplier<java.util.Queue<T>> queueSupplier;

  final reactor.core.CoreSubscriber<? super T> actual;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain, java.lang.Throwable> ERROR;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain> WIP;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain> REQUESTED;

  volatile boolean cancelled;

  volatile int done;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain> DONE;

  volatile java.lang.Throwable error;

  reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain(reactor.core.CoreSubscriber<? super T>, int, int, java.util.function.Supplier<java.util.Queue<T>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload         4
      12: putfield      #3                  // Field queueSupplier:Ljava/util/function/Supplier;
      15: iload_2
      16: anewarray     #4                  // class reactor/core/publisher/ParallelMergeSequential$MergeSequentialInner
      19: astore        5
      21: iconst_0
      22: istore        6
      24: iload         6
      26: iload_2
      27: if_icmpge     50
      30: aload         5
      32: iload         6
      34: new           #4                  // class reactor/core/publisher/ParallelMergeSequential$MergeSequentialInner
      37: dup
      38: aload_0
      39: iload_3
      40: invokespecial #5                  // Method reactor/core/publisher/ParallelMergeSequential$MergeSequentialInner."<init>":(Lreactor/core/publisher/ParallelMergeSequential$MergeSequentialMain;I)V
      43: aastore
      44: iinc          6, 1
      47: goto          24
      50: aload_0
      51: aload         5
      53: putfield      #6                  // Field subscribers:[Lreactor/core/publisher/ParallelMergeSequential$MergeSequentialInner;
      56: getstatic     #7                  // Field DONE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      59: aload_0
      60: iload_2
      61: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
      64: return

  public final reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #9                  // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #10                 // Field cancelled:Z
      11: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #12                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      19: if_acmpne     30
      22: aload_0
      23: getfield      #13                 // Field requested:J
      26: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: areturn
      30: aload_1
      31: getstatic     #15                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      34: if_acmpne     53
      37: aload_0
      38: getfield      #16                 // Field done:I
      41: ifne          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      52: areturn
      53: aload_1
      54: getstatic     #17                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      57: if_acmpne     65
      60: aload_0
      61: getfield      #18                 // Field error:Ljava/lang/Throwable;
      64: areturn
      65: aload_0
      66: aload_1
      67: invokespecial #19                 // InterfaceMethod reactor/core/publisher/InnerProducer.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      70: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscribers:[Lreactor/core/publisher/ParallelMergeSequential$MergeSequentialInner;
       4: invokestatic  #20                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: areturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #21                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          20
       7: getstatic     #22                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #23                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #24                 // Method drain:()V
      20: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field cancelled:Z
       4: ifne          30
       7: aload_0
       8: iconst_1
       9: putfield      #10                 // Field cancelled:Z
      12: aload_0
      13: invokevirtual #25                 // Method cancelAll:()V
      16: getstatic     #26                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      19: aload_0
      20: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      23: ifne          30
      26: aload_0
      27: invokevirtual #28                 // Method cleanup:()V
      30: return

  void cancelAll();
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscribers:[Lreactor/core/publisher/ParallelMergeSequential$MergeSequentialInner;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     31
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #29                 // Method reactor/core/publisher/ParallelMergeSequential$MergeSequentialInner.cancel:()V
      25: iinc          3, 1
      28: goto          10
      31: return

  void cleanup();
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscribers:[Lreactor/core/publisher/ParallelMergeSequential$MergeSequentialInner;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     32
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: aconst_null
      23: putfield      #30                 // Field reactor/core/publisher/ParallelMergeSequential$MergeSequentialInner.queue:Ljava/util/Queue;
      26: iinc          3, 1
      29: goto          10
      32: return

  void onNext(reactor.core.publisher.ParallelMergeSequential$MergeSequentialInner<T>, T);
    Code:
       0: aload_0
       1: getfield      #31                 // Field wip:I
       4: ifne          118
       7: getstatic     #26                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: aload_0
      11: iconst_0
      12: iconst_1
      13: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      16: ifeq          118
      19: aload_0
      20: getfield      #13                 // Field requested:J
      23: lconst_0
      24: lcmp
      25: ifeq          64
      28: aload_0
      29: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      32: aload_2
      33: invokeinterface #33,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      38: aload_0
      39: getfield      #13                 // Field requested:J
      42: ldc2_w        #35                 // long 9223372036854775807l
      45: lcmp
      46: ifeq          57
      49: getstatic     #22                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      52: aload_0
      53: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.decrementAndGet:(Ljava/lang/Object;)J
      56: pop2
      57: aload_1
      58: invokevirtual #38                 // Method reactor/core/publisher/ParallelMergeSequential$MergeSequentialInner.requestOne:()V
      61: goto          107
      64: aload_1
      65: aload_0
      66: getfield      #3                  // Field queueSupplier:Ljava/util/function/Supplier;
      69: invokevirtual #39                 // Method reactor/core/publisher/ParallelMergeSequential$MergeSequentialInner.getQueue:(Ljava/util/function/Supplier;)Ljava/util/Queue;
      72: astore_3
      73: aload_3
      74: aload_2
      75: invokeinterface #40,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      80: ifne          107
      83: aload_0
      84: aload_0
      85: ldc           #42                 // String Queue is full: Reactive Streams source doesn\'t respect backpressure
      87: invokestatic  #43                 // Method reactor/core/Exceptions.failWithOverflow:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      90: aload_2
      91: aload_0
      92: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      95: invokeinterface #44,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     100: invokestatic  #45                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     103: invokevirtual #46                 // Method onError:(Ljava/lang/Throwable;)V
     106: return
     107: getstatic     #26                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     110: aload_0
     111: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
     114: ifne          172
     117: return
     118: aload_1
     119: aload_0
     120: getfield      #3                  // Field queueSupplier:Ljava/util/function/Supplier;
     123: invokevirtual #39                 // Method reactor/core/publisher/ParallelMergeSequential$MergeSequentialInner.getQueue:(Ljava/util/function/Supplier;)Ljava/util/Queue;
     126: astore_3
     127: aload_3
     128: aload_2
     129: invokeinterface #40,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
     134: ifne          161
     137: aload_0
     138: aload_0
     139: ldc           #42                 // String Queue is full: Reactive Streams source doesn\'t respect backpressure
     141: invokestatic  #43                 // Method reactor/core/Exceptions.failWithOverflow:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
     144: aload_2
     145: aload_0
     146: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     149: invokeinterface #44,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     154: invokestatic  #45                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     157: invokevirtual #46                 // Method onError:(Ljava/lang/Throwable;)V
     160: return
     161: getstatic     #26                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     164: aload_0
     165: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
     168: ifeq          172
     171: return
     172: aload_0
     173: invokevirtual #48                 // Method drainLoop:()V
     176: return

  void onError(java.lang.Throwable);
    Code:
       0: getstatic     #49                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: aload_1
       6: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifeq          23
      12: aload_0
      13: invokevirtual #25                 // Method cancelAll:()V
      16: aload_0
      17: invokevirtual #24                 // Method drain:()V
      20: goto          44
      23: aload_0
      24: getfield      #18                 // Field error:Ljava/lang/Throwable;
      27: aload_1
      28: if_acmpeq     44
      31: aload_1
      32: aload_0
      33: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      36: invokeinterface #44,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      41: invokestatic  #51                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      44: return

  void onComplete();
    Code:
       0: getstatic     #7                  // Field DONE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
       7: ifge          11
      10: return
      11: aload_0
      12: invokevirtual #24                 // Method drain:()V
      15: return

  void drain();
    Code:
       0: getstatic     #26                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: aload_0
      12: invokevirtual #48                 // Method drainLoop:()V
      15: return

  void drainLoop();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #6                  // Field subscribers:[Lreactor/core/publisher/ParallelMergeSequential$MergeSequentialInner;
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: aload_0
      11: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      14: astore        4
      16: aload_0
      17: getfield      #13                 // Field requested:J
      20: lstore        5
      22: lconst_0
      23: lstore        7
      25: lload         7
      27: lload         5
      29: lcmp
      30: ifeq          196
      33: aload_0
      34: getfield      #10                 // Field cancelled:Z
      37: ifeq          45
      40: aload_0
      41: invokevirtual #28                 // Method cleanup:()V
      44: return
      45: aload_0
      46: getfield      #18                 // Field error:Ljava/lang/Throwable;
      49: astore        9
      51: aload         9
      53: ifnull        70
      56: aload_0
      57: invokevirtual #28                 // Method cleanup:()V
      60: aload         4
      62: aload         9
      64: invokeinterface #52,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      69: return
      70: aload_0
      71: getfield      #16                 // Field done:I
      74: ifne          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: istore        10
      84: iconst_1
      85: istore        11
      87: iconst_0
      88: istore        12
      90: iload         12
      92: iload_3
      93: if_icmpge     167
      96: aload_2
      97: iload         12
      99: aaload
     100: astore        13
     102: aload         13
     104: getfield      #30                 // Field reactor/core/publisher/ParallelMergeSequential$MergeSequentialInner.queue:Ljava/util/Queue;
     107: astore        14
     109: aload         14
     111: ifnull        161
     114: aload         14
     116: invokeinterface #53,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     121: astore        15
     123: aload         15
     125: ifnull        161
     128: iconst_0
     129: istore        11
     131: aload         4
     133: aload         15
     135: invokeinterface #54,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     140: aload         13
     142: invokevirtual #38                 // Method reactor/core/publisher/ParallelMergeSequential$MergeSequentialInner.requestOne:()V
     145: lload         7
     147: lconst_1
     148: ladd
     149: dup2
     150: lstore        7
     152: lload         5
     154: lcmp
     155: ifne          161
     158: goto          196
     161: iinc          12, 1
     164: goto          90
     167: iload         10
     169: ifeq          185
     172: iload         11
     174: ifeq          185
     177: aload         4
     179: invokeinterface #55,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     184: return
     185: iload         11
     187: ifeq          193
     190: goto          196
     193: goto          25
     196: lload         7
     198: lload         5
     200: lcmp
     201: ifne          325
     204: aload_0
     205: getfield      #10                 // Field cancelled:Z
     208: ifeq          216
     211: aload_0
     212: invokevirtual #28                 // Method cleanup:()V
     215: return
     216: aload_0
     217: getfield      #18                 // Field error:Ljava/lang/Throwable;
     220: astore        9
     222: aload         9
     224: ifnull        241
     227: aload_0
     228: invokevirtual #28                 // Method cleanup:()V
     231: aload         4
     233: aload         9
     235: invokeinterface #52,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     240: return
     241: aload_0
     242: getfield      #16                 // Field done:I
     245: ifne          252
     248: iconst_1
     249: goto          253
     252: iconst_0
     253: istore        10
     255: iconst_1
     256: istore        11
     258: iconst_0
     259: istore        12
     261: iload         12
     263: iload_3
     264: if_icmpge     307
     267: aload_2
     268: iload         12
     270: aaload
     271: astore        13
     273: aload         13
     275: getfield      #30                 // Field reactor/core/publisher/ParallelMergeSequential$MergeSequentialInner.queue:Ljava/util/Queue;
     278: astore        14
     280: aload         14
     282: ifnull        301
     285: aload         14
     287: invokeinterface #56,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
     292: ifne          301
     295: iconst_0
     296: istore        11
     298: goto          307
     301: iinc          12, 1
     304: goto          261
     307: iload         10
     309: ifeq          325
     312: iload         11
     314: ifeq          325
     317: aload         4
     319: invokeinterface #55,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     324: return
     325: lload         7
     327: lconst_0
     328: lcmp
     329: ifeq          352
     332: lload         5
     334: ldc2_w        #35                 // long 9223372036854775807l
     337: lcmp
     338: ifeq          352
     341: getstatic     #22                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     344: aload_0
     345: lload         7
     347: lneg
     348: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
     351: pop2
     352: aload_0
     353: getfield      #31                 // Field wip:I
     356: istore        9
     358: iload         9
     360: iload_1
     361: if_icmpne     381
     364: getstatic     #26                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     367: aload_0
     368: iload_1
     369: ineg
     370: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     373: istore_1
     374: iload_1
     375: ifne          384
     378: goto          387
     381: iload         9
     383: istore_1
     384: goto          16
     387: return

  static {};
    Code:
       0: ldc           #59                 // class reactor/core/publisher/ParallelMergeSequential$MergeSequentialMain
       2: ldc           #60                 // class java/lang/Throwable
       4: ldc           #61                 // String error
       6: invokestatic  #62                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #49                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #59                 // class reactor/core/publisher/ParallelMergeSequential$MergeSequentialMain
      14: ldc           #63                 // String wip
      16: invokestatic  #64                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      19: putstatic     #26                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      22: ldc           #59                 // class reactor/core/publisher/ParallelMergeSequential$MergeSequentialMain
      24: ldc           #65                 // String requested
      26: invokestatic  #66                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      29: putstatic     #22                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      32: ldc           #59                 // class reactor/core/publisher/ParallelMergeSequential$MergeSequentialMain
      34: ldc           #67                 // String done
      36: invokestatic  #64                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      39: putstatic     #7                  // Field DONE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      42: return
}
