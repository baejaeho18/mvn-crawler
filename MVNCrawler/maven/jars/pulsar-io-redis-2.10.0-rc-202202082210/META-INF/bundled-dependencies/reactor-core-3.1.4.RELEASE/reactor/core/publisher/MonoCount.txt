Compiled from "MonoCount.java"
final class reactor.core.publisher.MonoCount<T> extends reactor.core.publisher.MonoFromFluxOperator<T, java.lang.Long> implements reactor.core.Fuseable {
  reactor.core.publisher.MonoCount(reactor.core.publisher.Flux<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoFromFluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: return

  public void subscribe(reactor.core.CoreSubscriber<? super java.lang.Long>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lreactor/core/publisher/Flux;
       4: new           #3                  // class reactor/core/publisher/MonoCount$CountSubscriber
       7: dup
       8: aload_1
       9: invokespecial #4                  // Method reactor/core/publisher/MonoCount$CountSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
      12: invokevirtual #5                  // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      15: return
}
