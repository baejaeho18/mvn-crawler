Compiled from "ParallelFluxHide.java"
final class reactor.core.publisher.ParallelFluxHide<T> extends reactor.core.publisher.ParallelFlux<T> implements reactor.core.Scannable {
  final reactor.core.publisher.ParallelFlux<T> source;

  reactor.core.publisher.ParallelFluxHide(reactor.core.publisher.ParallelFlux<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/ParallelFlux."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lreactor/core/publisher/ParallelFlux;
       9: return

  public int getPrefetch();
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lreactor/core/publisher/ParallelFlux;
       4: invokevirtual #3                  // Method reactor/core/publisher/ParallelFlux.getPrefetch:()I
       7: ireturn

  public int parallelism();
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lreactor/core/publisher/ParallelFlux;
       4: invokevirtual #4                  // Method reactor/core/publisher/ParallelFlux.parallelism:()I
       7: ireturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #2                  // Field source:Lreactor/core/publisher/ParallelFlux;
      11: areturn
      12: aload_1
      13: getstatic     #6                  // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: invokevirtual #7                  // Method getPrefetch:()I
      23: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: areturn
      27: aconst_null
      28: areturn

  public void subscribe(reactor.core.CoreSubscriber<? super T>[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method validate:([Lorg/reactivestreams/Subscriber;)Z
       5: ifne          9
       8: return
       9: aload_1
      10: arraylength
      11: istore_2
      12: iload_2
      13: anewarray     #10                 // class reactor/core/CoreSubscriber
      16: astore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_2
      23: if_icmpge     47
      26: aload_3
      27: iload         4
      29: new           #11                 // class reactor/core/publisher/FluxHide$HideSubscriber
      32: dup
      33: aload_1
      34: iload         4
      36: aaload
      37: invokespecial #12                 // Method reactor/core/publisher/FluxHide$HideSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
      40: aastore
      41: iinc          4, 1
      44: goto          20
      47: aload_0
      48: getfield      #2                  // Field source:Lreactor/core/publisher/ParallelFlux;
      51: aload_3
      52: invokevirtual #13                 // Method reactor/core/publisher/ParallelFlux.subscribe:([Lreactor/core/CoreSubscriber;)V
      55: return
}
