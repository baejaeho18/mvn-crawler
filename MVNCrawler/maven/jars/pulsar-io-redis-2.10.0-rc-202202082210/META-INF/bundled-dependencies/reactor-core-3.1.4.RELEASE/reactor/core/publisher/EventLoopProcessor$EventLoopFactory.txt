Compiled from "EventLoopProcessor.java"
final class reactor.core.publisher.EventLoopProcessor$EventLoopFactory implements java.util.concurrent.ThreadFactory, java.util.function.Supplier<java.lang.String> {
  static final java.util.concurrent.atomic.AtomicInteger COUNT;

  final java.lang.String name;

  final boolean daemon;

  reactor.core.publisher.EventLoopProcessor$EventLoopFactory(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field daemon:Z
      14: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: new           #4                  // class java/lang/Thread
       3: dup
       4: aload_1
       5: new           #5                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      12: aload_0
      13: getfield      #2                  // Field name:Ljava/lang/String;
      16: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #8                  // String -
      21: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: getstatic     #9                  // Field COUNT:Ljava/util/concurrent/atomic/AtomicInteger;
      27: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      30: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #13                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      39: astore_2
      40: aload_2
      41: aload_0
      42: getfield      #3                  // Field daemon:Z
      45: invokevirtual #14                 // Method java/lang/Thread.setDaemon:(Z)V
      48: aload_2
      49: areturn

  public java.lang.String get();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method get:()Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #16                 // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       7: putstatic     #9                  // Field COUNT:Ljava/util/concurrent/atomic/AtomicInteger;
      10: return
}
