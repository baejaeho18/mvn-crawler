Compiled from "FluxRetryWhen.java"
final class reactor.core.publisher.FluxRetryWhen<T> extends reactor.core.publisher.FluxOperator<T, T> {
  final java.util.function.Function<? super reactor.core.publisher.Flux<java.lang.Throwable>, ? extends org.reactivestreams.Publisher<?>> whenSourceFactory;

  reactor.core.publisher.FluxRetryWhen(reactor.core.publisher.Flux<? extends T>, java.util.function.Function<? super reactor.core.publisher.Flux<java.lang.Throwable>, ? extends org.reactivestreams.Publisher<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: aload_0
       6: aload_2
       7: ldc           #2                  // String whenSourceFactory
       9: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/util/function/Function
      15: putfield      #5                  // Field whenSourceFactory:Ljava/util/function/Function;
      18: return

  static <T> void subscribe(reactor.core.CoreSubscriber<? super T>, java.util.function.Function<? super reactor.core.publisher.Flux<java.lang.Throwable>, ? extends org.reactivestreams.Publisher<?>>, org.reactivestreams.Publisher<? extends T>);
    Code:
       0: new           #6                  // class reactor/core/publisher/FluxRetryWhen$RetryWhenOtherSubscriber
       3: dup
       4: invokespecial #7                  // Method reactor/core/publisher/FluxRetryWhen$RetryWhenOtherSubscriber."<init>":()V
       7: astore_3
       8: aload_3
       9: getfield      #8                  // Field reactor/core/publisher/FluxRetryWhen$RetryWhenOtherSubscriber.completionSignal:Lreactor/core/publisher/DirectProcessor;
      12: invokestatic  #9                  // Method reactor/core/publisher/Operators.serialize:(Lreactor/core/CoreSubscriber;)Lreactor/core/CoreSubscriber;
      15: astore        4
      17: aload         4
      19: invokestatic  #10                 // Method reactor/core/publisher/Operators.emptySubscription:()Lorg/reactivestreams/Subscription;
      22: invokeinterface #11,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      27: aload_0
      28: invokestatic  #9                  // Method reactor/core/publisher/Operators.serialize:(Lreactor/core/CoreSubscriber;)Lreactor/core/CoreSubscriber;
      31: astore        5
      33: new           #12                 // class reactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber
      36: dup
      37: aload         5
      39: aload         4
      41: aload_2
      42: invokespecial #13                 // Method reactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber."<init>":(Lreactor/core/CoreSubscriber;Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;)V
      45: astore        6
      47: aload_3
      48: aload         6
      50: putfield      #14                 // Field reactor/core/publisher/FluxRetryWhen$RetryWhenOtherSubscriber.main:Lreactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber;
      53: aload         5
      55: aload         6
      57: invokeinterface #15,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      62: aload_1
      63: aload_3
      64: invokeinterface #16,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      69: ldc           #17                 // String The whenSourceFactory returned a null Publisher
      71: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      74: checkcast     #18                 // class org/reactivestreams/Publisher
      77: astore        7
      79: goto          102
      82: astore        8
      84: aload_0
      85: aload         8
      87: aload_0
      88: invokeinterface #20,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      93: invokestatic  #21                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      96: invokeinterface #22,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     101: return
     102: aload         7
     104: aload_3
     105: invokeinterface #23,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     110: aload         6
     112: getfield      #24                 // Field reactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber.cancelled:Z
     115: ifne          126
     118: aload_2
     119: aload         6
     121: invokeinterface #23,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     126: return
    Exception table:
       from    to  target type
          62    79    82   Class java/lang/Throwable

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field whenSourceFactory:Ljava/util/function/Function;
       5: aload_0
       6: getfield      #25                 // Field source:Lreactor/core/publisher/Flux;
       9: invokestatic  #26                 // Method subscribe:(Lreactor/core/CoreSubscriber;Ljava/util/function/Function;Lorg/reactivestreams/Publisher;)V
      12: return
}
