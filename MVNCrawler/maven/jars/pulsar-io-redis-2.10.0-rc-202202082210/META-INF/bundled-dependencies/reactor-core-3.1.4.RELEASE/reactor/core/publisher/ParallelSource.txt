Compiled from "ParallelSource.java"
final class reactor.core.publisher.ParallelSource<T> extends reactor.core.publisher.ParallelFlux<T> implements reactor.core.Scannable {
  final org.reactivestreams.Publisher<? extends T> source;

  final int parallelism;

  final int prefetch;

  final java.util.function.Supplier<java.util.Queue<T>> queueSupplier;

  reactor.core.publisher.ParallelSource(org.reactivestreams.Publisher<? extends T>, int, int, java.util.function.Supplier<java.util.Queue<T>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/ParallelFlux."<init>":()V
       4: iload_2
       5: ifgt          35
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: new           #3                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #5                  // String parallelism > 0 required but it was
      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_2
      25: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: iload_3
      36: ifgt          66
      39: new           #2                  // class java/lang/IllegalArgumentException
      42: dup
      43: new           #3                  // class java/lang/StringBuilder
      46: dup
      47: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #10                 // String prefetch > 0 required but it was
      52: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: iload_3
      56: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: aload_1
      68: putfield      #11                 // Field source:Lorg/reactivestreams/Publisher;
      71: aload_0
      72: iload_2
      73: putfield      #12                 // Field parallelism:I
      76: aload_0
      77: iload_3
      78: putfield      #13                 // Field prefetch:I
      81: aload_0
      82: aload         4
      84: putfield      #14                 // Field queueSupplier:Ljava/util/function/Supplier;
      87: return

  public int getPrefetch();
    Code:
       0: aload_0
       1: getfield      #13                 // Field prefetch:I
       4: ireturn

  public int parallelism();
    Code:
       0: aload_0
       1: getfield      #12                 // Field parallelism:I
       4: ireturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #15                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #11                 // Field source:Lorg/reactivestreams/Publisher;
      11: areturn
      12: aload_1
      13: getstatic     #16                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: invokevirtual #17                 // Method getPrefetch:()I
      23: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: areturn
      27: aconst_null
      28: areturn

  public void subscribe(reactor.core.CoreSubscriber<? super T>[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method validate:([Lorg/reactivestreams/Subscriber;)Z
       5: ifne          9
       8: return
       9: aload_0
      10: getfield      #11                 // Field source:Lorg/reactivestreams/Publisher;
      13: new           #20                 // class reactor/core/publisher/ParallelSource$ParallelSourceMain
      16: dup
      17: aload_1
      18: aload_0
      19: getfield      #13                 // Field prefetch:I
      22: aload_0
      23: getfield      #14                 // Field queueSupplier:Ljava/util/function/Supplier;
      26: invokespecial #21                 // Method reactor/core/publisher/ParallelSource$ParallelSourceMain."<init>":([Lreactor/core/CoreSubscriber;ILjava/util/function/Supplier;)V
      29: invokeinterface #22,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      34: return
}
