Compiled from "FluxIndexFuseable.java"
final class reactor.core.publisher.FluxIndexFuseable$IndexFuseableSubscriber<I, T> implements reactor.core.publisher.InnerOperator<T, I>, reactor.core.Fuseable$QueueSubscription<I> {
  final reactor.core.CoreSubscriber<? super I> actual;

  final java.util.function.BiFunction<? super java.lang.Long, ? super T, ? extends I> indexMapper;

  boolean done;

  long index;

  reactor.core.Fuseable$QueueSubscription<T> s;

  int sourceMode;

  reactor.core.publisher.FluxIndexFuseable$IndexFuseableSubscriber(reactor.core.CoreSubscriber<? super I>, java.util.function.BiFunction<? super java.lang.Long, ? super T, ? extends I>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field indexMapper:Ljava/util/function/BiFunction;
      14: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: aload_1
       5: invokestatic  #6                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          29
      11: aload_0
      12: aload_1
      13: checkcast     #7                  // class reactor/core/Fuseable$QueueSubscription
      16: putfield      #5                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      19: aload_0
      20: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      23: aload_0
      24: invokeinterface #8,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      29: return

  public I poll();
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #9,  1            // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
       9: astore_1
      10: aload_1
      11: ifnull        76
      14: aload_0
      15: getfield      #10                 // Field index:J
      18: lstore_2
      19: aload_0
      20: getfield      #4                  // Field indexMapper:Ljava/util/function/BiFunction;
      23: lload_2
      24: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      27: aload_1
      28: invokeinterface #12,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: new           #13                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #15                 // String indexMapper returned a null value at raw index
      42: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: lload_2
      46: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      49: ldc           #18                 // String  for value
      51: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      64: astore        4
      66: aload_0
      67: lload_2
      68: lconst_1
      69: ladd
      70: putfield      #10                 // Field index:J
      73: aload         4
      75: areturn
      76: aconst_null
      77: areturn

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #22                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     21
       8: aload_0
       9: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      12: aconst_null
      13: invokeinterface #23,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      18: goto          140
      21: aload_0
      22: getfield      #24                 // Field done:Z
      25: ifeq          42
      28: aload_1
      29: aload_0
      30: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      33: invokeinterface #25,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      38: invokestatic  #26                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      41: return
      42: aload_0
      43: getfield      #10                 // Field index:J
      46: lstore_2
      47: aload_0
      48: getfield      #4                  // Field indexMapper:Ljava/util/function/BiFunction;
      51: lload_2
      52: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      55: aload_1
      56: invokeinterface #12,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: new           #13                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #15                 // String indexMapper returned a null value at raw index
      70: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: lload_2
      74: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      77: ldc           #18                 // String  for value
      79: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_1
      83: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      92: astore        4
      94: aload_0
      95: lload_2
      96: lconst_1
      97: ladd
      98: putfield      #10                 // Field index:J
     101: aload_0
     102: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     105: aload         4
     107: invokeinterface #23,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     112: goto          140
     115: astore        4
     117: aload_0
     118: aload_0
     119: getfield      #5                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
     122: aload         4
     124: aload_1
     125: aload_0
     126: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     129: invokeinterface #25,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     134: invokestatic  #28                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     137: invokevirtual #29                 // Method onError:(Ljava/lang/Throwable;)V
     140: return
    Exception table:
       from    to  target type
          47   112   115   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #24                 // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #25,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #30                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #24                 // Field done:Z
      26: aload_0
      27: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: invokeinterface #31,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #24                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #24                 // Field done:Z
      13: aload_0
      14: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      17: invokeinterface #32,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      22: return

  public reactor.core.CoreSubscriber<? super I> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: lload_1
       5: invokeinterface #33,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #34,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
       9: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #35,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
       9: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #36,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
       9: return

  public int requestFusion(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field indexMapper:Ljava/util/function/BiFunction;
       4: getstatic     #37                 // Field reactor/core/publisher/Flux.TUPLE2_BIFUNCTION:Ljava/util/function/BiFunction;
       7: if_acmpeq     18
      10: iload_1
      11: iconst_4
      12: iand
      13: ifeq          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: getfield      #5                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      22: iload_1
      23: invokeinterface #38,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      28: istore_2
      29: aload_0
      30: iload_2
      31: putfield      #22                 // Field sourceMode:I
      34: iload_2
      35: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #39,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
       9: ireturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #40                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #5                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      11: areturn
      12: aload_1
      13: getstatic     #41                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #24                 // Field done:Z
      23: invokestatic  #42                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #43                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn
}
