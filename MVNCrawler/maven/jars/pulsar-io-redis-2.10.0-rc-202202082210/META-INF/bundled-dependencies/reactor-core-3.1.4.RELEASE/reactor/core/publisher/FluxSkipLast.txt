Compiled from "FluxSkipLast.java"
final class reactor.core.publisher.FluxSkipLast<T> extends reactor.core.publisher.FluxOperator<T, T> {
  final int n;

  reactor.core.publisher.FluxSkipLast(reactor.core.publisher.Flux<? extends T>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: iload_2
       6: ifge          36
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: new           #3                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #5                  // String n >= 0 required but it was
      22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_2
      26: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_2
      38: putfield      #10                 // Field n:I
      41: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field source:Lreactor/core/publisher/Flux;
       4: new           #12                 // class reactor/core/publisher/FluxSkipLast$SkipLastSubscriber
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #10                 // Field n:I
      13: invokespecial #13                 // Method reactor/core/publisher/FluxSkipLast$SkipLastSubscriber."<init>":(Lreactor/core/CoreSubscriber;I)V
      16: invokevirtual #14                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      19: return
}
