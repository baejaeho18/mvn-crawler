Compiled from "FluxTakeUntilOther.java"
final class reactor.core.publisher.FluxTakeUntilOther$TakeUntilMainSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  volatile org.reactivestreams.Subscription main;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxTakeUntilOther$TakeUntilMainSubscriber, org.reactivestreams.Subscription> MAIN;

  volatile org.reactivestreams.Subscription other;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxTakeUntilOther$TakeUntilMainSubscriber, org.reactivestreams.Subscription> OTHER;

  reactor.core.publisher.FluxTakeUntilOther$TakeUntilMainSubscriber(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method reactor/core/publisher/Operators.serialize:(Lreactor/core/CoreSubscriber;)Lreactor/core/CoreSubscriber;
       9: putfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      12: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #4                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #5                  // Field main:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #6                  // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     38
      19: aload_0
      20: getfield      #5                  // Field main:Lorg/reactivestreams/Subscription;
      23: invokestatic  #7                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      26: if_acmpne     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      37: areturn
      38: aload_0
      39: aload_1
      40: invokespecial #9                  // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      43: areturn

  public final reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #10                 // Field other:Lorg/reactivestreams/Subscription;
       4: invokestatic  #11                 // InterfaceMethod reactor/core/Scannable.from:(Ljava/lang/Object;)Lreactor/core/Scannable;
       7: invokestatic  #12                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      10: areturn

  void setOther(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #13                 // Field OTHER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: aload_1
       6: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifne          31
      12: aload_1
      13: invokeinterface #15,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      18: aload_0
      19: getfield      #10                 // Field other:Lorg/reactivestreams/Subscription;
      22: invokestatic  #7                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      25: if_acmpeq     31
      28: invokestatic  #16                 // Method reactor/core/publisher/Operators.reportSubscriptionSet:()V
      31: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field main:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #17,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  void cancelMain();
    Code:
       0: aload_0
       1: getfield      #5                  // Field main:Lorg/reactivestreams/Subscription;
       4: astore_1
       5: aload_1
       6: invokestatic  #7                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
       9: if_acmpeq     43
      12: getstatic     #18                 // Field MAIN:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: invokestatic  #7                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      19: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #20                 // class org/reactivestreams/Subscription
      25: astore_1
      26: aload_1
      27: ifnull        43
      30: aload_1
      31: invokestatic  #7                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      34: if_acmpeq     43
      37: aload_1
      38: invokeinterface #15,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      43: return

  void cancelOther();
    Code:
       0: aload_0
       1: getfield      #10                 // Field other:Lorg/reactivestreams/Subscription;
       4: astore_1
       5: aload_1
       6: invokestatic  #7                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
       9: if_acmpeq     43
      12: getstatic     #13                 // Field OTHER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: invokestatic  #7                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      19: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #20                 // class org/reactivestreams/Subscription
      25: astore_1
      26: aload_1
      27: ifnull        43
      30: aload_1
      31: invokestatic  #7                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      34: if_acmpeq     43
      37: aload_1
      38: invokeinterface #15,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      43: return

  public void cancel();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method cancelMain:()V
       4: aload_0
       5: invokevirtual #22                 // Method cancelOther:()V
       8: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #18                 // Field MAIN:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: aload_1
       6: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifne          34
      12: aload_1
      13: invokeinterface #15,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      18: aload_0
      19: getfield      #5                  // Field main:Lorg/reactivestreams/Subscription;
      22: invokestatic  #7                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      25: if_acmpeq     44
      28: invokestatic  #16                 // Method reactor/core/publisher/Operators.reportSubscriptionSet:()V
      31: goto          44
      34: aload_0
      35: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      38: aload_0
      39: invokeinterface #23,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      44: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field main:Lorg/reactivestreams/Subscription;
       4: ifnonnull     30
       7: getstatic     #18                 // Field MAIN:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      10: aload_0
      11: aconst_null
      12: invokestatic  #7                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      15: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ifeq          30
      21: aload_0
      22: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      25: aload_1
      26: invokestatic  #25                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      29: return
      30: aload_0
      31: invokevirtual #26                 // Method cancel:()V
      34: aload_0
      35: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      38: aload_1
      39: invokeinterface #27,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      44: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #5                  // Field main:Lorg/reactivestreams/Subscription;
       4: ifnonnull     33
       7: getstatic     #18                 // Field MAIN:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      10: aload_0
      11: aconst_null
      12: invokestatic  #7                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      15: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ifeq          33
      21: aload_0
      22: invokevirtual #22                 // Method cancelOther:()V
      25: aload_0
      26: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      29: invokestatic  #28                 // Method reactor/core/publisher/Operators.complete:(Lorg/reactivestreams/Subscriber;)V
      32: return
      33: aload_0
      34: invokevirtual #26                 // Method cancel:()V
      37: aload_0
      38: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      41: invokeinterface #29,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      46: return

  static {};
    Code:
       0: ldc           #30                 // class reactor/core/publisher/FluxTakeUntilOther$TakeUntilMainSubscriber
       2: ldc           #20                 // class org/reactivestreams/Subscription
       4: ldc           #31                 // String main
       6: invokestatic  #32                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #18                 // Field MAIN:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #30                 // class reactor/core/publisher/FluxTakeUntilOther$TakeUntilMainSubscriber
      14: ldc           #20                 // class org/reactivestreams/Subscription
      16: ldc           #33                 // String other
      18: invokestatic  #32                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      21: putstatic     #13                 // Field OTHER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      24: return
}
