Compiled from "Tuple2.java"
public class reactor.util.function.Tuple2<T1, T2> implements java.lang.Iterable<java.lang.Object>, java.io.Serializable {
  private static final long serialVersionUID;

  final T1 t1;

  final T2 t2;

  reactor.util.function.Tuple2(T1, T2);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String t1
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: putfield      #4                  // Field t1:Ljava/lang/Object;
      14: aload_0
      15: aload_2
      16: ldc           #5                  // String t2
      18: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: putfield      #6                  // Field t2:Ljava/lang/Object;
      24: return

  public T1 getT1();
    Code:
       0: aload_0
       1: getfield      #4                  // Field t1:Ljava/lang/Object;
       4: areturn

  public T2 getT2();
    Code:
       0: aload_0
       1: getfield      #6                  // Field t2:Ljava/lang/Object;
       4: areturn

  public java.lang.Object get(int);
    Code:
       0: iload_1
       1: lookupswitch  { // 2
                     0: 28
                     1: 33
               default: 38
          }
      28: aload_0
      29: getfield      #4                  // Field t1:Ljava/lang/Object;
      32: areturn
      33: aload_0
      34: getfield      #6                  // Field t2:Ljava/lang/Object;
      37: areturn
      38: aconst_null
      39: areturn

  public java.util.List<java.lang.Object> toList();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method toArray:()[Ljava/lang/Object;
       4: invokestatic  #8                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: areturn

  public java.lang.Object[] toArray();
    Code:
       0: iconst_2
       1: anewarray     #9                  // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #4                  // Field t1:Ljava/lang/Object;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #6                  // Field t2:Ljava/lang/Object;
      17: aastore
      18: areturn

  public java.util.Iterator<java.lang.Object> iterator();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method toList:()Ljava/util/List;
       4: invokestatic  #11                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #14                 // class reactor/util/function/Tuple2
      28: astore_2
      29: aload_0
      30: getfield      #4                  // Field t1:Ljava/lang/Object;
      33: aload_2
      34: getfield      #4                  // Field t1:Ljava/lang/Object;
      37: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      40: ifeq          61
      43: aload_0
      44: getfield      #6                  // Field t2:Ljava/lang/Object;
      47: aload_2
      48: getfield      #6                  // Field t2:Ljava/lang/Object;
      51: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method size:()I
       4: istore_1
       5: bipush        31
       7: iload_1
       8: imul
       9: aload_0
      10: getfield      #4                  // Field t1:Ljava/lang/Object;
      13: invokevirtual #17                 // Method java/lang/Object.hashCode:()I
      16: iadd
      17: istore_1
      18: bipush        31
      20: iload_1
      21: imul
      22: aload_0
      23: getfield      #6                  // Field t2:Ljava/lang/Object;
      26: invokevirtual #17                 // Method java/lang/Object.hashCode:()I
      29: iadd
      30: istore_1
      31: iload_1
      32: ireturn

  public int size();
    Code:
       0: iconst_2
       1: ireturn

  public final java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method toArray:()[Ljava/lang/Object;
       4: invokestatic  #18                 // Method reactor/util/function/Tuples.tupleStringRepresentation:([Ljava/lang/Object;)Ljava/lang/StringBuilder;
       7: iconst_0
       8: bipush        91
      10: invokevirtual #19                 // Method java/lang/StringBuilder.insert:(IC)Ljava/lang/StringBuilder;
      13: bipush        93
      15: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      18: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: areturn
}
