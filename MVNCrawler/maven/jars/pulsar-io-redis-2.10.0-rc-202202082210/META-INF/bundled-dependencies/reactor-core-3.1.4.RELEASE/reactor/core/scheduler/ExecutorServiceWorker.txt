Compiled from "ExecutorServiceWorker.java"
final class reactor.core.scheduler.ExecutorServiceWorker implements reactor.core.scheduler.Scheduler$Worker,reactor.core.Disposable,reactor.core.Scannable {
  final java.util.concurrent.ScheduledExecutorService exec;

  final reactor.core.Disposable$Composite tasks;

  reactor.core.scheduler.ExecutorServiceWorker(java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field exec:Ljava/util/concurrent/ScheduledExecutorService;
       9: aload_0
      10: invokestatic  #3                  // Method reactor/core/Disposables.composite:()Lreactor/core/Disposable$Composite;
      13: putfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
      16: return

  public reactor.core.Disposable schedule(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: getfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
       8: aload_1
       9: lconst_0
      10: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      13: invokestatic  #6                  // Method reactor/core/scheduler/Schedulers.workerSchedule:(Ljava/util/concurrent/ScheduledExecutorService;Lreactor/core/Disposable$Composite;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
      16: areturn

  public reactor.core.Disposable schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: getfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
       8: aload_1
       9: lload_2
      10: aload         4
      12: invokestatic  #6                  // Method reactor/core/scheduler/Schedulers.workerSchedule:(Ljava/util/concurrent/ScheduledExecutorService;Lreactor/core/Disposable$Composite;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
      15: areturn

  public reactor.core.Disposable schedulePeriodically(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: getfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
       8: aload_1
       9: lload_2
      10: lload         4
      12: aload         6
      14: invokestatic  #7                  // Method reactor/core/scheduler/Schedulers.workerSchedulePeriodically:(Ljava/util/concurrent/ScheduledExecutorService;Lreactor/core/Disposable$Composite;Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
      17: areturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
       4: invokeinterface #8,  1            // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
       9: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
       4: invokeinterface #9,  1            // InterfaceMethod reactor/core/Disposable$Composite.isDisposed:()Z
       9: ireturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #10                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     20
       7: aload_0
       8: getfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
      11: invokeinterface #11,  1           // InterfaceMethod reactor/core/Disposable$Composite.size:()I
      16: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: areturn
      20: aload_1
      21: getstatic     #13                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      24: if_acmpeq     34
      27: aload_1
      28: getstatic     #14                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      31: if_acmpne     42
      34: aload_0
      35: invokevirtual #15                 // Method isDisposed:()Z
      38: invokestatic  #16                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: areturn
      42: aload_1
      43: getstatic     #17                 // Field reactor/core/Scannable$Attr.NAME:Lreactor/core/Scannable$Attr;
      46: if_acmpne     52
      49: ldc           #18                 // String ExecutorServiceWorker
      51: areturn
      52: aload_0
      53: getfield      #2                  // Field exec:Ljava/util/concurrent/ScheduledExecutorService;
      56: aload_1
      57: invokestatic  #19                 // Method reactor/core/scheduler/Schedulers.scanExecutor:(Ljava/util/concurrent/Executor;Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      60: areturn
}
