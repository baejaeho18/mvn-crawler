Compiled from "FluxMapSignal.java"
final class reactor.core.publisher.FluxMapSignal<T, R> extends reactor.core.publisher.FluxOperator<T, R> {
  final java.util.function.Function<? super T, ? extends R> mapperNext;

  final java.util.function.Function<? super java.lang.Throwable, ? extends R> mapperError;

  final java.util.function.Supplier<? extends R> mapperComplete;

  reactor.core.publisher.FluxMapSignal(reactor.core.publisher.Flux<? extends T>, java.util.function.Function<? super T, ? extends R>, java.util.function.Function<? super java.lang.Throwable, ? extends R>, java.util.function.Supplier<? extends R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: aload_2
       6: ifnonnull     28
       9: aload_3
      10: ifnonnull     28
      13: aload         4
      15: ifnonnull     28
      18: new           #2                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #3                  // String Map Signal needs at least one valid mapper
      24: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_2
      30: putfield      #5                  // Field mapperNext:Ljava/util/function/Function;
      33: aload_0
      34: aload_3
      35: putfield      #6                  // Field mapperError:Ljava/util/function/Function;
      38: aload_0
      39: aload         4
      41: putfield      #7                  // Field mapperComplete:Ljava/util/function/Supplier;
      44: return

  public void subscribe(reactor.core.CoreSubscriber<? super R>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field source:Lreactor/core/publisher/Flux;
       4: new           #9                  // class reactor/core/publisher/FluxMapSignal$FluxMapSignalSubscriber
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #5                  // Field mapperNext:Ljava/util/function/Function;
      13: aload_0
      14: getfield      #6                  // Field mapperError:Ljava/util/function/Function;
      17: aload_0
      18: getfield      #7                  // Field mapperComplete:Ljava/util/function/Supplier;
      21: invokespecial #10                 // Method reactor/core/publisher/FluxMapSignal$FluxMapSignalSubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)V
      24: invokevirtual #11                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      27: return
}
