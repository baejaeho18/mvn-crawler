Compiled from "MonoJust.java"
final class reactor.core.publisher.MonoJust<T> extends reactor.core.publisher.Mono<T> implements reactor.core.Fuseable$ScalarCallable<T>, reactor.core.Fuseable {
  final T value;

  reactor.core.publisher.MonoJust(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Mono."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String value
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: putfield      #4                  // Field value:Ljava/lang/Object;
      14: return

  public T call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/Object;
       4: areturn

  public T block(java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/Object;
       4: areturn

  public T block();
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/Object;
       4: areturn

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_1
       1: aload_1
       2: aload_0
       3: getfield      #4                  // Field value:Ljava/lang/Object;
       6: invokestatic  #5                  // Method reactor/core/publisher/Operators.scalarSubscription:(Lreactor/core/CoreSubscriber;Ljava/lang/Object;)Lorg/reactivestreams/Subscription;
       9: invokeinterface #6,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      14: return
}
