Compiled from "FluxCombineLatest.java"
final class reactor.core.publisher.FluxCombineLatest$CombineLatestCoordinator<T, R> implements reactor.core.Fuseable$QueueSubscription<R>, reactor.core.publisher.InnerProducer<R> {
  final java.util.function.Function<java.lang.Object[], R> combiner;

  final reactor.core.publisher.FluxCombineLatest$CombineLatestInner<T>[] subscribers;

  final java.util.Queue<reactor.core.publisher.FluxCombineLatest$SourceAndArray> queue;

  final java.lang.Object[] latest;

  final reactor.core.CoreSubscriber<? super R> actual;

  boolean outputFused;

  int nonEmptySources;

  int completedSources;

  volatile boolean cancelled;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxCombineLatest$CombineLatestCoordinator> REQUESTED;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxCombineLatest$CombineLatestCoordinator> WIP;

  volatile boolean done;

  volatile java.lang.Throwable error;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxCombineLatest$CombineLatestCoordinator, java.lang.Throwable> ERROR;

  reactor.core.publisher.FluxCombineLatest$CombineLatestCoordinator(reactor.core.CoreSubscriber<? super R>, java.util.function.Function<java.lang.Object[], R>, int, java.util.Queue<reactor.core.publisher.FluxCombineLatest$SourceAndArray>, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field combiner:Ljava/util/function/Function;
      14: iload_3
      15: anewarray     #5                  // class reactor/core/publisher/FluxCombineLatest$CombineLatestInner
      18: astore        6
      20: iconst_0
      21: istore        7
      23: iload         7
      25: iload_3
      26: if_icmpge     52
      29: aload         6
      31: iload         7
      33: new           #5                  // class reactor/core/publisher/FluxCombineLatest$CombineLatestInner
      36: dup
      37: aload_0
      38: iload         7
      40: iload         5
      42: invokespecial #6                  // Method reactor/core/publisher/FluxCombineLatest$CombineLatestInner."<init>":(Lreactor/core/publisher/FluxCombineLatest$CombineLatestCoordinator;II)V
      45: aastore
      46: iinc          7, 1
      49: goto          23
      52: aload_0
      53: aload         6
      55: putfield      #7                  // Field subscribers:[Lreactor/core/publisher/FluxCombineLatest$CombineLatestInner;
      58: aload_0
      59: iload_3
      60: anewarray     #8                  // class java/lang/Object
      63: putfield      #9                  // Field latest:[Ljava/lang/Object;
      66: aload_0
      67: aload         4
      69: putfield      #10                 // Field queue:Ljava/util/Queue;
      72: return

  public final reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #11                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          20
       7: getstatic     #12                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #13                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #14                 // Method drain:()V
      20: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #15                 // Field cancelled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #15                 // Field cancelled:Z
      13: aload_0
      14: invokevirtual #16                 // Method cancelAll:()V
      17: getstatic     #17                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: aload_0
      21: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      24: ifne          36
      27: aload_0
      28: getfield      #10                 // Field queue:Ljava/util/Queue;
      31: invokeinterface #19,  1           // InterfaceMethod java/util/Queue.clear:()V
      36: return

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:[Lreactor/core/publisher/FluxCombineLatest$CombineLatestInner;
       4: invokestatic  #20                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #21                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #22                 // Field done:Z
      11: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #24                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      19: if_acmpne     30
      22: aload_0
      23: getfield      #15                 // Field cancelled:Z
      26: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: areturn
      30: aload_1
      31: getstatic     #25                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      34: if_acmpne     42
      37: aload_0
      38: getfield      #26                 // Field error:Ljava/lang/Throwable;
      41: areturn
      42: aload_1
      43: getstatic     #27                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      46: if_acmpne     57
      49: aload_0
      50: getfield      #28                 // Field requested:J
      53: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      56: areturn
      57: aload_0
      58: aload_1
      59: invokespecial #30                 // InterfaceMethod reactor/core/publisher/InnerProducer.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      62: areturn

  void subscribe(org.reactivestreams.Publisher<? extends T>[], int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:[Lreactor/core/publisher/FluxCombineLatest$CombineLatestInner;
       4: astore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_2
      11: if_icmpge     48
      14: aload_0
      15: getfield      #22                 // Field done:Z
      18: ifne          28
      21: aload_0
      22: getfield      #15                 // Field cancelled:Z
      25: ifeq          29
      28: return
      29: aload_1
      30: iload         4
      32: aaload
      33: aload_3
      34: iload         4
      36: aaload
      37: invokeinterface #31,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      42: iinc          4, 1
      45: goto          8
      48: return

  void innerValue(int, T);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #9                  // Field latest:[Ljava/lang/Object;
       9: astore        5
      11: aload_0
      12: getfield      #32                 // Field nonEmptySources:I
      15: istore        6
      17: aload         5
      19: iload_1
      20: aaload
      21: ifnonnull     33
      24: iinc          6, 1
      27: aload_0
      28: iload         6
      30: putfield      #32                 // Field nonEmptySources:I
      33: aload         5
      35: iload_1
      36: aload_2
      37: aastore
      38: aload         5
      40: arraylength
      41: iload         6
      43: if_icmpne     114
      46: new           #33                 // class reactor/core/publisher/FluxCombineLatest$SourceAndArray
      49: dup
      50: aload_0
      51: getfield      #7                  // Field subscribers:[Lreactor/core/publisher/FluxCombineLatest$CombineLatestInner;
      54: iload_1
      55: aaload
      56: aload         5
      58: invokevirtual #34                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
      61: checkcast     #35                 // class "[Ljava/lang/Object;"
      64: invokespecial #36                 // Method reactor/core/publisher/FluxCombineLatest$SourceAndArray."<init>":(Lreactor/core/publisher/FluxCombineLatest$CombineLatestInner;[Ljava/lang/Object;)V
      67: astore        7
      69: aload_0
      70: getfield      #10                 // Field queue:Ljava/util/Queue;
      73: aload         7
      75: invokeinterface #37,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      80: ifne          109
      83: aload_0
      84: aload_0
      85: ldc           #39                 // String Queue is full: Reactive Streams source doesn\'t respect backpressure
      87: invokestatic  #40                 // Method reactor/core/Exceptions.failWithOverflow:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      90: aload_0
      91: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      94: invokeinterface #41,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      99: invokestatic  #42                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     102: invokevirtual #43                 // Method innerError:(Ljava/lang/Throwable;)V
     105: aload         4
     107: monitorexit
     108: return
     109: iconst_0
     110: istore_3
     111: goto          116
     114: iconst_1
     115: istore_3
     116: aload         4
     118: monitorexit
     119: goto          130
     122: astore        8
     124: aload         4
     126: monitorexit
     127: aload         8
     129: athrow
     130: iload_3
     131: ifeq          146
     134: aload_0
     135: getfield      #7                  // Field subscribers:[Lreactor/core/publisher/FluxCombineLatest$CombineLatestInner;
     138: iload_1
     139: aaload
     140: invokevirtual #44                 // Method reactor/core/publisher/FluxCombineLatest$CombineLatestInner.requestOne:()V
     143: goto          150
     146: aload_0
     147: invokevirtual #14                 // Method drain:()V
     150: return
    Exception table:
       from    to  target type
           5   108   122   any
         109   119   122   any
         122   127   122   any

  void innerComplete(int);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #9                  // Field latest:[Ljava/lang/Object;
       8: astore_3
       9: aload_3
      10: iload_1
      11: aaload
      12: ifnull        50
      15: aload_0
      16: getfield      #45                 // Field completedSources:I
      19: iconst_1
      20: iadd
      21: istore        4
      23: iload         4
      25: aload_3
      26: arraylength
      27: if_icmpne     38
      30: aload_0
      31: iconst_1
      32: putfield      #22                 // Field done:Z
      35: goto          47
      38: aload_0
      39: iload         4
      41: putfield      #45                 // Field completedSources:I
      44: aload_2
      45: monitorexit
      46: return
      47: goto          55
      50: aload_0
      51: iconst_1
      52: putfield      #22                 // Field done:Z
      55: aload_2
      56: monitorexit
      57: goto          67
      60: astore        5
      62: aload_2
      63: monitorexit
      64: aload         5
      66: athrow
      67: aload_0
      68: invokevirtual #14                 // Method drain:()V
      71: return
    Exception table:
       from    to  target type
           4    46    60   any
          47    57    60   any
          60    64    60   any

  void innerError(java.lang.Throwable);
    Code:
       0: getstatic     #46                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #47                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: ifeq          23
      11: aload_0
      12: iconst_1
      13: putfield      #22                 // Field done:Z
      16: aload_0
      17: invokevirtual #14                 // Method drain:()V
      20: goto          36
      23: aload_1
      24: aload_0
      25: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      28: invokeinterface #41,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      33: invokestatic  #48                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      36: return

  void drainOutput();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: astore_1
       5: aload_0
       6: getfield      #10                 // Field queue:Ljava/util/Queue;
       9: astore_2
      10: iconst_1
      11: istore_3
      12: aload_0
      13: getfield      #15                 // Field cancelled:Z
      16: ifeq          26
      19: aload_2
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Queue.clear:()V
      25: return
      26: aload_0
      27: getfield      #26                 // Field error:Ljava/lang/Throwable;
      30: astore        4
      32: aload         4
      34: ifnull        52
      37: aload_2
      38: invokeinterface #19,  1           // InterfaceMethod java/util/Queue.clear:()V
      43: aload_1
      44: aload         4
      46: invokeinterface #49,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      51: return
      52: aload_0
      53: getfield      #22                 // Field done:Z
      56: istore        5
      58: aload_2
      59: invokeinterface #50,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      64: istore        6
      66: iload         6
      68: ifne          78
      71: aload_1
      72: aconst_null
      73: invokeinterface #51,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      78: iload         5
      80: ifeq          95
      83: iload         6
      85: ifeq          95
      88: aload_1
      89: invokeinterface #52,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      94: return
      95: getstatic     #17                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      98: aload_0
      99: iload_3
     100: ineg
     101: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     104: istore_3
     105: iload_3
     106: ifne          112
     109: goto          115
     112: goto          12
     115: return

  void drainAsync();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: astore_1
       5: aload_0
       6: getfield      #10                 // Field queue:Ljava/util/Queue;
       9: astore_2
      10: iconst_1
      11: istore_3
      12: aload_0
      13: getfield      #28                 // Field requested:J
      16: lstore        4
      18: lconst_0
      19: lstore        6
      21: lload         6
      23: lload         4
      25: lcmp
      26: ifeq          184
      29: aload_0
      30: getfield      #22                 // Field done:Z
      33: istore        8
      35: aload_2
      36: invokeinterface #54,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      41: checkcast     #33                 // class reactor/core/publisher/FluxCombineLatest$SourceAndArray
      44: astore        9
      46: aload         9
      48: ifnonnull     55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: istore        10
      58: aload_0
      59: iload         8
      61: iload         10
      63: aload_1
      64: aload_2
      65: invokevirtual #55                 // Method checkTerminated:(ZZLorg/reactivestreams/Subscriber;Ljava/util/Queue;)Z
      68: ifeq          72
      71: return
      72: iload         10
      74: ifeq          80
      77: goto          184
      80: aload_0
      81: getfield      #4                  // Field combiner:Ljava/util/function/Function;
      84: aload         9
      86: getfield      #56                 // Field reactor/core/publisher/FluxCombineLatest$SourceAndArray.array:[Ljava/lang/Object;
      89: invokeinterface #57,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      94: ldc           #58                 // String Combiner returned null
      96: invokestatic  #59                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      99: astore        11
     101: goto          159
     104: astore        12
     106: aload_0
     107: aload         12
     109: aload         9
     111: getfield      #56                 // Field reactor/core/publisher/FluxCombineLatest$SourceAndArray.array:[Ljava/lang/Object;
     114: aload_0
     115: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     118: invokeinterface #41,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     123: invokestatic  #61                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     126: astore        12
     128: getstatic     #46                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     131: aload_0
     132: aload         12
     134: invokestatic  #47                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     137: pop
     138: getstatic     #46                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     141: aload_0
     142: invokestatic  #62                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     145: astore        12
     147: aload_0
     148: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     151: aload         12
     153: invokeinterface #63,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     158: return
     159: aload_1
     160: aload         11
     162: invokeinterface #51,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     167: aload         9
     169: getfield      #64                 // Field reactor/core/publisher/FluxCombineLatest$SourceAndArray.source:Lreactor/core/publisher/FluxCombineLatest$CombineLatestInner;
     172: invokevirtual #44                 // Method reactor/core/publisher/FluxCombineLatest$CombineLatestInner.requestOne:()V
     175: lload         6
     177: lconst_1
     178: ladd
     179: lstore        6
     181: goto          21
     184: lload         6
     186: lload         4
     188: lcmp
     189: ifne          212
     192: aload_0
     193: aload_0
     194: getfield      #22                 // Field done:Z
     197: aload_2
     198: invokeinterface #50,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
     203: aload_1
     204: aload_2
     205: invokevirtual #55                 // Method checkTerminated:(ZZLorg/reactivestreams/Subscriber;Ljava/util/Queue;)Z
     208: ifeq          212
     211: return
     212: lload         6
     214: lconst_0
     215: lcmp
     216: ifeq          239
     219: lload         4
     221: ldc2_w        #66                 // long 9223372036854775807l
     224: lcmp
     225: ifeq          239
     228: getstatic     #12                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     231: aload_0
     232: lload         6
     234: lneg
     235: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
     238: pop2
     239: getstatic     #17                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     242: aload_0
     243: iload_3
     244: ineg
     245: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     248: istore_3
     249: iload_3
     250: ifne          256
     253: goto          259
     256: goto          12
     259: return
    Exception table:
       from    to  target type
          80   101   104   Class java/lang/Throwable

  void drain();
    Code:
       0: getstatic     #17                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #69                 // Field outputFused:Z
      15: ifeq          25
      18: aload_0
      19: invokevirtual #70                 // Method drainOutput:()V
      22: goto          29
      25: aload_0
      26: invokevirtual #71                 // Method drainAsync:()V
      29: return

  boolean checkTerminated(boolean, boolean, org.reactivestreams.Subscriber<?>, java.util.Queue<?>);
    Code:
       0: aload_0
       1: getfield      #15                 // Field cancelled:Z
       4: ifeq          20
       7: aload_0
       8: invokevirtual #16                 // Method cancelAll:()V
      11: aload         4
      13: invokeinterface #19,  1           // InterfaceMethod java/util/Queue.clear:()V
      18: iconst_1
      19: ireturn
      20: iload_1
      21: ifeq          83
      24: getstatic     #46                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      27: aload_0
      28: invokestatic  #62                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
      31: astore        5
      33: aload         5
      35: ifnull        67
      38: aload         5
      40: getstatic     #72                 // Field reactor/core/Exceptions.TERMINATED:Ljava/lang/Throwable;
      43: if_acmpeq     67
      46: aload_0
      47: invokevirtual #16                 // Method cancelAll:()V
      50: aload         4
      52: invokeinterface #19,  1           // InterfaceMethod java/util/Queue.clear:()V
      57: aload_3
      58: aload         5
      60: invokeinterface #49,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      65: iconst_1
      66: ireturn
      67: iload_2
      68: ifeq          83
      71: aload_0
      72: invokevirtual #16                 // Method cancelAll:()V
      75: aload_3
      76: invokeinterface #52,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      81: iconst_1
      82: ireturn
      83: iconst_0
      84: ireturn

  void cancelAll();
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:[Lreactor/core/publisher/FluxCombineLatest$CombineLatestInner;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     31
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #73                 // Method reactor/core/publisher/FluxCombineLatest$CombineLatestInner.cancel:()V
      25: iinc          3, 1
      28: goto          10
      31: return

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_4
       2: iand
       3: ifeq          8
       6: iconst_0
       7: ireturn
       8: iload_1
       9: iconst_2
      10: iand
      11: istore_2
      12: aload_0
      13: iload_2
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: putfield      #69                 // Field outputFused:Z
      25: iload_2
      26: ireturn

  public R poll();
    Code:
       0: aload_0
       1: getfield      #10                 // Field queue:Ljava/util/Queue;
       4: invokeinterface #54,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: checkcast     #33                 // class reactor/core/publisher/FluxCombineLatest$SourceAndArray
      12: astore_1
      13: aload_1
      14: ifnonnull     19
      17: aconst_null
      18: areturn
      19: aload_0
      20: getfield      #4                  // Field combiner:Ljava/util/function/Function;
      23: aload_1
      24: getfield      #56                 // Field reactor/core/publisher/FluxCombineLatest$SourceAndArray.array:[Ljava/lang/Object;
      27: invokeinterface #57,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: astore_2
      33: aload_1
      34: getfield      #64                 // Field reactor/core/publisher/FluxCombineLatest$SourceAndArray.source:Lreactor/core/publisher/FluxCombineLatest$CombineLatestInner;
      37: invokevirtual #44                 // Method reactor/core/publisher/FluxCombineLatest$CombineLatestInner.requestOne:()V
      40: aload_2
      41: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #10                 // Field queue:Ljava/util/Queue;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Queue.clear:()V
       9: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #10                 // Field queue:Ljava/util/Queue;
       4: invokeinterface #50,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
       9: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #10                 // Field queue:Ljava/util/Queue;
       4: invokeinterface #74,  1           // InterfaceMethod java/util/Queue.size:()I
       9: ireturn

  static {};
    Code:
       0: ldc           #75                 // class reactor/core/publisher/FluxCombineLatest$CombineLatestCoordinator
       2: ldc           #76                 // String requested
       4: invokestatic  #77                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #12                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: ldc           #75                 // class reactor/core/publisher/FluxCombineLatest$CombineLatestCoordinator
      12: ldc           #78                 // String wip
      14: invokestatic  #79                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      17: putstatic     #17                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: ldc           #75                 // class reactor/core/publisher/FluxCombineLatest$CombineLatestCoordinator
      22: ldc           #60                 // class java/lang/Throwable
      24: ldc           #80                 // String error
      26: invokestatic  #81                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      29: putstatic     #46                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      32: return
}
