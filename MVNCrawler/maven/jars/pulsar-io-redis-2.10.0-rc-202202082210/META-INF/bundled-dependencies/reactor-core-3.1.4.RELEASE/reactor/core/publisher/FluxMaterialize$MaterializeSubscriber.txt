Compiled from "FluxMaterialize.java"
final class reactor.core.publisher.FluxMaterialize$MaterializeSubscriber<T> extends java.util.AbstractQueue<reactor.core.publisher.Signal<T>> implements reactor.core.publisher.InnerOperator<T, reactor.core.publisher.Signal<T>>, java.util.function.BooleanSupplier {
  final reactor.core.CoreSubscriber<? super reactor.core.publisher.Signal<T>> actual;

  final reactor.util.context.Context cachedContext;

  reactor.core.publisher.Signal<T> terminalSignal;

  volatile boolean cancelled;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxMaterialize$MaterializeSubscriber> REQUESTED;

  long produced;

  org.reactivestreams.Subscription s;

  static final reactor.core.publisher.Signal empty;

  reactor.core.publisher.FluxMaterialize$MaterializeSubscriber(reactor.core.CoreSubscriber<? super reactor.core.publisher.Signal<T>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractQueue."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_0
      11: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      14: invokeinterface #3,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      19: putfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      22: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #7                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     35
      19: aload_0
      20: getfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
      23: ifnull        30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      34: areturn
      35: aload_1
      36: getstatic     #10                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      39: if_acmpne     63
      42: aload_0
      43: getfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
      46: ifnull        61
      49: aload_0
      50: getfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
      53: invokeinterface #11,  1           // InterfaceMethod reactor/core/publisher/Signal.getThrowable:()Ljava/lang/Throwable;
      58: goto          62
      61: aconst_null
      62: areturn
      63: aload_1
      64: getstatic     #12                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      67: if_acmpne     78
      70: aload_0
      71: invokevirtual #13                 // Method getAsBoolean:()Z
      74: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      77: areturn
      78: aload_1
      79: getstatic     #14                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      82: if_acmpne     93
      85: aload_0
      86: getfield      #15                 // Field requested:J
      89: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      92: areturn
      93: aload_1
      94: getstatic     #17                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      97: if_acmpne     108
     100: aload_0
     101: invokevirtual #18                 // Method size:()I
     104: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     107: areturn
     108: aload_0
     109: aload_1
     110: invokespecial #20                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
     113: areturn

  public reactor.core.CoreSubscriber<? super reactor.core.publisher.Signal<T>> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #21                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #22,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
       4: ifnull        16
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      12: invokestatic  #23                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: dup
      18: getfield      #24                 // Field produced:J
      21: lconst_1
      22: ladd
      23: putfield      #24                 // Field produced:J
      26: aload_0
      27: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: aload_0
      32: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      35: invokestatic  #25                 // InterfaceMethod reactor/core/publisher/Signal.next:(Ljava/lang/Object;Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
      38: invokeinterface #26,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      43: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
       4: ifnull        16
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      12: invokestatic  #27                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: aload_1
      18: aload_0
      19: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      22: invokestatic  #28                 // InterfaceMethod reactor/core/publisher/Signal.error:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
      25: putfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
      28: aload_0
      29: getfield      #24                 // Field produced:J
      32: lstore_2
      33: lload_2
      34: lconst_0
      35: lcmp
      36: ifeq          49
      39: getstatic     #29                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      42: aload_0
      43: lload_2
      44: lneg
      45: invokestatic  #30                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      48: pop2
      49: aload_0
      50: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      53: aload_0
      54: getstatic     #29                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      57: aload_0
      58: aload_0
      59: invokestatic  #31                 // Method reactor/core/publisher/DrainUtils.postComplete:(Lreactor/core/CoreSubscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;Ljava/util/function/BooleanSupplier;)V
      62: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
       4: ifnull        8
       7: return
       8: aload_0
       9: aload_0
      10: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      13: invokestatic  #32                 // InterfaceMethod reactor/core/publisher/Signal.complete:(Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
      16: putfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
      19: aload_0
      20: getfield      #24                 // Field produced:J
      23: lstore_1
      24: lload_1
      25: lconst_0
      26: lcmp
      27: ifeq          40
      30: getstatic     #29                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      33: aload_0
      34: lload_1
      35: lneg
      36: invokestatic  #30                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      39: pop2
      40: aload_0
      41: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      44: aload_0
      45: getstatic     #29                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      48: aload_0
      49: aload_0
      50: invokestatic  #31                 // Method reactor/core/publisher/DrainUtils.postComplete:(Lreactor/core/CoreSubscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;Ljava/util/function/BooleanSupplier;)V
      53: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #33                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          34
       7: lload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: aload_0
      13: getstatic     #29                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      16: aload_0
      17: aload_0
      18: invokestatic  #34                 // Method reactor/core/publisher/DrainUtils.postCompleteRequest:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;Ljava/util/function/BooleanSupplier;)Z
      21: ifne          34
      24: aload_0
      25: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      28: lload_1
      29: invokeinterface #35,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      34: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #36                 // Field cancelled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #36                 // Field cancelled:Z
      13: aload_0
      14: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      17: invokeinterface #37,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      22: return

  public boolean getAsBoolean();
    Code:
       0: aload_0
       1: getfield      #36                 // Field cancelled:Z
       4: ireturn

  public boolean offer(reactor.core.publisher.Signal<T>);
    Code:
       0: new           #38                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #39                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public reactor.core.publisher.Signal<T> poll();
    Code:
       0: aload_0
       1: getfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
       4: astore_1
       5: aload_1
       6: ifnull        25
       9: aload_1
      10: getstatic     #40                 // Field empty:Lreactor/core/publisher/Signal;
      13: if_acmpeq     25
      16: aload_0
      17: getstatic     #40                 // Field empty:Lreactor/core/publisher/Signal;
      20: putfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
      23: aload_1
      24: areturn
      25: aconst_null
      26: areturn

  public reactor.core.publisher.Signal<T> peek();
    Code:
       0: getstatic     #40                 // Field empty:Lreactor/core/publisher/Signal;
       3: aload_0
       4: getfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
       7: if_acmpne     14
      10: aconst_null
      11: goto          18
      14: aload_0
      15: getfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
      18: areturn

  public java.util.Iterator<reactor.core.publisher.Signal<T>> iterator();
    Code:
       0: new           #38                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #39                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int size();
    Code:
       0: aload_0
       1: getfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
       4: ifnull        17
       7: aload_0
       8: getfield      #8                  // Field terminalSignal:Lreactor/core/publisher/Signal;
      11: getstatic     #40                 // Field empty:Lreactor/core/publisher/Signal;
      14: if_acmpne     21
      17: iconst_0
      18: goto          22
      21: iconst_1
      22: ireturn

  public java.lang.Object peek();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method peek:()Lreactor/core/publisher/Signal;
       4: areturn

  public java.lang.Object poll();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method poll:()Lreactor/core/publisher/Signal;
       4: areturn

  public boolean offer(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #43                 // class reactor/core/publisher/Signal
       5: invokevirtual #44                 // Method offer:(Lreactor/core/publisher/Signal;)Z
       8: ireturn

  static {};
    Code:
       0: ldc           #45                 // class reactor/core/publisher/FluxMaterialize$MaterializeSubscriber
       2: ldc           #46                 // String requested
       4: invokestatic  #47                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #29                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: new           #48                 // class reactor/core/publisher/ImmutableSignal
      13: dup
      14: invokestatic  #49                 // InterfaceMethod reactor/util/context/Context.empty:()Lreactor/util/context/Context;
      17: getstatic     #50                 // Field reactor/core/publisher/SignalType.ON_NEXT:Lreactor/core/publisher/SignalType;
      20: aconst_null
      21: aconst_null
      22: aconst_null
      23: invokespecial #51                 // Method reactor/core/publisher/ImmutableSignal."<init>":(Lreactor/util/context/Context;Lreactor/core/publisher/SignalType;Ljava/lang/Object;Ljava/lang/Throwable;Lorg/reactivestreams/Subscription;)V
      26: putstatic     #40                 // Field empty:Lreactor/core/publisher/Signal;
      29: return
}
