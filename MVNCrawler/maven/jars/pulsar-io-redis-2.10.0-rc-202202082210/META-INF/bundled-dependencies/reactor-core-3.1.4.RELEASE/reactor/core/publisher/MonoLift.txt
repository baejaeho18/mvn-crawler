Compiled from "MonoLift.java"
final class reactor.core.publisher.MonoLift<I, O> extends reactor.core.publisher.MonoOperator<I, O> {
  final java.util.function.BiFunction<reactor.core.Scannable, ? super reactor.core.CoreSubscriber<? super O>, ? extends reactor.core.CoreSubscriber<? super I>> lifter;

  reactor.core.publisher.MonoLift(org.reactivestreams.Publisher<I>, java.util.function.BiFunction<reactor.core.Scannable, ? super reactor.core.CoreSubscriber<? super O>, ? extends reactor.core.CoreSubscriber<? super I>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method reactor/core/publisher/Mono.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
       5: invokespecial #2                  // Method reactor/core/publisher/MonoOperator."<init>":(Lreactor/core/publisher/Mono;)V
       8: aload_0
       9: aload_2
      10: putfield      #3                  // Field lifter:Ljava/util/function/BiFunction;
      13: return

  public void subscribe(reactor.core.CoreSubscriber<? super O>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lifter:Ljava/util/function/BiFunction;
       4: aload_0
       5: getfield      #4                  // Field source:Lreactor/core/publisher/Mono;
       8: invokestatic  #5                  // InterfaceMethod reactor/core/Scannable.from:(Ljava/lang/Object;)Lreactor/core/Scannable;
      11: aload_1
      12: invokeinterface #6,  3            // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #7                  // class reactor/core/CoreSubscriber
      20: astore_2
      21: aload_2
      22: ldc           #8                  // String Lifted subscriber MUST NOT be null
      24: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      27: pop
      28: aload_0
      29: getfield      #4                  // Field source:Lreactor/core/publisher/Mono;
      32: aload_2
      33: invokevirtual #10                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      36: return
}
