Compiled from "RingBuffer.java"
final class reactor.core.publisher.NotFunRingBuffer<E> extends reactor.core.publisher.NotFunRingBufferFields<E> {
  reactor.core.publisher.NotFunRingBuffer(java.util.function.Supplier<E>, reactor.core.publisher.RingBufferProducer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method reactor/core/publisher/NotFunRingBufferFields."<init>":(Ljava/util/function/Supplier;Lreactor/core/publisher/RingBufferProducer;)V
       6: return

  E get(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #2                  // Method elementAt:(J)Ljava/lang/Object;
       5: areturn

  long next();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #3                  // Method next:(I)J
       5: lreturn

  long next(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sequenceProducer:Lreactor/core/publisher/RingBufferProducer;
       4: iload_1
       5: invokevirtual #5                  // Method reactor/core/publisher/RingBufferProducer.next:(I)J
       8: lreturn

  void addGatingSequence(reactor.core.publisher.RingBuffer$Sequence);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sequenceProducer:Lreactor/core/publisher/RingBufferProducer;
       4: aload_1
       5: invokevirtual #6                  // Method reactor/core/publisher/RingBufferProducer.addGatingSequence:(Lreactor/core/publisher/RingBuffer$Sequence;)V
       8: return

  long getMinimumGatingSequence();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #7                  // Method getMinimumGatingSequence:(Lreactor/core/publisher/RingBuffer$Sequence;)J
       5: lreturn

  long getMinimumGatingSequence(reactor.core.publisher.RingBuffer$Sequence);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sequenceProducer:Lreactor/core/publisher/RingBufferProducer;
       4: aload_1
       5: invokevirtual #8                  // Method reactor/core/publisher/RingBufferProducer.getMinimumSequence:(Lreactor/core/publisher/RingBuffer$Sequence;)J
       8: lreturn

  boolean removeGatingSequence(reactor.core.publisher.RingBuffer$Sequence);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sequenceProducer:Lreactor/core/publisher/RingBufferProducer;
       4: aload_1
       5: invokevirtual #9                  // Method reactor/core/publisher/RingBufferProducer.removeGatingSequence:(Lreactor/core/publisher/RingBuffer$Sequence;)Z
       8: ireturn

  reactor.core.publisher.RingBuffer$Reader newReader();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sequenceProducer:Lreactor/core/publisher/RingBufferProducer;
       4: invokevirtual #10                 // Method reactor/core/publisher/RingBufferProducer.newBarrier:()Lreactor/core/publisher/RingBuffer$Reader;
       7: areturn

  long getCursor();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sequenceProducer:Lreactor/core/publisher/RingBufferProducer;
       4: invokevirtual #11                 // Method reactor/core/publisher/RingBufferProducer.getCursor:()J
       7: lreturn

  int bufferSize();
    Code:
       0: aload_0
       1: getfield      #12                 // Field bufferSize:I
       4: ireturn

  void publish(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sequenceProducer:Lreactor/core/publisher/RingBufferProducer;
       4: lload_1
       5: invokevirtual #13                 // Method reactor/core/publisher/RingBufferProducer.publish:(J)V
       8: return

  int getPending();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sequenceProducer:Lreactor/core/publisher/RingBufferProducer;
       4: invokevirtual #14                 // Method reactor/core/publisher/RingBufferProducer.getPending:()J
       7: l2i
       8: ireturn

  reactor.core.publisher.RingBufferProducer getSequencer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sequenceProducer:Lreactor/core/publisher/RingBufferProducer;
       4: areturn
}
