Compiled from "FluxOnAssembly.java"
class reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber<T> implements reactor.core.publisher.InnerOperator<T, T>, reactor.core.Fuseable$QueueSubscription<T> {
  final reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException snapshotStack;

  final org.reactivestreams.Publisher<?> parent;

  final reactor.core.CoreSubscriber<? super T> actual;

  reactor.core.Fuseable$QueueSubscription<T> qs;

  org.reactivestreams.Subscription s;

  int fusionMode;

  reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber(reactor.core.CoreSubscriber<? super T>, reactor.core.publisher.FluxOnAssembly$AssemblySnapshotException, org.reactivestreams.Publisher<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshotException;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field parent:Lorg/reactivestreams/Publisher;
      19: return

  public final reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_0
      13: aload_1
      14: invokespecial #7                  // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      17: areturn

  public final void onNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      10: return

  public final void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_0
       5: aload_1
       6: invokevirtual #9                  // Method fail:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
       9: invokeinterface #10,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      14: return

  public final void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
       9: return

  public final int requestFusion(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: astore_2
       5: aload_2
       6: ifnull        28
       9: aload_2
      10: iload_1
      11: invokeinterface #13,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      16: istore_3
      17: iload_3
      18: ifeq          26
      21: aload_0
      22: iload_3
      23: putfield      #14                 // Field fusionMode:I
      26: iload_3
      27: ireturn
      28: iconst_0
      29: ireturn

  final java.lang.Throwable fail(java.lang.Throwable);
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #4                  // Field parent:Lorg/reactivestreams/Publisher;
      13: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: aload_0
      17: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshotException;
      20: invokestatic  #19                 // Method reactor/core/publisher/FluxOnAssembly.fillStacktraceHeader:(Ljava/lang/StringBuilder;Ljava/lang/Class;Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshotException;)V
      23: aconst_null
      24: astore_3
      25: aload_1
      26: invokevirtual #20                 // Method java/lang/Throwable.getSuppressed:()[Ljava/lang/Throwable;
      29: arraylength
      30: ifle          111
      33: aload_1
      34: invokevirtual #20                 // Method java/lang/Throwable.getSuppressed:()[Ljava/lang/Throwable;
      37: astore        4
      39: aload         4
      41: arraylength
      42: istore        5
      44: iconst_0
      45: istore        6
      47: iload         6
      49: iload         5
      51: if_icmpge     111
      54: aload         4
      56: iload         6
      58: aaload
      59: astore        7
      61: aload         7
      63: instanceof    #21                 // class reactor/core/publisher/FluxOnAssembly$OnAssemblyException
      66: ifeq          105
      69: aload         7
      71: checkcast     #21                 // class reactor/core/publisher/FluxOnAssembly$OnAssemblyException
      74: astore        8
      76: aload         8
      78: aload_0
      79: getfield      #4                  // Field parent:Lorg/reactivestreams/Publisher;
      82: aload_2
      83: aload_0
      84: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshotException;
      87: invokevirtual #22                 // Method reactor/core/publisher/FluxOnAssembly$AssemblySnapshotException.toString:()Ljava/lang/String;
      90: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokevirtual #25                 // Method reactor/core/publisher/FluxOnAssembly$OnAssemblyException.add:(Lorg/reactivestreams/Publisher;Ljava/lang/String;)V
      99: aload         8
     101: astore_3
     102: goto          111
     105: iinc          6, 1
     108: goto          47
     111: aload_3
     112: ifnonnull     152
     115: aload_1
     116: new           #21                 // class reactor/core/publisher/FluxOnAssembly$OnAssemblyException
     119: dup
     120: aload_0
     121: getfield      #4                  // Field parent:Lorg/reactivestreams/Publisher;
     124: aload_0
     125: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshotException;
     128: aload_2
     129: aload_0
     130: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshotException;
     133: invokevirtual #22                 // Method reactor/core/publisher/FluxOnAssembly$AssemblySnapshotException.toString:()Ljava/lang/String;
     136: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: invokespecial #26                 // Method reactor/core/publisher/FluxOnAssembly$OnAssemblyException."<init>":(Lorg/reactivestreams/Publisher;Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshotException;Ljava/lang/String;)V
     145: invokestatic  #27                 // Method reactor/core/Exceptions.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;
     148: astore_1
     149: goto          171
     152: aload_0
     153: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshotException;
     156: getfield      #28                 // Field reactor/core/publisher/FluxOnAssembly$AssemblySnapshotException.checkpointed:Z
     159: ifeq          171
     162: aload_1
     163: aload_0
     164: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshotException;
     167: invokestatic  #27                 // Method reactor/core/Exceptions.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;
     170: astore_1
     171: aload_1
     172: areturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #12                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #29,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
       9: ireturn
      10: astore_1
      11: aload_1
      12: invokestatic  #31                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      15: aload_0
      16: aload_1
      17: invokevirtual #9                  // Method fail:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      20: invokestatic  #32                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      23: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Throwable

  public final void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #33                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          34
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: aload_1
      18: invokestatic  #34                 // Method reactor/core/publisher/Operators.as:(Lorg/reactivestreams/Subscription;)Lreactor/core/Fuseable$QueueSubscription;
      21: putfield      #12                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      24: aload_0
      25: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      28: aload_0
      29: invokeinterface #35,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      34: return

  public final int size();
    Code:
       0: aload_0
       1: getfield      #12                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #36,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
       9: ireturn

  public final void clear();
    Code:
       0: aload_0
       1: getfield      #12                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #37,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
       9: return

  public final void request(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #38,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public final void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #39,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public final T poll();
    Code:
       0: aload_0
       1: getfield      #12                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #40,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
       9: areturn
      10: astore_1
      11: aload_1
      12: invokestatic  #31                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      15: aload_0
      16: aload_1
      17: invokevirtual #9                  // Method fail:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      20: invokestatic  #32                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      23: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Throwable
}
