Compiled from "FluxTake.java"
final class reactor.core.publisher.FluxTake$TakeFuseableSubscriber<T> implements reactor.core.Fuseable$QueueSubscription<T>, reactor.core.publisher.InnerOperator<T, T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final long n;

  long remaining;

  reactor.core.Fuseable$QueueSubscription<T> qs;

  boolean done;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxTake$TakeFuseableSubscriber> WIP;

  int inputMode;

  reactor.core.publisher.FluxTake$TakeFuseableSubscriber(reactor.core.CoreSubscriber<? super T>, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field n:J
      14: aload_0
      15: lload_2
      16: putfield      #4                  // Field remaining:J
      19: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: aload_1
       5: invokestatic  #6                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          60
      11: aload_0
      12: aload_1
      13: checkcast     #7                  // class reactor/core/Fuseable$QueueSubscription
      16: putfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      19: aload_0
      20: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      23: aload_0
      24: invokeinterface #8,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      29: aload_0
      30: getfield      #9                  // Field inputMode:I
      33: iconst_1
      34: if_icmpeq     60
      37: aload_0
      38: getfield      #3                  // Field n:J
      41: lconst_0
      42: lcmp
      43: ifne          60
      46: aload_0
      47: getfield      #11                 // Field wip:I
      50: ifne          60
      53: aload_0
      54: ldc2_w        #13                 // long 9223372036854775807l
      57: invokevirtual #15                 // Method request:(J)V
      60: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #9                  // Field inputMode:I
       4: iconst_2
       5: if_icmpne     19
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: aconst_null
      13: invokeinterface #16,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      18: return
      19: aload_0
      20: getfield      #17                 // Field done:Z
      23: ifeq          40
      26: aload_1
      27: aload_0
      28: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      31: invokeinterface #18,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      36: invokestatic  #19                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      39: return
      40: aload_0
      41: getfield      #4                  // Field remaining:J
      44: lstore_2
      45: lload_2
      46: lconst_0
      47: lcmp
      48: ifne          65
      51: aload_0
      52: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      55: invokeinterface #20,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
      60: aload_0
      61: invokevirtual #21                 // Method onComplete:()V
      64: return
      65: aload_0
      66: lload_2
      67: lconst_1
      68: lsub
      69: dup2
      70: lstore_2
      71: putfield      #4                  // Field remaining:J
      74: lload_2
      75: lconst_0
      76: lcmp
      77: ifne          84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: istore        4
      87: aload_0
      88: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      91: aload_1
      92: invokeinterface #16,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      97: iload         4
      99: ifeq          115
     102: aload_0
     103: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
     106: invokeinterface #20,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
     111: aload_0
     112: invokevirtual #21                 // Method onComplete:()V
     115: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #17                 // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #18,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #22                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #17                 // Field done:Z
      26: aload_0
      27: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: invokeinterface #23,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #17                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #17                 // Field done:Z
      13: aload_0
      14: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      17: invokeinterface #24,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      22: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field wip:I
       4: ifeq          20
       7: aload_0
       8: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      11: lload_1
      12: invokeinterface #25,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      17: goto          66
      20: getstatic     #26                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      23: aload_0
      24: iconst_0
      25: iconst_1
      26: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      29: ifeq          66
      32: lload_1
      33: aload_0
      34: getfield      #3                  // Field n:J
      37: lcmp
      38: iflt          56
      41: aload_0
      42: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      45: ldc2_w        #13                 // long 9223372036854775807l
      48: invokeinterface #25,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      53: goto          66
      56: aload_0
      57: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      60: lload_1
      61: invokeinterface #25,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      66: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #20,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
       9: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #28                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #17                 // Field done:Z
      11: invokestatic  #29                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #30                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      19: if_acmpne     27
      22: aload_0
      23: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #31                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public int requestFusion(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: iload_1
       5: invokeinterface #32,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      10: istore_2
      11: aload_0
      12: iload_2
      13: putfield      #9                  // Field inputMode:I
      16: iload_2
      17: ireturn

  public T poll();
    Code:
       0: aload_0
       1: getfield      #17                 // Field done:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #4                  // Field remaining:J
      13: lstore_1
      14: aload_0
      15: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      18: invokeinterface #33,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
      23: astore_3
      24: lload_1
      25: lconst_0
      26: lcmp
      27: ifne          63
      30: aload_0
      31: iconst_1
      32: putfield      #17                 // Field done:Z
      35: aload_0
      36: getfield      #9                  // Field inputMode:I
      39: iconst_2
      40: if_icmpne     61
      43: aload_0
      44: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      47: invokeinterface #20,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
      52: aload_0
      53: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      56: invokeinterface #24,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      61: aconst_null
      62: areturn
      63: aload_3
      64: ifnull        120
      67: aload_0
      68: lload_1
      69: lconst_1
      70: lsub
      71: dup2
      72: lstore_1
      73: putfield      #4                  // Field remaining:J
      76: lload_1
      77: lconst_0
      78: lcmp
      79: ifne          120
      82: aload_0
      83: getfield      #17                 // Field done:Z
      86: ifne          120
      89: aload_0
      90: iconst_1
      91: putfield      #17                 // Field done:Z
      94: aload_0
      95: getfield      #9                  // Field inputMode:I
      98: iconst_2
      99: if_icmpne     120
     102: aload_0
     103: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
     106: invokeinterface #20,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
     111: aload_0
     112: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     115: invokeinterface #24,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     120: aload_3
     121: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field remaining:J
       4: lconst_0
       5: lcmp
       6: ifeq          21
       9: aload_0
      10: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      13: invokeinterface #34,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #35,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
       9: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #36,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
       9: ireturn

  static {};
    Code:
       0: ldc           #37                 // class reactor/core/publisher/FluxTake$TakeFuseableSubscriber
       2: ldc           #38                 // String wip
       4: invokestatic  #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #26                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
