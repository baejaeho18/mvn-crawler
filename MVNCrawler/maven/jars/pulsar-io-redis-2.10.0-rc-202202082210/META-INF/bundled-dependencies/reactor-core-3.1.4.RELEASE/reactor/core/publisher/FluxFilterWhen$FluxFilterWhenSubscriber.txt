Compiled from "FluxFilterWhen.java"
final class reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T> {
  final java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<java.lang.Boolean>> asyncPredicate;

  final int bufferSize;

  final java.util.concurrent.atomic.AtomicReferenceArray<T> toFilter;

  final reactor.core.CoreSubscriber<? super T> actual;

  int consumed;

  long consumerIndex;

  long emitted;

  java.lang.Boolean innerResult;

  long producerIndex;

  org.reactivestreams.Subscription upstream;

  volatile boolean cancelled;

  volatile reactor.core.publisher.FluxFilterWhen$FilterWhenInner current;

  volatile boolean done;

  volatile java.lang.Throwable error;

  volatile long requested;

  volatile int state;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber, java.lang.Throwable> ERROR;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber> REQUESTED;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber> WIP;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber, reactor.core.publisher.FluxFilterWhen$FilterWhenInner> CURRENT;

  static final reactor.core.publisher.FluxFilterWhen$FilterWhenInner INNER_CANCELLED;

  static final int STATE_FRESH;

  static final int STATE_RUNNING;

  static final int STATE_RESULT;

  reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber(reactor.core.CoreSubscriber<? super T>, java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<java.lang.Boolean>>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicReferenceArray
      13: dup
      14: iload_3
      15: invokestatic  #4                  // Method reactor/util/concurrent/Queues.ceilingNextPowerOfTwo:(I)I
      18: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      21: putfield      #6                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      24: aload_0
      25: aload_2
      26: putfield      #7                  // Field asyncPredicate:Ljava/util/function/Function;
      29: aload_0
      30: iload_3
      31: putfield      #8                  // Field bufferSize:I
      34: return

  public final reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #9                  // Field producerIndex:J
       4: lstore_2
       5: aload_0
       6: getfield      #6                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       9: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReferenceArray.length:()I
      12: iconst_1
      13: isub
      14: istore        4
      16: lload_2
      17: l2i
      18: iload         4
      20: iand
      21: istore        5
      23: aload_0
      24: getfield      #6                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      27: iload         5
      29: aload_1
      30: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
      33: aload_0
      34: lload_2
      35: lconst_1
      36: ladd
      37: putfield      #9                  // Field producerIndex:J
      40: aload_0
      41: invokevirtual #12                 // Method drain:()V
      44: return

  public void onError(java.lang.Throwable);
    Code:
       0: getstatic     #13                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: aload_0
       9: iconst_1
      10: putfield      #15                 // Field done:Z
      13: aload_0
      14: invokevirtual #12                 // Method drain:()V
      17: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #15                 // Field done:Z
       5: aload_0
       6: invokevirtual #12                 // Method drain:()V
       9: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #16                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          20
       7: getstatic     #17                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #18                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #12                 // Method drain:()V
      20: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #19                 // Field cancelled:Z
       4: ifne          39
       7: aload_0
       8: iconst_1
       9: putfield      #19                 // Field cancelled:Z
      12: aload_0
      13: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: invokeinterface #21,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      21: aload_0
      22: invokevirtual #22                 // Method cancelInner:()V
      25: getstatic     #23                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      28: aload_0
      29: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      32: ifne          39
      35: aload_0
      36: invokevirtual #25                 // Method clear:()V
      39: return

  void cancelInner();
    Code:
       0: getstatic     #26                 // Field CURRENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #28                 // class reactor/core/publisher/FluxFilterWhen$FilterWhenInner
      10: astore_1
      11: aload_1
      12: getstatic     #29                 // Field INNER_CANCELLED:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
      15: if_acmpeq     47
      18: getstatic     #26                 // Field CURRENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      21: aload_0
      22: getstatic     #29                 // Field INNER_CANCELLED:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
      25: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #28                 // class reactor/core/publisher/FluxFilterWhen$FilterWhenInner
      31: astore_1
      32: aload_1
      33: ifnull        47
      36: aload_1
      37: getstatic     #29                 // Field INNER_CANCELLED:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
      40: if_acmpeq     47
      43: aload_1
      44: invokevirtual #31                 // Method reactor/core/publisher/FluxFilterWhen$FilterWhenInner.cancel:()V
      47: return

  void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReferenceArray.length:()I
       7: istore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: iload_1
      12: if_icmpge     30
      15: aload_0
      16: getfield      #6                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      19: iload_2
      20: aconst_null
      21: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
      24: iinc          2, 1
      27: goto          10
      30: aload_0
      31: aconst_null
      32: putfield      #32                 // Field innerResult:Ljava/lang/Boolean;
      35: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #33                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          37
      11: aload_0
      12: aload_1
      13: putfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #34,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: aload_0
      28: getfield      #8                  // Field bufferSize:I
      31: i2l
      32: invokeinterface #35,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      37: return

  void drain();
    Code:
       0: getstatic     #23                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: iconst_1
      12: istore_1
      13: aload_0
      14: getfield      #8                  // Field bufferSize:I
      17: invokestatic  #36                 // Method reactor/core/publisher/Operators.unboundedOrLimit:(I)I
      20: istore_2
      21: aload_0
      22: getfield      #37                 // Field emitted:J
      25: lstore_3
      26: aload_0
      27: getfield      #38                 // Field consumerIndex:J
      30: lstore        5
      32: aload_0
      33: getfield      #39                 // Field consumed:I
      36: istore        7
      38: aload_0
      39: getfield      #6                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      42: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReferenceArray.length:()I
      45: iconst_1
      46: isub
      47: istore        8
      49: aload_0
      50: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      53: astore        9
      55: aload_0
      56: getfield      #40                 // Field requested:J
      59: lstore        10
      61: lload_3
      62: lload         10
      64: lcmp
      65: ifeq          489
      68: aload_0
      69: getfield      #19                 // Field cancelled:Z
      72: ifeq          80
      75: aload_0
      76: invokevirtual #25                 // Method clear:()V
      79: return
      80: aload_0
      81: getfield      #15                 // Field done:Z
      84: istore        12
      86: lload         5
      88: l2i
      89: iload         8
      91: iand
      92: istore        13
      94: aload_0
      95: getfield      #6                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      98: iload         13
     100: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
     103: astore        14
     105: aload         14
     107: ifnonnull     114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: istore        15
     117: iload         12
     119: ifeq          161
     122: iload         15
     124: ifeq          161
     127: getstatic     #13                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     130: aload_0
     131: invokestatic  #42                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     134: astore        16
     136: aload         16
     138: ifnonnull     151
     141: aload         9
     143: invokeinterface #43,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     148: goto          160
     151: aload         9
     153: aload         16
     155: invokeinterface #44,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     160: return
     161: iload         15
     163: ifeq          169
     166: goto          489
     169: aload_0
     170: getfield      #45                 // Field state:I
     173: istore        16
     175: iload         16
     177: ifne          399
     180: aload_0
     181: getfield      #7                  // Field asyncPredicate:Ljava/util/function/Function;
     184: aload         14
     186: invokeinterface #46,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     191: ldc           #47                 // String The asyncPredicate returned a null value
     193: invokestatic  #48                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     196: checkcast     #49                 // class org/reactivestreams/Publisher
     199: astore        17
     201: goto          224
     204: astore        18
     206: aload         18
     208: invokestatic  #51                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     211: getstatic     #13                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     214: aload_0
     215: aload         18
     217: invokestatic  #52                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     220: pop
     221: aconst_null
     222: astore        17
     224: aload         17
     226: ifnull        357
     229: aload         17
     231: instanceof    #53                 // class java/util/concurrent/Callable
     234: ifeq          304
     237: aload         17
     239: checkcast     #53                 // class java/util/concurrent/Callable
     242: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
     247: checkcast     #55                 // class java/lang/Boolean
     250: astore        18
     252: goto          275
     255: astore        19
     257: aload         19
     259: invokestatic  #51                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     262: getstatic     #13                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     265: aload_0
     266: aload         19
     268: invokestatic  #52                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     271: pop
     272: aconst_null
     273: astore        18
     275: aload         18
     277: ifnull        301
     280: aload         18
     282: invokevirtual #56                 // Method java/lang/Boolean.booleanValue:()Z
     285: ifeq          301
     288: aload         9
     290: aload         14
     292: invokeinterface #57,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     297: lload_3
     298: lconst_1
     299: ladd
     300: lstore_3
     301: goto          357
     304: new           #28                 // class reactor/core/publisher/FluxFilterWhen$FilterWhenInner
     307: dup
     308: aload_0
     309: aload         17
     311: instanceof    #58                 // class reactor/core/publisher/Mono
     314: ifne          321
     317: iconst_1
     318: goto          322
     321: iconst_0
     322: invokespecial #59                 // Method reactor/core/publisher/FluxFilterWhen$FilterWhenInner."<init>":(Lreactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber;Z)V
     325: astore        18
     327: getstatic     #26                 // Field CURRENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     330: aload_0
     331: aconst_null
     332: aload         18
     334: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     337: ifeq          357
     340: aload_0
     341: iconst_1
     342: putfield      #45                 // Field state:I
     345: aload         17
     347: aload         18
     349: invokeinterface #62,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     354: goto          489
     357: aload_0
     358: getfield      #6                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     361: iload         13
     363: aconst_null
     364: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
     367: lload         5
     369: lconst_1
     370: ladd
     371: lstore        5
     373: iinc          7, 1
     376: iload         7
     378: iload_2
     379: if_icmpne     396
     382: iconst_0
     383: istore        7
     385: aload_0
     386: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
     389: iload_2
     390: i2l
     391: invokeinterface #35,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     396: goto          486
     399: iload         16
     401: iconst_2
     402: if_icmpne     489
     405: aload_0
     406: getfield      #32                 // Field innerResult:Ljava/lang/Boolean;
     409: astore        17
     411: aload_0
     412: aconst_null
     413: putfield      #32                 // Field innerResult:Ljava/lang/Boolean;
     416: aload         17
     418: ifnull        442
     421: aload         17
     423: invokevirtual #56                 // Method java/lang/Boolean.booleanValue:()Z
     426: ifeq          442
     429: aload         9
     431: aload         14
     433: invokeinterface #57,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     438: lload_3
     439: lconst_1
     440: ladd
     441: lstore_3
     442: aload_0
     443: getfield      #6                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     446: iload         13
     448: aconst_null
     449: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
     452: lload         5
     454: lconst_1
     455: ladd
     456: lstore        5
     458: iinc          7, 1
     461: iload         7
     463: iload_2
     464: if_icmpne     481
     467: iconst_0
     468: istore        7
     470: aload_0
     471: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
     474: iload_2
     475: i2l
     476: invokeinterface #35,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     481: aload_0
     482: iconst_0
     483: putfield      #45                 // Field state:I
     486: goto          61
     489: lload_3
     490: lload         10
     492: lcmp
     493: ifne          589
     496: aload_0
     497: getfield      #19                 // Field cancelled:Z
     500: ifeq          508
     503: aload_0
     504: invokevirtual #25                 // Method clear:()V
     507: return
     508: aload_0
     509: getfield      #15                 // Field done:Z
     512: istore        12
     514: lload         5
     516: l2i
     517: iload         8
     519: iand
     520: istore        13
     522: aload_0
     523: getfield      #6                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     526: iload         13
     528: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
     531: astore        14
     533: aload         14
     535: ifnonnull     542
     538: iconst_1
     539: goto          543
     542: iconst_0
     543: istore        15
     545: iload         12
     547: ifeq          589
     550: iload         15
     552: ifeq          589
     555: getstatic     #13                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     558: aload_0
     559: invokestatic  #42                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     562: astore        16
     564: aload         16
     566: ifnonnull     579
     569: aload         9
     571: invokeinterface #43,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     576: goto          588
     579: aload         9
     581: aload         16
     583: invokeinterface #44,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     588: return
     589: aload_0
     590: getfield      #63                 // Field wip:I
     593: istore        12
     595: iload_1
     596: iload         12
     598: if_icmpne     635
     601: aload_0
     602: iload         7
     604: putfield      #39                 // Field consumed:I
     607: aload_0
     608: lload         5
     610: putfield      #38                 // Field consumerIndex:J
     613: aload_0
     614: lload_3
     615: putfield      #37                 // Field emitted:J
     618: getstatic     #23                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     621: aload_0
     622: iload_1
     623: ineg
     624: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     627: istore_1
     628: iload_1
     629: ifne          638
     632: goto          641
     635: iload         12
     637: istore_1
     638: goto          55
     641: return
    Exception table:
       from    to  target type
         180   201   204   Class java/lang/Throwable
         237   252   255   Class java/lang/Throwable

  void clearCurrent();
    Code:
       0: aload_0
       1: getfield      #65                 // Field current:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
       4: astore_1
       5: aload_1
       6: getstatic     #29                 // Field INNER_CANCELLED:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
       9: if_acmpeq     22
      12: getstatic     #26                 // Field CURRENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: aload_1
      17: aconst_null
      18: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      21: pop
      22: return

  void innerResult(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field innerResult:Ljava/lang/Boolean;
       5: aload_0
       6: iconst_2
       7: putfield      #45                 // Field state:I
      10: aload_0
      11: invokevirtual #66                 // Method clearCurrent:()V
      14: aload_0
      15: invokevirtual #12                 // Method drain:()V
      18: return

  void innerError(java.lang.Throwable);
    Code:
       0: getstatic     #13                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #52                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: pop
       9: aload_0
      10: iconst_2
      11: putfield      #45                 // Field state:I
      14: aload_0
      15: invokevirtual #66                 // Method clearCurrent:()V
      18: aload_0
      19: invokevirtual #12                 // Method drain:()V
      22: return

  void innerComplete();
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #45                 // Field state:I
       5: aload_0
       6: invokevirtual #66                 // Method clearCurrent:()V
       9: aload_0
      10: invokevirtual #12                 // Method drain:()V
      13: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #67                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #68                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #15                 // Field done:Z
      23: invokestatic  #69                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_1
      28: getstatic     #70                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      31: if_acmpne     42
      34: aload_0
      35: getfield      #19                 // Field cancelled:Z
      38: invokestatic  #69                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: areturn
      42: aload_1
      43: getstatic     #71                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      46: if_acmpne     54
      49: aload_0
      50: getfield      #72                 // Field error:Ljava/lang/Throwable;
      53: areturn
      54: aload_1
      55: getstatic     #73                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      58: if_acmpne     69
      61: aload_0
      62: getfield      #40                 // Field requested:J
      65: invokestatic  #74                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      68: areturn
      69: aload_1
      70: getstatic     #75                 // Field reactor/core/Scannable$Attr.CAPACITY:Lreactor/core/Scannable$Attr;
      73: if_acmpne     87
      76: aload_0
      77: getfield      #6                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      80: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReferenceArray.length:()I
      83: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      86: areturn
      87: aload_1
      88: getstatic     #77                 // Field reactor/core/Scannable$Attr.LARGE_BUFFERED:Lreactor/core/Scannable$Attr;
      91: if_acmpne     107
      94: aload_0
      95: getfield      #9                  // Field producerIndex:J
      98: aload_0
      99: getfield      #38                 // Field consumerIndex:J
     102: lsub
     103: invokestatic  #74                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     106: areturn
     107: aload_1
     108: getstatic     #78                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
     111: if_acmpne     144
     114: aload_0
     115: getfield      #9                  // Field producerIndex:J
     118: aload_0
     119: getfield      #38                 // Field consumerIndex:J
     122: lsub
     123: lstore_2
     124: lload_2
     125: ldc2_w        #80                 // long 2147483647l
     128: lcmp
     129: ifgt          138
     132: lload_2
     133: l2i
     134: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     137: areturn
     138: ldc           #82                 // int -2147483648
     140: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     143: areturn
     144: aload_1
     145: getstatic     #83                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
     148: if_acmpne     159
     151: aload_0
     152: getfield      #8                  // Field bufferSize:I
     155: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     158: areturn
     159: aload_0
     160: aload_1
     161: invokespecial #84                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
     164: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #65                 // Field current:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
       4: astore_1
       5: aload_1
       6: ifnonnull     15
       9: invokestatic  #85                 // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
      12: goto          19
      15: aload_1
      16: invokestatic  #86                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      19: areturn

  static {};
    Code:
       0: ldc           #61                 // class reactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber
       2: ldc           #50                 // class java/lang/Throwable
       4: ldc           #87                 // String error
       6: invokestatic  #88                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #13                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #61                 // class reactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber
      14: ldc           #89                 // String requested
      16: invokestatic  #90                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      19: putstatic     #17                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      22: ldc           #61                 // class reactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber
      24: ldc           #91                 // String wip
      26: invokestatic  #92                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      29: putstatic     #23                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      32: ldc           #61                 // class reactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber
      34: ldc           #28                 // class reactor/core/publisher/FluxFilterWhen$FilterWhenInner
      36: ldc           #93                 // String current
      38: invokestatic  #88                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      41: putstatic     #26                 // Field CURRENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      44: new           #28                 // class reactor/core/publisher/FluxFilterWhen$FilterWhenInner
      47: dup
      48: aconst_null
      49: iconst_0
      50: invokespecial #59                 // Method reactor/core/publisher/FluxFilterWhen$FilterWhenInner."<init>":(Lreactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber;Z)V
      53: putstatic     #29                 // Field INNER_CANCELLED:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
      56: return
}
