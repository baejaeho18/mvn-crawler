Compiled from "MonoFilterWhen.java"
final class reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain<T> extends reactor.core.publisher.Operators$MonoSubscriber<T, T> {
  final java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<java.lang.Boolean>> asyncPredicate;

  boolean sourceValued;

  org.reactivestreams.Subscription upstream;

  volatile reactor.core.publisher.MonoFilterWhen$FilterWhenInner asyncFilter;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain, reactor.core.publisher.MonoFilterWhen$FilterWhenInner> ASYNC_FILTER;

  static final reactor.core.publisher.MonoFilterWhen$FilterWhenInner INNER_CANCELLED;

  reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain(reactor.core.CoreSubscriber<? super T>, java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<java.lang.Boolean>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field asyncPredicate:Ljava/util/function/Function;
      10: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #3                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #4                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          35
      11: aload_0
      12: aload_1
      13: putfield      #3                  // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #5                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #6,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: ldc2_w        #8                  // long 9223372036854775807l
      30: invokeinterface #10,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      35: return

  public void onNext(T);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #11                 // Field sourceValued:Z
       5: aload_0
       6: aload_1
       7: invokevirtual #12                 // Method setValue:(Ljava/lang/Object;)V
      10: aload_0
      11: getfield      #2                  // Field asyncPredicate:Ljava/util/function/Function;
      14: aload_1
      15: invokeinterface #13,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: ldc           #14                 // String The asyncPredicate returned a null value
      22: invokestatic  #15                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      25: checkcast     #16                 // class org/reactivestreams/Publisher
      28: astore_2
      29: goto          43
      32: astore_3
      33: aload_3
      34: invokestatic  #18                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      37: aload_0
      38: aload_3
      39: invokespecial #19                 // Method reactor/core/publisher/Operators$MonoSubscriber.onError:(Ljava/lang/Throwable;)V
      42: return
      43: aload_2
      44: instanceof    #20                 // class java/util/concurrent/Callable
      47: ifeq          111
      50: aload_2
      51: checkcast     #20                 // class java/util/concurrent/Callable
      54: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      59: checkcast     #22                 // class java/lang/Boolean
      62: astore_3
      63: goto          80
      66: astore        4
      68: aload         4
      70: invokestatic  #18                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      73: aload_0
      74: aload         4
      76: invokespecial #19                 // Method reactor/core/publisher/Operators$MonoSubscriber.onError:(Ljava/lang/Throwable;)V
      79: return
      80: aload_3
      81: ifnull        99
      84: aload_3
      85: invokevirtual #23                 // Method java/lang/Boolean.booleanValue:()Z
      88: ifeq          99
      91: aload_0
      92: aload_1
      93: invokevirtual #24                 // Method complete:(Ljava/lang/Object;)V
      96: goto          108
      99: aload_0
     100: getfield      #5                  // Field actual:Lreactor/core/CoreSubscriber;
     103: invokeinterface #25,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     108: goto          151
     111: new           #26                 // class reactor/core/publisher/MonoFilterWhen$FilterWhenInner
     114: dup
     115: aload_0
     116: aload_2
     117: instanceof    #27                 // class reactor/core/publisher/Mono
     120: ifne          127
     123: iconst_1
     124: goto          128
     127: iconst_0
     128: invokespecial #28                 // Method reactor/core/publisher/MonoFilterWhen$FilterWhenInner."<init>":(Lreactor/core/publisher/MonoFilterWhen$MonoFilterWhenMain;Z)V
     131: astore_3
     132: getstatic     #29                 // Field ASYNC_FILTER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     135: aload_0
     136: aconst_null
     137: aload_3
     138: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     141: ifeq          151
     144: aload_2
     145: aload_3
     146: invokeinterface #31,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     151: return
    Exception table:
       from    to  target type
          10    29    32   Class java/lang/Throwable
          50    63    66   Class java/lang/Throwable

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #11                 // Field sourceValued:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #32                 // Method reactor/core/publisher/Operators$MonoSubscriber.onComplete:()V
      11: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #33                 // Field reactor/core/publisher/Operators$MonoSubscriber.state:I
       4: iconst_4
       5: if_icmpeq     25
       8: aload_0
       9: invokespecial #35                 // Method reactor/core/publisher/Operators$MonoSubscriber.cancel:()V
      12: aload_0
      13: getfield      #3                  // Field upstream:Lorg/reactivestreams/Subscription;
      16: invokeinterface #36,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      21: aload_0
      22: invokevirtual #37                 // Method cancelInner:()V
      25: return

  void cancelInner();
    Code:
       0: aload_0
       1: getfield      #38                 // Field asyncFilter:Lreactor/core/publisher/MonoFilterWhen$FilterWhenInner;
       4: astore_1
       5: aload_1
       6: getstatic     #39                 // Field INNER_CANCELLED:Lreactor/core/publisher/MonoFilterWhen$FilterWhenInner;
       9: if_acmpeq     41
      12: getstatic     #29                 // Field ASYNC_FILTER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: getstatic     #39                 // Field INNER_CANCELLED:Lreactor/core/publisher/MonoFilterWhen$FilterWhenInner;
      19: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #26                 // class reactor/core/publisher/MonoFilterWhen$FilterWhenInner
      25: astore_1
      26: aload_1
      27: ifnull        41
      30: aload_1
      31: getstatic     #39                 // Field INNER_CANCELLED:Lreactor/core/publisher/MonoFilterWhen$FilterWhenInner;
      34: if_acmpeq     41
      37: aload_1
      38: invokevirtual #41                 // Method reactor/core/publisher/MonoFilterWhen$FilterWhenInner.cancel:()V
      41: return

  void innerResult(java.lang.Boolean);
    Code:
       0: aload_1
       1: ifnull        22
       4: aload_1
       5: invokevirtual #23                 // Method java/lang/Boolean.booleanValue:()Z
       8: ifeq          22
      11: aload_0
      12: aload_0
      13: getfield      #42                 // Field value:Ljava/lang/Object;
      16: invokevirtual #24                 // Method complete:(Ljava/lang/Object;)V
      19: goto          26
      22: aload_0
      23: invokespecial #32                 // Method reactor/core/publisher/Operators$MonoSubscriber.onComplete:()V
      26: return

  void innerError(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method reactor/core/publisher/Operators$MonoSubscriber.onError:(Ljava/lang/Throwable;)V
       5: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #43                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #3                  // Field upstream:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #44                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     47
      19: aload_0
      20: getfield      #38                 // Field asyncFilter:Lreactor/core/publisher/MonoFilterWhen$FilterWhenInner;
      23: ifnull        39
      26: aload_0
      27: getfield      #38                 // Field asyncFilter:Lreactor/core/publisher/MonoFilterWhen$FilterWhenInner;
      30: getstatic     #44                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      33: invokevirtual #45                 // Method reactor/core/publisher/MonoFilterWhen$FilterWhenInner.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      36: goto          46
      39: aload_0
      40: getstatic     #44                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      43: invokespecial #46                 // Method reactor/core/publisher/Operators$MonoSubscriber.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      46: areturn
      47: aload_0
      48: aload_1
      49: invokespecial #46                 // Method reactor/core/publisher/Operators$MonoSubscriber.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      52: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #38                 // Field asyncFilter:Lreactor/core/publisher/MonoFilterWhen$FilterWhenInner;
       4: astore_1
       5: aload_1
       6: ifnonnull     15
       9: invokestatic  #47                 // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
      12: goto          19
      15: aload_1
      16: invokestatic  #48                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      19: areturn

  static {};
    Code:
       0: ldc           #49                 // class reactor/core/publisher/MonoFilterWhen$MonoFilterWhenMain
       2: ldc           #26                 // class reactor/core/publisher/MonoFilterWhen$FilterWhenInner
       4: ldc           #50                 // String asyncFilter
       6: invokestatic  #51                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #29                 // Field ASYNC_FILTER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: new           #26                 // class reactor/core/publisher/MonoFilterWhen$FilterWhenInner
      15: dup
      16: aconst_null
      17: iconst_0
      18: invokespecial #28                 // Method reactor/core/publisher/MonoFilterWhen$FilterWhenInner."<init>":(Lreactor/core/publisher/MonoFilterWhen$MonoFilterWhenMain;Z)V
      21: putstatic     #39                 // Field INNER_CANCELLED:Lreactor/core/publisher/MonoFilterWhen$FilterWhenInner;
      24: return
}
