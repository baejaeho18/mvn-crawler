Compiled from "FluxBuffer.java"
final class reactor.core.publisher.FluxBuffer$BufferExactSubscriber<T, C extends java.util.Collection<? super T>> implements reactor.core.publisher.InnerOperator<T, C> {
  final reactor.core.CoreSubscriber<? super C> actual;

  final java.util.function.Supplier<C> bufferSupplier;

  final int size;

  C buffer;

  org.reactivestreams.Subscription s;

  boolean done;

  reactor.core.publisher.FluxBuffer$BufferExactSubscriber(reactor.core.CoreSubscriber<? super C>, int, java.util.function.Supplier<C>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field size:I
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field bufferSupplier:Ljava/util/function/Supplier;
      19: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #5                  // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          25
       7: aload_0
       8: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      11: lload_1
      12: aload_0
      13: getfield      #3                  // Field size:I
      16: i2l
      17: invokestatic  #7                  // Method reactor/core/publisher/Operators.multiplyCap:(JJ)J
      20: invokeinterface #8,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      25: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #9,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #10                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #11,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #12                 // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #13,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #14                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: getfield      #15                 // Field buffer:Ljava/util/Collection;
      25: astore_2
      26: aload_2
      27: ifnonnull     80
      30: aload_0
      31: getfield      #4                  // Field bufferSupplier:Ljava/util/function/Supplier;
      34: invokeinterface #16,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      39: ldc           #17                 // String The bufferSupplier returned a null buffer
      41: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      44: checkcast     #19                 // class java/util/Collection
      47: astore_2
      48: goto          75
      51: astore_3
      52: aload_0
      53: aload_0
      54: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      57: aload_3
      58: aload_1
      59: aload_0
      60: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      63: invokeinterface #13,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      68: invokestatic  #21                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      71: invokevirtual #22                 // Method onError:(Ljava/lang/Throwable;)V
      74: return
      75: aload_0
      76: aload_2
      77: putfield      #15                 // Field buffer:Ljava/util/Collection;
      80: aload_2
      81: aload_1
      82: invokeinterface #23,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      87: pop
      88: aload_2
      89: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.size:()I
      94: aload_0
      95: getfield      #3                  // Field size:I
      98: if_icmpne     116
     101: aload_0
     102: aconst_null
     103: putfield      #15                 // Field buffer:Ljava/util/Collection;
     106: aload_0
     107: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     110: aload_2
     111: invokeinterface #25,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     116: return
    Exception table:
       from    to  target type
          30    48    51   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #13,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #26                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #12                 // Field done:Z
      26: aload_0
      27: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: invokeinterface #27,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #12                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #12                 // Field done:Z
      13: aload_0
      14: getfield      #15                 // Field buffer:Ljava/util/Collection;
      17: astore_1
      18: aload_1
      19: ifnull        41
      22: aload_1
      23: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      28: ifne          41
      31: aload_0
      32: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      35: aload_1
      36: invokeinterface #25,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      41: aload_0
      42: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      45: invokeinterface #29,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      50: return

  public reactor.core.CoreSubscriber<? super C> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #30                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #31                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #12                 // Field done:Z
      23: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_1
      28: getstatic     #33                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      31: if_acmpne     57
      34: aload_0
      35: getfield      #15                 // Field buffer:Ljava/util/Collection;
      38: astore_2
      39: aload_2
      40: ifnull        52
      43: aload_2
      44: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.size:()I
      49: goto          53
      52: iconst_0
      53: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: areturn
      57: aload_1
      58: getstatic     #35                 // Field reactor/core/Scannable$Attr.CAPACITY:Lreactor/core/Scannable$Attr;
      61: if_acmpne     72
      64: aload_0
      65: getfield      #3                  // Field size:I
      68: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: areturn
      72: aload_1
      73: getstatic     #36                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      76: if_acmpne     87
      79: aload_0
      80: getfield      #3                  // Field size:I
      83: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      86: areturn
      87: aload_0
      88: aload_1
      89: invokespecial #37                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      92: areturn
}
