Compiled from "MonoSequenceEqual.java"
final class reactor.core.publisher.MonoSequenceEqual$EqualCoordinator<T> implements reactor.core.publisher.InnerProducer<java.lang.Boolean> {
  final reactor.core.CoreSubscriber<? super java.lang.Boolean> actual;

  final java.util.function.BiPredicate<? super T, ? super T> comparer;

  final org.reactivestreams.Publisher<? extends T> first;

  final org.reactivestreams.Publisher<? extends T> second;

  final reactor.core.publisher.MonoSequenceEqual$EqualSubscriber<T> firstSubscriber;

  final reactor.core.publisher.MonoSequenceEqual$EqualSubscriber<T> secondSubscriber;

  volatile boolean cancelled;

  volatile int once;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.MonoSequenceEqual$EqualCoordinator> ONCE;

  T v1;

  T v2;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.MonoSequenceEqual$EqualCoordinator> WIP;

  reactor.core.publisher.MonoSequenceEqual$EqualCoordinator(reactor.core.CoreSubscriber<? super java.lang.Boolean>, int, org.reactivestreams.Publisher<? extends T>, org.reactivestreams.Publisher<? extends T>, java.util.function.BiPredicate<? super T, ? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field first:Lorg/reactivestreams/Publisher;
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field second:Lorg/reactivestreams/Publisher;
      20: aload_0
      21: aload         5
      23: putfield      #5                  // Field comparer:Ljava/util/function/BiPredicate;
      26: aload_0
      27: new           #6                  // class reactor/core/publisher/MonoSequenceEqual$EqualSubscriber
      30: dup
      31: aload_0
      32: iload_2
      33: invokespecial #7                  // Method reactor/core/publisher/MonoSequenceEqual$EqualSubscriber."<init>":(Lreactor/core/publisher/MonoSequenceEqual$EqualCoordinator;I)V
      36: putfield      #8                  // Field firstSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      39: aload_0
      40: new           #6                  // class reactor/core/publisher/MonoSequenceEqual$EqualSubscriber
      43: dup
      44: aload_0
      45: iload_2
      46: invokespecial #7                  // Method reactor/core/publisher/MonoSequenceEqual$EqualSubscriber."<init>":(Lreactor/core/publisher/MonoSequenceEqual$EqualCoordinator;I)V
      49: putfield      #9                  // Field secondSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      52: return

  public reactor.core.CoreSubscriber<? super java.lang.Boolean> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #10                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #11                 // Field cancelled:Z
      11: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_0
      16: aload_1
      17: invokespecial #13                 // InterfaceMethod reactor/core/publisher/InnerProducer.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      20: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: iconst_2
       1: anewarray     #6                  // class reactor/core/publisher/MonoSequenceEqual$EqualSubscriber
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #8                  // Field firstSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #9                  // Field secondSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      17: aastore
      18: invokestatic  #14                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      21: areturn

  void subscribe();
    Code:
       0: getstatic     #15                 // Field ONCE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_0
       5: iconst_1
       6: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifeq          38
      12: aload_0
      13: getfield      #3                  // Field first:Lorg/reactivestreams/Publisher;
      16: aload_0
      17: getfield      #8                  // Field firstSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      20: invokeinterface #17,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      25: aload_0
      26: getfield      #4                  // Field second:Lorg/reactivestreams/Publisher;
      29: aload_0
      30: getfield      #9                  // Field secondSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      33: invokeinterface #17,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      38: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #18                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifne          8
       7: return
       8: getstatic     #15                 // Field ONCE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      11: aload_0
      12: iconst_0
      13: iconst_1
      14: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      17: ifeq          46
      20: aload_0
      21: getfield      #3                  // Field first:Lorg/reactivestreams/Publisher;
      24: aload_0
      25: getfield      #8                  // Field firstSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      28: invokeinterface #17,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      33: aload_0
      34: getfield      #4                  // Field second:Lorg/reactivestreams/Publisher;
      37: aload_0
      38: getfield      #9                  // Field secondSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      41: invokeinterface #17,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      46: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #11                 // Field cancelled:Z
       4: ifne          62
       7: aload_0
       8: iconst_1
       9: putfield      #11                 // Field cancelled:Z
      12: aload_0
      13: aload_0
      14: getfield      #8                  // Field firstSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      17: invokevirtual #19                 // Method cancelInner:(Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;)V
      20: aload_0
      21: aload_0
      22: getfield      #9                  // Field secondSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      25: invokevirtual #19                 // Method cancelInner:(Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;)V
      28: getstatic     #20                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      31: aload_0
      32: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      35: ifne          62
      38: aload_0
      39: getfield      #8                  // Field firstSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      42: getfield      #22                 // Field reactor/core/publisher/MonoSequenceEqual$EqualSubscriber.queue:Ljava/util/Queue;
      45: invokeinterface #23,  1           // InterfaceMethod java/util/Queue.clear:()V
      50: aload_0
      51: getfield      #9                  // Field secondSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      54: getfield      #22                 // Field reactor/core/publisher/MonoSequenceEqual$EqualSubscriber.queue:Ljava/util/Queue;
      57: invokeinterface #23,  1           // InterfaceMethod java/util/Queue.clear:()V
      62: return

  void cancel(reactor.core.publisher.MonoSequenceEqual$EqualSubscriber<T>, java.util.Queue<T>, reactor.core.publisher.MonoSequenceEqual$EqualSubscriber<T>, java.util.Queue<T>);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #11                 // Field cancelled:Z
       5: aload_0
       6: aload_1
       7: invokevirtual #19                 // Method cancelInner:(Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;)V
      10: aload_2
      11: invokeinterface #23,  1           // InterfaceMethod java/util/Queue.clear:()V
      16: aload_0
      17: aload_3
      18: invokevirtual #19                 // Method cancelInner:(Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;)V
      21: aload         4
      23: invokeinterface #23,  1           // InterfaceMethod java/util/Queue.clear:()V
      28: return

  void cancelInner(reactor.core.publisher.MonoSequenceEqual$EqualSubscriber<T>);
    Code:
       0: aload_1
       1: getfield      #24                 // Field reactor/core/publisher/MonoSequenceEqual$EqualSubscriber.subscription:Lorg/reactivestreams/Subscription;
       4: astore_2
       5: aload_2
       6: invokestatic  #25                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
       9: if_acmpeq     43
      12: getstatic     #26                 // Field reactor/core/publisher/MonoSequenceEqual$EqualSubscriber.S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_1
      16: invokestatic  #25                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      19: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #28                 // class org/reactivestreams/Subscription
      25: astore_2
      26: aload_2
      27: ifnull        43
      30: aload_2
      31: invokestatic  #25                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      34: if_acmpeq     43
      37: aload_2
      38: invokeinterface #29,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      43: return

  void drain();
    Code:
       0: getstatic     #20                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: iconst_1
      12: istore_1
      13: aload_0
      14: getfield      #8                  // Field firstSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      17: astore_2
      18: aload_2
      19: getfield      #22                 // Field reactor/core/publisher/MonoSequenceEqual$EqualSubscriber.queue:Ljava/util/Queue;
      22: astore_3
      23: aload_0
      24: getfield      #9                  // Field secondSubscriber:Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;
      27: astore        4
      29: aload         4
      31: getfield      #22                 // Field reactor/core/publisher/MonoSequenceEqual$EqualSubscriber.queue:Ljava/util/Queue;
      34: astore        5
      36: lconst_0
      37: lstore        6
      39: aload_0
      40: getfield      #11                 // Field cancelled:Z
      43: ifeq          60
      46: aload_3
      47: invokeinterface #23,  1           // InterfaceMethod java/util/Queue.clear:()V
      52: aload         5
      54: invokeinterface #23,  1           // InterfaceMethod java/util/Queue.clear:()V
      59: return
      60: aload_2
      61: getfield      #30                 // Field reactor/core/publisher/MonoSequenceEqual$EqualSubscriber.done:Z
      64: istore        8
      66: iload         8
      68: ifeq          104
      71: aload_2
      72: getfield      #31                 // Field reactor/core/publisher/MonoSequenceEqual$EqualSubscriber.error:Ljava/lang/Throwable;
      75: astore        9
      77: aload         9
      79: ifnull        104
      82: aload_0
      83: aload_2
      84: aload_3
      85: aload         4
      87: aload         5
      89: invokevirtual #32                 // Method cancel:(Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;Ljava/util/Queue;Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;Ljava/util/Queue;)V
      92: aload_0
      93: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      96: aload         9
      98: invokeinterface #33,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     103: return
     104: aload         4
     106: getfield      #30                 // Field reactor/core/publisher/MonoSequenceEqual$EqualSubscriber.done:Z
     109: istore        9
     111: iload         9
     113: ifeq          150
     116: aload         4
     118: getfield      #31                 // Field reactor/core/publisher/MonoSequenceEqual$EqualSubscriber.error:Ljava/lang/Throwable;
     121: astore        10
     123: aload         10
     125: ifnull        150
     128: aload_0
     129: aload_2
     130: aload_3
     131: aload         4
     133: aload         5
     135: invokevirtual #32                 // Method cancel:(Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;Ljava/util/Queue;Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;Ljava/util/Queue;)V
     138: aload_0
     139: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     142: aload         10
     144: invokeinterface #33,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     149: return
     150: aload_0
     151: getfield      #34                 // Field v1:Ljava/lang/Object;
     154: ifnonnull     167
     157: aload_0
     158: aload_3
     159: invokeinterface #35,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     164: putfield      #34                 // Field v1:Ljava/lang/Object;
     167: aload_0
     168: getfield      #34                 // Field v1:Ljava/lang/Object;
     171: ifnonnull     178
     174: iconst_1
     175: goto          179
     178: iconst_0
     179: istore        10
     181: aload_0
     182: getfield      #36                 // Field v2:Ljava/lang/Object;
     185: ifnonnull     199
     188: aload_0
     189: aload         5
     191: invokeinterface #35,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     196: putfield      #36                 // Field v2:Ljava/lang/Object;
     199: aload_0
     200: getfield      #36                 // Field v2:Ljava/lang/Object;
     203: ifnonnull     210
     206: iconst_1
     207: goto          211
     210: iconst_0
     211: istore        11
     213: iload         8
     215: ifeq          256
     218: iload         9
     220: ifeq          256
     223: iload         10
     225: ifeq          256
     228: iload         11
     230: ifeq          256
     233: aload_0
     234: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     237: iconst_1
     238: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     241: invokeinterface #37,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     246: aload_0
     247: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     250: invokeinterface #38,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     255: return
     256: iload         8
     258: ifeq          306
     261: iload         9
     263: ifeq          306
     266: iload         10
     268: iload         11
     270: if_icmpeq     306
     273: aload_0
     274: aload_2
     275: aload_3
     276: aload         4
     278: aload         5
     280: invokevirtual #32                 // Method cancel:(Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;Ljava/util/Queue;Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;Ljava/util/Queue;)V
     283: aload_0
     284: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     287: iconst_0
     288: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     291: invokeinterface #37,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     296: aload_0
     297: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     300: invokeinterface #38,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     305: return
     306: iload         10
     308: ifne          433
     311: iload         11
     313: ifne          433
     316: aload_0
     317: getfield      #5                  // Field comparer:Ljava/util/function/BiPredicate;
     320: aload_0
     321: getfield      #34                 // Field v1:Ljava/lang/Object;
     324: aload_0
     325: getfield      #36                 // Field v2:Ljava/lang/Object;
     328: invokeinterface #39,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
     333: istore        12
     335: goto          379
     338: astore        13
     340: aload         13
     342: invokestatic  #41                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     345: aload_0
     346: aload_2
     347: aload_3
     348: aload         4
     350: aload         5
     352: invokevirtual #32                 // Method cancel:(Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;Ljava/util/Queue;Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;Ljava/util/Queue;)V
     355: aload_0
     356: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     359: aload         13
     361: aload_0
     362: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     365: invokeinterface #42,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     370: invokestatic  #43                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     373: invokeinterface #33,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     378: return
     379: iload         12
     381: ifne          417
     384: aload_0
     385: aload_2
     386: aload_3
     387: aload         4
     389: aload         5
     391: invokevirtual #32                 // Method cancel:(Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;Ljava/util/Queue;Lreactor/core/publisher/MonoSequenceEqual$EqualSubscriber;Ljava/util/Queue;)V
     394: aload_0
     395: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     398: iconst_0
     399: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     402: invokeinterface #37,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     407: aload_0
     408: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     411: invokeinterface #38,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     416: return
     417: lload         6
     419: lconst_1
     420: ladd
     421: lstore        6
     423: aload_0
     424: aconst_null
     425: putfield      #34                 // Field v1:Ljava/lang/Object;
     428: aload_0
     429: aconst_null
     430: putfield      #36                 // Field v2:Ljava/lang/Object;
     433: iload         10
     435: ifne          449
     438: iload         11
     440: ifeq          446
     443: goto          449
     446: goto          39
     449: lload         6
     451: lconst_0
     452: lcmp
     453: ifeq          479
     456: aload_2
     457: getfield      #44                 // Field reactor/core/publisher/MonoSequenceEqual$EqualSubscriber.cachedSubscription:Lorg/reactivestreams/Subscription;
     460: lload         6
     462: invokeinterface #45,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     467: aload         4
     469: getfield      #44                 // Field reactor/core/publisher/MonoSequenceEqual$EqualSubscriber.cachedSubscription:Lorg/reactivestreams/Subscription;
     472: lload         6
     474: invokeinterface #45,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     479: getstatic     #20                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     482: aload_0
     483: iload_1
     484: ineg
     485: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     488: istore_1
     489: iload_1
     490: ifne          496
     493: goto          499
     496: goto          36
     499: return
    Exception table:
       from    to  target type
         316   335   338   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #47                 // class reactor/core/publisher/MonoSequenceEqual$EqualCoordinator
       2: ldc           #48                 // String once
       4: invokestatic  #49                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #15                 // Field ONCE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: ldc           #47                 // class reactor/core/publisher/MonoSequenceEqual$EqualCoordinator
      12: ldc           #50                 // String wip
      14: invokestatic  #49                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      17: putstatic     #20                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: return
}
