Compiled from "FluxPublish.java"
final class reactor.core.publisher.FluxPublish$PublishInner<T> extends reactor.core.publisher.FluxPublish$PubSubInner<T> {
  reactor.core.publisher.FluxPublish$PublishSubscriber<T> parent;

  reactor.core.publisher.FluxPublish$PublishInner(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxPublish$PubSubInner."<init>":(Lreactor/core/CoreSubscriber;)V
       5: return

  void drainParent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/FluxPublish$PublishSubscriber;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: invokevirtual #3                  // Method reactor/core/publisher/FluxPublish$PublishSubscriber.drain:()V
      13: return

  void removeAndDrainParent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/FluxPublish$PublishSubscriber;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: invokevirtual #3                  // Method reactor/core/publisher/FluxPublish$PublishSubscriber.drain:()V
      13: aload_1
      14: aload_0
      15: invokevirtual #4                  // Method reactor/core/publisher/FluxPublish$PublishSubscriber.remove:(Lreactor/core/publisher/FluxPublish$PubSubInner;)V
      18: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #2                  // Field parent:Lreactor/core/publisher/FluxPublish$PublishSubscriber;
      11: areturn
      12: aload_1
      13: getstatic     #6                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     45
      19: aload_0
      20: getfield      #2                  // Field parent:Lreactor/core/publisher/FluxPublish$PublishSubscriber;
      23: ifnull        40
      26: aload_0
      27: getfield      #2                  // Field parent:Lreactor/core/publisher/FluxPublish$PublishSubscriber;
      30: invokevirtual #7                  // Method reactor/core/publisher/FluxPublish$PublishSubscriber.isTerminated:()Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      44: areturn
      45: aload_0
      46: aload_1
      47: invokespecial #9                  // Method reactor/core/publisher/FluxPublish$PubSubInner.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      50: areturn
}
