Compiled from "MonoDelayUntil.java"
final class reactor.core.publisher.MonoDelayUntil$DelayUntilCoordinator<T> extends reactor.core.publisher.Operators$MonoSubscriber<T, T> {
  static final reactor.core.publisher.MonoDelayUntil$DelayUntilTrigger[] NO_TRIGGER;

  final int n;

  final java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<?>>[] otherGenerators;

  volatile int done;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.MonoDelayUntil$DelayUntilCoordinator> DONE;

  volatile org.reactivestreams.Subscription s;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.MonoDelayUntil$DelayUntilCoordinator, org.reactivestreams.Subscription> S;

  reactor.core.publisher.MonoDelayUntil$DelayUntilTrigger[] triggerSubscribers;

  reactor.core.publisher.MonoDelayUntil$DelayUntilCoordinator(reactor.core.CoreSubscriber<? super T>, java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<?>>[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field otherGenerators:[Ljava/util/function/Function;
      10: aload_0
      11: aload_2
      12: arraylength
      13: putfield      #3                  // Field n:I
      16: aload_0
      17: getstatic     #4                  // Field NO_TRIGGER:[Lreactor/core/publisher/MonoDelayUntil$DelayUntilTrigger;
      20: putfield      #5                  // Field triggerSubscribers:[Lreactor/core/publisher/MonoDelayUntil$DelayUntilTrigger;
      23: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #6                  // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #7                  // Method reactor/core/publisher/Operators.setOnce:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          23
      11: aload_1
      12: ldc2_w        #9                  // long 9223372036854775807l
      15: invokeinterface #11,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      20: goto          29
      23: aload_1
      24: invokeinterface #12,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      29: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #13                 // Field value:Ljava/lang/Object;
       4: ifnonnull     21
       7: aload_0
       8: aload_1
       9: invokevirtual #14                 // Method setValue:(Ljava/lang/Object;)V
      12: aload_0
      13: aload_1
      14: aload_0
      15: getfield      #15                 // Field done:I
      18: invokevirtual #16                 // Method subscribeNextTrigger:(Ljava/lang/Object;I)V
      21: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #17                 // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #13                 // Field value:Ljava/lang/Object;
       4: ifnonnull     16
       7: aload_0
       8: getfield      #17                 // Field actual:Lreactor/core/CoreSubscriber;
      11: invokeinterface #19,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      16: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #20                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     27
       7: aload_0
       8: getfield      #15                 // Field done:I
      11: aload_0
      12: getfield      #3                  // Field n:I
      15: if_icmpne     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #22                 // Method reactor/core/publisher/Operators$MonoSubscriber.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #5                  // Field triggerSubscribers:[Lreactor/core/publisher/MonoDelayUntil$DelayUntilTrigger;
       4: invokestatic  #23                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: areturn

  void subscribeNextTrigger(T, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field triggerSubscribers:[Lreactor/core/publisher/MonoDelayUntil$DelayUntilTrigger;
       4: getstatic     #4                  // Field NO_TRIGGER:[Lreactor/core/publisher/MonoDelayUntil$DelayUntilTrigger;
       7: if_acmpne     22
      10: aload_0
      11: aload_0
      12: getfield      #2                  // Field otherGenerators:[Ljava/util/function/Function;
      15: arraylength
      16: anewarray     #24                 // class reactor/core/publisher/MonoDelayUntil$DelayUntilTrigger
      19: putfield      #5                  // Field triggerSubscribers:[Lreactor/core/publisher/MonoDelayUntil$DelayUntilTrigger;
      22: aload_0
      23: getfield      #2                  // Field otherGenerators:[Ljava/util/function/Function;
      26: iload_2
      27: aaload
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #25,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #26                 // class org/reactivestreams/Publisher
      39: astore        4
      41: new           #24                 // class reactor/core/publisher/MonoDelayUntil$DelayUntilTrigger
      44: dup
      45: aload_0
      46: invokespecial #27                 // Method reactor/core/publisher/MonoDelayUntil$DelayUntilTrigger."<init>":(Lreactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator;)V
      49: astore        5
      51: aload_0
      52: getfield      #5                  // Field triggerSubscribers:[Lreactor/core/publisher/MonoDelayUntil$DelayUntilTrigger;
      55: iload_2
      56: aload         5
      58: aastore
      59: aload         4
      61: aload         5
      63: invokeinterface #28,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      68: return

  void signal();
    Code:
       0: getstatic     #29                 // Field DONE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
       7: istore_1
       8: iload_1
       9: aload_0
      10: getfield      #3                  // Field n:I
      13: if_icmpeq     26
      16: aload_0
      17: aload_0
      18: getfield      #13                 // Field value:Ljava/lang/Object;
      21: iload_1
      22: invokevirtual #16                 // Method subscribeNextTrigger:(Ljava/lang/Object;I)V
      25: return
      26: aconst_null
      27: astore_2
      28: aconst_null
      29: astore_3
      30: iconst_0
      31: istore        4
      33: iload         4
      35: aload_0
      36: getfield      #3                  // Field n:I
      39: if_icmpge     109
      42: aload_0
      43: getfield      #5                  // Field triggerSubscribers:[Lreactor/core/publisher/MonoDelayUntil$DelayUntilTrigger;
      46: iload         4
      48: aaload
      49: astore        5
      51: aload         5
      53: getfield      #31                 // Field reactor/core/publisher/MonoDelayUntil$DelayUntilTrigger.error:Ljava/lang/Throwable;
      56: astore        6
      58: aload         6
      60: ifnull        103
      63: aload_3
      64: ifnull        76
      67: aload_3
      68: aload         6
      70: invokevirtual #32                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      73: goto          103
      76: aload_2
      77: ifnull        100
      80: iconst_2
      81: anewarray     #33                 // class java/lang/Throwable
      84: dup
      85: iconst_0
      86: aload_2
      87: aastore
      88: dup
      89: iconst_1
      90: aload         6
      92: aastore
      93: invokestatic  #34                 // Method reactor/core/Exceptions.multiple:([Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      96: astore_3
      97: goto          103
     100: aload         6
     102: astore_2
     103: iinc          4, 1
     106: goto          33
     109: aload_3
     110: ifnull        126
     113: aload_0
     114: getfield      #17                 // Field actual:Lreactor/core/CoreSubscriber;
     117: aload_3
     118: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     123: goto          151
     126: aload_2
     127: ifnull        143
     130: aload_0
     131: getfield      #17                 // Field actual:Lreactor/core/CoreSubscriber;
     134: aload_2
     135: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     140: goto          151
     143: aload_0
     144: aload_0
     145: getfield      #13                 // Field value:Ljava/lang/Object;
     148: invokevirtual #35                 // Method complete:(Ljava/lang/Object;)V
     151: return

  public void cancel();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method isCancelled:()Z
       4: ifne          51
       7: aload_0
       8: invokespecial #37                 // Method reactor/core/publisher/Operators$MonoSubscriber.cancel:()V
      11: getstatic     #6                  // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      14: aload_0
      15: invokestatic  #38                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
      18: pop
      19: iconst_0
      20: istore_1
      21: iload_1
      22: aload_0
      23: getfield      #5                  // Field triggerSubscribers:[Lreactor/core/publisher/MonoDelayUntil$DelayUntilTrigger;
      26: arraylength
      27: if_icmpge     51
      30: aload_0
      31: getfield      #5                  // Field triggerSubscribers:[Lreactor/core/publisher/MonoDelayUntil$DelayUntilTrigger;
      34: iload_1
      35: aaload
      36: astore_2
      37: aload_2
      38: ifnull        45
      41: aload_2
      42: invokevirtual #39                 // Method reactor/core/publisher/MonoDelayUntil$DelayUntilTrigger.cancel:()V
      45: iinc          1, 1
      48: goto          21
      51: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #24                 // class reactor/core/publisher/MonoDelayUntil$DelayUntilTrigger
       4: putstatic     #4                  // Field NO_TRIGGER:[Lreactor/core/publisher/MonoDelayUntil$DelayUntilTrigger;
       7: ldc           #40                 // class reactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator
       9: ldc           #41                 // String done
      11: invokestatic  #42                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      14: putstatic     #29                 // Field DONE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      17: ldc           #40                 // class reactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator
      19: ldc           #43                 // class org/reactivestreams/Subscription
      21: ldc           #44                 // String s
      23: invokestatic  #45                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      26: putstatic     #6                  // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      29: return
}
