Compiled from "MonoCacheTime.java"
class reactor.core.publisher.MonoCacheTime<T> extends reactor.core.publisher.MonoOperator<T, T> implements java.lang.Runnable {
  private static final reactor.util.Logger LOGGER;

  final java.time.Duration ttl;

  final reactor.core.scheduler.Scheduler clock;

  volatile reactor.core.publisher.Signal<T> state;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.MonoCacheTime, reactor.core.publisher.Signal> STATE;

  static final reactor.core.publisher.Signal<?> EMPTY;

  reactor.core.publisher.MonoCacheTime(reactor.core.publisher.Mono<? extends T>, java.time.Duration, reactor.core.scheduler.Scheduler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoOperator."<init>":(Lreactor/core/publisher/Mono;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field ttl:Ljava/time/Duration;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field clock:Lreactor/core/scheduler/Scheduler;
      15: aload_0
      16: getstatic     #4                  // Field EMPTY:Lreactor/core/publisher/Signal;
      19: putfield      #5                  // Field state:Lreactor/core/publisher/Signal;
      22: return

  public void run();
    Code:
       0: getstatic     #6                  // Field LOGGER:Lreactor/util/Logger;
       3: ldc           #7                  // String expired {}
       5: iconst_1
       6: anewarray     #8                  // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_0
      12: getfield      #5                  // Field state:Lreactor/core/publisher/Signal;
      15: aastore
      16: invokeinterface #9,  3            // InterfaceMethod reactor/util/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      21: aload_0
      22: getstatic     #4                  // Field EMPTY:Lreactor/core/publisher/Signal;
      25: putfield      #5                  // Field state:Lreactor/core/publisher/Signal;
      28: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:Lreactor/core/publisher/Signal;
       4: astore_2
       5: aload_2
       6: getstatic     #4                  // Field EMPTY:Lreactor/core/publisher/Signal;
       9: if_acmpne     77
      12: new           #10                 // class reactor/core/publisher/MonoCacheTime$CoordinatorSubscriber
      15: dup
      16: aload_0
      17: invokespecial #11                 // Method reactor/core/publisher/MonoCacheTime$CoordinatorSubscriber."<init>":(Lreactor/core/publisher/MonoCacheTime;)V
      20: astore_3
      21: getstatic     #12                 // Field STATE:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      24: aload_0
      25: getstatic     #4                  // Field EMPTY:Lreactor/core/publisher/Signal;
      28: aload_3
      29: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifeq          74
      35: aload_0
      36: getfield      #14                 // Field source:Lreactor/core/publisher/Mono;
      39: aload_3
      40: invokevirtual #15                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      43: new           #16                 // class reactor/core/publisher/MonoCacheTime$CacheMonoSubscriber
      46: dup
      47: aload_1
      48: aload_3
      49: invokespecial #17                 // Method reactor/core/publisher/MonoCacheTime$CacheMonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;Lreactor/core/publisher/MonoCacheTime$CoordinatorSubscriber;)V
      52: astore        4
      54: aload_3
      55: aload         4
      57: invokevirtual #18                 // Method reactor/core/publisher/MonoCacheTime$CoordinatorSubscriber.add:(Lreactor/core/publisher/Operators$MonoSubscriber;)Z
      60: ifeq          74
      63: aload_1
      64: aload         4
      66: invokeinterface #19,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      71: goto          187
      74: goto          184
      77: aload_2
      78: instanceof    #10                 // class reactor/core/publisher/MonoCacheTime$CoordinatorSubscriber
      81: ifeq          123
      84: aload_2
      85: checkcast     #10                 // class reactor/core/publisher/MonoCacheTime$CoordinatorSubscriber
      88: astore_3
      89: new           #16                 // class reactor/core/publisher/MonoCacheTime$CacheMonoSubscriber
      92: dup
      93: aload_1
      94: aload_3
      95: invokespecial #17                 // Method reactor/core/publisher/MonoCacheTime$CacheMonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;Lreactor/core/publisher/MonoCacheTime$CoordinatorSubscriber;)V
      98: astore        4
     100: aload_3
     101: aload         4
     103: invokevirtual #18                 // Method reactor/core/publisher/MonoCacheTime$CoordinatorSubscriber.add:(Lreactor/core/publisher/Operators$MonoSubscriber;)Z
     106: ifeq          120
     109: aload_1
     110: aload         4
     112: invokeinterface #19,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
     117: goto          187
     120: goto          184
     123: aload_2
     124: invokeinterface #20,  1           // InterfaceMethod reactor/core/publisher/Signal.isOnNext:()Z
     129: ifeq          155
     132: aload_1
     133: new           #21                 // class reactor/core/publisher/Operators$ScalarSubscription
     136: dup
     137: aload_1
     138: aload_2
     139: invokeinterface #22,  1           // InterfaceMethod reactor/core/publisher/Signal.get:()Ljava/lang/Object;
     144: invokespecial #23                 // Method reactor/core/publisher/Operators$ScalarSubscription."<init>":(Lreactor/core/CoreSubscriber;Ljava/lang/Object;)V
     147: invokeinterface #19,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
     152: goto          187
     155: aload_2
     156: invokeinterface #24,  1           // InterfaceMethod reactor/core/publisher/Signal.isOnComplete:()Z
     161: ifeq          171
     164: aload_1
     165: invokestatic  #25                 // Method reactor/core/publisher/Operators.complete:(Lorg/reactivestreams/Subscriber;)V
     168: goto          187
     171: aload_1
     172: aload_2
     173: invokeinterface #26,  1           // InterfaceMethod reactor/core/publisher/Signal.getThrowable:()Ljava/lang/Throwable;
     178: invokestatic  #27                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
     181: goto          187
     184: goto          0
     187: return

  static {};
    Code:
       0: ldc           #28                 // class reactor/core/publisher/MonoCacheTime
       2: invokestatic  #29                 // Method reactor/util/Loggers.getLogger:(Ljava/lang/Class;)Lreactor/util/Logger;
       5: putstatic     #6                  // Field LOGGER:Lreactor/util/Logger;
       8: ldc           #28                 // class reactor/core/publisher/MonoCacheTime
      10: ldc           #30                 // class reactor/core/publisher/Signal
      12: ldc           #31                 // String state
      14: invokestatic  #32                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      17: putstatic     #12                 // Field STATE:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      20: new           #33                 // class reactor/core/publisher/ImmutableSignal
      23: dup
      24: invokestatic  #34                 // InterfaceMethod reactor/util/context/Context.empty:()Lreactor/util/context/Context;
      27: getstatic     #35                 // Field reactor/core/publisher/SignalType.ON_NEXT:Lreactor/core/publisher/SignalType;
      30: aconst_null
      31: aconst_null
      32: aconst_null
      33: invokespecial #36                 // Method reactor/core/publisher/ImmutableSignal."<init>":(Lreactor/util/context/Context;Lreactor/core/publisher/SignalType;Ljava/lang/Object;Ljava/lang/Throwable;Lorg/reactivestreams/Subscription;)V
      36: putstatic     #4                  // Field EMPTY:Lreactor/core/publisher/Signal;
      39: return
}
