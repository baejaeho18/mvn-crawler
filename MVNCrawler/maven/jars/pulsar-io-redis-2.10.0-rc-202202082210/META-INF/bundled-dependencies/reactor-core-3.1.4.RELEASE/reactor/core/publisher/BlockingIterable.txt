Compiled from "BlockingIterable.java"
final class reactor.core.publisher.BlockingIterable<T> implements java.lang.Iterable<T>, reactor.core.Scannable {
  final org.reactivestreams.Publisher<? extends T> source;

  final int batchSize;

  final java.util.function.Supplier<java.util.Queue<T>> queueSupplier;

  reactor.core.publisher.BlockingIterable(org.reactivestreams.Publisher<? extends T>, int, java.util.function.Supplier<java.util.Queue<T>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_2
       5: ifgt          35
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: new           #3                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #5                  // String batchSize > 0 required but it was
      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_2
      25: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: ldc           #10                 // String source
      39: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      42: checkcast     #12                 // class org/reactivestreams/Publisher
      45: putfield      #13                 // Field source:Lorg/reactivestreams/Publisher;
      48: aload_0
      49: iload_2
      50: putfield      #14                 // Field batchSize:I
      53: aload_0
      54: aload_3
      55: ldc           #15                 // String queueSupplier
      57: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      60: checkcast     #16                 // class java/util/function/Supplier
      63: putfield      #17                 // Field queueSupplier:Ljava/util/function/Supplier;
      66: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #18                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
       4: if_acmpne     20
       7: ldc           #20                 // int 2147483647
       9: aload_0
      10: getfield      #14                 // Field batchSize:I
      13: invokestatic  #21                 // Method java/lang/Math.min:(II)I
      16: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: areturn
      20: aload_1
      21: getstatic     #23                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      24: if_acmpne     32
      27: aload_0
      28: getfield      #13                 // Field source:Lorg/reactivestreams/Publisher;
      31: areturn
      32: aconst_null
      33: areturn

  public java.util.Iterator<T> iterator();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method createIterator:()Lreactor/core/publisher/BlockingIterable$SubscriberIterator;
       4: astore_1
       5: aload_0
       6: getfield      #13                 // Field source:Lorg/reactivestreams/Publisher;
       9: aload_1
      10: invokeinterface #25,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      15: aload_1
      16: areturn

  public java.util.Spliterator<T> spliterator();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method stream:()Ljava/util/stream/Stream;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/stream/Stream.spliterator:()Ljava/util/Spliterator;
       9: areturn

  public java.util.stream.Stream<T> stream();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method createIterator:()Lreactor/core/publisher/BlockingIterable$SubscriberIterator;
       4: astore_1
       5: aload_0
       6: getfield      #13                 // Field source:Lorg/reactivestreams/Publisher;
       9: aload_1
      10: invokeinterface #25,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      15: aload_1
      16: iconst_0
      17: invokestatic  #28                 // Method java/util/Spliterators.spliteratorUnknownSize:(Ljava/util/Iterator;I)Ljava/util/Spliterator;
      20: astore_2
      21: aload_2
      22: iconst_0
      23: invokestatic  #29                 // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      26: aload_1
      27: invokeinterface #30,  2           // InterfaceMethod java/util/stream/Stream.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;
      32: checkcast     #31                 // class java/util/stream/Stream
      35: areturn

  reactor.core.publisher.BlockingIterable$SubscriberIterator<T> createIterator();
    Code:
       0: aload_0
       1: getfield      #17                 // Field queueSupplier:Ljava/util/function/Supplier;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: ldc           #33                 // String The queueSupplier returned a null queue
      11: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #34                 // class java/util/Queue
      17: astore_1
      18: goto          27
      21: astore_2
      22: aload_2
      23: invokestatic  #36                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      26: athrow
      27: new           #37                 // class reactor/core/publisher/BlockingIterable$SubscriberIterator
      30: dup
      31: aload_1
      32: aload_0
      33: getfield      #14                 // Field batchSize:I
      36: invokespecial #38                 // Method reactor/core/publisher/BlockingIterable$SubscriberIterator."<init>":(Ljava/util/Queue;I)V
      39: areturn
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/Throwable
}
