Compiled from "Signal.java"
public interface reactor.core.publisher.Signal<T> extends java.util.function.Supplier<T>, java.util.function.Consumer<org.reactivestreams.Subscriber<? super T>> {
  public static <T> reactor.core.publisher.Signal<T> complete();
    Code:
       0: getstatic     #1                  // Field reactor/core/publisher/ImmutableSignal.ON_COMPLETE:Lreactor/core/publisher/Signal;
       3: areturn

  public static <T> reactor.core.publisher.Signal<T> complete(reactor.util.context.Context);
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod reactor/util/context/Context.isEmpty:()Z
       6: ifeq          13
       9: getstatic     #1                  // Field reactor/core/publisher/ImmutableSignal.ON_COMPLETE:Lreactor/core/publisher/Signal;
      12: areturn
      13: new           #3                  // class reactor/core/publisher/ImmutableSignal
      16: dup
      17: aload_0
      18: getstatic     #4                  // Field reactor/core/publisher/SignalType.ON_COMPLETE:Lreactor/core/publisher/SignalType;
      21: aconst_null
      22: aconst_null
      23: aconst_null
      24: invokespecial #5                  // Method reactor/core/publisher/ImmutableSignal."<init>":(Lreactor/util/context/Context;Lreactor/core/publisher/SignalType;Ljava/lang/Object;Ljava/lang/Throwable;Lorg/reactivestreams/Subscription;)V
      27: areturn

  public static <T> reactor.core.publisher.Signal<T> error(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokestatic  #6                  // InterfaceMethod reactor/util/context/Context.empty:()Lreactor/util/context/Context;
       4: invokestatic  #7                  // InterfaceMethod error:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
       7: areturn

  public static <T> reactor.core.publisher.Signal<T> error(java.lang.Throwable, reactor.util.context.Context);
    Code:
       0: new           #3                  // class reactor/core/publisher/ImmutableSignal
       3: dup
       4: aload_1
       5: getstatic     #8                  // Field reactor/core/publisher/SignalType.ON_ERROR:Lreactor/core/publisher/SignalType;
       8: aconst_null
       9: aload_0
      10: aconst_null
      11: invokespecial #5                  // Method reactor/core/publisher/ImmutableSignal."<init>":(Lreactor/util/context/Context;Lreactor/core/publisher/SignalType;Ljava/lang/Object;Ljava/lang/Throwable;Lorg/reactivestreams/Subscription;)V
      14: areturn

  public static <T> reactor.core.publisher.Signal<T> next(T);
    Code:
       0: aload_0
       1: invokestatic  #6                  // InterfaceMethod reactor/util/context/Context.empty:()Lreactor/util/context/Context;
       4: invokestatic  #9                  // InterfaceMethod next:(Ljava/lang/Object;Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
       7: areturn

  public static <T> reactor.core.publisher.Signal<T> next(T, reactor.util.context.Context);
    Code:
       0: new           #3                  // class reactor/core/publisher/ImmutableSignal
       3: dup
       4: aload_1
       5: getstatic     #10                 // Field reactor/core/publisher/SignalType.ON_NEXT:Lreactor/core/publisher/SignalType;
       8: aload_0
       9: aconst_null
      10: aconst_null
      11: invokespecial #5                  // Method reactor/core/publisher/ImmutableSignal."<init>":(Lreactor/util/context/Context;Lreactor/core/publisher/SignalType;Ljava/lang/Object;Ljava/lang/Throwable;Lorg/reactivestreams/Subscription;)V
      14: areturn

  public static <T> reactor.core.publisher.Signal<T> subscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: invokestatic  #6                  // InterfaceMethod reactor/util/context/Context.empty:()Lreactor/util/context/Context;
       4: invokestatic  #11                 // InterfaceMethod subscribe:(Lorg/reactivestreams/Subscription;Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
       7: areturn

  public static <T> reactor.core.publisher.Signal<T> subscribe(org.reactivestreams.Subscription, reactor.util.context.Context);
    Code:
       0: new           #3                  // class reactor/core/publisher/ImmutableSignal
       3: dup
       4: aload_1
       5: getstatic     #12                 // Field reactor/core/publisher/SignalType.ON_SUBSCRIBE:Lreactor/core/publisher/SignalType;
       8: aconst_null
       9: aconst_null
      10: aload_0
      11: invokespecial #5                  // Method reactor/core/publisher/ImmutableSignal."<init>":(Lreactor/util/context/Context;Lreactor/core/publisher/SignalType;Ljava/lang/Object;Ljava/lang/Throwable;Lorg/reactivestreams/Subscription;)V
      14: areturn

  public static boolean isComplete(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field reactor/core/publisher/ImmutableSignal.ON_COMPLETE:Lreactor/core/publisher/Signal;
       4: if_acmpeq     29
       7: aload_0
       8: instanceof    #13                 // class reactor/core/publisher/Signal
      11: ifeq          33
      14: aload_0
      15: checkcast     #13                 // class reactor/core/publisher/Signal
      18: invokeinterface #14,  1           // InterfaceMethod getType:()Lreactor/core/publisher/SignalType;
      23: getstatic     #4                  // Field reactor/core/publisher/SignalType.ON_COMPLETE:Lreactor/core/publisher/SignalType;
      26: if_acmpne     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public static boolean isError(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #13                 // class reactor/core/publisher/Signal
       4: ifeq          26
       7: aload_0
       8: checkcast     #13                 // class reactor/core/publisher/Signal
      11: invokeinterface #14,  1           // InterfaceMethod getType:()Lreactor/core/publisher/SignalType;
      16: getstatic     #8                  // Field reactor/core/publisher/SignalType.ON_ERROR:Lreactor/core/publisher/SignalType;
      19: if_acmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public abstract java.lang.Throwable getThrowable();

  public abstract org.reactivestreams.Subscription getSubscription();

  public abstract T get();

  public default boolean hasValue();
    Code:
       0: aload_0
       1: invokeinterface #15,  1           // InterfaceMethod isOnNext:()Z
       6: ifeq          22
       9: aload_0
      10: invokeinterface #16,  1           // InterfaceMethod get:()Ljava/lang/Object;
      15: ifnull        22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public default boolean hasError();
    Code:
       0: aload_0
       1: invokeinterface #17,  1           // InterfaceMethod isOnError:()Z
       6: ifeq          22
       9: aload_0
      10: invokeinterface #18,  1           // InterfaceMethod getThrowable:()Ljava/lang/Throwable;
      15: ifnull        22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public abstract reactor.core.publisher.SignalType getType();

  public abstract reactor.util.context.Context getContext();

  public default boolean isOnError();
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod getType:()Lreactor/core/publisher/SignalType;
       6: getstatic     #8                  // Field reactor/core/publisher/SignalType.ON_ERROR:Lreactor/core/publisher/SignalType;
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public default boolean isOnComplete();
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod getType:()Lreactor/core/publisher/SignalType;
       6: getstatic     #4                  // Field reactor/core/publisher/SignalType.ON_COMPLETE:Lreactor/core/publisher/SignalType;
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public default boolean isOnSubscribe();
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod getType:()Lreactor/core/publisher/SignalType;
       6: getstatic     #12                 // Field reactor/core/publisher/SignalType.ON_SUBSCRIBE:Lreactor/core/publisher/SignalType;
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public default boolean isOnNext();
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod getType:()Lreactor/core/publisher/SignalType;
       6: getstatic     #10                 // Field reactor/core/publisher/SignalType.ON_NEXT:Lreactor/core/publisher/SignalType;
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public default void accept(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: invokeinterface #15,  1           // InterfaceMethod isOnNext:()Z
       6: ifeq          24
       9: aload_1
      10: aload_0
      11: invokeinterface #16,  1           // InterfaceMethod get:()Ljava/lang/Object;
      16: invokeinterface #19,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      21: goto          87
      24: aload_0
      25: invokeinterface #20,  1           // InterfaceMethod isOnComplete:()Z
      30: ifeq          42
      33: aload_1
      34: invokeinterface #21,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      39: goto          87
      42: aload_0
      43: invokeinterface #17,  1           // InterfaceMethod isOnError:()Z
      48: ifeq          66
      51: aload_1
      52: aload_0
      53: invokeinterface #18,  1           // InterfaceMethod getThrowable:()Ljava/lang/Throwable;
      58: invokeinterface #22,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      63: goto          87
      66: aload_0
      67: invokeinterface #23,  1           // InterfaceMethod isOnSubscribe:()Z
      72: ifeq          87
      75: aload_1
      76: aload_0
      77: invokeinterface #24,  1           // InterfaceMethod getSubscription:()Lorg/reactivestreams/Subscription;
      82: invokeinterface #25,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      87: return

  public default void accept(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class org/reactivestreams/Subscriber
       5: invokeinterface #27,  2           // InterfaceMethod accept:(Lorg/reactivestreams/Subscriber;)V
      10: return
}
