Compiled from "FluxMergeSequential.java"
final class reactor.core.publisher.FluxMergeSequential$MergeSequentialMain<T, R> implements reactor.core.publisher.InnerOperator<T, R> {
  final java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>> mapper;

  final int maxConcurrency;

  final int prefetch;

  final java.util.Queue<reactor.core.publisher.FluxMergeSequential$MergeSequentialInner<R>> subscribers;

  final reactor.core.publisher.FluxConcatMap$ErrorMode errorMode;

  final reactor.core.CoreSubscriber<? super R> actual;

  org.reactivestreams.Subscription s;

  volatile boolean done;

  volatile boolean cancelled;

  volatile java.lang.Throwable error;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxMergeSequential$MergeSequentialMain, java.lang.Throwable> ERROR;

  reactor.core.publisher.FluxMergeSequential$MergeSequentialInner<R> current;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxMergeSequential$MergeSequentialMain> WIP;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxMergeSequential$MergeSequentialMain> REQUESTED;

  reactor.core.publisher.FluxMergeSequential$MergeSequentialMain(reactor.core.CoreSubscriber<? super R>, java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>>, int, int, reactor.core.publisher.FluxConcatMap$ErrorMode, java.util.function.Supplier<java.util.Queue<reactor.core.publisher.FluxMergeSequential$MergeSequentialInner<R>>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Ljava/util/function/Function;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field maxConcurrency:I
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field prefetch:I
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field errorMode:Lreactor/core/publisher/FluxConcatMap$ErrorMode;
      31: aload_0
      32: aload         6
      34: invokeinterface #7,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      39: checkcast     #8                  // class java/util/Queue
      42: putfield      #9                  // Field subscribers:Ljava/util/Queue;
      45: return

  public final reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #9                  // Field subscribers:Ljava/util/Queue;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
       9: invokestatic  #11                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      12: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #12                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #13                 // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #14                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      16: if_acmpne     24
      19: aload_0
      20: getfield      #15                 // Field error:Ljava/lang/Throwable;
      23: areturn
      24: aload_1
      25: getstatic     #16                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      28: if_acmpne     59
      31: aload_0
      32: getfield      #17                 // Field done:Z
      35: ifeq          54
      38: aload_0
      39: getfield      #9                  // Field subscribers:Ljava/util/Queue;
      42: invokeinterface #18,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      58: areturn
      59: aload_1
      60: getstatic     #20                 // Field reactor/core/Scannable$Attr.DELAY_ERROR:Lreactor/core/Scannable$Attr;
      63: if_acmpne     85
      66: aload_0
      67: getfield      #6                  // Field errorMode:Lreactor/core/publisher/FluxConcatMap$ErrorMode;
      70: getstatic     #21                 // Field reactor/core/publisher/FluxConcatMap$ErrorMode.IMMEDIATE:Lreactor/core/publisher/FluxConcatMap$ErrorMode;
      73: if_acmpeq     80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      84: areturn
      85: aload_1
      86: getstatic     #22                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      89: if_acmpne     100
      92: aload_0
      93: getfield      #4                  // Field maxConcurrency:I
      96: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      99: areturn
     100: aload_1
     101: getstatic     #24                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
     104: if_acmpne     115
     107: aload_0
     108: getfield      #25                 // Field requested:J
     111: invokestatic  #26                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     114: areturn
     115: aload_1
     116: getstatic     #27                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
     119: if_acmpne     135
     122: aload_0
     123: getfield      #9                  // Field subscribers:Ljava/util/Queue;
     126: invokeinterface #28,  1           // InterfaceMethod java/util/Queue.size:()I
     131: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     134: areturn
     135: aload_0
     136: aload_1
     137: invokespecial #29                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
     140: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #13                 // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #30                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          52
      11: aload_0
      12: aload_1
      13: putfield      #13                 // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #31,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: aload_0
      28: getfield      #4                  // Field maxConcurrency:I
      31: ldc           #33                 // int 2147483647
      33: if_icmpne     42
      36: ldc2_w        #35                 // long 9223372036854775807l
      39: goto          47
      42: aload_0
      43: getfield      #4                  // Field maxConcurrency:I
      46: i2l
      47: invokeinterface #37,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      52: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mapper:Ljava/util/function/Function;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ldc           #39                 // String publisher
      12: invokestatic  #40                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #41                 // class org/reactivestreams/Publisher
      18: astore_2
      19: goto          46
      22: astore_3
      23: aload_0
      24: aload_0
      25: getfield      #13                 // Field s:Lorg/reactivestreams/Subscription;
      28: aload_3
      29: aload_1
      30: aload_0
      31: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      34: invokeinterface #43,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      39: invokestatic  #44                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      42: invokevirtual #45                 // Method onError:(Ljava/lang/Throwable;)V
      45: return
      46: new           #46                 // class reactor/core/publisher/FluxMergeSequential$MergeSequentialInner
      49: dup
      50: aload_0
      51: aload_0
      52: getfield      #5                  // Field prefetch:I
      55: invokespecial #47                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner."<init>":(Lreactor/core/publisher/FluxMergeSequential$MergeSequentialMain;I)V
      58: astore_3
      59: aload_0
      60: getfield      #48                 // Field cancelled:Z
      63: ifeq          67
      66: return
      67: aload_0
      68: getfield      #9                  // Field subscribers:Ljava/util/Queue;
      71: aload_3
      72: invokeinterface #49,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      77: ifne          157
      80: aload_0
      81: getfield      #9                  // Field subscribers:Ljava/util/Queue;
      84: invokeinterface #28,  1           // InterfaceMethod java/util/Queue.size:()I
      89: istore        4
      91: aload_3
      92: invokevirtual #50                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.cancel:()V
      95: aload_0
      96: invokevirtual #51                 // Method drainAndCancel:()V
      99: aload_0
     100: aload_0
     101: getfield      #13                 // Field s:Lorg/reactivestreams/Subscription;
     104: new           #52                 // class java/lang/IllegalStateException
     107: dup
     108: new           #53                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #55                 // String Too many subscribers for fluxMergeSequential on item:
     117: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_1
     121: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     124: ldc           #58                 // String ; subscribers:
     126: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: iload         4
     131: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     134: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     140: aload_1
     141: aload_0
     142: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     145: invokeinterface #43,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     150: invokestatic  #44                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     153: invokevirtual #45                 // Method onError:(Ljava/lang/Throwable;)V
     156: return
     157: aload_0
     158: getfield      #48                 // Field cancelled:Z
     161: ifeq          165
     164: return
     165: aload_2
     166: aload_3
     167: invokeinterface #62,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     172: aload_0
     173: getfield      #48                 // Field cancelled:Z
     176: ifeq          187
     179: aload_3
     180: invokevirtual #50                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.cancel:()V
     183: aload_0
     184: invokevirtual #51                 // Method drainAndCancel:()V
     187: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: getstatic     #63                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #64                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: ifeq          23
      11: aload_0
      12: iconst_1
      13: putfield      #17                 // Field done:Z
      16: aload_0
      17: invokevirtual #65                 // Method drain:()V
      20: goto          36
      23: aload_1
      24: aload_0
      25: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      28: invokeinterface #43,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      33: invokestatic  #66                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #17                 // Field done:Z
       5: aload_0
       6: invokevirtual #65                 // Method drain:()V
       9: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #48                 // Field cancelled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #48                 // Field cancelled:Z
      13: aload_0
      14: getfield      #13                 // Field s:Lorg/reactivestreams/Subscription;
      17: invokeinterface #67,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      22: aload_0
      23: invokevirtual #51                 // Method drainAndCancel:()V
      26: return

  void drainAndCancel();
    Code:
       0: getstatic     #68                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifne          24
      10: aload_0
      11: invokevirtual #70                 // Method cancelAll:()V
      14: getstatic     #68                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      17: aload_0
      18: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      21: ifne          10
      24: return

  void cancelAll();
    Code:
       0: aload_0
       1: getfield      #9                  // Field subscribers:Ljava/util/Queue;
       4: invokeinterface #72,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: checkcast     #46                 // class reactor/core/publisher/FluxMergeSequential$MergeSequentialInner
      12: dup
      13: astore_1
      14: ifnull        24
      17: aload_1
      18: invokevirtual #50                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.cancel:()V
      21: goto          0
      24: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #73                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          20
       7: getstatic     #74                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #75                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #65                 // Method drain:()V
      20: return

  void innerNext(reactor.core.publisher.FluxMergeSequential$MergeSequentialInner<R>, R);
    Code:
       0: aload_1
       1: invokevirtual #76                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.queue:()Ljava/util/Queue;
       4: aload_2
       5: invokeinterface #49,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      10: ifeq          20
      13: aload_0
      14: invokevirtual #65                 // Method drain:()V
      17: goto          47
      20: aload_1
      21: invokevirtual #50                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.cancel:()V
      24: aload_0
      25: aconst_null
      26: ldc           #78                 // String Queue is full: Reactive Streams source doesn\'t respect backpressure
      28: invokestatic  #79                 // Method reactor/core/Exceptions.failWithOverflow:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      31: aload_2
      32: aload_0
      33: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      36: invokeinterface #43,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      41: invokestatic  #44                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      44: invokevirtual #45                 // Method onError:(Ljava/lang/Throwable;)V
      47: return

  void innerError(reactor.core.publisher.FluxMergeSequential$MergeSequentialInner<R>, java.lang.Throwable);
    Code:
       0: getstatic     #63                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_2
       5: invokestatic  #64                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: ifeq          41
      11: aload_1
      12: invokevirtual #80                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.setDone:()V
      15: aload_0
      16: getfield      #6                  // Field errorMode:Lreactor/core/publisher/FluxConcatMap$ErrorMode;
      19: getstatic     #81                 // Field reactor/core/publisher/FluxConcatMap$ErrorMode.END:Lreactor/core/publisher/FluxConcatMap$ErrorMode;
      22: if_acmpeq     34
      25: aload_0
      26: getfield      #13                 // Field s:Lorg/reactivestreams/Subscription;
      29: invokeinterface #67,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      34: aload_0
      35: invokevirtual #65                 // Method drain:()V
      38: goto          54
      41: aload_2
      42: aload_0
      43: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      46: invokeinterface #43,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      51: invokestatic  #66                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      54: return

  void innerComplete(reactor.core.publisher.FluxMergeSequential$MergeSequentialInner<R>);
    Code:
       0: aload_1
       1: invokevirtual #80                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.setDone:()V
       4: aload_0
       5: invokevirtual #65                 // Method drain:()V
       8: return

  void drain();
    Code:
       0: getstatic     #68                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: iconst_1
      12: istore_1
      13: aload_0
      14: getfield      #82                 // Field current:Lreactor/core/publisher/FluxMergeSequential$MergeSequentialInner;
      17: astore_2
      18: aload_0
      19: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      22: astore_3
      23: aload_0
      24: getfield      #6                  // Field errorMode:Lreactor/core/publisher/FluxConcatMap$ErrorMode;
      27: astore        4
      29: aload_0
      30: getfield      #25                 // Field requested:J
      33: lstore        5
      35: lconst_0
      36: lstore        7
      38: aload_2
      39: ifnonnull     140
      42: aload         4
      44: getstatic     #81                 // Field reactor/core/publisher/FluxConcatMap$ErrorMode.END:Lreactor/core/publisher/FluxConcatMap$ErrorMode;
      47: if_acmpeq     74
      50: aload_0
      51: getfield      #15                 // Field error:Ljava/lang/Throwable;
      54: astore        9
      56: aload         9
      58: ifnull        74
      61: aload_0
      62: invokevirtual #70                 // Method cancelAll:()V
      65: aload_3
      66: aload         9
      68: invokeinterface #83,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      73: return
      74: aload_0
      75: getfield      #17                 // Field done:Z
      78: istore        9
      80: aload_0
      81: getfield      #9                  // Field subscribers:Ljava/util/Queue;
      84: invokeinterface #72,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      89: checkcast     #46                 // class reactor/core/publisher/FluxMergeSequential$MergeSequentialInner
      92: astore_2
      93: iload         9
      95: ifeq          131
      98: aload_2
      99: ifnonnull     131
     102: aload_0
     103: getfield      #15                 // Field error:Ljava/lang/Throwable;
     106: astore        10
     108: aload         10
     110: ifnull        124
     113: aload_3
     114: aload         10
     116: invokeinterface #83,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     121: goto          130
     124: aload_3
     125: invokeinterface #84,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     130: return
     131: aload_2
     132: ifnull        140
     135: aload_0
     136: aload_2
     137: putfield      #82                 // Field current:Lreactor/core/publisher/FluxMergeSequential$MergeSequentialInner;
     140: iconst_0
     141: istore        9
     143: aload_2
     144: ifnull        457
     147: aload_2
     148: invokevirtual #76                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.queue:()Ljava/util/Queue;
     151: astore        10
     153: aload         10
     155: ifnull        457
     158: lload         7
     160: lload         5
     162: lcmp
     163: ifeq          351
     166: aload_0
     167: getfield      #48                 // Field cancelled:Z
     170: ifeq          178
     173: aload_0
     174: invokevirtual #70                 // Method cancelAll:()V
     177: return
     178: aload         4
     180: getstatic     #21                 // Field reactor/core/publisher/FluxConcatMap$ErrorMode.IMMEDIATE:Lreactor/core/publisher/FluxConcatMap$ErrorMode;
     183: if_acmpne     219
     186: aload_0
     187: getfield      #15                 // Field error:Ljava/lang/Throwable;
     190: astore        11
     192: aload         11
     194: ifnull        219
     197: aload_0
     198: aconst_null
     199: putfield      #82                 // Field current:Lreactor/core/publisher/FluxMergeSequential$MergeSequentialInner;
     202: aload_2
     203: invokevirtual #50                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.cancel:()V
     206: aload_0
     207: invokevirtual #70                 // Method cancelAll:()V
     210: aload_3
     211: aload         11
     213: invokeinterface #83,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     218: return
     219: aload_2
     220: invokevirtual #85                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.isDone:()Z
     223: istore        11
     225: aload         10
     227: invokeinterface #72,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     232: astore        12
     234: goto          277
     237: astore        13
     239: aload_0
     240: aconst_null
     241: putfield      #82                 // Field current:Lreactor/core/publisher/FluxMergeSequential$MergeSequentialInner;
     244: aload_2
     245: invokevirtual #50                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.cancel:()V
     248: aload         13
     250: aload_0
     251: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     254: invokeinterface #43,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     259: invokestatic  #86                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     262: astore        13
     264: aload_0
     265: invokevirtual #70                 // Method cancelAll:()V
     268: aload_3
     269: aload         13
     271: invokeinterface #83,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     276: return
     277: aload         12
     279: ifnonnull     286
     282: iconst_1
     283: goto          287
     286: iconst_0
     287: istore        13
     289: iload         11
     291: ifeq          322
     294: iload         13
     296: ifeq          322
     299: aconst_null
     300: astore_2
     301: aload_0
     302: aconst_null
     303: putfield      #82                 // Field current:Lreactor/core/publisher/FluxMergeSequential$MergeSequentialInner;
     306: aload_0
     307: getfield      #13                 // Field s:Lorg/reactivestreams/Subscription;
     310: lconst_1
     311: invokeinterface #37,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     316: iconst_1
     317: istore        9
     319: goto          351
     322: iload         13
     324: ifeq          330
     327: goto          351
     330: aload_3
     331: aload         12
     333: invokeinterface #87,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     338: lload         7
     340: lconst_1
     341: ladd
     342: lstore        7
     344: aload_2
     345: invokevirtual #88                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.requestOne:()V
     348: goto          158
     351: lload         7
     353: lload         5
     355: lcmp
     356: ifne          457
     359: aload_0
     360: getfield      #48                 // Field cancelled:Z
     363: ifeq          371
     366: aload_0
     367: invokevirtual #70                 // Method cancelAll:()V
     370: return
     371: aload         4
     373: getstatic     #21                 // Field reactor/core/publisher/FluxConcatMap$ErrorMode.IMMEDIATE:Lreactor/core/publisher/FluxConcatMap$ErrorMode;
     376: if_acmpne     412
     379: aload_0
     380: getfield      #15                 // Field error:Ljava/lang/Throwable;
     383: astore        11
     385: aload         11
     387: ifnull        412
     390: aload_0
     391: aconst_null
     392: putfield      #82                 // Field current:Lreactor/core/publisher/FluxMergeSequential$MergeSequentialInner;
     395: aload_2
     396: invokevirtual #50                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.cancel:()V
     399: aload_0
     400: invokevirtual #70                 // Method cancelAll:()V
     403: aload_3
     404: aload         11
     406: invokeinterface #83,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     411: return
     412: aload_2
     413: invokevirtual #85                 // Method reactor/core/publisher/FluxMergeSequential$MergeSequentialInner.isDone:()Z
     416: istore        11
     418: aload         10
     420: invokeinterface #18,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
     425: istore        12
     427: iload         11
     429: ifeq          457
     432: iload         12
     434: ifeq          457
     437: aconst_null
     438: astore_2
     439: aload_0
     440: aconst_null
     441: putfield      #82                 // Field current:Lreactor/core/publisher/FluxMergeSequential$MergeSequentialInner;
     444: aload_0
     445: getfield      #13                 // Field s:Lorg/reactivestreams/Subscription;
     448: lconst_1
     449: invokeinterface #37,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     454: iconst_1
     455: istore        9
     457: lload         7
     459: lconst_0
     460: lcmp
     461: ifeq          484
     464: lload         5
     466: ldc2_w        #35                 // long 9223372036854775807l
     469: lcmp
     470: ifeq          484
     473: getstatic     #74                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     476: aload_0
     477: lload         7
     479: lneg
     480: invokevirtual #89                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
     483: pop2
     484: iload         9
     486: ifeq          492
     489: goto          29
     492: getstatic     #68                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     495: aload_0
     496: iload_1
     497: ineg
     498: invokevirtual #90                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     501: istore_1
     502: iload_1
     503: ifne          509
     506: goto          512
     509: goto          29
     512: return
    Exception table:
       from    to  target type
         225   234   237   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #91                 // class reactor/core/publisher/FluxMergeSequential$MergeSequentialMain
       2: ldc           #42                 // class java/lang/Throwable
       4: ldc           #92                 // String error
       6: invokestatic  #93                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #63                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #91                 // class reactor/core/publisher/FluxMergeSequential$MergeSequentialMain
      14: ldc           #94                 // String wip
      16: invokestatic  #95                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      19: putstatic     #68                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      22: ldc           #91                 // class reactor/core/publisher/FluxMergeSequential$MergeSequentialMain
      24: ldc           #96                 // String requested
      26: invokestatic  #97                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      29: putstatic     #74                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      32: return
}
