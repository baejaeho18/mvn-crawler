Compiled from "FluxContextStart.java"
final class reactor.core.publisher.FluxContextStart$ContextStartSubscriber<T> implements reactor.core.Fuseable$ConditionalSubscriber<T>, reactor.core.publisher.InnerOperator<T, T>, reactor.core.Fuseable$QueueSubscription<T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final reactor.core.Fuseable$ConditionalSubscriber<? super T> actualConditional;

  final reactor.util.context.Context context;

  reactor.core.Fuseable$QueueSubscription<T> qs;

  org.reactivestreams.Subscription s;

  reactor.core.publisher.FluxContextStart$ContextStartSubscriber(reactor.core.CoreSubscriber<? super T>, reactor.util.context.Context);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field context:Lreactor/util/context/Context;
      14: aload_1
      15: instanceof    #4                  // class reactor/core/Fuseable$ConditionalSubscriber
      18: ifeq          32
      21: aload_0
      22: aload_1
      23: checkcast     #4                  // class reactor/core/Fuseable$ConditionalSubscriber
      26: putfield      #5                  // Field actualConditional:Lreactor/core/Fuseable$ConditionalSubscriber;
      29: goto          37
      32: aload_0
      33: aconst_null
      34: putfield      #5                  // Field actualConditional:Lreactor/core/Fuseable$ConditionalSubscriber;
      37: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #6                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_0
      13: aload_1
      14: invokespecial #8                  // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      17: areturn

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field context:Lreactor/util/context/Context;
       4: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #9                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          41
      11: aload_0
      12: aload_1
      13: putfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_1
      17: instanceof    #10                 // class reactor/core/Fuseable$QueueSubscription
      20: ifeq          31
      23: aload_0
      24: aload_1
      25: checkcast     #10                 // class reactor/core/Fuseable$QueueSubscription
      28: putfield      #11                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      31: aload_0
      32: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      35: aload_0
      36: invokeinterface #12,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      41: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      10: return

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field actualConditional:Lreactor/core/Fuseable$ConditionalSubscriber;
       4: ifnull        18
       7: aload_0
       8: getfield      #5                  // Field actualConditional:Lreactor/core/Fuseable$ConditionalSubscriber;
      11: aload_1
      12: invokeinterface #14,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
      17: ireturn
      18: aload_0
      19: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      22: aload_1
      23: invokeinterface #13,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      28: iconst_1
      29: ireturn

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: invokeinterface #16,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
       9: return

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #17,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #18,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public int requestFusion(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #11                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      13: iload_1
      14: invokeinterface #20,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      19: ireturn

  public T poll();
    Code:
       0: aload_0
       1: getfield      #11                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      11: invokeinterface #21,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
      16: areturn
      17: aconst_null
      18: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #11                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnull        19
       7: aload_0
       8: getfield      #11                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      11: invokeinterface #22,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #11                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnull        16
       7: aload_0
       8: getfield      #11                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      11: invokeinterface #23,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
      16: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #11                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnull        19
       7: aload_0
       8: getfield      #11                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      11: invokeinterface #24,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
      16: goto          20
      19: iconst_0
      20: ireturn
}
