Compiled from "Scannable.java"
public interface reactor.core.Scannable {
  public static reactor.core.Scannable from(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #1                  // Field reactor/core/Scannable$Attr.NULL_SCAN:Lreactor/core/Scannable;
       7: areturn
       8: aload_0
       9: instanceof    #2                  // class reactor/core/Scannable
      12: ifeq          20
      15: aload_0
      16: checkcast     #2                  // class reactor/core/Scannable
      19: areturn
      20: getstatic     #3                  // Field reactor/core/Scannable$Attr.UNAVAILABLE_SCAN:Lreactor/core/Scannable;
      23: areturn

  public default java.util.stream.Stream<? extends reactor.core.Scannable> actuals();
    Code:
       0: aload_0
       1: getstatic     #4                  // Field reactor/core/Scannable$Attr.ACTUAL:Lreactor/core/Scannable$Attr;
       4: invokestatic  #5                  // Method reactor/core/Scannable$Attr.recurse:(Lreactor/core/Scannable;Lreactor/core/Scannable$Attr;)Ljava/util/stream/Stream;
       7: areturn

  public default java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: invokestatic  #6                  // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
       3: areturn

  public default boolean isScanAvailable();
    Code:
       0: iconst_1
       1: ireturn

  public default java.lang.String name();
    Code:
       0: aload_0
       1: getstatic     #7                  // Field reactor/core/Scannable$Attr.NAME:Lreactor/core/Scannable$Attr;
       4: invokeinterface #8,  2            // InterfaceMethod scan:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
       9: checkcast     #9                  // class java/lang/String
      12: astore_1
      13: aload_1
      14: ifnull        19
      17: aload_1
      18: areturn
      19: aload_0
      20: invokeinterface #10,  1           // InterfaceMethod parents:()Ljava/util/stream/Stream;
      25: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      30: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      35: invokedynamic #13,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      40: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      45: invokeinterface #15,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      50: aload_0
      51: invokeinterface #16,  1           // InterfaceMethod operatorName:()Ljava/lang/String;
      56: invokevirtual #17                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #9                  // class java/lang/String
      62: areturn

  public default java.lang.String operatorName();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: ldc           #19                 // String Parallel|Flux|Mono|Publisher
       6: ldc           #20                 // String
       8: invokevirtual #21                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: ldc           #22                 // String Fuseable|Operator
      13: ldc           #20                 // String
      15: invokevirtual #21                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      18: astore_1
      19: aload_1
      20: invokevirtual #23                 // Method java/lang/String.length:()I
      23: ifle          57
      26: new           #24                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      33: aload_1
      34: iconst_0
      35: iconst_1
      36: invokevirtual #26                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      39: invokevirtual #27                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      42: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: iconst_1
      47: invokevirtual #29                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      50: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn
      57: aload_1
      58: areturn

  public default java.util.stream.Stream<? extends reactor.core.Scannable> parents();
    Code:
       0: aload_0
       1: getstatic     #31                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: invokestatic  #5                  // Method reactor/core/Scannable$Attr.recurse:(Lreactor/core/Scannable;Lreactor/core/Scannable$Attr;)Ljava/util/stream/Stream;
       7: areturn

  public abstract java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);

  public default <T> T scan(reactor.core.Scannable$Attr<T>);
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokeinterface #32,  2           // InterfaceMethod scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
       8: invokevirtual #33                 // Method reactor/core/Scannable$Attr.tryConvert:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_2
      12: aload_2
      13: ifnonnull     21
      16: aload_1
      17: invokevirtual #34                 // Method reactor/core/Scannable$Attr.defaultValue:()Ljava/lang/Object;
      20: areturn
      21: aload_2
      22: areturn

  public default <T> T scanOrDefault(reactor.core.Scannable$Attr<T>, T);
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokeinterface #32,  2           // InterfaceMethod scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
       8: invokevirtual #33                 // Method reactor/core/Scannable$Attr.tryConvert:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_3
      12: aload_3
      13: ifnonnull     23
      16: aload_2
      17: ldc           #35                 // String defaultValue
      19: invokestatic  #36                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      22: areturn
      23: aload_3
      24: areturn

  public default java.util.stream.Stream<reactor.util.function.Tuple2<java.lang.String, java.lang.String>> tags();
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod parents:()Ljava/util/stream/Stream;
       6: invokedynamic #37,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      11: invokeinterface #38,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: astore_1
      17: aload_0
      18: getstatic     #39                 // Field reactor/core/Scannable$Attr.TAGS:Lreactor/core/Scannable$Attr;
      21: invokeinterface #8,  2            // InterfaceMethod scan:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      26: checkcast     #40                 // class java/util/stream/Stream
      29: astore_2
      30: aload_2
      31: ifnonnull     36
      34: aload_1
      35: areturn
      36: aload_2
      37: aload_1
      38: invokestatic  #41                 // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      41: areturn

  private static java.util.stream.Stream lambda$tags$1(reactor.core.Scannable);
    Code:
       0: aload_0
       1: getstatic     #39                 // Field reactor/core/Scannable$Attr.TAGS:Lreactor/core/Scannable$Attr;
       4: invokeinterface #8,  2            // InterfaceMethod scan:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
       9: checkcast     #40                 // class java/util/stream/Stream
      12: areturn

  private static java.lang.String lambda$name$0(reactor.core.Scannable);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field reactor/core/Scannable$Attr.NAME:Lreactor/core/Scannable$Attr;
       4: invokeinterface #8,  2            // InterfaceMethod scan:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
       9: checkcast     #9                  // class java/lang/String
      12: areturn
}
