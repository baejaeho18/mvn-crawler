Compiled from "FluxHandleFuseable.java"
final class reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber<T, R> implements reactor.core.publisher.InnerOperator<T, R>, reactor.core.Fuseable$ConditionalSubscriber<T>, reactor.core.Fuseable$QueueSubscription<R>, reactor.core.publisher.SynchronousSink<R> {
  final reactor.core.CoreSubscriber<? super R> actual;

  final java.util.function.BiConsumer<? super T, reactor.core.publisher.SynchronousSink<R>> handler;

  boolean done;

  boolean stop;

  java.lang.Throwable error;

  R data;

  reactor.core.Fuseable$QueueSubscription<T> s;

  int sourceMode;

  reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber(reactor.core.CoreSubscriber<? super R>, java.util.function.BiConsumer<? super T, reactor.core.publisher.SynchronousSink<R>>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field handler:Ljava/util/function/BiConsumer;
      14: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
       9: areturn

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          22
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #7                  // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: iconst_1
      21: ireturn
      22: aload_0
      23: getfield      #4                  // Field handler:Ljava/util/function/BiConsumer;
      26: aload_1
      27: aload_0
      28: invokeinterface #8,  3            // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      33: goto          61
      36: astore_2
      37: aload_0
      38: aload_0
      39: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      42: aload_2
      43: aload_1
      44: aload_0
      45: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      48: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      53: invokestatic  #11                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      56: invokevirtual #12                 // Method onError:(Ljava/lang/Throwable;)V
      59: iconst_0
      60: ireturn
      61: aload_0
      62: getfield      #13                 // Field data:Ljava/lang/Object;
      65: astore_2
      66: aload_0
      67: aconst_null
      68: putfield      #13                 // Field data:Ljava/lang/Object;
      71: aload_2
      72: ifnull        85
      75: aload_0
      76: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      79: aload_2
      80: invokeinterface #14,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      85: aload_0
      86: getfield      #15                 // Field stop:Z
      89: ifeq          157
      92: aload_0
      93: iconst_1
      94: putfield      #6                  // Field done:Z
      97: aload_0
      98: getfield      #16                 // Field error:Ljava/lang/Throwable;
     101: ifnull        137
     104: aload_0
     105: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     108: aload_0
     109: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     112: aload_0
     113: getfield      #16                 // Field error:Ljava/lang/Throwable;
     116: aload_1
     117: aload_0
     118: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     121: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     126: invokestatic  #11                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     129: invokeinterface #17,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     134: goto          155
     137: aload_0
     138: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     141: invokeinterface #18,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
     146: aload_0
     147: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     150: invokeinterface #19,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     155: iconst_1
     156: ireturn
     157: aload_2
     158: ifnull        165
     161: iconst_1
     162: goto          166
     165: iconst_0
     166: ireturn
    Exception table:
       from    to  target type
          22    33    36   Class java/lang/Throwable

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: aload_1
       5: invokestatic  #20                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          29
      11: aload_0
      12: aload_1
      13: checkcast     #21                 // class reactor/core/Fuseable$QueueSubscription
      16: putfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      19: aload_0
      20: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      23: aload_0
      24: invokeinterface #22,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      29: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #23                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     21
       8: aload_0
       9: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      12: aconst_null
      13: invokeinterface #14,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      18: goto          186
      21: aload_0
      22: getfield      #6                  // Field done:Z
      25: ifeq          42
      28: aload_1
      29: aload_0
      30: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      33: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      38: invokestatic  #7                  // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      41: return
      42: aload_0
      43: getfield      #4                  // Field handler:Ljava/util/function/BiConsumer;
      46: aload_1
      47: aload_0
      48: invokeinterface #8,  3            // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      53: goto          80
      56: astore_2
      57: aload_0
      58: aload_0
      59: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      62: aload_2
      63: aload_1
      64: aload_0
      65: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      68: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      73: invokestatic  #11                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      76: invokevirtual #12                 // Method onError:(Ljava/lang/Throwable;)V
      79: return
      80: aload_0
      81: getfield      #13                 // Field data:Ljava/lang/Object;
      84: astore_2
      85: aload_0
      86: aconst_null
      87: putfield      #13                 // Field data:Ljava/lang/Object;
      90: aload_2
      91: ifnull        104
      94: aload_0
      95: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      98: aload_2
      99: invokeinterface #14,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     104: aload_0
     105: getfield      #15                 // Field stop:Z
     108: ifeq          172
     111: aload_0
     112: iconst_1
     113: putfield      #6                  // Field done:Z
     116: aload_0
     117: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     120: invokeinterface #18,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
     125: aload_0
     126: getfield      #16                 // Field error:Ljava/lang/Throwable;
     129: ifnull        160
     132: aload_0
     133: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     136: aconst_null
     137: aload_0
     138: getfield      #16                 // Field error:Ljava/lang/Throwable;
     141: aload_1
     142: aload_0
     143: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     146: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     151: invokestatic  #11                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     154: invokeinterface #17,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     159: return
     160: aload_0
     161: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     164: invokeinterface #19,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     169: goto          186
     172: aload_2
     173: ifnonnull     186
     176: aload_0
     177: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     180: lconst_1
     181: invokeinterface #24,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
     186: return
    Exception table:
       from    to  target type
          42    53    56   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #25                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #6                  // Field done:Z
      26: aload_0
      27: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: invokeinterface #17,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #6                  // Field done:Z
      13: aload_0
      14: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      17: invokeinterface #19,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      22: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #26                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      11: areturn
      12: aload_1
      13: getstatic     #27                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #6                  // Field done:Z
      23: invokestatic  #28                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_1
      28: getstatic     #29                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      31: if_acmpne     39
      34: aload_0
      35: getfield      #16                 // Field error:Ljava/lang/Throwable;
      38: areturn
      39: aload_0
      40: aload_1
      41: invokespecial #30                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      44: areturn

  public reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: lload_1
       5: invokeinterface #24,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #18,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
       9: return

  public R poll();
    Code:
       0: aload_0
       1: getfield      #23                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     153
       8: aload_0
       9: getfield      #6                  // Field done:Z
      12: ifeq          17
      15: aconst_null
      16: areturn
      17: lconst_0
      18: lstore_1
      19: aload_0
      20: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      23: invokeinterface #31,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
      28: astore_3
      29: aload_3
      30: ifnull        132
      33: aload_0
      34: getfield      #4                  // Field handler:Ljava/util/function/BiConsumer;
      37: aload_3
      38: aload_0
      39: invokeinterface #8,  3            // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      44: aload_0
      45: getfield      #13                 // Field data:Ljava/lang/Object;
      48: astore        4
      50: aload_0
      51: aconst_null
      52: putfield      #13                 // Field data:Ljava/lang/Object;
      55: aload_0
      56: getfield      #15                 // Field stop:Z
      59: ifeq          117
      62: aload_0
      63: iconst_1
      64: putfield      #6                  // Field done:Z
      67: aload_0
      68: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      71: invokeinterface #18,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
      76: aload_0
      77: getfield      #16                 // Field error:Ljava/lang/Throwable;
      80: ifnull        105
      83: aconst_null
      84: aload_0
      85: getfield      #16                 // Field error:Ljava/lang/Throwable;
      88: aload_3
      89: aload_0
      90: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      93: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      98: invokestatic  #11                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     101: invokestatic  #32                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     104: athrow
     105: aload_0
     106: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     109: invokeinterface #19,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     114: aload         4
     116: areturn
     117: aload         4
     119: ifnull        125
     122: aload         4
     124: areturn
     125: lload_1
     126: lconst_1
     127: ladd
     128: lstore_1
     129: goto          150
     132: lload_1
     133: lconst_0
     134: lcmp
     135: ifeq          148
     138: aload_0
     139: lload_1
     140: invokevirtual #33                 // Method request:(J)V
     143: lconst_0
     144: lstore_1
     145: goto          150
     148: aconst_null
     149: areturn
     150: goto          19
     153: aload_0
     154: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     157: invokeinterface #31,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
     162: astore_1
     163: aload_1
     164: ifnull        240
     167: aload_0
     168: getfield      #4                  // Field handler:Ljava/util/function/BiConsumer;
     171: aload_1
     172: aload_0
     173: invokeinterface #8,  3            // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
     178: aload_0
     179: getfield      #13                 // Field data:Ljava/lang/Object;
     182: astore_2
     183: aload_0
     184: aconst_null
     185: putfield      #13                 // Field data:Ljava/lang/Object;
     188: aload_0
     189: getfield      #15                 // Field stop:Z
     192: ifeq          231
     195: aload_0
     196: iconst_1
     197: putfield      #6                  // Field done:Z
     200: aload_0
     201: getfield      #16                 // Field error:Ljava/lang/Throwable;
     204: ifnull        229
     207: aconst_null
     208: aload_0
     209: getfield      #16                 // Field error:Ljava/lang/Throwable;
     212: aload_1
     213: aload_0
     214: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     217: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     222: invokestatic  #11                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     225: invokestatic  #32                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     228: athrow
     229: aload_2
     230: areturn
     231: aload_2
     232: ifnull        237
     235: aload_2
     236: areturn
     237: goto          242
     240: aconst_null
     241: areturn
     242: goto          153

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #34,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
       9: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #35,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
       9: return

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_4
       2: iand
       3: ifeq          8
       6: iconst_0
       7: ireturn
       8: aload_0
       9: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      12: iload_1
      13: invokeinterface #36,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      18: istore_2
      19: aload_0
      20: iload_2
      21: putfield      #23                 // Field sourceMode:I
      24: iload_2
      25: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #10                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #37,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
       9: ireturn

  public void complete();
    Code:
       0: aload_0
       1: getfield      #15                 // Field stop:Z
       4: ifeq          17
       7: new           #38                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #39                 // String Cannot complete after a complete or error
      13: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #15                 // Field stop:Z
      22: return

  public void error(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #15                 // Field stop:Z
       4: ifeq          17
       7: new           #38                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #41                 // String Cannot error after a complete or error
      13: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: ldc           #42                 // String error
      21: invokestatic  #43                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #9                  // class java/lang/Throwable
      27: putfield      #16                 // Field error:Ljava/lang/Throwable;
      30: aload_0
      31: iconst_1
      32: putfield      #15                 // Field stop:Z
      35: return

  public void next(R);
    Code:
       0: aload_0
       1: getfield      #13                 // Field data:Ljava/lang/Object;
       4: ifnull        17
       7: new           #38                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #44                 // String Cannot emit more than one data
      13: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #15                 // Field stop:Z
      21: ifeq          34
      24: new           #38                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #45                 // String Cannot emit after a complete or error
      30: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: ldc           #46                 // String data
      38: invokestatic  #43                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      41: putfield      #13                 // Field data:Ljava/lang/Object;
      44: return
}
