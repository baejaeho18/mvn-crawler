Compiled from "RingBuffer.java"
final class reactor.core.publisher.RingBuffer$Reader {
  private final reactor.util.concurrent.WaitStrategy waitStrategy;

  private volatile boolean alerted;

  private final reactor.core.publisher.RingBuffer$Sequence cursorSequence;

  private final reactor.core.publisher.RingBufferProducer sequenceProducer;

  reactor.core.publisher.RingBuffer$Reader(reactor.core.publisher.RingBufferProducer, reactor.util.concurrent.WaitStrategy, reactor.core.publisher.RingBuffer$Sequence);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field alerted:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field sequenceProducer:Lreactor/core/publisher/RingBufferProducer;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field waitStrategy:Lreactor/util/concurrent/WaitStrategy;
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field cursorSequence:Lreactor/core/publisher/RingBuffer$Sequence;
      24: return

  long waitFor(long, java.lang.Runnable) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field alerted:Z
       4: ifeq          10
       7: invokestatic  #6                  // Method reactor/util/concurrent/WaitStrategy.alert:()V
      10: aload_0
      11: getfield      #4                  // Field waitStrategy:Lreactor/util/concurrent/WaitStrategy;
      14: lload_1
      15: aload_0
      16: getfield      #5                  // Field cursorSequence:Lreactor/core/publisher/RingBuffer$Sequence;
      19: aload_3
      20: invokevirtual #7                  // Method reactor/util/concurrent/WaitStrategy.waitFor:(JLjava/util/function/LongSupplier;Ljava/lang/Runnable;)J
      23: lstore        4
      25: lload         4
      27: lload_1
      28: lcmp
      29: ifge          35
      32: lload         4
      34: lreturn
      35: aload_0
      36: getfield      #3                  // Field sequenceProducer:Lreactor/core/publisher/RingBufferProducer;
      39: lload_1
      40: lload         4
      42: invokevirtual #8                  // Method reactor/core/publisher/RingBufferProducer.getHighestPublishedSequence:(JJ)J
      45: lreturn

  boolean isAlerted();
    Code:
       0: aload_0
       1: getfield      #2                  // Field alerted:Z
       4: ireturn

  void alert();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field alerted:Z
       5: aload_0
       6: getfield      #4                  // Field waitStrategy:Lreactor/util/concurrent/WaitStrategy;
       9: invokevirtual #9                  // Method reactor/util/concurrent/WaitStrategy.signalAllWhenBlocking:()V
      12: return

  void signal();
    Code:
       0: aload_0
       1: getfield      #4                  // Field waitStrategy:Lreactor/util/concurrent/WaitStrategy;
       4: invokevirtual #9                  // Method reactor/util/concurrent/WaitStrategy.signalAllWhenBlocking:()V
       7: return

  void clearAlert();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field alerted:Z
       5: return
}
