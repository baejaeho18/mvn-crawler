Compiled from "MpscLinkedQueue.java"
final class reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode<E> {
  private volatile reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode<E> next;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode, reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode> NEXT_UPDATER;

  private E value;

  reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Ljava/lang/Object;)V
       5: return

  reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode(E);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method spValue:(Ljava/lang/Object;)V
       9: return

  public E getAndNullValue();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method lpValue:()Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: invokevirtual #3                  // Method spValue:(Ljava/lang/Object;)V
      10: aload_1
      11: areturn

  public E lpValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/lang/Object;
       4: areturn

  public void spValue(E);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field value:Ljava/lang/Object;
       5: return

  public void soNext(reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode<E>);
    Code:
       0: getstatic     #6                  // Field NEXT_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: return

  public reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode<E> lvNext();
    Code:
       0: aload_0
       1: getfield      #8                  // Field next:Lreactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode;
       4: areturn

  static {};
    Code:
       0: ldc           #9                  // class reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode
       2: ldc           #9                  // class reactor/util/concurrent/MpscLinkedQueue$LinkedQueueNode
       4: ldc           #10                 // String next
       6: invokestatic  #11                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #6                  // Field NEXT_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: return
}
