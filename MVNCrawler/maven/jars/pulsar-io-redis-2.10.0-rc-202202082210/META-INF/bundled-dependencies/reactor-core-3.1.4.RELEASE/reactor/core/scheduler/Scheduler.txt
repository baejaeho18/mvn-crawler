Compiled from "Scheduler.java"
public interface reactor.core.scheduler.Scheduler extends reactor.core.Disposable {
  public abstract reactor.core.Disposable schedule(java.lang.Runnable);

  public default reactor.core.Disposable schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: invokestatic  #1                  // Method reactor/core/Exceptions.failWithRejectedNotTimeCapable:()Ljava/util/concurrent/RejectedExecutionException;
       3: athrow

  public default reactor.core.Disposable schedulePeriodically(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: invokestatic  #1                  // Method reactor/core/Exceptions.failWithRejectedNotTimeCapable:()Ljava/util/concurrent/RejectedExecutionException;
       3: athrow

  public default long now(java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method java/lang/System.currentTimeMillis:()J
       4: getstatic     #3                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       7: invokevirtual #4                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      10: lreturn

  public abstract reactor.core.scheduler.Scheduler$Worker createWorker();

  public default void dispose();
    Code:
       0: return

  public default void start();
    Code:
       0: return
}
