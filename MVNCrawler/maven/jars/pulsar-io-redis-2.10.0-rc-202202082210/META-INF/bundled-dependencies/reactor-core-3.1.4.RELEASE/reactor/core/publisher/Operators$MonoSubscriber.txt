Compiled from "Operators.java"
public class reactor.core.publisher.Operators$MonoSubscriber<I, O> implements reactor.core.publisher.InnerOperator<I, O>, reactor.core.Fuseable, reactor.core.Fuseable$QueueSubscription<O> {
  protected final reactor.core.CoreSubscriber<? super O> actual;

  protected O value;

  volatile int state;

  static final int NO_REQUEST_NO_VALUE;

  static final int NO_REQUEST_HAS_VALUE;

  static final int HAS_REQUEST_NO_VALUE;

  static final int HAS_REQUEST_HAS_VALUE;

  static final int CANCELLED;

  static final int FUSED_EMPTY;

  static final int FUSED_READY;

  static final int FUSED_CONSUMED;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.Operators$MonoSubscriber> STATE;

  public reactor.core.publisher.Operators$MonoSubscriber(reactor.core.CoreSubscriber<? super O>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_4
       2: putfield      #4                  // Field state:I
       5: aload_0
       6: aconst_null
       7: putfield      #5                  // Field value:Ljava/lang/Object;
      10: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #6                  // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #7                  // Method isCancelled:()Z
      11: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #9                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      19: if_acmpne     47
      22: aload_0
      23: getfield      #4                  // Field state:I
      26: iconst_3
      27: if_icmpeq     38
      30: aload_0
      31: getfield      #4                  // Field state:I
      34: iconst_1
      35: if_icmpne     42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      46: areturn
      47: aload_1
      48: getstatic     #10                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      51: if_acmpne     60
      54: ldc           #12                 // int 2147483647
      56: invokestatic  #13                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: areturn
      60: aload_0
      61: aload_1
      62: invokespecial #14                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      65: areturn

  public final void clear();
    Code:
       0: getstatic     #15                 // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: bipush        32
       6: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
       9: aload_0
      10: aconst_null
      11: putfield      #5                  // Field value:Ljava/lang/Object;
      14: return

  public final void complete(O);
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: istore_2
       5: iload_2
       6: bipush        8
       8: if_icmpne     52
      11: aload_0
      12: aload_1
      13: invokevirtual #17                 // Method setValue:(Ljava/lang/Object;)V
      16: getstatic     #15                 // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      19: aload_0
      20: bipush        16
      22: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
      25: aload_0
      26: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      29: astore_3
      30: aload_3
      31: aload_1
      32: invokeinterface #18,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      37: aload_0
      38: getfield      #4                  // Field state:I
      41: iconst_4
      42: if_icmpeq     51
      45: aload_3
      46: invokeinterface #19,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      51: return
      52: iload_2
      53: bipush        -3
      55: iand
      56: ifeq          60
      59: return
      60: iload_2
      61: iconst_2
      62: if_icmpne     100
      65: getstatic     #15                 // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      68: aload_0
      69: iconst_3
      70: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
      73: aload_0
      74: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      77: astore_3
      78: aload_3
      79: aload_1
      80: invokeinterface #18,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      85: aload_0
      86: getfield      #4                  // Field state:I
      89: iconst_4
      90: if_icmpeq     99
      93: aload_3
      94: invokeinterface #19,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      99: return
     100: aload_0
     101: aload_1
     102: invokevirtual #17                 // Method setValue:(Ljava/lang/Object;)V
     105: getstatic     #15                 // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     108: aload_0
     109: iconst_0
     110: iconst_1
     111: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     114: ifeq          118
     117: return
     118: aload_0
     119: getfield      #4                  // Field state:I
     122: istore_2
     123: iload_2
     124: iconst_4
     125: if_icmpne     5
     128: aload_0
     129: aconst_null
     130: putfield      #5                  // Field value:Ljava/lang/Object;
     133: return

  public final reactor.core.CoreSubscriber<? super O> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public final boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: bipush        16
       6: if_icmpeq     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: invokeinterface #21,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
       9: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onNext(I);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method setValue:(Ljava/lang/Object;)V
       5: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: return

  public final O poll();
    Code:
       0: getstatic     #15                 // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: bipush        16
       9: if_icmpne     33
      12: getstatic     #15                 // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      15: aload_0
      16: bipush        32
      18: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
      21: aload_0
      22: getfield      #5                  // Field value:Ljava/lang/Object;
      25: astore_1
      26: aload_0
      27: aconst_null
      28: putfield      #5                  // Field value:Ljava/lang/Object;
      31: aload_1
      32: areturn
      33: aconst_null
      34: areturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #24                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          100
       7: aload_0
       8: getfield      #4                  // Field state:I
      11: istore_3
      12: iload_3
      13: bipush        -2
      15: iand
      16: ifeq          20
      19: return
      20: iload_3
      21: iconst_1
      22: if_icmpne     84
      25: getstatic     #15                 // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      28: aload_0
      29: iconst_1
      30: iconst_3
      31: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      34: ifeq          83
      37: aload_0
      38: getfield      #5                  // Field value:Ljava/lang/Object;
      41: astore        4
      43: aload         4
      45: ifnull        83
      48: aload_0
      49: aconst_null
      50: putfield      #5                  // Field value:Ljava/lang/Object;
      53: aload_0
      54: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      57: astore        5
      59: aload         5
      61: aload         4
      63: invokeinterface #18,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      68: aload_0
      69: getfield      #4                  // Field state:I
      72: iconst_4
      73: if_icmpeq     83
      76: aload         5
      78: invokeinterface #19,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      83: return
      84: getstatic     #15                 // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      87: aload_0
      88: iconst_0
      89: iconst_2
      90: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      93: ifeq          97
      96: return
      97: goto          7
     100: return

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_2
       2: iand
       3: ifeq          17
       6: getstatic     #15                 // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       9: aload_0
      10: bipush        8
      12: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
      15: iconst_2
      16: ireturn
      17: iconst_0
      18: ireturn

  public void setValue(O);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field value:Ljava/lang/Object;
       5: return

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isEmpty:()Z
       4: ifeq          11
       7: iconst_0
       8: goto          12
      11: iconst_1
      12: ireturn

  static {};
    Code:
       0: ldc           #3                  // class reactor/core/publisher/Operators$MonoSubscriber
       2: ldc           #27                 // String state
       4: invokestatic  #28                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #15                 // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
