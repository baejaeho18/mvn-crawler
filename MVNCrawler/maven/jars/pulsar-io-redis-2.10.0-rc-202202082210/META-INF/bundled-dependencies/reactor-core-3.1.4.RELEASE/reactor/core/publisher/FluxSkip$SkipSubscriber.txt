Compiled from "FluxSkip.java"
final class reactor.core.publisher.FluxSkip$SkipSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  long remaining;

  org.reactivestreams.Subscription s;

  reactor.core.publisher.FluxSkip$SkipSubscriber(reactor.core.CoreSubscriber<? super T>, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field remaining:J
      14: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #5                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          38
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #3                  // Field remaining:J
      20: lstore_2
      21: aload_0
      22: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      25: aload_0
      26: invokeinterface #6,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      31: aload_1
      32: lload_2
      33: invokeinterface #7,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      38: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:J
       4: lstore_2
       5: lload_2
       6: lconst_0
       7: lcmp
       8: ifne          24
      11: aload_0
      12: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      15: aload_1
      16: invokeinterface #8,  2            // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      21: goto          31
      24: aload_0
      25: lload_2
      26: lconst_1
      27: lsub
      28: putfield      #3                  // Field remaining:J
      31: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: invokeinterface #10,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
       9: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #11                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_0
      13: aload_1
      14: invokespecial #12                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      17: areturn

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #7,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #13,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return
}
