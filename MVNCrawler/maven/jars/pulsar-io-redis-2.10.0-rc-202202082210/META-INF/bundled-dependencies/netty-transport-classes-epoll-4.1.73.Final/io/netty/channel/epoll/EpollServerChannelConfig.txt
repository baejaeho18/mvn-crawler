Compiled from "EpollServerChannelConfig.java"
public class io.netty.channel.epoll.EpollServerChannelConfig extends io.netty.channel.epoll.EpollChannelConfig implements io.netty.channel.socket.ServerSocketChannelConfig {
  private volatile int backlog;

  private volatile int pendingFastOpenRequestsThreshold;

  io.netty.channel.epoll.EpollServerChannelConfig(io.netty.channel.epoll.AbstractEpollChannel);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class io/netty/channel/ServerChannelRecvByteBufAllocator
       5: dup
       6: invokespecial #2                  // Method io/netty/channel/ServerChannelRecvByteBufAllocator."<init>":()V
       9: invokespecial #3                  // Method io/netty/channel/epoll/EpollChannelConfig."<init>":(Lio/netty/channel/epoll/AbstractEpollChannel;Lio/netty/channel/RecvByteBufAllocator;)V
      12: aload_0
      13: getstatic     #4                  // Field io/netty/util/NetUtil.SOMAXCONN:I
      16: putfield      #5                  // Field backlog:I
      19: return

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #6                  // Method io/netty/channel/epoll/EpollChannelConfig.getOptions:()Ljava/util/Map;
       5: iconst_4
       6: anewarray     #7                  // class io/netty/channel/ChannelOption
       9: dup
      10: iconst_0
      11: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      14: aastore
      15: dup
      16: iconst_1
      17: getstatic     #9                  // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      20: aastore
      21: dup
      22: iconst_2
      23: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_BACKLOG:Lio/netty/channel/ChannelOption;
      26: aastore
      27: dup
      28: iconst_3
      29: getstatic     #11                 // Field io/netty/channel/ChannelOption.TCP_FASTOPEN:Lio/netty/channel/ChannelOption;
      32: aastore
      33: invokevirtual #12                 // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      36: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #13                 // Method getReceiveBufferSize:()I
      11: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: areturn
      15: aload_1
      16: getstatic     #9                  // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      19: if_acmpne     30
      22: aload_0
      23: invokevirtual #15                 // Method isReuseAddress:()Z
      26: invokestatic  #16                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: areturn
      30: aload_1
      31: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_BACKLOG:Lio/netty/channel/ChannelOption;
      34: if_acmpne     45
      37: aload_0
      38: invokevirtual #17                 // Method getBacklog:()I
      41: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: areturn
      45: aload_1
      46: getstatic     #11                 // Field io/netty/channel/ChannelOption.TCP_FASTOPEN:Lio/netty/channel/ChannelOption;
      49: if_acmpne     60
      52: aload_0
      53: invokevirtual #18                 // Method getTcpFastopen:()I
      56: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: areturn
      60: aload_0
      61: aload_1
      62: invokespecial #19                 // Method io/netty/channel/epoll/EpollChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      65: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #20                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      10: if_acmpne     28
      13: aload_0
      14: aload_2
      15: checkcast     #21                 // class java/lang/Integer
      18: invokevirtual #22                 // Method java/lang/Integer.intValue:()I
      21: invokevirtual #23                 // Method setReceiveBufferSize:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
      24: pop
      25: goto          101
      28: aload_1
      29: getstatic     #9                  // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      32: if_acmpne     50
      35: aload_0
      36: aload_2
      37: checkcast     #24                 // class java/lang/Boolean
      40: invokevirtual #25                 // Method java/lang/Boolean.booleanValue:()Z
      43: invokevirtual #26                 // Method setReuseAddress:(Z)Lio/netty/channel/epoll/EpollServerChannelConfig;
      46: pop
      47: goto          101
      50: aload_1
      51: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_BACKLOG:Lio/netty/channel/ChannelOption;
      54: if_acmpne     72
      57: aload_0
      58: aload_2
      59: checkcast     #21                 // class java/lang/Integer
      62: invokevirtual #22                 // Method java/lang/Integer.intValue:()I
      65: invokevirtual #27                 // Method setBacklog:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
      68: pop
      69: goto          101
      72: aload_1
      73: getstatic     #11                 // Field io/netty/channel/ChannelOption.TCP_FASTOPEN:Lio/netty/channel/ChannelOption;
      76: if_acmpne     94
      79: aload_0
      80: aload_2
      81: checkcast     #21                 // class java/lang/Integer
      84: invokevirtual #22                 // Method java/lang/Integer.intValue:()I
      87: invokevirtual #28                 // Method setTcpFastopen:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
      90: pop
      91: goto          101
      94: aload_0
      95: aload_1
      96: aload_2
      97: invokespecial #29                 // Method io/netty/channel/epoll/EpollChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
     100: ireturn
     101: iconst_1
     102: ireturn

  public boolean isReuseAddress();
    Code:
       0: aload_0
       1: getfield      #30                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #31                 // class io/netty/channel/epoll/AbstractEpollChannel
       7: getfield      #32                 // Field io/netty/channel/epoll/AbstractEpollChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #33                 // Method io/netty/channel/epoll/LinuxSocket.isReuseAddress:()Z
      13: ireturn
      14: astore_1
      15: new           #35                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #36                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.epoll.EpollServerChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: getfield      #30                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #31                 // class io/netty/channel/epoll/AbstractEpollChannel
       7: getfield      #32                 // Field io/netty/channel/epoll/AbstractEpollChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #37                 // Method io/netty/channel/epoll/LinuxSocket.setReuseAddress:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #35                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #36                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public int getReceiveBufferSize();
    Code:
       0: aload_0
       1: getfield      #30                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #31                 // class io/netty/channel/epoll/AbstractEpollChannel
       7: getfield      #32                 // Field io/netty/channel/epoll/AbstractEpollChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #38                 // Method io/netty/channel/epoll/LinuxSocket.getReceiveBufferSize:()I
      13: ireturn
      14: astore_1
      15: new           #35                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #36                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.epoll.EpollServerChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #30                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #31                 // class io/netty/channel/epoll/AbstractEpollChannel
       7: getfield      #32                 // Field io/netty/channel/epoll/AbstractEpollChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #39                 // Method io/netty/channel/epoll/LinuxSocket.setReceiveBufferSize:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #35                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #36                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public int getBacklog();
    Code:
       0: aload_0
       1: getfield      #5                  // Field backlog:I
       4: ireturn

  public io.netty.channel.epoll.EpollServerChannelConfig setBacklog(int);
    Code:
       0: iload_1
       1: ldc           #40                 // String backlog
       3: invokestatic  #41                 // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
       6: pop
       7: aload_0
       8: iload_1
       9: putfield      #5                  // Field backlog:I
      12: aload_0
      13: areturn

  public int getTcpFastopen();
    Code:
       0: aload_0
       1: getfield      #42                 // Field pendingFastOpenRequestsThreshold:I
       4: ireturn

  public io.netty.channel.epoll.EpollServerChannelConfig setTcpFastopen(int);
    Code:
       0: aload_0
       1: getfield      #42                 // Field pendingFastOpenRequestsThreshold:I
       4: ldc           #43                 // String pendingFastOpenRequestsThreshold
       6: invokestatic  #41                 // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
       9: pop
      10: aload_0
      11: iload_1
      12: putfield      #42                 // Field pendingFastOpenRequestsThreshold:I
      15: aload_0
      16: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #44                 // Method io/netty/channel/epoll/EpollChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #45                 // Method io/netty/channel/epoll/EpollChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #46                 // Method io/netty/channel/epoll/EpollChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #47                 // Method io/netty/channel/epoll/EpollChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #48                 // Method io/netty/channel/epoll/EpollChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #49                 // Method io/netty/channel/epoll/EpollChannelConfig.setAutoRead:(Z)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #50                 // Method io/netty/channel/epoll/EpollChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #51                 // Method io/netty/channel/epoll/EpollChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #52                 // Method io/netty/channel/epoll/EpollChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #53                 // Method io/netty/channel/epoll/EpollChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setEpollMode(io.netty.channel.epoll.EpollMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #54                 // Method io/netty/channel/epoll/EpollChannelConfig.setEpollMode:(Lio/netty/channel/epoll/EpollMode;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollChannelConfig setEpollMode(io.netty.channel.epoll.EpollMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method setEpollMode:(Lio/netty/channel/epoll/EpollMode;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #63                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #64                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #63                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #64                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #63                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #64                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #66                 // Method setPerformancePreferences:(III)Lio/netty/channel/epoll/EpollServerChannelConfig;
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #23                 // Method setReceiveBufferSize:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #26                 // Method setReuseAddress:(Z)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setBacklog(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #27                 // Method setBacklog:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: areturn
}
