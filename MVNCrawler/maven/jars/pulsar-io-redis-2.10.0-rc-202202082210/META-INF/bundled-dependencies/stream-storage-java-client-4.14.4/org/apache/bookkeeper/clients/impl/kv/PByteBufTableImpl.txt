Compiled from "PByteBufTableImpl.java"
public class org.apache.bookkeeper.clients.impl.kv.PByteBufTableImpl implements org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> {
  private static final org.slf4j.Logger log;

  static final java.lang.IllegalStateException CAUSE;

  private final org.apache.bookkeeper.api.kv.op.OpFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> opFactory;

  private final org.apache.bookkeeper.api.kv.impl.result.ResultFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> resultFactory;

  private final org.apache.bookkeeper.api.kv.impl.result.KeyValueFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> kvFactory;

  private final java.lang.String streamName;

  private final org.apache.bookkeeper.stream.proto.StreamProperties props;

  private final org.apache.bookkeeper.clients.impl.internal.api.StorageServerClientManager clientManager;

  private final java.util.concurrent.ScheduledExecutorService executor;

  private final org.apache.bookkeeper.clients.impl.kv.TableRangeFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> trFactory;

  private final org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> failRequestTable;

  private final org.apache.bookkeeper.clients.impl.routing.RangeRouter<io.netty.buffer.ByteBuf> rangeRouter;

  private final java.util.concurrent.ConcurrentMap<java.lang.Long, org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> tableRanges;

  public org.apache.bookkeeper.clients.impl.kv.PByteBufTableImpl(java.lang.String, org.apache.bookkeeper.stream.proto.StreamProperties, org.apache.bookkeeper.clients.impl.internal.api.StorageServerClientManager, java.util.concurrent.ScheduledExecutorService, org.apache.bookkeeper.common.util.Backoff$Policy);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload_3
       7: aload         5
       9: invokedynamic #1,  0              // InvokeDynamic #0:openTableRange:(Lorg/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager;Lorg/apache/bookkeeper/common/util/Backoff$Policy;)Lorg/apache/bookkeeper/clients/impl/kv/TableRangeFactory;
      14: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      17: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Lorg/apache/bookkeeper/stream/proto/StreamProperties;Lorg/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/clients/impl/kv/TableRangeFactory;Ljava/util/Optional;)V
      20: return

  public org.apache.bookkeeper.clients.impl.kv.PByteBufTableImpl(java.lang.String, org.apache.bookkeeper.stream.proto.StreamProperties, org.apache.bookkeeper.clients.impl.internal.api.StorageServerClientManager, java.util.concurrent.ScheduledExecutorService, org.apache.bookkeeper.clients.impl.kv.TableRangeFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>, java.util.Optional<org.apache.bookkeeper.clients.impl.routing.RangeRouter<io.netty.buffer.ByteBuf>>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field streamName:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field props:Lorg/apache/bookkeeper/stream/proto/StreamProperties;
      14: aload_0
      15: aload_3
      16: putfield      #7                  // Field clientManager:Lorg/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager;
      19: aload_0
      20: aload         4
      22: putfield      #8                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      25: aload_0
      26: aload         5
      28: putfield      #9                  // Field trFactory:Lorg/apache/bookkeeper/clients/impl/kv/TableRangeFactory;
      31: aload_0
      32: aload         6
      34: new           #10                 // class org/apache/bookkeeper/clients/impl/routing/RangeRouter
      37: dup
      38: invokestatic  #11                 // Method org/apache/bookkeeper/common/router/ByteBufHashRouter.of:()Lorg/apache/bookkeeper/common/router/ByteBufHashRouter;
      41: invokespecial #12                 // Method org/apache/bookkeeper/clients/impl/routing/RangeRouter."<init>":(Lorg/apache/bookkeeper/common/router/HashRouter;)V
      44: invokevirtual #13                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #10                 // class org/apache/bookkeeper/clients/impl/routing/RangeRouter
      50: putfield      #14                 // Field rangeRouter:Lorg/apache/bookkeeper/clients/impl/routing/RangeRouter;
      53: aload_0
      54: new           #15                 // class java/util/concurrent/ConcurrentHashMap
      57: dup
      58: invokespecial #16                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      61: putfield      #17                 // Field tableRanges:Ljava/util/concurrent/ConcurrentMap;
      64: aload_0
      65: new           #18                 // class org/apache/bookkeeper/api/kv/impl/op/OpFactoryImpl
      68: dup
      69: invokespecial #19                 // Method org/apache/bookkeeper/api/kv/impl/op/OpFactoryImpl."<init>":()V
      72: putfield      #20                 // Field opFactory:Lorg/apache/bookkeeper/api/kv/op/OpFactory;
      75: aload_0
      76: new           #21                 // class org/apache/bookkeeper/api/kv/impl/result/ResultFactory
      79: dup
      80: invokespecial #22                 // Method org/apache/bookkeeper/api/kv/impl/result/ResultFactory."<init>":()V
      83: putfield      #23                 // Field resultFactory:Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;
      86: aload_0
      87: new           #24                 // class org/apache/bookkeeper/api/kv/impl/result/KeyValueFactory
      90: dup
      91: invokespecial #25                 // Method org/apache/bookkeeper/api/kv/impl/result/KeyValueFactory."<init>":()V
      94: putfield      #26                 // Field kvFactory:Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;
      97: aload_0
      98: new           #27                 // class org/apache/bookkeeper/clients/impl/kv/PByteBufTableImpl$FailRequestKeyValueSpace
     101: dup
     102: aload_0
     103: getfield      #20                 // Field opFactory:Lorg/apache/bookkeeper/api/kv/op/OpFactory;
     106: aconst_null
     107: invokespecial #28                 // Method org/apache/bookkeeper/clients/impl/kv/PByteBufTableImpl$FailRequestKeyValueSpace."<init>":(Lorg/apache/bookkeeper/api/kv/op/OpFactory;Lorg/apache/bookkeeper/clients/impl/kv/PByteBufTableImpl$1;)V
     110: putfield      #29                 // Field failRequestTable:Lorg/apache/bookkeeper/api/kv/PTable;
     113: return

  public org.apache.bookkeeper.api.kv.op.OpFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> opFactory();
    Code:
       0: aload_0
       1: getfield      #20                 // Field opFactory:Lorg/apache/bookkeeper/api/kv/op/OpFactory;
       4: areturn

  java.util.concurrent.ConcurrentMap<java.lang.Long, org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> getTableRanges();
    Code:
       0: aload_0
       1: getfield      #17                 // Field tableRanges:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  private org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> getTableRange(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #17                 // Field tableRanges:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #31                 // class org/apache/bookkeeper/api/kv/PTable
      13: astore_2
      14: aconst_null
      15: aload_2
      16: if_acmpne     24
      19: aload_0
      20: getfield      #29                 // Field failRequestTable:Lorg/apache/bookkeeper/api/kv/PTable;
      23: areturn
      24: aload_2
      25: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> initialize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field clientManager:Lorg/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager;
       4: aload_0
       5: getfield      #6                  // Field props:Lorg/apache/bookkeeper/stream/proto/StreamProperties;
       8: invokeinterface #32,  2           // InterfaceMethod org/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager.openMetaRangeClient:(Lorg/apache/bookkeeper/stream/proto/StreamProperties;)Lorg/apache/bookkeeper/clients/impl/internal/api/MetaRangeClient;
      13: invokeinterface #33,  1           // InterfaceMethod org/apache/bookkeeper/clients/impl/internal/api/MetaRangeClient.getActiveDataRanges:()Ljava/util/concurrent/CompletableFuture;
      18: aload_0
      19: invokedynamic #34,  0             // InvokeDynamic #1:apply:(Lorg/apache/bookkeeper/clients/impl/kv/PByteBufTableImpl;)Ljava/util/function/Function;
      24: aload_0
      25: getfield      #8                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      28: invokevirtual #35                 // Method java/util/concurrent/CompletableFuture.thenComposeAsync:(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      31: areturn

  java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> refreshRangeSpaces(org.apache.bookkeeper.clients.impl.internal.api.HashStreamRanges);
    Code:
       0: aload_0
       1: getfield      #14                 // Field rangeRouter:Lorg/apache/bookkeeper/clients/impl/routing/RangeRouter;
       4: invokevirtual #36                 // Method org/apache/bookkeeper/clients/impl/routing/RangeRouter.getRanges:()Lorg/apache/bookkeeper/clients/impl/internal/api/HashStreamRanges;
       7: astore_2
       8: aconst_null
       9: aload_2
      10: if_acmpeq     44
      13: aload_2
      14: invokevirtual #37                 // Method org/apache/bookkeeper/clients/impl/internal/api/HashStreamRanges.getMaxRangeId:()J
      17: aload_1
      18: invokevirtual #37                 // Method org/apache/bookkeeper/clients/impl/internal/api/HashStreamRanges.getMaxRangeId:()J
      21: lcmp
      22: iflt          44
      25: getstatic     #38                 // Field log:Lorg/slf4j/Logger;
      28: ldc           #39                 // String No new stream ranges found for stream {}.
      30: aload_0
      31: getfield      #5                  // Field streamName:Ljava/lang/String;
      34: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      39: aload_0
      40: invokestatic  #41                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.value:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      43: areturn
      44: getstatic     #38                 // Field log:Lorg/slf4j/Logger;
      47: invokeinterface #42,  1           // InterfaceMethod org/slf4j/Logger.isInfoEnabled:()Z
      52: ifeq          66
      55: getstatic     #38                 // Field log:Lorg/slf4j/Logger;
      58: ldc           #43                 // String Updated the active ranges to {}
      60: aload_1
      61: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      66: aload_0
      67: getfield      #14                 // Field rangeRouter:Lorg/apache/bookkeeper/clients/impl/routing/RangeRouter;
      70: aload_1
      71: invokevirtual #44                 // Method org/apache/bookkeeper/clients/impl/routing/RangeRouter.setRanges:(Lorg/apache/bookkeeper/clients/impl/internal/api/HashStreamRanges;)Lorg/apache/bookkeeper/clients/impl/internal/api/HashStreamRanges;
      74: pop
      75: aload_1
      76: invokevirtual #45                 // Method org/apache/bookkeeper/clients/impl/internal/api/HashStreamRanges.getRanges:()Ljava/util/NavigableMap;
      79: invokeinterface #46,  1           // InterfaceMethod java/util/NavigableMap.size:()I
      84: invokestatic  #47                 // Method com/google/common/collect/Sets.newHashSetWithExpectedSize:(I)Ljava/util/HashSet;
      87: astore_3
      88: aload_1
      89: invokevirtual #45                 // Method org/apache/bookkeeper/clients/impl/internal/api/HashStreamRanges.getRanges:()Ljava/util/NavigableMap;
      92: aload_0
      93: aload_3
      94: invokedynamic #48,  0             // InvokeDynamic #2:accept:(Lorg/apache/bookkeeper/clients/impl/kv/PByteBufTableImpl;Ljava/util/Set;)Ljava/util/function/BiConsumer;
      99: invokeinterface #49,  2           // InterfaceMethod java/util/NavigableMap.forEach:(Ljava/util/function/BiConsumer;)V
     104: aload_0
     105: getfield      #17                 // Field tableRanges:Ljava/util/concurrent/ConcurrentMap;
     108: invokeinterface #50,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
     113: invokeinterface #51,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     118: astore        4
     120: aload         4
     122: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     127: ifeq          197
     130: aload         4
     132: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     137: checkcast     #54                 // class java/util/Map$Entry
     140: astore        5
     142: aload         5
     144: invokeinterface #55,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     149: checkcast     #56                 // class java/lang/Long
     152: astore        6
     154: aload_3
     155: aload         6
     157: invokeinterface #57,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     162: ifeq          168
     165: goto          120
     168: aload         4
     170: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.remove:()V
     175: aload         5
     177: invokeinterface #59,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     182: checkcast     #31                 // class org/apache/bookkeeper/api/kv/PTable
     185: astore        7
     187: aload         7
     189: invokeinterface #60,  1           // InterfaceMethod org/apache/bookkeeper/api/kv/PTable.close:()V
     194: goto          120
     197: aload_0
     198: invokestatic  #41                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.value:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
     201: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.result.RangeResult<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> get(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, org.apache.bookkeeper.api.kv.options.RangeOption<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field rangeRouter:Lorg/apache/bookkeeper/clients/impl/routing/RangeRouter;
       4: aload_1
       5: invokevirtual #61                 // Method org/apache/bookkeeper/clients/impl/routing/RangeRouter.getRange:(Ljava/lang/Object;)J
       8: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: astore        4
      13: aload_0
      14: aload         4
      16: invokespecial #63                 // Method getTableRange:(Ljava/lang/Long;)Lorg/apache/bookkeeper/api/kv/PTable;
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokeinterface #64,  4           // InterfaceMethod org/apache/bookkeeper/api/kv/PTable.get:(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/bookkeeper/api/kv/options/RangeOption;)Ljava/util/concurrent/CompletableFuture;
      27: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.result.PutResult<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> put(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, org.apache.bookkeeper.api.kv.options.PutOption<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field rangeRouter:Lorg/apache/bookkeeper/clients/impl/routing/RangeRouter;
       4: aload_1
       5: invokevirtual #61                 // Method org/apache/bookkeeper/clients/impl/routing/RangeRouter.getRange:(Ljava/lang/Object;)J
       8: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: astore        5
      13: aload_0
      14: aload         5
      16: invokespecial #63                 // Method getTableRange:(Ljava/lang/Long;)Lorg/apache/bookkeeper/api/kv/PTable;
      19: aload_1
      20: aload_2
      21: aload_3
      22: aload         4
      24: invokeinterface #65,  5           // InterfaceMethod org/apache/bookkeeper/api/kv/PTable.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/bookkeeper/api/kv/options/PutOption;)Ljava/util/concurrent/CompletableFuture;
      29: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.result.DeleteResult<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> delete(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, org.apache.bookkeeper.api.kv.options.DeleteOption<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field rangeRouter:Lorg/apache/bookkeeper/clients/impl/routing/RangeRouter;
       4: aload_1
       5: invokevirtual #61                 // Method org/apache/bookkeeper/clients/impl/routing/RangeRouter.getRange:(Ljava/lang/Object;)J
       8: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: astore        4
      13: aload_0
      14: aload         4
      16: invokespecial #63                 // Method getTableRange:(Ljava/lang/Long;)Lorg/apache/bookkeeper/api/kv/PTable;
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokeinterface #66,  4           // InterfaceMethod org/apache/bookkeeper/api/kv/PTable.delete:(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/bookkeeper/api/kv/options/DeleteOption;)Ljava/util/concurrent/CompletableFuture;
      27: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.result.IncrementResult<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> increment(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, long, org.apache.bookkeeper.api.kv.options.IncrementOption<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field rangeRouter:Lorg/apache/bookkeeper/clients/impl/routing/RangeRouter;
       4: aload_1
       5: invokevirtual #61                 // Method org/apache/bookkeeper/clients/impl/routing/RangeRouter.getRange:(Ljava/lang/Object;)J
       8: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: astore        6
      13: aload_0
      14: aload         6
      16: invokespecial #63                 // Method getTableRange:(Ljava/lang/Long;)Lorg/apache/bookkeeper/api/kv/PTable;
      19: aload_1
      20: aload_2
      21: lload_3
      22: aload         5
      24: invokeinterface #67,  6           // InterfaceMethod org/apache/bookkeeper/api/kv/PTable.increment:(Ljava/lang/Object;Ljava/lang/Object;JLorg/apache/bookkeeper/api/kv/options/IncrementOption;)Ljava/util/concurrent/CompletableFuture;
      29: areturn

  public org.apache.bookkeeper.api.kv.Txn<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> txn(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: getfield      #14                 // Field rangeRouter:Lorg/apache/bookkeeper/clients/impl/routing/RangeRouter;
       4: aload_1
       5: invokevirtual #61                 // Method org/apache/bookkeeper/clients/impl/routing/RangeRouter.getRange:(Ljava/lang/Object;)J
       8: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokespecial #63                 // Method getTableRange:(Ljava/lang/Long;)Lorg/apache/bookkeeper/api/kv/PTable;
      17: aload_1
      18: invokeinterface #68,  2           // InterfaceMethod org/apache/bookkeeper/api/kv/PTable.txn:(Ljava/lang/Object;)Lorg/apache/bookkeeper/api/kv/Txn;
      23: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #17                 // Field tableRanges:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #69,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokedynamic #70,  0             // InvokeDynamic #3:accept:()Ljava/util/function/Consumer;
      14: invokeinterface #71,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      19: return

  public java.util.concurrent.CompletableFuture get(java.lang.Object, java.lang.Object, org.apache.bookkeeper.api.kv.options.RangeOption);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #72                 // class io/netty/buffer/ByteBuf
       5: aload_2
       6: checkcast     #72                 // class io/netty/buffer/ByteBuf
       9: aload_3
      10: invokevirtual #73                 // Method get:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lorg/apache/bookkeeper/api/kv/options/RangeOption;)Ljava/util/concurrent/CompletableFuture;
      13: areturn

  public org.apache.bookkeeper.api.kv.Txn txn(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #72                 // class io/netty/buffer/ByteBuf
       5: invokevirtual #74                 // Method txn:(Lio/netty/buffer/ByteBuf;)Lorg/apache/bookkeeper/api/kv/Txn;
       8: areturn

  public java.util.concurrent.CompletableFuture increment(java.lang.Object, java.lang.Object, long, org.apache.bookkeeper.api.kv.options.IncrementOption);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #72                 // class io/netty/buffer/ByteBuf
       5: aload_2
       6: checkcast     #72                 // class io/netty/buffer/ByteBuf
       9: lload_3
      10: aload         5
      12: invokevirtual #75                 // Method increment:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;JLorg/apache/bookkeeper/api/kv/options/IncrementOption;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  public java.util.concurrent.CompletableFuture delete(java.lang.Object, java.lang.Object, org.apache.bookkeeper.api.kv.options.DeleteOption);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #72                 // class io/netty/buffer/ByteBuf
       5: aload_2
       6: checkcast     #72                 // class io/netty/buffer/ByteBuf
       9: aload_3
      10: invokevirtual #76                 // Method delete:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lorg/apache/bookkeeper/api/kv/options/DeleteOption;)Ljava/util/concurrent/CompletableFuture;
      13: areturn

  public java.util.concurrent.CompletableFuture put(java.lang.Object, java.lang.Object, java.lang.Object, org.apache.bookkeeper.api.kv.options.PutOption);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #72                 // class io/netty/buffer/ByteBuf
       5: aload_2
       6: checkcast     #72                 // class io/netty/buffer/ByteBuf
       9: aload_3
      10: checkcast     #72                 // class io/netty/buffer/ByteBuf
      13: aload         4
      15: invokevirtual #77                 // Method put:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lorg/apache/bookkeeper/api/kv/options/PutOption;)Ljava/util/concurrent/CompletableFuture;
      18: areturn

  private void lambda$refreshRangeSpaces$2(java.util.Set, java.lang.Long, org.apache.bookkeeper.stream.proto.RangeProperties);
    Code:
       0: aload_1
       1: aload_3
       2: invokevirtual #78                 // Method org/apache/bookkeeper/stream/proto/RangeProperties.getRangeId:()J
       5: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokeinterface #79,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      13: pop
      14: aload_0
      15: getfield      #17                 // Field tableRanges:Ljava/util/concurrent/ConcurrentMap;
      18: aload_3
      19: invokevirtual #78                 // Method org/apache/bookkeeper/stream/proto/RangeProperties.getRangeId:()J
      22: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: invokeinterface #80,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      30: ifeq          34
      33: return
      34: aload_0
      35: getfield      #9                  // Field trFactory:Lorg/apache/bookkeeper/clients/impl/kv/TableRangeFactory;
      38: aload_0
      39: getfield      #6                  // Field props:Lorg/apache/bookkeeper/stream/proto/StreamProperties;
      42: aload_3
      43: aload_0
      44: getfield      #8                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      47: aload_0
      48: getfield      #20                 // Field opFactory:Lorg/apache/bookkeeper/api/kv/op/OpFactory;
      51: aload_0
      52: getfield      #23                 // Field resultFactory:Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;
      55: aload_0
      56: getfield      #26                 // Field kvFactory:Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;
      59: invokeinterface #81,  7           // InterfaceMethod org/apache/bookkeeper/clients/impl/kv/TableRangeFactory.openTableRange:(Lorg/apache/bookkeeper/stream/proto/StreamProperties;Lorg/apache/bookkeeper/stream/proto/RangeProperties;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/api/kv/op/OpFactory;Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;)Lorg/apache/bookkeeper/api/kv/PTable;
      64: astore        4
      66: getstatic     #38                 // Field log:Lorg/slf4j/Logger;
      69: invokeinterface #42,  1           // InterfaceMethod org/slf4j/Logger.isInfoEnabled:()Z
      74: ifeq          94
      77: getstatic     #38                 // Field log:Lorg/slf4j/Logger;
      80: ldc           #82                 // String Create table range client for range {}
      82: aload_3
      83: invokevirtual #78                 // Method org/apache/bookkeeper/stream/proto/RangeProperties.getRangeId:()J
      86: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      89: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      94: aload_0
      95: getfield      #17                 // Field tableRanges:Ljava/util/concurrent/ConcurrentMap;
      98: aload_3
      99: invokevirtual #78                 // Method org/apache/bookkeeper/stream/proto/RangeProperties.getRangeId:()J
     102: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     105: aload         4
     107: invokeinterface #83,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: return

  private java.util.concurrent.CompletionStage lambda$initialize$1(org.apache.bookkeeper.clients.impl.internal.api.HashStreamRanges);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #84                 // Method refreshRangeSpaces:(Lorg/apache/bookkeeper/clients/impl/internal/api/HashStreamRanges;)Ljava/util/concurrent/CompletableFuture;
       5: areturn

  private static org.apache.bookkeeper.api.kv.PTable lambda$new$0(org.apache.bookkeeper.clients.impl.internal.api.StorageServerClientManager, org.apache.bookkeeper.common.util.Backoff$Policy, org.apache.bookkeeper.stream.proto.StreamProperties, org.apache.bookkeeper.stream.proto.RangeProperties, java.util.concurrent.ScheduledExecutorService, org.apache.bookkeeper.api.kv.op.OpFactory, org.apache.bookkeeper.api.kv.impl.result.ResultFactory, org.apache.bookkeeper.api.kv.impl.result.KeyValueFactory);
    Code:
       0: new           #85                 // class org/apache/bookkeeper/clients/impl/kv/PByteBufTableRangeImpl
       3: dup
       4: aload_2
       5: invokevirtual #86                 // Method org/apache/bookkeeper/stream/proto/StreamProperties.getStreamId:()J
       8: aload_3
       9: aload_0
      10: aload_3
      11: invokevirtual #87                 // Method org/apache/bookkeeper/stream/proto/RangeProperties.getStorageContainerId:()J
      14: invokeinterface #88,  3           // InterfaceMethod org/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager.getStorageContainerChannel:(J)Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;
      19: aload         4
      21: aload         5
      23: aload         6
      25: aload         7
      27: aload_1
      28: invokespecial #89                 // Method org/apache/bookkeeper/clients/impl/kv/PByteBufTableRangeImpl."<init>":(JLorg/apache/bookkeeper/stream/proto/RangeProperties;Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/api/kv/op/OpFactory;Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;Lorg/apache/bookkeeper/common/util/Backoff$Policy;)V
      31: areturn

  static {};
    Code:
       0: ldc           #90                 // class org/apache/bookkeeper/clients/impl/kv/PByteBufTableImpl
       2: invokestatic  #91                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #38                 // Field log:Lorg/slf4j/Logger;
       8: new           #92                 // class java/lang/IllegalStateException
      11: dup
      12: ldc           #93                 // String No range found for a given routing key
      14: invokespecial #94                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: putstatic     #95                 // Field CAUSE:Ljava/lang/IllegalStateException;
      20: return
}
