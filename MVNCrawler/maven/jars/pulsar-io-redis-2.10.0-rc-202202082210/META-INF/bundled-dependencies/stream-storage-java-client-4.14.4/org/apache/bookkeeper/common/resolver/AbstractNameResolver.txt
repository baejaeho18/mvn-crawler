Compiled from "AbstractNameResolver.java"
public abstract class org.apache.bookkeeper.common.resolver.AbstractNameResolver extends io.grpc.NameResolver {
  private final java.lang.String authority;

  private final org.apache.bookkeeper.common.util.SharedResourceManager$Resource<java.util.concurrent.ExecutorService> executorService;

  private final java.lang.Runnable resolutionTask;

  private boolean shutdown;

  private boolean resolving;

  private io.grpc.NameResolver$Listener listener;

  private java.util.concurrent.ExecutorService executor;

  protected org.apache.bookkeeper.common.resolver.AbstractNameResolver(java.lang.String, org.apache.bookkeeper.common.util.SharedResourceManager$Resource<java.util.concurrent.ExecutorService>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method io/grpc/NameResolver."<init>":()V
       4: new           #5                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #7                  // String //
      13: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokestatic  #10                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      26: astore_3
      27: aload_0
      28: aload_2
      29: putfield      #11                 // Field executorService:Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;
      32: aload_0
      33: aload_3
      34: invokevirtual #12                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      37: ldc           #13                 // String Name URI (%s) doesn\'t have an authority
      39: aload_3
      40: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #15                 // class java/lang/String
      46: putfield      #16                 // Field authority:Ljava/lang/String;
      49: aload_0
      50: new           #17                 // class org/apache/bookkeeper/common/resolver/AbstractNameResolver$ResolverTask
      53: dup
      54: aload_0
      55: aconst_null
      56: invokespecial #18                 // Method org/apache/bookkeeper/common/resolver/AbstractNameResolver$ResolverTask."<init>":(Lorg/apache/bookkeeper/common/resolver/AbstractNameResolver;Lorg/apache/bookkeeper/common/resolver/AbstractNameResolver$1;)V
      59: putfield      #19                 // Field resolutionTask:Ljava/lang/Runnable;
      62: return

  public java.lang.String getServiceAuthority();
    Code:
       0: aload_0
       1: getfield      #16                 // Field authority:Ljava/lang/String;
       4: areturn

  public synchronized void start(io.grpc.NameResolver$Listener);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #1                  // Field listener:Lio/grpc/NameResolver$Listener;
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #20                 // String Resolver already started
      15: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      18: aload_0
      19: invokestatic  #22                 // Method org/apache/bookkeeper/common/util/SharedResourceManager.shared:()Lorg/apache/bookkeeper/common/util/SharedResourceManager;
      22: aload_0
      23: getfield      #11                 // Field executorService:Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;
      26: invokevirtual #23                 // Method org/apache/bookkeeper/common/util/SharedResourceManager.get:(Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;)Ljava/lang/Object;
      29: checkcast     #24                 // class java/util/concurrent/ExecutorService
      32: putfield      #25                 // Field executor:Ljava/util/concurrent/ExecutorService;
      35: aload_0
      36: aload_1
      37: ldc           #26                 // String Listener is null
      39: invokestatic  #27                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #28                 // class io/grpc/NameResolver$Listener
      45: putfield      #1                  // Field listener:Lio/grpc/NameResolver$Listener;
      48: aload_0
      49: invokespecial #29                 // Method resolve:()V
      52: return

  public synchronized void refresh();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #1                  // Field listener:Lio/grpc/NameResolver$Listener;
       5: if_acmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #30                 // String Resolver has not started yet.
      15: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      18: aload_0
      19: invokespecial #29                 // Method resolve:()V
      22: return

  private void resolve();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolving:Z
       4: ifne          14
       7: aload_0
       8: getfield      #3                  // Field shutdown:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: getfield      #25                 // Field executor:Ljava/util/concurrent/ExecutorService;
      19: aload_0
      20: getfield      #19                 // Field resolutionTask:Ljava/lang/Runnable;
      23: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      28: return

  protected abstract java.util.List<io.grpc.EquivalentAddressGroup> getServers();

  public synchronized void shutdown();
    Code:
       0: aload_0
       1: getfield      #3                  // Field shutdown:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #3                  // Field shutdown:Z
      13: aconst_null
      14: aload_0
      15: getfield      #25                 // Field executor:Ljava/util/concurrent/ExecutorService;
      18: if_acmpeq     35
      21: invokestatic  #22                 // Method org/apache/bookkeeper/common/util/SharedResourceManager.shared:()Lorg/apache/bookkeeper/common/util/SharedResourceManager;
      24: aload_0
      25: getfield      #11                 // Field executorService:Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;
      28: aload_0
      29: getfield      #25                 // Field executor:Ljava/util/concurrent/ExecutorService;
      32: invokevirtual #32                 // Method org/apache/bookkeeper/common/util/SharedResourceManager.release:(Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;Ljava/lang/Object;)V
      35: return

  static boolean access$000(org.apache.bookkeeper.common.resolver.AbstractNameResolver);
    Code:
       0: aload_0
       1: getfield      #3                  // Field shutdown:Z
       4: ireturn

  static boolean access$102(org.apache.bookkeeper.common.resolver.AbstractNameResolver, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field resolving:Z
       6: ireturn

  static io.grpc.NameResolver$Listener access$200(org.apache.bookkeeper.common.resolver.AbstractNameResolver);
    Code:
       0: aload_0
       1: getfield      #1                  // Field listener:Lio/grpc/NameResolver$Listener;
       4: areturn
}
