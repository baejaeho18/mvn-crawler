Compiled from "IncrementOpImpl.java"
class org.apache.bookkeeper.api.kv.impl.op.IncrementOpImpl<K, V> implements org.apache.bookkeeper.api.kv.op.IncrementOp<K, V> {
  private final io.netty.util.Recycler$Handle<org.apache.bookkeeper.api.kv.impl.op.IncrementOpImpl<K, V>> handle;

  private K key;

  private long amount;

  private org.apache.bookkeeper.api.kv.options.IncrementOption<K> option;

  public org.apache.bookkeeper.api.kv.op.OpType type();
    Code:
       0: getstatic     #1                  // Field org/apache/bookkeeper/api/kv/op/OpType.INCREMENT:Lorg/apache/bookkeeper/api/kv/op/OpType;
       3: areturn

  org.apache.bookkeeper.api.kv.impl.op.IncrementOpImpl<K, V> key(K);
    Code:
       0: aload_0
       1: getfield      #2                  // Field key:Ljava/lang/Object;
       4: invokestatic  #3                  // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
       7: pop
       8: aload_0
       9: aload_1
      10: invokestatic  #4                  // Method io/netty/util/ReferenceCountUtil.retain:(Ljava/lang/Object;)Ljava/lang/Object;
      13: putfield      #2                  // Field key:Ljava/lang/Object;
      16: aload_0
      17: areturn

  org.apache.bookkeeper.api.kv.impl.op.IncrementOpImpl<K, V> amount(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field amount:J
       5: aload_0
       6: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field key:Ljava/lang/Object;
       4: invokestatic  #3                  // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
       7: pop
       8: aload_0
       9: aconst_null
      10: putfield      #2                  // Field key:Ljava/lang/Object;
      13: aload_0
      14: lconst_0
      15: putfield      #5                  // Field amount:J
      18: aconst_null
      19: aload_0
      20: getfield      #6                  // Field option:Lorg/apache/bookkeeper/api/kv/options/IncrementOption;
      23: if_acmpeq     40
      26: aload_0
      27: getfield      #6                  // Field option:Lorg/apache/bookkeeper/api/kv/options/IncrementOption;
      30: invokeinterface #7,  1            // InterfaceMethod org/apache/bookkeeper/api/kv/options/IncrementOption.close:()V
      35: aload_0
      36: aconst_null
      37: putfield      #6                  // Field option:Lorg/apache/bookkeeper/api/kv/options/IncrementOption;
      40: aload_0
      41: getfield      #8                  // Field handle:Lio/netty/util/Recycler$Handle;
      44: aload_0
      45: invokeinterface #9,  2            // InterfaceMethod io/netty/util/Recycler$Handle.recycle:(Ljava/lang/Object;)V
      50: return

  public io.netty.util.Recycler$Handle<org.apache.bookkeeper.api.kv.impl.op.IncrementOpImpl<K, V>> handle();
    Code:
       0: aload_0
       1: getfield      #8                  // Field handle:Lio/netty/util/Recycler$Handle;
       4: areturn

  public K key();
    Code:
       0: aload_0
       1: getfield      #2                  // Field key:Ljava/lang/Object;
       4: areturn

  public long amount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field amount:J
       4: lreturn

  public org.apache.bookkeeper.api.kv.options.IncrementOption<K> option();
    Code:
       0: aload_0
       1: getfield      #6                  // Field option:Lorg/apache/bookkeeper/api/kv/options/IncrementOption;
       4: areturn

  org.apache.bookkeeper.api.kv.impl.op.IncrementOpImpl<K, V> option(org.apache.bookkeeper.api.kv.options.IncrementOption<K>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field option:Lorg/apache/bookkeeper/api/kv/options/IncrementOption;
       5: aload_0
       6: areturn

  org.apache.bookkeeper.api.kv.impl.op.IncrementOpImpl(io.netty.util.Recycler$Handle<org.apache.bookkeeper.api.kv.impl.op.IncrementOpImpl<K, V>>);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #8                  // Field handle:Lio/netty/util/Recycler$Handle;
       9: return

  public java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #13                 // String IncrementOpImpl(key=
       9: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #15                 // Method key:()Ljava/lang/Object;
      16: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #17                 // String , amount=
      21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #18                 // Method amount:()J
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #20                 // String , option=
      33: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #21                 // Method option:()Lorg/apache/bookkeeper/api/kv/options/IncrementOption;
      40: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #22                 // String )
      45: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn
}
