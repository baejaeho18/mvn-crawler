Compiled from "SimpleStorageClientImpl.java"
public class org.apache.bookkeeper.clients.SimpleStorageClientImpl extends org.apache.bookkeeper.clients.SimpleClientBase implements org.apache.bookkeeper.api.StorageClient {
  private static final org.slf4j.Logger log;

  private static final java.lang.String COMPONENT_NAME;

  private final java.lang.String defaultNamespace;

  private final org.apache.bookkeeper.stream.proto.storage.RootRangeServiceGrpc$RootRangeServiceFutureStub rootRangeService;

  public org.apache.bookkeeper.clients.SimpleStorageClientImpl(java.lang.String, org.apache.bookkeeper.clients.config.StorageClientSettings);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/apache/bookkeeper/clients/SimpleClientBase."<init>":(Lorg/apache/bookkeeper/clients/config/StorageClientSettings;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field defaultNamespace:Ljava/lang/String;
      10: aload_0
      11: aload_0
      12: getfield      #3                  // Field channel:Lio/grpc/Channel;
      15: invokestatic  #4                  // Method org/apache/bookkeeper/stream/proto/storage/RootRangeServiceGrpc.newFutureStub:(Lio/grpc/Channel;)Lorg/apache/bookkeeper/stream/proto/storage/RootRangeServiceGrpc$RootRangeServiceFutureStub;
      18: invokestatic  #5                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      21: invokestatic  #6                  // Method org/apache/bookkeeper/clients/utils/GrpcUtils.configureGrpcStub:(Lio/grpc/stub/AbstractStub;Ljava/util/Optional;)Lio/grpc/stub/AbstractStub;
      24: checkcast     #7                  // class org/apache/bookkeeper/stream/proto/storage/RootRangeServiceGrpc$RootRangeServiceFutureStub
      27: putfield      #8                  // Field rootRangeService:Lorg/apache/bookkeeper/stream/proto/storage/RootRangeServiceGrpc$RootRangeServiceFutureStub;
      30: return

  public org.apache.bookkeeper.clients.SimpleStorageClientImpl(java.lang.String, org.apache.bookkeeper.clients.config.StorageClientSettings, org.apache.bookkeeper.common.util.SharedResourceManager$Resource<org.apache.bookkeeper.common.util.OrderedScheduler>, io.grpc.ManagedChannel);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: iconst_0
       6: invokespecial #9                  // Method org/apache/bookkeeper/clients/SimpleClientBase."<init>":(Lorg/apache/bookkeeper/clients/config/StorageClientSettings;Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;Lio/grpc/ManagedChannel;Z)V
       9: aload_0
      10: aload_1
      11: putfield      #2                  // Field defaultNamespace:Ljava/lang/String;
      14: aload_0
      15: aload         4
      17: invokestatic  #4                  // Method org/apache/bookkeeper/stream/proto/storage/RootRangeServiceGrpc.newFutureStub:(Lio/grpc/Channel;)Lorg/apache/bookkeeper/stream/proto/storage/RootRangeServiceGrpc$RootRangeServiceFutureStub;
      20: invokestatic  #5                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      23: invokestatic  #6                  // Method org/apache/bookkeeper/clients/utils/GrpcUtils.configureGrpcStub:(Lio/grpc/stub/AbstractStub;Ljava/util/Optional;)Lio/grpc/stub/AbstractStub;
      26: checkcast     #7                  // class org/apache/bookkeeper/stream/proto/storage/RootRangeServiceGrpc$RootRangeServiceFutureStub
      29: putfield      #8                  // Field rootRangeService:Lorg/apache/bookkeeper/stream/proto/storage/RootRangeServiceGrpc$RootRangeServiceFutureStub;
      32: return

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> openPTable(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field defaultNamespace:Ljava/lang/String;
       5: aload_1
       6: invokevirtual #10                 // Method openPTable:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       9: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> openPTable(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #11                 // Field COMPONENT_NAME:Ljava/lang/String;
       3: aload_0
       4: invokevirtual #12                 // Method isClosed:()Z
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokedynamic #13,  0             // InvokeDynamic #0:run:(Lorg/apache/bookkeeper/clients/SimpleStorageClientImpl;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/bookkeeper/common/util/CompletableRunnable;
      15: invokestatic  #14                 // Method org/apache/bookkeeper/common/util/ExceptionUtils.callAndHandleClosedAsync:(Ljava/lang/String;ZLorg/apache/bookkeeper/common/util/CompletableRunnable;)Ljava/util/concurrent/CompletableFuture;
      18: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.Table<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> openTable(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field defaultNamespace:Ljava/lang/String;
       5: aload_1
       6: invokevirtual #15                 // Method openTable:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       9: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.Table<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> openTable(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #10                 // Method openPTable:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       6: invokedynamic #16,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      11: invokevirtual #17                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      14: areturn

  private void openTableImpl(java.lang.String, java.lang.String, java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>>);
    Code:
       0: aload_0
       1: getfield      #18                 // Field retryUtils:Lorg/apache/bookkeeper/clients/utils/RetryUtils;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #19,  0             // InvokeDynamic #2:get:(Lorg/apache/bookkeeper/clients/SimpleStorageClientImpl;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      12: invokevirtual #20                 // Method org/apache/bookkeeper/clients/utils/RetryUtils.execute:(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;
      15: aload_1
      16: aload_2
      17: invokedynamic #21,  0             // InvokeDynamic #3:apply:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Function;
      22: invokevirtual #22                 // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      25: astore        4
      27: aload         4
      29: aload_0
      30: invokedynamic #23,  0             // InvokeDynamic #4:apply:(Lorg/apache/bookkeeper/clients/SimpleStorageClientImpl;)Ljava/util/function/Function;
      35: invokevirtual #17                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      38: aload_3
      39: invokestatic  #24                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.proxyTo:(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V
      42: return

  private org.apache.bookkeeper.api.kv.PTable lambda$openTableImpl$4(org.apache.bookkeeper.stream.proto.StreamProperties);
    Code:
       0: new           #25                 // class org/apache/bookkeeper/clients/impl/kv/PByteBufSimpleTableImpl
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #26                 // Field managedChannel:Lio/grpc/ManagedChannel;
       9: getstatic     #27                 // Field io/grpc/CallOptions.DEFAULT:Lio/grpc/CallOptions;
      12: aload_0
      13: getfield      #18                 // Field retryUtils:Lorg/apache/bookkeeper/clients/utils/RetryUtils;
      16: invokespecial #28                 // Method org/apache/bookkeeper/clients/impl/kv/PByteBufSimpleTableImpl."<init>":(Lorg/apache/bookkeeper/stream/proto/StreamProperties;Lio/grpc/Channel;Lio/grpc/CallOptions;Lorg/apache/bookkeeper/clients/utils/RetryUtils;)V
      19: areturn

  private static java.util.concurrent.CompletionStage lambda$openTableImpl$3(java.lang.String, java.lang.String, org.apache.bookkeeper.stream.proto.storage.GetStreamResponse);
    Code:
       0: getstatic     #29                 // Field org/apache/bookkeeper/stream/proto/storage/StatusCode.SUCCESS:Lorg/apache/bookkeeper/stream/proto/storage/StatusCode;
       3: aload_2
       4: invokevirtual #30                 // Method org/apache/bookkeeper/stream/proto/storage/GetStreamResponse.getCode:()Lorg/apache/bookkeeper/stream/proto/storage/StatusCode;
       7: if_acmpne     95
      10: aload_2
      11: invokevirtual #31                 // Method org/apache/bookkeeper/stream/proto/storage/GetStreamResponse.getStreamProps:()Lorg/apache/bookkeeper/stream/proto/StreamProperties;
      14: astore_3
      15: getstatic     #32                 // Field log:Lorg/slf4j/Logger;
      18: ldc           #33                 // String Retrieved table properties for table {}/{} : {}
      20: iconst_3
      21: anewarray     #34                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_0
      27: aastore
      28: dup
      29: iconst_1
      30: aload_1
      31: aastore
      32: dup
      33: iconst_2
      34: aload_3
      35: aastore
      36: invokeinterface #35,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      41: getstatic     #36                 // Field org/apache/bookkeeper/stream/proto/StorageType.TABLE:Lorg/apache/bookkeeper/stream/proto/StorageType;
      44: aload_3
      45: invokevirtual #37                 // Method org/apache/bookkeeper/stream/proto/StreamProperties.getStreamConf:()Lorg/apache/bookkeeper/stream/proto/StreamConfiguration;
      48: invokevirtual #38                 // Method org/apache/bookkeeper/stream/proto/StreamConfiguration.getStorageType:()Lorg/apache/bookkeeper/stream/proto/StorageType;
      51: if_acmpeq     90
      54: new           #39                 // class org/apache/bookkeeper/api/exceptions/ApiException
      57: dup
      58: new           #40                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #42                 // String Can\'t open a non-table storage entity :
      67: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_3
      71: invokevirtual #37                 // Method org/apache/bookkeeper/stream/proto/StreamProperties.getStreamConf:()Lorg/apache/bookkeeper/stream/proto/StreamConfiguration;
      74: invokevirtual #38                 // Method org/apache/bookkeeper/stream/proto/StreamConfiguration.getStorageType:()Lorg/apache/bookkeeper/stream/proto/StorageType;
      77: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #46                 // Method org/apache/bookkeeper/api/exceptions/ApiException."<init>":(Ljava/lang/String;)V
      86: invokestatic  #47                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.exception:(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;
      89: areturn
      90: aload_3
      91: invokestatic  #48                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.value:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      94: areturn
      95: aload_0
      96: aload_2
      97: invokevirtual #30                 // Method org/apache/bookkeeper/stream/proto/storage/GetStreamResponse.getCode:()Lorg/apache/bookkeeper/stream/proto/storage/StatusCode;
     100: invokestatic  #49                 // Method org/apache/bookkeeper/clients/impl/internal/ProtocolInternalUtils.createRootRangeException:(Ljava/lang/String;Lorg/apache/bookkeeper/stream/proto/storage/StatusCode;)Ljava/lang/Throwable;
     103: invokestatic  #47                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.exception:(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;
     106: areturn

  private java.util.concurrent.CompletableFuture lambda$openTableImpl$2(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field rootRangeService:Lorg/apache/bookkeeper/stream/proto/storage/RootRangeServiceGrpc$RootRangeServiceFutureStub;
       4: aload_1
       5: aload_2
       6: invokestatic  #50                 // Method org/apache/bookkeeper/stream/protocol/util/ProtoUtils.createGetStreamRequest:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/bookkeeper/stream/proto/storage/GetStreamRequest;
       9: invokevirtual #51                 // Method org/apache/bookkeeper/stream/proto/storage/RootRangeServiceGrpc$RootRangeServiceFutureStub.getStream:(Lorg/apache/bookkeeper/stream/proto/storage/GetStreamRequest;)Lcom/google/common/util/concurrent/ListenableFuture;
      12: invokestatic  #52                 // Method org/apache/bookkeeper/common/util/ListenableFutures.fromListenableFuture:(Lcom/google/common/util/concurrent/ListenableFuture;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  private static org.apache.bookkeeper.api.kv.Table lambda$openTable$1(org.apache.bookkeeper.api.kv.PTable);
    Code:
       0: new           #53                 // class org/apache/bookkeeper/clients/impl/kv/ByteBufTableImpl
       3: dup
       4: aload_0
       5: invokespecial #54                 // Method org/apache/bookkeeper/clients/impl/kv/ByteBufTableImpl."<init>":(Lorg/apache/bookkeeper/api/kv/PTable;)V
       8: areturn

  private void lambda$openPTable$0(java.lang.String, java.lang.String, java.util.concurrent.CompletableFuture);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #55                 // Method openTableImpl:(Ljava/lang/String;Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V
       7: return

  static {};
    Code:
       0: ldc           #56                 // class org/apache/bookkeeper/clients/SimpleStorageClientImpl
       2: invokestatic  #57                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #32                 // Field log:Lorg/slf4j/Logger;
       8: ldc           #56                 // class org/apache/bookkeeper/clients/SimpleStorageClientImpl
      10: invokevirtual #58                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      13: putstatic     #11                 // Field COMPONENT_NAME:Ljava/lang/String;
      16: return
}
