Compiled from "RetryUtils.java"
public class org.apache.bookkeeper.clients.utils.RetryUtils {
  static final java.util.function.Predicate<java.lang.Throwable> DEFAULT_CLIENT_RETRY_PREDICATE;

  private final java.util.function.Predicate<java.lang.Throwable> retryPredicate;

  private final org.apache.bookkeeper.common.util.Backoff$Policy backoffPolicy;

  private final org.apache.bookkeeper.common.util.OrderedScheduler scheduler;

  private static boolean shouldRetryOnException(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #1                  // class io/grpc/StatusRuntimeException
       4: ifne          14
       7: aload_0
       8: instanceof    #2                  // class io/grpc/StatusException
      11: ifeq          84
      14: aload_0
      15: instanceof    #2                  // class io/grpc/StatusException
      18: ifeq          32
      21: aload_0
      22: checkcast     #2                  // class io/grpc/StatusException
      25: invokevirtual #3                  // Method io/grpc/StatusException.getStatus:()Lio/grpc/Status;
      28: astore_1
      29: goto          40
      32: aload_0
      33: checkcast     #1                  // class io/grpc/StatusRuntimeException
      36: invokevirtual #4                  // Method io/grpc/StatusRuntimeException.getStatus:()Lio/grpc/Status;
      39: astore_1
      40: getstatic     #5                  // Field org/apache/bookkeeper/clients/utils/RetryUtils$1.$SwitchMap$io$grpc$Status$Code:[I
      43: aload_1
      44: invokevirtual #6                  // Method io/grpc/Status.getCode:()Lio/grpc/Status$Code;
      47: invokevirtual #7                  // Method io/grpc/Status$Code.ordinal:()I
      50: iaload
      51: tableswitch   { // 1 to 4
                     1: 80
                     2: 80
                     3: 80
                     4: 80
               default: 82
          }
      80: iconst_0
      81: ireturn
      82: iconst_1
      83: ireturn
      84: aload_0
      85: instanceof    #8                  // class java/lang/RuntimeException
      88: ifeq          93
      91: iconst_0
      92: ireturn
      93: iconst_0
      94: ireturn

  public static org.apache.bookkeeper.clients.utils.RetryUtils create(org.apache.bookkeeper.common.util.Backoff$Policy, org.apache.bookkeeper.common.util.OrderedScheduler);
    Code:
       0: getstatic     #9                  // Field DEFAULT_CLIENT_RETRY_PREDICATE:Ljava/util/function/Predicate;
       3: aload_0
       4: aload_1
       5: invokestatic  #10                 // Method create:(Ljava/util/function/Predicate;Lorg/apache/bookkeeper/common/util/Backoff$Policy;Lorg/apache/bookkeeper/common/util/OrderedScheduler;)Lorg/apache/bookkeeper/clients/utils/RetryUtils;
       8: areturn

  public static org.apache.bookkeeper.clients.utils.RetryUtils create(java.util.function.Predicate<java.lang.Throwable>, org.apache.bookkeeper.common.util.Backoff$Policy, org.apache.bookkeeper.common.util.OrderedScheduler);
    Code:
       0: new           #11                 // class org/apache/bookkeeper/clients/utils/RetryUtils
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #12                 // Method "<init>":(Ljava/util/function/Predicate;Lorg/apache/bookkeeper/common/util/Backoff$Policy;Lorg/apache/bookkeeper/common/util/OrderedScheduler;)V
      10: areturn

  private org.apache.bookkeeper.clients.utils.RetryUtils(java.util.function.Predicate<java.lang.Throwable>, org.apache.bookkeeper.common.util.Backoff$Policy, org.apache.bookkeeper.common.util.OrderedScheduler);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #14                 // Field retryPredicate:Ljava/util/function/Predicate;
       9: aload_0
      10: aload_2
      11: putfield      #15                 // Field backoffPolicy:Lorg/apache/bookkeeper/common/util/Backoff$Policy;
      14: aload_0
      15: aload_3
      16: putfield      #16                 // Field scheduler:Lorg/apache/bookkeeper/common/util/OrderedScheduler;
      19: return

  public <T> java.util.concurrent.CompletableFuture<T> execute(java.util.function.Supplier<java.util.concurrent.CompletableFuture<T>>);
    Code:
       0: aload_0
       1: getfield      #15                 // Field backoffPolicy:Lorg/apache/bookkeeper/common/util/Backoff$Policy;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/bookkeeper/common/util/Backoff$Policy.toBackoffs:()Ljava/util/stream/Stream;
       9: aload_0
      10: getfield      #14                 // Field retryPredicate:Ljava/util/function/Predicate;
      13: aload_1
      14: aload_0
      15: getfield      #16                 // Field scheduler:Lorg/apache/bookkeeper/common/util/OrderedScheduler;
      18: invokestatic  #18                 // Method org/apache/bookkeeper/common/util/Retries.run:(Ljava/util/stream/Stream;Ljava/util/function/Predicate;Ljava/util/function/Supplier;Lorg/apache/bookkeeper/common/util/OrderedScheduler;)Ljava/util/concurrent/CompletableFuture;
      21: areturn

  public <T> java.util.concurrent.CompletableFuture<T> executeListenable(java.util.function.Supplier<com.google.common.util.concurrent.ListenableFuture<T>>);
    Code:
       0: aload_0
       1: getfield      #15                 // Field backoffPolicy:Lorg/apache/bookkeeper/common/util/Backoff$Policy;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/bookkeeper/common/util/Backoff$Policy.toBackoffs:()Ljava/util/stream/Stream;
       9: aload_0
      10: getfield      #14                 // Field retryPredicate:Ljava/util/function/Predicate;
      13: aload_1
      14: invokedynamic #19,  0             // InvokeDynamic #0:get:(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;
      19: aload_0
      20: getfield      #16                 // Field scheduler:Lorg/apache/bookkeeper/common/util/OrderedScheduler;
      23: invokestatic  #18                 // Method org/apache/bookkeeper/common/util/Retries.run:(Ljava/util/stream/Stream;Ljava/util/function/Predicate;Ljava/util/function/Supplier;Lorg/apache/bookkeeper/common/util/OrderedScheduler;)Ljava/util/concurrent/CompletableFuture;
      26: areturn

  private static java.util.concurrent.CompletableFuture lambda$executeListenable$1(java.util.function.Supplier);
    Code:
       0: aload_0
       1: invokeinterface #20,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       6: checkcast     #21                 // class com/google/common/util/concurrent/ListenableFuture
       9: invokestatic  #22                 // Method org/apache/bookkeeper/common/util/ListenableFutures.fromListenableFuture:(Lcom/google/common/util/concurrent/ListenableFuture;)Ljava/util/concurrent/CompletableFuture;
      12: areturn

  private static boolean lambda$static$0(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method shouldRetryOnException:(Ljava/lang/Throwable;)Z
       4: ireturn

  static {};
    Code:
       0: invokedynamic #24,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
       5: putstatic     #9                  // Field DEFAULT_CLIENT_RETRY_PREDICATE:Ljava/util/function/Predicate;
       8: return
}
