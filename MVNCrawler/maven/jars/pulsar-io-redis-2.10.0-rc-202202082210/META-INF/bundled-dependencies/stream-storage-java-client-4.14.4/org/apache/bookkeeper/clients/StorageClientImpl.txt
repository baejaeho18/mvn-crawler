Compiled from "StorageClientImpl.java"
public class org.apache.bookkeeper.clients.StorageClientImpl extends org.apache.bookkeeper.common.util.AbstractAutoAsyncCloseable implements org.apache.bookkeeper.api.StorageClient {
  private static final org.slf4j.Logger log;

  private static final java.lang.String COMPONENT_NAME;

  private final java.lang.String defaultNamespace;

  private final org.apache.bookkeeper.clients.config.StorageClientSettings settings;

  private final org.apache.bookkeeper.clients.utils.ClientResources resources;

  private final org.apache.bookkeeper.common.util.OrderedScheduler scheduler;

  private final org.apache.bookkeeper.clients.impl.internal.api.StorageServerClientManager serverManager;

  private final boolean ownServerManager;

  org.apache.bookkeeper.clients.StorageClientImpl(java.lang.String, org.apache.bookkeeper.clients.config.StorageClientSettings, org.apache.bookkeeper.clients.utils.ClientResources);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #1                  // class org/apache/bookkeeper/clients/impl/internal/StorageServerClientManagerImpl
       7: dup
       8: aload_2
       9: aload_3
      10: invokevirtual #2                  // Method org/apache/bookkeeper/clients/utils/ClientResources.scheduler:()Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;
      13: invokespecial #3                  // Method org/apache/bookkeeper/clients/impl/internal/StorageServerClientManagerImpl."<init>":(Lorg/apache/bookkeeper/clients/config/StorageClientSettings;Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;)V
      16: iconst_1
      17: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Lorg/apache/bookkeeper/clients/config/StorageClientSettings;Lorg/apache/bookkeeper/clients/utils/ClientResources;Lorg/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager;Z)V
      20: return

  public org.apache.bookkeeper.clients.StorageClientImpl(java.lang.String, org.apache.bookkeeper.clients.config.StorageClientSettings, org.apache.bookkeeper.clients.utils.ClientResources, org.apache.bookkeeper.clients.impl.internal.api.StorageServerClientManager, boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/bookkeeper/common/util/AbstractAutoAsyncCloseable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field defaultNamespace:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #7                  // Field settings:Lorg/apache/bookkeeper/clients/config/StorageClientSettings;
      14: aload_0
      15: aload_3
      16: putfield      #8                  // Field resources:Lorg/apache/bookkeeper/clients/utils/ClientResources;
      19: aload_0
      20: aload         4
      22: putfield      #9                  // Field serverManager:Lorg/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager;
      25: aload_0
      26: iload         5
      28: putfield      #10                 // Field ownServerManager:Z
      31: aload_0
      32: invokestatic  #11                 // Method org/apache/bookkeeper/common/util/SharedResourceManager.shared:()Lorg/apache/bookkeeper/common/util/SharedResourceManager;
      35: aload_3
      36: invokevirtual #2                  // Method org/apache/bookkeeper/clients/utils/ClientResources.scheduler:()Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;
      39: invokevirtual #12                 // Method org/apache/bookkeeper/common/util/SharedResourceManager.get:(Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;)Ljava/lang/Object;
      42: checkcast     #13                 // class org/apache/bookkeeper/common/util/OrderedScheduler
      45: putfield      #14                 // Field scheduler:Lorg/apache/bookkeeper/common/util/OrderedScheduler;
      48: return

  java.util.concurrent.CompletableFuture<org.apache.bookkeeper.stream.proto.StreamProperties> getStreamProperties(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field serverManager:Lorg/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager;
       4: invokeinterface #15,  1           // InterfaceMethod org/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager.getRootRangeClient:()Lorg/apache/bookkeeper/clients/impl/internal/api/RootRangeClient;
       9: aload_1
      10: aload_2
      11: invokeinterface #16,  3           // InterfaceMethod org/apache/bookkeeper/clients/impl/internal/api/RootRangeClient.getStream:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      16: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> openPTable(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field defaultNamespace:Ljava/lang/String;
       5: aload_1
       6: invokevirtual #17                 // Method openPTable:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       9: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> openPTable(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #18                 // Field COMPONENT_NAME:Ljava/lang/String;
       3: aload_0
       4: invokevirtual #19                 // Method isClosed:()Z
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokedynamic #20,  0             // InvokeDynamic #0:run:(Lorg/apache/bookkeeper/clients/StorageClientImpl;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/bookkeeper/common/util/CompletableRunnable;
      15: invokestatic  #21                 // Method org/apache/bookkeeper/common/util/ExceptionUtils.callAndHandleClosedAsync:(Ljava/lang/String;ZLorg/apache/bookkeeper/common/util/CompletableRunnable;)Ljava/util/concurrent/CompletableFuture;
      18: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.Table<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> openTable(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field defaultNamespace:Ljava/lang/String;
       5: aload_1
       6: invokevirtual #22                 // Method openTable:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       9: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.Table<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> openTable(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #17                 // Method openPTable:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       6: invokedynamic #23,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      11: invokevirtual #24                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      14: areturn

  private void openTableImpl(java.lang.String, java.lang.String, java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #25                 // Method getStreamProperties:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokedynamic #26,  0             // InvokeDynamic #2:apply:(Lorg/apache/bookkeeper/clients/StorageClientImpl;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Function;
      14: invokevirtual #27                 // Method java/util/concurrent/CompletableFuture.thenComposeAsync:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      17: aload_3
      18: invokestatic  #28                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.proxyTo:(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V
      21: return

  protected void closeAsyncOnce(java.util.concurrent.CompletableFuture<java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field scheduler:Lorg/apache/bookkeeper/common/util/OrderedScheduler;
       4: aload_0
       5: aload_1
       6: invokedynamic #29,  0             // InvokeDynamic #3:run:(Lorg/apache/bookkeeper/clients/StorageClientImpl;Ljava/util/concurrent/CompletableFuture;)Ljava/lang/Runnable;
      11: invokevirtual #30                 // Method org/apache/bookkeeper/common/util/OrderedScheduler.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      14: pop
      15: return

  public void close();
    Code:
       0: aload_0
       1: lconst_1
       2: getstatic     #31                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokespecial #32                 // Method org/apache/bookkeeper/common/util/AbstractAutoAsyncCloseable.close:(JLjava/util/concurrent/TimeUnit;)V
       8: goto          23
      11: astore_1
      12: getstatic     #34                 // Field log:Lorg/slf4j/Logger;
      15: ldc           #35                 // String Encountered exceptions on closing the storage client
      17: aload_1
      18: invokeinterface #36,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: aload_0
      24: getfield      #14                 // Field scheduler:Lorg/apache/bookkeeper/common/util/OrderedScheduler;
      27: ldc2_w        #37                 // long 100l
      30: getstatic     #39                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      33: invokevirtual #40                 // Method org/apache/bookkeeper/common/util/OrderedScheduler.forceShutdown:(JLjava/util/concurrent/TimeUnit;)V
      36: return
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/Exception

  private void lambda$closeAsyncOnce$3(java.util.concurrent.CompletableFuture);
    Code:
       0: aload_0
       1: getfield      #10                 // Field ownServerManager:Z
       4: ifeq          16
       7: aload_0
       8: getfield      #9                  // Field serverManager:Lorg/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager;
      11: invokeinterface #41,  1           // InterfaceMethod org/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager.close:()V
      16: aload_1
      17: aconst_null
      18: invokevirtual #42                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      21: pop
      22: invokestatic  #11                 // Method org/apache/bookkeeper/common/util/SharedResourceManager.shared:()Lorg/apache/bookkeeper/common/util/SharedResourceManager;
      25: aload_0
      26: getfield      #8                  // Field resources:Lorg/apache/bookkeeper/clients/utils/ClientResources;
      29: invokevirtual #2                  // Method org/apache/bookkeeper/clients/utils/ClientResources.scheduler:()Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;
      32: aload_0
      33: getfield      #14                 // Field scheduler:Lorg/apache/bookkeeper/common/util/OrderedScheduler;
      36: invokevirtual #43                 // Method org/apache/bookkeeper/common/util/SharedResourceManager.release:(Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;Ljava/lang/Object;)V
      39: return

  private java.util.concurrent.CompletionStage lambda$openTableImpl$2(java.lang.String, java.lang.String, org.apache.bookkeeper.stream.proto.StreamProperties);
    Code:
       0: getstatic     #34                 // Field log:Lorg/slf4j/Logger;
       3: invokeinterface #44,  1           // InterfaceMethod org/slf4j/Logger.isInfoEnabled:()Z
       8: ifeq          37
      11: getstatic     #34                 // Field log:Lorg/slf4j/Logger;
      14: ldc           #45                 // String Retrieved table properties for table {}/{} : {}
      16: iconst_3
      17: anewarray     #46                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_1
      23: aastore
      24: dup
      25: iconst_1
      26: aload_2
      27: aastore
      28: dup
      29: iconst_2
      30: aload_3
      31: aastore
      32: invokeinterface #47,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      37: getstatic     #48                 // Field org/apache/bookkeeper/stream/proto/StorageType.TABLE:Lorg/apache/bookkeeper/stream/proto/StorageType;
      40: aload_3
      41: invokevirtual #49                 // Method org/apache/bookkeeper/stream/proto/StreamProperties.getStreamConf:()Lorg/apache/bookkeeper/stream/proto/StreamConfiguration;
      44: invokevirtual #50                 // Method org/apache/bookkeeper/stream/proto/StreamConfiguration.getStorageType:()Lorg/apache/bookkeeper/stream/proto/StorageType;
      47: if_acmpeq     86
      50: new           #51                 // class org/apache/bookkeeper/api/exceptions/ApiException
      53: dup
      54: new           #52                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #54                 // String Can\'t open a non-table storage entity :
      63: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_3
      67: invokevirtual #49                 // Method org/apache/bookkeeper/stream/proto/StreamProperties.getStreamConf:()Lorg/apache/bookkeeper/stream/proto/StreamConfiguration;
      70: invokevirtual #50                 // Method org/apache/bookkeeper/stream/proto/StreamConfiguration.getStorageType:()Lorg/apache/bookkeeper/stream/proto/StorageType;
      73: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      76: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokespecial #58                 // Method org/apache/bookkeeper/api/exceptions/ApiException."<init>":(Ljava/lang/String;)V
      82: invokestatic  #59                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.exception:(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;
      85: areturn
      86: new           #60                 // class org/apache/bookkeeper/clients/impl/kv/PByteBufTableImpl
      89: dup
      90: aload_2
      91: aload_3
      92: aload_0
      93: getfield      #9                  // Field serverManager:Lorg/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager;
      96: aload_0
      97: getfield      #14                 // Field scheduler:Lorg/apache/bookkeeper/common/util/OrderedScheduler;
     100: aload_3
     101: invokevirtual #61                 // Method org/apache/bookkeeper/stream/proto/StreamProperties.getStreamId:()J
     104: invokevirtual #62                 // Method org/apache/bookkeeper/common/util/OrderedScheduler.chooseThread:(J)Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
     107: aload_0
     108: getfield      #7                  // Field settings:Lorg/apache/bookkeeper/clients/config/StorageClientSettings;
     111: invokeinterface #63,  1           // InterfaceMethod org/apache/bookkeeper/clients/config/StorageClientSettings.backoffPolicy:()Lorg/apache/bookkeeper/common/util/Backoff$Policy;
     116: invokespecial #64                 // Method org/apache/bookkeeper/clients/impl/kv/PByteBufTableImpl."<init>":(Ljava/lang/String;Lorg/apache/bookkeeper/stream/proto/StreamProperties;Lorg/apache/bookkeeper/clients/impl/internal/api/StorageServerClientManager;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/common/util/Backoff$Policy;)V
     119: invokevirtual #65                 // Method org/apache/bookkeeper/clients/impl/kv/PByteBufTableImpl.initialize:()Ljava/util/concurrent/CompletableFuture;
     122: areturn

  private static org.apache.bookkeeper.api.kv.Table lambda$openTable$1(org.apache.bookkeeper.api.kv.PTable);
    Code:
       0: new           #66                 // class org/apache/bookkeeper/clients/impl/kv/ByteBufTableImpl
       3: dup
       4: aload_0
       5: invokespecial #67                 // Method org/apache/bookkeeper/clients/impl/kv/ByteBufTableImpl."<init>":(Lorg/apache/bookkeeper/api/kv/PTable;)V
       8: areturn

  private void lambda$openPTable$0(java.lang.String, java.lang.String, java.util.concurrent.CompletableFuture);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #68                 // Method openTableImpl:(Ljava/lang/String;Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V
       7: return

  static {};
    Code:
       0: ldc           #69                 // class org/apache/bookkeeper/clients/StorageClientImpl
       2: invokestatic  #70                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #34                 // Field log:Lorg/slf4j/Logger;
       8: ldc           #69                 // class org/apache/bookkeeper/clients/StorageClientImpl
      10: invokevirtual #71                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      13: putstatic     #18                 // Field COMPONENT_NAME:Ljava/lang/String;
      16: return
}
