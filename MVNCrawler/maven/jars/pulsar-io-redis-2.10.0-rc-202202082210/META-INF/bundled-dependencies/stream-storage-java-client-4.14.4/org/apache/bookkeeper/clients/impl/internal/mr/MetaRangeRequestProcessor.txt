Compiled from "MetaRangeRequestProcessor.java"
public class org.apache.bookkeeper.clients.impl.internal.mr.MetaRangeRequestProcessor<RespT> extends org.apache.bookkeeper.clients.utils.ListenableFutureRpcProcessor<org.apache.bookkeeper.stream.proto.storage.GetActiveRangesRequest, org.apache.bookkeeper.stream.proto.storage.GetActiveRangesResponse, RespT> {
  private final org.apache.bookkeeper.stream.proto.storage.GetActiveRangesRequest request;

  private final java.util.function.Function<org.apache.bookkeeper.stream.proto.storage.GetActiveRangesResponse, RespT> responseFunc;

  public static <T> org.apache.bookkeeper.clients.impl.internal.mr.MetaRangeRequestProcessor<T> of(org.apache.bookkeeper.stream.proto.storage.GetActiveRangesRequest, java.util.function.Function<org.apache.bookkeeper.stream.proto.storage.GetActiveRangesResponse, T>, org.apache.bookkeeper.clients.impl.container.StorageContainerChannel, java.util.concurrent.ScheduledExecutorService, org.apache.bookkeeper.common.util.Backoff$Policy);
    Code:
       0: new           #1                  // class org/apache/bookkeeper/clients/impl/internal/mr/MetaRangeRequestProcessor
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #2                  // Method "<init>":(Lorg/apache/bookkeeper/stream/proto/storage/GetActiveRangesRequest;Ljava/util/function/Function;Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/common/util/Backoff$Policy;)V
      13: areturn

  private org.apache.bookkeeper.clients.impl.internal.mr.MetaRangeRequestProcessor(org.apache.bookkeeper.stream.proto.storage.GetActiveRangesRequest, java.util.function.Function<org.apache.bookkeeper.stream.proto.storage.GetActiveRangesResponse, RespT>, org.apache.bookkeeper.clients.impl.container.StorageContainerChannel, java.util.concurrent.ScheduledExecutorService, org.apache.bookkeeper.common.util.Backoff$Policy);
    Code:
       0: aload_0
       1: aload_3
       2: aload         4
       4: aload         5
       6: invokespecial #3                  // Method org/apache/bookkeeper/clients/utils/ListenableFutureRpcProcessor."<init>":(Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/common/util/Backoff$Policy;)V
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field request:Lorg/apache/bookkeeper/stream/proto/storage/GetActiveRangesRequest;
      14: aload_0
      15: aload_2
      16: putfield      #5                  // Field responseFunc:Ljava/util/function/Function;
      19: return

  protected org.apache.bookkeeper.stream.proto.storage.GetActiveRangesRequest createRequest();
    Code:
       0: aload_0
       1: getfield      #4                  // Field request:Lorg/apache/bookkeeper/stream/proto/storage/GetActiveRangesRequest;
       4: areturn

  protected com.google.common.util.concurrent.ListenableFuture<org.apache.bookkeeper.stream.proto.storage.GetActiveRangesResponse> sendRPC(org.apache.bookkeeper.clients.impl.channel.StorageServerChannel, org.apache.bookkeeper.stream.proto.storage.GetActiveRangesRequest);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method org/apache/bookkeeper/clients/impl/channel/StorageServerChannel.getMetaRangeService:()Lorg/apache/bookkeeper/stream/proto/storage/MetaRangeServiceGrpc$MetaRangeServiceFutureStub;
       4: aload_2
       5: invokevirtual #7                  // Method org/apache/bookkeeper/stream/proto/storage/MetaRangeServiceGrpc$MetaRangeServiceFutureStub.getActiveRanges:(Lorg/apache/bookkeeper/stream/proto/storage/GetActiveRangesRequest;)Lcom/google/common/util/concurrent/ListenableFuture;
       8: areturn

  private java.lang.String getIdentifier(org.apache.bookkeeper.stream.proto.storage.GetActiveRangesRequest);
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #10                 // String
       9: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #12                 // Method org/apache/bookkeeper/stream/proto/storage/GetActiveRangesRequest.getStreamId:()J
      16: invokevirtual #13                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  protected RespT processResponse(org.apache.bookkeeper.stream.proto.storage.GetActiveRangesResponse) throws java.lang.Exception;
    Code:
       0: getstatic     #15                 // Field org/apache/bookkeeper/stream/proto/storage/StatusCode.SUCCESS:Lorg/apache/bookkeeper/stream/proto/storage/StatusCode;
       3: aload_1
       4: invokevirtual #16                 // Method org/apache/bookkeeper/stream/proto/storage/GetActiveRangesResponse.getCode:()Lorg/apache/bookkeeper/stream/proto/storage/StatusCode;
       7: if_acmpne     21
      10: aload_0
      11: getfield      #5                  // Field responseFunc:Ljava/util/function/Function;
      14: aload_1
      15: invokeinterface #17,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn
      21: aload_0
      22: aload_0
      23: getfield      #4                  // Field request:Lorg/apache/bookkeeper/stream/proto/storage/GetActiveRangesRequest;
      26: invokespecial #18                 // Method getIdentifier:(Lorg/apache/bookkeeper/stream/proto/storage/GetActiveRangesRequest;)Ljava/lang/String;
      29: aload_1
      30: invokevirtual #16                 // Method org/apache/bookkeeper/stream/proto/storage/GetActiveRangesResponse.getCode:()Lorg/apache/bookkeeper/stream/proto/storage/StatusCode;
      33: invokestatic  #19                 // Method org/apache/bookkeeper/clients/impl/internal/ProtocolInternalUtils.createMetaRangeException:(Ljava/lang/String;Lorg/apache/bookkeeper/stream/proto/storage/StatusCode;)Ljava/lang/Exception;
      36: athrow

  protected java.lang.Object processResponse(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/bookkeeper/stream/proto/storage/GetActiveRangesResponse
       5: invokevirtual #21                 // Method processResponse:(Lorg/apache/bookkeeper/stream/proto/storage/GetActiveRangesResponse;)Ljava/lang/Object;
       8: areturn

  protected com.google.common.util.concurrent.ListenableFuture sendRPC(org.apache.bookkeeper.clients.impl.channel.StorageServerChannel, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #22                 // class org/apache/bookkeeper/stream/proto/storage/GetActiveRangesRequest
       6: invokevirtual #23                 // Method sendRPC:(Lorg/apache/bookkeeper/clients/impl/channel/StorageServerChannel;Lorg/apache/bookkeeper/stream/proto/storage/GetActiveRangesRequest;)Lcom/google/common/util/concurrent/ListenableFuture;
       9: areturn

  protected java.lang.Object createRequest();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method createRequest:()Lorg/apache/bookkeeper/stream/proto/storage/GetActiveRangesRequest;
       4: areturn
}
