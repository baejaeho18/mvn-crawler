Compiled from "PByteBufTableRangeImpl.java"
class org.apache.bookkeeper.clients.impl.kv.PByteBufTableRangeImpl implements org.apache.bookkeeper.api.kv.PTable<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> {
  private static final org.slf4j.Logger log;

  private final long streamId;

  private final org.apache.bookkeeper.stream.proto.RangeProperties rangeProps;

  private final org.apache.bookkeeper.clients.impl.container.StorageContainerChannel scChannel;

  private final java.util.concurrent.ScheduledExecutorService executor;

  private final org.apache.bookkeeper.api.kv.op.OpFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> opFactory;

  private final org.apache.bookkeeper.api.kv.impl.result.ResultFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> resultFactory;

  private final org.apache.bookkeeper.api.kv.impl.result.KeyValueFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> kvFactory;

  private final org.apache.bookkeeper.common.util.Backoff$Policy backoffPolicy;

  org.apache.bookkeeper.clients.impl.kv.PByteBufTableRangeImpl(long, org.apache.bookkeeper.stream.proto.RangeProperties, org.apache.bookkeeper.clients.impl.container.StorageContainerChannel, java.util.concurrent.ScheduledExecutorService, org.apache.bookkeeper.api.kv.op.OpFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>, org.apache.bookkeeper.api.kv.impl.result.ResultFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>, org.apache.bookkeeper.api.kv.impl.result.KeyValueFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>, org.apache.bookkeeper.common.util.Backoff$Policy);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #9                  // Field streamId:J
       9: aload_0
      10: aload_3
      11: putfield      #10                 // Field rangeProps:Lorg/apache/bookkeeper/stream/proto/RangeProperties;
      14: aload_0
      15: aload         4
      17: putfield      #6                  // Field scChannel:Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;
      20: aload_0
      21: aload         5
      23: putfield      #5                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      26: aload_0
      27: aload         6
      29: putfield      #11                 // Field opFactory:Lorg/apache/bookkeeper/api/kv/op/OpFactory;
      32: aload_0
      33: aload         7
      35: putfield      #2                  // Field resultFactory:Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;
      38: aload_0
      39: aload         8
      41: putfield      #1                  // Field kvFactory:Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;
      44: aload_0
      45: aload         9
      47: putfield      #4                  // Field backoffPolicy:Lorg/apache/bookkeeper/common/util/Backoff$Policy;
      50: return

  private org.apache.bookkeeper.stream.proto.kv.rpc.RoutingHeader$Builder newRoutingHeader(io.netty.buffer.ByteBuf);
    Code:
       0: invokestatic  #12                 // Method org/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader.newBuilder:()Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;
       3: aload_0
       4: getfield      #9                  // Field streamId:J
       7: invokevirtual #13                 // Method org/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder.setStreamId:(J)Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;
      10: aload_0
      11: getfield      #10                 // Field rangeProps:Lorg/apache/bookkeeper/stream/proto/RangeProperties;
      14: invokevirtual #14                 // Method org/apache/bookkeeper/stream/proto/RangeProperties.getRangeId:()J
      17: invokevirtual #15                 // Method org/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder.setRangeId:(J)Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;
      20: aload_1
      21: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.nioBuffer:()Ljava/nio/ByteBuffer;
      24: invokestatic  #17                 // Method com/google/protobuf/UnsafeByteOperations.unsafeWrap:(Ljava/nio/ByteBuffer;)Lcom/google/protobuf/ByteString;
      27: invokevirtual #18                 // Method org/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder.setRKey:(Lcom/google/protobuf/ByteString;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;
      30: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.result.RangeResult<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> get(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, org.apache.bookkeeper.api.kv.options.RangeOption<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
       4: pop
       5: aload_2
       6: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
       9: pop
      10: aconst_null
      11: aload_3
      12: invokeinterface #20,  1           // InterfaceMethod org/apache/bookkeeper/api/kv/options/RangeOption.endKey:()Ljava/lang/Object;
      17: if_acmpeq     33
      20: aload_3
      21: invokeinterface #20,  1           // InterfaceMethod org/apache/bookkeeper/api/kv/options/RangeOption.endKey:()Ljava/lang/Object;
      26: checkcast     #21                 // class io/netty/buffer/ByteBuf
      29: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
      32: pop
      33: aload_2
      34: aload_3
      35: invokestatic  #22                 // Method org/apache/bookkeeper/clients/impl/kv/KvUtils.newRangeRequest:(Lio/netty/buffer/ByteBuf;Lorg/apache/bookkeeper/api/kv/options/RangeOption;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/RangeRequest$Builder;
      38: aload_0
      39: aload_1
      40: invokespecial #7                  // Method newRoutingHeader:(Lio/netty/buffer/ByteBuf;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;
      43: invokevirtual #23                 // Method org/apache/bookkeeper/stream/proto/kv/rpc/RangeRequest$Builder.setHeader:(Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/RangeRequest$Builder;
      46: invokevirtual #24                 // Method org/apache/bookkeeper/stream/proto/kv/rpc/RangeRequest$Builder.build:()Lorg/apache/bookkeeper/stream/proto/kv/rpc/RangeRequest;
      49: aload_0
      50: invokedynamic #25,  0             // InvokeDynamic #0:apply:(Lorg/apache/bookkeeper/clients/impl/kv/PByteBufTableRangeImpl;)Ljava/util/function/Function;
      55: aload_0
      56: getfield      #6                  // Field scChannel:Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;
      59: aload_0
      60: getfield      #5                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      63: aload_0
      64: getfield      #4                  // Field backoffPolicy:Lorg/apache/bookkeeper/common/util/Backoff$Policy;
      67: invokestatic  #26                 // Method org/apache/bookkeeper/clients/impl/kv/RangeRequestProcessor.of:(Lorg/apache/bookkeeper/stream/proto/kv/rpc/RangeRequest;Ljava/util/function/Function;Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/common/util/Backoff$Policy;)Lorg/apache/bookkeeper/clients/impl/kv/RangeRequestProcessor;
      70: invokevirtual #27                 // Method org/apache/bookkeeper/clients/impl/kv/RangeRequestProcessor.process:()Ljava/util/concurrent/CompletableFuture;
      73: aload_1
      74: aload_2
      75: aload_3
      76: invokedynamic #28,  0             // InvokeDynamic #1:accept:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lorg/apache/bookkeeper/api/kv/options/RangeOption;)Ljava/util/function/BiConsumer;
      81: invokevirtual #29                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      84: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.result.PutResult<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> put(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, org.apache.bookkeeper.api.kv.options.PutOption<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
       4: pop
       5: aload_2
       6: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
       9: pop
      10: aload_3
      11: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
      14: pop
      15: aload_2
      16: aload_3
      17: aload         4
      19: invokestatic  #30                 // Method org/apache/bookkeeper/clients/impl/kv/KvUtils.newPutRequest:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lorg/apache/bookkeeper/api/kv/options/PutOption;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/PutRequest$Builder;
      22: aload_0
      23: aload_1
      24: invokespecial #7                  // Method newRoutingHeader:(Lio/netty/buffer/ByteBuf;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;
      27: invokevirtual #31                 // Method org/apache/bookkeeper/stream/proto/kv/rpc/PutRequest$Builder.setHeader:(Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/PutRequest$Builder;
      30: invokevirtual #32                 // Method org/apache/bookkeeper/stream/proto/kv/rpc/PutRequest$Builder.build:()Lorg/apache/bookkeeper/stream/proto/kv/rpc/PutRequest;
      33: aload_0
      34: invokedynamic #33,  0             // InvokeDynamic #2:apply:(Lorg/apache/bookkeeper/clients/impl/kv/PByteBufTableRangeImpl;)Ljava/util/function/Function;
      39: aload_0
      40: getfield      #6                  // Field scChannel:Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;
      43: aload_0
      44: getfield      #5                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      47: aload_0
      48: getfield      #4                  // Field backoffPolicy:Lorg/apache/bookkeeper/common/util/Backoff$Policy;
      51: invokestatic  #34                 // Method org/apache/bookkeeper/clients/impl/kv/PutRequestProcessor.of:(Lorg/apache/bookkeeper/stream/proto/kv/rpc/PutRequest;Ljava/util/function/Function;Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/common/util/Backoff$Policy;)Lorg/apache/bookkeeper/clients/impl/kv/PutRequestProcessor;
      54: invokevirtual #35                 // Method org/apache/bookkeeper/clients/impl/kv/PutRequestProcessor.process:()Ljava/util/concurrent/CompletableFuture;
      57: aload_1
      58: aload_2
      59: aload_3
      60: invokedynamic #36,  0             // InvokeDynamic #3:accept:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Ljava/util/function/BiConsumer;
      65: invokevirtual #29                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      68: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.result.DeleteResult<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> delete(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, org.apache.bookkeeper.api.kv.options.DeleteOption<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
       4: pop
       5: aload_2
       6: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
       9: pop
      10: aconst_null
      11: aload_3
      12: invokeinterface #37,  1           // InterfaceMethod org/apache/bookkeeper/api/kv/options/DeleteOption.endKey:()Ljava/lang/Object;
      17: if_acmpeq     33
      20: aload_3
      21: invokeinterface #37,  1           // InterfaceMethod org/apache/bookkeeper/api/kv/options/DeleteOption.endKey:()Ljava/lang/Object;
      26: checkcast     #21                 // class io/netty/buffer/ByteBuf
      29: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
      32: pop
      33: aload_2
      34: aload_3
      35: invokestatic  #38                 // Method org/apache/bookkeeper/clients/impl/kv/KvUtils.newDeleteRequest:(Lio/netty/buffer/ByteBuf;Lorg/apache/bookkeeper/api/kv/options/DeleteOption;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/DeleteRangeRequest$Builder;
      38: aload_0
      39: aload_1
      40: invokespecial #7                  // Method newRoutingHeader:(Lio/netty/buffer/ByteBuf;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;
      43: invokevirtual #39                 // Method org/apache/bookkeeper/stream/proto/kv/rpc/DeleteRangeRequest$Builder.setHeader:(Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/DeleteRangeRequest$Builder;
      46: invokevirtual #40                 // Method org/apache/bookkeeper/stream/proto/kv/rpc/DeleteRangeRequest$Builder.build:()Lorg/apache/bookkeeper/stream/proto/kv/rpc/DeleteRangeRequest;
      49: aload_0
      50: invokedynamic #41,  0             // InvokeDynamic #4:apply:(Lorg/apache/bookkeeper/clients/impl/kv/PByteBufTableRangeImpl;)Ljava/util/function/Function;
      55: aload_0
      56: getfield      #6                  // Field scChannel:Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;
      59: aload_0
      60: getfield      #5                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      63: aload_0
      64: getfield      #4                  // Field backoffPolicy:Lorg/apache/bookkeeper/common/util/Backoff$Policy;
      67: invokestatic  #42                 // Method org/apache/bookkeeper/clients/impl/kv/DeleteRequestProcessor.of:(Lorg/apache/bookkeeper/stream/proto/kv/rpc/DeleteRangeRequest;Ljava/util/function/Function;Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/common/util/Backoff$Policy;)Lorg/apache/bookkeeper/clients/impl/kv/DeleteRequestProcessor;
      70: invokevirtual #43                 // Method org/apache/bookkeeper/clients/impl/kv/DeleteRequestProcessor.process:()Ljava/util/concurrent/CompletableFuture;
      73: aload_1
      74: aload_2
      75: aload_3
      76: invokedynamic #44,  0             // InvokeDynamic #5:accept:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lorg/apache/bookkeeper/api/kv/options/DeleteOption;)Ljava/util/function/BiConsumer;
      81: invokevirtual #29                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      84: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.api.kv.result.IncrementResult<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>> increment(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, long, org.apache.bookkeeper.api.kv.options.IncrementOption<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
       4: pop
       5: aload_2
       6: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
       9: pop
      10: aload_2
      11: lload_3
      12: aload         5
      14: invokestatic  #45                 // Method org/apache/bookkeeper/clients/impl/kv/KvUtils.newIncrementRequest:(Lio/netty/buffer/ByteBuf;JLorg/apache/bookkeeper/api/kv/options/IncrementOption;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/IncrementRequest$Builder;
      17: aload_0
      18: aload_1
      19: invokespecial #7                  // Method newRoutingHeader:(Lio/netty/buffer/ByteBuf;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;
      22: invokevirtual #46                 // Method org/apache/bookkeeper/stream/proto/kv/rpc/IncrementRequest$Builder.setHeader:(Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/IncrementRequest$Builder;
      25: invokevirtual #47                 // Method org/apache/bookkeeper/stream/proto/kv/rpc/IncrementRequest$Builder.build:()Lorg/apache/bookkeeper/stream/proto/kv/rpc/IncrementRequest;
      28: aload_0
      29: invokedynamic #48,  0             // InvokeDynamic #6:apply:(Lorg/apache/bookkeeper/clients/impl/kv/PByteBufTableRangeImpl;)Ljava/util/function/Function;
      34: aload_0
      35: getfield      #6                  // Field scChannel:Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;
      38: aload_0
      39: getfield      #5                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      42: aload_0
      43: getfield      #4                  // Field backoffPolicy:Lorg/apache/bookkeeper/common/util/Backoff$Policy;
      46: invokestatic  #49                 // Method org/apache/bookkeeper/clients/impl/kv/IncrementRequestProcessor.of:(Lorg/apache/bookkeeper/stream/proto/kv/rpc/IncrementRequest;Ljava/util/function/Function;Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/common/util/Backoff$Policy;)Lorg/apache/bookkeeper/clients/impl/kv/IncrementRequestProcessor;
      49: invokevirtual #50                 // Method org/apache/bookkeeper/clients/impl/kv/IncrementRequestProcessor.process:()Ljava/util/concurrent/CompletableFuture;
      52: aload_1
      53: aload_2
      54: invokedynamic #51,  0             // InvokeDynamic #7:accept:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Ljava/util/function/BiConsumer;
      59: invokevirtual #29                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      62: areturn

  public org.apache.bookkeeper.api.kv.Txn<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> txn(io.netty.buffer.ByteBuf);
    Code:
       0: new           #52                 // class org/apache/bookkeeper/clients/impl/kv/PByteBufTableRangeImpl$TxnImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #53                 // Method org/apache/bookkeeper/clients/impl/kv/PByteBufTableRangeImpl$TxnImpl."<init>":(Lorg/apache/bookkeeper/clients/impl/kv/PByteBufTableRangeImpl;Lio/netty/buffer/ByteBuf;)V
       9: areturn

  public void close();
    Code:
       0: return

  public org.apache.bookkeeper.api.kv.op.OpFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> opFactory();
    Code:
       0: aload_0
       1: getfield      #11                 // Field opFactory:Lorg/apache/bookkeeper/api/kv/op/OpFactory;
       4: areturn

  public java.util.concurrent.CompletableFuture get(java.lang.Object, java.lang.Object, org.apache.bookkeeper.api.kv.options.RangeOption);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class io/netty/buffer/ByteBuf
       5: aload_2
       6: checkcast     #21                 // class io/netty/buffer/ByteBuf
       9: aload_3
      10: invokevirtual #54                 // Method get:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lorg/apache/bookkeeper/api/kv/options/RangeOption;)Ljava/util/concurrent/CompletableFuture;
      13: areturn

  public org.apache.bookkeeper.api.kv.Txn txn(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class io/netty/buffer/ByteBuf
       5: invokevirtual #55                 // Method txn:(Lio/netty/buffer/ByteBuf;)Lorg/apache/bookkeeper/api/kv/Txn;
       8: areturn

  public java.util.concurrent.CompletableFuture increment(java.lang.Object, java.lang.Object, long, org.apache.bookkeeper.api.kv.options.IncrementOption);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class io/netty/buffer/ByteBuf
       5: aload_2
       6: checkcast     #21                 // class io/netty/buffer/ByteBuf
       9: lload_3
      10: aload         5
      12: invokevirtual #56                 // Method increment:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;JLorg/apache/bookkeeper/api/kv/options/IncrementOption;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  public java.util.concurrent.CompletableFuture delete(java.lang.Object, java.lang.Object, org.apache.bookkeeper.api.kv.options.DeleteOption);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class io/netty/buffer/ByteBuf
       5: aload_2
       6: checkcast     #21                 // class io/netty/buffer/ByteBuf
       9: aload_3
      10: invokevirtual #57                 // Method delete:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lorg/apache/bookkeeper/api/kv/options/DeleteOption;)Ljava/util/concurrent/CompletableFuture;
      13: areturn

  public java.util.concurrent.CompletableFuture put(java.lang.Object, java.lang.Object, java.lang.Object, org.apache.bookkeeper.api.kv.options.PutOption);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class io/netty/buffer/ByteBuf
       5: aload_2
       6: checkcast     #21                 // class io/netty/buffer/ByteBuf
       9: aload_3
      10: checkcast     #21                 // class io/netty/buffer/ByteBuf
      13: aload         4
      15: invokevirtual #58                 // Method put:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lorg/apache/bookkeeper/api/kv/options/PutOption;)Ljava/util/concurrent/CompletableFuture;
      18: areturn

  private static void lambda$increment$7(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, org.apache.bookkeeper.api.kv.result.IncrementResult, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.release:()Z
       4: pop
       5: aload_1
       6: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.release:()Z
       9: pop
      10: return

  private org.apache.bookkeeper.api.kv.result.IncrementResult lambda$increment$6(org.apache.bookkeeper.stream.proto.kv.rpc.IncrementResponse);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field resultFactory:Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;
       5: aload_0
       6: getfield      #1                  // Field kvFactory:Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;
       9: invokestatic  #60                 // Method org/apache/bookkeeper/clients/impl/kv/KvUtils.newIncrementResult:(Lorg/apache/bookkeeper/stream/proto/kv/rpc/IncrementResponse;Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;)Lorg/apache/bookkeeper/api/kv/result/IncrementResult;
      12: areturn

  private static void lambda$delete$5(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, org.apache.bookkeeper.api.kv.options.DeleteOption, org.apache.bookkeeper.api.kv.result.DeleteResult, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.release:()Z
       4: pop
       5: aload_1
       6: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.release:()Z
       9: pop
      10: aconst_null
      11: aload_2
      12: invokeinterface #37,  1           // InterfaceMethod org/apache/bookkeeper/api/kv/options/DeleteOption.endKey:()Ljava/lang/Object;
      17: if_acmpeq     33
      20: aload_2
      21: invokeinterface #37,  1           // InterfaceMethod org/apache/bookkeeper/api/kv/options/DeleteOption.endKey:()Ljava/lang/Object;
      26: checkcast     #21                 // class io/netty/buffer/ByteBuf
      29: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.release:()Z
      32: pop
      33: return

  private org.apache.bookkeeper.api.kv.result.DeleteResult lambda$delete$4(org.apache.bookkeeper.stream.proto.kv.rpc.DeleteRangeResponse);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field resultFactory:Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;
       5: aload_0
       6: getfield      #1                  // Field kvFactory:Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;
       9: invokestatic  #61                 // Method org/apache/bookkeeper/clients/impl/kv/KvUtils.newDeleteResult:(Lorg/apache/bookkeeper/stream/proto/kv/rpc/DeleteRangeResponse;Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;)Lorg/apache/bookkeeper/api/kv/result/DeleteResult;
      12: areturn

  private static void lambda$put$3(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, org.apache.bookkeeper.api.kv.result.PutResult, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.release:()Z
       4: pop
       5: aload_1
       6: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.release:()Z
       9: pop
      10: aload_2
      11: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.release:()Z
      14: pop
      15: return

  private org.apache.bookkeeper.api.kv.result.PutResult lambda$put$2(org.apache.bookkeeper.stream.proto.kv.rpc.PutResponse);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field resultFactory:Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;
       5: aload_0
       6: getfield      #1                  // Field kvFactory:Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;
       9: invokestatic  #62                 // Method org/apache/bookkeeper/clients/impl/kv/KvUtils.newPutResult:(Lorg/apache/bookkeeper/stream/proto/kv/rpc/PutResponse;Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;)Lorg/apache/bookkeeper/api/kv/result/PutResult;
      12: areturn

  private static void lambda$get$1(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, org.apache.bookkeeper.api.kv.options.RangeOption, org.apache.bookkeeper.api.kv.result.RangeResult, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.release:()Z
       4: pop
       5: aload_1
       6: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.release:()Z
       9: pop
      10: aconst_null
      11: aload_2
      12: invokeinterface #20,  1           // InterfaceMethod org/apache/bookkeeper/api/kv/options/RangeOption.endKey:()Ljava/lang/Object;
      17: if_acmpeq     33
      20: aload_2
      21: invokeinterface #20,  1           // InterfaceMethod org/apache/bookkeeper/api/kv/options/RangeOption.endKey:()Ljava/lang/Object;
      26: checkcast     #21                 // class io/netty/buffer/ByteBuf
      29: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.release:()Z
      32: pop
      33: return

  private org.apache.bookkeeper.api.kv.result.RangeResult lambda$get$0(org.apache.bookkeeper.stream.proto.kv.rpc.RangeResponse);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field resultFactory:Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;
       5: aload_0
       6: getfield      #1                  // Field kvFactory:Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;
       9: invokestatic  #63                 // Method org/apache/bookkeeper/clients/impl/kv/KvUtils.newRangeResult:(Lorg/apache/bookkeeper/stream/proto/kv/rpc/RangeResponse;Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;)Lorg/apache/bookkeeper/api/kv/result/RangeResult;
      12: areturn

  static org.apache.bookkeeper.stream.proto.kv.rpc.RoutingHeader$Builder access$000(org.apache.bookkeeper.clients.impl.kv.PByteBufTableRangeImpl, io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method newRoutingHeader:(Lio/netty/buffer/ByteBuf;)Lorg/apache/bookkeeper/stream/proto/kv/rpc/RoutingHeader$Builder;
       5: areturn

  static org.apache.bookkeeper.clients.impl.container.StorageContainerChannel access$100(org.apache.bookkeeper.clients.impl.kv.PByteBufTableRangeImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field scChannel:Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;
       4: areturn

  static java.util.concurrent.ScheduledExecutorService access$200(org.apache.bookkeeper.clients.impl.kv.PByteBufTableRangeImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  static org.apache.bookkeeper.common.util.Backoff$Policy access$300(org.apache.bookkeeper.clients.impl.kv.PByteBufTableRangeImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field backoffPolicy:Lorg/apache/bookkeeper/common/util/Backoff$Policy;
       4: areturn

  static org.slf4j.Logger access$400();
    Code:
       0: getstatic     #3                  // Field log:Lorg/slf4j/Logger;
       3: areturn

  static org.apache.bookkeeper.api.kv.impl.result.ResultFactory access$500(org.apache.bookkeeper.clients.impl.kv.PByteBufTableRangeImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field resultFactory:Lorg/apache/bookkeeper/api/kv/impl/result/ResultFactory;
       4: areturn

  static org.apache.bookkeeper.api.kv.impl.result.KeyValueFactory access$600(org.apache.bookkeeper.clients.impl.kv.PByteBufTableRangeImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field kvFactory:Lorg/apache/bookkeeper/api/kv/impl/result/KeyValueFactory;
       4: areturn

  static {};
    Code:
       0: ldc           #64                 // class org/apache/bookkeeper/clients/impl/kv/PByteBufTableRangeImpl
       2: invokestatic  #65                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #3                  // Field log:Lorg/slf4j/Logger;
       8: return
}
