Compiled from "MetaRangeClientImpl.java"
class org.apache.bookkeeper.clients.impl.internal.MetaRangeClientImpl implements org.apache.bookkeeper.clients.impl.internal.api.MetaRangeClient {
  private static final org.slf4j.Logger log;

  private final org.apache.bookkeeper.stream.proto.StreamProperties streamProps;

  private final java.util.concurrent.ScheduledExecutorService executor;

  private final org.apache.bookkeeper.clients.impl.container.StorageContainerChannel scClient;

  private final org.apache.bookkeeper.common.util.Backoff$Policy backoffPolicy;

  org.apache.bookkeeper.clients.impl.internal.MetaRangeClientImpl(org.apache.bookkeeper.stream.proto.StreamProperties, org.apache.bookkeeper.common.util.OrderedScheduler, org.apache.bookkeeper.clients.impl.container.StorageContainerChannelManager);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #1                  // Field org/apache/bookkeeper/clients/utils/ClientConstants.DEFAULT_INFINIT_BACKOFF_POLICY:Lorg/apache/bookkeeper/common/util/Backoff$Policy;
       7: invokespecial #2                  // Method "<init>":(Lorg/apache/bookkeeper/stream/proto/StreamProperties;Lorg/apache/bookkeeper/common/util/OrderedScheduler;Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannelManager;Lorg/apache/bookkeeper/common/util/Backoff$Policy;)V
      10: return

  org.apache.bookkeeper.clients.impl.internal.MetaRangeClientImpl(org.apache.bookkeeper.stream.proto.StreamProperties, org.apache.bookkeeper.common.util.OrderedScheduler, org.apache.bookkeeper.clients.impl.container.StorageContainerChannelManager, org.apache.bookkeeper.common.util.Backoff$Policy);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field streamProps:Lorg/apache/bookkeeper/stream/proto/StreamProperties;
       9: aload_0
      10: aload_2
      11: aload_1
      12: invokevirtual #5                  // Method org/apache/bookkeeper/stream/proto/StreamProperties.getStreamId:()J
      15: invokevirtual #6                  // Method org/apache/bookkeeper/common/util/OrderedScheduler.chooseThread:(J)Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
      18: putfield      #7                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      21: aload_0
      22: aload_3
      23: aload_1
      24: invokevirtual #8                  // Method org/apache/bookkeeper/stream/proto/StreamProperties.getStorageContainerId:()J
      27: invokevirtual #9                  // Method org/apache/bookkeeper/clients/impl/container/StorageContainerChannelManager.getOrCreate:(J)Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;
      30: putfield      #10                 // Field scClient:Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;
      33: aload_0
      34: aload         4
      36: putfield      #11                 // Field backoffPolicy:Lorg/apache/bookkeeper/common/util/Backoff$Policy;
      39: return

  public org.apache.bookkeeper.stream.proto.StreamProperties getStreamProps();
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamProps:Lorg/apache/bookkeeper/stream/proto/StreamProperties;
       4: areturn

  org.apache.bookkeeper.clients.impl.container.StorageContainerChannel getStorageContainerClient();
    Code:
       0: aload_0
       1: getfield      #10                 // Field scClient:Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;
       4: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.clients.impl.internal.api.HashStreamRanges> getActiveDataRanges();
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamProps:Lorg/apache/bookkeeper/stream/proto/StreamProperties;
       4: invokestatic  #12                 // Method org/apache/bookkeeper/stream/protocol/util/ProtoUtils.createGetActiveRangesRequest:(Lorg/apache/bookkeeper/stream/proto/StreamProperties;)Lorg/apache/bookkeeper/stream/proto/storage/GetActiveRangesRequest;
       7: invokedynamic #13,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      12: aload_0
      13: getfield      #10                 // Field scClient:Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;
      16: aload_0
      17: getfield      #7                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      20: aload_0
      21: getfield      #11                 // Field backoffPolicy:Lorg/apache/bookkeeper/common/util/Backoff$Policy;
      24: invokestatic  #14                 // Method org/apache/bookkeeper/clients/impl/internal/mr/MetaRangeRequestProcessor.of:(Lorg/apache/bookkeeper/stream/proto/storage/GetActiveRangesRequest;Ljava/util/function/Function;Lorg/apache/bookkeeper/clients/impl/container/StorageContainerChannel;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/common/util/Backoff$Policy;)Lorg/apache/bookkeeper/clients/impl/internal/mr/MetaRangeRequestProcessor;
      27: invokevirtual #15                 // Method org/apache/bookkeeper/clients/impl/internal/mr/MetaRangeRequestProcessor.process:()Ljava/util/concurrent/CompletableFuture;
      30: areturn

  private static org.apache.bookkeeper.clients.impl.internal.api.HashStreamRanges lambda$getActiveDataRanges$0(org.apache.bookkeeper.stream.proto.storage.GetActiveRangesResponse);
    Code:
       0: aload_0
       1: invokestatic  #16                 // Method org/apache/bookkeeper/clients/impl/internal/ProtocolInternalUtils.createActiveRanges:(Lorg/apache/bookkeeper/stream/proto/storage/GetActiveRangesResponse;)Lorg/apache/bookkeeper/clients/impl/internal/api/HashStreamRanges;
       4: areturn

  static {};
    Code:
       0: ldc           #17                 // class org/apache/bookkeeper/clients/impl/internal/MetaRangeClientImpl
       2: invokestatic  #18                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #19                 // Field log:Lorg/slf4j/Logger;
       8: return
}
