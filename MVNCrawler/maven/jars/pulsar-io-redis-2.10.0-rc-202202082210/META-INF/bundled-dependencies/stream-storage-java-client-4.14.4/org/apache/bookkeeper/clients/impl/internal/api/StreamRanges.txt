Compiled from "StreamRanges.java"
public abstract class org.apache.bookkeeper.clients.impl.internal.api.StreamRanges<T> {
  private final org.apache.bookkeeper.stream.proto.RangeKeyType keyType;

  private final java.util.NavigableMap<T, org.apache.bookkeeper.stream.proto.RangeProperties> ranges;

  private final long maxRangeId;

  public static org.apache.bookkeeper.clients.impl.internal.api.HashStreamRanges ofHash(org.apache.bookkeeper.stream.proto.RangeKeyType, java.util.NavigableMap<java.lang.Long, org.apache.bookkeeper.stream.proto.RangeProperties>);
    Code:
       0: getstatic     #1                  // Field org/apache/bookkeeper/stream/proto/RangeKeyType.HASH:Lorg/apache/bookkeeper/stream/proto/RangeKeyType;
       3: aload_0
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #2                  // String Only hash routing is supported now. %s is not supported.
      14: aload_0
      15: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      18: aload_1
      19: invokestatic  #4                  // Method java/util/Collections.unmodifiableNavigableMap:(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;
      22: astore_2
      23: lconst_0
      24: lstore_3
      25: aload_1
      26: invokeinterface #5,  1            // InterfaceMethod java/util/NavigableMap.values:()Ljava/util/Collection;
      31: invokeinterface #6,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      36: astore        5
      38: aload         5
      40: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          73
      48: aload         5
      50: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #9                  // class org/apache/bookkeeper/stream/proto/RangeProperties
      58: astore        6
      60: lload_3
      61: aload         6
      63: invokevirtual #10                 // Method org/apache/bookkeeper/stream/proto/RangeProperties.getRangeId:()J
      66: invokestatic  #11                 // Method java/lang/Math.max:(JJ)J
      69: lstore_3
      70: goto          38
      73: new           #12                 // class org/apache/bookkeeper/clients/impl/internal/api/HashStreamRanges
      76: dup
      77: aload_2
      78: lload_3
      79: invokespecial #13                 // Method org/apache/bookkeeper/clients/impl/internal/api/HashStreamRanges."<init>":(Ljava/util/NavigableMap;J)V
      82: areturn

  public org.apache.bookkeeper.stream.proto.RangeKeyType getKeyType();
    Code:
       0: aload_0
       1: getfield      #14                 // Field keyType:Lorg/apache/bookkeeper/stream/proto/RangeKeyType;
       4: areturn

  public java.util.NavigableMap<T, org.apache.bookkeeper.stream.proto.RangeProperties> getRanges();
    Code:
       0: aload_0
       1: getfield      #15                 // Field ranges:Ljava/util/NavigableMap;
       4: areturn

  public long getMaxRangeId();
    Code:
       0: aload_0
       1: getfield      #16                 // Field maxRangeId:J
       4: lreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #17                 // class org/apache/bookkeeper/clients/impl/internal/api/StreamRanges
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #17                 // class org/apache/bookkeeper/clients/impl/internal/api/StreamRanges
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #18                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #19                 // Method getMaxRangeId:()J
      35: aload_2
      36: invokevirtual #19                 // Method getMaxRangeId:()J
      39: lcmp
      40: ifeq          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: invokevirtual #20                 // Method getKeyType:()Lorg/apache/bookkeeper/stream/proto/RangeKeyType;
      49: astore_3
      50: aload_2
      51: invokevirtual #20                 // Method getKeyType:()Lorg/apache/bookkeeper/stream/proto/RangeKeyType;
      54: astore        4
      56: aload_3
      57: ifnonnull     68
      60: aload         4
      62: ifnull        79
      65: goto          77
      68: aload_3
      69: aload         4
      71: invokevirtual #21                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ifne          79
      77: iconst_0
      78: ireturn
      79: aload_0
      80: invokevirtual #22                 // Method getRanges:()Ljava/util/NavigableMap;
      83: astore        5
      85: aload_2
      86: invokevirtual #22                 // Method getRanges:()Ljava/util/NavigableMap;
      89: astore        6
      91: aload         5
      93: ifnonnull     104
      96: aload         6
      98: ifnull        116
     101: goto          114
     104: aload         5
     106: aload         6
     108: invokevirtual #21                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     111: ifne          116
     114: iconst_0
     115: ireturn
     116: iconst_1
     117: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #17                 // class org/apache/bookkeeper/clients/impl/internal/api/StreamRanges
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #19                 // Method getMaxRangeId:()J
       9: lstore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: lload_3
      15: bipush        32
      17: lushr
      18: lload_3
      19: lxor
      20: l2i
      21: iadd
      22: istore_2
      23: aload_0
      24: invokevirtual #20                 // Method getKeyType:()Lorg/apache/bookkeeper/stream/proto/RangeKeyType;
      27: astore        5
      29: iload_2
      30: bipush        59
      32: imul
      33: aload         5
      35: ifnonnull     43
      38: bipush        43
      40: goto          48
      43: aload         5
      45: invokevirtual #23                 // Method java/lang/Object.hashCode:()I
      48: iadd
      49: istore_2
      50: aload_0
      51: invokevirtual #22                 // Method getRanges:()Ljava/util/NavigableMap;
      54: astore        6
      56: iload_2
      57: bipush        59
      59: imul
      60: aload         6
      62: ifnonnull     70
      65: bipush        43
      67: goto          75
      70: aload         6
      72: invokevirtual #23                 // Method java/lang/Object.hashCode:()I
      75: iadd
      76: istore_2
      77: iload_2
      78: ireturn

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #26                 // String StreamRanges(keyType=
       9: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #20                 // Method getKeyType:()Lorg/apache/bookkeeper/stream/proto/RangeKeyType;
      16: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #29                 // String , ranges=
      21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #22                 // Method getRanges:()Ljava/util/NavigableMap;
      28: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #30                 // String , maxRangeId=
      33: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #19                 // Method getMaxRangeId:()J
      40: invokevirtual #31                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #32                 // String )
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public org.apache.bookkeeper.clients.impl.internal.api.StreamRanges(org.apache.bookkeeper.stream.proto.RangeKeyType, java.util.NavigableMap<T, org.apache.bookkeeper.stream.proto.RangeProperties>, long);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #14                 // Field keyType:Lorg/apache/bookkeeper/stream/proto/RangeKeyType;
       9: aload_0
      10: aload_2
      11: putfield      #15                 // Field ranges:Ljava/util/NavigableMap;
      14: aload_0
      15: lload_3
      16: putfield      #16                 // Field maxRangeId:J
      19: return
}
