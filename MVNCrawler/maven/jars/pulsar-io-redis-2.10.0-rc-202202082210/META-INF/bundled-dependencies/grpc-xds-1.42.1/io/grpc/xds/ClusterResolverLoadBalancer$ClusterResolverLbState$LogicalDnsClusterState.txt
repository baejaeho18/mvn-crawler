Compiled from "ClusterResolverLoadBalancer.java"
final class io.grpc.xds.ClusterResolverLoadBalancer$ClusterResolverLbState$LogicalDnsClusterState extends io.grpc.xds.ClusterResolverLoadBalancer$ClusterResolverLbState$ClusterState {
  private final java.lang.String dnsHostName;

  private final io.grpc.NameResolver$Factory nameResolverFactory;

  private final io.grpc.NameResolver$Args nameResolverArgs;

  private io.grpc.NameResolver resolver;

  private io.grpc.internal.BackoffPolicy backoffPolicy;

  private io.grpc.SynchronizationContext$ScheduledHandle scheduledRefresh;

  final io.grpc.xds.ClusterResolverLoadBalancer$ClusterResolverLbState this$1;

  private io.grpc.xds.ClusterResolverLoadBalancer$ClusterResolverLbState$LogicalDnsClusterState(io.grpc.xds.ClusterResolverLoadBalancer$ClusterResolverLbState, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, io.grpc.xds.EnvoyServerProtoData$UpstreamTlsContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field this$1:Lio/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState;
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload         4
      10: aload         5
      12: aload         6
      14: aconst_null
      15: invokespecial #68                 // Method io/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState$ClusterState."<init>":(Lio/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Lio/grpc/xds/EnvoyServerProtoData$UpstreamTlsContext;Lio/grpc/xds/ClusterResolverLoadBalancer$1;)V
      18: aload_0
      19: aload_3
      20: ldc           #69                 // String dnsHostName
      22: invokestatic  #75                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #77                 // class java/lang/String
      28: putfield      #79                 // Field dnsHostName:Ljava/lang/String;
      31: aload_0
      32: aload_1
      33: invokestatic  #83                 // Method io/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState.access$2000:(Lio/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState;)Lio/grpc/LoadBalancer$Helper;
      36: invokevirtual #87                 // Method io/grpc/LoadBalancer$Helper.getNameResolverRegistry:()Lio/grpc/NameResolverRegistry;
      39: invokevirtual #93                 // Method io/grpc/NameResolverRegistry.asFactory:()Lio/grpc/NameResolver$Factory;
      42: ldc           #94                 // String nameResolverFactory
      44: invokestatic  #75                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #19                 // class io/grpc/NameResolver$Factory
      50: putfield      #96                 // Field nameResolverFactory:Lio/grpc/NameResolver$Factory;
      53: aload_0
      54: aload_1
      55: invokestatic  #83                 // Method io/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState.access$2000:(Lio/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState;)Lio/grpc/LoadBalancer$Helper;
      58: invokevirtual #100                // Method io/grpc/LoadBalancer$Helper.getNameResolverArgs:()Lio/grpc/NameResolver$Args;
      61: ldc           #101                // String nameResolverArgs
      63: invokestatic  #75                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: checkcast     #24                 // class io/grpc/NameResolver$Args
      69: putfield      #103                // Field nameResolverArgs:Lio/grpc/NameResolver$Args;
      72: return

  void start();
    Code:
       0: new           #117                // class java/net/URI
       3: dup
       4: ldc           #119                // String dns
       6: ldc           #121                // String
       8: new           #123                // class java/lang/StringBuilder
      11: dup
      12: invokespecial #125                // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #127                // String /
      17: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_0
      21: getfield      #79                 // Field dnsHostName:Ljava/lang/String;
      24: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #135                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: aconst_null
      31: invokespecial #138                // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      34: astore_1
      35: goto          83
      38: astore_2
      39: aload_0
      40: getstatic     #144                // Field io/grpc/Status.INTERNAL:Lio/grpc/Status;
      43: new           #123                // class java/lang/StringBuilder
      46: dup
      47: invokespecial #125                // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #146                // String Bug, invalid URI creation:
      52: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: getfield      #79                 // Field dnsHostName:Ljava/lang/String;
      59: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #135                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokevirtual #150                // Method io/grpc/Status.withDescription:(Ljava/lang/String;)Lio/grpc/Status;
      68: aload_2
      69: invokevirtual #154                // Method io/grpc/Status.withCause:(Ljava/lang/Throwable;)Lio/grpc/Status;
      72: putfield      #157                // Field status:Lio/grpc/Status;
      75: aload_0
      76: getfield      #65                 // Field this$1:Lio/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState;
      79: invokestatic  #161                // Method io/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState.access$1900:(Lio/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState;)V
      82: return
      83: aload_0
      84: aload_0
      85: getfield      #96                 // Field nameResolverFactory:Lio/grpc/NameResolver$Factory;
      88: aload_1
      89: aload_0
      90: getfield      #103                // Field nameResolverArgs:Lio/grpc/NameResolver$Args;
      93: invokevirtual #165                // Method io/grpc/NameResolver$Factory.newNameResolver:(Ljava/net/URI;Lio/grpc/NameResolver$Args;)Lio/grpc/NameResolver;
      96: putfield      #167                // Field resolver:Lio/grpc/NameResolver;
      99: aload_0
     100: getfield      #167                // Field resolver:Lio/grpc/NameResolver;
     103: ifnonnull     155
     106: aload_0
     107: getstatic     #144                // Field io/grpc/Status.INTERNAL:Lio/grpc/Status;
     110: new           #123                // class java/lang/StringBuilder
     113: dup
     114: invokespecial #125                // Method java/lang/StringBuilder."<init>":()V
     117: ldc           #169                // String Xds cluster resolver lb for logical DNS cluster [
     119: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: getfield      #171                // Field name:Ljava/lang/String;
     126: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: ldc           #173                // String ] cannot find DNS resolver with uri:
     131: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_1
     135: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: invokevirtual #135                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokevirtual #150                // Method io/grpc/Status.withDescription:(Ljava/lang/String;)Lio/grpc/Status;
     144: putfield      #157                // Field status:Lio/grpc/Status;
     147: aload_0
     148: getfield      #65                 // Field this$1:Lio/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState;
     151: invokestatic  #161                // Method io/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState.access$1900:(Lio/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState;)V
     154: return
     155: aload_0
     156: getfield      #167                // Field resolver:Lio/grpc/NameResolver;
     159: new           #13                 // class io/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState$LogicalDnsClusterState$NameResolverListener
     162: dup
     163: aload_0
     164: aconst_null
     165: invokespecial #179                // Method io/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState$LogicalDnsClusterState$NameResolverListener."<init>":(Lio/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState$LogicalDnsClusterState;Lio/grpc/xds/ClusterResolverLoadBalancer$1;)V
     168: invokevirtual #182                // Method io/grpc/NameResolver.start:(Lio/grpc/NameResolver$Listener2;)V
     171: return
    Exception table:
       from    to  target type
           0    35    38   Class java/net/URISyntaxException

  void refresh();
    Code:
       0: aload_0
       1: getfield      #167                // Field resolver:Lio/grpc/NameResolver;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: invokespecial #190                // Method cancelBackoff:()V
      12: aload_0
      13: getfield      #167                // Field resolver:Lio/grpc/NameResolver;
      16: invokevirtual #192                // Method io/grpc/NameResolver.refresh:()V
      19: return

  void shutdown();
    Code:
       0: aload_0
       1: invokespecial #195                // Method io/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState$ClusterState.shutdown:()V
       4: aload_0
       5: getfield      #167                // Field resolver:Lio/grpc/NameResolver;
       8: ifnull        18
      11: aload_0
      12: getfield      #167                // Field resolver:Lio/grpc/NameResolver;
      15: invokevirtual #196                // Method io/grpc/NameResolver.shutdown:()V
      18: aload_0
      19: invokespecial #190                // Method cancelBackoff:()V
      22: return

  private void cancelBackoff();
    Code:
       0: aload_0
       1: getfield      #198                // Field scheduledRefresh:Lio/grpc/SynchronizationContext$ScheduledHandle;
       4: ifnull        24
       7: aload_0
       8: getfield      #198                // Field scheduledRefresh:Lio/grpc/SynchronizationContext$ScheduledHandle;
      11: invokevirtual #201                // Method io/grpc/SynchronizationContext$ScheduledHandle.cancel:()V
      14: aload_0
      15: aconst_null
      16: putfield      #198                // Field scheduledRefresh:Lio/grpc/SynchronizationContext$ScheduledHandle;
      19: aload_0
      20: aconst_null
      21: putfield      #203                // Field backoffPolicy:Lio/grpc/internal/BackoffPolicy;
      24: return

  io.grpc.xds.ClusterResolverLoadBalancer$ClusterResolverLbState$LogicalDnsClusterState(io.grpc.xds.ClusterResolverLoadBalancer$ClusterResolverLbState, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, io.grpc.xds.EnvoyServerProtoData$UpstreamTlsContext, io.grpc.xds.ClusterResolverLoadBalancer$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #206                // Method "<init>":(Lio/grpc/xds/ClusterResolverLoadBalancer$ClusterResolverLbState;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Lio/grpc/xds/EnvoyServerProtoData$UpstreamTlsContext;)V
      13: return

  static io.grpc.SynchronizationContext$ScheduledHandle access$2202(io.grpc.xds.ClusterResolverLoadBalancer$ClusterResolverLbState$LogicalDnsClusterState, io.grpc.SynchronizationContext$ScheduledHandle);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #198                // Field scheduledRefresh:Lio/grpc/SynchronizationContext$ScheduledHandle;
       6: areturn

  static io.grpc.NameResolver access$2300(io.grpc.xds.ClusterResolverLoadBalancer$ClusterResolverLbState$LogicalDnsClusterState);
    Code:
       0: aload_0
       1: getfield      #167                // Field resolver:Lio/grpc/NameResolver;
       4: areturn

  static io.grpc.internal.BackoffPolicy access$2402(io.grpc.xds.ClusterResolverLoadBalancer$ClusterResolverLbState$LogicalDnsClusterState, io.grpc.internal.BackoffPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #203                // Field backoffPolicy:Lio/grpc/internal/BackoffPolicy;
       6: areturn

  static io.grpc.SynchronizationContext$ScheduledHandle access$2200(io.grpc.xds.ClusterResolverLoadBalancer$ClusterResolverLbState$LogicalDnsClusterState);
    Code:
       0: aload_0
       1: getfield      #198                // Field scheduledRefresh:Lio/grpc/SynchronizationContext$ScheduledHandle;
       4: areturn

  static io.grpc.internal.BackoffPolicy access$2400(io.grpc.xds.ClusterResolverLoadBalancer$ClusterResolverLbState$LogicalDnsClusterState);
    Code:
       0: aload_0
       1: getfield      #203                // Field backoffPolicy:Lio/grpc/internal/BackoffPolicy;
       4: areturn
}
