Compiled from "FaultFilter.java"
final class io.grpc.xds.FaultFilter$DelayInjectedCall<ReqT, RespT> extends io.grpc.internal.DelayedClientCall<ReqT, RespT> {
  final java.lang.Object lock;

  java.util.concurrent.ScheduledFuture<?> delayTask;

  boolean cancelled;

  final io.grpc.xds.FaultFilter this$0;

  io.grpc.xds.FaultFilter$DelayInjectedCall(long, java.util.concurrent.Executor, java.util.concurrent.ScheduledExecutorService, io.grpc.Deadline, com.google.common.base.Supplier<? extends io.grpc.ClientCall<ReqT, RespT>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field this$0:Lio/grpc/xds/FaultFilter;
       5: aload_0
       6: aload         4
       8: aload         5
      10: aload         6
      12: invokespecial #29                 // Method io/grpc/internal/DelayedClientCall."<init>":(Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/grpc/Deadline;)V
      15: aload_0
      16: new           #31                 // class java/lang/Object
      19: dup
      20: invokespecial #34                 // Method java/lang/Object."<init>":()V
      23: putfield      #36                 // Field lock:Ljava/lang/Object;
      26: aload_1
      27: invokestatic  #40                 // Method io/grpc/xds/FaultFilter.access$000:(Lio/grpc/xds/FaultFilter;)Ljava/util/concurrent/atomic/AtomicLong;
      30: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      33: pop2
      34: aload         5
      36: new           #11                 // class io/grpc/xds/FaultFilter$DelayInjectedCall$1
      39: dup
      40: aload_0
      41: aload_1
      42: aload         7
      44: invokespecial #49                 // Method io/grpc/xds/FaultFilter$DelayInjectedCall$1."<init>":(Lio/grpc/xds/FaultFilter$DelayInjectedCall;Lio/grpc/xds/FaultFilter;Lcom/google/common/base/Supplier;)V
      47: lload_2
      48: getstatic     #55                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      51: invokeinterface #61,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      56: astore        8
      58: aload_0
      59: getfield      #36                 // Field lock:Ljava/lang/Object;
      62: dup
      63: astore        9
      65: monitorenter
      66: aload_0
      67: getfield      #63                 // Field cancelled:Z
      70: ifne          83
      73: aload_0
      74: aload         8
      76: putfield      #65                 // Field delayTask:Ljava/util/concurrent/ScheduledFuture;
      79: aload         9
      81: monitorexit
      82: return
      83: aload         9
      85: monitorexit
      86: goto          97
      89: astore        10
      91: aload         9
      93: monitorexit
      94: aload         10
      96: athrow
      97: aload         8
      99: iconst_0
     100: invokeinterface #79,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
     105: pop
     106: return
    Exception table:
       from    to  target type
          66    82    89   any
          83    86    89   any
          89    94    89   any

  protected void callCancelled();
    Code:
       0: aload_0
       1: getfield      #36                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #63                 // Field cancelled:Z
      12: aload_0
      13: getfield      #26                 // Field this$0:Lio/grpc/xds/FaultFilter;
      16: invokestatic  #40                 // Method io/grpc/xds/FaultFilter.access$000:(Lio/grpc/xds/FaultFilter;)Ljava/util/concurrent/atomic/AtomicLong;
      19: invokevirtual #98                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      22: pop2
      23: aload_0
      24: getfield      #65                 // Field delayTask:Ljava/util/concurrent/ScheduledFuture;
      27: astore_1
      28: aload_2
      29: monitorexit
      30: goto          38
      33: astore_3
      34: aload_2
      35: monitorexit
      36: aload_3
      37: athrow
      38: aload_1
      39: ifnull        50
      42: aload_1
      43: iconst_0
      44: invokeinterface #79,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      49: pop
      50: return
    Exception table:
       from    to  target type
           7    30    33   any
          33    36    33   any
}
