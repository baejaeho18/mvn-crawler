Compiled from "FaultFilter.java"
final class io.grpc.xds.FaultFilter$FailingClientCall<ReqT, RespT> extends io.grpc.ClientCall<ReqT, RespT> {
  final io.grpc.Status error;

  final java.util.concurrent.Executor callExecutor;

  final io.grpc.Context context;

  final io.grpc.xds.FaultFilter this$0;

  io.grpc.xds.FaultFilter$FailingClientCall(io.grpc.xds.FaultFilter, io.grpc.Status, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field this$0:Lio/grpc/xds/FaultFilter;
       5: aload_0
       6: invokespecial #29                 // Method io/grpc/ClientCall."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #31                 // Field error:Lio/grpc/Status;
      14: aload_0
      15: aload_3
      16: putfield      #33                 // Field callExecutor:Ljava/util/concurrent/Executor;
      19: aload_0
      20: invokestatic  #39                 // Method io/grpc/Context.current:()Lio/grpc/Context;
      23: putfield      #41                 // Field context:Lio/grpc/Context;
      26: return

  public void start(io.grpc.ClientCall$Listener<RespT>, io.grpc.Metadata);
    Code:
       0: aload_0
       1: getfield      #26                 // Field this$0:Lio/grpc/xds/FaultFilter;
       4: invokestatic  #51                 // Method io/grpc/xds/FaultFilter.access$000:(Lio/grpc/xds/FaultFilter;)Ljava/util/concurrent/atomic/AtomicLong;
       7: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      10: pop2
      11: aload_0
      12: getfield      #33                 // Field callExecutor:Ljava/util/concurrent/Executor;
      15: new           #11                 // class io/grpc/xds/FaultFilter$FailingClientCall$1
      18: dup
      19: aload_0
      20: aload_1
      21: invokespecial #60                 // Method io/grpc/xds/FaultFilter$FailingClientCall$1."<init>":(Lio/grpc/xds/FaultFilter$FailingClientCall;Lio/grpc/ClientCall$Listener;)V
      24: invokeinterface #66,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      29: return

  public void request(int);
    Code:
       0: return

  public void cancel(java.lang.String, java.lang.Throwable);
    Code:
       0: return

  public void halfClose();
    Code:
       0: return

  public void sendMessage(ReqT);
    Code:
       0: return
}
