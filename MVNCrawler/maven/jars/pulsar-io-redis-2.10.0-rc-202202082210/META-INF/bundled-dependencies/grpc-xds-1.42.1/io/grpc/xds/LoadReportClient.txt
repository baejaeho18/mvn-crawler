Compiled from "LoadReportClient.java"
final class io.grpc.xds.LoadReportClient {
  private final io.grpc.InternalLogId logId;

  private final io.grpc.xds.XdsLogger logger;

  private final io.grpc.ManagedChannel channel;

  private final io.grpc.Context context;

  private final boolean useProtocolV3;

  private final io.grpc.xds.EnvoyProtoData$Node node;

  private final io.grpc.SynchronizationContext syncContext;

  private final java.util.concurrent.ScheduledExecutorService timerService;

  private final com.google.common.base.Stopwatch retryStopwatch;

  private final io.grpc.internal.BackoffPolicy$Provider backoffPolicyProvider;

  private final io.grpc.xds.LoadStatsManager2 loadStatsManager;

  private boolean started;

  private io.grpc.internal.BackoffPolicy lrsRpcRetryPolicy;

  private io.grpc.SynchronizationContext$ScheduledHandle lrsRpcRetryTimer;

  private io.grpc.xds.LoadReportClient$LrsStream lrsStream;

  io.grpc.xds.LoadReportClient(io.grpc.xds.LoadStatsManager2, io.grpc.ManagedChannel, io.grpc.Context, boolean, io.grpc.xds.EnvoyProtoData$Node, io.grpc.SynchronizationContext, java.util.concurrent.ScheduledExecutorService, io.grpc.internal.BackoffPolicy$Provider, com.google.common.base.Supplier<com.google.common.base.Stopwatch>);
    Code:
       0: aload_0
       1: invokespecial #81                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #82                 // String loadStatsManager
       8: invokestatic  #88                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #90                 // class io/grpc/xds/LoadStatsManager2
      14: putfield      #92                 // Field loadStatsManager:Lio/grpc/xds/LoadStatsManager2;
      17: aload_0
      18: aload_2
      19: ldc           #94                 // String xdsChannel
      21: invokestatic  #88                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #96                 // class io/grpc/ManagedChannel
      27: putfield      #98                 // Field channel:Lio/grpc/ManagedChannel;
      30: aload_0
      31: aload_3
      32: ldc           #99                 // String context
      34: invokestatic  #88                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #101                // class io/grpc/Context
      40: putfield      #103                // Field context:Lio/grpc/Context;
      43: aload_0
      44: iload         4
      46: putfield      #105                // Field useProtocolV3:Z
      49: aload_0
      50: aload         6
      52: ldc           #106                // String syncContext
      54: invokestatic  #88                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: checkcast     #36                 // class io/grpc/SynchronizationContext
      60: putfield      #108                // Field syncContext:Lio/grpc/SynchronizationContext;
      63: aload_0
      64: aload         7
      66: ldc           #110                // String timeService
      68: invokestatic  #88                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: checkcast     #112                // class java/util/concurrent/ScheduledExecutorService
      74: putfield      #114                // Field timerService:Ljava/util/concurrent/ScheduledExecutorService;
      77: aload_0
      78: aload         8
      80: ldc           #115                // String backoffPolicyProvider
      82: invokestatic  #88                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: checkcast     #29                 // class io/grpc/internal/BackoffPolicy$Provider
      88: putfield      #117                // Field backoffPolicyProvider:Lio/grpc/internal/BackoffPolicy$Provider;
      91: aload_0
      92: aload         9
      94: ldc           #119                // String stopwatchSupplier
      96: invokestatic  #88                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      99: checkcast     #121                // class com/google/common/base/Supplier
     102: invokeinterface #125,  1          // InterfaceMethod com/google/common/base/Supplier.get:()Ljava/lang/Object;
     107: checkcast     #127                // class com/google/common/base/Stopwatch
     110: putfield      #129                // Field retryStopwatch:Lcom/google/common/base/Stopwatch;
     113: aload_0
     114: aload         5
     116: ldc           #130                // String node
     118: invokestatic  #88                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     121: checkcast     #24                 // class io/grpc/xds/EnvoyProtoData$Node
     124: invokevirtual #134                // Method io/grpc/xds/EnvoyProtoData$Node.toBuilder:()Lio/grpc/xds/EnvoyProtoData$Node$Builder;
     127: ldc           #136                // String envoy.lrs.supports_send_all_clusters
     129: invokevirtual #140                // Method io/grpc/xds/EnvoyProtoData$Node$Builder.addClientFeatures:(Ljava/lang/String;)Lio/grpc/xds/EnvoyProtoData$Node$Builder;
     132: invokevirtual #144                // Method io/grpc/xds/EnvoyProtoData$Node$Builder.build:()Lio/grpc/xds/EnvoyProtoData$Node;
     135: putfield      #146                // Field node:Lio/grpc/xds/EnvoyProtoData$Node;
     138: aload_0
     139: ldc           #148                // String lrs-client
     141: aconst_null
     142: invokestatic  #154                // Method io/grpc/InternalLogId.allocate:(Ljava/lang/String;Ljava/lang/String;)Lio/grpc/InternalLogId;
     145: putfield      #156                // Field logId:Lio/grpc/InternalLogId;
     148: aload_0
     149: aload_0
     150: getfield      #156                // Field logId:Lio/grpc/InternalLogId;
     153: invokestatic  #160                // Method io/grpc/xds/XdsLogger.withLogId:(Lio/grpc/InternalLogId;)Lio/grpc/xds/XdsLogger;
     156: putfield      #162                // Field logger:Lio/grpc/xds/XdsLogger;
     159: aload_0
     160: getfield      #162                // Field logger:Lio/grpc/xds/XdsLogger;
     163: getstatic     #166                // Field io/grpc/xds/XdsLogger$XdsLogLevel.INFO:Lio/grpc/xds/XdsLogger$XdsLogLevel;
     166: ldc           #168                // String Created
     168: invokevirtual #172                // Method io/grpc/xds/XdsLogger.log:(Lio/grpc/xds/XdsLogger$XdsLogLevel;Ljava/lang/String;)V
     171: return

  void startLoadReporting();
    Code:
       0: aload_0
       1: getfield      #108                // Field syncContext:Lio/grpc/SynchronizationContext;
       4: invokevirtual #181                // Method io/grpc/SynchronizationContext.throwIfNotInThisSynchronizationContext:()V
       7: aload_0
       8: getfield      #183                // Field started:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: iconst_1
      17: putfield      #183                // Field started:Z
      20: aload_0
      21: getfield      #162                // Field logger:Lio/grpc/xds/XdsLogger;
      24: getstatic     #166                // Field io/grpc/xds/XdsLogger$XdsLogLevel.INFO:Lio/grpc/xds/XdsLogger$XdsLogLevel;
      27: ldc           #185                // String Starting load reporting RPC
      29: invokevirtual #172                // Method io/grpc/xds/XdsLogger.log:(Lio/grpc/xds/XdsLogger$XdsLogLevel;Ljava/lang/String;)V
      32: aload_0
      33: invokespecial #188                // Method startLrsRpc:()V
      36: return

  void stopLoadReporting();
    Code:
       0: aload_0
       1: getfield      #108                // Field syncContext:Lio/grpc/SynchronizationContext;
       4: invokevirtual #181                // Method io/grpc/SynchronizationContext.throwIfNotInThisSynchronizationContext:()V
       7: aload_0
       8: getfield      #183                // Field started:Z
      11: ifne          15
      14: return
      15: aload_0
      16: iconst_0
      17: putfield      #183                // Field started:Z
      20: aload_0
      21: getfield      #162                // Field logger:Lio/grpc/xds/XdsLogger;
      24: getstatic     #166                // Field io/grpc/xds/XdsLogger$XdsLogLevel.INFO:Lio/grpc/xds/XdsLogger$XdsLogLevel;
      27: ldc           #191                // String Stopping load reporting RPC
      29: invokevirtual #172                // Method io/grpc/xds/XdsLogger.log:(Lio/grpc/xds/XdsLogger$XdsLogLevel;Ljava/lang/String;)V
      32: aload_0
      33: getfield      #193                // Field lrsRpcRetryTimer:Lio/grpc/SynchronizationContext$ScheduledHandle;
      36: ifnull        56
      39: aload_0
      40: getfield      #193                // Field lrsRpcRetryTimer:Lio/grpc/SynchronizationContext$ScheduledHandle;
      43: invokevirtual #197                // Method io/grpc/SynchronizationContext$ScheduledHandle.isPending:()Z
      46: ifeq          56
      49: aload_0
      50: getfield      #193                // Field lrsRpcRetryTimer:Lio/grpc/SynchronizationContext$ScheduledHandle;
      53: invokevirtual #200                // Method io/grpc/SynchronizationContext$ScheduledHandle.cancel:()V
      56: aload_0
      57: getfield      #202                // Field lrsStream:Lio/grpc/xds/LoadReportClient$LrsStream;
      60: ifnull        81
      63: aload_0
      64: getfield      #202                // Field lrsStream:Lio/grpc/xds/LoadReportClient$LrsStream;
      67: getstatic     #208                // Field io/grpc/Status.CANCELLED:Lio/grpc/Status;
      70: ldc           #210                // String stop load reporting
      72: invokevirtual #214                // Method io/grpc/Status.withDescription:(Ljava/lang/String;)Lio/grpc/Status;
      75: invokevirtual #218                // Method io/grpc/Status.asException:()Lio/grpc/StatusException;
      78: invokestatic  #222                // Method io/grpc/xds/LoadReportClient$LrsStream.access$000:(Lio/grpc/xds/LoadReportClient$LrsStream;Ljava/lang/Exception;)V
      81: return

  private void startLrsRpc();
    Code:
       0: aload_0
       1: getfield      #183                // Field started:Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #202                // Field lrsStream:Lio/grpc/xds/LoadReportClient$LrsStream;
      12: ifnonnull     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ldc           #224                // String previous lbStream has not been cleared yet
      22: invokestatic  #228                // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      25: aload_0
      26: getfield      #105                // Field useProtocolV3:Z
      29: ifeq          48
      32: aload_0
      33: new           #9                  // class io/grpc/xds/LoadReportClient$LrsStreamV3
      36: dup
      37: aload_0
      38: aconst_null
      39: invokespecial #231                // Method io/grpc/xds/LoadReportClient$LrsStreamV3."<init>":(Lio/grpc/xds/LoadReportClient;Lio/grpc/xds/LoadReportClient$1;)V
      42: putfield      #202                // Field lrsStream:Lio/grpc/xds/LoadReportClient$LrsStream;
      45: goto          61
      48: aload_0
      49: new           #12                 // class io/grpc/xds/LoadReportClient$LrsStreamV2
      52: dup
      53: aload_0
      54: aconst_null
      55: invokespecial #232                // Method io/grpc/xds/LoadReportClient$LrsStreamV2."<init>":(Lio/grpc/xds/LoadReportClient;Lio/grpc/xds/LoadReportClient$1;)V
      58: putfield      #202                // Field lrsStream:Lio/grpc/xds/LoadReportClient$LrsStream;
      61: aload_0
      62: getfield      #129                // Field retryStopwatch:Lcom/google/common/base/Stopwatch;
      65: invokevirtual #236                // Method com/google/common/base/Stopwatch.reset:()Lcom/google/common/base/Stopwatch;
      68: invokevirtual #239                // Method com/google/common/base/Stopwatch.start:()Lcom/google/common/base/Stopwatch;
      71: pop
      72: aload_0
      73: getfield      #103                // Field context:Lio/grpc/Context;
      76: invokevirtual #243                // Method io/grpc/Context.attach:()Lio/grpc/Context;
      79: astore_1
      80: aload_0
      81: getfield      #202                // Field lrsStream:Lio/grpc/xds/LoadReportClient$LrsStream;
      84: invokevirtual #245                // Method io/grpc/xds/LoadReportClient$LrsStream.start:()V
      87: aload_0
      88: getfield      #103                // Field context:Lio/grpc/Context;
      91: aload_1
      92: invokevirtual #249                // Method io/grpc/Context.detach:(Lio/grpc/Context;)V
      95: goto          109
      98: astore_2
      99: aload_0
     100: getfield      #103                // Field context:Lio/grpc/Context;
     103: aload_1
     104: invokevirtual #249                // Method io/grpc/Context.detach:(Lio/grpc/Context;)V
     107: aload_2
     108: athrow
     109: return
    Exception table:
       from    to  target type
          80    87    98   any

  static void access$200(io.grpc.xds.LoadReportClient);
    Code:
       0: aload_0
       1: invokespecial #188                // Method startLrsRpc:()V
       4: return

  static io.grpc.xds.XdsLogger access$500(io.grpc.xds.LoadReportClient);
    Code:
       0: aload_0
       1: getfield      #162                // Field logger:Lio/grpc/xds/XdsLogger;
       4: areturn

  static io.grpc.xds.LoadStatsManager2 access$600(io.grpc.xds.LoadReportClient);
    Code:
       0: aload_0
       1: getfield      #92                 // Field loadStatsManager:Lio/grpc/xds/LoadStatsManager2;
       4: areturn

  static java.util.concurrent.ScheduledExecutorService access$700(io.grpc.xds.LoadReportClient);
    Code:
       0: aload_0
       1: getfield      #114                // Field timerService:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  static io.grpc.SynchronizationContext access$800(io.grpc.xds.LoadReportClient);
    Code:
       0: aload_0
       1: getfield      #108                // Field syncContext:Lio/grpc/SynchronizationContext;
       4: areturn

  static io.grpc.internal.BackoffPolicy access$900(io.grpc.xds.LoadReportClient);
    Code:
       0: aload_0
       1: getfield      #267                // Field lrsRpcRetryPolicy:Lio/grpc/internal/BackoffPolicy;
       4: areturn

  static io.grpc.internal.BackoffPolicy access$902(io.grpc.xds.LoadReportClient, io.grpc.internal.BackoffPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #267                // Field lrsRpcRetryPolicy:Lio/grpc/internal/BackoffPolicy;
       6: areturn

  static io.grpc.internal.BackoffPolicy$Provider access$1000(io.grpc.xds.LoadReportClient);
    Code:
       0: aload_0
       1: getfield      #117                // Field backoffPolicyProvider:Lio/grpc/internal/BackoffPolicy$Provider;
       4: areturn

  static com.google.common.base.Stopwatch access$1100(io.grpc.xds.LoadReportClient);
    Code:
       0: aload_0
       1: getfield      #129                // Field retryStopwatch:Lcom/google/common/base/Stopwatch;
       4: areturn

  static io.grpc.SynchronizationContext$ScheduledHandle access$1202(io.grpc.xds.LoadReportClient, io.grpc.SynchronizationContext$ScheduledHandle);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #193                // Field lrsRpcRetryTimer:Lio/grpc/SynchronizationContext$ScheduledHandle;
       6: areturn

  static io.grpc.xds.LoadReportClient$LrsStream access$1300(io.grpc.xds.LoadReportClient);
    Code:
       0: aload_0
       1: getfield      #202                // Field lrsStream:Lio/grpc/xds/LoadReportClient$LrsStream;
       4: areturn

  static io.grpc.xds.LoadReportClient$LrsStream access$1302(io.grpc.xds.LoadReportClient, io.grpc.xds.LoadReportClient$LrsStream);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #202                // Field lrsStream:Lio/grpc/xds/LoadReportClient$LrsStream;
       6: areturn

  static io.grpc.ManagedChannel access$1500(io.grpc.xds.LoadReportClient);
    Code:
       0: aload_0
       1: getfield      #98                 // Field channel:Lio/grpc/ManagedChannel;
       4: areturn

  static io.grpc.xds.EnvoyProtoData$Node access$1600(io.grpc.xds.LoadReportClient);
    Code:
       0: aload_0
       1: getfield      #146                // Field node:Lio/grpc/xds/EnvoyProtoData$Node;
       4: areturn
}
