Compiled from "ClusterImplLoadBalancer.java"
class io.grpc.xds.ClusterImplLoadBalancer$CountingStreamTracerFactory$2 extends io.grpc.internal.ForwardingClientStreamTracer {
  final io.grpc.ClientStreamTracer val$delegatedTracer;

  final io.grpc.xds.ClusterImplLoadBalancer$CountingStreamTracerFactory this$0;

  io.grpc.xds.ClusterImplLoadBalancer$CountingStreamTracerFactory$2(io.grpc.xds.ClusterImplLoadBalancer$CountingStreamTracerFactory, io.grpc.ClientStreamTracer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field this$0:Lio/grpc/xds/ClusterImplLoadBalancer$CountingStreamTracerFactory;
       5: aload_0
       6: aload_2
       7: putfield      #33                 // Field val$delegatedTracer:Lio/grpc/ClientStreamTracer;
      10: aload_0
      11: invokespecial #36                 // Method io/grpc/internal/ForwardingClientStreamTracer."<init>":()V
      14: return

  protected io.grpc.ClientStreamTracer delegate();
    Code:
       0: aload_0
       1: getfield      #33                 // Field val$delegatedTracer:Lio/grpc/ClientStreamTracer;
       4: areturn

  public void streamClosed(io.grpc.Status);
    Code:
       0: aload_0
       1: getfield      #31                 // Field this$0:Lio/grpc/xds/ClusterImplLoadBalancer$CountingStreamTracerFactory;
       4: invokestatic  #46                 // Method io/grpc/xds/ClusterImplLoadBalancer$CountingStreamTracerFactory.access$1500:(Lio/grpc/xds/ClusterImplLoadBalancer$CountingStreamTracerFactory;)Lio/grpc/xds/LoadStatsManager2$ClusterLocalityStats;
       7: aload_1
       8: invokevirtual #49                 // Method io/grpc/xds/LoadStatsManager2$ClusterLocalityStats.recordCallFinished:(Lio/grpc/Status;)V
      11: aload_0
      12: getfield      #31                 // Field this$0:Lio/grpc/xds/ClusterImplLoadBalancer$CountingStreamTracerFactory;
      15: invokestatic  #53                 // Method io/grpc/xds/ClusterImplLoadBalancer$CountingStreamTracerFactory.access$1600:(Lio/grpc/xds/ClusterImplLoadBalancer$CountingStreamTracerFactory;)Ljava/util/concurrent/atomic/AtomicLong;
      18: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      21: pop2
      22: aload_0
      23: invokevirtual #61                 // Method delegate:()Lio/grpc/ClientStreamTracer;
      26: aload_1
      27: invokevirtual #63                 // Method io/grpc/ClientStreamTracer.streamClosed:(Lio/grpc/Status;)V
      30: return
}
