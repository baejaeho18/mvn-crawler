Compiled from "SharedCallCounterMap.java"
final class io.grpc.xds.SharedCallCounterMap implements io.grpc.xds.XdsNameResolverProvider$CallCounterProvider {
  private final java.lang.ref.ReferenceQueue<java.util.concurrent.atomic.AtomicLong> refQueue;

  private final java.util.Map<java.lang.String, java.util.Map<java.lang.String, io.grpc.xds.SharedCallCounterMap$CounterReference>> counters;

  private io.grpc.xds.SharedCallCounterMap();
    Code:
       0: aload_0
       1: new           #29                 // class java/util/HashMap
       4: dup
       5: invokespecial #31                 // Method java/util/HashMap."<init>":()V
       8: invokespecial #34                 // Method "<init>":(Ljava/util/Map;)V
      11: return

  io.grpc.xds.SharedCallCounterMap(java.util.Map<java.lang.String, java.util.Map<java.lang.String, io.grpc.xds.SharedCallCounterMap$CounterReference>>);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #41                 // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #42                 // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #44                 // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: aload_1
      17: ldc           #45                 // String counters
      19: invokestatic  #51                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #53                 // class java/util/Map
      25: putfield      #55                 // Field counters:Ljava/util/Map;
      28: return

  static io.grpc.xds.SharedCallCounterMap getInstance();
    Code:
       0: invokestatic  #60                 // Method io/grpc/xds/SharedCallCounterMap$SharedCallCounterMapHolder.access$000:()Lio/grpc/xds/SharedCallCounterMap;
       3: areturn

  public synchronized java.util.concurrent.atomic.AtomicLong getOrCreate(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #55                 // Field counters:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #67,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #53                 // class java/util/Map
      13: astore_3
      14: aload_3
      15: ifnonnull     38
      18: new           #29                 // class java/util/HashMap
      21: dup
      22: invokespecial #31                 // Method java/util/HashMap."<init>":()V
      25: astore_3
      26: aload_0
      27: getfield      #55                 // Field counters:Ljava/util/Map;
      30: aload_1
      31: aload_3
      32: invokeinterface #70,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_3
      39: aload_2
      40: invokeinterface #67,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #15                 // class io/grpc/xds/SharedCallCounterMap$CounterReference
      48: astore        4
      50: aconst_null
      51: astore        5
      53: aload         4
      55: ifnull        79
      58: aload         4
      60: invokevirtual #73                 // Method io/grpc/xds/SharedCallCounterMap$CounterReference.get:()Ljava/lang/Object;
      63: checkcast     #75                 // class java/util/concurrent/atomic/AtomicLong
      66: astore        5
      68: aload         5
      70: ifnonnull     79
      73: aload         4
      75: invokevirtual #79                 // Method io/grpc/xds/SharedCallCounterMap$CounterReference.enqueue:()Z
      78: pop
      79: aload         5
      81: ifnonnull     120
      84: new           #75                 // class java/util/concurrent/atomic/AtomicLong
      87: dup
      88: invokespecial #80                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      91: astore        5
      93: new           #15                 // class io/grpc/xds/SharedCallCounterMap$CounterReference
      96: dup
      97: aload         5
      99: aload_0
     100: getfield      #44                 // Field refQueue:Ljava/lang/ref/ReferenceQueue;
     103: aload_1
     104: aload_2
     105: invokespecial #83                 // Method io/grpc/xds/SharedCallCounterMap$CounterReference."<init>":(Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/ref/ReferenceQueue;Ljava/lang/String;Ljava/lang/String;)V
     108: astore        4
     110: aload_3
     111: aload_2
     112: aload         4
     114: invokeinterface #70,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: aload_0
     121: invokevirtual #86                 // Method cleanQueue:()V
     124: aload         5
     126: areturn

  void cleanQueue();
    Code:
       0: aload_0
       1: getfield      #44                 // Field refQueue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #99                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: checkcast     #15                 // class io/grpc/xds/SharedCallCounterMap$CounterReference
      10: dup
      11: astore_1
      12: ifnull        86
      15: aload_0
      16: getfield      #55                 // Field counters:Ljava/util/Map;
      19: aload_1
      20: invokestatic  #103                // Method io/grpc/xds/SharedCallCounterMap$CounterReference.access$100:(Lio/grpc/xds/SharedCallCounterMap$CounterReference;)Ljava/lang/String;
      23: invokeinterface #67,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #53                 // class java/util/Map
      31: astore_2
      32: aload_2
      33: aload_1
      34: invokestatic  #106                // Method io/grpc/xds/SharedCallCounterMap$CounterReference.access$200:(Lio/grpc/xds/SharedCallCounterMap$CounterReference;)Ljava/lang/String;
      37: invokeinterface #67,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: aload_1
      43: if_acmpeq     49
      46: goto          0
      49: aload_2
      50: aload_1
      51: invokestatic  #106                // Method io/grpc/xds/SharedCallCounterMap$CounterReference.access$200:(Lio/grpc/xds/SharedCallCounterMap$CounterReference;)Ljava/lang/String;
      54: invokeinterface #109,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_2
      61: invokeinterface #112,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      66: ifeq          83
      69: aload_0
      70: getfield      #55                 // Field counters:Ljava/util/Map;
      73: aload_1
      74: invokestatic  #103                // Method io/grpc/xds/SharedCallCounterMap$CounterReference.access$100:(Lio/grpc/xds/SharedCallCounterMap$CounterReference;)Ljava/lang/String;
      77: invokeinterface #109,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: goto          0
      86: return

  io.grpc.xds.SharedCallCounterMap(io.grpc.xds.SharedCallCounterMap$1);
    Code:
       0: aload_0
       1: invokespecial #115                // Method "<init>":()V
       4: return
}
