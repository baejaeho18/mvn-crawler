Compiled from "MarkerManager.java"
public final class org.apache.logging.log4j.MarkerManager {
  private static final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.logging.log4j.Marker> MARKERS;

  private org.apache.logging.log4j.MarkerManager();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public static void clear();
    Code:
       0: getstatic     #1                  // Field MARKERS:Ljava/util/concurrent/ConcurrentMap;
       3: invokeinterface #4,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       8: return

  public static boolean exists(java.lang.String);
    Code:
       0: getstatic     #1                  // Field MARKERS:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
       9: ireturn

  public static org.apache.logging.log4j.Marker getMarker(java.lang.String);
    Code:
       0: getstatic     #1                  // Field MARKERS:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #7                  // class org/apache/logging/log4j/Marker
      12: astore_1
      13: aload_1
      14: ifnonnull     48
      17: getstatic     #1                  // Field MARKERS:Ljava/util/concurrent/ConcurrentMap;
      20: aload_0
      21: new           #8                  // class org/apache/logging/log4j/MarkerManager$Log4jMarker
      24: dup
      25: aload_0
      26: invokespecial #9                  // Method org/apache/logging/log4j/MarkerManager$Log4jMarker."<init>":(Ljava/lang/String;)V
      29: invokeinterface #10,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: getstatic     #1                  // Field MARKERS:Ljava/util/concurrent/ConcurrentMap;
      38: aload_0
      39: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #7                  // class org/apache/logging/log4j/Marker
      47: astore_1
      48: aload_1
      49: areturn

  public static org.apache.logging.log4j.Marker getMarker(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #1                  // Field MARKERS:Ljava/util/concurrent/ConcurrentMap;
       3: aload_1
       4: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #7                  // class org/apache/logging/log4j/Marker
      12: astore_2
      13: aload_2
      14: ifnonnull     49
      17: new           #11                 // class java/lang/IllegalArgumentException
      20: dup
      21: new           #12                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #14                 // String Parent Marker
      30: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #16                 // String  has not been defined
      39: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: aload_2
      51: invokestatic  #19                 // Method getMarker:(Ljava/lang/String;Lorg/apache/logging/log4j/Marker;)Lorg/apache/logging/log4j/Marker;
      54: areturn

  public static org.apache.logging.log4j.Marker getMarker(java.lang.String, org.apache.logging.log4j.Marker);
    Code:
       0: aload_0
       1: invokestatic  #20                 // Method getMarker:(Ljava/lang/String;)Lorg/apache/logging/log4j/Marker;
       4: iconst_1
       5: anewarray     #7                  // class org/apache/logging/log4j/Marker
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: invokeinterface #21,  2           // InterfaceMethod org/apache/logging/log4j/Marker.addParents:([Lorg/apache/logging/log4j/Marker;)Lorg/apache/logging/log4j/Marker;
      17: areturn

  private static void requireNonNull(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     13
       4: new           #11                 // class java/lang/IllegalArgumentException
       7: dup
       8: aload_1
       9: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      12: athrow
      13: return

  static void access$000(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)V
       5: return

  static java.util.concurrent.ConcurrentMap access$100();
    Code:
       0: getstatic     #1                  // Field MARKERS:Ljava/util/concurrent/ConcurrentMap;
       3: areturn

  static {};
    Code:
       0: new           #22                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #23                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #1                  // Field MARKERS:Ljava/util/concurrent/ConcurrentMap;
      10: return
}
