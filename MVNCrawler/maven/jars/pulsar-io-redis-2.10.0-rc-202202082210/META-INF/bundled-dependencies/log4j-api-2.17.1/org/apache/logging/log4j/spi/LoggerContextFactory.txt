Compiled from "LoggerContextFactory.java"
public interface org.apache.logging.log4j.spi.LoggerContextFactory {
  public default void shutdown(java.lang.String, java.lang.ClassLoader, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokeinterface #1,  4            // InterfaceMethod hasContext:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)Z
       9: ifeq          42
      12: aload_0
      13: aload_1
      14: aload_2
      15: aconst_null
      16: iload_3
      17: invokeinterface #2,  5            // InterfaceMethod getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/Object;Z)Lorg/apache/logging/log4j/spi/LoggerContext;
      22: astore        5
      24: aload         5
      26: instanceof    #3                  // class org/apache/logging/log4j/spi/Terminable
      29: ifeq          42
      32: aload         5
      34: checkcast     #3                  // class org/apache/logging/log4j/spi/Terminable
      37: invokeinterface #4,  1            // InterfaceMethod org/apache/logging/log4j/spi/Terminable.terminate:()V
      42: return

  public default boolean hasContext(java.lang.String, java.lang.ClassLoader, boolean);
    Code:
       0: iconst_0
       1: ireturn

  public abstract org.apache.logging.log4j.spi.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.lang.Object, boolean);

  public abstract org.apache.logging.log4j.spi.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.lang.Object, boolean, java.net.URI, java.lang.String);

  public abstract void removeContext(org.apache.logging.log4j.spi.LoggerContext);

  public default boolean isClassLoaderDependent();
    Code:
       0: iconst_1
       1: ireturn
}
