Compiled from "ParameterFormatter.java"
final class org.apache.logging.log4j.message.ParameterFormatter {
  static final java.lang.String RECURSION_PREFIX;

  static final java.lang.String RECURSION_SUFFIX;

  static final java.lang.String ERROR_PREFIX;

  static final java.lang.String ERROR_SEPARATOR;

  static final java.lang.String ERROR_MSG_SEPARATOR;

  static final java.lang.String ERROR_SUFFIX;

  private static final char DELIM_START;

  private static final char DELIM_STOP;

  private static final char ESCAPE_CHAR;

  private static final java.lang.ThreadLocal<java.text.SimpleDateFormat> SIMPLE_DATE_FORMAT_REF;

  private org.apache.logging.log4j.message.ParameterFormatter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static int countArgumentPlaceholders(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #2                  // Method java/lang/String.length:()I
      10: istore_1
      11: iconst_0
      12: istore_2
      13: iconst_0
      14: istore_3
      15: iconst_0
      16: istore        4
      18: iload         4
      20: iload_1
      21: iconst_1
      22: isub
      23: if_icmpge     97
      26: aload_0
      27: iload         4
      29: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      32: istore        5
      34: iload         5
      36: bipush        92
      38: if_icmpne     54
      41: iload_3
      42: ifne          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: istore_3
      51: goto          91
      54: iload         5
      56: bipush        123
      58: if_icmpne     89
      61: iload_3
      62: ifne          84
      65: aload_0
      66: iload         4
      68: iconst_1
      69: iadd
      70: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      73: bipush        125
      75: if_icmpne     84
      78: iinc          2, 1
      81: iinc          4, 1
      84: iconst_0
      85: istore_3
      86: goto          91
      89: iconst_0
      90: istore_3
      91: iinc          4, 1
      94: goto          18
      97: iload_2
      98: ireturn

  static int countArgumentPlaceholders2(java.lang.String, int[]);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #2                  // Method java/lang/String.length:()I
      10: istore_2
      11: iconst_0
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload_2
      22: iconst_1
      23: isub
      24: if_icmpge     115
      27: aload_0
      28: iload         5
      30: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      33: istore        6
      35: iload         6
      37: bipush        92
      39: if_icmpne     64
      42: iload         4
      44: ifne          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: istore        4
      54: aload_1
      55: iconst_0
      56: iconst_m1
      57: iastore
      58: iinc          3, 1
      61: goto          109
      64: iload         6
      66: bipush        123
      68: if_icmpne     106
      71: iload         4
      73: ifne          100
      76: aload_0
      77: iload         5
      79: iconst_1
      80: iadd
      81: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      84: bipush        125
      86: if_icmpne     100
      89: aload_1
      90: iload_3
      91: iload         5
      93: iastore
      94: iinc          3, 1
      97: iinc          5, 1
     100: iconst_0
     101: istore        4
     103: goto          109
     106: iconst_0
     107: istore        4
     109: iinc          5, 1
     112: goto          19
     115: iload_3
     116: ireturn

  static int countArgumentPlaceholders3(char[], int, int[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iconst_0
       6: istore        5
       8: iload         5
      10: iload_1
      11: iconst_1
      12: isub
      13: if_icmpge     93
      16: aload_0
      17: iload         5
      19: caload
      20: istore        6
      22: iload         6
      24: bipush        92
      26: if_icmpne     44
      29: iload         4
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: istore        4
      41: goto          87
      44: iload         6
      46: bipush        123
      48: if_icmpne     84
      51: iload         4
      53: ifne          78
      56: aload_0
      57: iload         5
      59: iconst_1
      60: iadd
      61: caload
      62: bipush        125
      64: if_icmpne     78
      67: aload_2
      68: iload_3
      69: iload         5
      71: iastore
      72: iinc          3, 1
      75: iinc          5, 1
      78: iconst_0
      79: istore        4
      81: goto          87
      84: iconst_0
      85: istore        4
      87: iinc          5, 1
      90: goto          8
      93: iload_3
      94: ireturn

  static java.lang.String format(java.lang.String, java.lang.Object[]);
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_1
       9: ifnonnull     16
      12: iconst_0
      13: goto          18
      16: aload_1
      17: arraylength
      18: istore_3
      19: aload_2
      20: aload_0
      21: aload_1
      22: iload_3
      23: invokestatic  #7                  // Method formatMessage:(Ljava/lang/StringBuilder;Ljava/lang/String;[Ljava/lang/Object;I)V
      26: aload_2
      27: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  static void formatMessage2(java.lang.StringBuilder, java.lang.String, java.lang.Object[], int, int[]);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_2
       5: ifnull        12
       8: iload_3
       9: ifne          19
      12: aload_0
      13: aload_1
      14: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: pop
      18: return
      19: iconst_0
      20: istore        5
      22: iconst_0
      23: istore        6
      25: iload         6
      27: iload_3
      28: if_icmpge     67
      31: aload_0
      32: aload_1
      33: iload         5
      35: aload         4
      37: iload         6
      39: iaload
      40: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      43: pop
      44: aload         4
      46: iload         6
      48: iaload
      49: iconst_2
      50: iadd
      51: istore        5
      53: aload_2
      54: iload         6
      56: aaload
      57: aload_0
      58: invokestatic  #11                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;)V
      61: iinc          6, 1
      64: goto          25
      67: aload_0
      68: aload_1
      69: iload         5
      71: aload_1
      72: invokevirtual #2                  // Method java/lang/String.length:()I
      75: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      78: pop
      79: return

  static void formatMessage3(java.lang.StringBuilder, char[], int, java.lang.Object[], int, int[]);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_3
       6: ifnull        14
       9: iload         4
      11: ifne          21
      14: aload_0
      15: aload_1
      16: invokevirtual #12                 // Method java/lang/StringBuilder.append:([C)Ljava/lang/StringBuilder;
      19: pop
      20: return
      21: iconst_0
      22: istore        6
      24: iconst_0
      25: istore        7
      27: iload         7
      29: iload         4
      31: if_icmpge     70
      34: aload_0
      35: aload_1
      36: iload         6
      38: aload         5
      40: iload         7
      42: iaload
      43: invokevirtual #13                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      46: pop
      47: aload         5
      49: iload         7
      51: iaload
      52: iconst_2
      53: iadd
      54: istore        6
      56: aload_3
      57: iload         7
      59: aaload
      60: aload_0
      61: invokestatic  #11                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;)V
      64: iinc          7, 1
      67: goto          27
      70: aload_0
      71: aload_1
      72: iload         6
      74: iload_2
      75: invokevirtual #13                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      78: pop
      79: return

  static void formatMessage(java.lang.StringBuilder, java.lang.String, java.lang.Object[], int);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_2
       5: ifnull        12
       8: iload_3
       9: ifne          19
      12: aload_0
      13: aload_1
      14: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: pop
      18: return
      19: iconst_0
      20: istore        4
      22: iconst_0
      23: istore        5
      25: iconst_0
      26: istore        6
      28: aload_1
      29: invokevirtual #2                  // Method java/lang/String.length:()I
      32: istore        7
      34: iload         6
      36: iload         7
      38: iconst_1
      39: isub
      40: if_icmpge     130
      43: aload_1
      44: iload         6
      46: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      49: istore        8
      51: iload         8
      53: bipush        92
      55: if_icmpne     64
      58: iinc          4, 1
      61: goto          124
      64: iload         8
      66: aload_1
      67: iload         6
      69: invokestatic  #14                 // Method isDelimPair:(CLjava/lang/String;I)Z
      72: ifeq          113
      75: iinc          6, 1
      78: iload         4
      80: aload_0
      81: invokestatic  #15                 // Method writeEscapedEscapeChars:(ILjava/lang/StringBuilder;)V
      84: iload         4
      86: invokestatic  #16                 // Method isOdd:(I)Z
      89: ifeq          99
      92: aload_0
      93: invokestatic  #17                 // Method writeDelimPair:(Ljava/lang/StringBuilder;)V
      96: goto          121
      99: aload_2
     100: iload_3
     101: iload         5
     103: aload_0
     104: invokestatic  #18                 // Method writeArgOrDelimPair:([Ljava/lang/Object;IILjava/lang/StringBuilder;)V
     107: iinc          5, 1
     110: goto          121
     113: aload_0
     114: iload         4
     116: iload         8
     118: invokestatic  #19                 // Method handleLiteralChar:(Ljava/lang/StringBuilder;IC)V
     121: iconst_0
     122: istore        4
     124: iinc          6, 1
     127: goto          34
     130: aload_1
     131: iload         7
     133: aload_0
     134: iload         4
     136: iload         6
     138: invokestatic  #20                 // Method handleRemainingCharIfAny:(Ljava/lang/String;ILjava/lang/StringBuilder;II)V
     141: return

  private static boolean isDelimPair(char, java.lang.String, int);
    Code:
       0: iload_0
       1: bipush        123
       3: if_icmpne     22
       6: aload_1
       7: iload_2
       8: iconst_1
       9: iadd
      10: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      13: bipush        125
      15: if_icmpne     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private static void handleRemainingCharIfAny(java.lang.String, int, java.lang.StringBuilder, int, int);
    Code:
       0: iload         4
       2: iload_1
       3: iconst_1
       4: isub
       5: if_icmpne     23
       8: aload_0
       9: iload         4
      11: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      14: istore        5
      16: aload_2
      17: iload_3
      18: iload         5
      20: invokestatic  #21                 // Method handleLastChar:(Ljava/lang/StringBuilder;IC)V
      23: return

  private static void handleLastChar(java.lang.StringBuilder, int, char);
    Code:
       0: iload_2
       1: bipush        92
       3: if_icmpne     16
       6: iload_1
       7: iconst_1
       8: iadd
       9: aload_0
      10: invokestatic  #22                 // Method writeUnescapedEscapeChars:(ILjava/lang/StringBuilder;)V
      13: goto          22
      16: aload_0
      17: iload_1
      18: iload_2
      19: invokestatic  #19                 // Method handleLiteralChar:(Ljava/lang/StringBuilder;IC)V
      22: return

  private static void handleLiteralChar(java.lang.StringBuilder, int, char);
    Code:
       0: iload_1
       1: aload_0
       2: invokestatic  #22                 // Method writeUnescapedEscapeChars:(ILjava/lang/StringBuilder;)V
       5: aload_0
       6: iload_2
       7: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      10: pop
      11: return

  private static void writeDelimPair(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: bipush        123
       3: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       6: pop
       7: aload_0
       8: bipush        125
      10: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      13: pop
      14: return

  private static boolean isOdd(int);
    Code:
       0: iload_0
       1: iconst_1
       2: iand
       3: iconst_1
       4: if_icmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static void writeEscapedEscapeChars(int, java.lang.StringBuilder);
    Code:
       0: iload_0
       1: iconst_1
       2: ishr
       3: istore_2
       4: iload_2
       5: aload_1
       6: invokestatic  #22                 // Method writeUnescapedEscapeChars:(ILjava/lang/StringBuilder;)V
       9: return

  private static void writeUnescapedEscapeChars(int, java.lang.StringBuilder);
    Code:
       0: iload_0
       1: ifle          17
       4: aload_1
       5: bipush        92
       7: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      10: pop
      11: iinc          0, -1
      14: goto          0
      17: return

  private static void writeArgOrDelimPair(java.lang.Object[], int, int, java.lang.StringBuilder);
    Code:
       0: iload_2
       1: iload_1
       2: if_icmpge     15
       5: aload_0
       6: iload_2
       7: aaload
       8: aload_3
       9: invokestatic  #11                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;)V
      12: goto          19
      15: aload_3
      16: invokestatic  #17                 // Method writeDelimPair:(Ljava/lang/StringBuilder;)V
      19: return

  static java.lang.String deepToString(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: instanceof    #24                 // class java/lang/String
      10: ifeq          18
      13: aload_0
      14: checkcast     #24                 // class java/lang/String
      17: areturn
      18: aload_0
      19: instanceof    #25                 // class java/lang/Integer
      22: ifeq          36
      25: aload_0
      26: checkcast     #25                 // class java/lang/Integer
      29: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      32: invokestatic  #27                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      35: areturn
      36: aload_0
      37: instanceof    #28                 // class java/lang/Long
      40: ifeq          54
      43: aload_0
      44: checkcast     #28                 // class java/lang/Long
      47: invokevirtual #29                 // Method java/lang/Long.longValue:()J
      50: invokestatic  #30                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      53: areturn
      54: aload_0
      55: instanceof    #31                 // class java/lang/Double
      58: ifeq          72
      61: aload_0
      62: checkcast     #31                 // class java/lang/Double
      65: invokevirtual #32                 // Method java/lang/Double.doubleValue:()D
      68: invokestatic  #33                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
      71: areturn
      72: aload_0
      73: instanceof    #34                 // class java/lang/Boolean
      76: ifeq          90
      79: aload_0
      80: checkcast     #34                 // class java/lang/Boolean
      83: invokevirtual #35                 // Method java/lang/Boolean.booleanValue:()Z
      86: invokestatic  #36                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      89: areturn
      90: aload_0
      91: instanceof    #37                 // class java/lang/Character
      94: ifeq          108
      97: aload_0
      98: checkcast     #37                 // class java/lang/Character
     101: invokevirtual #38                 // Method java/lang/Character.charValue:()C
     104: invokestatic  #39                 // Method java/lang/Character.toString:(C)Ljava/lang/String;
     107: areturn
     108: aload_0
     109: instanceof    #40                 // class java/lang/Short
     112: ifeq          126
     115: aload_0
     116: checkcast     #40                 // class java/lang/Short
     119: invokevirtual #41                 // Method java/lang/Short.shortValue:()S
     122: invokestatic  #42                 // Method java/lang/Short.toString:(S)Ljava/lang/String;
     125: areturn
     126: aload_0
     127: instanceof    #43                 // class java/lang/Float
     130: ifeq          144
     133: aload_0
     134: checkcast     #43                 // class java/lang/Float
     137: invokevirtual #44                 // Method java/lang/Float.floatValue:()F
     140: invokestatic  #45                 // Method java/lang/Float.toString:(F)Ljava/lang/String;
     143: areturn
     144: aload_0
     145: instanceof    #46                 // class java/lang/Byte
     148: ifeq          162
     151: aload_0
     152: checkcast     #46                 // class java/lang/Byte
     155: invokevirtual #47                 // Method java/lang/Byte.byteValue:()B
     158: invokestatic  #48                 // Method java/lang/Byte.toString:(B)Ljava/lang/String;
     161: areturn
     162: new           #5                  // class java/lang/StringBuilder
     165: dup
     166: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     169: astore_1
     170: aload_0
     171: aload_1
     172: invokestatic  #11                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;)V
     175: aload_1
     176: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     179: areturn

  static void recursiveDeepToString(java.lang.Object, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #49                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
       6: return

  private static void recursiveDeepToString(java.lang.Object, java.lang.StringBuilder, java.util.Set<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method appendSpecialTypes:(Ljava/lang/Object;Ljava/lang/StringBuilder;)Z
       5: ifeq          9
       8: return
       9: aload_0
      10: invokestatic  #51                 // Method isMaybeRecursive:(Ljava/lang/Object;)Z
      13: ifeq          25
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokestatic  #52                 // Method appendPotentiallyRecursiveValue:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
      22: goto          30
      25: aload_0
      26: aload_1
      27: invokestatic  #53                 // Method tryObjectToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;)V
      30: return

  private static boolean appendSpecialTypes(java.lang.Object, java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #54                 // Method org/apache/logging/log4j/util/StringBuilders.appendSpecificTypes:(Ljava/lang/StringBuilder;Ljava/lang/Object;)Z
       5: ifne          16
       8: aload_0
       9: aload_1
      10: invokestatic  #55                 // Method appendDate:(Ljava/lang/Object;Ljava/lang/StringBuilder;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private static boolean appendDate(java.lang.Object, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: instanceof    #56                 // class java/util/Date
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: checkcast     #56                 // class java/util/Date
      13: astore_2
      14: getstatic     #57                 // Field SIMPLE_DATE_FORMAT_REF:Ljava/lang/ThreadLocal;
      17: invokevirtual #58                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      20: checkcast     #59                 // class java/text/SimpleDateFormat
      23: astore_3
      24: aload_1
      25: aload_3
      26: aload_2
      27: invokevirtual #60                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      30: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: iconst_1
      35: ireturn

  private static boolean isMaybeRecursive(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #62                 // Method java/lang/Class.isArray:()Z
       7: ifne          24
      10: aload_0
      11: instanceof    #63                 // class java/util/Map
      14: ifne          24
      17: aload_0
      18: instanceof    #64                 // class java/util/Collection
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private static void appendPotentiallyRecursiveValue(java.lang.Object, java.lang.StringBuilder, java.util.Set<java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore_3
       5: aload_3
       6: invokevirtual #62                 // Method java/lang/Class.isArray:()Z
       9: ifeq          22
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokestatic  #65                 // Method appendArray:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;Ljava/lang/Class;)V
      19: goto          81
      22: aload_0
      23: instanceof    #63                 // class java/util/Map
      26: ifeq          38
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokestatic  #66                 // Method appendMap:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
      35: goto          81
      38: aload_0
      39: instanceof    #64                 // class java/util/Collection
      42: ifeq          54
      45: aload_0
      46: aload_1
      47: aload_2
      48: invokestatic  #67                 // Method appendCollection:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
      51: goto          81
      54: new           #68                 // class java/lang/IllegalArgumentException
      57: dup
      58: new           #5                  // class java/lang/StringBuilder
      61: dup
      62: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #69                 // String was expecting a container, found
      67: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_3
      71: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      74: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #71                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: return

  private static void appendArray(java.lang.Object, java.lang.StringBuilder, java.util.Set<java.lang.Object>, java.lang.Class<?>);
    Code:
       0: aload_3
       1: ldc           #72                 // class "[B"
       3: if_acmpne     24
       6: aload_1
       7: aload_0
       8: checkcast     #72                 // class "[B"
      11: checkcast     #72                 // class "[B"
      14: invokestatic  #73                 // Method java/util/Arrays.toString:([B)Ljava/lang/String;
      17: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: pop
      21: goto          334
      24: aload_3
      25: ldc           #74                 // class "[S"
      27: if_acmpne     48
      30: aload_1
      31: aload_0
      32: checkcast     #74                 // class "[S"
      35: checkcast     #74                 // class "[S"
      38: invokestatic  #75                 // Method java/util/Arrays.toString:([S)Ljava/lang/String;
      41: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: goto          334
      48: aload_3
      49: ldc           #76                 // class "[I"
      51: if_acmpne     72
      54: aload_1
      55: aload_0
      56: checkcast     #76                 // class "[I"
      59: checkcast     #76                 // class "[I"
      62: invokestatic  #77                 // Method java/util/Arrays.toString:([I)Ljava/lang/String;
      65: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: pop
      69: goto          334
      72: aload_3
      73: ldc           #78                 // class "[J"
      75: if_acmpne     96
      78: aload_1
      79: aload_0
      80: checkcast     #78                 // class "[J"
      83: checkcast     #78                 // class "[J"
      86: invokestatic  #79                 // Method java/util/Arrays.toString:([J)Ljava/lang/String;
      89: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: goto          334
      96: aload_3
      97: ldc           #80                 // class "[F"
      99: if_acmpne     120
     102: aload_1
     103: aload_0
     104: checkcast     #80                 // class "[F"
     107: checkcast     #80                 // class "[F"
     110: invokestatic  #81                 // Method java/util/Arrays.toString:([F)Ljava/lang/String;
     113: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: pop
     117: goto          334
     120: aload_3
     121: ldc           #82                 // class "[D"
     123: if_acmpne     144
     126: aload_1
     127: aload_0
     128: checkcast     #82                 // class "[D"
     131: checkcast     #82                 // class "[D"
     134: invokestatic  #83                 // Method java/util/Arrays.toString:([D)Ljava/lang/String;
     137: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: pop
     141: goto          334
     144: aload_3
     145: ldc           #84                 // class "[Z"
     147: if_acmpne     168
     150: aload_1
     151: aload_0
     152: checkcast     #84                 // class "[Z"
     155: checkcast     #84                 // class "[Z"
     158: invokestatic  #85                 // Method java/util/Arrays.toString:([Z)Ljava/lang/String;
     161: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: pop
     165: goto          334
     168: aload_3
     169: ldc           #86                 // class "[C"
     171: if_acmpne     192
     174: aload_1
     175: aload_0
     176: checkcast     #86                 // class "[C"
     179: checkcast     #86                 // class "[C"
     182: invokestatic  #87                 // Method java/util/Arrays.toString:([C)Ljava/lang/String;
     185: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: pop
     189: goto          334
     192: aload_2
     193: invokestatic  #88                 // Method getOrCreateDejaVu:(Ljava/util/Set;)Ljava/util/Set;
     196: astore        4
     198: aload         4
     200: aload_0
     201: invokeinterface #89,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     206: ifne          213
     209: iconst_1
     210: goto          214
     213: iconst_0
     214: istore        5
     216: iload         5
     218: ifeq          247
     221: aload_0
     222: invokestatic  #90                 // Method identityToString:(Ljava/lang/Object;)Ljava/lang/String;
     225: astore        6
     227: aload_1
     228: ldc           #91                 // String [...
     230: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: aload         6
     235: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: ldc           #92                 // String ...]
     240: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: pop
     244: goto          334
     247: aload_0
     248: checkcast     #93                 // class "[Ljava/lang/Object;"
     251: checkcast     #93                 // class "[Ljava/lang/Object;"
     254: astore        6
     256: aload_1
     257: bipush        91
     259: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     262: pop
     263: iconst_1
     264: istore        7
     266: aload         6
     268: astore        8
     270: aload         8
     272: arraylength
     273: istore        9
     275: iconst_0
     276: istore        10
     278: iload         10
     280: iload         9
     282: if_icmpge     327
     285: aload         8
     287: iload         10
     289: aaload
     290: astore        11
     292: iload         7
     294: ifeq          303
     297: iconst_0
     298: istore        7
     300: goto          310
     303: aload_1
     304: ldc           #94                 // String ,
     306: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     309: pop
     310: aload         11
     312: aload_1
     313: aload         4
     315: invokestatic  #95                 // Method cloneDejaVu:(Ljava/util/Set;)Ljava/util/Set;
     318: invokestatic  #49                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
     321: iinc          10, 1
     324: goto          278
     327: aload_1
     328: bipush        93
     330: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     333: pop
     334: return

  private static void appendMap(java.lang.Object, java.lang.StringBuilder, java.util.Set<java.lang.Object>);
    Code:
       0: aload_2
       1: invokestatic  #88                 // Method getOrCreateDejaVu:(Ljava/util/Set;)Ljava/util/Set;
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokeinterface #89,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: istore        4
      22: iload         4
      24: ifeq          53
      27: aload_0
      28: invokestatic  #90                 // Method identityToString:(Ljava/lang/Object;)Ljava/lang/String;
      31: astore        5
      33: aload_1
      34: ldc           #91                 // String [...
      36: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload         5
      41: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #92                 // String ...]
      46: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: pop
      50: goto          182
      53: aload_0
      54: checkcast     #63                 // class java/util/Map
      57: astore        5
      59: aload_1
      60: bipush        123
      62: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      65: pop
      66: iconst_1
      67: istore        6
      69: aload         5
      71: invokeinterface #96,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      76: invokeinterface #97,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      81: astore        7
      83: aload         7
      85: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          175
      93: aload         7
      95: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     100: astore        8
     102: aload         8
     104: checkcast     #100                // class java/util/Map$Entry
     107: astore        9
     109: iload         6
     111: ifeq          120
     114: iconst_0
     115: istore        6
     117: goto          127
     120: aload_1
     121: ldc           #94                 // String ,
     123: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: pop
     127: aload         9
     129: invokeinterface #101,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     134: astore        10
     136: aload         9
     138: invokeinterface #102,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     143: astore        11
     145: aload         10
     147: aload_1
     148: aload_3
     149: invokestatic  #95                 // Method cloneDejaVu:(Ljava/util/Set;)Ljava/util/Set;
     152: invokestatic  #49                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
     155: aload_1
     156: bipush        61
     158: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     161: pop
     162: aload         11
     164: aload_1
     165: aload_3
     166: invokestatic  #95                 // Method cloneDejaVu:(Ljava/util/Set;)Ljava/util/Set;
     169: invokestatic  #49                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
     172: goto          83
     175: aload_1
     176: bipush        125
     178: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     181: pop
     182: return

  private static void appendCollection(java.lang.Object, java.lang.StringBuilder, java.util.Set<java.lang.Object>);
    Code:
       0: aload_2
       1: invokestatic  #88                 // Method getOrCreateDejaVu:(Ljava/util/Set;)Ljava/util/Set;
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokeinterface #89,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: istore        4
      22: iload         4
      24: ifeq          53
      27: aload_0
      28: invokestatic  #90                 // Method identityToString:(Ljava/lang/Object;)Ljava/lang/String;
      31: astore        5
      33: aload_1
      34: ldc           #91                 // String [...
      36: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload         5
      41: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #92                 // String ...]
      46: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: pop
      50: goto          135
      53: aload_0
      54: checkcast     #64                 // class java/util/Collection
      57: astore        5
      59: aload_1
      60: bipush        91
      62: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      65: pop
      66: iconst_1
      67: istore        6
      69: aload         5
      71: invokeinterface #103,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      76: astore        7
      78: aload         7
      80: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      85: ifeq          128
      88: aload         7
      90: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      95: astore        8
      97: iload         6
      99: ifeq          108
     102: iconst_0
     103: istore        6
     105: goto          115
     108: aload_1
     109: ldc           #94                 // String ,
     111: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: pop
     115: aload         8
     117: aload_1
     118: aload_3
     119: invokestatic  #95                 // Method cloneDejaVu:(Ljava/util/Set;)Ljava/util/Set;
     122: invokestatic  #49                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
     125: goto          78
     128: aload_1
     129: bipush        93
     131: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     134: pop
     135: return

  private static java.util.Set<java.lang.Object> getOrCreateDejaVu(java.util.Set<java.lang.Object>);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: invokestatic  #104                // Method createDejaVu:()Ljava/util/Set;
       7: goto          11
      10: aload_0
      11: areturn

  private static java.util.Set<java.lang.Object> createDejaVu();
    Code:
       0: new           #105                // class java/util/IdentityHashMap
       3: dup
       4: invokespecial #106                // Method java/util/IdentityHashMap."<init>":()V
       7: invokestatic  #107                // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      10: areturn

  private static java.util.Set<java.lang.Object> cloneDejaVu(java.util.Set<java.lang.Object>);
    Code:
       0: invokestatic  #104                // Method createDejaVu:()Ljava/util/Set;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokeinterface #108,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      11: pop
      12: aload_1
      13: areturn

  private static void tryObjectToString(java.lang.Object, java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
       5: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       8: pop
       9: goto          19
      12: astore_2
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokestatic  #111                // Method handleErrorInObjectToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/lang/Throwable;)V
      19: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/Throwable

  private static void handleErrorInObjectToString(java.lang.Object, java.lang.StringBuilder, java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #112                // String [!!!
       3: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       6: pop
       7: aload_1
       8: aload_0
       9: invokestatic  #90                 // Method identityToString:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: pop
      16: aload_1
      17: ldc           #113                // String =>
      19: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: pop
      23: aload_2
      24: invokevirtual #114                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      27: astore_3
      28: aload_2
      29: invokevirtual #61                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #115                // Method java/lang/Class.getName:()Ljava/lang/String;
      35: astore        4
      37: aload_1
      38: aload         4
      40: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: aload         4
      46: aload_3
      47: invokevirtual #116                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifne          66
      53: aload_1
      54: ldc           #117                // String :
      56: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_1
      61: aload_3
      62: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_1
      67: ldc           #118                // String !!!]
      69: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: return

  static java.lang.String identityToString(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #5                  // class java/lang/StringBuilder
       9: dup
      10: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      13: aload_0
      14: invokevirtual #61                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokevirtual #115                // Method java/lang/Class.getName:()Ljava/lang/String;
      20: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: bipush        64
      25: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokestatic  #119                // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      32: invokestatic  #120                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      35: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn

  private static java.text.SimpleDateFormat lambda$static$0();
    Code:
       0: new           #59                 // class java/text/SimpleDateFormat
       3: dup
       4: ldc           #121                // String yyyy-MM-dd\'T\'HH:mm:ss.SSSZ
       6: invokespecial #122                // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
       9: areturn

  static {};
    Code:
       0: invokedynamic #123,  0            // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
       5: invokestatic  #124                // Method java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;
       8: putstatic     #57                 // Field SIMPLE_DATE_FORMAT_REF:Ljava/lang/ThreadLocal;
      11: return
}
