Compiled from "LoggerContext.java"
public interface org.apache.logging.log4j.spi.LoggerContext {
  public abstract java.lang.Object getExternalContext();

  public default java.lang.Object getObject(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public default java.lang.Object putObject(java.lang.String, java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public default java.lang.Object putObjectIfAbsent(java.lang.String, java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public default java.lang.Object removeObject(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public default boolean removeObject(java.lang.String, java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public abstract org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String);

  public default org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokevirtual #1                  // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: ifnull        14
      10: aload_2
      11: goto          18
      14: aload_1
      15: invokevirtual #2                  // Method java/lang/Class.getName:()Ljava/lang/String;
      18: invokeinterface #3,  2            // InterfaceMethod getLogger:(Ljava/lang/String;)Lorg/apache/logging/log4j/spi/ExtendedLogger;
      23: areturn

  public abstract org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String, org.apache.logging.log4j.message.MessageFactory);

  public default org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.Class<?>, org.apache.logging.log4j.message.MessageFactory);
    Code:
       0: aload_1
       1: invokevirtual #1                  // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: aload_3
       7: ifnull        14
      10: aload_3
      11: goto          18
      14: aload_1
      15: invokevirtual #2                  // Method java/lang/Class.getName:()Ljava/lang/String;
      18: aload_2
      19: invokeinterface #4,  3            // InterfaceMethod getLogger:(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)Lorg/apache/logging/log4j/spi/ExtendedLogger;
      24: areturn

  public abstract boolean hasLogger(java.lang.String);

  public abstract boolean hasLogger(java.lang.String, org.apache.logging.log4j.message.MessageFactory);

  public abstract boolean hasLogger(java.lang.String, java.lang.Class<? extends org.apache.logging.log4j.message.MessageFactory>);
}
