Compiled from "LoggerRegistry.java"
public class org.apache.logging.log4j.spi.LoggerRegistry<T extends org.apache.logging.log4j.spi.ExtendedLogger> {
  private static final java.lang.String DEFAULT_FACTORY_KEY;

  private final org.apache.logging.log4j.spi.LoggerRegistry$MapFactory<T> factory;

  private final java.util.Map<java.lang.String, java.util.Map<java.lang.String, T>> map;

  public org.apache.logging.log4j.spi.LoggerRegistry();
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/logging/log4j/spi/LoggerRegistry$ConcurrentMapFactory
       4: dup
       5: invokespecial #2                  // Method org/apache/logging/log4j/spi/LoggerRegistry$ConcurrentMapFactory."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lorg/apache/logging/log4j/spi/LoggerRegistry$MapFactory;)V
      11: return

  public org.apache.logging.log4j.spi.LoggerRegistry(org.apache.logging.log4j.spi.LoggerRegistry$MapFactory<T>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #5                  // String factory
       8: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #7                  // class org/apache/logging/log4j/spi/LoggerRegistry$MapFactory
      14: putfield      #8                  // Field factory:Lorg/apache/logging/log4j/spi/LoggerRegistry$MapFactory;
      17: aload_0
      18: aload_1
      19: invokeinterface #9,  1            // InterfaceMethod org/apache/logging/log4j/spi/LoggerRegistry$MapFactory.createOuterMap:()Ljava/util/Map;
      24: putfield      #10                 // Field map:Ljava/util/Map;
      27: return

  private static java.lang.String factoryClassKey(java.lang.Class<? extends org.apache.logging.log4j.message.MessageFactory>);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: getstatic     #11                 // Field DEFAULT_FACTORY_KEY:Ljava/lang/String;
       7: goto          14
      10: aload_0
      11: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: areturn

  private static java.lang.String factoryKey(org.apache.logging.log4j.message.MessageFactory);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: getstatic     #11                 // Field DEFAULT_FACTORY_KEY:Ljava/lang/String;
       7: goto          17
      10: aload_0
      11: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      17: areturn

  public T getLogger(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #11                 // Field DEFAULT_FACTORY_KEY:Ljava/lang/String;
       4: invokespecial #14                 // Method getOrCreateInnerMap:(Ljava/lang/String;)Ljava/util/Map;
       7: aload_1
       8: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #16                 // class org/apache/logging/log4j/spi/ExtendedLogger
      16: areturn

  public T getLogger(java.lang.String, org.apache.logging.log4j.message.MessageFactory);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #17                 // Method factoryKey:(Lorg/apache/logging/log4j/message/MessageFactory;)Ljava/lang/String;
       5: invokespecial #14                 // Method getOrCreateInnerMap:(Ljava/lang/String;)Ljava/util/Map;
       8: aload_1
       9: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #16                 // class org/apache/logging/log4j/spi/ExtendedLogger
      17: areturn

  public java.util.Collection<T> getLoggers();
    Code:
       0: aload_0
       1: new           #18                 // class java/util/ArrayList
       4: dup
       5: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
       8: invokevirtual #20                 // Method getLoggers:(Ljava/util/Collection;)Ljava/util/Collection;
      11: areturn

  public java.util.Collection<T> getLoggers(java.util.Collection<T>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field map:Ljava/util/Map;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #22,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          50
      24: aload_2
      25: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #25                 // class java/util/Map
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokeinterface #21,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      41: invokeinterface #26,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      46: pop
      47: goto          15
      50: aload_1
      51: areturn

  private java.util.Map<java.lang.String, T> getOrCreateInnerMap(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #25                 // class java/util/Map
      13: astore_2
      14: aload_2
      15: ifnonnull     40
      18: aload_0
      19: getfield      #8                  // Field factory:Lorg/apache/logging/log4j/spi/LoggerRegistry$MapFactory;
      22: invokeinterface #27,  1           // InterfaceMethod org/apache/logging/log4j/spi/LoggerRegistry$MapFactory.createInnerMap:()Ljava/util/Map;
      27: astore_2
      28: aload_0
      29: getfield      #10                 // Field map:Ljava/util/Map;
      32: aload_1
      33: aload_2
      34: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_2
      41: areturn

  public boolean hasLogger(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #11                 // Field DEFAULT_FACTORY_KEY:Ljava/lang/String;
       4: invokespecial #14                 // Method getOrCreateInnerMap:(Ljava/lang/String;)Ljava/util/Map;
       7: aload_1
       8: invokeinterface #29,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      13: ireturn

  public boolean hasLogger(java.lang.String, org.apache.logging.log4j.message.MessageFactory);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #17                 // Method factoryKey:(Lorg/apache/logging/log4j/message/MessageFactory;)Ljava/lang/String;
       5: invokespecial #14                 // Method getOrCreateInnerMap:(Ljava/lang/String;)Ljava/util/Map;
       8: aload_1
       9: invokeinterface #29,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ireturn

  public boolean hasLogger(java.lang.String, java.lang.Class<? extends org.apache.logging.log4j.message.MessageFactory>);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #30                 // Method factoryClassKey:(Ljava/lang/Class;)Ljava/lang/String;
       5: invokespecial #14                 // Method getOrCreateInnerMap:(Ljava/lang/String;)Ljava/util/Map;
       8: aload_1
       9: invokeinterface #29,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ireturn

  public void putIfAbsent(java.lang.String, org.apache.logging.log4j.message.MessageFactory, T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field factory:Lorg/apache/logging/log4j/spi/LoggerRegistry$MapFactory;
       4: aload_0
       5: aload_2
       6: invokestatic  #17                 // Method factoryKey:(Lorg/apache/logging/log4j/message/MessageFactory;)Ljava/lang/String;
       9: invokespecial #14                 // Method getOrCreateInnerMap:(Ljava/lang/String;)Ljava/util/Map;
      12: aload_1
      13: aload_3
      14: invokeinterface #31,  4           // InterfaceMethod org/apache/logging/log4j/spi/LoggerRegistry$MapFactory.putIfAbsent:(Ljava/util/Map;Ljava/lang/String;Lorg/apache/logging/log4j/spi/ExtendedLogger;)V
      19: return

  static {};
    Code:
       0: getstatic     #32                 // Field org/apache/logging/log4j/spi/AbstractLogger.DEFAULT_MESSAGE_FACTORY_CLASS:Ljava/lang/Class;
       3: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: putstatic     #11                 // Field DEFAULT_FACTORY_KEY:Ljava/lang/String;
       9: return
}
