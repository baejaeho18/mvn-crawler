Compiled from "InetAddressSet.java"
class org.eclipse.jetty.util.InetAddressSet$CidrInetRange extends org.eclipse.jetty.util.InetAddressSet$InetPattern {
  final byte[] _raw;

  final int _octets;

  final int _mask;

  final int _masked;

  public org.eclipse.jetty.util.InetAddressSet$CidrInetRange(java.lang.String, java.net.InetAddress, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/eclipse/jetty/util/InetAddressSet$InetPattern."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #2                  // Method java/net/InetAddress.getAddress:()[B
      10: putfield      #3                  // Field _raw:[B
      13: aload_0
      14: iload_3
      15: bipush        8
      17: idiv
      18: putfield      #4                  // Field _octets:I
      21: aload_0
      22: sipush        255
      25: sipush        255
      28: bipush        8
      30: iload_3
      31: bipush        8
      33: irem
      34: isub
      35: ishl
      36: iand
      37: putfield      #5                  // Field _mask:I
      40: aload_0
      41: aload_0
      42: getfield      #5                  // Field _mask:I
      45: ifne          52
      48: iconst_0
      49: goto          66
      52: aload_0
      53: getfield      #3                  // Field _raw:[B
      56: aload_0
      57: getfield      #4                  // Field _octets:I
      60: baload
      61: aload_0
      62: getfield      #5                  // Field _mask:I
      65: iand
      66: putfield      #6                  // Field _masked:I
      69: iload_3
      70: aload_0
      71: getfield      #3                  // Field _raw:[B
      74: arraylength
      75: bipush        8
      77: imul
      78: if_icmple     108
      81: new           #7                  // class java/lang/IllegalArgumentException
      84: dup
      85: new           #8                  // class java/lang/StringBuilder
      88: dup
      89: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #10                 // String CIDR too large:
      94: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_1
      98: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload_0
     109: getfield      #5                  // Field _mask:I
     112: ifeq          162
     115: sipush        255
     118: aload_0
     119: getfield      #3                  // Field _raw:[B
     122: aload_0
     123: getfield      #4                  // Field _octets:I
     126: baload
     127: iand
     128: aload_0
     129: getfield      #6                  // Field _masked:I
     132: if_icmpeq     162
     135: new           #7                  // class java/lang/IllegalArgumentException
     138: dup
     139: new           #8                  // class java/lang/StringBuilder
     142: dup
     143: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     146: ldc           #14                 // String CIDR bits non zero:
     148: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload_1
     152: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     161: athrow
     162: aload_0
     163: getfield      #4                  // Field _octets:I
     166: aload_0
     167: getfield      #5                  // Field _mask:I
     170: ifne          177
     173: iconst_0
     174: goto          178
     177: iconst_1
     178: iadd
     179: istore        4
     181: iload         4
     183: aload_0
     184: getfield      #3                  // Field _raw:[B
     187: arraylength
     188: if_icmpge     234
     191: aload_0
     192: getfield      #3                  // Field _raw:[B
     195: iload         4
     197: baload
     198: ifeq          228
     201: new           #7                  // class java/lang/IllegalArgumentException
     204: dup
     205: new           #8                  // class java/lang/StringBuilder
     208: dup
     209: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     212: ldc           #14                 // String CIDR bits non zero:
     214: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: aload_1
     218: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     221: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     224: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     227: athrow
     228: iinc          4, 1
     231: goto          181
     234: return

  public boolean test(java.net.InetAddress, byte[]);
    Code:
       0: aload_2
       1: arraylength
       2: aload_0
       3: getfield      #3                  // Field _raw:[B
       6: arraylength
       7: if_icmpeq     12
      10: iconst_0
      11: ireturn
      12: iconst_0
      13: istore_3
      14: iload_3
      15: aload_0
      16: getfield      #4                  // Field _octets:I
      19: if_icmpge     42
      22: aload_0
      23: getfield      #3                  // Field _raw:[B
      26: iload_3
      27: baload
      28: aload_2
      29: iload_3
      30: baload
      31: if_icmpeq     36
      34: iconst_0
      35: ireturn
      36: iinc          3, 1
      39: goto          14
      42: aload_0
      43: getfield      #5                  // Field _mask:I
      46: ifeq          67
      49: aload_2
      50: aload_0
      51: getfield      #4                  // Field _octets:I
      54: baload
      55: aload_0
      56: getfield      #5                  // Field _mask:I
      59: iand
      60: aload_0
      61: getfield      #6                  // Field _masked:I
      64: if_icmpne     71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ireturn
}
