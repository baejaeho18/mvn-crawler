Compiled from "MultiPartInputStreamParser.java"
public class org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart implements javax.servlet.http.Part {
  protected java.lang.String _name;

  protected java.lang.String _filename;

  protected java.io.File _file;

  protected java.io.OutputStream _out;

  protected org.eclipse.jetty.util.ByteArrayOutputStream2 _bout;

  protected java.lang.String _contentType;

  protected org.eclipse.jetty.util.MultiMap<java.lang.String> _headers;

  protected long _size;

  protected boolean _temporary;

  final org.eclipse.jetty.util.MultiPartInputStreamParser this$0;

  public org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart(org.eclipse.jetty.util.MultiPartInputStreamParser, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/MultiPartInputStreamParser;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: lconst_0
      11: putfield      #3                  // Field _size:J
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field _temporary:Z
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field _name:Ljava/lang/String;
      24: aload_0
      25: aload_3
      26: putfield      #6                  // Field _filename:Ljava/lang/String;
      29: return

  public java.lang.String toString();
    Code:
       0: ldc           #7                  // String Part{n=%s,fn=%s,ct=%s,s=%d,t=%b,f=%s}
       2: bipush        6
       4: anewarray     #8                  // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_0
      10: getfield      #5                  // Field _name:Ljava/lang/String;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #6                  // Field _filename:Ljava/lang/String;
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: getfield      #9                  // Field _contentType:Ljava/lang/String;
      27: aastore
      28: dup
      29: iconst_3
      30: aload_0
      31: getfield      #3                  // Field _size:J
      34: invokestatic  #10                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      37: aastore
      38: dup
      39: iconst_4
      40: aload_0
      41: getfield      #4                  // Field _temporary:Z
      44: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      47: aastore
      48: dup
      49: iconst_5
      50: aload_0
      51: getfield      #12                 // Field _file:Ljava/io/File;
      54: aastore
      55: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      58: areturn

  protected void setContentType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field _contentType:Ljava/lang/String;
       5: return

  protected void open() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/MultiPartInputStreamParser;
       4: invokevirtual #14                 // Method org/eclipse/jetty/util/MultiPartInputStreamParser.isWriteFilesWithFilenames:()Z
       7: ifeq          37
      10: aload_0
      11: getfield      #6                  // Field _filename:Ljava/lang/String;
      14: ifnull        37
      17: aload_0
      18: getfield      #6                  // Field _filename:Ljava/lang/String;
      21: invokevirtual #15                 // Method java/lang/String.trim:()Ljava/lang/String;
      24: invokevirtual #16                 // Method java/lang/String.length:()I
      27: ifle          37
      30: aload_0
      31: invokevirtual #17                 // Method createFile:()V
      34: goto          53
      37: aload_0
      38: aload_0
      39: new           #18                 // class org/eclipse/jetty/util/ByteArrayOutputStream2
      42: dup
      43: invokespecial #19                 // Method org/eclipse/jetty/util/ByteArrayOutputStream2."<init>":()V
      46: dup_x1
      47: putfield      #20                 // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      50: putfield      #21                 // Field _out:Ljava/io/OutputStream;
      53: return

  protected void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field _out:Ljava/io/OutputStream;
       4: invokevirtual #22                 // Method java/io/OutputStream.close:()V
       7: return

  protected void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/MultiPartInputStreamParser;
       4: getfield      #23                 // Field org/eclipse/jetty/util/MultiPartInputStreamParser._config:Ljavax/servlet/MultipartConfigElement;
       7: invokevirtual #24                 // Method javax/servlet/MultipartConfigElement.getMaxFileSize:()J
      10: lconst_0
      11: lcmp
      12: ifle          70
      15: aload_0
      16: getfield      #3                  // Field _size:J
      19: lconst_1
      20: ladd
      21: aload_0
      22: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/MultiPartInputStreamParser;
      25: getfield      #23                 // Field org/eclipse/jetty/util/MultiPartInputStreamParser._config:Ljavax/servlet/MultipartConfigElement;
      28: invokevirtual #24                 // Method javax/servlet/MultipartConfigElement.getMaxFileSize:()J
      31: lcmp
      32: ifle          70
      35: new           #25                 // class java/lang/IllegalStateException
      38: dup
      39: new           #26                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #28                 // String Multipart Mime part
      48: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #5                  // Field _name:Ljava/lang/String;
      55: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #30                 // String  exceeds max filesize
      60: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: aload_0
      71: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/MultiPartInputStreamParser;
      74: getfield      #23                 // Field org/eclipse/jetty/util/MultiPartInputStreamParser._config:Ljavax/servlet/MultipartConfigElement;
      77: invokevirtual #33                 // Method javax/servlet/MultipartConfigElement.getFileSizeThreshold:()I
      80: ifle          115
      83: aload_0
      84: getfield      #3                  // Field _size:J
      87: lconst_1
      88: ladd
      89: aload_0
      90: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/MultiPartInputStreamParser;
      93: getfield      #23                 // Field org/eclipse/jetty/util/MultiPartInputStreamParser._config:Ljavax/servlet/MultipartConfigElement;
      96: invokevirtual #33                 // Method javax/servlet/MultipartConfigElement.getFileSizeThreshold:()I
      99: i2l
     100: lcmp
     101: ifle          115
     104: aload_0
     105: getfield      #12                 // Field _file:Ljava/io/File;
     108: ifnonnull     115
     111: aload_0
     112: invokevirtual #17                 // Method createFile:()V
     115: aload_0
     116: getfield      #21                 // Field _out:Ljava/io/OutputStream;
     119: iload_1
     120: invokevirtual #34                 // Method java/io/OutputStream.write:(I)V
     123: aload_0
     124: dup
     125: getfield      #3                  // Field _size:J
     128: lconst_1
     129: ladd
     130: putfield      #3                  // Field _size:J
     133: return

  protected void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/MultiPartInputStreamParser;
       4: getfield      #23                 // Field org/eclipse/jetty/util/MultiPartInputStreamParser._config:Ljavax/servlet/MultipartConfigElement;
       7: invokevirtual #24                 // Method javax/servlet/MultipartConfigElement.getMaxFileSize:()J
      10: lconst_0
      11: lcmp
      12: ifle          71
      15: aload_0
      16: getfield      #3                  // Field _size:J
      19: iload_3
      20: i2l
      21: ladd
      22: aload_0
      23: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/MultiPartInputStreamParser;
      26: getfield      #23                 // Field org/eclipse/jetty/util/MultiPartInputStreamParser._config:Ljavax/servlet/MultipartConfigElement;
      29: invokevirtual #24                 // Method javax/servlet/MultipartConfigElement.getMaxFileSize:()J
      32: lcmp
      33: ifle          71
      36: new           #25                 // class java/lang/IllegalStateException
      39: dup
      40: new           #26                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #28                 // String Multipart Mime part
      49: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: getfield      #5                  // Field _name:Ljava/lang/String;
      56: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #30                 // String  exceeds max filesize
      61: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/MultiPartInputStreamParser;
      75: getfield      #23                 // Field org/eclipse/jetty/util/MultiPartInputStreamParser._config:Ljavax/servlet/MultipartConfigElement;
      78: invokevirtual #33                 // Method javax/servlet/MultipartConfigElement.getFileSizeThreshold:()I
      81: ifle          117
      84: aload_0
      85: getfield      #3                  // Field _size:J
      88: iload_3
      89: i2l
      90: ladd
      91: aload_0
      92: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/MultiPartInputStreamParser;
      95: getfield      #23                 // Field org/eclipse/jetty/util/MultiPartInputStreamParser._config:Ljavax/servlet/MultipartConfigElement;
      98: invokevirtual #33                 // Method javax/servlet/MultipartConfigElement.getFileSizeThreshold:()I
     101: i2l
     102: lcmp
     103: ifle          117
     106: aload_0
     107: getfield      #12                 // Field _file:Ljava/io/File;
     110: ifnonnull     117
     113: aload_0
     114: invokevirtual #17                 // Method createFile:()V
     117: aload_0
     118: getfield      #21                 // Field _out:Ljava/io/OutputStream;
     121: aload_1
     122: iload_2
     123: iload_3
     124: invokevirtual #35                 // Method java/io/OutputStream.write:([BII)V
     127: aload_0
     128: dup
     129: getfield      #3                  // Field _size:J
     132: iload_3
     133: i2l
     134: ladd
     135: putfield      #3                  // Field _size:J
     138: return

  protected void createFile() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/MultiPartInputStreamParser;
       4: getfield      #36                 // Field org/eclipse/jetty/util/MultiPartInputStreamParser._tmpDir:Ljava/io/File;
       7: invokevirtual #37                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      10: astore_1
      11: aload_1
      12: ldc           #38                 // String MultiPart
      14: ldc           #39                 // String
      16: iconst_0
      17: anewarray     #40                 // class java/nio/file/attribute/FileAttribute
      20: invokestatic  #41                 // Method java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      23: astore_2
      24: aload_0
      25: aload_2
      26: invokeinterface #42,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      31: putfield      #12                 // Field _file:Ljava/io/File;
      34: aload_2
      35: iconst_1
      36: anewarray     #43                 // class java/nio/file/OpenOption
      39: dup
      40: iconst_0
      41: getstatic     #44                 // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
      44: aastore
      45: invokestatic  #45                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
      48: astore_3
      49: new           #46                 // class java/io/BufferedOutputStream
      52: dup
      53: aload_3
      54: invokespecial #47                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
      57: astore        4
      59: aload_0
      60: getfield      #3                  // Field _size:J
      63: lconst_0
      64: lcmp
      65: ifle          98
      68: aload_0
      69: getfield      #21                 // Field _out:Ljava/io/OutputStream;
      72: ifnull        98
      75: aload_0
      76: getfield      #21                 // Field _out:Ljava/io/OutputStream;
      79: invokevirtual #48                 // Method java/io/OutputStream.flush:()V
      82: aload_0
      83: getfield      #20                 // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      86: aload         4
      88: invokevirtual #49                 // Method org/eclipse/jetty/util/ByteArrayOutputStream2.writeTo:(Ljava/io/OutputStream;)V
      91: aload_0
      92: getfield      #21                 // Field _out:Ljava/io/OutputStream;
      95: invokevirtual #22                 // Method java/io/OutputStream.close:()V
      98: aload_0
      99: aconst_null
     100: putfield      #20                 // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
     103: aload_0
     104: aload         4
     106: putfield      #21                 // Field _out:Ljava/io/OutputStream;
     109: return

  protected void setHeaders(org.eclipse.jetty.util.MultiMap<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field _headers:Lorg/eclipse/jetty/util/MultiMap;
       5: return

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _contentType:Ljava/lang/String;
       4: areturn

  public java.lang.String getHeader(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #50                 // Field _headers:Lorg/eclipse/jetty/util/MultiMap;
      10: aload_1
      11: getstatic     #51                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      14: invokevirtual #52                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      17: iconst_0
      18: invokevirtual #53                 // Method org/eclipse/jetty/util/MultiMap.getValue:(Ljava/lang/String;I)Ljava/lang/Object;
      21: checkcast     #54                 // class java/lang/String
      24: areturn

  public java.util.Collection<java.lang.String> getHeaderNames();
    Code:
       0: aload_0
       1: getfield      #50                 // Field _headers:Lorg/eclipse/jetty/util/MultiMap;
       4: invokevirtual #55                 // Method org/eclipse/jetty/util/MultiMap.keySet:()Ljava/util/Set;
       7: areturn

  public java.util.Collection<java.lang.String> getHeaders(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #50                 // Field _headers:Lorg/eclipse/jetty/util/MultiMap;
       4: aload_1
       5: invokevirtual #56                 // Method org/eclipse/jetty/util/MultiMap.getValues:(Ljava/lang/String;)Ljava/util/List;
       8: areturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field _file:Ljava/io/File;
       4: ifnull        26
       7: new           #57                 // class java/io/BufferedInputStream
      10: dup
      11: new           #58                 // class java/io/FileInputStream
      14: dup
      15: aload_0
      16: getfield      #12                 // Field _file:Ljava/io/File;
      19: invokespecial #59                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      22: invokespecial #60                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      25: areturn
      26: new           #61                 // class java/io/ByteArrayInputStream
      29: dup
      30: aload_0
      31: getfield      #20                 // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      34: invokevirtual #62                 // Method org/eclipse/jetty/util/ByteArrayOutputStream2.getBuf:()[B
      37: iconst_0
      38: aload_0
      39: getfield      #20                 // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      42: invokevirtual #63                 // Method org/eclipse/jetty/util/ByteArrayOutputStream2.size:()I
      45: invokespecial #64                 // Method java/io/ByteArrayInputStream."<init>":([BII)V
      48: areturn

  public java.lang.String getSubmittedFileName();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method getContentDispositionFilename:()Ljava/lang/String;
       4: areturn

  public byte[] getBytes();
    Code:
       0: aload_0
       1: getfield      #20                 // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
       4: ifnull        15
       7: aload_0
       8: getfield      #20                 // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      11: invokevirtual #66                 // Method org/eclipse/jetty/util/ByteArrayOutputStream2.toByteArray:()[B
      14: areturn
      15: aconst_null
      16: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _name:Ljava/lang/String;
       4: areturn

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _size:J
       4: lreturn

  public void write(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field _file:Ljava/io/File;
       4: ifnonnull     99
       7: aload_0
       8: iconst_0
       9: putfield      #4                  // Field _temporary:Z
      12: aload_0
      13: new           #67                 // class java/io/File
      16: dup
      17: aload_0
      18: getfield      #1                  // Field this$0:Lorg/eclipse/jetty/util/MultiPartInputStreamParser;
      21: getfield      #36                 // Field org/eclipse/jetty/util/MultiPartInputStreamParser._tmpDir:Ljava/io/File;
      24: aload_1
      25: invokespecial #68                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      28: putfield      #12                 // Field _file:Ljava/io/File;
      31: aconst_null
      32: astore_2
      33: new           #46                 // class java/io/BufferedOutputStream
      36: dup
      37: new           #69                 // class java/io/FileOutputStream
      40: dup
      41: aload_0
      42: getfield      #12                 // Field _file:Ljava/io/File;
      45: invokespecial #70                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      48: invokespecial #47                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
      51: astore_2
      52: aload_0
      53: getfield      #20                 // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      56: aload_2
      57: invokevirtual #49                 // Method org/eclipse/jetty/util/ByteArrayOutputStream2.writeTo:(Ljava/io/OutputStream;)V
      60: aload_2
      61: invokevirtual #71                 // Method java/io/BufferedOutputStream.flush:()V
      64: aload_2
      65: ifnull        72
      68: aload_2
      69: invokevirtual #72                 // Method java/io/BufferedOutputStream.close:()V
      72: aload_0
      73: aconst_null
      74: putfield      #20                 // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      77: goto          96
      80: astore_3
      81: aload_2
      82: ifnull        89
      85: aload_2
      86: invokevirtual #72                 // Method java/io/BufferedOutputStream.close:()V
      89: aload_0
      90: aconst_null
      91: putfield      #20                 // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      94: aload_3
      95: athrow
      96: goto          146
      99: aload_0
     100: iconst_0
     101: putfield      #4                  // Field _temporary:Z
     104: aload_0
     105: getfield      #12                 // Field _file:Ljava/io/File;
     108: invokevirtual #37                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
     111: astore_2
     112: aload_2
     113: aload_1
     114: invokeinterface #73,  2           // InterfaceMethod java/nio/file/Path.resolveSibling:(Ljava/lang/String;)Ljava/nio/file/Path;
     119: astore_3
     120: aload_2
     121: aload_3
     122: iconst_1
     123: anewarray     #74                 // class java/nio/file/CopyOption
     126: dup
     127: iconst_0
     128: getstatic     #75                 // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
     131: aastore
     132: invokestatic  #76                 // Method java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
     135: pop
     136: aload_0
     137: aload_3
     138: invokeinterface #42,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
     143: putfield      #12                 // Field _file:Ljava/io/File;
     146: return
    Exception table:
       from    to  target type
          33    64    80   any

  public void delete() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field _file:Ljava/io/File;
       4: ifnull        25
       7: aload_0
       8: getfield      #12                 // Field _file:Ljava/io/File;
      11: invokevirtual #77                 // Method java/io/File.exists:()Z
      14: ifeq          25
      17: aload_0
      18: getfield      #12                 // Field _file:Ljava/io/File;
      21: invokevirtual #78                 // Method java/io/File.delete:()Z
      24: pop
      25: return

  public void cleanUp() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _temporary:Z
       4: ifeq          32
       7: aload_0
       8: getfield      #12                 // Field _file:Ljava/io/File;
      11: ifnull        32
      14: aload_0
      15: getfield      #12                 // Field _file:Ljava/io/File;
      18: invokevirtual #77                 // Method java/io/File.exists:()Z
      21: ifeq          32
      24: aload_0
      25: getfield      #12                 // Field _file:Ljava/io/File;
      28: invokevirtual #78                 // Method java/io/File.delete:()Z
      31: pop
      32: return

  public java.io.File getFile();
    Code:
       0: aload_0
       1: getfield      #12                 // Field _file:Ljava/io/File;
       4: areturn

  public java.lang.String getContentDispositionFilename();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _filename:Ljava/lang/String;
       4: areturn
}
