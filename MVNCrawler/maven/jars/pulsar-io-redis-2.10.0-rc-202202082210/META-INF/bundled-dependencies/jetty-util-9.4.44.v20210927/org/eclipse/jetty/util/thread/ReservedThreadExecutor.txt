Compiled from "ReservedThreadExecutor.java"
public class org.eclipse.jetty.util.thread.ReservedThreadExecutor extends org.eclipse.jetty.util.component.AbstractLifeCycle implements org.eclipse.jetty.util.thread.TryExecutor,org.eclipse.jetty.util.component.Dumpable {
  private static final org.eclipse.jetty.util.log.Logger LOG;

  private static final long DEFAULT_IDLE_TIMEOUT;

  private static final java.lang.Runnable STOP;

  private final java.util.concurrent.Executor _executor;

  private final int _capacity;

  private final java.util.Set<org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread> _threads;

  private final java.util.concurrent.SynchronousQueue<java.lang.Runnable> _queue;

  private final org.eclipse.jetty.util.AtomicBiInteger _count;

  private final java.util.concurrent.atomic.AtomicLong _lastEmptyTime;

  private org.eclipse.jetty.util.thread.ThreadPoolBudget$Lease _lease;

  private long _idleTimeNanos;

  public org.eclipse.jetty.util.thread.ReservedThreadExecutor(java.util.concurrent.Executor, int);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/eclipse/jetty/util/component/AbstractLifeCycle."<init>":()V
       4: aload_0
       5: invokestatic  #10                 // Method java/util/concurrent/ConcurrentHashMap.newKeySet:()Ljava/util/concurrent/ConcurrentHashMap$KeySetView;
       8: putfield      #1                  // Field _threads:Ljava/util/Set;
      11: aload_0
      12: new           #11                 // class java/util/concurrent/SynchronousQueue
      15: dup
      16: iconst_0
      17: invokespecial #12                 // Method java/util/concurrent/SynchronousQueue."<init>":(Z)V
      20: putfield      #5                  // Field _queue:Ljava/util/concurrent/SynchronousQueue;
      23: aload_0
      24: new           #13                 // class org/eclipse/jetty/util/AtomicBiInteger
      27: dup
      28: invokespecial #14                 // Method org/eclipse/jetty/util/AtomicBiInteger."<init>":()V
      31: putfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
      34: aload_0
      35: new           #15                 // class java/util/concurrent/atomic/AtomicLong
      38: dup
      39: invokestatic  #16                 // Method java/lang/System.nanoTime:()J
      42: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      45: putfield      #2                  // Field _lastEmptyTime:Ljava/util/concurrent/atomic/AtomicLong;
      48: aload_0
      49: getstatic     #18                 // Field DEFAULT_IDLE_TIMEOUT:J
      52: putfield      #6                  // Field _idleTimeNanos:J
      55: aload_0
      56: aload_1
      57: putfield      #19                 // Field _executor:Ljava/util/concurrent/Executor;
      60: aload_0
      61: aload_1
      62: iload_2
      63: invokestatic  #20                 // Method reservedThreads:(Ljava/util/concurrent/Executor;I)I
      66: putfield      #3                  // Field _capacity:I
      69: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      72: invokeinterface #21,  1           // InterfaceMethod org/eclipse/jetty/util/log/Logger.isDebugEnabled:()Z
      77: ifeq          98
      80: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      83: ldc           #22                 // String {}
      85: iconst_1
      86: anewarray     #23                 // class java/lang/Object
      89: dup
      90: iconst_0
      91: aload_0
      92: aastore
      93: invokeinterface #24,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      98: return

  private static int reservedThreads(java.util.concurrent.Executor, int);
    Code:
       0: iload_1
       1: iflt          6
       4: iload_1
       5: ireturn
       6: invokestatic  #25                 // Method org/eclipse/jetty/util/ProcessorUtils.availableProcessors:()I
       9: istore_2
      10: aload_0
      11: instanceof    #26                 // class org/eclipse/jetty/util/thread/ThreadPool$SizedThreadPool
      14: ifeq          40
      17: aload_0
      18: checkcast     #26                 // class org/eclipse/jetty/util/thread/ThreadPool$SizedThreadPool
      21: invokeinterface #27,  1           // InterfaceMethod org/eclipse/jetty/util/thread/ThreadPool$SizedThreadPool.getMaxThreads:()I
      26: istore_3
      27: iconst_1
      28: iload_2
      29: iload_3
      30: bipush        10
      32: idiv
      33: invokestatic  #28                 // Method java/lang/Math.min:(II)I
      36: invokestatic  #29                 // Method java/lang/Math.max:(II)I
      39: ireturn
      40: iload_2
      41: ireturn

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _executor:Ljava/util/concurrent/Executor;
       4: areturn

  public int getCapacity();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _capacity:I
       4: ireturn

  public int getAvailable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #30                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:()I
       7: ireturn

  public int getPending();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #31                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
       7: ireturn

  public long getIdleTimeoutMs();
    Code:
       0: getstatic     #32                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       3: aload_0
       4: getfield      #6                  // Field _idleTimeNanos:J
       7: invokevirtual #33                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      10: lreturn

  public void setIdleTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method isRunning:()Z
       4: ifeq          15
       7: new           #35                 // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: aload_0
      16: lload_1
      17: lconst_0
      18: lcmp
      19: ifle          26
      22: aload_3
      23: ifnonnull     32
      26: getstatic     #18                 // Field DEFAULT_IDLE_TIMEOUT:J
      29: goto          37
      32: aload_3
      33: lload_1
      34: invokevirtual #37                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      37: putfield      #6                  // Field _idleTimeNanos:J
      40: return

  public void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #38                 // Method getExecutor:()Ljava/util/concurrent/Executor;
       5: aload_0
       6: aload_0
       7: getfield      #3                  // Field _capacity:I
      10: invokestatic  #39                 // Method org/eclipse/jetty/util/thread/ThreadPoolBudget.leaseFrom:(Ljava/util/concurrent/Executor;Ljava/lang/Object;I)Lorg/eclipse/jetty/util/thread/ThreadPoolBudget$Lease;
      13: putfield      #40                 // Field _lease:Lorg/eclipse/jetty/util/thread/ThreadPoolBudget$Lease;
      16: aload_0
      17: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
      20: iconst_0
      21: iconst_0
      22: invokevirtual #41                 // Method org/eclipse/jetty/util/AtomicBiInteger.set:(II)V
      25: aload_0
      26: invokespecial #42                 // Method org/eclipse/jetty/util/component/AbstractLifeCycle.doStart:()V
      29: return

  public void doStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #40                 // Field _lease:Lorg/eclipse/jetty/util/thread/ThreadPoolBudget$Lease;
       4: ifnull        16
       7: aload_0
       8: getfield      #40                 // Field _lease:Lorg/eclipse/jetty/util/thread/ThreadPoolBudget$Lease;
      11: invokeinterface #43,  1           // InterfaceMethod org/eclipse/jetty/util/thread/ThreadPoolBudget$Lease.close:()V
      16: aload_0
      17: invokespecial #44                 // Method org/eclipse/jetty/util/component/AbstractLifeCycle.doStop:()V
      20: aload_0
      21: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
      24: iconst_m1
      25: invokevirtual #45                 // Method org/eclipse/jetty/util/AtomicBiInteger.getAndSetLo:(I)I
      28: istore_1
      29: iconst_0
      30: istore_2
      31: iload_2
      32: iload_1
      33: if_icmpge     56
      36: invokestatic  #46                 // Method java/lang/Thread.yield:()V
      39: aload_0
      40: getfield      #5                  // Field _queue:Ljava/util/concurrent/SynchronousQueue;
      43: getstatic     #4                  // Field STOP:Ljava/lang/Runnable;
      46: invokevirtual #47                 // Method java/util/concurrent/SynchronousQueue.offer:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          2, 1
      53: goto          31
      56: aload_0
      57: getfield      #1                  // Field _threads:Ljava/util/Set;
      60: invokeinterface #48,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      65: invokedynamic #49,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      70: invokeinterface #50,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      75: invokedynamic #51,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      80: invokeinterface #52,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      85: invokedynamic #53,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      90: invokeinterface #50,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      95: invokedynamic #54,  0             // InvokeDynamic #3:accept:()Ljava/util/function/Consumer;
     100: invokeinterface #55,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     105: aload_0
     106: getfield      #1                  // Field _threads:Ljava/util/Set;
     109: invokeinterface #56,  1           // InterfaceMethod java/util/Set.clear:()V
     114: aload_0
     115: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
     118: iconst_0
     119: invokevirtual #57                 // Method org/eclipse/jetty/util/AtomicBiInteger.getAndSetHi:(I)I
     122: pop
     123: return

  public void execute(java.lang.Runnable) throws java.util.concurrent.RejectedExecutionException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field _executor:Ljava/util/concurrent/Executor;
       4: aload_1
       5: invokeinterface #58,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      10: return

  public boolean tryExecute(java.lang.Runnable);
    Code:
       0: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
       3: invokeinterface #21,  1           // InterfaceMethod org/eclipse/jetty/util/log/Logger.isDebugEnabled:()Z
       8: ifeq          33
      11: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      14: ldc           #59                 // String {} tryExecute {}
      16: iconst_2
      17: anewarray     #23                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: aastore
      24: dup
      25: iconst_1
      26: aload_1
      27: aastore
      28: invokeinterface #24,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      33: aload_1
      34: ifnonnull     39
      37: iconst_0
      38: ireturn
      39: aload_0
      40: getfield      #5                  // Field _queue:Ljava/util/concurrent/SynchronousQueue;
      43: aload_1
      44: invokevirtual #47                 // Method java/util/concurrent/SynchronousQueue.offer:(Ljava/lang/Object;)Z
      47: istore_2
      48: aload_0
      49: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
      52: invokevirtual #30                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:()I
      55: istore_3
      56: iload_2
      57: ifeq          90
      60: iload_3
      61: ifle          90
      64: aload_0
      65: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
      68: iload_3
      69: iinc          3, -1
      72: iload_3
      73: invokevirtual #60                 // Method org/eclipse/jetty/util/AtomicBiInteger.compareAndSetLo:(II)Z
      76: ifne          90
      79: aload_0
      80: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
      83: invokevirtual #30                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:()I
      86: istore_3
      87: goto          56
      90: iload_3
      91: ifne          105
      94: aload_1
      95: getstatic     #4                  // Field STOP:Ljava/lang/Runnable;
      98: if_acmpeq     105
     101: aload_0
     102: invokespecial #61                 // Method startReservedThread:()V
     105: iload_2
     106: ireturn

  private void startReservedThread();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #62                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_1
       8: lload_1
       9: invokestatic  #63                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: istore_3
      13: lload_1
      14: invokestatic  #64                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      17: istore        4
      19: iload         4
      21: iflt          35
      24: iload_3
      25: iload         4
      27: iadd
      28: aload_0
      29: getfield      #3                  // Field _capacity:I
      32: if_icmplt     36
      35: return
      36: iload         4
      38: ifne          51
      41: aload_0
      42: getfield      #2                  // Field _lastEmptyTime:Ljava/util/concurrent/atomic/AtomicLong;
      45: invokestatic  #16                 // Method java/lang/System.nanoTime:()J
      48: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      51: aload_0
      52: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
      55: lload_1
      56: iload_3
      57: iconst_1
      58: iadd
      59: iload         4
      61: invokevirtual #66                 // Method org/eclipse/jetty/util/AtomicBiInteger.compareAndSet:(JII)Z
      64: ifne          70
      67: goto          0
      70: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      73: invokeinterface #21,  1           // InterfaceMethod org/eclipse/jetty/util/log/Logger.isDebugEnabled:()Z
      78: ifeq          108
      81: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      84: ldc           #67                 // String {} startReservedThread p={}
      86: iconst_2
      87: anewarray     #23                 // class java/lang/Object
      90: dup
      91: iconst_0
      92: aload_0
      93: aastore
      94: dup
      95: iconst_1
      96: iload_3
      97: iconst_1
      98: iadd
      99: invokestatic  #68                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     102: aastore
     103: invokeinterface #24,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     108: new           #69                 // class org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread
     111: dup
     112: aload_0
     113: aconst_null
     114: invokespecial #70                 // Method org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread."<init>":(Lorg/eclipse/jetty/util/thread/ReservedThreadExecutor;Lorg/eclipse/jetty/util/thread/ReservedThreadExecutor$1;)V
     117: astore        5
     119: aload_0
     120: getfield      #1                  // Field _threads:Ljava/util/Set;
     123: aload         5
     125: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     130: pop
     131: aload_0
     132: getfield      #19                 // Field _executor:Ljava/util/concurrent/Executor;
     135: aload         5
     137: invokeinterface #58,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     142: goto          166
     145: astore        5
     147: aload_0
     148: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
     151: iconst_m1
     152: iconst_0
     153: invokevirtual #73                 // Method org/eclipse/jetty/util/AtomicBiInteger.add:(II)V
     156: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
     159: aload         5
     161: invokeinterface #74,  2           // InterfaceMethod org/eclipse/jetty/util/log/Logger.ignore:(Ljava/lang/Throwable;)V
     166: return
    Exception table:
       from    to  target type
         108   142   145   Class java/lang/Throwable

  public void dump(java.lang.Appendable, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: iconst_1
       4: anewarray     #23                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: new           #75                 // class org/eclipse/jetty/util/component/DumpableCollection
      12: dup
      13: ldc           #76                 // String threads
      15: aload_0
      16: getfield      #1                  // Field _threads:Ljava/util/Set;
      19: invokeinterface #48,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      24: invokedynamic #77,  0             // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
      29: invokeinterface #50,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      34: invokestatic  #78                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      37: invokeinterface #79,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      42: checkcast     #80                 // class java/util/Collection
      45: invokespecial #81                 // Method org/eclipse/jetty/util/component/DumpableCollection."<init>":(Ljava/lang/String;Ljava/util/Collection;)V
      48: aastore
      49: invokestatic  #82                 // InterfaceMethod org/eclipse/jetty/util/component/Dumpable.dumpObjects:(Ljava/lang/Appendable;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)V
      52: return

  public java.lang.String toString();
    Code:
       0: ldc           #83                 // String %s@%x{reserved=%d/%d,pending=%d}
       2: iconst_5
       3: anewarray     #23                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #84                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokevirtual #85                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: invokevirtual #86                 // Method java/lang/Object.hashCode:()I
      22: invokestatic  #68                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: dup
      27: iconst_2
      28: aload_0
      29: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
      32: invokevirtual #30                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:()I
      35: invokestatic  #68                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: dup
      40: iconst_3
      41: aload_0
      42: getfield      #3                  // Field _capacity:I
      45: invokestatic  #68                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: aastore
      49: dup
      50: iconst_4
      51: aload_0
      52: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
      55: invokevirtual #31                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
      58: invokestatic  #68                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: aastore
      62: invokestatic  #87                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      65: areturn

  private static boolean lambda$dump$2(java.lang.Object);
    Code:
       0: aload_0
       1: checkcast     #69                 // class org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread
       4: invokestatic  #88                 // Method org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread.access$900:(Lorg/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread;)Z
       7: ireturn

  private static java.lang.Thread lambda$doStop$1(org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread);
    Code:
       0: aload_0
       1: invokestatic  #89                 // Method org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread.access$1000:(Lorg/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread;)Ljava/lang/Thread;
       4: areturn

  private static boolean lambda$doStop$0(java.lang.Object);
    Code:
       0: aload_0
       1: checkcast     #69                 // class org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread
       4: invokestatic  #88                 // Method org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread.access$900:(Lorg/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread;)Z
       7: ireturn

  static org.eclipse.jetty.util.log.Logger access$100();
    Code:
       0: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
       3: areturn

  static org.eclipse.jetty.util.AtomicBiInteger access$200(org.eclipse.jetty.util.thread.ReservedThreadExecutor);
    Code:
       0: aload_0
       1: getfield      #7                  // Field _count:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: areturn

  static long access$300(org.eclipse.jetty.util.thread.ReservedThreadExecutor);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _idleTimeNanos:J
       4: lreturn

  static java.util.concurrent.SynchronousQueue access$400(org.eclipse.jetty.util.thread.ReservedThreadExecutor);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _queue:Ljava/util/concurrent/SynchronousQueue;
       4: areturn

  static java.lang.Runnable access$500();
    Code:
       0: getstatic     #4                  // Field STOP:Ljava/lang/Runnable;
       3: areturn

  static int access$600(org.eclipse.jetty.util.thread.ReservedThreadExecutor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _capacity:I
       4: ireturn

  static java.util.concurrent.atomic.AtomicLong access$700(org.eclipse.jetty.util.thread.ReservedThreadExecutor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _lastEmptyTime:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.util.Set access$800(org.eclipse.jetty.util.thread.ReservedThreadExecutor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _threads:Ljava/util/Set;
       4: areturn

  static {};
    Code:
       0: ldc           #90                 // class org/eclipse/jetty/util/thread/ReservedThreadExecutor
       2: invokestatic  #91                 // Method org/eclipse/jetty/util/log/Log.getLogger:(Ljava/lang/Class;)Lorg/eclipse/jetty/util/log/Logger;
       5: putstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
       8: getstatic     #92                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      11: lconst_1
      12: invokevirtual #37                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      15: putstatic     #18                 // Field DEFAULT_IDLE_TIMEOUT:J
      18: new           #93                 // class org/eclipse/jetty/util/thread/ReservedThreadExecutor$1
      21: dup
      22: invokespecial #94                 // Method org/eclipse/jetty/util/thread/ReservedThreadExecutor$1."<init>":()V
      25: putstatic     #4                  // Field STOP:Ljava/lang/Runnable;
      28: return
}
