Compiled from "ByteArrayISO8859Writer.java"
public class org.eclipse.jetty.util.ByteArrayISO8859Writer extends java.io.Writer {
  private byte[] _buf;

  private int _size;

  private org.eclipse.jetty.util.ByteArrayOutputStream2 _bout;

  private java.io.OutputStreamWriter _writer;

  private boolean _fixed;

  public org.eclipse.jetty.util.ByteArrayISO8859Writer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/Writer."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field _writer:Ljava/io/OutputStreamWriter;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field _fixed:Z
      19: aload_0
      20: sipush        2048
      23: newarray       byte
      25: putfield      #5                  // Field _buf:[B
      28: return

  public org.eclipse.jetty.util.ByteArrayISO8859Writer(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/Writer."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field _writer:Ljava/io/OutputStreamWriter;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field _fixed:Z
      19: aload_0
      20: iload_1
      21: newarray       byte
      23: putfield      #5                  // Field _buf:[B
      26: return

  public org.eclipse.jetty.util.ByteArrayISO8859Writer(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/Writer."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field _writer:Ljava/io/OutputStreamWriter;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field _fixed:Z
      19: aload_0
      20: aload_1
      21: putfield      #5                  // Field _buf:[B
      24: aload_0
      25: iconst_1
      26: putfield      #4                  // Field _fixed:Z
      29: return

  public java.lang.Object getLock();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lock:Ljava/lang/Object;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _size:I
       4: ireturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _buf:[B
       4: arraylength
       5: ireturn

  public int spareCapacity();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _buf:[B
       4: arraylength
       5: aload_0
       6: getfield      #7                  // Field _size:I
       9: isub
      10: ireturn

  public void setLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field _size:I
       5: return

  public byte[] getBuf();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _buf:[B
       4: areturn

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field _buf:[B
       5: iconst_0
       6: aload_0
       7: getfield      #7                  // Field _size:I
      10: invokevirtual #8                  // Method java/io/OutputStream.write:([BII)V
      13: return

  public void write(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #9                  // Method ensureSpareCapacity:(I)V
       5: iload_1
       6: iflt          36
       9: iload_1
      10: bipush        127
      12: if_icmpgt     36
      15: aload_0
      16: getfield      #5                  // Field _buf:[B
      19: aload_0
      20: dup
      21: getfield      #7                  // Field _size:I
      24: dup_x1
      25: iconst_1
      26: iadd
      27: putfield      #7                  // Field _size:I
      30: iload_1
      31: i2b
      32: bastore
      33: goto          51
      36: iconst_1
      37: newarray       char
      39: dup
      40: iconst_0
      41: iload_1
      42: castore
      43: astore_2
      44: aload_0
      45: aload_2
      46: iconst_0
      47: iconst_1
      48: invokespecial #10                 // Method writeEncoded:([CII)V
      51: return

  public void write(char[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: invokevirtual #9                  // Method ensureSpareCapacity:(I)V
       6: iconst_0
       7: istore_2
       8: iload_2
       9: aload_1
      10: arraylength
      11: if_icmpge     68
      14: aload_1
      15: iload_2
      16: caload
      17: istore_3
      18: iload_3
      19: iflt          49
      22: iload_3
      23: bipush        127
      25: if_icmpgt     49
      28: aload_0
      29: getfield      #5                  // Field _buf:[B
      32: aload_0
      33: dup
      34: getfield      #7                  // Field _size:I
      37: dup_x1
      38: iconst_1
      39: iadd
      40: putfield      #7                  // Field _size:I
      43: iload_3
      44: i2b
      45: bastore
      46: goto          62
      49: aload_0
      50: aload_1
      51: iload_2
      52: aload_1
      53: arraylength
      54: iload_2
      55: isub
      56: invokespecial #10                 // Method writeEncoded:([CII)V
      59: goto          68
      62: iinc          2, 1
      65: goto          8
      68: return

  public void write(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #9                  // Method ensureSpareCapacity:(I)V
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     78
      14: aload_1
      15: iload_2
      16: iload         4
      18: iadd
      19: caload
      20: istore        5
      22: iload         5
      24: iflt          56
      27: iload         5
      29: bipush        127
      31: if_icmpgt     56
      34: aload_0
      35: getfield      #5                  // Field _buf:[B
      38: aload_0
      39: dup
      40: getfield      #7                  // Field _size:I
      43: dup_x1
      44: iconst_1
      45: iadd
      46: putfield      #7                  // Field _size:I
      49: iload         5
      51: i2b
      52: bastore
      53: goto          72
      56: aload_0
      57: aload_1
      58: iload_2
      59: iload         4
      61: iadd
      62: iload_3
      63: iload         4
      65: isub
      66: invokespecial #10                 // Method writeEncoded:([CII)V
      69: goto          78
      72: iinc          4, 1
      75: goto          8
      78: return

  public void write(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     13
       4: aload_0
       5: ldc           #11                 // String null
       7: iconst_0
       8: iconst_4
       9: invokevirtual #12                 // Method write:(Ljava/lang/String;II)V
      12: return
      13: aload_1
      14: invokevirtual #13                 // Method java/lang/String.length:()I
      17: istore_2
      18: aload_0
      19: iload_2
      20: invokevirtual #9                  // Method ensureSpareCapacity:(I)V
      23: iconst_0
      24: istore_3
      25: iload_3
      26: iload_2
      27: if_icmpge     92
      30: aload_1
      31: iload_3
      32: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
      35: istore        4
      37: iload         4
      39: iflt          71
      42: iload         4
      44: bipush        127
      46: if_icmpgt     71
      49: aload_0
      50: getfield      #5                  // Field _buf:[B
      53: aload_0
      54: dup
      55: getfield      #7                  // Field _size:I
      58: dup_x1
      59: iconst_1
      60: iadd
      61: putfield      #7                  // Field _size:I
      64: iload         4
      66: i2b
      67: bastore
      68: goto          86
      71: aload_0
      72: aload_1
      73: invokevirtual #15                 // Method java/lang/String.toCharArray:()[C
      76: iload_3
      77: iload_2
      78: iload_3
      79: isub
      80: invokespecial #10                 // Method writeEncoded:([CII)V
      83: goto          92
      86: iinc          3, 1
      89: goto          25
      92: return

  public void write(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #9                  // Method ensureSpareCapacity:(I)V
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     83
      14: aload_1
      15: iload_2
      16: iload         4
      18: iadd
      19: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
      22: istore        5
      24: iload         5
      26: iflt          58
      29: iload         5
      31: bipush        127
      33: if_icmpgt     58
      36: aload_0
      37: getfield      #5                  // Field _buf:[B
      40: aload_0
      41: dup
      42: getfield      #7                  // Field _size:I
      45: dup_x1
      46: iconst_1
      47: iadd
      48: putfield      #7                  // Field _size:I
      51: iload         5
      53: i2b
      54: bastore
      55: goto          77
      58: aload_0
      59: aload_1
      60: invokevirtual #15                 // Method java/lang/String.toCharArray:()[C
      63: iload_2
      64: iload         4
      66: iadd
      67: iload_3
      68: iload         4
      70: isub
      71: invokespecial #10                 // Method writeEncoded:([CII)V
      74: goto          83
      77: iinc          4, 1
      80: goto          8
      83: return

  private void writeEncoded(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
       4: ifnonnull     42
       7: aload_0
       8: new           #16                 // class org/eclipse/jetty/util/ByteArrayOutputStream2
      11: dup
      12: iconst_2
      13: iload_3
      14: imul
      15: invokespecial #17                 // Method org/eclipse/jetty/util/ByteArrayOutputStream2."<init>":(I)V
      18: putfield      #2                  // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      21: aload_0
      22: new           #18                 // class java/io/OutputStreamWriter
      25: dup
      26: aload_0
      27: getfield      #2                  // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      30: getstatic     #19                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
      33: invokespecial #20                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      36: putfield      #3                  // Field _writer:Ljava/io/OutputStreamWriter;
      39: goto          49
      42: aload_0
      43: getfield      #2                  // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      46: invokevirtual #21                 // Method org/eclipse/jetty/util/ByteArrayOutputStream2.reset:()V
      49: aload_0
      50: getfield      #3                  // Field _writer:Ljava/io/OutputStreamWriter;
      53: aload_1
      54: iload_2
      55: iload_3
      56: invokevirtual #22                 // Method java/io/OutputStreamWriter.write:([CII)V
      59: aload_0
      60: getfield      #3                  // Field _writer:Ljava/io/OutputStreamWriter;
      63: invokevirtual #23                 // Method java/io/OutputStreamWriter.flush:()V
      66: aload_0
      67: aload_0
      68: getfield      #2                  // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      71: invokevirtual #24                 // Method org/eclipse/jetty/util/ByteArrayOutputStream2.getCount:()I
      74: invokevirtual #9                  // Method ensureSpareCapacity:(I)V
      77: aload_0
      78: getfield      #2                  // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      81: invokevirtual #25                 // Method org/eclipse/jetty/util/ByteArrayOutputStream2.getBuf:()[B
      84: iconst_0
      85: aload_0
      86: getfield      #5                  // Field _buf:[B
      89: aload_0
      90: getfield      #7                  // Field _size:I
      93: aload_0
      94: getfield      #2                  // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
      97: invokevirtual #24                 // Method org/eclipse/jetty/util/ByteArrayOutputStream2.getCount:()I
     100: invokestatic  #26                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     103: aload_0
     104: dup
     105: getfield      #7                  // Field _size:I
     108: aload_0
     109: getfield      #2                  // Field _bout:Lorg/eclipse/jetty/util/ByteArrayOutputStream2;
     112: invokevirtual #24                 // Method org/eclipse/jetty/util/ByteArrayOutputStream2.getCount:()I
     115: iadd
     116: putfield      #7                  // Field _size:I
     119: return

  public void flush();
    Code:
       0: return

  public void resetWriter();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #7                  // Field _size:I
       5: return

  public void close();
    Code:
       0: return

  public void destroy();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #5                  // Field _buf:[B
       5: return

  public void ensureSpareCapacity(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field _size:I
       4: iload_1
       5: iadd
       6: aload_0
       7: getfield      #5                  // Field _buf:[B
      10: arraylength
      11: if_icmple     74
      14: aload_0
      15: getfield      #4                  // Field _fixed:Z
      18: ifeq          52
      21: new           #27                 // class java/io/IOException
      24: dup
      25: new           #28                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #30                 // String Buffer overflow:
      34: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #5                  // Field _buf:[B
      41: arraylength
      42: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: aload_0
      54: getfield      #5                  // Field _buf:[B
      57: aload_0
      58: getfield      #5                  // Field _buf:[B
      61: arraylength
      62: iload_1
      63: iadd
      64: iconst_4
      65: imul
      66: iconst_3
      67: idiv
      68: invokestatic  #35                 // Method java/util/Arrays.copyOf:([BI)[B
      71: putfield      #5                  // Field _buf:[B
      74: return

  public byte[] getByteArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _buf:[B
       4: aload_0
       5: getfield      #7                  // Field _size:I
       8: invokestatic  #35                 // Method java/util/Arrays.copyOf:([BI)[B
      11: areturn
}
