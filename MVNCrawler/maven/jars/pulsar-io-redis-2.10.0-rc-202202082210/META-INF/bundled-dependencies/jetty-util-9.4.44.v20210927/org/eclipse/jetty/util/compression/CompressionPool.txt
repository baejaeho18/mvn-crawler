Compiled from "CompressionPool.java"
public abstract class org.eclipse.jetty.util.compression.CompressionPool<T> extends org.eclipse.jetty.util.component.AbstractLifeCycle {
  public static final int INFINITE_CAPACITY;

  private final java.util.Queue<T> _pool;

  private final java.util.concurrent.atomic.AtomicInteger _numObjects;

  private final int _capacity;

  public org.eclipse.jetty.util.compression.CompressionPool(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/eclipse/jetty/util/component/AbstractLifeCycle."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field _numObjects:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: iload_1
      18: putfield      #5                  // Field _capacity:I
      21: aload_0
      22: aload_0
      23: getfield      #5                  // Field _capacity:I
      26: ifne          33
      29: aconst_null
      30: goto          40
      33: new           #6                  // class java/util/concurrent/ConcurrentLinkedQueue
      36: dup
      37: invokespecial #7                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      40: putfield      #8                  // Field _pool:Ljava/util/Queue;
      43: return

  protected abstract T newObject();

  protected abstract void end(T);

  protected abstract void reset(T);

  public T acquire();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _capacity:I
       4: ifne          15
       7: aload_0
       8: invokevirtual #9                  // Method newObject:()Ljava/lang/Object;
      11: astore_1
      12: goto          52
      15: aload_0
      16: getfield      #8                  // Field _pool:Ljava/util/Queue;
      19: invokeinterface #10,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      24: astore_1
      25: aload_1
      26: ifnonnull     37
      29: aload_0
      30: invokevirtual #9                  // Method newObject:()Ljava/lang/Object;
      33: astore_1
      34: goto          52
      37: aload_0
      38: getfield      #5                  // Field _capacity:I
      41: ifle          52
      44: aload_0
      45: getfield      #4                  // Field _numObjects:Ljava/util/concurrent/atomic/AtomicInteger;
      48: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      51: pop
      52: aload_1
      53: areturn

  public void release(T);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #5                  // Field _capacity:I
       9: ifeq          19
      12: aload_0
      13: invokevirtual #12                 // Method isRunning:()Z
      16: ifne          25
      19: aload_0
      20: aload_1
      21: invokevirtual #13                 // Method end:(Ljava/lang/Object;)V
      24: return
      25: aload_0
      26: getfield      #5                  // Field _capacity:I
      29: ifge          51
      32: aload_0
      33: aload_1
      34: invokevirtual #14                 // Method reset:(Ljava/lang/Object;)V
      37: aload_0
      38: getfield      #8                  // Field _pool:Ljava/util/Queue;
      41: aload_1
      42: invokeinterface #15,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      47: pop
      48: goto          111
      51: aload_0
      52: getfield      #4                  // Field _numObjects:Ljava/util/concurrent/atomic/AtomicInteger;
      55: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      58: istore_2
      59: iload_2
      60: aload_0
      61: getfield      #5                  // Field _capacity:I
      64: if_icmplt     75
      67: aload_0
      68: aload_1
      69: invokevirtual #13                 // Method end:(Ljava/lang/Object;)V
      72: goto          111
      75: aload_0
      76: getfield      #4                  // Field _numObjects:Ljava/util/concurrent/atomic/AtomicInteger;
      79: iload_2
      80: iload_2
      81: iconst_1
      82: iadd
      83: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      86: ifeq          108
      89: aload_0
      90: aload_1
      91: invokevirtual #14                 // Method reset:(Ljava/lang/Object;)V
      94: aload_0
      95: getfield      #8                  // Field _pool:Ljava/util/Queue;
      98: aload_1
      99: invokeinterface #15,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     104: pop
     105: goto          111
     108: goto          51
     111: return

  public void doStop();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _pool:Ljava/util/Queue;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: astore_1
      10: aload_1
      11: ifnull        32
      14: aload_0
      15: aload_1
      16: invokevirtual #13                 // Method end:(Ljava/lang/Object;)V
      19: aload_0
      20: getfield      #8                  // Field _pool:Ljava/util/Queue;
      23: invokeinterface #10,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      28: astore_1
      29: goto          10
      32: aload_0
      33: getfield      #4                  // Field _numObjects:Ljava/util/concurrent/atomic/AtomicInteger;
      36: iconst_0
      37: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      40: return

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #22                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      16: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: pop
      20: aload_1
      21: bipush        64
      23: invokevirtual #24                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #25                 // Method java/lang/Object.hashCode:()I
      30: invokestatic  #26                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      33: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: pop
      37: aload_1
      38: bipush        123
      40: invokevirtual #24                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      43: aload_0
      44: invokevirtual #27                 // Method getState:()Ljava/lang/String;
      47: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_1
      52: ldc           #28                 // String ,size=
      54: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: getfield      #8                  // Field _pool:Ljava/util/Queue;
      61: ifnonnull     68
      64: iconst_m1
      65: goto          77
      68: aload_0
      69: getfield      #8                  // Field _pool:Ljava/util/Queue;
      72: invokeinterface #29,  1           // InterfaceMethod java/util/Queue.size:()I
      77: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: pop
      81: aload_1
      82: ldc           #31                 // String ,capacity=
      84: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_0
      88: getfield      #5                  // Field _capacity:I
      91: ifgt          99
      94: ldc           #32                 // String UNLIMITED
      96: goto          106
      99: aload_0
     100: getfield      #5                  // Field _capacity:I
     103: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     106: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     109: pop
     110: aload_1
     111: bipush        125
     113: invokevirtual #24                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     116: pop
     117: aload_1
     118: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: areturn
}
