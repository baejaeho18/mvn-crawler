Compiled from "Pool.java"
public class org.eclipse.jetty.util.Pool<T> implements java.lang.AutoCloseable, org.eclipse.jetty.util.component.Dumpable {
  private static final org.eclipse.jetty.util.log.Logger LOGGER;

  private final java.util.List<org.eclipse.jetty.util.Pool<T>.Entry> entries;

  private final int maxEntries;

  private final org.eclipse.jetty.util.Pool$StrategyType strategyType;

  private final org.eclipse.jetty.util.thread.Locker locker;

  private final java.lang.ThreadLocal<org.eclipse.jetty.util.Pool<T>.Entry> cache;

  private final java.util.concurrent.atomic.AtomicInteger nextIndex;

  private volatile boolean closed;

  private volatile int maxUsage;

  private volatile int maxMultiplex;

  public org.eclipse.jetty.util.Pool(org.eclipse.jetty.util.Pool$StrategyType, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #2                  // Method "<init>":(Lorg/eclipse/jetty/util/Pool$StrategyType;IZ)V
       7: return

  public org.eclipse.jetty.util.Pool(org.eclipse.jetty.util.Pool$StrategyType, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #5                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #6                  // Field entries:Ljava/util/List;
      15: aload_0
      16: new           #7                  // class org/eclipse/jetty/util/thread/Locker
      19: dup
      20: invokespecial #8                  // Method org/eclipse/jetty/util/thread/Locker."<init>":()V
      23: putfield      #9                  // Field locker:Lorg/eclipse/jetty/util/thread/Locker;
      26: aload_0
      27: iconst_m1
      28: putfield      #1                  // Field maxUsage:I
      31: aload_0
      32: iconst_m1
      33: putfield      #10                 // Field maxMultiplex:I
      36: aload_0
      37: iload_2
      38: putfield      #11                 // Field maxEntries:I
      41: aload_0
      42: aload_1
      43: putfield      #12                 // Field strategyType:Lorg/eclipse/jetty/util/Pool$StrategyType;
      46: aload_0
      47: iload_3
      48: ifeq          61
      51: new           #13                 // class java/lang/ThreadLocal
      54: dup
      55: invokespecial #14                 // Method java/lang/ThreadLocal."<init>":()V
      58: goto          62
      61: aconst_null
      62: putfield      #15                 // Field cache:Ljava/lang/ThreadLocal;
      65: aload_0
      66: aload_1
      67: getstatic     #16                 // Field org/eclipse/jetty/util/Pool$StrategyType.ROUND_ROBIN:Lorg/eclipse/jetty/util/Pool$StrategyType;
      70: if_acmpne     83
      73: new           #17                 // class java/util/concurrent/atomic/AtomicInteger
      76: dup
      77: invokespecial #18                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      80: goto          84
      83: aconst_null
      84: putfield      #19                 // Field nextIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      87: return

  public int getReservedCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field entries:Ljava/util/List;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #21,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      14: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      19: invokeinterface #23,  1           // InterfaceMethod java/util/stream/Stream.count:()J
      24: l2i
      25: ireturn

  public int getIdleCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field entries:Ljava/util/List;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #24,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      14: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      19: invokeinterface #23,  1           // InterfaceMethod java/util/stream/Stream.count:()J
      24: l2i
      25: ireturn

  public int getInUseCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field entries:Ljava/util/List;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #25,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      14: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      19: invokeinterface #23,  1           // InterfaceMethod java/util/stream/Stream.count:()J
      24: l2i
      25: ireturn

  public int getClosedCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field entries:Ljava/util/List;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #26,  0             // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
      14: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      19: invokeinterface #23,  1           // InterfaceMethod java/util/stream/Stream.count:()J
      24: l2i
      25: ireturn

  public int getMaxEntries();
    Code:
       0: aload_0
       1: getfield      #11                 // Field maxEntries:I
       4: ireturn

  public int getMaxMultiplex();
    Code:
       0: aload_0
       1: getfield      #10                 // Field maxMultiplex:I
       4: iconst_m1
       5: if_icmpne     12
       8: iconst_1
       9: goto          16
      12: aload_0
      13: getfield      #10                 // Field maxMultiplex:I
      16: ireturn

  protected int getMaxMultiplex(T);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getMaxMultiplex:()I
       4: ireturn

  public final void setMaxMultiplex(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     15
       5: new           #28                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #29                 // String Max multiplex must be >= 1
      11: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #9                  // Field locker:Lorg/eclipse/jetty/util/thread/Locker;
      19: invokevirtual #31                 // Method org/eclipse/jetty/util/thread/Locker.lock:()Lorg/eclipse/jetty/util/thread/Locker$Lock;
      22: astore_2
      23: aload_0
      24: getfield      #32                 // Field closed:Z
      27: ifeq          39
      30: aload_2
      31: ifnull        38
      34: aload_2
      35: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
      38: return
      39: aload_0
      40: getfield      #6                  // Field entries:Ljava/util/List;
      43: invokeinterface #20,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      48: ldc           #34                 // class org/eclipse/jetty/util/Pool$MonoEntry
      50: dup
      51: invokestatic  #35                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: invokedynamic #36,  0             // InvokeDynamic #4:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      60: invokeinterface #37,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      65: ifeq          78
      68: new           #38                 // class java/lang/IllegalStateException
      71: dup
      72: ldc           #39                 // String Pool entries do not support multiplexing
      74: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_0
      79: iload_1
      80: putfield      #10                 // Field maxMultiplex:I
      83: aload_2
      84: ifnull        116
      87: aload_2
      88: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
      91: goto          116
      94: astore_3
      95: aload_2
      96: ifnull        114
      99: aload_2
     100: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
     103: goto          114
     106: astore        4
     108: aload_3
     109: aload         4
     111: invokevirtual #42                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     114: aload_3
     115: athrow
     116: return
    Exception table:
       from    to  target type
          23    30    94   Class java/lang/Throwable
          39    83    94   Class java/lang/Throwable
          99   103   106   Class java/lang/Throwable

  public int getMaxUsageCount();
    Code:
       0: aload_0
       1: getfield      #1                  // Field maxUsage:I
       4: ireturn

  protected int getMaxUsageCount(T);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getMaxUsageCount:()I
       4: ireturn

  public final void setMaxUsageCount(int);
    Code:
       0: iload_1
       1: ifne          14
       4: new           #28                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #44                 // String Max usage count must be != 0
      10: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #9                  // Field locker:Lorg/eclipse/jetty/util/thread/Locker;
      18: invokevirtual #31                 // Method org/eclipse/jetty/util/thread/Locker.lock:()Lorg/eclipse/jetty/util/thread/Locker$Lock;
      21: astore_3
      22: aload_0
      23: getfield      #32                 // Field closed:Z
      26: ifeq          38
      29: aload_3
      30: ifnull        37
      33: aload_3
      34: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
      37: return
      38: aload_0
      39: getfield      #6                  // Field entries:Ljava/util/List;
      42: invokeinterface #20,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      47: ldc           #34                 // class org/eclipse/jetty/util/Pool$MonoEntry
      49: dup
      50: invokestatic  #35                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: invokedynamic #36,  0             // InvokeDynamic #4:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      59: invokeinterface #37,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      64: ifeq          77
      67: new           #38                 // class java/lang/IllegalStateException
      70: dup
      71: ldc           #45                 // String Pool entries do not support max usage
      73: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_0
      78: iload_1
      79: putfield      #1                  // Field maxUsage:I
      82: aload_0
      83: getfield      #6                  // Field entries:Ljava/util/List;
      86: invokeinterface #20,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      91: aload_0
      92: invokedynamic #46,  0             // InvokeDynamic #5:test:(Lorg/eclipse/jetty/util/Pool;)Ljava/util/function/Predicate;
      97: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     102: invokedynamic #47,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
     107: invokeinterface #48,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     112: invokestatic  #49                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     115: invokeinterface #50,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     120: checkcast     #51                 // class java/util/List
     123: astore_2
     124: aload_3
     125: ifnull        160
     128: aload_3
     129: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
     132: goto          160
     135: astore        4
     137: aload_3
     138: ifnull        157
     141: aload_3
     142: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
     145: goto          157
     148: astore        5
     150: aload         4
     152: aload         5
     154: invokevirtual #42                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     157: aload         4
     159: athrow
     160: aload_2
     161: invokedynamic #52,  0             // InvokeDynamic #7:accept:()Ljava/util/function/Consumer;
     166: invokeinterface #53,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
     171: return
    Exception table:
       from    to  target type
          22    29   135   Class java/lang/Throwable
          38   124   135   Class java/lang/Throwable
         141   145   148   Class java/lang/Throwable

  public org.eclipse.jetty.util.Pool<T>.Entry reserve(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field locker:Lorg/eclipse/jetty/util/thread/Locker;
       4: invokevirtual #31                 // Method org/eclipse/jetty/util/thread/Locker.lock:()Lorg/eclipse/jetty/util/thread/Locker$Lock;
       7: astore_2
       8: aload_0
       9: getfield      #32                 // Field closed:Z
      12: ifeq          27
      15: aconst_null
      16: astore_3
      17: aload_2
      18: ifnull        25
      21: aload_2
      22: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
      25: aload_3
      26: areturn
      27: aload_0
      28: getfield      #11                 // Field maxEntries:I
      31: aload_0
      32: getfield      #6                  // Field entries:Ljava/util/List;
      35: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      40: isub
      41: istore_3
      42: iload_3
      43: ifgt          60
      46: aconst_null
      47: astore        4
      49: aload_2
      50: ifnull        57
      53: aload_2
      54: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
      57: aload         4
      59: areturn
      60: iload_1
      61: iflt          91
      64: aload_0
      65: invokevirtual #55                 // Method getReservedCount:()I
      68: aload_0
      69: invokevirtual #27                 // Method getMaxMultiplex:()I
      72: imul
      73: iload_1
      74: if_icmplt     91
      77: aconst_null
      78: astore        4
      80: aload_2
      81: ifnull        88
      84: aload_2
      85: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
      88: aload         4
      90: areturn
      91: aload_0
      92: invokespecial #56                 // Method newEntry:()Lorg/eclipse/jetty/util/Pool$Entry;
      95: astore        4
      97: aload_0
      98: getfield      #6                  // Field entries:Ljava/util/List;
     101: aload         4
     103: invokeinterface #57,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     108: pop
     109: aload         4
     111: astore        5
     113: aload_2
     114: ifnull        121
     117: aload_2
     118: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
     121: aload         5
     123: areturn
     124: astore_3
     125: aload_2
     126: ifnull        144
     129: aload_2
     130: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
     133: goto          144
     136: astore        4
     138: aload_3
     139: aload         4
     141: invokevirtual #42                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     144: aload_3
     145: athrow
    Exception table:
       from    to  target type
           8    17   124   Class java/lang/Throwable
          27    49   124   Class java/lang/Throwable
          60    80   124   Class java/lang/Throwable
          91   113   124   Class java/lang/Throwable
         129   133   136   Class java/lang/Throwable

  public org.eclipse.jetty.util.Pool<T>.Entry reserve();
    Code:
       0: aload_0
       1: getfield      #9                  // Field locker:Lorg/eclipse/jetty/util/thread/Locker;
       4: invokevirtual #31                 // Method org/eclipse/jetty/util/thread/Locker.lock:()Lorg/eclipse/jetty/util/thread/Locker$Lock;
       7: astore_1
       8: aload_0
       9: getfield      #32                 // Field closed:Z
      12: ifeq          27
      15: aconst_null
      16: astore_2
      17: aload_1
      18: ifnull        25
      21: aload_1
      22: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
      25: aload_2
      26: areturn
      27: aload_0
      28: getfield      #6                  // Field entries:Ljava/util/List;
      31: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      36: aload_0
      37: getfield      #11                 // Field maxEntries:I
      40: if_icmplt     55
      43: aconst_null
      44: astore_2
      45: aload_1
      46: ifnull        53
      49: aload_1
      50: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
      53: aload_2
      54: areturn
      55: aload_0
      56: invokespecial #56                 // Method newEntry:()Lorg/eclipse/jetty/util/Pool$Entry;
      59: astore_2
      60: aload_0
      61: getfield      #6                  // Field entries:Ljava/util/List;
      64: aload_2
      65: invokeinterface #57,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: aload_2
      72: astore_3
      73: aload_1
      74: ifnull        81
      77: aload_1
      78: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
      81: aload_3
      82: areturn
      83: astore_2
      84: aload_1
      85: ifnull        101
      88: aload_1
      89: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
      92: goto          101
      95: astore_3
      96: aload_2
      97: aload_3
      98: invokevirtual #42                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     101: aload_2
     102: athrow
    Exception table:
       from    to  target type
           8    17    83   Class java/lang/Throwable
          27    45    83   Class java/lang/Throwable
          55    73    83   Class java/lang/Throwable
          88    92    95   Class java/lang/Throwable

  private org.eclipse.jetty.util.Pool<T>.Entry newEntry();
    Code:
       0: aload_0
       1: getfield      #10                 // Field maxMultiplex:I
       4: ifge          14
       7: aload_0
       8: getfield      #1                  // Field maxUsage:I
      11: iflt          23
      14: new           #58                 // class org/eclipse/jetty/util/Pool$MultiEntry
      17: dup
      18: aload_0
      19: invokespecial #59                 // Method org/eclipse/jetty/util/Pool$MultiEntry."<init>":(Lorg/eclipse/jetty/util/Pool;)V
      22: areturn
      23: new           #34                 // class org/eclipse/jetty/util/Pool$MonoEntry
      26: dup
      27: aload_0
      28: aconst_null
      29: invokespecial #60                 // Method org/eclipse/jetty/util/Pool$MonoEntry."<init>":(Lorg/eclipse/jetty/util/Pool;Lorg/eclipse/jetty/util/Pool$1;)V
      32: areturn

  public org.eclipse.jetty.util.Pool<T>.Entry acquireAt(int);
    Code:
       0: aload_0
       1: getfield      #32                 // Field closed:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #6                  // Field entries:Ljava/util/List;
      13: iload_1
      14: invokeinterface #61,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      19: checkcast     #62                 // class org/eclipse/jetty/util/Pool$Entry
      22: astore_2
      23: aload_2
      24: invokevirtual #63                 // Method org/eclipse/jetty/util/Pool$Entry.tryAcquire:()Z
      27: ifeq          32
      30: aload_2
      31: areturn
      32: goto          36
      35: astore_2
      36: aconst_null
      37: areturn
    Exception table:
       from    to  target type
           9    31    35   Class java/lang/IndexOutOfBoundsException

  public org.eclipse.jetty.util.Pool<T>.Entry acquire();
    Code:
       0: aload_0
       1: getfield      #32                 // Field closed:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #6                  // Field entries:Ljava/util/List;
      13: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      18: istore_1
      19: iload_1
      20: ifne          25
      23: aconst_null
      24: areturn
      25: aload_0
      26: getfield      #15                 // Field cache:Ljava/lang/ThreadLocal;
      29: ifnull        56
      32: aload_0
      33: getfield      #15                 // Field cache:Ljava/lang/ThreadLocal;
      36: invokevirtual #65                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      39: checkcast     #62                 // class org/eclipse/jetty/util/Pool$Entry
      42: astore_2
      43: aload_2
      44: ifnull        56
      47: aload_2
      48: invokevirtual #63                 // Method org/eclipse/jetty/util/Pool$Entry.tryAcquire:()Z
      51: ifeq          56
      54: aload_2
      55: areturn
      56: aload_0
      57: iload_1
      58: invokespecial #66                 // Method startIndex:(I)I
      61: istore_2
      62: iload_1
      63: istore_3
      64: iload_3
      65: iinc          3, -1
      68: ifle          143
      71: aload_0
      72: getfield      #6                  // Field entries:Ljava/util/List;
      75: iload_2
      76: invokeinterface #61,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      81: checkcast     #62                 // class org/eclipse/jetty/util/Pool$Entry
      84: astore        4
      86: aload         4
      88: ifnull        102
      91: aload         4
      93: invokevirtual #63                 // Method org/eclipse/jetty/util/Pool$Entry.tryAcquire:()Z
      96: ifeq          102
      99: aload         4
     101: areturn
     102: goto          134
     105: astore        4
     107: getstatic     #67                 // Field LOGGER:Lorg/eclipse/jetty/util/log/Logger;
     110: aload         4
     112: invokeinterface #68,  2           // InterfaceMethod org/eclipse/jetty/util/log/Logger.ignore:(Ljava/lang/Throwable;)V
     117: aload_0
     118: getfield      #6                  // Field entries:Ljava/util/List;
     121: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
     126: istore_1
     127: iload_1
     128: ifne          134
     131: goto          143
     134: iload_2
     135: iconst_1
     136: iadd
     137: iload_1
     138: irem
     139: istore_2
     140: goto          64
     143: aconst_null
     144: areturn
    Exception table:
       from    to  target type
          71   101   105   Class java/lang/IndexOutOfBoundsException

  private int startIndex(int);
    Code:
       0: getstatic     #69                 // Field org/eclipse/jetty/util/Pool$1.$SwitchMap$org$eclipse$jetty$util$Pool$StrategyType:[I
       3: aload_0
       4: getfield      #12                 // Field strategyType:Lorg/eclipse/jetty/util/Pool$StrategyType;
       7: invokevirtual #70                 // Method org/eclipse/jetty/util/Pool$StrategyType.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 4
                     1: 40
                     2: 42
                     3: 50
                     4: 65
               default: 76
          }
      40: iconst_0
      41: ireturn
      42: invokestatic  #71                 // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
      45: iload_1
      46: invokevirtual #72                 // Method java/util/concurrent/ThreadLocalRandom.nextInt:(I)I
      49: ireturn
      50: aload_0
      51: getfield      #19                 // Field nextIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      54: invokedynamic #73,  0             // InvokeDynamic #8:applyAsInt:()Ljava/util/function/IntUnaryOperator;
      59: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicInteger.getAndUpdate:(Ljava/util/function/IntUnaryOperator;)I
      62: iload_1
      63: irem
      64: ireturn
      65: invokestatic  #75                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      68: invokevirtual #76                 // Method java/lang/Thread.getId:()J
      71: iload_1
      72: i2l
      73: lrem
      74: l2i
      75: ireturn
      76: new           #28                 // class java/lang/IllegalArgumentException
      79: dup
      80: new           #77                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #79                 // String Unknown strategy type:
      89: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_0
      93: getfield      #12                 // Field strategyType:Lorg/eclipse/jetty/util/Pool$StrategyType;
      96: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      99: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     105: athrow

  public org.eclipse.jetty.util.Pool<T>.Entry acquire(java.util.function.Function<org.eclipse.jetty.util.Pool<T>.Entry, T>);
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method acquire:()Lorg/eclipse/jetty/util/Pool$Entry;
       4: astore_2
       5: aload_2
       6: ifnull        11
       9: aload_2
      10: areturn
      11: aload_0
      12: invokevirtual #84                 // Method reserve:()Lorg/eclipse/jetty/util/Pool$Entry;
      15: astore_2
      16: aload_2
      17: ifnonnull     22
      20: aconst_null
      21: areturn
      22: aload_1
      23: aload_2
      24: invokeinterface #85,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      29: astore_3
      30: goto          44
      33: astore        4
      35: aload_0
      36: aload_2
      37: invokevirtual #86                 // Method remove:(Lorg/eclipse/jetty/util/Pool$Entry;)Z
      40: pop
      41: aload         4
      43: athrow
      44: aload_3
      45: ifnonnull     56
      48: aload_0
      49: aload_2
      50: invokevirtual #86                 // Method remove:(Lorg/eclipse/jetty/util/Pool$Entry;)Z
      53: pop
      54: aconst_null
      55: areturn
      56: aload_2
      57: aload_3
      58: iconst_1
      59: invokevirtual #87                 // Method org/eclipse/jetty/util/Pool$Entry.enable:(Ljava/lang/Object;Z)Z
      62: ifeq          69
      65: aload_2
      66: goto          70
      69: aconst_null
      70: areturn
    Exception table:
       from    to  target type
          22    30    33   Class java/lang/Throwable

  public boolean release(org.eclipse.jetty.util.Pool<T>.Entry);
    Code:
       0: aload_0
       1: getfield      #32                 // Field closed:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: invokevirtual #88                 // Method org/eclipse/jetty/util/Pool$Entry.tryRelease:()Z
      13: istore_2
      14: iload_2
      15: ifeq          33
      18: aload_0
      19: getfield      #15                 // Field cache:Ljava/lang/ThreadLocal;
      22: ifnull        33
      25: aload_0
      26: getfield      #15                 // Field cache:Ljava/lang/ThreadLocal;
      29: aload_1
      30: invokevirtual #89                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      33: iload_2
      34: ireturn

  public boolean remove(org.eclipse.jetty.util.Pool<T>.Entry);
    Code:
       0: aload_0
       1: getfield      #32                 // Field closed:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: invokevirtual #90                 // Method org/eclipse/jetty/util/Pool$Entry.tryRemove:()Z
      13: ifne          47
      16: getstatic     #67                 // Field LOGGER:Lorg/eclipse/jetty/util/log/Logger;
      19: invokeinterface #91,  1           // InterfaceMethod org/eclipse/jetty/util/log/Logger.isDebugEnabled:()Z
      24: ifeq          45
      27: getstatic     #67                 // Field LOGGER:Lorg/eclipse/jetty/util/log/Logger;
      30: ldc           #92                 // String Attempt to remove an object from the pool that is still in use: {}
      32: iconst_1
      33: anewarray     #93                 // class java/lang/Object
      36: dup
      37: iconst_0
      38: aload_1
      39: aastore
      40: invokeinterface #94,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #6                  // Field entries:Ljava/util/List;
      51: aload_1
      52: invokeinterface #95,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      57: istore_2
      58: iload_2
      59: ifne          91
      62: getstatic     #67                 // Field LOGGER:Lorg/eclipse/jetty/util/log/Logger;
      65: invokeinterface #91,  1           // InterfaceMethod org/eclipse/jetty/util/log/Logger.isDebugEnabled:()Z
      70: ifeq          91
      73: getstatic     #67                 // Field LOGGER:Lorg/eclipse/jetty/util/log/Logger;
      76: ldc           #96                 // String Attempt to remove an object from the pool that does not exist: {}
      78: iconst_1
      79: anewarray     #93                 // class java/lang/Object
      82: dup
      83: iconst_0
      84: aload_1
      85: aastore
      86: invokeinterface #94,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      91: iload_2
      92: ireturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #32                 // Field closed:Z
       4: ireturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #9                  // Field locker:Lorg/eclipse/jetty/util/thread/Locker;
       4: invokevirtual #31                 // Method org/eclipse/jetty/util/thread/Locker.lock:()Lorg/eclipse/jetty/util/thread/Locker$Lock;
       7: astore_2
       8: aload_0
       9: iconst_1
      10: putfield      #32                 // Field closed:Z
      13: new           #97                 // class java/util/ArrayList
      16: dup
      17: aload_0
      18: getfield      #6                  // Field entries:Ljava/util/List;
      21: invokespecial #98                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      24: astore_1
      25: aload_0
      26: getfield      #6                  // Field entries:Ljava/util/List;
      29: invokeinterface #99,  1           // InterfaceMethod java/util/List.clear:()V
      34: aload_2
      35: ifnull        67
      38: aload_2
      39: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
      42: goto          67
      45: astore_3
      46: aload_2
      47: ifnull        65
      50: aload_2
      51: invokevirtual #33                 // Method org/eclipse/jetty/util/thread/Locker$Lock.close:()V
      54: goto          65
      57: astore        4
      59: aload_3
      60: aload         4
      62: invokevirtual #42                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      65: aload_3
      66: athrow
      67: aload_1
      68: invokeinterface #100,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      73: astore_2
      74: aload_2
      75: invokeinterface #101,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          159
      83: aload_2
      84: invokeinterface #102,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      89: checkcast     #62                 // class org/eclipse/jetty/util/Pool$Entry
      92: astore_3
      93: aload_3
      94: invokevirtual #90                 // Method org/eclipse/jetty/util/Pool$Entry.tryRemove:()Z
      97: istore        4
      99: iload         4
     101: ifeq          127
     104: aload_3
     105: invokestatic  #103                // Method org/eclipse/jetty/util/Pool$Entry.access$100:(Lorg/eclipse/jetty/util/Pool$Entry;)Ljava/lang/Object;
     108: instanceof    #104                // class java/io/Closeable
     111: ifeq          156
     114: aload_3
     115: invokestatic  #103                // Method org/eclipse/jetty/util/Pool$Entry.access$100:(Lorg/eclipse/jetty/util/Pool$Entry;)Ljava/lang/Object;
     118: checkcast     #104                // class java/io/Closeable
     121: invokestatic  #105                // Method org/eclipse/jetty/util/IO.close:(Ljava/io/Closeable;)V
     124: goto          156
     127: getstatic     #67                 // Field LOGGER:Lorg/eclipse/jetty/util/log/Logger;
     130: invokeinterface #91,  1           // InterfaceMethod org/eclipse/jetty/util/log/Logger.isDebugEnabled:()Z
     135: ifeq          156
     138: getstatic     #67                 // Field LOGGER:Lorg/eclipse/jetty/util/log/Logger;
     141: ldc           #106                // String Pooled object still in use: {}
     143: iconst_1
     144: anewarray     #93                 // class java/lang/Object
     147: dup
     148: iconst_0
     149: aload_3
     150: aastore
     151: invokeinterface #94,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     156: goto          74
     159: return
    Exception table:
       from    to  target type
           8    34    45   Class java/lang/Throwable
          50    54    57   Class java/lang/Throwable

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field entries:Ljava/util/List;
       4: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public java.util.Collection<org.eclipse.jetty.util.Pool<T>.Entry> values();
    Code:
       0: aload_0
       1: getfield      #6                  // Field entries:Ljava/util/List;
       4: invokestatic  #107                // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
       7: areturn

  public void dump(java.lang.Appendable, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: iconst_1
       4: anewarray     #93                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: new           #108                // class org/eclipse/jetty/util/component/DumpableCollection
      12: dup
      13: ldc           #109                // String entries
      15: aload_0
      16: getfield      #6                  // Field entries:Ljava/util/List;
      19: invokespecial #110                // Method org/eclipse/jetty/util/component/DumpableCollection."<init>":(Ljava/lang/String;Ljava/util/Collection;)V
      22: aastore
      23: invokestatic  #111                // InterfaceMethod org/eclipse/jetty/util/component/Dumpable.dumpObjects:(Ljava/lang/Appendable;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)V
      26: return

  public java.lang.String toString();
    Code:
       0: ldc           #112                // String %s@%x[inUse=%d,size=%d,capacity=%d,closed=%b]
       2: bipush        6
       4: anewarray     #93                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_0
      10: invokevirtual #113                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #114                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: invokevirtual #115                // Method java/lang/Object.hashCode:()I
      23: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: aastore
      27: dup
      28: iconst_2
      29: aload_0
      30: invokevirtual #117                // Method getInUseCount:()I
      33: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aastore
      37: dup
      38: iconst_3
      39: aload_0
      40: invokevirtual #118                // Method size:()I
      43: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: aastore
      47: dup
      48: iconst_4
      49: aload_0
      50: invokevirtual #119                // Method getMaxEntries:()I
      53: invokestatic  #116                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: aastore
      57: dup
      58: iconst_5
      59: aload_0
      60: invokevirtual #120                // Method isClosed:()Z
      63: invokestatic  #121                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      66: aastore
      67: invokestatic  #122                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      70: areturn

  private static int lambda$startIndex$2(int);
    Code:
       0: iconst_0
       1: iload_0
       2: iconst_1
       3: iadd
       4: invokestatic  #123                // Method java/lang/Math.max:(II)I
       7: ireturn

  private static java.io.Closeable lambda$setMaxUsageCount$1(org.eclipse.jetty.util.Pool$Entry);
    Code:
       0: aload_0
       1: invokestatic  #103                // Method org/eclipse/jetty/util/Pool$Entry.access$100:(Lorg/eclipse/jetty/util/Pool$Entry;)Ljava/lang/Object;
       4: checkcast     #104                // class java/io/Closeable
       7: areturn

  private boolean lambda$setMaxUsageCount$0(org.eclipse.jetty.util.Pool$Entry);
    Code:
       0: aload_1
       1: invokevirtual #124                // Method org/eclipse/jetty/util/Pool$Entry.isIdleAndOverUsed:()Z
       4: ifeq          29
       7: aload_0
       8: aload_1
       9: invokevirtual #86                 // Method remove:(Lorg/eclipse/jetty/util/Pool$Entry;)Z
      12: ifeq          29
      15: aload_1
      16: invokestatic  #103                // Method org/eclipse/jetty/util/Pool$Entry.access$100:(Lorg/eclipse/jetty/util/Pool$Entry;)Ljava/lang/Object;
      19: instanceof    #104                // class java/io/Closeable
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  static int access$200(org.eclipse.jetty.util.Pool);
    Code:
       0: aload_0
       1: getfield      #1                  // Field maxUsage:I
       4: ireturn

  static {};
    Code:
       0: ldc           #125                // class org/eclipse/jetty/util/Pool
       2: invokestatic  #126                // Method org/eclipse/jetty/util/log/Log.getLogger:(Ljava/lang/Class;)Lorg/eclipse/jetty/util/log/Logger;
       5: putstatic     #67                 // Field LOGGER:Lorg/eclipse/jetty/util/log/Logger;
       8: return
}
