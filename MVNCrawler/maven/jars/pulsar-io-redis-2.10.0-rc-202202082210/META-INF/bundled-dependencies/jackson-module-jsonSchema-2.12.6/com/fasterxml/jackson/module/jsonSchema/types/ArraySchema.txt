Compiled from "ArraySchema.java"
public class com.fasterxml.jackson.module.jsonSchema.types.ArraySchema extends com.fasterxml.jackson.module.jsonSchema.types.ContainerTypeSchema {
  protected com.fasterxml.jackson.module.jsonSchema.types.ArraySchema$AdditionalItems additionalItems;

  protected com.fasterxml.jackson.module.jsonSchema.types.ArraySchema$Items items;

  protected java.lang.Integer maxItems;

  protected java.lang.Integer minItems;

  protected java.lang.Boolean uniqueItems;

  public com.fasterxml.jackson.module.jsonSchema.types.ArraySchema();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/fasterxml/jackson/module/jsonSchema/types/ContainerTypeSchema."<init>":()V
       4: return

  public com.fasterxml.jackson.module.jsonSchema.types.ArraySchema asArraySchema();
    Code:
       0: aload_0
       1: areturn

  public com.fasterxml.jackson.module.jsonSchema.types.ArraySchema$AdditionalItems getAdditionalItems();
    Code:
       0: aload_0
       1: getfield      #3                  // Field additionalItems:Lcom/fasterxml/jackson/module/jsonSchema/types/ArraySchema$AdditionalItems;
       4: areturn

  public com.fasterxml.jackson.module.jsonSchema.types.ArraySchema$Items getItems();
    Code:
       0: aload_0
       1: getfield      #4                  // Field items:Lcom/fasterxml/jackson/module/jsonSchema/types/ArraySchema$Items;
       4: areturn

  public java.lang.Integer getMaxItems();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxItems:Ljava/lang/Integer;
       4: areturn

  public java.lang.Integer getMinItems();
    Code:
       0: aload_0
       1: getfield      #6                  // Field minItems:Ljava/lang/Integer;
       4: areturn

  public com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes getType();
    Code:
       0: getstatic     #7                  // Field com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes.ARRAY:Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;
       3: areturn

  public java.lang.Boolean getUniqueItems();
    Code:
       0: aload_0
       1: getfield      #8                  // Field uniqueItems:Ljava/lang/Boolean;
       4: areturn

  public boolean isArraySchema();
    Code:
       0: iconst_1
       1: ireturn

  public void setAdditionalItems(com.fasterxml.jackson.module.jsonSchema.types.ArraySchema$AdditionalItems);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field additionalItems:Lcom/fasterxml/jackson/module/jsonSchema/types/ArraySchema$AdditionalItems;
       5: return

  public void setItems(com.fasterxml.jackson.module.jsonSchema.types.ArraySchema$Items);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field items:Lcom/fasterxml/jackson/module/jsonSchema/types/ArraySchema$Items;
       5: return

  public void setItemsSchema(com.fasterxml.jackson.module.jsonSchema.JsonSchema);
    Code:
       0: aload_0
       1: new           #9                  // class com/fasterxml/jackson/module/jsonSchema/types/ArraySchema$SingleItems
       4: dup
       5: aload_1
       6: invokespecial #10                 // Method com/fasterxml/jackson/module/jsonSchema/types/ArraySchema$SingleItems."<init>":(Lcom/fasterxml/jackson/module/jsonSchema/JsonSchema;)V
       9: putfield      #4                  // Field items:Lcom/fasterxml/jackson/module/jsonSchema/types/ArraySchema$Items;
      12: return

  public void setMaxItems(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field maxItems:Ljava/lang/Integer;
       5: return

  public void setMinItems(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field minItems:Ljava/lang/Integer;
       5: return

  public void setUniqueItems(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field uniqueItems:Ljava/lang/Boolean;
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #11                 // class com/fasterxml/jackson/module/jsonSchema/types/ArraySchema
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: aload_1
      24: checkcast     #11                 // class com/fasterxml/jackson/module/jsonSchema/types/ArraySchema
      27: invokevirtual #12                 // Method _equals:(Lcom/fasterxml/jackson/module/jsonSchema/types/ArraySchema;)Z
      30: ireturn

  protected boolean _equals(com.fasterxml.jackson.module.jsonSchema.types.ArraySchema);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getAdditionalItems:()Lcom/fasterxml/jackson/module/jsonSchema/types/ArraySchema$AdditionalItems;
       4: aload_1
       5: invokevirtual #13                 // Method getAdditionalItems:()Lcom/fasterxml/jackson/module/jsonSchema/types/ArraySchema$AdditionalItems;
       8: invokestatic  #1                  // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ifeq          82
      14: aload_0
      15: invokevirtual #14                 // Method getItems:()Lcom/fasterxml/jackson/module/jsonSchema/types/ArraySchema$Items;
      18: aload_1
      19: invokevirtual #14                 // Method getItems:()Lcom/fasterxml/jackson/module/jsonSchema/types/ArraySchema$Items;
      22: invokestatic  #1                  // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      25: ifeq          82
      28: aload_0
      29: invokevirtual #15                 // Method getMaxItems:()Ljava/lang/Integer;
      32: aload_1
      33: invokevirtual #15                 // Method getMaxItems:()Ljava/lang/Integer;
      36: invokestatic  #1                  // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          82
      42: aload_0
      43: invokevirtual #16                 // Method getMinItems:()Ljava/lang/Integer;
      46: aload_1
      47: invokevirtual #16                 // Method getMinItems:()Ljava/lang/Integer;
      50: invokestatic  #1                  // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      53: ifeq          82
      56: aload_0
      57: invokevirtual #17                 // Method getUniqueItems:()Ljava/lang/Boolean;
      60: aload_1
      61: invokevirtual #17                 // Method getUniqueItems:()Ljava/lang/Boolean;
      64: invokestatic  #1                  // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      67: ifeq          82
      70: aload_0
      71: aload_1
      72: invokespecial #18                 // Method com/fasterxml/jackson/module/jsonSchema/types/ContainerTypeSchema._equals:(Lcom/fasterxml/jackson/module/jsonSchema/types/ContainerTypeSchema;)Z
      75: ifeq          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: ireturn

  static boolean access$000(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       5: ireturn

  static boolean access$100(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       5: ireturn

  static boolean access$200(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       5: ireturn
}
