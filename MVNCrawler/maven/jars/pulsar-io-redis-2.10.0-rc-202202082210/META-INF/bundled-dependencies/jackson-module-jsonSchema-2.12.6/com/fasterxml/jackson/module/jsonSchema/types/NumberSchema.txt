Compiled from "NumberSchema.java"
public class com.fasterxml.jackson.module.jsonSchema.types.NumberSchema extends com.fasterxml.jackson.module.jsonSchema.types.ValueTypeSchema {
  private java.lang.Boolean exclusiveMaximum;

  private java.lang.Boolean exclusiveMinimum;

  private java.lang.Double maximum;

  private java.lang.Double minimum;

  private java.lang.Double multipleOf;

  public com.fasterxml.jackson.module.jsonSchema.types.NumberSchema();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/fasterxml/jackson/module/jsonSchema/types/ValueTypeSchema."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field maximum:Ljava/lang/Double;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field minimum:Ljava/lang/Double;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field multipleOf:Ljava/lang/Double;
      19: return

  public com.fasterxml.jackson.module.jsonSchema.types.NumberSchema asNumberSchema();
    Code:
       0: aload_0
       1: areturn

  public java.lang.Boolean getExclusiveMaximum();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exclusiveMaximum:Ljava/lang/Boolean;
       4: areturn

  public java.lang.Boolean getExclusiveMinimum();
    Code:
       0: aload_0
       1: getfield      #6                  // Field exclusiveMinimum:Ljava/lang/Boolean;
       4: areturn

  public java.lang.Double getMaximum();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maximum:Ljava/lang/Double;
       4: areturn

  public java.lang.Double getMinimum();
    Code:
       0: aload_0
       1: getfield      #3                  // Field minimum:Ljava/lang/Double;
       4: areturn

  public java.lang.Double getMultipleOf();
    Code:
       0: aload_0
       1: getfield      #4                  // Field multipleOf:Ljava/lang/Double;
       4: areturn

  public com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes getType();
    Code:
       0: getstatic     #7                  // Field com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes.NUMBER:Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;
       3: areturn

  public boolean isNumberSchema();
    Code:
       0: iconst_1
       1: ireturn

  public void setExclusiveMaximum(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field exclusiveMaximum:Ljava/lang/Boolean;
       5: return

  public void setExclusiveMinimum(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field exclusiveMinimum:Ljava/lang/Boolean;
       5: return

  public void setMaximum(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field maximum:Ljava/lang/Double;
       5: return

  public void setMinimum(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field minimum:Ljava/lang/Double;
       5: return

  public void setMultipleOf(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field multipleOf:Ljava/lang/Double;
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #8                  // class com/fasterxml/jackson/module/jsonSchema/types/NumberSchema
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: aload_1
      24: checkcast     #8                  // class com/fasterxml/jackson/module/jsonSchema/types/NumberSchema
      27: invokevirtual #9                  // Method _equals:(Lcom/fasterxml/jackson/module/jsonSchema/types/NumberSchema;)Z
      30: ireturn

  protected boolean _equals(com.fasterxml.jackson.module.jsonSchema.types.NumberSchema);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getExclusiveMaximum:()Ljava/lang/Boolean;
       4: aload_1
       5: invokevirtual #10                 // Method getExclusiveMaximum:()Ljava/lang/Boolean;
       8: invokestatic  #11                 // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ifeq          82
      14: aload_0
      15: invokevirtual #12                 // Method getExclusiveMinimum:()Ljava/lang/Boolean;
      18: aload_1
      19: invokevirtual #12                 // Method getExclusiveMinimum:()Ljava/lang/Boolean;
      22: invokestatic  #11                 // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      25: ifeq          82
      28: aload_0
      29: invokevirtual #13                 // Method getMaximum:()Ljava/lang/Double;
      32: aload_1
      33: invokevirtual #13                 // Method getMaximum:()Ljava/lang/Double;
      36: invokestatic  #11                 // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          82
      42: aload_0
      43: invokevirtual #14                 // Method getMinimum:()Ljava/lang/Double;
      46: aload_1
      47: invokevirtual #14                 // Method getMinimum:()Ljava/lang/Double;
      50: invokestatic  #11                 // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      53: ifeq          82
      56: aload_0
      57: invokevirtual #15                 // Method getMultipleOf:()Ljava/lang/Double;
      60: aload_1
      61: invokevirtual #15                 // Method getMultipleOf:()Ljava/lang/Double;
      64: invokestatic  #11                 // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      67: ifeq          82
      70: aload_0
      71: aload_1
      72: invokespecial #16                 // Method com/fasterxml/jackson/module/jsonSchema/types/ValueTypeSchema._equals:(Lcom/fasterxml/jackson/module/jsonSchema/types/ValueTypeSchema;)Z
      75: ifeq          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: ireturn
}
