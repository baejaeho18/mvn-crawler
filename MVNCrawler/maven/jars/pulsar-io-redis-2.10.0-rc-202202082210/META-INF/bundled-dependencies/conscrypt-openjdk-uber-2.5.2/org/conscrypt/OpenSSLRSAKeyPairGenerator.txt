Compiled from "OpenSSLRSAKeyPairGenerator.java"
public final class org.conscrypt.OpenSSLRSAKeyPairGenerator extends java.security.KeyPairGeneratorSpi {
  private byte[] publicExponent;

  private int modulusBits;

  public org.conscrypt.OpenSSLRSAKeyPairGenerator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/security/KeyPairGeneratorSpi."<init>":()V
       4: aload_0
       5: iconst_3
       6: newarray       byte
       8: dup
       9: iconst_0
      10: iconst_1
      11: bastore
      12: dup
      13: iconst_1
      14: iconst_0
      15: bastore
      16: dup
      17: iconst_2
      18: iconst_1
      19: bastore
      20: putfield      #2                  // Field publicExponent:[B
      23: aload_0
      24: sipush        2048
      27: putfield      #3                  // Field modulusBits:I
      30: return

  public java.security.KeyPair generateKeyPair();
    Code:
       0: new           #4                  // class org/conscrypt/OpenSSLKey
       3: dup
       4: aload_0
       5: getfield      #3                  // Field modulusBits:I
       8: aload_0
       9: getfield      #2                  // Field publicExponent:[B
      12: invokestatic  #5                  // Method org/conscrypt/NativeCrypto.RSA_generate_key_ex:(I[B)J
      15: invokespecial #6                  // Method org/conscrypt/OpenSSLKey."<init>":(J)V
      18: astore_1
      19: aload_1
      20: invokestatic  #7                  // Method org/conscrypt/OpenSSLRSAPrivateKey.getInstance:(Lorg/conscrypt/OpenSSLKey;)Lorg/conscrypt/OpenSSLRSAPrivateKey;
      23: astore_2
      24: new           #8                  // class org/conscrypt/OpenSSLRSAPublicKey
      27: dup
      28: aload_1
      29: invokespecial #9                  // Method org/conscrypt/OpenSSLRSAPublicKey."<init>":(Lorg/conscrypt/OpenSSLKey;)V
      32: astore_3
      33: new           #10                 // class java/security/KeyPair
      36: dup
      37: aload_3
      38: aload_2
      39: invokespecial #11                 // Method java/security/KeyPair."<init>":(Ljava/security/PublicKey;Ljava/security/PrivateKey;)V
      42: areturn

  public void initialize(int, java.security.SecureRandom);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field modulusBits:I
       5: return

  public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException;
    Code:
       0: aload_1
       1: instanceof    #12                 // class java/security/spec/RSAKeyGenParameterSpec
       4: ifne          17
       7: new           #13                 // class java/security/InvalidAlgorithmParameterException
      10: dup
      11: ldc           #14                 // String Only RSAKeyGenParameterSpec supported
      13: invokespecial #15                 // Method java/security/InvalidAlgorithmParameterException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: checkcast     #12                 // class java/security/spec/RSAKeyGenParameterSpec
      21: astore_3
      22: aload_3
      23: invokevirtual #16                 // Method java/security/spec/RSAKeyGenParameterSpec.getPublicExponent:()Ljava/math/BigInteger;
      26: astore        4
      28: aload         4
      30: ifnull        42
      33: aload_0
      34: aload         4
      36: invokevirtual #17                 // Method java/math/BigInteger.toByteArray:()[B
      39: putfield      #2                  // Field publicExponent:[B
      42: aload_0
      43: aload_3
      44: invokevirtual #18                 // Method java/security/spec/RSAKeyGenParameterSpec.getKeysize:()I
      47: putfield      #3                  // Field modulusBits:I
      50: return
}
