Compiled from "AddressUtils.java"
final class org.conscrypt.AddressUtils {
  private static final java.lang.String IP_PATTERN;

  private static java.util.regex.Pattern ipPattern;

  private org.conscrypt.AddressUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static boolean isValidSniHostname(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: ldc           #2                  // String localhost
       9: invokevirtual #3                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      12: ifne          25
      15: aload_0
      16: bipush        46
      18: invokevirtual #4                  // Method java/lang/String.indexOf:(I)I
      21: iconst_m1
      22: if_icmpeq     54
      25: aload_0
      26: invokestatic  #5                  // Method isLiteralIpAddress:(Ljava/lang/String;)Z
      29: ifne          54
      32: aload_0
      33: ldc           #6                  // String .
      35: invokevirtual #7                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      38: ifne          54
      41: aload_0
      42: iconst_0
      43: invokevirtual #4                  // Method java/lang/String.indexOf:(I)I
      46: iconst_m1
      47: if_icmpne     54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn

  static boolean isLiteralIpAddress(java.lang.String);
    Code:
       0: getstatic     #8                  // Field ipPattern:Ljava/util/regex/Pattern;
       3: astore_1
       4: aload_1
       5: ifnonnull     18
       8: ldc           #10                 // String ^(?:(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9]))|(?i:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))(?:%.+)?$
      10: invokestatic  #11                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: dup
      14: astore_1
      15: putstatic     #8                  // Field ipPattern:Ljava/util/regex/Pattern;
      18: aload_1
      19: aload_0
      20: invokevirtual #12                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      23: invokevirtual #13                 // Method java/util/regex/Matcher.matches:()Z
      26: ireturn
}
