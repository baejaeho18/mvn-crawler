Compiled from "OpenSSLMac.java"
public abstract class org.conscrypt.OpenSSLMac extends javax.crypto.MacSpi {
  private org.conscrypt.NativeRef$HMAC_CTX ctx;

  private final long evp_md;

  private byte[] keyBytes;

  private final int size;

  private final byte[] singleByte;

  private org.conscrypt.OpenSSLMac(long, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javax/crypto/MacSpi."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #3                  // Field singleByte:[B
      11: aload_0
      12: lload_1
      13: putfield      #4                  // Field evp_md:J
      16: aload_0
      17: iload_3
      18: putfield      #5                  // Field size:I
      21: return

  protected int engineGetMacLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field size:I
       4: ireturn

  protected void engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
    Code:
       0: aload_1
       1: instanceof    #6                  // class javax/crypto/SecretKey
       4: ifne          17
       7: new           #7                  // class java/security/InvalidKeyException
      10: dup
      11: ldc           #8                  // String key must be a SecretKey
      13: invokespecial #9                  // Method java/security/InvalidKeyException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_2
      18: ifnull        31
      21: new           #10                 // class java/security/InvalidAlgorithmParameterException
      24: dup
      25: ldc           #11                 // String unknown parameter type
      27: invokespecial #12                 // Method java/security/InvalidAlgorithmParameterException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: aload_1
      33: invokeinterface #13,  1           // InterfaceMethod java/security/Key.getEncoded:()[B
      38: putfield      #14                 // Field keyBytes:[B
      41: aload_0
      42: getfield      #14                 // Field keyBytes:[B
      45: ifnonnull     58
      48: new           #7                  // class java/security/InvalidKeyException
      51: dup
      52: ldc           #15                 // String key cannot be encoded
      54: invokespecial #9                  // Method java/security/InvalidKeyException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: invokespecial #16                 // Method resetContext:()V
      62: return

  private final void resetContext();
    Code:
       0: new           #17                 // class org/conscrypt/NativeRef$HMAC_CTX
       3: dup
       4: invokestatic  #18                 // Method org/conscrypt/NativeCrypto.HMAC_CTX_new:()J
       7: invokespecial #19                 // Method org/conscrypt/NativeRef$HMAC_CTX."<init>":(J)V
      10: astore_1
      11: aload_0
      12: getfield      #14                 // Field keyBytes:[B
      15: ifnull        30
      18: aload_1
      19: aload_0
      20: getfield      #14                 // Field keyBytes:[B
      23: aload_0
      24: getfield      #4                  // Field evp_md:J
      27: invokestatic  #20                 // Method org/conscrypt/NativeCrypto.HMAC_Init_ex:(Lorg/conscrypt/NativeRef$HMAC_CTX;[BJ)V
      30: aload_0
      31: aload_1
      32: putfield      #21                 // Field ctx:Lorg/conscrypt/NativeRef$HMAC_CTX;
      35: return

  protected void engineUpdate(byte);
    Code:
       0: aload_0
       1: getfield      #3                  // Field singleByte:[B
       4: iconst_0
       5: iload_1
       6: bastore
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field singleByte:[B
      12: iconst_0
      13: iconst_1
      14: invokevirtual #22                 // Method engineUpdate:([BII)V
      17: return

  protected void engineUpdate(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #21                 // Field ctx:Lorg/conscrypt/NativeRef$HMAC_CTX;
       4: astore        4
       6: aload         4
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokestatic  #23                 // Method org/conscrypt/NativeCrypto.HMAC_Update:(Lorg/conscrypt/NativeRef$HMAC_CTX;[BII)V
      14: return

  protected void engineUpdate(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          8
       7: return
       8: aload_1
       9: invokevirtual #25                 // Method java/nio/ByteBuffer.isDirect:()Z
      12: ifne          21
      15: aload_0
      16: aload_1
      17: invokespecial #26                 // Method javax/crypto/MacSpi.engineUpdate:(Ljava/nio/ByteBuffer;)V
      20: return
      21: aload_1
      22: invokestatic  #27                 // Method org/conscrypt/NativeCrypto.getDirectBufferAddress:(Ljava/nio/Buffer;)J
      25: lstore_2
      26: lload_2
      27: lconst_0
      28: lcmp
      29: ifne          38
      32: aload_0
      33: aload_1
      34: invokespecial #26                 // Method javax/crypto/MacSpi.engineUpdate:(Ljava/nio/ByteBuffer;)V
      37: return
      38: aload_1
      39: invokevirtual #28                 // Method java/nio/ByteBuffer.position:()I
      42: istore        4
      44: iload         4
      46: ifge          59
      49: new           #29                 // class java/lang/RuntimeException
      52: dup
      53: ldc           #30                 // String Negative position
      55: invokespecial #31                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: lload_2
      60: iload         4
      62: i2l
      63: ladd
      64: lstore        5
      66: aload_1
      67: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
      70: istore        7
      72: iload         7
      74: ifge          87
      77: new           #29                 // class java/lang/RuntimeException
      80: dup
      81: ldc           #33                 // String Negative remaining amount
      83: invokespecial #31                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload_0
      88: getfield      #21                 // Field ctx:Lorg/conscrypt/NativeRef$HMAC_CTX;
      91: astore        8
      93: aload         8
      95: lload         5
      97: iload         7
      99: invokestatic  #34                 // Method org/conscrypt/NativeCrypto.HMAC_UpdateDirect:(Lorg/conscrypt/NativeRef$HMAC_CTX;JI)V
     102: aload_1
     103: iload         4
     105: iload         7
     107: iadd
     108: invokevirtual #35                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     111: pop
     112: return

  protected byte[] engineDoFinal();
    Code:
       0: aload_0
       1: getfield      #21                 // Field ctx:Lorg/conscrypt/NativeRef$HMAC_CTX;
       4: astore_1
       5: aload_1
       6: invokestatic  #36                 // Method org/conscrypt/NativeCrypto.HMAC_Final:(Lorg/conscrypt/NativeRef$HMAC_CTX;)[B
       9: astore_2
      10: aload_0
      11: invokespecial #16                 // Method resetContext:()V
      14: aload_2
      15: areturn

  protected void engineReset();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method resetContext:()V
       4: return

  org.conscrypt.OpenSSLMac(long, int, org.conscrypt.OpenSSLMac$1);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokespecial #1                  // Method "<init>":(JI)V
       6: return
}
