Compiled from "OpenSSLEvpCipherARC4.java"
public class org.conscrypt.OpenSSLEvpCipherARC4 extends org.conscrypt.OpenSSLEvpCipher {
  public org.conscrypt.OpenSSLEvpCipherARC4();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/conscrypt/OpenSSLCipher$Mode.ECB:Lorg/conscrypt/OpenSSLCipher$Mode;
       4: getstatic     #2                  // Field org/conscrypt/OpenSSLCipher$Padding.NOPADDING:Lorg/conscrypt/OpenSSLCipher$Padding;
       7: invokespecial #3                  // Method org/conscrypt/OpenSSLEvpCipher."<init>":(Lorg/conscrypt/OpenSSLCipher$Mode;Lorg/conscrypt/OpenSSLCipher$Padding;)V
      10: return

  java.lang.String getBaseCipherName();
    Code:
       0: ldc           #4                  // String ARCFOUR
       2: areturn

  java.lang.String getCipherName(int, org.conscrypt.OpenSSLCipher$Mode);
    Code:
       0: ldc           #5                  // String rc4
       2: areturn

  void checkSupportedKeySize(int) throws java.security.InvalidKeyException;
    Code:
       0: return

  void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode) throws java.security.NoSuchAlgorithmException;
    Code:
       0: aload_1
       1: getstatic     #6                  // Field org/conscrypt/OpenSSLCipher$Mode.NONE:Lorg/conscrypt/OpenSSLCipher$Mode;
       4: if_acmpeq     44
       7: aload_1
       8: getstatic     #1                  // Field org/conscrypt/OpenSSLCipher$Mode.ECB:Lorg/conscrypt/OpenSSLCipher$Mode;
      11: if_acmpeq     44
      14: new           #7                  // class java/security/NoSuchAlgorithmException
      17: dup
      18: new           #8                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #10                 // String Unsupported mode
      27: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #12                 // Method org/conscrypt/OpenSSLCipher$Mode.toString:()Ljava/lang/String;
      34: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #14                 // Method java/security/NoSuchAlgorithmException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: return

  void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding) throws javax.crypto.NoSuchPaddingException;
    Code:
       0: aload_1
       1: getstatic     #2                  // Field org/conscrypt/OpenSSLCipher$Padding.NOPADDING:Lorg/conscrypt/OpenSSLCipher$Padding;
       4: if_acmpeq     37
       7: new           #15                 // class javax/crypto/NoSuchPaddingException
      10: dup
      11: new           #8                  // class java/lang/StringBuilder
      14: dup
      15: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #16                 // String Unsupported padding
      20: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #17                 // Method org/conscrypt/OpenSSLCipher$Padding.toString:()Ljava/lang/String;
      27: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #18                 // Method javax/crypto/NoSuchPaddingException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: return

  int getCipherBlockSize();
    Code:
       0: iconst_0
       1: ireturn

  boolean supportsVariableSizeKey();
    Code:
       0: iconst_1
       1: ireturn
}
