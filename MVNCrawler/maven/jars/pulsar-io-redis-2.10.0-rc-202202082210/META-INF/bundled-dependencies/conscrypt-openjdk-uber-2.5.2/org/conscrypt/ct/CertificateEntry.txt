Compiled from "CertificateEntry.java"
public class org.conscrypt.ct.CertificateEntry {
  private final org.conscrypt.ct.CertificateEntry$LogEntryType entryType;

  private final byte[] issuerKeyHash;

  private final byte[] certificate;

  private org.conscrypt.ct.CertificateEntry(org.conscrypt.ct.CertificateEntry$LogEntryType, byte[], byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: getstatic     #2                  // Field org/conscrypt/ct/CertificateEntry$LogEntryType.PRECERT_ENTRY:Lorg/conscrypt/ct/CertificateEntry$LogEntryType;
       8: if_acmpne     25
      11: aload_3
      12: ifnonnull     25
      15: new           #3                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #4                  // String issuerKeyHash missing for precert entry.
      21: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_1
      26: getstatic     #6                  // Field org/conscrypt/ct/CertificateEntry$LogEntryType.X509_ENTRY:Lorg/conscrypt/ct/CertificateEntry$LogEntryType;
      29: if_acmpne     46
      32: aload_3
      33: ifnull        46
      36: new           #3                  // class java/lang/IllegalArgumentException
      39: dup
      40: ldc           #7                  // String unexpected issuerKeyHash for X509 entry.
      42: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_3
      47: ifnull        67
      50: aload_3
      51: arraylength
      52: bipush        32
      54: if_icmpeq     67
      57: new           #3                  // class java/lang/IllegalArgumentException
      60: dup
      61: ldc           #9                  // String issuerKeyHash must be 32 bytes long
      63: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: aload_1
      69: putfield      #10                 // Field entryType:Lorg/conscrypt/ct/CertificateEntry$LogEntryType;
      72: aload_0
      73: aload_3
      74: putfield      #11                 // Field issuerKeyHash:[B
      77: aload_0
      78: aload_2
      79: putfield      #12                 // Field certificate:[B
      82: return

  public static org.conscrypt.ct.CertificateEntry createForPrecertificate(byte[], byte[]);
    Code:
       0: new           #13                 // class org/conscrypt/ct/CertificateEntry
       3: dup
       4: getstatic     #2                  // Field org/conscrypt/ct/CertificateEntry$LogEntryType.PRECERT_ENTRY:Lorg/conscrypt/ct/CertificateEntry$LogEntryType;
       7: aload_0
       8: aload_1
       9: invokespecial #14                 // Method "<init>":(Lorg/conscrypt/ct/CertificateEntry$LogEntryType;[B[B)V
      12: areturn

  public static org.conscrypt.ct.CertificateEntry createForPrecertificate(org.conscrypt.OpenSSLX509Certificate, org.conscrypt.OpenSSLX509Certificate) throws java.security.cert.CertificateException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method org/conscrypt/OpenSSLX509Certificate.getNonCriticalExtensionOIDs:()Ljava/util/Set;
       4: ldc           #16                 // String 1.3.6.1.4.1.11129.2.4.2
       6: invokeinterface #17,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      11: ifne          24
      14: new           #18                 // class java/security/cert/CertificateException
      17: dup
      18: ldc           #19                 // String Certificate does not contain embedded signed timestamps
      20: invokespecial #20                 // Method java/security/cert/CertificateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: ldc           #16                 // String 1.3.6.1.4.1.11129.2.4.2
      27: invokevirtual #21                 // Method org/conscrypt/OpenSSLX509Certificate.withDeletedExtension:(Ljava/lang/String;)Lorg/conscrypt/OpenSSLX509Certificate;
      30: astore_2
      31: aload_2
      32: invokevirtual #22                 // Method org/conscrypt/OpenSSLX509Certificate.getTBSCertificate:()[B
      35: astore_3
      36: aload_1
      37: invokevirtual #23                 // Method org/conscrypt/OpenSSLX509Certificate.getPublicKey:()Ljava/security/PublicKey;
      40: invokeinterface #24,  1           // InterfaceMethod java/security/PublicKey.getEncoded:()[B
      45: astore        4
      47: ldc           #25                 // String SHA-256
      49: invokestatic  #26                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      52: astore        5
      54: aload         5
      56: aload         4
      58: invokevirtual #27                 // Method java/security/MessageDigest.update:([B)V
      61: aload         5
      63: invokevirtual #28                 // Method java/security/MessageDigest.digest:()[B
      66: astore        6
      68: aload_3
      69: aload         6
      71: invokestatic  #29                 // Method createForPrecertificate:([B[B)Lorg/conscrypt/ct/CertificateEntry;
      74: areturn
      75: astore_2
      76: new           #31                 // class java/lang/RuntimeException
      79: dup
      80: aload_2
      81: invokespecial #32                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      84: athrow
    Exception table:
       from    to  target type
           0    74    75   Class java/security/NoSuchAlgorithmException

  public static org.conscrypt.ct.CertificateEntry createForX509Certificate(byte[]);
    Code:
       0: new           #13                 // class org/conscrypt/ct/CertificateEntry
       3: dup
       4: getstatic     #6                  // Field org/conscrypt/ct/CertificateEntry$LogEntryType.X509_ENTRY:Lorg/conscrypt/ct/CertificateEntry$LogEntryType;
       7: aload_0
       8: aconst_null
       9: invokespecial #14                 // Method "<init>":(Lorg/conscrypt/ct/CertificateEntry$LogEntryType;[B[B)V
      12: areturn

  public static org.conscrypt.ct.CertificateEntry createForX509Certificate(java.security.cert.X509Certificate) throws java.security.cert.CertificateEncodingException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method java/security/cert/X509Certificate.getEncoded:()[B
       4: invokestatic  #34                 // Method createForX509Certificate:([B)Lorg/conscrypt/ct/CertificateEntry;
       7: areturn

  public org.conscrypt.ct.CertificateEntry$LogEntryType getEntryType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field entryType:Lorg/conscrypt/ct/CertificateEntry$LogEntryType;
       4: areturn

  public byte[] getCertificate();
    Code:
       0: aload_0
       1: getfield      #12                 // Field certificate:[B
       4: areturn

  public byte[] getIssuerKeyHash();
    Code:
       0: aload_0
       1: getfield      #11                 // Field issuerKeyHash:[B
       4: areturn

  public void encode(java.io.OutputStream) throws org.conscrypt.ct.SerializationException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #10                 // Field entryType:Lorg/conscrypt/ct/CertificateEntry$LogEntryType;
       5: invokevirtual #35                 // Method org/conscrypt/ct/CertificateEntry$LogEntryType.ordinal:()I
       8: i2l
       9: iconst_2
      10: invokestatic  #36                 // Method org/conscrypt/ct/Serialization.writeNumber:(Ljava/io/OutputStream;JI)V
      13: aload_0
      14: getfield      #10                 // Field entryType:Lorg/conscrypt/ct/CertificateEntry$LogEntryType;
      17: getstatic     #2                  // Field org/conscrypt/ct/CertificateEntry$LogEntryType.PRECERT_ENTRY:Lorg/conscrypt/ct/CertificateEntry$LogEntryType;
      20: if_acmpne     31
      23: aload_1
      24: aload_0
      25: getfield      #11                 // Field issuerKeyHash:[B
      28: invokestatic  #37                 // Method org/conscrypt/ct/Serialization.writeFixedBytes:(Ljava/io/OutputStream;[B)V
      31: aload_1
      32: aload_0
      33: getfield      #12                 // Field certificate:[B
      36: iconst_3
      37: invokestatic  #38                 // Method org/conscrypt/ct/Serialization.writeVariableBytes:(Ljava/io/OutputStream;[BI)V
      40: return
}
