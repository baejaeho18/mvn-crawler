Compiled from "FileClientSessionCache.java"
public final class org.conscrypt.FileClientSessionCache {
  private static final java.util.logging.Logger logger;

  public static final int MAX_SIZE;

  static final java.util.Map<java.io.File, org.conscrypt.FileClientSessionCache$Impl> caches;

  private org.conscrypt.FileClientSessionCache();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static synchronized org.conscrypt.SSLClientSessionCache usingDirectory(java.io.File) throws java.io.IOException;
    Code:
       0: getstatic     #3                  // Field caches:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #5                  // class org/conscrypt/FileClientSessionCache$Impl
      12: astore_1
      13: aload_1
      14: ifnonnull     37
      17: new           #5                  // class org/conscrypt/FileClientSessionCache$Impl
      20: dup
      21: aload_0
      22: invokespecial #6                  // Method org/conscrypt/FileClientSessionCache$Impl."<init>":(Ljava/io/File;)V
      25: astore_1
      26: getstatic     #3                  // Field caches:Ljava/util/Map;
      29: aload_0
      30: aload_1
      31: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_1
      38: areturn

  static synchronized void reset();
    Code:
       0: getstatic     #3                  // Field caches:Ljava/util/Map;
       3: invokeinterface #8,  1            // InterfaceMethod java/util/Map.clear:()V
       8: return

  static java.util.logging.Logger access$000();
    Code:
       0: getstatic     #1                  // Field logger:Ljava/util/logging/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #9                  // class org/conscrypt/FileClientSessionCache
       2: invokevirtual #10                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #11                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #1                  // Field logger:Ljava/util/logging/Logger;
      11: new           #12                 // class java/util/HashMap
      14: dup
      15: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      18: putstatic     #3                  // Field caches:Ljava/util/Map;
      21: return
}
