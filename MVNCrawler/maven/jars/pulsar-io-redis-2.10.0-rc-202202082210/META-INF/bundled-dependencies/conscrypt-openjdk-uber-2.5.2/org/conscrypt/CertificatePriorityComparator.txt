Compiled from "CertificatePriorityComparator.java"
public final class org.conscrypt.CertificatePriorityComparator implements java.util.Comparator<java.security.cert.X509Certificate> {
  private static final java.util.Map<java.lang.String, java.lang.Integer> ALGORITHM_OID_PRIORITY_MAP;

  private static final java.lang.Integer PRIORITY_MD5;

  private static final java.lang.Integer PRIORITY_SHA1;

  private static final java.lang.Integer PRIORITY_SHA224;

  private static final java.lang.Integer PRIORITY_SHA256;

  private static final java.lang.Integer PRIORITY_SHA384;

  private static final java.lang.Integer PRIORITY_SHA512;

  private static final java.lang.Integer PRIORITY_UNKNOWN;

  public org.conscrypt.CertificatePriorityComparator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public int compare(java.security.cert.X509Certificate, java.security.cert.X509Certificate);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method java/security/cert/X509Certificate.getSubjectDN:()Ljava/security/Principal;
       4: aload_1
       5: invokevirtual #3                  // Method java/security/cert/X509Certificate.getIssuerDN:()Ljava/security/Principal;
       8: invokeinterface #4,  2            // InterfaceMethod java/security/Principal.equals:(Ljava/lang/Object;)Z
      13: istore        4
      15: aload_2
      16: invokevirtual #2                  // Method java/security/cert/X509Certificate.getSubjectDN:()Ljava/security/Principal;
      19: aload_2
      20: invokevirtual #3                  // Method java/security/cert/X509Certificate.getIssuerDN:()Ljava/security/Principal;
      23: invokeinterface #4,  2            // InterfaceMethod java/security/Principal.equals:(Ljava/lang/Object;)Z
      28: istore        5
      30: iload         4
      32: iload         5
      34: if_icmpeq     48
      37: iload         5
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_m1
      47: ireturn
      48: aload_0
      49: aload_2
      50: aload_1
      51: invokespecial #5                  // Method compareStrength:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)I
      54: istore_3
      55: iload_3
      56: ifeq          61
      59: iload_3
      60: ireturn
      61: aload_1
      62: invokevirtual #6                  // Method java/security/cert/X509Certificate.getNotAfter:()Ljava/util/Date;
      65: astore        6
      67: aload_2
      68: invokevirtual #6                  // Method java/security/cert/X509Certificate.getNotAfter:()Ljava/util/Date;
      71: astore        7
      73: aload         7
      75: aload         6
      77: invokevirtual #7                  // Method java/util/Date.compareTo:(Ljava/util/Date;)I
      80: istore_3
      81: iload_3
      82: ifeq          87
      85: iload_3
      86: ireturn
      87: aload_1
      88: invokevirtual #8                  // Method java/security/cert/X509Certificate.getNotBefore:()Ljava/util/Date;
      91: astore        8
      93: aload_2
      94: invokevirtual #8                  // Method java/security/cert/X509Certificate.getNotBefore:()Ljava/util/Date;
      97: astore        9
      99: aload         9
     101: aload         8
     103: invokevirtual #7                  // Method java/util/Date.compareTo:(Ljava/util/Date;)I
     106: ireturn

  private int compareStrength(java.security.cert.X509Certificate, java.security.cert.X509Certificate);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/security/cert/X509Certificate.getPublicKey:()Ljava/security/PublicKey;
       4: astore        4
       6: aload_2
       7: invokevirtual #9                  // Method java/security/cert/X509Certificate.getPublicKey:()Ljava/security/PublicKey;
      10: astore        5
      12: aload_0
      13: aload         4
      15: aload         5
      17: invokespecial #10                 // Method compareKeyAlgorithm:(Ljava/security/PublicKey;Ljava/security/PublicKey;)I
      20: istore_3
      21: iload_3
      22: ifeq          27
      25: iload_3
      26: ireturn
      27: aload_0
      28: aload         4
      30: aload         5
      32: invokespecial #11                 // Method compareKeySize:(Ljava/security/PublicKey;Ljava/security/PublicKey;)I
      35: istore_3
      36: iload_3
      37: ifeq          42
      40: iload_3
      41: ireturn
      42: aload_0
      43: aload_1
      44: aload_2
      45: invokespecial #12                 // Method compareSignatureAlgorithm:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)I
      48: ireturn

  private int compareKeyAlgorithm(java.security.PublicKey, java.security.PublicKey);
    Code:
       0: aload_1
       1: invokeinterface #13,  1           // InterfaceMethod java/security/PublicKey.getAlgorithm:()Ljava/lang/String;
       6: astore_3
       7: aload_2
       8: invokeinterface #13,  1           // InterfaceMethod java/security/PublicKey.getAlgorithm:()Ljava/lang/String;
      13: astore        4
      15: aload_3
      16: aload         4
      18: invokevirtual #14                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      21: ifeq          26
      24: iconst_0
      25: ireturn
      26: ldc           #15                 // String EC
      28: aload_3
      29: invokevirtual #14                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iconst_m1
      38: ireturn

  private int compareKeySize(java.security.PublicKey, java.security.PublicKey);
    Code:
       0: aload_1
       1: invokeinterface #13,  1           // InterfaceMethod java/security/PublicKey.getAlgorithm:()Ljava/lang/String;
       6: astore_3
       7: aload_2
       8: invokeinterface #13,  1           // InterfaceMethod java/security/PublicKey.getAlgorithm:()Ljava/lang/String;
      13: astore        4
      15: aload_3
      16: aload         4
      18: invokevirtual #14                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      21: ifne          34
      24: new           #16                 // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #17                 // String Keys are not of the same type
      30: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: invokespecial #19                 // Method getKeySize:(Ljava/security/PublicKey;)I
      39: istore        5
      41: aload_0
      42: aload_2
      43: invokespecial #19                 // Method getKeySize:(Ljava/security/PublicKey;)I
      46: istore        6
      48: iload         5
      50: iload         6
      52: isub
      53: ireturn

  private int getKeySize(java.security.PublicKey);
    Code:
       0: aload_1
       1: instanceof    #20                 // class java/security/interfaces/ECPublicKey
       4: ifeq          28
       7: aload_1
       8: checkcast     #20                 // class java/security/interfaces/ECPublicKey
      11: invokeinterface #21,  1           // InterfaceMethod java/security/interfaces/ECPublicKey.getParams:()Ljava/security/spec/ECParameterSpec;
      16: invokevirtual #22                 // Method java/security/spec/ECParameterSpec.getCurve:()Ljava/security/spec/EllipticCurve;
      19: invokevirtual #23                 // Method java/security/spec/EllipticCurve.getField:()Ljava/security/spec/ECField;
      22: invokeinterface #24,  1           // InterfaceMethod java/security/spec/ECField.getFieldSize:()I
      27: ireturn
      28: aload_1
      29: instanceof    #25                 // class java/security/interfaces/RSAPublicKey
      32: ifeq          48
      35: aload_1
      36: checkcast     #25                 // class java/security/interfaces/RSAPublicKey
      39: invokeinterface #26,  1           // InterfaceMethod java/security/interfaces/RSAPublicKey.getModulus:()Ljava/math/BigInteger;
      44: invokevirtual #27                 // Method java/math/BigInteger.bitLength:()I
      47: ireturn
      48: new           #16                 // class java/lang/IllegalArgumentException
      51: dup
      52: new           #28                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #30                 // String Unsupported public key type:
      61: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_1
      65: invokevirtual #32                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      68: invokevirtual #33                 // Method java/lang/Class.getName:()Ljava/lang/String;
      71: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow

  private int compareSignatureAlgorithm(java.security.cert.X509Certificate, java.security.cert.X509Certificate);
    Code:
       0: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
       3: aload_1
       4: invokevirtual #36                 // Method java/security/cert/X509Certificate.getSigAlgOID:()Ljava/lang/String;
       7: invokeinterface #37,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #38                 // class java/lang/Integer
      15: astore_3
      16: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
      19: aload_2
      20: invokevirtual #36                 // Method java/security/cert/X509Certificate.getSigAlgOID:()Ljava/lang/String;
      23: invokeinterface #37,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #38                 // class java/lang/Integer
      31: astore        4
      33: aload_3
      34: ifnonnull     41
      37: getstatic     #39                 // Field PRIORITY_UNKNOWN:Ljava/lang/Integer;
      40: astore_3
      41: aload         4
      43: ifnonnull     51
      46: getstatic     #39                 // Field PRIORITY_UNKNOWN:Ljava/lang/Integer;
      49: astore        4
      51: aload         4
      53: invokevirtual #40                 // Method java/lang/Integer.intValue:()I
      56: aload_3
      57: invokevirtual #40                 // Method java/lang/Integer.intValue:()I
      60: isub
      61: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #41                 // class java/security/cert/X509Certificate
       5: aload_2
       6: checkcast     #41                 // class java/security/cert/X509Certificate
       9: invokevirtual #42                 // Method compare:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)I
      12: ireturn

  static {};
    Code:
       0: bipush        6
       2: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putstatic     #44                 // Field PRIORITY_MD5:Ljava/lang/Integer;
       8: iconst_5
       9: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: putstatic     #45                 // Field PRIORITY_SHA1:Ljava/lang/Integer;
      15: iconst_4
      16: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: putstatic     #46                 // Field PRIORITY_SHA224:Ljava/lang/Integer;
      22: iconst_3
      23: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: putstatic     #47                 // Field PRIORITY_SHA256:Ljava/lang/Integer;
      29: iconst_2
      30: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: putstatic     #48                 // Field PRIORITY_SHA384:Ljava/lang/Integer;
      36: iconst_1
      37: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: putstatic     #49                 // Field PRIORITY_SHA512:Ljava/lang/Integer;
      43: iconst_m1
      44: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: putstatic     #39                 // Field PRIORITY_UNKNOWN:Ljava/lang/Integer;
      50: new           #50                 // class java/util/HashMap
      53: dup
      54: invokespecial #51                 // Method java/util/HashMap."<init>":()V
      57: putstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
      60: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
      63: ldc           #52                 // String 1.2.840.113549.1.1.13
      65: getstatic     #49                 // Field PRIORITY_SHA512:Ljava/lang/Integer;
      68: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
      77: ldc           #54                 // String 1.2.840.113549.1.1.12
      79: getstatic     #48                 // Field PRIORITY_SHA384:Ljava/lang/Integer;
      82: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
      91: ldc           #55                 // String 1.2.840.113549.1.1.11
      93: getstatic     #47                 // Field PRIORITY_SHA256:Ljava/lang/Integer;
      96: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
     105: ldc           #56                 // String 1.2.840.113549.1.1.14
     107: getstatic     #46                 // Field PRIORITY_SHA224:Ljava/lang/Integer;
     110: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     115: pop
     116: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
     119: ldc           #57                 // String 1.2.840.113549.1.1.5
     121: getstatic     #45                 // Field PRIORITY_SHA1:Ljava/lang/Integer;
     124: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
     133: ldc           #58                 // String 1.2.840.113549.1.1.4
     135: getstatic     #44                 // Field PRIORITY_MD5:Ljava/lang/Integer;
     138: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     143: pop
     144: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
     147: ldc           #59                 // String 1.2.840.10045.4.3.4
     149: getstatic     #49                 // Field PRIORITY_SHA512:Ljava/lang/Integer;
     152: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     157: pop
     158: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
     161: ldc           #60                 // String 1.2.840.10045.4.3.3
     163: getstatic     #48                 // Field PRIORITY_SHA384:Ljava/lang/Integer;
     166: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     171: pop
     172: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
     175: ldc           #61                 // String 1.2.840.10045.4.3.2
     177: getstatic     #47                 // Field PRIORITY_SHA256:Ljava/lang/Integer;
     180: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     185: pop
     186: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
     189: ldc           #62                 // String 1.2.840.10045.4.3.1
     191: getstatic     #46                 // Field PRIORITY_SHA224:Ljava/lang/Integer;
     194: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     199: pop
     200: getstatic     #35                 // Field ALGORITHM_OID_PRIORITY_MAP:Ljava/util/Map;
     203: ldc           #63                 // String 1.2.840.10045.4.1
     205: getstatic     #45                 // Field PRIORITY_SHA1:Ljava/lang/Integer;
     208: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     213: pop
     214: return
}
