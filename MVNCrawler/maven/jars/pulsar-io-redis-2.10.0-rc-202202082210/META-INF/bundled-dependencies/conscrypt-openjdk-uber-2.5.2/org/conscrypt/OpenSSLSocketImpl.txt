Compiled from "OpenSSLSocketImpl.java"
public abstract class org.conscrypt.OpenSSLSocketImpl extends org.conscrypt.AbstractConscryptSocket {
  org.conscrypt.OpenSSLSocketImpl() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/conscrypt/AbstractConscryptSocket."<init>":()V
       4: return

  org.conscrypt.OpenSSLSocketImpl(java.lang.String, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method org/conscrypt/AbstractConscryptSocket."<init>":(Ljava/lang/String;I)V
       6: return

  org.conscrypt.OpenSSLSocketImpl(java.net.InetAddress, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #3                  // Method org/conscrypt/AbstractConscryptSocket."<init>":(Ljava/net/InetAddress;I)V
       6: return

  org.conscrypt.OpenSSLSocketImpl(java.lang.String, int, java.net.InetAddress, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: invokespecial #4                  // Method org/conscrypt/AbstractConscryptSocket."<init>":(Ljava/lang/String;ILjava/net/InetAddress;I)V
       9: return

  org.conscrypt.OpenSSLSocketImpl(java.net.InetAddress, int, java.net.InetAddress, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: invokespecial #5                  // Method org/conscrypt/AbstractConscryptSocket."<init>":(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V
       9: return

  org.conscrypt.OpenSSLSocketImpl(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokespecial #6                  // Method org/conscrypt/AbstractConscryptSocket."<init>":(Ljava/net/Socket;Ljava/lang/String;IZ)V
       9: return

  public java.lang.String getHostname();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method org/conscrypt/AbstractConscryptSocket.getHostname:()Ljava/lang/String;
       4: areturn

  public void setHostname(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/conscrypt/AbstractConscryptSocket.setHostname:(Ljava/lang/String;)V
       5: return

  public java.lang.String getHostnameOrIP();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/conscrypt/AbstractConscryptSocket.getHostnameOrIP:()Ljava/lang/String;
       4: areturn

  public java.io.FileDescriptor getFileDescriptor$();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method org/conscrypt/AbstractConscryptSocket.getFileDescriptor$:()Ljava/io/FileDescriptor;
       4: areturn

  public void setSoWriteTimeout(int) throws java.net.SocketException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #11                 // Method org/conscrypt/AbstractConscryptSocket.setSoWriteTimeout:(I)V
       5: return

  public int getSoWriteTimeout() throws java.net.SocketException;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method org/conscrypt/AbstractConscryptSocket.getSoWriteTimeout:()I
       4: ireturn

  public void setHandshakeTimeout(int) throws java.net.SocketException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #13                 // Method org/conscrypt/AbstractConscryptSocket.setHandshakeTimeout:(I)V
       5: return

  public abstract javax.net.ssl.SSLSession getHandshakeSession();

  public abstract void setUseSessionTickets(boolean);

  public abstract void setChannelIdEnabled(boolean);

  public abstract byte[] getChannelId() throws javax.net.ssl.SSLException;

  public abstract void setChannelIdPrivateKey(java.security.PrivateKey);

  public final byte[] getNpnSelectedProtocol();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method org/conscrypt/AbstractConscryptSocket.getNpnSelectedProtocol:()[B
       4: areturn

  public final void setNpnProtocols(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/conscrypt/AbstractConscryptSocket.setNpnProtocols:([B)V
       5: return

  public final void setAlpnProtocols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: getstatic     #16                 // Field org/conscrypt/EmptyArray.STRING:[Ljava/lang/String;
       8: goto          12
      11: aload_1
      12: invokevirtual #17                 // Method setApplicationProtocols:([Ljava/lang/String;)V
      15: return

  public final byte[] getAlpnSelectedProtocol();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getApplicationProtocol:()Ljava/lang/String;
       4: invokestatic  #19                 // Method org/conscrypt/SSLUtils.toProtocolBytes:(Ljava/lang/String;)[B
       7: areturn

  public final void setAlpnProtocols(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: getstatic     #20                 // Field org/conscrypt/EmptyArray.BYTE:[B
       8: goto          12
      11: aload_1
      12: invokestatic  #21                 // Method org/conscrypt/SSLUtils.decodeProtocols:([B)[Ljava/lang/String;
      15: invokevirtual #17                 // Method setApplicationProtocols:([Ljava/lang/String;)V
      18: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method org/conscrypt/AbstractConscryptSocket.toString:()Ljava/lang/String;
       4: areturn

  public void setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokespecial #23                 // Method org/conscrypt/AbstractConscryptSocket.setPerformancePreferences:(III)V
       7: return

  public boolean isOutputShutdown();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method org/conscrypt/AbstractConscryptSocket.isOutputShutdown:()Z
       4: ireturn

  public boolean isInputShutdown();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method org/conscrypt/AbstractConscryptSocket.isInputShutdown:()Z
       4: ireturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/conscrypt/AbstractConscryptSocket.isClosed:()Z
       4: ireturn

  public boolean isBound();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method org/conscrypt/AbstractConscryptSocket.isBound:()Z
       4: ireturn

  public boolean isConnected();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method org/conscrypt/AbstractConscryptSocket.isConnected:()Z
       4: ireturn

  public void shutdownOutput() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #29                 // Method org/conscrypt/AbstractConscryptSocket.shutdownOutput:()V
       4: return

  public void shutdownInput() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method org/conscrypt/AbstractConscryptSocket.shutdownInput:()V
       4: return

  public boolean getReuseAddress() throws java.net.SocketException;
    Code:
       0: aload_0
       1: invokespecial #31                 // Method org/conscrypt/AbstractConscryptSocket.getReuseAddress:()Z
       4: ireturn

  public void setReuseAddress(boolean) throws java.net.SocketException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #32                 // Method org/conscrypt/AbstractConscryptSocket.setReuseAddress:(Z)V
       5: return

  public int getTrafficClass() throws java.net.SocketException;
    Code:
       0: aload_0
       1: invokespecial #33                 // Method org/conscrypt/AbstractConscryptSocket.getTrafficClass:()I
       4: ireturn

  public void setTrafficClass(int) throws java.net.SocketException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #34                 // Method org/conscrypt/AbstractConscryptSocket.setTrafficClass:(I)V
       5: return

  public boolean getKeepAlive() throws java.net.SocketException;
    Code:
       0: aload_0
       1: invokespecial #35                 // Method org/conscrypt/AbstractConscryptSocket.getKeepAlive:()Z
       4: ireturn

  public void setKeepAlive(boolean) throws java.net.SocketException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #36                 // Method org/conscrypt/AbstractConscryptSocket.setKeepAlive:(Z)V
       5: return

  public int getReceiveBufferSize() throws java.net.SocketException;
    Code:
       0: aload_0
       1: invokespecial #37                 // Method org/conscrypt/AbstractConscryptSocket.getReceiveBufferSize:()I
       4: ireturn

  public void setReceiveBufferSize(int) throws java.net.SocketException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #38                 // Method org/conscrypt/AbstractConscryptSocket.setReceiveBufferSize:(I)V
       5: return

  public int getSendBufferSize() throws java.net.SocketException;
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/conscrypt/AbstractConscryptSocket.getSendBufferSize:()I
       4: ireturn

  public void setSendBufferSize(int) throws java.net.SocketException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #40                 // Method org/conscrypt/AbstractConscryptSocket.setSendBufferSize:(I)V
       5: return

  public int getSoLinger() throws java.net.SocketException;
    Code:
       0: aload_0
       1: invokespecial #41                 // Method org/conscrypt/AbstractConscryptSocket.getSoLinger:()I
       4: ireturn

  public void setSoLinger(boolean, int) throws java.net.SocketException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #42                 // Method org/conscrypt/AbstractConscryptSocket.setSoLinger:(ZI)V
       6: return

  public boolean getTcpNoDelay() throws java.net.SocketException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method org/conscrypt/AbstractConscryptSocket.getTcpNoDelay:()Z
       4: ireturn

  public void setTcpNoDelay(boolean) throws java.net.SocketException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #44                 // Method org/conscrypt/AbstractConscryptSocket.setTcpNoDelay:(Z)V
       5: return

  public java.io.OutputStream getOutputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #45                 // Method org/conscrypt/AbstractConscryptSocket.getOutputStream:()Ljava/io/OutputStream;
       4: areturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #46                 // Method org/conscrypt/AbstractConscryptSocket.getInputStream:()Ljava/io/InputStream;
       4: areturn

  public java.nio.channels.SocketChannel getChannel();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method org/conscrypt/AbstractConscryptSocket.getChannel:()Ljava/nio/channels/SocketChannel;
       4: areturn

  public boolean getOOBInline() throws java.net.SocketException;
    Code:
       0: aload_0
       1: invokespecial #48                 // Method org/conscrypt/AbstractConscryptSocket.getOOBInline:()Z
       4: ireturn

  public void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #49                 // Method org/conscrypt/AbstractConscryptSocket.removeHandshakeCompletedListener:(Ljavax/net/ssl/HandshakeCompletedListener;)V
       5: return

  public void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #50                 // Method org/conscrypt/AbstractConscryptSocket.addHandshakeCompletedListener:(Ljavax/net/ssl/HandshakeCompletedListener;)V
       5: return

  public java.net.SocketAddress getLocalSocketAddress();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method org/conscrypt/AbstractConscryptSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
       4: areturn

  public java.net.SocketAddress getRemoteSocketAddress();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method org/conscrypt/AbstractConscryptSocket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
       4: areturn

  public int getLocalPort();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method org/conscrypt/AbstractConscryptSocket.getLocalPort:()I
       4: ireturn

  public java.net.InetAddress getLocalAddress();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method org/conscrypt/AbstractConscryptSocket.getLocalAddress:()Ljava/net/InetAddress;
       4: areturn

  public java.net.InetAddress getInetAddress();
    Code:
       0: aload_0
       1: invokespecial #55                 // Method org/conscrypt/AbstractConscryptSocket.getInetAddress:()Ljava/net/InetAddress;
       4: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #56                 // Method org/conscrypt/AbstractConscryptSocket.close:()V
       4: return

  public void bind(java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #57                 // Method org/conscrypt/AbstractConscryptSocket.bind:(Ljava/net/SocketAddress;)V
       5: return
}
