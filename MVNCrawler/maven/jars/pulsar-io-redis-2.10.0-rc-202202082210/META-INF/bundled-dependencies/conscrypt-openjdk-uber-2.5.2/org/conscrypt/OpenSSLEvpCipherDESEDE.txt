Compiled from "OpenSSLEvpCipherDESEDE.java"
public abstract class org.conscrypt.OpenSSLEvpCipherDESEDE extends org.conscrypt.OpenSSLEvpCipher {
  private static final int DES_BLOCK_SIZE;

  org.conscrypt.OpenSSLEvpCipherDESEDE(org.conscrypt.OpenSSLCipher$Mode, org.conscrypt.OpenSSLCipher$Padding);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/conscrypt/OpenSSLEvpCipher."<init>":(Lorg/conscrypt/OpenSSLCipher$Mode;Lorg/conscrypt/OpenSSLCipher$Padding;)V
       6: return

  java.lang.String getBaseCipherName();
    Code:
       0: ldc           #2                  // String DESede
       2: areturn

  java.lang.String getCipherName(int, org.conscrypt.OpenSSLCipher$Mode);
    Code:
       0: iload_1
       1: bipush        16
       3: if_icmpne     12
       6: ldc           #3                  // String des-ede
       8: astore_3
       9: goto          15
      12: ldc           #4                  // String des-ede3
      14: astore_3
      15: new           #5                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      22: aload_3
      23: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #8                  // String -
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #9                  // Method org/conscrypt/OpenSSLCipher$Mode.toString:()Ljava/lang/String;
      35: getstatic     #10                 // Field java/util/Locale.US:Ljava/util/Locale;
      38: invokevirtual #11                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      41: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: areturn

  void checkSupportedKeySize(int) throws java.security.InvalidKeyException;
    Code:
       0: iload_1
       1: bipush        16
       3: if_icmpeq     22
       6: iload_1
       7: bipush        24
       9: if_icmpeq     22
      12: new           #13                 // class java/security/InvalidKeyException
      15: dup
      16: ldc           #14                 // String key size must be 128 or 192 bits
      18: invokespecial #15                 // Method java/security/InvalidKeyException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: return

  void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode) throws java.security.NoSuchAlgorithmException;
    Code:
       0: aload_1
       1: getstatic     #16                 // Field org/conscrypt/OpenSSLCipher$Mode.CBC:Lorg/conscrypt/OpenSSLCipher$Mode;
       4: if_acmpeq     37
       7: new           #17                 // class java/security/NoSuchAlgorithmException
      10: dup
      11: new           #5                  // class java/lang/StringBuilder
      14: dup
      15: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #18                 // String Unsupported mode
      20: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #9                  // Method org/conscrypt/OpenSSLCipher$Mode.toString:()Ljava/lang/String;
      27: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #19                 // Method java/security/NoSuchAlgorithmException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: return

  void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding) throws javax.crypto.NoSuchPaddingException;
    Code:
       0: getstatic     #20                 // Field org/conscrypt/OpenSSLEvpCipherDESEDE$1.$SwitchMap$org$conscrypt$OpenSSLCipher$Padding:[I
       3: aload_1
       4: invokevirtual #21                 // Method org/conscrypt/OpenSSLCipher$Padding.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 36
               default: 37
          }
      36: return
      37: new           #22                 // class javax/crypto/NoSuchPaddingException
      40: dup
      41: new           #5                  // class java/lang/StringBuilder
      44: dup
      45: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #23                 // String Unsupported padding
      50: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: invokevirtual #24                 // Method org/conscrypt/OpenSSLCipher$Padding.toString:()Ljava/lang/String;
      57: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #25                 // Method javax/crypto/NoSuchPaddingException."<init>":(Ljava/lang/String;)V
      66: athrow

  int getCipherBlockSize();
    Code:
       0: bipush        8
       2: ireturn
}
