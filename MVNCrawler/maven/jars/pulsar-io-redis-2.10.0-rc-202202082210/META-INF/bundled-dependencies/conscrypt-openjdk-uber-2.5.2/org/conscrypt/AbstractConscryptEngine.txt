Compiled from "AbstractConscryptEngine.java"
abstract class org.conscrypt.AbstractConscryptEngine extends javax.net.ssl.SSLEngine {
  org.conscrypt.AbstractConscryptEngine();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/net/ssl/SSLEngine."<init>":()V
       4: return

  abstract void setBufferAllocator(org.conscrypt.BufferAllocator);

  abstract int maxSealOverhead();

  abstract void setChannelIdEnabled(boolean);

  abstract byte[] getChannelId() throws javax.net.ssl.SSLException;

  abstract void setChannelIdPrivateKey(java.security.PrivateKey);

  abstract void setHandshakeListener(org.conscrypt.HandshakeListener);

  abstract void setHostname(java.lang.String);

  abstract java.lang.String getHostname();

  public abstract java.lang.String getPeerHost();

  public abstract int getPeerPort();

  public final javax.net.ssl.SSLSession getHandshakeSession();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method handshakeSession:()Ljavax/net/ssl/SSLSession;
       4: areturn

  abstract javax.net.ssl.SSLSession handshakeSession();

  public abstract javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.net.ssl.SSLException;

  public abstract javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[]) throws javax.net.ssl.SSLException;

  public abstract javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int) throws javax.net.ssl.SSLException;

  abstract javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[], java.nio.ByteBuffer[]) throws javax.net.ssl.SSLException;

  abstract javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer[], int, int) throws javax.net.ssl.SSLException;

  public abstract javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.net.ssl.SSLException;

  public abstract javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer) throws javax.net.ssl.SSLException;

  abstract void setUseSessionTickets(boolean);

  abstract void setApplicationProtocols(java.lang.String[]);

  abstract java.lang.String[] getApplicationProtocols();

  public abstract java.lang.String getApplicationProtocol();

  public abstract java.lang.String getHandshakeApplicationProtocol();

  abstract void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelector);

  abstract byte[] getTlsUnique();

  abstract byte[] exportKeyingMaterial(java.lang.String, byte[], int) throws javax.net.ssl.SSLException;
}
