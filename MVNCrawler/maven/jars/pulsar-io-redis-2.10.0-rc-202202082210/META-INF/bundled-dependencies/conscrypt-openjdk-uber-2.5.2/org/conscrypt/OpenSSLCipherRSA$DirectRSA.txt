Compiled from "OpenSSLCipherRSA.java"
public abstract class org.conscrypt.OpenSSLCipherRSA$DirectRSA extends org.conscrypt.OpenSSLCipherRSA {
  public org.conscrypt.OpenSSLCipherRSA$DirectRSA(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method org/conscrypt/OpenSSLCipherRSA."<init>":(I)V
       5: return

  int doCryptoOperation(byte[], byte[]) throws javax.crypto.BadPaddingException, javax.crypto.IllegalBlockSizeException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field encrypting:Z
       4: ifeq          58
       7: aload_0
       8: getfield      #3                  // Field usingPrivateKey:Z
      11: ifeq          36
      14: aload_1
      15: arraylength
      16: aload_1
      17: aload_2
      18: aload_0
      19: getfield      #4                  // Field key:Lorg/conscrypt/OpenSSLKey;
      22: invokevirtual #5                  // Method org/conscrypt/OpenSSLKey.getNativeRef:()Lorg/conscrypt/NativeRef$EVP_PKEY;
      25: aload_0
      26: getfield      #6                  // Field padding:I
      29: invokestatic  #7                  // Method org/conscrypt/NativeCrypto.RSA_private_encrypt:(I[B[BLorg/conscrypt/NativeRef$EVP_PKEY;I)I
      32: istore_3
      33: goto          131
      36: aload_1
      37: arraylength
      38: aload_1
      39: aload_2
      40: aload_0
      41: getfield      #4                  // Field key:Lorg/conscrypt/OpenSSLKey;
      44: invokevirtual #5                  // Method org/conscrypt/OpenSSLKey.getNativeRef:()Lorg/conscrypt/NativeRef$EVP_PKEY;
      47: aload_0
      48: getfield      #6                  // Field padding:I
      51: invokestatic  #8                  // Method org/conscrypt/NativeCrypto.RSA_public_encrypt:(I[B[BLorg/conscrypt/NativeRef$EVP_PKEY;I)I
      54: istore_3
      55: goto          131
      58: aload_0
      59: getfield      #3                  // Field usingPrivateKey:Z
      62: ifeq          87
      65: aload_1
      66: arraylength
      67: aload_1
      68: aload_2
      69: aload_0
      70: getfield      #4                  // Field key:Lorg/conscrypt/OpenSSLKey;
      73: invokevirtual #5                  // Method org/conscrypt/OpenSSLKey.getNativeRef:()Lorg/conscrypt/NativeRef$EVP_PKEY;
      76: aload_0
      77: getfield      #6                  // Field padding:I
      80: invokestatic  #9                  // Method org/conscrypt/NativeCrypto.RSA_private_decrypt:(I[B[BLorg/conscrypt/NativeRef$EVP_PKEY;I)I
      83: istore_3
      84: goto          106
      87: aload_1
      88: arraylength
      89: aload_1
      90: aload_2
      91: aload_0
      92: getfield      #4                  // Field key:Lorg/conscrypt/OpenSSLKey;
      95: invokevirtual #5                  // Method org/conscrypt/OpenSSLKey.getNativeRef:()Lorg/conscrypt/NativeRef$EVP_PKEY;
      98: aload_0
      99: getfield      #6                  // Field padding:I
     102: invokestatic  #10                 // Method org/conscrypt/NativeCrypto.RSA_public_decrypt:(I[B[BLorg/conscrypt/NativeRef$EVP_PKEY;I)I
     105: istore_3
     106: goto          131
     109: astore        4
     111: new           #12                 // class javax/crypto/IllegalBlockSizeException
     114: dup
     115: invokespecial #13                 // Method javax/crypto/IllegalBlockSizeException."<init>":()V
     118: astore        5
     120: aload         5
     122: aload         4
     124: invokevirtual #14                 // Method javax/crypto/IllegalBlockSizeException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     127: pop
     128: aload         5
     130: athrow
     131: iload_3
     132: ireturn
    Exception table:
       from    to  target type
          58   106   109   Class java/security/SignatureException
}
