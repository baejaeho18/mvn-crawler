Compiled from "OpenSSLBIOSink.java"
final class org.conscrypt.OpenSSLBIOSink {
  private final long ctx;

  private final java.io.ByteArrayOutputStream buffer;

  private int position;

  static org.conscrypt.OpenSSLBIOSink create();
    Code:
       0: new           #1                  // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #2                  // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_0
       8: new           #3                  // class org/conscrypt/OpenSSLBIOSink
      11: dup
      12: aload_0
      13: invokespecial #4                  // Method "<init>":(Ljava/io/ByteArrayOutputStream;)V
      16: areturn

  private org.conscrypt.OpenSSLBIOSink(java.io.ByteArrayOutputStream);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #6                  // Method org/conscrypt/NativeCrypto.create_BIO_OutputStream:(Ljava/io/OutputStream;)J
       9: putfield      #7                  // Field ctx:J
      12: aload_0
      13: aload_1
      14: putfield      #8                  // Field buffer:Ljava/io/ByteArrayOutputStream;
      17: return

  int available();
    Code:
       0: aload_0
       1: getfield      #8                  // Field buffer:Ljava/io/ByteArrayOutputStream;
       4: invokevirtual #9                  // Method java/io/ByteArrayOutputStream.size:()I
       7: aload_0
       8: getfield      #10                 // Field position:I
      11: isub
      12: ireturn

  void reset();
    Code:
       0: aload_0
       1: getfield      #8                  // Field buffer:Ljava/io/ByteArrayOutputStream;
       4: invokevirtual #11                 // Method java/io/ByteArrayOutputStream.reset:()V
       7: aload_0
       8: iconst_0
       9: putfield      #10                 // Field position:I
      12: return

  long skip(long);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method available:()I
       4: lload_1
       5: l2i
       6: invokestatic  #13                 // Method java/lang/Math.min:(II)I
       9: istore_3
      10: aload_0
      11: dup
      12: getfield      #10                 // Field position:I
      15: iload_3
      16: iadd
      17: putfield      #10                 // Field position:I
      20: aload_0
      21: getfield      #10                 // Field position:I
      24: aload_0
      25: getfield      #8                  // Field buffer:Ljava/io/ByteArrayOutputStream;
      28: invokevirtual #9                  // Method java/io/ByteArrayOutputStream.size:()I
      31: if_icmpne     38
      34: aload_0
      35: invokevirtual #14                 // Method reset:()V
      38: iload_3
      39: i2l
      40: lreturn

  long getContext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field ctx:J
       4: lreturn

  byte[] toByteArray();
    Code:
       0: aload_0
       1: getfield      #8                  // Field buffer:Ljava/io/ByteArrayOutputStream;
       4: invokevirtual #15                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
       7: areturn

  int position();
    Code:
       0: aload_0
       1: getfield      #10                 // Field position:I
       4: ireturn

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field ctx:J
       4: invokestatic  #16                 // Method org/conscrypt/NativeCrypto.BIO_free_all:(J)V
       7: aload_0
       8: invokespecial #17                 // Method java/lang/Object.finalize:()V
      11: goto          21
      14: astore_1
      15: aload_0
      16: invokespecial #17                 // Method java/lang/Object.finalize:()V
      19: aload_1
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0     7    14   any
}
