Compiled from "OpenSSLRandom.java"
public final class org.conscrypt.OpenSSLRandom extends java.security.SecureRandomSpi implements java.io.Serializable {
  private static final long serialVersionUID;

  public org.conscrypt.OpenSSLRandom();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/security/SecureRandomSpi."<init>":()V
       4: return

  protected void engineSetSeed(byte[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #3                  // String seed == null
      10: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: return

  protected void engineNextBytes(byte[]);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method org/conscrypt/NativeCrypto.RAND_bytes:([B)V
       4: return

  protected byte[] engineGenerateSeed(int);
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_2
       5: invokestatic  #5                  // Method org/conscrypt/NativeCrypto.RAND_bytes:([B)V
       8: aload_2
       9: areturn
}
