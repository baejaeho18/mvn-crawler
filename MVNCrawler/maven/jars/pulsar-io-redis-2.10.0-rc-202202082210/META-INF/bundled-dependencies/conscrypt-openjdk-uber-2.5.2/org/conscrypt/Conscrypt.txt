Compiled from "Conscrypt.java"
public final class org.conscrypt.Conscrypt {
  private static final org.conscrypt.Conscrypt$Version VERSION;

  private org.conscrypt.Conscrypt();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isAvailable();
    Code:
       0: invokestatic  #2                  // Method checkAvailability:()V
       3: iconst_1
       4: ireturn
       5: astore_0
       6: iconst_0
       7: ireturn
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/Throwable

  public static org.conscrypt.Conscrypt$Version version();
    Code:
       0: getstatic     #4                  // Field VERSION:Lorg/conscrypt/Conscrypt$Version;
       3: areturn

  public static void checkAvailability();
    Code:
       0: invokestatic  #5                  // Method org/conscrypt/NativeCrypto.checkAvailability:()V
       3: return

  public static boolean isConscrypt(java.security.Provider);
    Code:
       0: aload_0
       1: instanceof    #6                  // class org/conscrypt/OpenSSLProvider
       4: ireturn

  public static java.security.Provider newProvider();
    Code:
       0: invokestatic  #2                  // Method checkAvailability:()V
       3: new           #6                  // class org/conscrypt/OpenSSLProvider
       6: dup
       7: invokespecial #7                  // Method org/conscrypt/OpenSSLProvider."<init>":()V
      10: areturn

  public static java.security.Provider newProvider(java.lang.String);
    Code:
       0: invokestatic  #2                  // Method checkAvailability:()V
       3: invokestatic  #8                  // Method newProviderBuilder:()Lorg/conscrypt/Conscrypt$ProviderBuilder;
       6: aload_0
       7: invokevirtual #9                  // Method org/conscrypt/Conscrypt$ProviderBuilder.setName:(Ljava/lang/String;)Lorg/conscrypt/Conscrypt$ProviderBuilder;
      10: invokevirtual #10                 // Method org/conscrypt/Conscrypt$ProviderBuilder.build:()Ljava/security/Provider;
      13: areturn

  public static org.conscrypt.Conscrypt$ProviderBuilder newProviderBuilder();
    Code:
       0: new           #11                 // class org/conscrypt/Conscrypt$ProviderBuilder
       3: dup
       4: aconst_null
       5: invokespecial #12                 // Method org/conscrypt/Conscrypt$ProviderBuilder."<init>":(Lorg/conscrypt/Conscrypt$1;)V
       8: areturn

  public static int maxEncryptedPacketLength();
    Code:
       0: sipush        16709
       3: ireturn

  public static javax.net.ssl.X509TrustManager getDefaultX509TrustManager() throws java.security.KeyManagementException;
    Code:
       0: invokestatic  #2                  // Method checkAvailability:()V
       3: invokestatic  #14                 // Method org/conscrypt/SSLParametersImpl.getDefaultX509TrustManager:()Ljavax/net/ssl/X509TrustManager;
       6: areturn

  public static boolean isConscrypt(javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method javax/net/ssl/SSLContext.getProvider:()Ljava/security/Provider;
       4: instanceof    #6                  // class org/conscrypt/OpenSSLProvider
       7: ireturn

  public static javax.net.ssl.SSLContextSpi newPreferredSSLContextSpi();
    Code:
       0: invokestatic  #2                  // Method checkAvailability:()V
       3: invokestatic  #16                 // Method org/conscrypt/OpenSSLContextImpl.getPreferred:()Lorg/conscrypt/OpenSSLContextImpl;
       6: areturn

  public static void setClientSessionCache(javax.net.ssl.SSLContext, org.conscrypt.SSLClientSessionCache);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method javax/net/ssl/SSLContext.getClientSessionContext:()Ljavax/net/ssl/SSLSessionContext;
       4: astore_2
       5: aload_2
       6: instanceof    #18                 // class org/conscrypt/ClientSessionContext
       9: ifne          45
      12: new           #19                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #20                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #22                 // String Not a conscrypt client context:
      25: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_2
      29: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
      35: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_2
      46: checkcast     #18                 // class org/conscrypt/ClientSessionContext
      49: aload_1
      50: invokevirtual #28                 // Method org/conscrypt/ClientSessionContext.setPersistentCache:(Lorg/conscrypt/SSLClientSessionCache;)V
      53: return

  public static void setServerSessionCache(javax.net.ssl.SSLContext, org.conscrypt.SSLServerSessionCache);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method javax/net/ssl/SSLContext.getServerSessionContext:()Ljavax/net/ssl/SSLSessionContext;
       4: astore_2
       5: aload_2
       6: instanceof    #30                 // class org/conscrypt/ServerSessionContext
       9: ifne          45
      12: new           #19                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #20                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #22                 // String Not a conscrypt client context:
      25: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_2
      29: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
      35: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_2
      46: checkcast     #30                 // class org/conscrypt/ServerSessionContext
      49: aload_1
      50: invokevirtual #31                 // Method org/conscrypt/ServerSessionContext.setPersistentCache:(Lorg/conscrypt/SSLServerSessionCache;)V
      53: return

  public static boolean isConscrypt(javax.net.ssl.SSLSocketFactory);
    Code:
       0: aload_0
       1: instanceof    #32                 // class org/conscrypt/OpenSSLSocketFactoryImpl
       4: ireturn

  private static org.conscrypt.OpenSSLSocketFactoryImpl toConscrypt(javax.net.ssl.SSLSocketFactory);
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method isConscrypt:(Ljavax/net/ssl/SSLSocketFactory;)Z
       4: ifne          40
       7: new           #19                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #20                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #34                 // String Not a conscrypt socket factory:
      20: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: checkcast     #32                 // class org/conscrypt/OpenSSLSocketFactoryImpl
      44: areturn

  public static void setUseEngineSocketByDefault(boolean);
    Code:
       0: iload_0
       1: invokestatic  #35                 // Method org/conscrypt/OpenSSLSocketFactoryImpl.setUseEngineSocketByDefault:(Z)V
       4: iload_0
       5: invokestatic  #36                 // Method org/conscrypt/OpenSSLServerSocketFactoryImpl.setUseEngineSocketByDefault:(Z)V
       8: return

  public static void setUseEngineSocket(javax.net.ssl.SSLSocketFactory, boolean);
    Code:
       0: aload_0
       1: invokestatic  #37                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocketFactory;)Lorg/conscrypt/OpenSSLSocketFactoryImpl;
       4: iload_1
       5: invokevirtual #38                 // Method org/conscrypt/OpenSSLSocketFactoryImpl.setUseEngineSocket:(Z)V
       8: return

  public static boolean isConscrypt(javax.net.ssl.SSLServerSocketFactory);
    Code:
       0: aload_0
       1: instanceof    #39                 // class org/conscrypt/OpenSSLServerSocketFactoryImpl
       4: ireturn

  private static org.conscrypt.OpenSSLServerSocketFactoryImpl toConscrypt(javax.net.ssl.SSLServerSocketFactory);
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method isConscrypt:(Ljavax/net/ssl/SSLServerSocketFactory;)Z
       4: ifne          40
       7: new           #19                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #20                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #41                 // String Not a conscrypt server socket factory:
      20: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: checkcast     #39                 // class org/conscrypt/OpenSSLServerSocketFactoryImpl
      44: areturn

  public static void setUseEngineSocket(javax.net.ssl.SSLServerSocketFactory, boolean);
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method toConscrypt:(Ljavax/net/ssl/SSLServerSocketFactory;)Lorg/conscrypt/OpenSSLServerSocketFactoryImpl;
       4: iload_1
       5: invokevirtual #43                 // Method org/conscrypt/OpenSSLServerSocketFactoryImpl.setUseEngineSocket:(Z)V
       8: return

  public static boolean isConscrypt(javax.net.ssl.SSLSocket);
    Code:
       0: aload_0
       1: instanceof    #44                 // class org/conscrypt/AbstractConscryptSocket
       4: ireturn

  private static org.conscrypt.AbstractConscryptSocket toConscrypt(javax.net.ssl.SSLSocket);
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method isConscrypt:(Ljavax/net/ssl/SSLSocket;)Z
       4: ifne          40
       7: new           #19                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #20                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #46                 // String Not a conscrypt socket:
      20: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: checkcast     #44                 // class org/conscrypt/AbstractConscryptSocket
      44: areturn

  public static void setHostname(javax.net.ssl.SSLSocket, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: aload_1
       5: invokevirtual #48                 // Method org/conscrypt/AbstractConscryptSocket.setHostname:(Ljava/lang/String;)V
       8: return

  public static java.lang.String getHostname(javax.net.ssl.SSLSocket);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: invokevirtual #49                 // Method org/conscrypt/AbstractConscryptSocket.getHostname:()Ljava/lang/String;
       7: areturn

  public static java.lang.String getHostnameOrIP(javax.net.ssl.SSLSocket);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: invokevirtual #50                 // Method org/conscrypt/AbstractConscryptSocket.getHostnameOrIP:()Ljava/lang/String;
       7: areturn

  public static void setUseSessionTickets(javax.net.ssl.SSLSocket, boolean);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: iload_1
       5: invokevirtual #51                 // Method org/conscrypt/AbstractConscryptSocket.setUseSessionTickets:(Z)V
       8: return

  public static void setChannelIdEnabled(javax.net.ssl.SSLSocket, boolean);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: iload_1
       5: invokevirtual #52                 // Method org/conscrypt/AbstractConscryptSocket.setChannelIdEnabled:(Z)V
       8: return

  public static byte[] getChannelId(javax.net.ssl.SSLSocket) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: invokevirtual #53                 // Method org/conscrypt/AbstractConscryptSocket.getChannelId:()[B
       7: areturn

  public static void setChannelIdPrivateKey(javax.net.ssl.SSLSocket, java.security.PrivateKey);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: aload_1
       5: invokevirtual #54                 // Method org/conscrypt/AbstractConscryptSocket.setChannelIdPrivateKey:(Ljava/security/PrivateKey;)V
       8: return

  public static java.lang.String getApplicationProtocol(javax.net.ssl.SSLSocket);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: invokevirtual #55                 // Method org/conscrypt/AbstractConscryptSocket.getApplicationProtocol:()Ljava/lang/String;
       7: areturn

  public static void setApplicationProtocolSelector(javax.net.ssl.SSLSocket, org.conscrypt.ApplicationProtocolSelector);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: aload_1
       5: invokevirtual #56                 // Method org/conscrypt/AbstractConscryptSocket.setApplicationProtocolSelector:(Lorg/conscrypt/ApplicationProtocolSelector;)V
       8: return

  public static void setApplicationProtocols(javax.net.ssl.SSLSocket, java.lang.String[]);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: aload_1
       5: invokevirtual #57                 // Method org/conscrypt/AbstractConscryptSocket.setApplicationProtocols:([Ljava/lang/String;)V
       8: return

  public static java.lang.String[] getApplicationProtocols(javax.net.ssl.SSLSocket);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: invokevirtual #58                 // Method org/conscrypt/AbstractConscryptSocket.getApplicationProtocols:()[Ljava/lang/String;
       7: areturn

  public static byte[] getTlsUnique(javax.net.ssl.SSLSocket);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: invokevirtual #59                 // Method org/conscrypt/AbstractConscryptSocket.getTlsUnique:()[B
       7: areturn

  public static byte[] exportKeyingMaterial(javax.net.ssl.SSLSocket, java.lang.String, byte[], int) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokevirtual #60                 // Method org/conscrypt/AbstractConscryptSocket.exportKeyingMaterial:(Ljava/lang/String;[BI)[B
      10: areturn

  public static boolean isConscrypt(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: instanceof    #61                 // class org/conscrypt/AbstractConscryptEngine
       4: ireturn

  private static org.conscrypt.AbstractConscryptEngine toConscrypt(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: invokestatic  #62                 // Method isConscrypt:(Ljavax/net/ssl/SSLEngine;)Z
       4: ifne          40
       7: new           #19                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #20                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #63                 // String Not a conscrypt engine:
      20: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: checkcast     #61                 // class org/conscrypt/AbstractConscryptEngine
      44: areturn

  public static void setBufferAllocator(javax.net.ssl.SSLEngine, org.conscrypt.BufferAllocator);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: aload_1
       5: invokevirtual #65                 // Method org/conscrypt/AbstractConscryptEngine.setBufferAllocator:(Lorg/conscrypt/BufferAllocator;)V
       8: return

  public static void setBufferAllocator(javax.net.ssl.SSLSocket, org.conscrypt.BufferAllocator);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method toConscrypt:(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;
       4: astore_2
       5: aload_2
       6: instanceof    #66                 // class org/conscrypt/ConscryptEngineSocket
       9: ifeq          20
      12: aload_2
      13: checkcast     #66                 // class org/conscrypt/ConscryptEngineSocket
      16: aload_1
      17: invokevirtual #67                 // Method org/conscrypt/ConscryptEngineSocket.setBufferAllocator:(Lorg/conscrypt/BufferAllocator;)V
      20: return

  public static void setDefaultBufferAllocator(org.conscrypt.BufferAllocator);
    Code:
       0: aload_0
       1: invokestatic  #68                 // Method org/conscrypt/ConscryptEngine.setDefaultBufferAllocator:(Lorg/conscrypt/BufferAllocator;)V
       4: return

  public static void setHostname(javax.net.ssl.SSLEngine, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: aload_1
       5: invokevirtual #69                 // Method org/conscrypt/AbstractConscryptEngine.setHostname:(Ljava/lang/String;)V
       8: return

  public static java.lang.String getHostname(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: invokevirtual #70                 // Method org/conscrypt/AbstractConscryptEngine.getHostname:()Ljava/lang/String;
       7: areturn

  public static int maxSealOverhead(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: invokevirtual #71                 // Method org/conscrypt/AbstractConscryptEngine.maxSealOverhead:()I
       7: ireturn

  public static void setHandshakeListener(javax.net.ssl.SSLEngine, org.conscrypt.HandshakeListener);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: aload_1
       5: invokevirtual #72                 // Method org/conscrypt/AbstractConscryptEngine.setHandshakeListener:(Lorg/conscrypt/HandshakeListener;)V
       8: return

  public static void setChannelIdEnabled(javax.net.ssl.SSLEngine, boolean);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: iload_1
       5: invokevirtual #73                 // Method org/conscrypt/AbstractConscryptEngine.setChannelIdEnabled:(Z)V
       8: return

  public static byte[] getChannelId(javax.net.ssl.SSLEngine) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: invokevirtual #74                 // Method org/conscrypt/AbstractConscryptEngine.getChannelId:()[B
       7: areturn

  public static void setChannelIdPrivateKey(javax.net.ssl.SSLEngine, java.security.PrivateKey);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: aload_1
       5: invokevirtual #75                 // Method org/conscrypt/AbstractConscryptEngine.setChannelIdPrivateKey:(Ljava/security/PrivateKey;)V
       8: return

  public static javax.net.ssl.SSLEngineResult unwrap(javax.net.ssl.SSLEngine, java.nio.ByteBuffer[], java.nio.ByteBuffer[]) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: aload_1
       5: aload_2
       6: invokevirtual #76                 // Method org/conscrypt/AbstractConscryptEngine.unwrap:([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
       9: areturn

  public static javax.net.ssl.SSLEngineResult unwrap(javax.net.ssl.SSLEngine, java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer[], int, int) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: aload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: iload         5
      11: iload         6
      13: invokevirtual #77                 // Method org/conscrypt/AbstractConscryptEngine.unwrap:([Ljava/nio/ByteBuffer;II[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;
      16: areturn

  public static void setUseSessionTickets(javax.net.ssl.SSLEngine, boolean);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: iload_1
       5: invokevirtual #78                 // Method org/conscrypt/AbstractConscryptEngine.setUseSessionTickets:(Z)V
       8: return

  public static void setApplicationProtocols(javax.net.ssl.SSLEngine, java.lang.String[]);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: aload_1
       5: invokevirtual #79                 // Method org/conscrypt/AbstractConscryptEngine.setApplicationProtocols:([Ljava/lang/String;)V
       8: return

  public static java.lang.String[] getApplicationProtocols(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: invokevirtual #80                 // Method org/conscrypt/AbstractConscryptEngine.getApplicationProtocols:()[Ljava/lang/String;
       7: areturn

  public static void setApplicationProtocolSelector(javax.net.ssl.SSLEngine, org.conscrypt.ApplicationProtocolSelector);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: aload_1
       5: invokevirtual #81                 // Method org/conscrypt/AbstractConscryptEngine.setApplicationProtocolSelector:(Lorg/conscrypt/ApplicationProtocolSelector;)V
       8: return

  public static java.lang.String getApplicationProtocol(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: invokevirtual #82                 // Method org/conscrypt/AbstractConscryptEngine.getApplicationProtocol:()Ljava/lang/String;
       7: areturn

  public static byte[] getTlsUnique(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: invokevirtual #83                 // Method org/conscrypt/AbstractConscryptEngine.getTlsUnique:()[B
       7: areturn

  public static byte[] exportKeyingMaterial(javax.net.ssl.SSLEngine, java.lang.String, byte[], int) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method toConscrypt:(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokevirtual #84                 // Method org/conscrypt/AbstractConscryptEngine.exportKeyingMaterial:(Ljava/lang/String;[BI)[B
      10: areturn

  public static boolean isConscrypt(javax.net.ssl.TrustManager);
    Code:
       0: aload_0
       1: instanceof    #85                 // class org/conscrypt/TrustManagerImpl
       4: ireturn

  private static org.conscrypt.TrustManagerImpl toConscrypt(javax.net.ssl.TrustManager);
    Code:
       0: aload_0
       1: invokestatic  #86                 // Method isConscrypt:(Ljavax/net/ssl/TrustManager;)Z
       4: ifne          40
       7: new           #19                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #20                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #87                 // String Not a Conscrypt trust manager:
      20: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: checkcast     #85                 // class org/conscrypt/TrustManagerImpl
      44: areturn

  public static synchronized void setDefaultHostnameVerifier(org.conscrypt.ConscryptHostnameVerifier);
    Code:
       0: aload_0
       1: invokestatic  #88                 // Method org/conscrypt/TrustManagerImpl.setDefaultHostnameVerifier:(Lorg/conscrypt/ConscryptHostnameVerifier;)V
       4: return

  public static synchronized org.conscrypt.ConscryptHostnameVerifier getDefaultHostnameVerifier(javax.net.ssl.TrustManager);
    Code:
       0: invokestatic  #89                 // Method org/conscrypt/TrustManagerImpl.getDefaultHostnameVerifier:()Lorg/conscrypt/ConscryptHostnameVerifier;
       3: areturn

  public static void setHostnameVerifier(javax.net.ssl.TrustManager, org.conscrypt.ConscryptHostnameVerifier);
    Code:
       0: aload_0
       1: invokestatic  #90                 // Method toConscrypt:(Ljavax/net/ssl/TrustManager;)Lorg/conscrypt/TrustManagerImpl;
       4: aload_1
       5: invokevirtual #91                 // Method org/conscrypt/TrustManagerImpl.setHostnameVerifier:(Lorg/conscrypt/ConscryptHostnameVerifier;)V
       8: return

  public static org.conscrypt.ConscryptHostnameVerifier getHostnameVerifier(javax.net.ssl.TrustManager);
    Code:
       0: aload_0
       1: invokestatic  #90                 // Method toConscrypt:(Ljavax/net/ssl/TrustManager;)Lorg/conscrypt/TrustManagerImpl;
       4: invokevirtual #92                 // Method org/conscrypt/TrustManagerImpl.getHostnameVerifier:()Lorg/conscrypt/ConscryptHostnameVerifier;
       7: areturn

  public static org.conscrypt.ConscryptHostnameVerifier wrapHostnameVerifier(javax.net.ssl.HostnameVerifier);
    Code:
       0: new           #93                 // class org/conscrypt/Conscrypt$1
       3: dup
       4: aload_0
       5: invokespecial #94                 // Method org/conscrypt/Conscrypt$1."<init>":(Ljavax/net/ssl/HostnameVerifier;)V
       8: areturn

  static {};
    Code:
       0: iconst_m1
       1: istore_0
       2: iconst_m1
       3: istore_1
       4: iconst_m1
       5: istore_2
       6: aconst_null
       7: astore_3
       8: ldc           #95                 // class org/conscrypt/Conscrypt
      10: ldc           #96                 // String conscrypt.properties
      12: invokevirtual #97                 // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      15: astore_3
      16: aload_3
      17: ifnull        74
      20: new           #98                 // class java/util/Properties
      23: dup
      24: invokespecial #99                 // Method java/util/Properties."<init>":()V
      27: astore        4
      29: aload         4
      31: aload_3
      32: invokevirtual #100                // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      35: aload         4
      37: ldc           #101                // String org.conscrypt.version.major
      39: ldc           #102                // String -1
      41: invokevirtual #103                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      44: invokestatic  #104                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      47: istore_0
      48: aload         4
      50: ldc           #105                // String org.conscrypt.version.minor
      52: ldc           #102                // String -1
      54: invokevirtual #103                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      57: invokestatic  #104                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      60: istore_1
      61: aload         4
      63: ldc           #106                // String org.conscrypt.version.patch
      65: ldc           #102                // String -1
      67: invokevirtual #103                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      70: invokestatic  #104                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      73: istore_2
      74: aload_3
      75: invokestatic  #107                // Method org/conscrypt/io/IoUtils.closeQuietly:(Ljava/io/Closeable;)V
      78: goto          99
      81: astore        4
      83: aload_3
      84: invokestatic  #107                // Method org/conscrypt/io/IoUtils.closeQuietly:(Ljava/io/Closeable;)V
      87: goto          99
      90: astore        5
      92: aload_3
      93: invokestatic  #107                // Method org/conscrypt/io/IoUtils.closeQuietly:(Ljava/io/Closeable;)V
      96: aload         5
      98: athrow
      99: iload_0
     100: iflt          128
     103: iload_1
     104: iflt          128
     107: iload_2
     108: iflt          128
     111: new           #109                // class org/conscrypt/Conscrypt$Version
     114: dup
     115: iload_0
     116: iload_1
     117: iload_2
     118: aconst_null
     119: invokespecial #110                // Method org/conscrypt/Conscrypt$Version."<init>":(IIILorg/conscrypt/Conscrypt$1;)V
     122: putstatic     #4                  // Field VERSION:Lorg/conscrypt/Conscrypt$Version;
     125: goto          132
     128: aconst_null
     129: putstatic     #4                  // Field VERSION:Lorg/conscrypt/Conscrypt$Version;
     132: return
    Exception table:
       from    to  target type
           8    74    81   Class java/io/IOException
           8    74    90   any
          81    83    90   any
          90    92    90   any
}
