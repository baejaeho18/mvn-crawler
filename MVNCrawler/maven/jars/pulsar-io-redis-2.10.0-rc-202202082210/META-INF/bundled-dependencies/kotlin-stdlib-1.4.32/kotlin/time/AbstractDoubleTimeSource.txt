Compiled from "TimeSources.kt"
public abstract class kotlin.time.AbstractDoubleTimeSource implements kotlin.time.TimeSource {
  private final java.util.concurrent.TimeUnit unit;

  protected abstract double read();

  public kotlin.time.TimeMark markNow();
    Code:
       0: new           #19                 // class kotlin/time/AbstractDoubleTimeSource$DoubleTimeMark
       3: dup
       4: aload_0
       5: invokevirtual #21                 // Method read:()D
       8: aload_0
       9: getstatic     #27                 // Field kotlin/time/Duration.Companion:Lkotlin/time/Duration$Companion;
      12: invokevirtual #32                 // Method kotlin/time/Duration$Companion."getZERO-UwyO8pc":()D
      15: aconst_null
      16: invokespecial #36                 // Method kotlin/time/AbstractDoubleTimeSource$DoubleTimeMark."<init>":(DLkotlin/time/AbstractDoubleTimeSource;DLkotlin/jvm/internal/DefaultConstructorMarker;)V
      19: checkcast     #38                 // class kotlin/time/TimeMark
      22: areturn

  protected final java.util.concurrent.TimeUnit getUnit();
    Code:
       0: aload_0
       1: getfield      #44                 // Field unit:Ljava/util/concurrent/TimeUnit;
       4: areturn

  public kotlin.time.AbstractDoubleTimeSource(java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ldc           #46                 // String unit
       3: invokestatic  #52                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #55                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #44                 // Field unit:Ljava/util/concurrent/TimeUnit;
      15: return
}
