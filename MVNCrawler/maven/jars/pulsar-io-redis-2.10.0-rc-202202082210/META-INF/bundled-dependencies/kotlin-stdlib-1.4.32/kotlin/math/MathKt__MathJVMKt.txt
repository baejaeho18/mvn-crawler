Compiled from "MathJVM.kt"
class kotlin.math.MathKt__MathJVMKt extends kotlin.math.MathKt__MathHKt {
  private static final double sin(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #15                 // Method java/lang/Math.sin:(D)D
       7: dreturn

  private static final double cos(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #22                 // Method java/lang/Math.cos:(D)D
       7: dreturn

  private static final double tan(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #26                 // Method java/lang/Math.tan:(D)D
       7: dreturn

  private static final double asin(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #30                 // Method java/lang/Math.asin:(D)D
       7: dreturn

  private static final double acos(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #34                 // Method java/lang/Math.acos:(D)D
       7: dreturn

  private static final double atan(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #38                 // Method java/lang/Math.atan:(D)D
       7: dreturn

  private static final double atan2(double, double);
    Code:
       0: ldc           #11                 // int 0
       2: istore        4
       4: dload_0
       5: dload_2
       6: invokestatic  #43                 // Method java/lang/Math.atan2:(DD)D
       9: dreturn

  private static final double sinh(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #48                 // Method java/lang/Math.sinh:(D)D
       7: dreturn

  private static final double cosh(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #52                 // Method java/lang/Math.cosh:(D)D
       7: dreturn

  private static final double tanh(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #56                 // Method java/lang/Math.tanh:(D)D
       7: dreturn

  public static final double asinh(double);
    Code:
       0: nop
       1: dload_0
       2: getstatic     #63                 // Field kotlin/math/Constants.taylor_n_bound:D
       5: dcmpl
       6: iflt          71
       9: dload_0
      10: getstatic     #66                 // Field kotlin/math/Constants.upper_taylor_n_bound:D
      13: dcmpl
      14: ifle          54
      17: dload_0
      18: getstatic     #69                 // Field kotlin/math/Constants.upper_taylor_2_bound:D
      21: dcmpl
      22: ifle          36
      25: dload_0
      26: invokestatic  #72                 // Method java/lang/Math.log:(D)D
      29: getstatic     #75                 // Field kotlin/math/Constants.LN2:D
      32: dadd
      33: goto          115
      36: dload_0
      37: iconst_2
      38: i2d
      39: dmul
      40: iconst_1
      41: i2d
      42: dload_0
      43: iconst_2
      44: i2d
      45: dmul
      46: ddiv
      47: dadd
      48: invokestatic  #72                 // Method java/lang/Math.log:(D)D
      51: goto          115
      54: dload_0
      55: dload_0
      56: dload_0
      57: dmul
      58: iconst_1
      59: i2d
      60: dadd
      61: invokestatic  #78                 // Method java/lang/Math.sqrt:(D)D
      64: dadd
      65: invokestatic  #72                 // Method java/lang/Math.log:(D)D
      68: goto          115
      71: dload_0
      72: getstatic     #63                 // Field kotlin/math/Constants.taylor_n_bound:D
      75: dneg
      76: dcmpg
      77: ifgt          89
      80: dload_0
      81: dneg
      82: invokestatic  #82                 // Method kotlin/math/MathKt.asinh:(D)D
      85: dneg
      86: goto          115
      89: dload_0
      90: dstore_2
      91: dload_0
      92: invokestatic  #85                 // Method java/lang/Math.abs:(D)D
      95: getstatic     #88                 // Field kotlin/math/Constants.taylor_2_bound:D
      98: dcmpl
      99: iflt          114
     102: dload_2
     103: dload_0
     104: dload_0
     105: dmul
     106: dload_0
     107: dmul
     108: bipush        6
     110: i2d
     111: ddiv
     112: dsub
     113: dstore_2
     114: dload_2
     115: dreturn

  public static final double acosh(double);
    Code:
       0: nop
       1: dload_0
       2: iconst_1
       3: i2d
       4: dcmpg
       5: ifge          14
       8: ldc2_w        #91                 // double NaNd
      11: goto          103
      14: dload_0
      15: getstatic     #69                 // Field kotlin/math/Constants.upper_taylor_2_bound:D
      18: dcmpl
      19: ifle          33
      22: dload_0
      23: invokestatic  #72                 // Method java/lang/Math.log:(D)D
      26: getstatic     #75                 // Field kotlin/math/Constants.LN2:D
      29: dadd
      30: goto          103
      33: dload_0
      34: iconst_1
      35: i2d
      36: dsub
      37: getstatic     #63                 // Field kotlin/math/Constants.taylor_n_bound:D
      40: dcmpl
      41: iflt          61
      44: dload_0
      45: dload_0
      46: dload_0
      47: dmul
      48: iconst_1
      49: i2d
      50: dsub
      51: invokestatic  #78                 // Method java/lang/Math.sqrt:(D)D
      54: dadd
      55: invokestatic  #72                 // Method java/lang/Math.log:(D)D
      58: goto          103
      61: dload_0
      62: iconst_1
      63: i2d
      64: dsub
      65: invokestatic  #78                 // Method java/lang/Math.sqrt:(D)D
      68: dstore_2
      69: dload_2
      70: dstore        4
      72: dload_2
      73: getstatic     #88                 // Field kotlin/math/Constants.taylor_2_bound:D
      76: dcmpl
      77: iflt          94
      80: dload         4
      82: dload_2
      83: dload_2
      84: dmul
      85: dload_2
      86: dmul
      87: bipush        12
      89: i2d
      90: ddiv
      91: dsub
      92: dstore        4
      94: ldc2_w        #93                 // double 2.0d
      97: invokestatic  #78                 // Method java/lang/Math.sqrt:(D)D
     100: dload         4
     102: dmul
     103: dreturn

  public static final double atanh(double);
    Code:
       0: dload_0
       1: invokestatic  #85                 // Method java/lang/Math.abs:(D)D
       4: getstatic     #63                 // Field kotlin/math/Constants.taylor_n_bound:D
       7: dcmpg
       8: ifge          37
      11: dload_0
      12: dstore_2
      13: dload_0
      14: invokestatic  #85                 // Method java/lang/Math.abs:(D)D
      17: getstatic     #88                 // Field kotlin/math/Constants.taylor_2_bound:D
      20: dcmpl
      21: ifle          35
      24: dload_2
      25: dload_0
      26: dload_0
      27: dmul
      28: dload_0
      29: dmul
      30: iconst_3
      31: i2d
      32: ddiv
      33: dadd
      34: dstore_2
      35: dload_2
      36: dreturn
      37: iconst_1
      38: i2d
      39: dload_0
      40: dadd
      41: iconst_1
      42: i2d
      43: dload_0
      44: dsub
      45: ddiv
      46: invokestatic  #72                 // Method java/lang/Math.log:(D)D
      49: iconst_2
      50: i2d
      51: ddiv
      52: dreturn

  private static final double hypot(double, double);
    Code:
       0: ldc           #11                 // int 0
       2: istore        4
       4: dload_0
       5: dload_2
       6: invokestatic  #98                 // Method java/lang/Math.hypot:(DD)D
       9: dreturn

  private static final double sqrt(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #78                 // Method java/lang/Math.sqrt:(D)D
       7: dreturn

  private static final double exp(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #103                // Method java/lang/Math.exp:(D)D
       7: dreturn

  private static final double expm1(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #107                // Method java/lang/Math.expm1:(D)D
       7: dreturn

  public static final double log(double, double);
    Code:
       0: dload_2
       1: dconst_0
       2: dcmpg
       3: ifle          12
       6: dload_2
       7: dconst_1
       8: dcmpg
       9: ifne          16
      12: ldc2_w        #91                 // double NaNd
      15: dreturn
      16: dload_0
      17: invokestatic  #72                 // Method java/lang/Math.log:(D)D
      20: dload_2
      21: invokestatic  #72                 // Method java/lang/Math.log:(D)D
      24: ddiv
      25: dreturn

  private static final double ln(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #72                 // Method java/lang/Math.log:(D)D
       7: dreturn

  private static final double log10(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #114                // Method java/lang/Math.log10:(D)D
       7: dreturn

  public static final double log2(double);
    Code:
       0: dload_0
       1: invokestatic  #72                 // Method java/lang/Math.log:(D)D
       4: getstatic     #75                 // Field kotlin/math/Constants.LN2:D
       7: ddiv
       8: dreturn

  private static final double ln1p(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #120                // Method java/lang/Math.log1p:(D)D
       7: dreturn

  private static final double ceil(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #124                // Method java/lang/Math.ceil:(D)D
       7: dreturn

  private static final double floor(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #128                // Method java/lang/Math.floor:(D)D
       7: dreturn

  public static final double truncate(double);
    Code:
       0: nop
       1: dload_0
       2: dstore_2
       3: iconst_0
       4: istore        4
       6: dload_2
       7: invokestatic  #136                // Method java/lang/Double.isNaN:(D)Z
      10: ifne          25
      13: dload_0
      14: dstore_2
      15: iconst_0
      16: istore        4
      18: dload_2
      19: invokestatic  #139                // Method java/lang/Double.isInfinite:(D)Z
      22: ifeq          29
      25: dload_0
      26: goto          51
      29: dload_0
      30: iconst_0
      31: i2d
      32: dcmpl
      33: ifle          45
      36: iconst_0
      37: istore_2
      38: dload_0
      39: invokestatic  #128                // Method java/lang/Math.floor:(D)D
      42: goto          51
      45: iconst_0
      46: istore_2
      47: dload_0
      48: invokestatic  #124                // Method java/lang/Math.ceil:(D)D
      51: dreturn

  private static final double round(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #143                // Method java/lang/Math.rint:(D)D
       7: dreturn

  private static final double abs(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #85                 // Method java/lang/Math.abs:(D)D
       7: dreturn

  private static final double sign(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #149                // Method java/lang/Math.signum:(D)D
       7: dreturn

  private static final double min(double, double);
    Code:
       0: ldc           #11                 // int 0
       2: istore        4
       4: dload_0
       5: dload_2
       6: invokestatic  #153                // Method java/lang/Math.min:(DD)D
       9: dreturn

  private static final double max(double, double);
    Code:
       0: ldc           #11                 // int 0
       2: istore        4
       4: dload_0
       5: dload_2
       6: invokestatic  #159                // Method java/lang/Math.max:(DD)D
       9: dreturn

  private static final double pow(double, double);
    Code:
       0: ldc           #11                 // int 0
       2: istore        4
       4: dload_0
       5: dload_2
       6: invokestatic  #163                // Method java/lang/Math.pow:(DD)D
       9: dreturn

  private static final double pow(double, int);
    Code:
       0: ldc           #11                 // int 0
       2: istore_3
       3: dload_0
       4: iload_2
       5: i2d
       6: invokestatic  #163                // Method java/lang/Math.pow:(DD)D
       9: dreturn

  private static final double IEEErem(double, double);
    Code:
       0: ldc           #11                 // int 0
       2: istore        4
       4: dload_0
       5: dload_2
       6: invokestatic  #171                // Method java/lang/Math.IEEEremainder:(DD)D
       9: dreturn

  public static void getAbsoluteValue$annotations(double);
    Code:
       0: return

  private static final double getAbsoluteValue(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #85                 // Method java/lang/Math.abs:(D)D
       7: dreturn

  public static void getSign$annotations(double);
    Code:
       0: return

  private static final double getSign(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #149                // Method java/lang/Math.signum:(D)D
       7: dreturn

  private static final double withSign(double, double);
    Code:
       0: ldc           #11                 // int 0
       2: istore        4
       4: dload_0
       5: dload_2
       6: invokestatic  #187                // Method java/lang/Math.copySign:(DD)D
       9: dreturn

  private static final double withSign(double, int);
    Code:
       0: ldc           #11                 // int 0
       2: istore_3
       3: dload_0
       4: iload_2
       5: i2d
       6: invokestatic  #187                // Method java/lang/Math.copySign:(DD)D
       9: dreturn

  public static void getUlp$annotations(double);
    Code:
       0: return

  private static final double getUlp(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #194                // Method java/lang/Math.ulp:(D)D
       7: dreturn

  private static final double nextUp(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: invokestatic  #199                // Method java/lang/Math.nextUp:(D)D
       7: dreturn

  private static final double nextDown(double);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: dload_0
       4: ldc2_w        #203                // double -Infinityd
       7: invokestatic  #207                // Method java/lang/Math.nextAfter:(DD)D
      10: dreturn

  private static final double nextTowards(double, double);
    Code:
       0: ldc           #11                 // int 0
       2: istore        4
       4: dload_0
       5: dload_2
       6: invokestatic  #207                // Method java/lang/Math.nextAfter:(DD)D
       9: dreturn

  public static final int roundToInt(double);
    Code:
       0: nop
       1: dload_0
       2: dstore_2
       3: iconst_0
       4: istore        4
       6: dload_2
       7: invokestatic  #136                // Method java/lang/Double.isNaN:(D)Z
      10: ifeq          26
      13: new           #217                // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #219                // String Cannot round NaN value.
      19: invokespecial #223                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: checkcast     #225                // class java/lang/Throwable
      25: athrow
      26: dload_0
      27: ldc           #226                // int 2147483647
      29: i2d
      30: dcmpl
      31: ifle          39
      34: ldc           #226                // int 2147483647
      36: goto          57
      39: dload_0
      40: ldc           #227                // int -2147483648
      42: i2d
      43: dcmpg
      44: ifge          52
      47: ldc           #227                // int -2147483648
      49: goto          57
      52: dload_0
      53: invokestatic  #230                // Method java/lang/Math.round:(D)J
      56: l2i
      57: ireturn

  public static final long roundToLong(double);
    Code:
       0: dload_0
       1: dstore_2
       2: iconst_0
       3: istore        4
       5: dload_2
       6: invokestatic  #136                // Method java/lang/Double.isNaN:(D)Z
       9: ifeq          25
      12: new           #217                // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #219                // String Cannot round NaN value.
      18: invokespecial #223                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: checkcast     #225                // class java/lang/Throwable
      24: athrow
      25: dload_0
      26: invokestatic  #230                // Method java/lang/Math.round:(D)J
      29: lreturn

  private static final float sin(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #15                 // Method java/lang/Math.sin:(D)D
       8: d2f
       9: freturn

  private static final float cos(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #22                 // Method java/lang/Math.cos:(D)D
       8: d2f
       9: freturn

  private static final float tan(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #26                 // Method java/lang/Math.tan:(D)D
       8: d2f
       9: freturn

  private static final float asin(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #30                 // Method java/lang/Math.asin:(D)D
       8: d2f
       9: freturn

  private static final float acos(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #34                 // Method java/lang/Math.acos:(D)D
       8: d2f
       9: freturn

  private static final float atan(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #38                 // Method java/lang/Math.atan:(D)D
       8: d2f
       9: freturn

  private static final float atan2(float, float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: fload_0
       4: f2d
       5: fload_1
       6: f2d
       7: invokestatic  #43                 // Method java/lang/Math.atan2:(DD)D
      10: d2f
      11: freturn

  private static final float sinh(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #48                 // Method java/lang/Math.sinh:(D)D
       8: d2f
       9: freturn

  private static final float cosh(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #52                 // Method java/lang/Math.cosh:(D)D
       8: d2f
       9: freturn

  private static final float tanh(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #56                 // Method java/lang/Math.tanh:(D)D
       8: d2f
       9: freturn

  private static final float asinh(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #82                 // Method kotlin/math/MathKt.asinh:(D)D
       8: d2f
       9: freturn

  private static final float acosh(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #239                // Method kotlin/math/MathKt.acosh:(D)D
       8: d2f
       9: freturn

  private static final float atanh(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #242                // Method kotlin/math/MathKt.atanh:(D)D
       8: d2f
       9: freturn

  private static final float hypot(float, float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: fload_0
       4: f2d
       5: fload_1
       6: f2d
       7: invokestatic  #98                 // Method java/lang/Math.hypot:(DD)D
      10: d2f
      11: freturn

  private static final float sqrt(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #78                 // Method java/lang/Math.sqrt:(D)D
       8: d2f
       9: freturn

  private static final float exp(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #103                // Method java/lang/Math.exp:(D)D
       8: d2f
       9: freturn

  private static final float expm1(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #107                // Method java/lang/Math.expm1:(D)D
       8: d2f
       9: freturn

  public static final float log(float, float);
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpg
       3: ifle          12
       6: fload_1
       7: fconst_1
       8: fcmpg
       9: ifne          15
      12: ldc           #244                // float NaNf
      14: freturn
      15: fload_0
      16: f2d
      17: invokestatic  #72                 // Method java/lang/Math.log:(D)D
      20: fload_1
      21: f2d
      22: invokestatic  #72                 // Method java/lang/Math.log:(D)D
      25: ddiv
      26: d2f
      27: freturn

  private static final float ln(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #72                 // Method java/lang/Math.log:(D)D
       8: d2f
       9: freturn

  private static final float log10(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #114                // Method java/lang/Math.log10:(D)D
       8: d2f
       9: freturn

  public static final float log2(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #72                 // Method java/lang/Math.log:(D)D
       5: getstatic     #75                 // Field kotlin/math/Constants.LN2:D
       8: ddiv
       9: d2f
      10: freturn

  private static final float ln1p(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #120                // Method java/lang/Math.log1p:(D)D
       8: d2f
       9: freturn

  private static final float ceil(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #124                // Method java/lang/Math.ceil:(D)D
       8: d2f
       9: freturn

  private static final float floor(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #128                // Method java/lang/Math.floor:(D)D
       8: d2f
       9: freturn

  public static final float truncate(float);
    Code:
       0: nop
       1: fload_0
       2: fstore_1
       3: iconst_0
       4: istore_2
       5: fload_1
       6: invokestatic  #249                // Method java/lang/Float.isNaN:(F)Z
       9: ifne          23
      12: fload_0
      13: fstore_1
      14: iconst_0
      15: istore_2
      16: fload_1
      17: invokestatic  #251                // Method java/lang/Float.isInfinite:(F)Z
      20: ifeq          27
      23: fload_0
      24: goto          53
      27: fload_0
      28: iconst_0
      29: i2f
      30: fcmpl
      31: ifle          45
      34: iconst_0
      35: istore_1
      36: fload_0
      37: f2d
      38: invokestatic  #128                // Method java/lang/Math.floor:(D)D
      41: d2f
      42: goto          53
      45: iconst_0
      46: istore_1
      47: fload_0
      48: f2d
      49: invokestatic  #124                // Method java/lang/Math.ceil:(D)D
      52: d2f
      53: freturn

  private static final float round(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: f2d
       5: invokestatic  #143                // Method java/lang/Math.rint:(D)D
       8: d2f
       9: freturn

  private static final float abs(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: invokestatic  #253                // Method java/lang/Math.abs:(F)F
       7: freturn

  private static final float sign(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: invokestatic  #255                // Method java/lang/Math.signum:(F)F
       7: freturn

  private static final float min(float, float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: fload_0
       4: fload_1
       5: invokestatic  #257                // Method java/lang/Math.min:(FF)F
       8: freturn

  private static final float max(float, float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: fload_0
       4: fload_1
       5: invokestatic  #259                // Method java/lang/Math.max:(FF)F
       8: freturn

  private static final float pow(float, float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: fload_0
       4: f2d
       5: fload_1
       6: f2d
       7: invokestatic  #163                // Method java/lang/Math.pow:(DD)D
      10: d2f
      11: freturn

  private static final float pow(float, int);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: fload_0
       4: f2d
       5: iload_1
       6: i2d
       7: invokestatic  #163                // Method java/lang/Math.pow:(DD)D
      10: d2f
      11: freturn

  private static final float IEEErem(float, float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: fload_0
       4: f2d
       5: fload_1
       6: f2d
       7: invokestatic  #171                // Method java/lang/Math.IEEEremainder:(DD)D
      10: d2f
      11: freturn

  public static void getAbsoluteValue$annotations(float);
    Code:
       0: return

  private static final float getAbsoluteValue(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: invokestatic  #253                // Method java/lang/Math.abs:(F)F
       7: freturn

  public static void getSign$annotations(float);
    Code:
       0: return

  private static final float getSign(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: invokestatic  #255                // Method java/lang/Math.signum:(F)F
       7: freturn

  private static final float withSign(float, float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: fload_0
       4: fload_1
       5: invokestatic  #263                // Method java/lang/Math.copySign:(FF)F
       8: freturn

  private static final float withSign(float, int);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: fload_0
       4: iload_1
       5: i2f
       6: invokestatic  #263                // Method java/lang/Math.copySign:(FF)F
       9: freturn

  public static void getUlp$annotations(float);
    Code:
       0: return

  private static final float getUlp(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: invokestatic  #265                // Method java/lang/Math.ulp:(F)F
       7: freturn

  private static final float nextUp(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: invokestatic  #267                // Method java/lang/Math.nextUp:(F)F
       7: freturn

  private static final float nextDown(float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: fload_0
       4: ldc2_w        #203                // double -Infinityd
       7: invokestatic  #270                // Method java/lang/Math.nextAfter:(FD)F
      10: freturn

  private static final float nextTowards(float, float);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: fload_0
       4: fload_1
       5: f2d
       6: invokestatic  #270                // Method java/lang/Math.nextAfter:(FD)F
       9: freturn

  public static final int roundToInt(float);
    Code:
       0: fload_0
       1: fstore_1
       2: iconst_0
       3: istore_2
       4: fload_1
       5: invokestatic  #249                // Method java/lang/Float.isNaN:(F)Z
       8: ifeq          24
      11: new           #217                // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #219                // String Cannot round NaN value.
      17: invokespecial #223                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: checkcast     #225                // class java/lang/Throwable
      23: athrow
      24: fload_0
      25: invokestatic  #273                // Method java/lang/Math.round:(F)I
      28: ireturn

  public static final long roundToLong(float);
    Code:
       0: fload_0
       1: f2d
       2: invokestatic  #276                // Method kotlin/math/MathKt.roundToLong:(D)J
       5: lreturn

  private static final int abs(int);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: iload_0
       4: invokestatic  #279                // Method java/lang/Math.abs:(I)I
       7: ireturn

  private static final int min(int, int);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: iload_0
       4: iload_1
       5: invokestatic  #282                // Method java/lang/Math.min:(II)I
       8: ireturn

  private static final int max(int, int);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: iload_0
       4: iload_1
       5: invokestatic  #284                // Method java/lang/Math.max:(II)I
       8: ireturn

  public static void getAbsoluteValue$annotations(int);
    Code:
       0: return

  private static final int getAbsoluteValue(int);
    Code:
       0: ldc           #11                 // int 0
       2: istore_1
       3: iload_0
       4: invokestatic  #279                // Method java/lang/Math.abs:(I)I
       7: ireturn

  public static void getSign$annotations(int);
    Code:
       0: return

  public static final int getSign(int);
    Code:
       0: nop
       1: iload_0
       2: ifge          9
       5: iconst_m1
       6: goto          18
       9: iload_0
      10: ifle          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private static final long abs(long);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: lload_0
       4: invokestatic  #288                // Method java/lang/Math.abs:(J)J
       7: lreturn

  private static final long min(long, long);
    Code:
       0: ldc           #11                 // int 0
       2: istore        4
       4: lload_0
       5: lload_2
       6: invokestatic  #292                // Method java/lang/Math.min:(JJ)J
       9: lreturn

  private static final long max(long, long);
    Code:
       0: ldc           #11                 // int 0
       2: istore        4
       4: lload_0
       5: lload_2
       6: invokestatic  #294                // Method java/lang/Math.max:(JJ)J
       9: lreturn

  public static void getAbsoluteValue$annotations(long);
    Code:
       0: return

  private static final long getAbsoluteValue(long);
    Code:
       0: ldc           #11                 // int 0
       2: istore_2
       3: lload_0
       4: invokestatic  #288                // Method java/lang/Math.abs:(J)J
       7: lreturn

  public static void getSign$annotations(long);
    Code:
       0: return

  public static final int getSign(long);
    Code:
       0: nop
       1: lload_0
       2: lconst_0
       3: lcmp
       4: ifge          11
       7: iconst_m1
       8: goto          22
      11: lload_0
      12: lconst_0
      13: lcmp
      14: ifle          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public kotlin.math.MathKt__MathJVMKt();
    Code:
       0: aload_0
       1: invokespecial #316                // Method kotlin/math/MathKt__MathHKt."<init>":()V
       4: return
}
