Compiled from "AbstractIterator.kt"
public abstract class kotlin.collections.AbstractIterator<T> implements java.util.Iterator<T>, kotlin.jvm.internal.markers.KMappedMarker {
  private kotlin.collections.State state;

  private T nextValue;

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #18                 // Field state:Lkotlin/collections/State;
       4: getstatic     #23                 // Field kotlin/collections/State.Failed:Lkotlin/collections/State;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_1
      16: iconst_0
      17: istore_2
      18: iconst_0
      19: istore_3
      20: iconst_0
      21: istore_3
      22: iconst_0
      23: istore        4
      25: iload_1
      26: ifne          52
      29: iconst_0
      30: istore        5
      32: ldc           #25                 // String Failed requirement.
      34: astore        4
      36: new           #27                 // class java/lang/IllegalArgumentException
      39: dup
      40: aload         4
      42: invokevirtual #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
      45: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: checkcast     #37                 // class java/lang/Throwable
      51: athrow
      52: aload_0
      53: getfield      #18                 // Field state:Lkotlin/collections/State;
      56: getstatic     #43                 // Field kotlin/collections/AbstractIterator$WhenMappings.$EnumSwitchMapping$0:[I
      59: swap
      60: invokevirtual #47                 // Method kotlin/collections/State.ordinal:()I
      63: iaload
      64: tableswitch   { // 1 to 2
                     1: 88
                     2: 92
               default: 96
          }
      88: iconst_0
      89: goto          100
      92: iconst_1
      93: goto          100
      96: aload_0
      97: invokespecial #50                 // Method tryToComputeNext:()Z
     100: ireturn

  public T next();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method hasNext:()Z
       4: ifne          18
       7: new           #59                 // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #62                 // Method java/util/NoSuchElementException."<init>":()V
      14: checkcast     #37                 // class java/lang/Throwable
      17: athrow
      18: aload_0
      19: getstatic     #65                 // Field kotlin/collections/State.NotReady:Lkotlin/collections/State;
      22: putfield      #18                 // Field state:Lkotlin/collections/State;
      25: aload_0
      26: getfield      #67                 // Field nextValue:Ljava/lang/Object;
      29: areturn

  private final boolean tryToComputeNext();
    Code:
       0: aload_0
       1: getstatic     #23                 // Field kotlin/collections/State.Failed:Lkotlin/collections/State;
       4: putfield      #18                 // Field state:Lkotlin/collections/State;
       7: aload_0
       8: invokevirtual #70                 // Method computeNext:()V
      11: aload_0
      12: getfield      #18                 // Field state:Lkotlin/collections/State;
      15: getstatic     #73                 // Field kotlin/collections/State.Ready:Lkotlin/collections/State;
      18: if_acmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  protected abstract void computeNext();

  protected final void setNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field nextValue:Ljava/lang/Object;
       5: aload_0
       6: getstatic     #73                 // Field kotlin/collections/State.Ready:Lkotlin/collections/State;
       9: putfield      #18                 // Field state:Lkotlin/collections/State;
      12: return

  protected final void done();
    Code:
       0: aload_0
       1: getstatic     #81                 // Field kotlin/collections/State.Done:Lkotlin/collections/State;
       4: putfield      #18                 // Field state:Lkotlin/collections/State;
       7: return

  public kotlin.collections.AbstractIterator();
    Code:
       0: aload_0
       1: invokespecial #82                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #65                 // Field kotlin/collections/State.NotReady:Lkotlin/collections/State;
       8: putfield      #18                 // Field state:Lkotlin/collections/State;
      11: return

  public void remove();
    Code:
       0: new           #85                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #87                 // String Operation is not supported for read-only collection
       6: invokespecial #88                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
