Compiled from "SlidingWindow.kt"
final class kotlin.collections.SlidingWindowKt$windowedIterator$1 extends kotlin.coroutines.jvm.internal.RestrictedSuspendLambda implements kotlin.jvm.functions.Function2<kotlin.sequences.SequenceScope<? super java.util.List<? extends T>>, kotlin.coroutines.Continuation<? super kotlin.Unit>, java.lang.Object> {
  private java.lang.Object L$0;

  java.lang.Object L$1;

  java.lang.Object L$2;

  int I$0;

  int label;

  final int $size;

  final int $step;

  final java.util.Iterator $iterator;

  final boolean $reuseBuffer;

  final boolean $partialWindows;

  public final java.lang.Object invokeSuspend(java.lang.Object);
    Code:
       0: invokestatic  #44                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
       3: astore        11
       5: aload_0
       6: getfield      #47                 // Field label:I
       9: tableswitch   { // 0 to 5
                     0: 48
                     1: 210
                     2: 366
                     3: 524
                     4: 652
                     5: 751
               default: 761
          }
      48: aload_1
      49: invokestatic  #53                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
      52: aload_0
      53: getfield      #55                 // Field L$0:Ljava/lang/Object;
      56: checkcast     #57                 // class kotlin/sequences/SequenceScope
      59: astore_2
      60: aload_0
      61: getfield      #60                 // Field $size:I
      64: sipush        1024
      67: invokestatic  #66                 // Method kotlin/ranges/RangesKt.coerceAtMost:(II)I
      70: istore_3
      71: aload_0
      72: getfield      #69                 // Field $step:I
      75: aload_0
      76: getfield      #60                 // Field $size:I
      79: isub
      80: istore        4
      82: iload         4
      84: iflt          375
      87: new           #71                 // class java/util/ArrayList
      90: dup
      91: iload_3
      92: invokespecial #75                 // Method java/util/ArrayList."<init>":(I)V
      95: astore        5
      97: iconst_0
      98: istore        6
     100: aload_0
     101: getfield      #79                 // Field $iterator:Ljava/util/Iterator;
     104: astore        9
     106: iconst_0
     107: istore        10
     109: aload         9
     111: astore        8
     113: aload         8
     115: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     120: ifeq          283
     123: aload         8
     125: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     130: astore        7
     132: iload         6
     134: ifle          146
     137: iload         6
     139: iconst_1
     140: isub
     141: istore        6
     143: goto          280
     146: aload         5
     148: aload         7
     150: invokevirtual #92                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     153: pop
     154: aload         5
     156: invokevirtual #96                 // Method java/util/ArrayList.size:()I
     159: aload_0
     160: getfield      #60                 // Field $size:I
     163: if_icmpne     280
     166: aload_2
     167: aload         5
     169: aload_0
     170: aload_0
     171: aload_2
     172: putfield      #55                 // Field L$0:Ljava/lang/Object;
     175: aload_0
     176: aload         5
     178: putfield      #98                 // Field L$1:Ljava/lang/Object;
     181: aload_0
     182: aload         8
     184: putfield      #100                // Field L$2:Ljava/lang/Object;
     187: aload_0
     188: iload         4
     190: putfield      #102                // Field I$0:I
     193: aload_0
     194: iconst_1
     195: putfield      #47                 // Field label:I
     198: invokevirtual #106                // Method kotlin/sequences/SequenceScope.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     201: dup
     202: aload         11
     204: if_acmpne     247
     207: aload         11
     209: areturn
     210: aload_0
     211: getfield      #102                // Field I$0:I
     214: istore        4
     216: aload_0
     217: getfield      #100                // Field L$2:Ljava/lang/Object;
     220: checkcast     #81                 // class java/util/Iterator
     223: astore        8
     225: aload_0
     226: getfield      #98                 // Field L$1:Ljava/lang/Object;
     229: checkcast     #71                 // class java/util/ArrayList
     232: astore        5
     234: aload_0
     235: getfield      #55                 // Field L$0:Ljava/lang/Object;
     238: checkcast     #57                 // class kotlin/sequences/SequenceScope
     241: astore_2
     242: aload_1
     243: invokestatic  #53                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     246: aload_1
     247: pop
     248: aload_0
     249: getfield      #110                // Field $reuseBuffer:Z
     252: ifeq          263
     255: aload         5
     257: invokevirtual #114                // Method java/util/ArrayList.clear:()V
     260: goto          276
     263: new           #71                 // class java/util/ArrayList
     266: dup
     267: aload_0
     268: getfield      #60                 // Field $size:I
     271: invokespecial #75                 // Method java/util/ArrayList."<init>":(I)V
     274: astore        5
     276: iload         4
     278: istore        6
     280: goto          113
     283: aload         5
     285: checkcast     #116                // class java/util/Collection
     288: astore        7
     290: iconst_0
     291: istore        8
     293: aload         7
     295: invokeinterface #119,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
     300: ifne          307
     303: iconst_1
     304: goto          308
     307: iconst_0
     308: ifeq          757
     311: aload_0
     312: getfield      #122                // Field $partialWindows:Z
     315: ifne          330
     318: aload         5
     320: invokevirtual #96                 // Method java/util/ArrayList.size:()I
     323: aload_0
     324: getfield      #60                 // Field $size:I
     327: if_icmpne     757
     330: aload_2
     331: aload         5
     333: aload_0
     334: aload_0
     335: aconst_null
     336: putfield      #55                 // Field L$0:Ljava/lang/Object;
     339: aload_0
     340: aconst_null
     341: putfield      #98                 // Field L$1:Ljava/lang/Object;
     344: aload_0
     345: aconst_null
     346: putfield      #100                // Field L$2:Ljava/lang/Object;
     349: aload_0
     350: iconst_2
     351: putfield      #47                 // Field label:I
     354: invokevirtual #106                // Method kotlin/sequences/SequenceScope.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     357: dup
     358: aload         11
     360: if_acmpne     371
     363: aload         11
     365: areturn
     366: aload_1
     367: invokestatic  #53                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     370: aload_1
     371: pop
     372: goto          757
     375: new           #124                // class kotlin/collections/RingBuffer
     378: dup
     379: iload_3
     380: invokespecial #125                // Method kotlin/collections/RingBuffer."<init>":(I)V
     383: astore        5
     385: aload_0
     386: getfield      #79                 // Field $iterator:Ljava/util/Iterator;
     389: astore        8
     391: iconst_0
     392: istore        9
     394: aload         8
     396: astore        7
     398: aload         7
     400: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     405: ifeq          568
     408: aload         7
     410: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     415: astore        6
     417: aload         5
     419: aload         6
     421: invokevirtual #127                // Method kotlin/collections/RingBuffer.add:(Ljava/lang/Object;)V
     424: aload         5
     426: invokevirtual #130                // Method kotlin/collections/RingBuffer.isFull:()Z
     429: ifeq          565
     432: aload         5
     434: invokevirtual #131                // Method kotlin/collections/RingBuffer.size:()I
     437: aload_0
     438: getfield      #60                 // Field $size:I
     441: if_icmpge     458
     444: aload         5
     446: aload_0
     447: getfield      #60                 // Field $size:I
     450: invokevirtual #135                // Method kotlin/collections/RingBuffer.expanded:(I)Lkotlin/collections/RingBuffer;
     453: astore        5
     455: goto          565
     458: aload_2
     459: aload_0
     460: getfield      #110                // Field $reuseBuffer:Z
     463: ifeq          474
     466: aload         5
     468: checkcast     #137                // class java/util/List
     471: goto          489
     474: new           #71                 // class java/util/ArrayList
     477: dup
     478: aload         5
     480: checkcast     #116                // class java/util/Collection
     483: invokespecial #140                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     486: checkcast     #137                // class java/util/List
     489: aload_0
     490: aload_0
     491: aload_2
     492: putfield      #55                 // Field L$0:Ljava/lang/Object;
     495: aload_0
     496: aload         5
     498: putfield      #98                 // Field L$1:Ljava/lang/Object;
     501: aload_0
     502: aload         7
     504: putfield      #100                // Field L$2:Ljava/lang/Object;
     507: aload_0
     508: iconst_3
     509: putfield      #47                 // Field label:I
     512: invokevirtual #106                // Method kotlin/sequences/SequenceScope.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     515: dup
     516: aload         11
     518: if_acmpne     555
     521: aload         11
     523: areturn
     524: aload_0
     525: getfield      #100                // Field L$2:Ljava/lang/Object;
     528: checkcast     #81                 // class java/util/Iterator
     531: astore        7
     533: aload_0
     534: getfield      #98                 // Field L$1:Ljava/lang/Object;
     537: checkcast     #124                // class kotlin/collections/RingBuffer
     540: astore        5
     542: aload_0
     543: getfield      #55                 // Field L$0:Ljava/lang/Object;
     546: checkcast     #57                 // class kotlin/sequences/SequenceScope
     549: astore_2
     550: aload_1
     551: invokestatic  #53                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     554: aload_1
     555: pop
     556: aload         5
     558: aload_0
     559: getfield      #69                 // Field $step:I
     562: invokevirtual #143                // Method kotlin/collections/RingBuffer.removeFirst:(I)V
     565: goto          398
     568: aload_0
     569: getfield      #122                // Field $partialWindows:Z
     572: ifeq          757
     575: aload         5
     577: invokevirtual #131                // Method kotlin/collections/RingBuffer.size:()I
     580: aload_0
     581: getfield      #69                 // Field $step:I
     584: if_icmple     687
     587: aload_2
     588: aload_0
     589: getfield      #110                // Field $reuseBuffer:Z
     592: ifeq          603
     595: aload         5
     597: checkcast     #137                // class java/util/List
     600: goto          618
     603: new           #71                 // class java/util/ArrayList
     606: dup
     607: aload         5
     609: checkcast     #116                // class java/util/Collection
     612: invokespecial #140                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     615: checkcast     #137                // class java/util/List
     618: aload_0
     619: aload_0
     620: aload_2
     621: putfield      #55                 // Field L$0:Ljava/lang/Object;
     624: aload_0
     625: aload         5
     627: putfield      #98                 // Field L$1:Ljava/lang/Object;
     630: aload_0
     631: aconst_null
     632: putfield      #100                // Field L$2:Ljava/lang/Object;
     635: aload_0
     636: iconst_4
     637: putfield      #47                 // Field label:I
     640: invokevirtual #106                // Method kotlin/sequences/SequenceScope.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     643: dup
     644: aload         11
     646: if_acmpne     674
     649: aload         11
     651: areturn
     652: aload_0
     653: getfield      #98                 // Field L$1:Ljava/lang/Object;
     656: checkcast     #124                // class kotlin/collections/RingBuffer
     659: astore        5
     661: aload_0
     662: getfield      #55                 // Field L$0:Ljava/lang/Object;
     665: checkcast     #57                 // class kotlin/sequences/SequenceScope
     668: astore_2
     669: aload_1
     670: invokestatic  #53                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     673: aload_1
     674: pop
     675: aload         5
     677: aload_0
     678: getfield      #69                 // Field $step:I
     681: invokevirtual #143                // Method kotlin/collections/RingBuffer.removeFirst:(I)V
     684: goto          575
     687: aload         5
     689: checkcast     #116                // class java/util/Collection
     692: astore        6
     694: iconst_0
     695: istore        7
     697: aload         6
     699: invokeinterface #119,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
     704: ifne          711
     707: iconst_1
     708: goto          712
     711: iconst_0
     712: ifeq          757
     715: aload_2
     716: aload         5
     718: aload_0
     719: aload_0
     720: aconst_null
     721: putfield      #55                 // Field L$0:Ljava/lang/Object;
     724: aload_0
     725: aconst_null
     726: putfield      #98                 // Field L$1:Ljava/lang/Object;
     729: aload_0
     730: aconst_null
     731: putfield      #100                // Field L$2:Ljava/lang/Object;
     734: aload_0
     735: iconst_5
     736: putfield      #47                 // Field label:I
     739: invokevirtual #106                // Method kotlin/sequences/SequenceScope.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     742: dup
     743: aload         11
     745: if_acmpne     756
     748: aload         11
     750: areturn
     751: aload_1
     752: invokestatic  #53                 // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     755: aload_1
     756: pop
     757: getstatic     #149                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
     760: areturn
     761: new           #151                // class java/lang/IllegalStateException
     764: dup
     765: ldc           #153                // String call to \'resume\' before \'invoke\' with coroutine
     767: invokespecial #156                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     770: athrow

  kotlin.collections.SlidingWindowKt$windowedIterator$1(int, int, java.util.Iterator, boolean, boolean, kotlin.coroutines.Continuation);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #60                 // Field $size:I
       5: aload_0
       6: iload_2
       7: putfield      #69                 // Field $step:I
      10: aload_0
      11: aload_3
      12: putfield      #79                 // Field $iterator:Ljava/util/Iterator;
      15: aload_0
      16: iload         4
      18: putfield      #110                // Field $reuseBuffer:Z
      21: aload_0
      22: iload         5
      24: putfield      #122                // Field $partialWindows:Z
      27: aload_0
      28: iconst_2
      29: aload         6
      31: invokespecial #171                // Method kotlin/coroutines/jvm/internal/RestrictedSuspendLambda."<init>":(ILkotlin/coroutines/Continuation;)V
      34: return

  public final kotlin.coroutines.Continuation<kotlin.Unit> create(java.lang.Object, kotlin.coroutines.Continuation<?>);
    Code:
       0: aload_2
       1: ldc           #176                // String completion
       3: invokestatic  #182                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #2                  // class kotlin/collections/SlidingWindowKt$windowedIterator$1
       9: dup
      10: aload_0
      11: getfield      #60                 // Field $size:I
      14: aload_0
      15: getfield      #69                 // Field $step:I
      18: aload_0
      19: getfield      #79                 // Field $iterator:Ljava/util/Iterator;
      22: aload_0
      23: getfield      #110                // Field $reuseBuffer:Z
      26: aload_0
      27: getfield      #122                // Field $partialWindows:Z
      30: aload_2
      31: invokespecial #184                // Method "<init>":(IILjava/util/Iterator;ZZLkotlin/coroutines/Continuation;)V
      34: astore_3
      35: aload_1
      36: aload_3
      37: aload_1
      38: putfield      #55                 // Field L$0:Ljava/lang/Object;
      41: aload_3
      42: areturn

  public final java.lang.Object invoke(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #191                // class kotlin/coroutines/Continuation
       6: invokevirtual #193                // Method create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;
       9: checkcast     #2                  // class kotlin/collections/SlidingWindowKt$windowedIterator$1
      12: getstatic     #149                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
      15: invokevirtual #195                // Method invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn
}
