Compiled from "Sequences.kt"
public final class kotlin.sequences.TakeSequence<T> implements kotlin.sequences.Sequence<T>, kotlin.sequences.DropTakeSequence<T> {
  private final kotlin.sequences.Sequence<T> sequence;

  private final int count;

  public kotlin.sequences.Sequence<T> drop(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #17                 // Field count:I
       5: if_icmplt     14
       8: invokestatic  #23                 // Method kotlin/sequences/SequencesKt.emptySequence:()Lkotlin/sequences/Sequence;
      11: goto          33
      14: new           #25                 // class kotlin/sequences/SubSequence
      17: dup
      18: aload_0
      19: getfield      #29                 // Field sequence:Lkotlin/sequences/Sequence;
      22: iload_1
      23: aload_0
      24: getfield      #17                 // Field count:I
      27: invokespecial #33                 // Method kotlin/sequences/SubSequence."<init>":(Lkotlin/sequences/Sequence;II)V
      30: checkcast     #7                  // class kotlin/sequences/Sequence
      33: areturn

  public kotlin.sequences.Sequence<T> take(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #17                 // Field count:I
       5: if_icmplt     15
       8: aload_0
       9: checkcast     #7                  // class kotlin/sequences/Sequence
      12: goto          30
      15: new           #2                  // class kotlin/sequences/TakeSequence
      18: dup
      19: aload_0
      20: getfield      #29                 // Field sequence:Lkotlin/sequences/Sequence;
      23: iload_1
      24: invokespecial #40                 // Method "<init>":(Lkotlin/sequences/Sequence;I)V
      27: checkcast     #7                  // class kotlin/sequences/Sequence
      30: areturn

  public java.util.Iterator<T> iterator();
    Code:
       0: new           #45                 // class kotlin/sequences/TakeSequence$iterator$1
       3: dup
       4: aload_0
       5: invokespecial #48                 // Method kotlin/sequences/TakeSequence$iterator$1."<init>":(Lkotlin/sequences/TakeSequence;)V
       8: checkcast     #50                 // class java/util/Iterator
      11: areturn

  public kotlin.sequences.TakeSequence(kotlin.sequences.Sequence<? extends T>, int);
    Code:
       0: aload_1
       1: ldc           #53                 // String sequence
       3: invokestatic  #59                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #62                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #29                 // Field sequence:Lkotlin/sequences/Sequence;
      15: aload_0
      16: iload_2
      17: putfield      #17                 // Field count:I
      20: nop
      21: aload_0
      22: getfield      #17                 // Field count:I
      25: iflt          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: istore_3
      34: iconst_0
      35: istore        4
      37: iconst_0
      38: istore        5
      40: iload_3
      41: ifne          92
      44: iconst_0
      45: istore        6
      47: new           #64                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #67                 // String count must be non-negative, but was
      56: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: getfield      #17                 // Field count:I
      63: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: bipush        46
      68: invokevirtual #77                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      71: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: astore        5
      76: new           #83                 // class java/lang/IllegalArgumentException
      79: dup
      80: aload         5
      82: invokevirtual #84                 // Method java/lang/Object.toString:()Ljava/lang/String;
      85: invokespecial #87                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      88: checkcast     #89                 // class java/lang/Throwable
      91: athrow
      92: return

  public static final int access$getCount$p(kotlin.sequences.TakeSequence);
    Code:
       0: aload_0
       1: getfield      #17                 // Field count:I
       4: ireturn

  public static final kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeSequence);
    Code:
       0: aload_0
       1: getfield      #29                 // Field sequence:Lkotlin/sequences/Sequence;
       4: areturn
}
