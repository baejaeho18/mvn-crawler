Compiled from "SafeContinuationJvm.kt"
public final class kotlin.coroutines.SafeContinuation<T> implements kotlin.coroutines.Continuation<T>, kotlin.coroutines.jvm.internal.CoroutineStackFrame {
  private volatile java.lang.Object result;

  private final kotlin.coroutines.Continuation<T> delegate;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<kotlin.coroutines.SafeContinuation<?>, java.lang.Object> RESULT;

  private static final kotlin.coroutines.SafeContinuation$Companion Companion;

  public kotlin.coroutines.CoroutineContext getContext();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Lkotlin/coroutines/Continuation;
       4: invokeinterface #22,  1           // InterfaceMethod kotlin/coroutines/Continuation.getContext:()Lkotlin/coroutines/CoroutineContext;
       9: areturn

  public void resumeWith(java.lang.Object);
    Code:
       0: nop
       1: aload_0
       2: getfield      #30                 // Field result:Ljava/lang/Object;
       5: astore_2
       6: nop
       7: aload_2
       8: getstatic     #36                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.UNDECIDED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
      11: if_acmpne     29
      14: getstatic     #40                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      17: aload_0
      18: getstatic     #36                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.UNDECIDED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
      21: aload_1
      22: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      25: ifeq          76
      28: return
      29: aload_2
      30: invokestatic  #52                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      33: if_acmpne     63
      36: getstatic     #40                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      39: aload_0
      40: invokestatic  #52                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      43: getstatic     #55                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.RESUMED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
      46: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      49: ifeq          76
      52: aload_0
      53: getfield      #20                 // Field delegate:Lkotlin/coroutines/Continuation;
      56: aload_1
      57: invokeinterface #57,  2           // InterfaceMethod kotlin/coroutines/Continuation.resumeWith:(Ljava/lang/Object;)V
      62: return
      63: new           #59                 // class java/lang/IllegalStateException
      66: dup
      67: ldc           #61                 // String Already resumed
      69: invokespecial #65                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      72: checkcast     #67                 // class java/lang/Throwable
      75: athrow
      76: goto          0

  public final java.lang.Object getOrThrow();
    Code:
       0: aload_0
       1: getfield      #30                 // Field result:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: getstatic     #36                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.UNDECIDED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
       9: if_acmpne     37
      12: getstatic     #40                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: getstatic     #36                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.UNDECIDED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
      19: invokestatic  #52                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      22: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      25: ifeq          32
      28: invokestatic  #52                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      31: areturn
      32: aload_0
      33: getfield      #30                 // Field result:Ljava/lang/Object;
      36: astore_1
      37: nop
      38: aload_1
      39: getstatic     #55                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.RESUMED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
      42: if_acmpne     51
      45: invokestatic  #52                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      48: goto          67
      51: aload_1
      52: instanceof    #72                 // class kotlin/Result$Failure
      55: ifeq          66
      58: aload_1
      59: checkcast     #72                 // class kotlin/Result$Failure
      62: getfield      #76                 // Field kotlin/Result$Failure.exception:Ljava/lang/Throwable;
      65: athrow
      66: aload_1
      67: areturn

  public kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Lkotlin/coroutines/Continuation;
       4: dup
       5: instanceof    #9                  // class kotlin/coroutines/jvm/internal/CoroutineStackFrame
       8: ifne          13
      11: pop
      12: aconst_null
      13: checkcast     #9                  // class kotlin/coroutines/jvm/internal/CoroutineStackFrame
      16: areturn

  public java.lang.StackTraceElement getStackTraceElement();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String toString();
    Code:
       0: new           #84                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #89                 // String SafeContinuation for
       9: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #20                 // Field delegate:Lkotlin/coroutines/Continuation;
      16: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public kotlin.coroutines.SafeContinuation(kotlin.coroutines.Continuation<? super T>, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #102                // String delegate
       3: invokestatic  #108                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #109                // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #20                 // Field delegate:Lkotlin/coroutines/Continuation;
      15: aload_0
      16: aload_2
      17: putfield      #30                 // Field result:Ljava/lang/Object;
      20: return

  public kotlin.coroutines.SafeContinuation(kotlin.coroutines.Continuation<? super T>);
    Code:
       0: aload_1
       1: ldc           #102                // String delegate
       3: invokestatic  #108                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: getstatic     #36                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.UNDECIDED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
      11: invokespecial #114                // Method "<init>":(Lkotlin/coroutines/Continuation;Ljava/lang/Object;)V
      14: return

  static {};
    Code:
       0: new           #141                // class kotlin/coroutines/SafeContinuation$Companion
       3: dup
       4: aconst_null
       5: invokespecial #144                // Method kotlin/coroutines/SafeContinuation$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #146                // Field Companion:Lkotlin/coroutines/SafeContinuation$Companion;
      11: ldc           #2                  // class kotlin/coroutines/SafeContinuation
      13: ldc           #5                  // class java/lang/Object
      15: ldc           #147                // String result
      17: invokestatic  #151                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      20: putstatic     #40                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      23: return
}
