Compiled from "TimeSource.kt"
public abstract class kotlin.time.TimeMark {
  public abstract double elapsedNow-UwyO8pc();

  public kotlin.time.TimeMark plus-LRDsOJo(double);
    Code:
       0: new           #17                 // class kotlin/time/AdjustedTimeMark
       3: dup
       4: aload_0
       5: dload_1
       6: aconst_null
       7: invokespecial #21                 // Method kotlin/time/AdjustedTimeMark."<init>":(Lkotlin/time/TimeMark;DLkotlin/jvm/internal/DefaultConstructorMarker;)V
      10: checkcast     #2                  // class kotlin/time/TimeMark
      13: areturn

  public kotlin.time.TimeMark minus-LRDsOJo(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #30                 // Method kotlin/time/Duration."unaryMinus-UwyO8pc":(D)D
       5: invokevirtual #32                 // Method "plus-LRDsOJo":(D)Lkotlin/time/TimeMark;
       8: areturn

  public final boolean hasPassedNow();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method "elapsedNow-UwyO8pc":()D
       4: invokestatic  #40                 // Method kotlin/time/Duration."isNegative-impl":(D)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public final boolean hasNotPassedNow();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method "elapsedNow-UwyO8pc":()D
       4: invokestatic  #40                 // Method kotlin/time/Duration."isNegative-impl":(D)Z
       7: ireturn

  public kotlin.time.TimeMark();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method java/lang/Object."<init>":()V
       4: return
}
