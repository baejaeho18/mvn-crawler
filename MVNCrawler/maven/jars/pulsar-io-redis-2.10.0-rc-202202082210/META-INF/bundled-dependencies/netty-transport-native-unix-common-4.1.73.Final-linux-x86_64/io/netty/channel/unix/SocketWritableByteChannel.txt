Compiled from "SocketWritableByteChannel.java"
public abstract class io.netty.channel.unix.SocketWritableByteChannel implements java.nio.channels.WritableByteChannel {
  private final io.netty.channel.unix.FileDescriptor fd;

  protected io.netty.channel.unix.SocketWritableByteChannel(io.netty.channel.unix.FileDescriptor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String fd
       8: invokestatic  #3                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class io/netty/channel/unix/FileDescriptor
      14: putfield      #5                  // Field fd:Lio/netty/channel/unix/FileDescriptor;
      17: return

  public final int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
       4: istore_3
       5: aload_1
       6: invokevirtual #7                  // Method java/nio/ByteBuffer.limit:()I
       9: istore        4
      11: aload_1
      12: invokevirtual #8                  // Method java/nio/ByteBuffer.isDirect:()Z
      15: ifeq          35
      18: aload_0
      19: getfield      #5                  // Field fd:Lio/netty/channel/unix/FileDescriptor;
      22: aload_1
      23: iload_3
      24: aload_1
      25: invokevirtual #7                  // Method java/nio/ByteBuffer.limit:()I
      28: invokevirtual #9                  // Method io/netty/channel/unix/FileDescriptor.write:(Ljava/nio/ByteBuffer;II)I
      31: istore_2
      32: goto          178
      35: iload         4
      37: iload_3
      38: isub
      39: istore        5
      41: aconst_null
      42: astore        6
      44: iload         5
      46: ifne          57
      49: getstatic     #10                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      52: astore        6
      54: goto          104
      57: aload_0
      58: invokevirtual #11                 // Method alloc:()Lio/netty/buffer/ByteBufAllocator;
      61: astore        7
      63: aload         7
      65: invokeinterface #12,  1           // InterfaceMethod io/netty/buffer/ByteBufAllocator.isDirectBufferPooled:()Z
      70: ifeq          87
      73: aload         7
      75: iload         5
      77: invokeinterface #13,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      82: astore        6
      84: goto          104
      87: invokestatic  #14                 // Method io/netty/buffer/ByteBufUtil.threadLocalDirectBuffer:()Lio/netty/buffer/ByteBuf;
      90: astore        6
      92: aload         6
      94: ifnonnull     104
      97: iload         5
      99: invokestatic  #15                 // Method io/netty/buffer/Unpooled.directBuffer:(I)Lio/netty/buffer/ByteBuf;
     102: astore        6
     104: aload         6
     106: aload_1
     107: invokevirtual #16                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     110: invokevirtual #17                 // Method io/netty/buffer/ByteBuf.writeBytes:(Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;
     113: pop
     114: aload         6
     116: aload         6
     118: invokevirtual #18                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     121: iload         5
     123: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
     126: astore        7
     128: aload_0
     129: getfield      #5                  // Field fd:Lio/netty/channel/unix/FileDescriptor;
     132: aload         7
     134: aload         7
     136: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
     139: aload         7
     141: invokevirtual #7                  // Method java/nio/ByteBuffer.limit:()I
     144: invokevirtual #9                  // Method io/netty/channel/unix/FileDescriptor.write:(Ljava/nio/ByteBuffer;II)I
     147: istore_2
     148: aload         6
     150: ifnull        178
     153: aload         6
     155: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.release:()Z
     158: pop
     159: goto          178
     162: astore        8
     164: aload         6
     166: ifnull        175
     169: aload         6
     171: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.release:()Z
     174: pop
     175: aload         8
     177: athrow
     178: iload_2
     179: ifle          190
     182: aload_1
     183: iload_3
     184: iload_2
     185: iadd
     186: invokevirtual #21                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     189: pop
     190: iload_2
     191: ireturn
    Exception table:
       from    to  target type
          44   148   162   any
         162   164   162   any

  public final boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fd:Lio/netty/channel/unix/FileDescriptor;
       4: invokevirtual #22                 // Method io/netty/channel/unix/FileDescriptor.isOpen:()Z
       7: ireturn

  public final void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field fd:Lio/netty/channel/unix/FileDescriptor;
       4: invokevirtual #23                 // Method io/netty/channel/unix/FileDescriptor.close:()V
       7: return

  protected abstract io.netty.buffer.ByteBufAllocator alloc();
}
