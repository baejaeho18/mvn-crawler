Compiled from "Log4jMarkerFactory.java"
public class org.apache.logging.slf4j.Log4jMarkerFactory implements org.slf4j.IMarkerFactory {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.slf4j.Marker> markerMap;

  public org.apache.logging.slf4j.Log4jMarkerFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field markerMap:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public org.slf4j.Marker getMarker(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #5                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #6                  // String Marker name must not be null
      10: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #4                  // Field markerMap:Ljava/util/concurrent/ConcurrentMap;
      18: aload_1
      19: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #9                  // class org/slf4j/Marker
      27: astore_2
      28: aload_2
      29: ifnull        34
      32: aload_2
      33: areturn
      34: aload_1
      35: invokestatic  #10                 // Method org/apache/logging/log4j/MarkerManager.getMarker:(Ljava/lang/String;)Lorg/apache/logging/log4j/Marker;
      38: astore_3
      39: aload_0
      40: aload_1
      41: aload_3
      42: invokespecial #11                 // Method addMarkerIfAbsent:(Ljava/lang/String;Lorg/apache/logging/log4j/Marker;)Lorg/slf4j/Marker;
      45: areturn

  private org.slf4j.Marker addMarkerIfAbsent(java.lang.String, org.apache.logging.log4j.Marker);
    Code:
       0: new           #12                 // class org/apache/logging/slf4j/Log4jMarker
       3: dup
       4: aload_2
       5: invokespecial #13                 // Method org/apache/logging/slf4j/Log4jMarker."<init>":(Lorg/apache/logging/log4j/Marker;)V
       8: astore_3
       9: aload_0
      10: getfield      #4                  // Field markerMap:Ljava/util/concurrent/ConcurrentMap;
      13: aload_1
      14: aload_3
      15: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #9                  // class org/slf4j/Marker
      23: astore        4
      25: aload         4
      27: ifnonnull     34
      30: aload_3
      31: goto          36
      34: aload         4
      36: areturn

  public org.slf4j.Marker getMarker(org.slf4j.Marker);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #5                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Marker must not be null
      10: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #4                  // Field markerMap:Ljava/util/concurrent/ConcurrentMap;
      18: aload_1
      19: invokeinterface #16,  1           // InterfaceMethod org/slf4j/Marker.getName:()Ljava/lang/String;
      24: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #9                  // class org/slf4j/Marker
      32: astore_2
      33: aload_2
      34: ifnull        39
      37: aload_2
      38: areturn
      39: aload_0
      40: aload_1
      41: invokeinterface #16,  1           // InterfaceMethod org/slf4j/Marker.getName:()Ljava/lang/String;
      46: aload_1
      47: invokestatic  #17                 // Method convertMarker:(Lorg/slf4j/Marker;)Lorg/apache/logging/log4j/Marker;
      50: invokespecial #11                 // Method addMarkerIfAbsent:(Ljava/lang/String;Lorg/apache/logging/log4j/Marker;)Lorg/slf4j/Marker;
      53: areturn

  private static org.apache.logging.log4j.Marker convertMarker(org.slf4j.Marker);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #5                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Marker must not be null
      10: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: new           #18                 // class java/util/ArrayList
      18: dup
      19: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
      22: invokestatic  #20                 // Method convertMarker:(Lorg/slf4j/Marker;Ljava/util/Collection;)Lorg/apache/logging/log4j/Marker;
      25: areturn

  private static org.apache.logging.log4j.Marker convertMarker(org.slf4j.Marker, java.util.Collection<org.slf4j.Marker>);
    Code:
       0: aload_0
       1: invokeinterface #16,  1           // InterfaceMethod org/slf4j/Marker.getName:()Ljava/lang/String;
       6: invokestatic  #10                 // Method org/apache/logging/log4j/MarkerManager.getMarker:(Ljava/lang/String;)Lorg/apache/logging/log4j/Marker;
       9: astore_2
      10: aload_0
      11: invokeinterface #21,  1           // InterfaceMethod org/slf4j/Marker.hasReferences:()Z
      16: ifeq          109
      19: aload_0
      20: invokeinterface #22,  1           // InterfaceMethod org/slf4j/Marker.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          109
      35: aload_3
      36: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #9                  // class org/slf4j/Marker
      44: astore        4
      46: aload_1
      47: aload         4
      49: invokeinterface #25,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      54: ifeq          77
      57: getstatic     #26                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      60: ldc           #27                 // String Found a cycle in Marker [{}]. Cycle will be broken.
      62: aload         4
      64: invokeinterface #16,  1           // InterfaceMethod org/slf4j/Marker.getName:()Ljava/lang/String;
      69: invokeinterface #28,  3           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      74: goto          106
      77: aload_1
      78: aload         4
      80: invokeinterface #29,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      85: pop
      86: aload_2
      87: iconst_1
      88: anewarray     #30                 // class org/apache/logging/log4j/Marker
      91: dup
      92: iconst_0
      93: aload         4
      95: aload_1
      96: invokestatic  #20                 // Method convertMarker:(Lorg/slf4j/Marker;Ljava/util/Collection;)Lorg/apache/logging/log4j/Marker;
      99: aastore
     100: invokeinterface #31,  2           // InterfaceMethod org/apache/logging/log4j/Marker.addParents:([Lorg/apache/logging/log4j/Marker;)Lorg/apache/logging/log4j/Marker;
     105: pop
     106: goto          26
     109: aload_2
     110: areturn

  public boolean exists(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field markerMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean detachMarker(java.lang.String);
    Code:
       0: iconst_0
       1: ireturn

  public org.slf4j.Marker getDetachedMarker(java.lang.String);
    Code:
       0: getstatic     #26                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: ldc           #33                 // String Log4j does not support detached Markers. Returned Marker [{}] will be unchanged.
       5: aload_1
       6: invokeinterface #28,  3           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: aload_1
      13: invokevirtual #34                 // Method getMarker:(Ljava/lang/String;)Lorg/slf4j/Marker;
      16: areturn

  static {};
    Code:
       0: invokestatic  #35                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #26                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: return
}
