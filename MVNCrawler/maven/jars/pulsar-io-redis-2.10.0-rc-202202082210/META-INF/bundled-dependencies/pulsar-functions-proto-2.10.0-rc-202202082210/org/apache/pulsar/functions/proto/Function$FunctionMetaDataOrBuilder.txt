Compiled from "Function.java"
public interface org.apache.pulsar.functions.proto.Function$FunctionMetaDataOrBuilder extends com.google.protobuf.MessageOrBuilder {
  public abstract boolean hasFunctionDetails();

  public abstract org.apache.pulsar.functions.proto.Function$FunctionDetails getFunctionDetails();

  public abstract org.apache.pulsar.functions.proto.Function$FunctionDetailsOrBuilder getFunctionDetailsOrBuilder();

  public abstract boolean hasPackageLocation();

  public abstract org.apache.pulsar.functions.proto.Function$PackageLocationMetaData getPackageLocation();

  public abstract org.apache.pulsar.functions.proto.Function$PackageLocationMetaDataOrBuilder getPackageLocationOrBuilder();

  public abstract long getVersion();

  public abstract long getCreateTime();

  public abstract int getInstanceStatesCount();

  public abstract boolean containsInstanceStates(int);

  public abstract java.util.Map<java.lang.Integer, org.apache.pulsar.functions.proto.Function$FunctionState> getInstanceStates();

  public abstract java.util.Map<java.lang.Integer, org.apache.pulsar.functions.proto.Function$FunctionState> getInstanceStatesMap();

  public abstract org.apache.pulsar.functions.proto.Function$FunctionState getInstanceStatesOrDefault(int, org.apache.pulsar.functions.proto.Function$FunctionState);

  public abstract org.apache.pulsar.functions.proto.Function$FunctionState getInstanceStatesOrThrow(int);

  public abstract java.util.Map<java.lang.Integer, java.lang.Integer> getInstanceStatesValue();

  public abstract java.util.Map<java.lang.Integer, java.lang.Integer> getInstanceStatesValueMap();

  public abstract int getInstanceStatesValueOrDefault(int, int);

  public abstract int getInstanceStatesValueOrThrow(int);

  public abstract boolean hasFunctionAuthSpec();

  public abstract org.apache.pulsar.functions.proto.Function$FunctionAuthenticationSpec getFunctionAuthSpec();

  public abstract org.apache.pulsar.functions.proto.Function$FunctionAuthenticationSpecOrBuilder getFunctionAuthSpecOrBuilder();
}
