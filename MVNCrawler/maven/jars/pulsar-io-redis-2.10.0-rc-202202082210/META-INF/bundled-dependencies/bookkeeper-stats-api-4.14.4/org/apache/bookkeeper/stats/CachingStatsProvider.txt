Compiled from "CachingStatsProvider.java"
public class org.apache.bookkeeper.stats.CachingStatsProvider implements org.apache.bookkeeper.stats.StatsProvider {
  protected final org.apache.bookkeeper.stats.StatsProvider underlying;

  protected final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.bookkeeper.stats.StatsLogger> statsLoggers;

  public org.apache.bookkeeper.stats.CachingStatsProvider(org.apache.bookkeeper.stats.StatsProvider);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field underlying:Lorg/apache/bookkeeper/stats/StatsProvider;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putfield      #5                  // Field statsLoggers:Ljava/util/concurrent/ConcurrentMap;
      20: return

  public void start(org.apache.commons.configuration.Configuration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlying:Lorg/apache/bookkeeper/stats/StatsProvider;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod org/apache/bookkeeper/stats/StatsProvider.start:(Lorg/apache/commons/configuration/Configuration;)V
      10: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlying:Lorg/apache/bookkeeper/stats/StatsProvider;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/bookkeeper/stats/StatsProvider.stop:()V
       9: return

  public org.apache.bookkeeper.stats.StatsLogger getStatsLogger(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field statsLoggers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #9                  // class org/apache/bookkeeper/stats/StatsLogger
      13: astore_2
      14: aconst_null
      15: aload_2
      16: if_acmpne     66
      19: new           #10                 // class org/apache/bookkeeper/stats/CachingStatsLogger
      22: dup
      23: aload_0
      24: getfield      #2                  // Field underlying:Lorg/apache/bookkeeper/stats/StatsProvider;
      27: aload_1
      28: invokeinterface #11,  2           // InterfaceMethod org/apache/bookkeeper/stats/StatsProvider.getStatsLogger:(Ljava/lang/String;)Lorg/apache/bookkeeper/stats/StatsLogger;
      33: invokespecial #12                 // Method org/apache/bookkeeper/stats/CachingStatsLogger."<init>":(Lorg/apache/bookkeeper/stats/StatsLogger;)V
      36: astore_3
      37: aload_0
      38: getfield      #5                  // Field statsLoggers:Ljava/util/concurrent/ConcurrentMap;
      41: aload_1
      42: aload_3
      43: invokeinterface #13,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #9                  // class org/apache/bookkeeper/stats/StatsLogger
      51: astore        4
      53: aconst_null
      54: aload         4
      56: if_acmpne     63
      59: aload_3
      60: goto          65
      63: aload         4
      65: astore_2
      66: aload_2
      67: areturn

  public java.lang.String getStatsName(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlying:Lorg/apache/bookkeeper/stats/StatsProvider;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod org/apache/bookkeeper/stats/StatsProvider.getStatsName:([Ljava/lang/String;)Ljava/lang/String;
      10: areturn
}
