Compiled from "NettyClientStream.java"
public abstract class io.grpc.netty.NettyClientStream$TransportState extends io.grpc.internal.Http2ClientStreamTransportState implements io.grpc.netty.StreamIdHolder {
  private static final int NON_EXISTENT_ID;

  private final java.lang.String methodName;

  private final io.grpc.netty.NettyClientHandler handler;

  private final io.netty.channel.EventLoop eventLoop;

  private int id;

  private io.netty.handler.codec.http2.Http2Stream http2Stream;

  private io.perfmark.Tag tag;

  protected io.grpc.netty.NettyClientStream$TransportState(io.grpc.netty.NettyClientHandler, io.netty.channel.EventLoop, int, io.grpc.internal.StatsTraceContext, io.grpc.internal.TransportTracer, java.lang.String);
    Code:
       0: aload_0
       1: iload_3
       2: aload         4
       4: aload         5
       6: invokespecial #2                  // Method io/grpc/internal/Http2ClientStreamTransportState."<init>":(ILio/grpc/internal/StatsTraceContext;Lio/grpc/internal/TransportTracer;)V
       9: aload_0
      10: aload         6
      12: ldc           #3                  // String methodName
      14: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #5                  // class java/lang/String
      20: putfield      #6                  // Field methodName:Ljava/lang/String;
      23: aload_0
      24: aload_1
      25: ldc           #7                  // String handler
      27: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #8                  // class io/grpc/netty/NettyClientHandler
      33: putfield      #1                  // Field handler:Lio/grpc/netty/NettyClientHandler;
      36: aload_0
      37: aload_2
      38: ldc           #9                  // String eventLoop
      40: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #10                 // class io/netty/channel/EventLoop
      46: putfield      #11                 // Field eventLoop:Lio/netty/channel/EventLoop;
      49: aload_0
      50: aload         6
      52: invokestatic  #12                 // Method io/perfmark/PerfMark.createTag:(Ljava/lang/String;)Lio/perfmark/Tag;
      55: putfield      #13                 // Field tag:Lio/perfmark/Tag;
      58: return

  public int id();
    Code:
       0: aload_0
       1: getfield      #14                 // Field id:I
       4: ireturn

  public void setId(int);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #15                 // String id must be positive %s
      11: iload_1
      12: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      15: aload_0
      16: getfield      #14                 // Field id:I
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ldc           #17                 // String id has been previously set: %s
      29: aload_0
      30: getfield      #14                 // Field id:I
      33: invokestatic  #18                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;I)V
      36: aload_0
      37: iload_1
      38: putfield      #14                 // Field id:I
      41: aload_0
      42: aload_0
      43: getfield      #6                  // Field methodName:Ljava/lang/String;
      46: iload_1
      47: i2l
      48: invokestatic  #19                 // Method io/perfmark/PerfMark.createTag:(Ljava/lang/String;J)Lio/perfmark/Tag;
      51: putfield      #13                 // Field tag:Lio/perfmark/Tag;
      54: return

  void setNonExistent();
    Code:
       0: aload_0
       1: getfield      #14                 // Field id:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #20                 // String Id has been previously set: %s
      14: aload_0
      15: getfield      #14                 // Field id:I
      18: invokestatic  #18                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;I)V
      21: aload_0
      22: iconst_m1
      23: putfield      #14                 // Field id:I
      26: return

  boolean isNonExistent();
    Code:
       0: aload_0
       1: getfield      #14                 // Field id:I
       4: iconst_m1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void setHttp2Stream(io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_1
       1: ldc           #22                 // String http2Stream
       3: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #23                 // Field http2Stream:Lio/netty/handler/codec/http2/Http2Stream;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #24                 // String Can only set http2Stream once
      21: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      24: aload_0
      25: aload_1
      26: putfield      #23                 // Field http2Stream:Lio/netty/handler/codec/http2/Http2Stream;
      29: aload_0
      30: invokevirtual #26                 // Method onStreamAllocated:()V
      33: aload_0
      34: invokevirtual #27                 // Method getTransportTracer:()Lio/grpc/internal/TransportTracer;
      37: invokevirtual #28                 // Method io/grpc/internal/TransportTracer.reportLocalStreamStarted:()V
      40: return

  public io.netty.handler.codec.http2.Http2Stream http2Stream();
    Code:
       0: aload_0
       1: getfield      #23                 // Field http2Stream:Lio/netty/handler/codec/http2/Http2Stream;
       4: areturn

  protected abstract io.grpc.Status statusFromFailedFuture(io.netty.channel.ChannelFuture);

  protected void http2ProcessingFailed(io.grpc.Status, boolean, io.grpc.Metadata);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokevirtual #29                 // Method transportReportStatus:(Lio/grpc/Status;ZLio/grpc/Metadata;)V
       7: aload_0
       8: getfield      #1                  // Field handler:Lio/grpc/netty/NettyClientHandler;
      11: invokevirtual #30                 // Method io/grpc/netty/NettyClientHandler.getWriteQueue:()Lio/grpc/netty/WriteQueue;
      14: new           #31                 // class io/grpc/netty/CancelClientStreamCommand
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #32                 // Method io/grpc/netty/CancelClientStreamCommand."<init>":(Lio/grpc/netty/NettyClientStream$TransportState;Lio/grpc/Status;)V
      23: iconst_1
      24: invokevirtual #33                 // Method io/grpc/netty/WriteQueue.enqueue:(Lio/grpc/netty/WriteQueue$QueuedCommand;Z)Lio/netty/channel/ChannelFuture;
      27: pop
      28: return

  public void runOnTransportThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field eventLoop:Lio/netty/channel/EventLoop;
       4: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
       9: ifeq          21
      12: aload_1
      13: invokeinterface #35,  1           // InterfaceMethod java/lang/Runnable.run:()V
      18: goto          31
      21: aload_0
      22: getfield      #11                 // Field eventLoop:Lio/netty/channel/EventLoop;
      25: aload_1
      26: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      31: return

  public void bytesRead(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lio/grpc/netty/NettyClientHandler;
       4: aload_0
       5: getfield      #23                 // Field http2Stream:Lio/netty/handler/codec/http2/Http2Stream;
       8: iload_1
       9: invokevirtual #37                 // Method io/grpc/netty/NettyClientHandler.returnProcessedBytes:(Lio/netty/handler/codec/http2/Http2Stream;I)V
      12: aload_0
      13: getfield      #1                  // Field handler:Lio/grpc/netty/NettyClientHandler;
      16: invokevirtual #30                 // Method io/grpc/netty/NettyClientHandler.getWriteQueue:()Lio/grpc/netty/WriteQueue;
      19: invokevirtual #38                 // Method io/grpc/netty/WriteQueue.scheduleFlush:()V
      22: return

  public void deframeFailed(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // Method io/grpc/Status.fromThrowable:(Ljava/lang/Throwable;)Lio/grpc/Status;
       5: iconst_1
       6: new           #40                 // class io/grpc/Metadata
       9: dup
      10: invokespecial #41                 // Method io/grpc/Metadata."<init>":()V
      13: invokevirtual #42                 // Method http2ProcessingFailed:(Lio/grpc/Status;ZLio/grpc/Metadata;)V
      16: return

  void transportHeadersReceived(io.netty.handler.codec.http2.Http2Headers, boolean);
    Code:
       0: iload_2
       1: ifeq          43
       4: aload_0
       5: invokevirtual #43                 // Method isOutboundClosed:()Z
       8: ifne          32
      11: aload_0
      12: getfield      #1                  // Field handler:Lio/grpc/netty/NettyClientHandler;
      15: invokevirtual #30                 // Method io/grpc/netty/NettyClientHandler.getWriteQueue:()Lio/grpc/netty/WriteQueue;
      18: new           #31                 // class io/grpc/netty/CancelClientStreamCommand
      21: dup
      22: aload_0
      23: aconst_null
      24: invokespecial #32                 // Method io/grpc/netty/CancelClientStreamCommand."<init>":(Lio/grpc/netty/NettyClientStream$TransportState;Lio/grpc/Status;)V
      27: iconst_1
      28: invokevirtual #33                 // Method io/grpc/netty/WriteQueue.enqueue:(Lio/grpc/netty/WriteQueue$QueuedCommand;Z)Lio/netty/channel/ChannelFuture;
      31: pop
      32: aload_0
      33: aload_1
      34: invokestatic  #44                 // Method io/grpc/netty/Utils.convertTrailers:(Lio/netty/handler/codec/http2/Http2Headers;)Lio/grpc/Metadata;
      37: invokevirtual #45                 // Method transportTrailersReceived:(Lio/grpc/Metadata;)V
      40: goto          51
      43: aload_0
      44: aload_1
      45: invokestatic  #46                 // Method io/grpc/netty/Utils.convertHeaders:(Lio/netty/handler/codec/http2/Http2Headers;)Lio/grpc/Metadata;
      48: invokevirtual #47                 // Method transportHeadersReceived:(Lio/grpc/Metadata;)V
      51: return

  void transportDataReceived(io.netty.buffer.ByteBuf, boolean);
    Code:
       0: aload_0
       1: new           #48                 // class io/grpc/netty/NettyReadableBuffer
       4: dup
       5: aload_1
       6: invokevirtual #49                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
       9: invokespecial #50                 // Method io/grpc/netty/NettyReadableBuffer."<init>":(Lio/netty/buffer/ByteBuf;)V
      12: iload_2
      13: invokevirtual #51                 // Method transportDataReceived:(Lio/grpc/internal/ReadableBuffer;Z)V
      16: return

  public final io.perfmark.Tag tag();
    Code:
       0: aload_0
       1: getfield      #13                 // Field tag:Lio/perfmark/Tag;
       4: areturn

  static io.grpc.netty.NettyClientHandler access$100(io.grpc.netty.NettyClientStream$TransportState);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lio/grpc/netty/NettyClientHandler;
       4: areturn
}
