Compiled from "AbstractNettyHandler.java"
abstract class io.grpc.netty.AbstractNettyHandler extends io.grpc.netty.GrpcHttp2ConnectionHandler {
  private static final long GRACEFUL_SHUTDOWN_NO_TIMEOUT;

  private final int initialConnectionWindow;

  private final io.grpc.netty.AbstractNettyHandler$FlowControlPinger flowControlPing;

  private boolean autoTuneFlowControlOn;

  private io.netty.channel.ChannelHandlerContext ctx;

  private boolean initialWindowSent;

  private static final long BDP_MEASUREMENT_PING;

  io.grpc.netty.AbstractNettyHandler(io.netty.channel.ChannelPromise, io.netty.handler.codec.http2.Http2ConnectionDecoder, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2Settings, io.grpc.ChannelLogger, boolean, io.grpc.netty.AbstractNettyHandler$PingLimiter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #3                  // Method io/grpc/netty/GrpcHttp2ConnectionHandler."<init>":(Lio/netty/channel/ChannelPromise;Lio/netty/handler/codec/http2/Http2ConnectionDecoder;Lio/netty/handler/codec/http2/Http2ConnectionEncoder;Lio/netty/handler/codec/http2/Http2Settings;Lio/grpc/ChannelLogger;)V
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field initialWindowSent:Z
      16: aload_0
      17: ldc2_w        #6                  // long -1l
      20: invokevirtual #8                  // Method gracefulShutdownTimeoutMillis:(J)V
      23: aload_0
      24: aload         4
      26: invokevirtual #9                  // Method io/netty/handler/codec/http2/Http2Settings.initialWindowSize:()Ljava/lang/Integer;
      29: ifnonnull     36
      32: iconst_m1
      33: goto          44
      36: aload         4
      38: invokevirtual #9                  // Method io/netty/handler/codec/http2/Http2Settings.initialWindowSize:()Ljava/lang/Integer;
      41: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
      44: putfield      #11                 // Field initialConnectionWindow:I
      47: aload_0
      48: iload         6
      50: putfield      #2                  // Field autoTuneFlowControlOn:Z
      53: aload         7
      55: ifnonnull     68
      58: new           #12                 // class io/grpc/netty/AbstractNettyHandler$AllowPingLimiter
      61: dup
      62: aconst_null
      63: invokespecial #13                 // Method io/grpc/netty/AbstractNettyHandler$AllowPingLimiter."<init>":(Lio/grpc/netty/AbstractNettyHandler$1;)V
      66: astore        7
      68: aload_0
      69: new           #14                 // class io/grpc/netty/AbstractNettyHandler$FlowControlPinger
      72: dup
      73: aload_0
      74: aload         7
      76: invokespecial #15                 // Method io/grpc/netty/AbstractNettyHandler$FlowControlPinger."<init>":(Lio/grpc/netty/AbstractNettyHandler;Lio/grpc/netty/AbstractNettyHandler$PingLimiter;)V
      79: putfield      #16                 // Field flowControlPing:Lio/grpc/netty/AbstractNettyHandler$FlowControlPinger;
      82: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: aload_0
       6: aload_1
       7: invokespecial #18                 // Method io/grpc/netty/GrpcHttp2ConnectionHandler.handlerAdded:(Lio/netty/channel/ChannelHandlerContext;)V
      10: aload_0
      11: invokespecial #19                 // Method sendInitialConnectionWindow:()V
      14: return

  public void channelActive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method io/grpc/netty/GrpcHttp2ConnectionHandler.channelActive:(Lio/netty/channel/ChannelHandlerContext;)V
       5: aload_0
       6: invokespecial #19                 // Method sendInitialConnectionWindow:()V
       9: return

  public final void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokestatic  #21                 // Method io/netty/handler/codec/http2/Http2CodecUtil.getEmbeddedHttp2Exception:(Ljava/lang/Throwable;)Lio/netty/handler/codec/http2/Http2Exception;
       4: astore_3
       5: aload_3
       6: ifnonnull     19
       9: aload_0
      10: aload_1
      11: iconst_0
      12: aload_2
      13: invokevirtual #22                 // Method onError:(Lio/netty/channel/ChannelHandlerContext;ZLjava/lang/Throwable;)V
      16: goto          25
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokespecial #23                 // Method io/grpc/netty/GrpcHttp2ConnectionHandler.exceptionCaught:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      25: return

  protected final io.netty.channel.ChannelHandlerContext ctx();
    Code:
       0: aload_0
       1: getfield      #17                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  private void sendInitialConnectionWindow() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field initialWindowSent:Z
       4: ifne          96
       7: aload_0
       8: getfield      #17                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      11: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      16: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      21: ifeq          96
      24: aload_0
      25: invokevirtual #26                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
      28: invokeinterface #27,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.connectionStream:()Lio/netty/handler/codec/http2/Http2Stream;
      33: astore_1
      34: aload_0
      35: invokevirtual #26                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
      38: invokeinterface #28,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.local:()Lio/netty/handler/codec/http2/Http2Connection$Endpoint;
      43: invokeinterface #29,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection$Endpoint.flowController:()Lio/netty/handler/codec/http2/Http2FlowController;
      48: checkcast     #30                 // class io/netty/handler/codec/http2/Http2LocalFlowController
      51: aload_1
      52: invokeinterface #31,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2LocalFlowController.windowSize:(Lio/netty/handler/codec/http2/Http2Stream;)I
      57: istore_2
      58: aload_0
      59: getfield      #11                 // Field initialConnectionWindow:I
      62: iload_2
      63: isub
      64: istore_3
      65: aload_0
      66: invokevirtual #32                 // Method decoder:()Lio/netty/handler/codec/http2/Http2ConnectionDecoder;
      69: invokeinterface #33,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionDecoder.flowController:()Lio/netty/handler/codec/http2/Http2LocalFlowController;
      74: aload_1
      75: iload_3
      76: invokeinterface #34,  3           // InterfaceMethod io/netty/handler/codec/http2/Http2LocalFlowController.incrementWindowSize:(Lio/netty/handler/codec/http2/Http2Stream;I)V
      81: aload_0
      82: iconst_1
      83: putfield      #4                  // Field initialWindowSent:Z
      86: aload_0
      87: getfield      #17                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      90: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      95: pop
      96: return

  io.grpc.netty.AbstractNettyHandler$FlowControlPinger flowControlPing();
    Code:
       0: aload_0
       1: getfield      #16                 // Field flowControlPing:Lio/grpc/netty/AbstractNettyHandler$FlowControlPinger;
       4: areturn

  void setAutoTuneFlowControl(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field autoTuneFlowControlOn:Z
       5: return

  static boolean access$100(io.grpc.netty.AbstractNettyHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field autoTuneFlowControlOn:Z
       4: ireturn

  static io.netty.handler.codec.http2.Http2FrameWriter access$200(io.grpc.netty.AbstractNettyHandler);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method frameWriter:()Lio/netty/handler/codec/http2/Http2FrameWriter;
       4: areturn
}
