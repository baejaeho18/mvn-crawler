Compiled from "NettyChannelBuilder.java"
public final class io.grpc.netty.NettyChannelBuilder extends io.grpc.internal.AbstractManagedChannelImplBuilder<io.grpc.netty.NettyChannelBuilder> {
  public static final int DEFAULT_FLOW_CONTROL_WINDOW;

  private static final boolean DEFAULT_AUTO_FLOW_CONTROL;

  private static final long AS_LARGE_AS_INFINITE;

  private static final io.netty.channel.ChannelFactory<? extends io.netty.channel.Channel> DEFAULT_CHANNEL_FACTORY;

  private static final io.grpc.internal.ObjectPool<? extends io.netty.channel.EventLoopGroup> DEFAULT_EVENT_LOOP_GROUP_POOL;

  private final io.grpc.internal.ManagedChannelImplBuilder managedChannelImplBuilder;

  private io.grpc.internal.TransportTracer$Factory transportTracerFactory;

  private final java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> channelOptions;

  private io.netty.channel.ChannelFactory<? extends io.netty.channel.Channel> channelFactory;

  private io.grpc.internal.ObjectPool<? extends io.netty.channel.EventLoopGroup> eventLoopGroupPool;

  private boolean autoFlowControl;

  private int flowControlWindow;

  private int maxHeaderListSize;

  private long keepAliveTimeNanos;

  private long keepAliveTimeoutNanos;

  private boolean keepAliveWithoutCalls;

  private io.grpc.netty.ProtocolNegotiator$ClientFactory protocolNegotiatorFactory;

  private final boolean freezeProtocolNegotiatorFactory;

  private io.grpc.netty.NettyChannelBuilder$LocalSocketPicker localSocketPicker;

  private final boolean useGetForSafeMethods;

  public static io.grpc.netty.NettyChannelBuilder forAddress(java.net.SocketAddress);
    Code:
       0: new           #4                  // class io/grpc/netty/NettyChannelBuilder
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method "<init>":(Ljava/net/SocketAddress;)V
       8: areturn

  public static io.grpc.netty.NettyChannelBuilder forAddress(java.net.SocketAddress, io.grpc.ChannelCredentials);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method io/grpc/netty/ProtocolNegotiators.from:(Lio/grpc/ChannelCredentials;)Lio/grpc/netty/ProtocolNegotiators$FromChannelCredentialsResult;
       4: astore_2
       5: aload_2
       6: getfield      #7                  // Field io/grpc/netty/ProtocolNegotiators$FromChannelCredentialsResult.error:Ljava/lang/String;
       9: ifnull        24
      12: new           #8                  // class java/lang/IllegalArgumentException
      15: dup
      16: aload_2
      17: getfield      #7                  // Field io/grpc/netty/ProtocolNegotiators$FromChannelCredentialsResult.error:Ljava/lang/String;
      20: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: new           #4                  // class io/grpc/netty/NettyChannelBuilder
      27: dup
      28: aload_0
      29: aload_1
      30: aload_2
      31: getfield      #10                 // Field io/grpc/netty/ProtocolNegotiators$FromChannelCredentialsResult.callCredentials:Lio/grpc/CallCredentials;
      34: aload_2
      35: getfield      #11                 // Field io/grpc/netty/ProtocolNegotiators$FromChannelCredentialsResult.negotiator:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
      38: invokespecial #12                 // Method "<init>":(Ljava/net/SocketAddress;Lio/grpc/ChannelCredentials;Lio/grpc/CallCredentials;Lio/grpc/netty/ProtocolNegotiator$ClientFactory;)V
      41: areturn

  public static io.grpc.netty.NettyChannelBuilder forAddress(java.lang.String, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #13                 // Method io/grpc/internal/GrpcUtil.authorityFromHostAndPort:(Ljava/lang/String;I)Ljava/lang/String;
       5: invokestatic  #14                 // Method forTarget:(Ljava/lang/String;)Lio/grpc/netty/NettyChannelBuilder;
       8: areturn

  public static io.grpc.netty.NettyChannelBuilder forAddress(java.lang.String, int, io.grpc.ChannelCredentials);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #13                 // Method io/grpc/internal/GrpcUtil.authorityFromHostAndPort:(Ljava/lang/String;I)Ljava/lang/String;
       5: aload_2
       6: invokestatic  #15                 // Method forTarget:(Ljava/lang/String;Lio/grpc/ChannelCredentials;)Lio/grpc/netty/NettyChannelBuilder;
       9: areturn

  public static io.grpc.netty.NettyChannelBuilder forTarget(java.lang.String);
    Code:
       0: new           #4                  // class io/grpc/netty/NettyChannelBuilder
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method "<init>":(Ljava/lang/String;)V
       8: areturn

  public static io.grpc.netty.NettyChannelBuilder forTarget(java.lang.String, io.grpc.ChannelCredentials);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method io/grpc/netty/ProtocolNegotiators.from:(Lio/grpc/ChannelCredentials;)Lio/grpc/netty/ProtocolNegotiators$FromChannelCredentialsResult;
       4: astore_2
       5: aload_2
       6: getfield      #7                  // Field io/grpc/netty/ProtocolNegotiators$FromChannelCredentialsResult.error:Ljava/lang/String;
       9: ifnull        24
      12: new           #8                  // class java/lang/IllegalArgumentException
      15: dup
      16: aload_2
      17: getfield      #7                  // Field io/grpc/netty/ProtocolNegotiators$FromChannelCredentialsResult.error:Ljava/lang/String;
      20: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: new           #4                  // class io/grpc/netty/NettyChannelBuilder
      27: dup
      28: aload_0
      29: aload_1
      30: aload_2
      31: getfield      #10                 // Field io/grpc/netty/ProtocolNegotiators$FromChannelCredentialsResult.callCredentials:Lio/grpc/CallCredentials;
      34: aload_2
      35: getfield      #11                 // Field io/grpc/netty/ProtocolNegotiators$FromChannelCredentialsResult.negotiator:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
      38: invokespecial #17                 // Method "<init>":(Ljava/lang/String;Lio/grpc/ChannelCredentials;Lio/grpc/CallCredentials;Lio/grpc/netty/ProtocolNegotiator$ClientFactory;)V
      41: areturn

  io.grpc.netty.NettyChannelBuilder(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method io/grpc/internal/AbstractManagedChannelImplBuilder."<init>":()V
       4: aload_0
       5: invokestatic  #19                 // Method io/grpc/internal/TransportTracer.getDefaultFactory:()Lio/grpc/internal/TransportTracer$Factory;
       8: putfield      #20                 // Field transportTracerFactory:Lio/grpc/internal/TransportTracer$Factory;
      11: aload_0
      12: new           #21                 // class java/util/HashMap
      15: dup
      16: invokespecial #22                 // Method java/util/HashMap."<init>":()V
      19: putfield      #23                 // Field channelOptions:Ljava/util/Map;
      22: aload_0
      23: getstatic     #24                 // Field DEFAULT_CHANNEL_FACTORY:Lio/netty/channel/ChannelFactory;
      26: putfield      #25                 // Field channelFactory:Lio/netty/channel/ChannelFactory;
      29: aload_0
      30: getstatic     #26                 // Field DEFAULT_EVENT_LOOP_GROUP_POOL:Lio/grpc/internal/ObjectPool;
      33: putfield      #27                 // Field eventLoopGroupPool:Lio/grpc/internal/ObjectPool;
      36: aload_0
      37: getstatic     #28                 // Field DEFAULT_AUTO_FLOW_CONTROL:Z
      40: putfield      #29                 // Field autoFlowControl:Z
      43: aload_0
      44: ldc           #30                 // int 1048576
      46: putfield      #31                 // Field flowControlWindow:I
      49: aload_0
      50: sipush        8192
      53: putfield      #32                 // Field maxHeaderListSize:I
      56: aload_0
      57: ldc2_w        #33                 // long 9223372036854775807l
      60: putfield      #35                 // Field keepAliveTimeNanos:J
      63: aload_0
      64: getstatic     #36                 // Field io/grpc/internal/GrpcUtil.DEFAULT_KEEPALIVE_TIMEOUT_NANOS:J
      67: putfield      #37                 // Field keepAliveTimeoutNanos:J
      70: aload_0
      71: new           #38                 // class io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator
      74: dup
      75: aload_0
      76: aconst_null
      77: invokespecial #39                 // Method io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator."<init>":(Lio/grpc/netty/NettyChannelBuilder;Lio/grpc/netty/NettyChannelBuilder$1;)V
      80: putfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
      83: aload_0
      84: iconst_0
      85: putfield      #40                 // Field useGetForSafeMethods:Z
      88: aload_0
      89: new           #41                 // class io/grpc/internal/ManagedChannelImplBuilder
      92: dup
      93: aload_1
      94: new           #42                 // class io/grpc/netty/NettyChannelBuilder$NettyChannelTransportFactoryBuilder
      97: dup
      98: aload_0
      99: aconst_null
     100: invokespecial #43                 // Method io/grpc/netty/NettyChannelBuilder$NettyChannelTransportFactoryBuilder."<init>":(Lio/grpc/netty/NettyChannelBuilder;Lio/grpc/netty/NettyChannelBuilder$1;)V
     103: new           #44                 // class io/grpc/netty/NettyChannelBuilder$NettyChannelDefaultPortProvider
     106: dup
     107: aload_0
     108: aconst_null
     109: invokespecial #45                 // Method io/grpc/netty/NettyChannelBuilder$NettyChannelDefaultPortProvider."<init>":(Lio/grpc/netty/NettyChannelBuilder;Lio/grpc/netty/NettyChannelBuilder$1;)V
     112: invokespecial #46                 // Method io/grpc/internal/ManagedChannelImplBuilder."<init>":(Ljava/lang/String;Lio/grpc/internal/ManagedChannelImplBuilder$ClientTransportFactoryBuilder;Lio/grpc/internal/ManagedChannelImplBuilder$ChannelBuilderDefaultPortProvider;)V
     115: putfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
     118: aload_0
     119: iconst_0
     120: putfield      #47                 // Field freezeProtocolNegotiatorFactory:Z
     123: return

  io.grpc.netty.NettyChannelBuilder(java.lang.String, io.grpc.ChannelCredentials, io.grpc.CallCredentials, io.grpc.netty.ProtocolNegotiator$ClientFactory);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method io/grpc/internal/AbstractManagedChannelImplBuilder."<init>":()V
       4: aload_0
       5: invokestatic  #19                 // Method io/grpc/internal/TransportTracer.getDefaultFactory:()Lio/grpc/internal/TransportTracer$Factory;
       8: putfield      #20                 // Field transportTracerFactory:Lio/grpc/internal/TransportTracer$Factory;
      11: aload_0
      12: new           #21                 // class java/util/HashMap
      15: dup
      16: invokespecial #22                 // Method java/util/HashMap."<init>":()V
      19: putfield      #23                 // Field channelOptions:Ljava/util/Map;
      22: aload_0
      23: getstatic     #24                 // Field DEFAULT_CHANNEL_FACTORY:Lio/netty/channel/ChannelFactory;
      26: putfield      #25                 // Field channelFactory:Lio/netty/channel/ChannelFactory;
      29: aload_0
      30: getstatic     #26                 // Field DEFAULT_EVENT_LOOP_GROUP_POOL:Lio/grpc/internal/ObjectPool;
      33: putfield      #27                 // Field eventLoopGroupPool:Lio/grpc/internal/ObjectPool;
      36: aload_0
      37: getstatic     #28                 // Field DEFAULT_AUTO_FLOW_CONTROL:Z
      40: putfield      #29                 // Field autoFlowControl:Z
      43: aload_0
      44: ldc           #30                 // int 1048576
      46: putfield      #31                 // Field flowControlWindow:I
      49: aload_0
      50: sipush        8192
      53: putfield      #32                 // Field maxHeaderListSize:I
      56: aload_0
      57: ldc2_w        #33                 // long 9223372036854775807l
      60: putfield      #35                 // Field keepAliveTimeNanos:J
      63: aload_0
      64: getstatic     #36                 // Field io/grpc/internal/GrpcUtil.DEFAULT_KEEPALIVE_TIMEOUT_NANOS:J
      67: putfield      #37                 // Field keepAliveTimeoutNanos:J
      70: aload_0
      71: new           #38                 // class io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator
      74: dup
      75: aload_0
      76: aconst_null
      77: invokespecial #39                 // Method io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator."<init>":(Lio/grpc/netty/NettyChannelBuilder;Lio/grpc/netty/NettyChannelBuilder$1;)V
      80: putfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
      83: aload_0
      84: iconst_0
      85: putfield      #40                 // Field useGetForSafeMethods:Z
      88: aload_0
      89: new           #41                 // class io/grpc/internal/ManagedChannelImplBuilder
      92: dup
      93: aload_1
      94: aload_2
      95: aload_3
      96: new           #42                 // class io/grpc/netty/NettyChannelBuilder$NettyChannelTransportFactoryBuilder
      99: dup
     100: aload_0
     101: aconst_null
     102: invokespecial #43                 // Method io/grpc/netty/NettyChannelBuilder$NettyChannelTransportFactoryBuilder."<init>":(Lio/grpc/netty/NettyChannelBuilder;Lio/grpc/netty/NettyChannelBuilder$1;)V
     105: new           #44                 // class io/grpc/netty/NettyChannelBuilder$NettyChannelDefaultPortProvider
     108: dup
     109: aload_0
     110: aconst_null
     111: invokespecial #45                 // Method io/grpc/netty/NettyChannelBuilder$NettyChannelDefaultPortProvider."<init>":(Lio/grpc/netty/NettyChannelBuilder;Lio/grpc/netty/NettyChannelBuilder$1;)V
     114: invokespecial #48                 // Method io/grpc/internal/ManagedChannelImplBuilder."<init>":(Ljava/lang/String;Lio/grpc/ChannelCredentials;Lio/grpc/CallCredentials;Lio/grpc/internal/ManagedChannelImplBuilder$ClientTransportFactoryBuilder;Lio/grpc/internal/ManagedChannelImplBuilder$ChannelBuilderDefaultPortProvider;)V
     117: putfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
     120: aload_0
     121: aload         4
     123: ldc           #49                 // String negotiator
     125: invokestatic  #50                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     128: checkcast     #51                 // class io/grpc/netty/ProtocolNegotiator$ClientFactory
     131: putfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
     134: aload_0
     135: iconst_1
     136: putfield      #47                 // Field freezeProtocolNegotiatorFactory:Z
     139: return

  io.grpc.netty.NettyChannelBuilder(java.net.SocketAddress);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method io/grpc/internal/AbstractManagedChannelImplBuilder."<init>":()V
       4: aload_0
       5: invokestatic  #19                 // Method io/grpc/internal/TransportTracer.getDefaultFactory:()Lio/grpc/internal/TransportTracer$Factory;
       8: putfield      #20                 // Field transportTracerFactory:Lio/grpc/internal/TransportTracer$Factory;
      11: aload_0
      12: new           #21                 // class java/util/HashMap
      15: dup
      16: invokespecial #22                 // Method java/util/HashMap."<init>":()V
      19: putfield      #23                 // Field channelOptions:Ljava/util/Map;
      22: aload_0
      23: getstatic     #24                 // Field DEFAULT_CHANNEL_FACTORY:Lio/netty/channel/ChannelFactory;
      26: putfield      #25                 // Field channelFactory:Lio/netty/channel/ChannelFactory;
      29: aload_0
      30: getstatic     #26                 // Field DEFAULT_EVENT_LOOP_GROUP_POOL:Lio/grpc/internal/ObjectPool;
      33: putfield      #27                 // Field eventLoopGroupPool:Lio/grpc/internal/ObjectPool;
      36: aload_0
      37: getstatic     #28                 // Field DEFAULT_AUTO_FLOW_CONTROL:Z
      40: putfield      #29                 // Field autoFlowControl:Z
      43: aload_0
      44: ldc           #30                 // int 1048576
      46: putfield      #31                 // Field flowControlWindow:I
      49: aload_0
      50: sipush        8192
      53: putfield      #32                 // Field maxHeaderListSize:I
      56: aload_0
      57: ldc2_w        #33                 // long 9223372036854775807l
      60: putfield      #35                 // Field keepAliveTimeNanos:J
      63: aload_0
      64: getstatic     #36                 // Field io/grpc/internal/GrpcUtil.DEFAULT_KEEPALIVE_TIMEOUT_NANOS:J
      67: putfield      #37                 // Field keepAliveTimeoutNanos:J
      70: aload_0
      71: new           #38                 // class io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator
      74: dup
      75: aload_0
      76: aconst_null
      77: invokespecial #39                 // Method io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator."<init>":(Lio/grpc/netty/NettyChannelBuilder;Lio/grpc/netty/NettyChannelBuilder$1;)V
      80: putfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
      83: aload_0
      84: iconst_0
      85: putfield      #40                 // Field useGetForSafeMethods:Z
      88: aload_0
      89: new           #41                 // class io/grpc/internal/ManagedChannelImplBuilder
      92: dup
      93: aload_1
      94: aload_1
      95: invokestatic  #52                 // Method getAuthorityFromAddress:(Ljava/net/SocketAddress;)Ljava/lang/String;
      98: new           #42                 // class io/grpc/netty/NettyChannelBuilder$NettyChannelTransportFactoryBuilder
     101: dup
     102: aload_0
     103: aconst_null
     104: invokespecial #43                 // Method io/grpc/netty/NettyChannelBuilder$NettyChannelTransportFactoryBuilder."<init>":(Lio/grpc/netty/NettyChannelBuilder;Lio/grpc/netty/NettyChannelBuilder$1;)V
     107: new           #44                 // class io/grpc/netty/NettyChannelBuilder$NettyChannelDefaultPortProvider
     110: dup
     111: aload_0
     112: aconst_null
     113: invokespecial #45                 // Method io/grpc/netty/NettyChannelBuilder$NettyChannelDefaultPortProvider."<init>":(Lio/grpc/netty/NettyChannelBuilder;Lio/grpc/netty/NettyChannelBuilder$1;)V
     116: invokespecial #53                 // Method io/grpc/internal/ManagedChannelImplBuilder."<init>":(Ljava/net/SocketAddress;Ljava/lang/String;Lio/grpc/internal/ManagedChannelImplBuilder$ClientTransportFactoryBuilder;Lio/grpc/internal/ManagedChannelImplBuilder$ChannelBuilderDefaultPortProvider;)V
     119: putfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
     122: aload_0
     123: iconst_0
     124: putfield      #47                 // Field freezeProtocolNegotiatorFactory:Z
     127: return

  io.grpc.netty.NettyChannelBuilder(java.net.SocketAddress, io.grpc.ChannelCredentials, io.grpc.CallCredentials, io.grpc.netty.ProtocolNegotiator$ClientFactory);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method io/grpc/internal/AbstractManagedChannelImplBuilder."<init>":()V
       4: aload_0
       5: invokestatic  #19                 // Method io/grpc/internal/TransportTracer.getDefaultFactory:()Lio/grpc/internal/TransportTracer$Factory;
       8: putfield      #20                 // Field transportTracerFactory:Lio/grpc/internal/TransportTracer$Factory;
      11: aload_0
      12: new           #21                 // class java/util/HashMap
      15: dup
      16: invokespecial #22                 // Method java/util/HashMap."<init>":()V
      19: putfield      #23                 // Field channelOptions:Ljava/util/Map;
      22: aload_0
      23: getstatic     #24                 // Field DEFAULT_CHANNEL_FACTORY:Lio/netty/channel/ChannelFactory;
      26: putfield      #25                 // Field channelFactory:Lio/netty/channel/ChannelFactory;
      29: aload_0
      30: getstatic     #26                 // Field DEFAULT_EVENT_LOOP_GROUP_POOL:Lio/grpc/internal/ObjectPool;
      33: putfield      #27                 // Field eventLoopGroupPool:Lio/grpc/internal/ObjectPool;
      36: aload_0
      37: getstatic     #28                 // Field DEFAULT_AUTO_FLOW_CONTROL:Z
      40: putfield      #29                 // Field autoFlowControl:Z
      43: aload_0
      44: ldc           #30                 // int 1048576
      46: putfield      #31                 // Field flowControlWindow:I
      49: aload_0
      50: sipush        8192
      53: putfield      #32                 // Field maxHeaderListSize:I
      56: aload_0
      57: ldc2_w        #33                 // long 9223372036854775807l
      60: putfield      #35                 // Field keepAliveTimeNanos:J
      63: aload_0
      64: getstatic     #36                 // Field io/grpc/internal/GrpcUtil.DEFAULT_KEEPALIVE_TIMEOUT_NANOS:J
      67: putfield      #37                 // Field keepAliveTimeoutNanos:J
      70: aload_0
      71: new           #38                 // class io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator
      74: dup
      75: aload_0
      76: aconst_null
      77: invokespecial #39                 // Method io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator."<init>":(Lio/grpc/netty/NettyChannelBuilder;Lio/grpc/netty/NettyChannelBuilder$1;)V
      80: putfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
      83: aload_0
      84: iconst_0
      85: putfield      #40                 // Field useGetForSafeMethods:Z
      88: aload_0
      89: new           #41                 // class io/grpc/internal/ManagedChannelImplBuilder
      92: dup
      93: aload_1
      94: aload_1
      95: invokestatic  #52                 // Method getAuthorityFromAddress:(Ljava/net/SocketAddress;)Ljava/lang/String;
      98: aload_2
      99: aload_3
     100: new           #42                 // class io/grpc/netty/NettyChannelBuilder$NettyChannelTransportFactoryBuilder
     103: dup
     104: aload_0
     105: aconst_null
     106: invokespecial #43                 // Method io/grpc/netty/NettyChannelBuilder$NettyChannelTransportFactoryBuilder."<init>":(Lio/grpc/netty/NettyChannelBuilder;Lio/grpc/netty/NettyChannelBuilder$1;)V
     109: new           #44                 // class io/grpc/netty/NettyChannelBuilder$NettyChannelDefaultPortProvider
     112: dup
     113: aload_0
     114: aconst_null
     115: invokespecial #45                 // Method io/grpc/netty/NettyChannelBuilder$NettyChannelDefaultPortProvider."<init>":(Lio/grpc/netty/NettyChannelBuilder;Lio/grpc/netty/NettyChannelBuilder$1;)V
     118: invokespecial #54                 // Method io/grpc/internal/ManagedChannelImplBuilder."<init>":(Ljava/net/SocketAddress;Ljava/lang/String;Lio/grpc/ChannelCredentials;Lio/grpc/CallCredentials;Lio/grpc/internal/ManagedChannelImplBuilder$ClientTransportFactoryBuilder;Lio/grpc/internal/ManagedChannelImplBuilder$ChannelBuilderDefaultPortProvider;)V
     121: putfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
     124: aload_0
     125: aload         4
     127: ldc           #49                 // String negotiator
     129: invokestatic  #50                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: checkcast     #51                 // class io/grpc/netty/ProtocolNegotiator$ClientFactory
     135: putfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
     138: aload_0
     139: iconst_1
     140: putfield      #47                 // Field freezeProtocolNegotiatorFactory:Z
     143: return

  protected io.grpc.ManagedChannelBuilder<?> delegate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
       4: areturn

  private static java.lang.String getAuthorityFromAddress(java.net.SocketAddress);
    Code:
       0: aload_0
       1: instanceof    #55                 // class java/net/InetSocketAddress
       4: ifeq          24
       7: aload_0
       8: checkcast     #55                 // class java/net/InetSocketAddress
      11: astore_1
      12: aload_1
      13: invokevirtual #56                 // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
      16: aload_1
      17: invokevirtual #57                 // Method java/net/InetSocketAddress.getPort:()I
      20: invokestatic  #13                 // Method io/grpc/internal/GrpcUtil.authorityFromHostAndPort:(Ljava/lang/String;I)Ljava/lang/String;
      23: areturn
      24: aload_0
      25: invokevirtual #58                 // Method java/lang/Object.toString:()Ljava/lang/String;
      28: areturn

  public io.grpc.netty.NettyChannelBuilder channelType(java.lang.Class<? extends io.netty.channel.Channel>);
    Code:
       0: aload_1
       1: ldc           #59                 // String channelType
       3: invokestatic  #50                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: new           #60                 // class io/netty/channel/ReflectiveChannelFactory
      11: dup
      12: aload_1
      13: invokespecial #61                 // Method io/netty/channel/ReflectiveChannelFactory."<init>":(Ljava/lang/Class;)V
      16: invokevirtual #62                 // Method channelFactory:(Lio/netty/channel/ChannelFactory;)Lio/grpc/netty/NettyChannelBuilder;
      19: areturn

  public io.grpc.netty.NettyChannelBuilder channelFactory(io.netty.channel.ChannelFactory<? extends io.netty.channel.Channel>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #63                 // String channelFactory
       4: invokestatic  #50                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #64                 // class io/netty/channel/ChannelFactory
      10: putfield      #25                 // Field channelFactory:Lio/netty/channel/ChannelFactory;
      13: aload_0
      14: areturn

  public <T> io.grpc.netty.NettyChannelBuilder withOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: getfield      #23                 // Field channelOptions:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public io.grpc.netty.NettyChannelBuilder negotiationType(io.grpc.netty.NegotiationType);
    Code:
       0: aload_0
       1: getfield      #47                 // Field freezeProtocolNegotiatorFactory:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #66                 // String Cannot change security when using ChannelCredentials
      14: invokestatic  #67                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: getfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
      21: instanceof    #38                 // class io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator
      24: ifne          29
      27: aload_0
      28: areturn
      29: aload_0
      30: getfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
      33: checkcast     #38                 // class io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator
      36: aload_1
      37: invokestatic  #68                 // Method io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator.access$402:(Lio/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator;Lio/grpc/netty/NegotiationType;)Lio/grpc/netty/NegotiationType;
      40: pop
      41: aload_0
      42: areturn

  public io.grpc.netty.NettyChannelBuilder eventLoopGroup(io.netty.channel.EventLoopGroup);
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_0
       5: new           #69                 // class io/grpc/internal/FixedObjectPool
       8: dup
       9: aload_1
      10: invokespecial #70                 // Method io/grpc/internal/FixedObjectPool."<init>":(Ljava/lang/Object;)V
      13: invokevirtual #71                 // Method eventLoopGroupPool:(Lio/grpc/internal/ObjectPool;)Lio/grpc/netty/NettyChannelBuilder;
      16: areturn
      17: aload_0
      18: getstatic     #26                 // Field DEFAULT_EVENT_LOOP_GROUP_POOL:Lio/grpc/internal/ObjectPool;
      21: invokevirtual #71                 // Method eventLoopGroupPool:(Lio/grpc/internal/ObjectPool;)Lio/grpc/netty/NettyChannelBuilder;
      24: areturn

  io.grpc.netty.NettyChannelBuilder eventLoopGroupPool(io.grpc.internal.ObjectPool<? extends io.netty.channel.EventLoopGroup>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #72                 // String eventLoopGroupPool
       4: invokestatic  #50                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #73                 // class io/grpc/internal/ObjectPool
      10: putfield      #27                 // Field eventLoopGroupPool:Lio/grpc/internal/ObjectPool;
      13: aload_0
      14: areturn

  public io.grpc.netty.NettyChannelBuilder sslContext(io.netty.handler.ssl.SslContext);
    Code:
       0: aload_0
       1: getfield      #47                 // Field freezeProtocolNegotiatorFactory:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #66                 // String Cannot change security when using ChannelCredentials
      14: invokestatic  #67                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_1
      18: ifnull        37
      21: aload_1
      22: invokevirtual #74                 // Method io/netty/handler/ssl/SslContext.isClient:()Z
      25: ldc           #75                 // String Server SSL context can not be used for client channel
      27: invokestatic  #76                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      30: aload_1
      31: invokevirtual #77                 // Method io/netty/handler/ssl/SslContext.applicationProtocolNegotiator:()Lio/netty/handler/ssl/ApplicationProtocolNegotiator;
      34: invokestatic  #78                 // Method io/grpc/netty/GrpcSslContexts.ensureAlpnAndH2Enabled:(Lio/netty/handler/ssl/ApplicationProtocolNegotiator;)V
      37: aload_0
      38: getfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
      41: instanceof    #38                 // class io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator
      44: ifne          49
      47: aload_0
      48: areturn
      49: aload_0
      50: getfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
      53: checkcast     #38                 // class io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator
      56: aload_1
      57: invokestatic  #79                 // Method io/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator.access$502:(Lio/grpc/netty/NettyChannelBuilder$DefaultProtocolNegotiator;Lio/netty/handler/ssl/SslContext;)Lio/netty/handler/ssl/SslContext;
      60: pop
      61: aload_0
      62: areturn

  public io.grpc.netty.NettyChannelBuilder initialFlowControlWindow(int);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #80                 // String initialFlowControlWindow must be positive
      11: invokestatic  #76                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: iload_1
      16: putfield      #31                 // Field flowControlWindow:I
      19: aload_0
      20: iconst_1
      21: putfield      #29                 // Field autoFlowControl:Z
      24: aload_0
      25: areturn

  public io.grpc.netty.NettyChannelBuilder flowControlWindow(int);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #81                 // String flowControlWindow must be positive
      11: invokestatic  #76                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: iload_1
      16: putfield      #31                 // Field flowControlWindow:I
      19: aload_0
      20: iconst_0
      21: putfield      #29                 // Field autoFlowControl:Z
      24: aload_0
      25: areturn

  public io.grpc.netty.NettyChannelBuilder maxHeaderListSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #82                 // Method maxInboundMetadataSize:(I)Lio/grpc/netty/NettyChannelBuilder;
       5: areturn

  public io.grpc.netty.NettyChannelBuilder maxInboundMetadataSize(int);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #83                 // String maxInboundMetadataSize must be > 0
      11: invokestatic  #76                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: iload_1
      16: putfield      #32                 // Field maxHeaderListSize:I
      19: aload_0
      20: areturn

  public io.grpc.netty.NettyChannelBuilder usePlaintext();
    Code:
       0: aload_0
       1: getstatic     #84                 // Field io/grpc/netty/NegotiationType.PLAINTEXT:Lio/grpc/netty/NegotiationType;
       4: invokevirtual #85                 // Method negotiationType:(Lio/grpc/netty/NegotiationType;)Lio/grpc/netty/NettyChannelBuilder;
       7: pop
       8: aload_0
       9: areturn

  public io.grpc.netty.NettyChannelBuilder useTransportSecurity();
    Code:
       0: aload_0
       1: getstatic     #86                 // Field io/grpc/netty/NegotiationType.TLS:Lio/grpc/netty/NegotiationType;
       4: invokevirtual #85                 // Method negotiationType:(Lio/grpc/netty/NegotiationType;)Lio/grpc/netty/NettyChannelBuilder;
       7: pop
       8: aload_0
       9: areturn

  public io.grpc.netty.NettyChannelBuilder keepAliveTime(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #87                 // String keepalive time must be positive
      13: invokestatic  #76                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      16: aload_0
      17: aload_3
      18: lload_1
      19: invokevirtual #88                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      22: putfield      #35                 // Field keepAliveTimeNanos:J
      25: aload_0
      26: aload_0
      27: getfield      #35                 // Field keepAliveTimeNanos:J
      30: invokestatic  #89                 // Method io/grpc/internal/KeepAliveManager.clampKeepAliveTimeInNanos:(J)J
      33: putfield      #35                 // Field keepAliveTimeNanos:J
      36: aload_0
      37: getfield      #35                 // Field keepAliveTimeNanos:J
      40: getstatic     #90                 // Field AS_LARGE_AS_INFINITE:J
      43: lcmp
      44: iflt          54
      47: aload_0
      48: ldc2_w        #33                 // long 9223372036854775807l
      51: putfield      #35                 // Field keepAliveTimeNanos:J
      54: aload_0
      55: areturn

  public io.grpc.netty.NettyChannelBuilder keepAliveTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #91                 // String keepalive timeout must be positive
      13: invokestatic  #76                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      16: aload_0
      17: aload_3
      18: lload_1
      19: invokevirtual #88                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      22: putfield      #37                 // Field keepAliveTimeoutNanos:J
      25: aload_0
      26: aload_0
      27: getfield      #37                 // Field keepAliveTimeoutNanos:J
      30: invokestatic  #92                 // Method io/grpc/internal/KeepAliveManager.clampKeepAliveTimeoutInNanos:(J)J
      33: putfield      #37                 // Field keepAliveTimeoutNanos:J
      36: aload_0
      37: areturn

  public io.grpc.netty.NettyChannelBuilder keepAliveWithoutCalls(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #93                 // Field keepAliveWithoutCalls:Z
       5: aload_0
       6: areturn

  public io.grpc.netty.NettyChannelBuilder localSocketPicker(io.grpc.netty.NettyChannelBuilder$LocalSocketPicker);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #94                 // Field localSocketPicker:Lio/grpc/netty/NettyChannelBuilder$LocalSocketPicker;
       5: aload_0
       6: areturn

  public io.grpc.netty.NettyChannelBuilder maxInboundMessageSize(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #95                 // String negative max
      11: invokestatic  #76                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: iload_1
      16: putfield      #96                 // Field maxInboundMessageSize:I
      19: aload_0
      20: areturn

  io.grpc.internal.ClientTransportFactory buildTransportFactory();
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method assertEventLoopAndChannelType:()V
       4: aload_0
       5: getfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
       8: invokeinterface #98,  1           // InterfaceMethod io/grpc/netty/ProtocolNegotiator$ClientFactory.newNegotiator:()Lio/grpc/netty/ProtocolNegotiator;
      13: astore_1
      14: new           #99                 // class io/grpc/netty/NettyChannelBuilder$NettyTransportFactory
      17: dup
      18: aload_1
      19: aload_0
      20: getfield      #25                 // Field channelFactory:Lio/netty/channel/ChannelFactory;
      23: aload_0
      24: getfield      #23                 // Field channelOptions:Ljava/util/Map;
      27: aload_0
      28: getfield      #27                 // Field eventLoopGroupPool:Lio/grpc/internal/ObjectPool;
      31: aload_0
      32: getfield      #29                 // Field autoFlowControl:Z
      35: aload_0
      36: getfield      #31                 // Field flowControlWindow:I
      39: aload_0
      40: getfield      #96                 // Field maxInboundMessageSize:I
      43: aload_0
      44: getfield      #32                 // Field maxHeaderListSize:I
      47: aload_0
      48: getfield      #35                 // Field keepAliveTimeNanos:J
      51: aload_0
      52: getfield      #37                 // Field keepAliveTimeoutNanos:J
      55: aload_0
      56: getfield      #93                 // Field keepAliveWithoutCalls:Z
      59: aload_0
      60: getfield      #20                 // Field transportTracerFactory:Lio/grpc/internal/TransportTracer$Factory;
      63: aload_0
      64: getfield      #94                 // Field localSocketPicker:Lio/grpc/netty/NettyChannelBuilder$LocalSocketPicker;
      67: iconst_0
      68: invokespecial #100                // Method io/grpc/netty/NettyChannelBuilder$NettyTransportFactory."<init>":(Lio/grpc/netty/ProtocolNegotiator;Lio/netty/channel/ChannelFactory;Ljava/util/Map;Lio/grpc/internal/ObjectPool;ZIIIJJZLio/grpc/internal/TransportTracer$Factory;Lio/grpc/netty/NettyChannelBuilder$LocalSocketPicker;Z)V
      71: areturn

  void assertEventLoopAndChannelType();
    Code:
       0: aload_0
       1: getfield      #25                 // Field channelFactory:Lio/netty/channel/ChannelFactory;
       4: getstatic     #24                 // Field DEFAULT_CHANNEL_FACTORY:Lio/netty/channel/ChannelFactory;
       7: if_acmpeq     24
      10: aload_0
      11: getfield      #27                 // Field eventLoopGroupPool:Lio/grpc/internal/ObjectPool;
      14: getstatic     #26                 // Field DEFAULT_EVENT_LOOP_GROUP_POOL:Lio/grpc/internal/ObjectPool;
      17: if_acmpeq     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: istore_1
      26: aload_0
      27: getfield      #25                 // Field channelFactory:Lio/netty/channel/ChannelFactory;
      30: getstatic     #24                 // Field DEFAULT_CHANNEL_FACTORY:Lio/netty/channel/ChannelFactory;
      33: if_acmpne     50
      36: aload_0
      37: getfield      #27                 // Field eventLoopGroupPool:Lio/grpc/internal/ObjectPool;
      40: getstatic     #26                 // Field DEFAULT_EVENT_LOOP_GROUP_POOL:Lio/grpc/internal/ObjectPool;
      43: if_acmpne     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: istore_2
      52: iload_1
      53: ifne          60
      56: iload_2
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ldc           #101                // String Both EventLoopGroup and ChannelType should be provided or neither should be
      67: invokestatic  #67                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      70: return

  int getDefaultPort();
    Code:
       0: aload_0
       1: getfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
       4: invokeinterface #102,  1          // InterfaceMethod io/grpc/netty/ProtocolNegotiator$ClientFactory.getDefaultPort:()I
       9: ireturn

  static io.grpc.netty.ProtocolNegotiator createProtocolNegotiatorByType(io.grpc.netty.NegotiationType, io.netty.handler.ssl.SslContext, io.grpc.internal.ObjectPool<? extends java.util.concurrent.Executor>);
    Code:
       0: getstatic     #103                // Field io/grpc/netty/NettyChannelBuilder$1.$SwitchMap$io$grpc$netty$NegotiationType:[I
       3: aload_0
       4: invokevirtual #104                // Method io/grpc/netty/NegotiationType.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 40
                     3: 44
               default: 50
          }
      36: invokestatic  #105                // Method io/grpc/netty/ProtocolNegotiators.plaintext:()Lio/grpc/netty/ProtocolNegotiator;
      39: areturn
      40: invokestatic  #106                // Method io/grpc/netty/ProtocolNegotiators.plaintextUpgrade:()Lio/grpc/netty/ProtocolNegotiator;
      43: areturn
      44: aload_1
      45: aload_2
      46: invokestatic  #107                // Method io/grpc/netty/ProtocolNegotiators.tls:(Lio/netty/handler/ssl/SslContext;Lio/grpc/internal/ObjectPool;)Lio/grpc/netty/ProtocolNegotiator;
      49: areturn
      50: new           #8                  // class java/lang/IllegalArgumentException
      53: dup
      54: new           #108                // class java/lang/StringBuilder
      57: dup
      58: invokespecial #109                // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #110                // String Unsupported negotiationType:
      63: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      70: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      76: athrow

  io.grpc.netty.NettyChannelBuilder disableCheckAuthority();
    Code:
       0: aload_0
       1: getfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
       4: invokevirtual #114                // Method io/grpc/internal/ManagedChannelImplBuilder.disableCheckAuthority:()Lio/grpc/internal/ManagedChannelImplBuilder;
       7: pop
       8: aload_0
       9: areturn

  io.grpc.netty.NettyChannelBuilder enableCheckAuthority();
    Code:
       0: aload_0
       1: getfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
       4: invokevirtual #115                // Method io/grpc/internal/ManagedChannelImplBuilder.enableCheckAuthority:()Lio/grpc/internal/ManagedChannelImplBuilder;
       7: pop
       8: aload_0
       9: areturn

  void protocolNegotiatorFactory(io.grpc.netty.ProtocolNegotiator$ClientFactory);
    Code:
       0: aload_0
       1: getfield      #47                 // Field freezeProtocolNegotiatorFactory:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #66                 // String Cannot change security when using ChannelCredentials
      14: invokestatic  #67                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: aload_1
      19: ldc           #116                // String protocolNegotiatorFactory
      21: invokestatic  #50                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #51                 // class io/grpc/netty/ProtocolNegotiator$ClientFactory
      27: putfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
      30: return

  void setTracingEnabled(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
       4: iload_1
       5: invokevirtual #117                // Method io/grpc/internal/ManagedChannelImplBuilder.setTracingEnabled:(Z)V
       8: return

  void setStatsEnabled(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
       4: iload_1
       5: invokevirtual #118                // Method io/grpc/internal/ManagedChannelImplBuilder.setStatsEnabled:(Z)V
       8: return

  void setStatsRecordStartedRpcs(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
       4: iload_1
       5: invokevirtual #119                // Method io/grpc/internal/ManagedChannelImplBuilder.setStatsRecordStartedRpcs:(Z)V
       8: return

  void setStatsRecordFinishedRpcs(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
       4: iload_1
       5: invokevirtual #120                // Method io/grpc/internal/ManagedChannelImplBuilder.setStatsRecordFinishedRpcs:(Z)V
       8: return

  void setStatsRecordRealTimeMetrics(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
       4: iload_1
       5: invokevirtual #121                // Method io/grpc/internal/ManagedChannelImplBuilder.setStatsRecordRealTimeMetrics:(Z)V
       8: return

  void setStatsRecordRetryMetrics(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
       4: iload_1
       5: invokevirtual #122                // Method io/grpc/internal/ManagedChannelImplBuilder.setStatsRecordRetryMetrics:(Z)V
       8: return

  io.grpc.netty.NettyChannelBuilder setTransportTracerFactory(io.grpc.internal.TransportTracer$Factory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field transportTracerFactory:Lio/grpc/internal/TransportTracer$Factory;
       5: aload_0
       6: areturn

  public io.grpc.ManagedChannelBuilder keepAliveWithoutCalls(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #123                // Method keepAliveWithoutCalls:(Z)Lio/grpc/netty/NettyChannelBuilder;
       5: areturn

  public io.grpc.ManagedChannelBuilder keepAliveTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokevirtual #124                // Method keepAliveTimeout:(JLjava/util/concurrent/TimeUnit;)Lio/grpc/netty/NettyChannelBuilder;
       6: areturn

  public io.grpc.ManagedChannelBuilder keepAliveTime(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokevirtual #125                // Method keepAliveTime:(JLjava/util/concurrent/TimeUnit;)Lio/grpc/netty/NettyChannelBuilder;
       6: areturn

  public io.grpc.ManagedChannelBuilder maxInboundMetadataSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #82                 // Method maxInboundMetadataSize:(I)Lio/grpc/netty/NettyChannelBuilder;
       5: areturn

  public io.grpc.ManagedChannelBuilder maxInboundMessageSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #126                // Method maxInboundMessageSize:(I)Lio/grpc/netty/NettyChannelBuilder;
       5: areturn

  public io.grpc.ManagedChannelBuilder useTransportSecurity();
    Code:
       0: aload_0
       1: invokevirtual #127                // Method useTransportSecurity:()Lio/grpc/netty/NettyChannelBuilder;
       4: areturn

  public io.grpc.ManagedChannelBuilder usePlaintext();
    Code:
       0: aload_0
       1: invokevirtual #128                // Method usePlaintext:()Lio/grpc/netty/NettyChannelBuilder;
       4: areturn

  static io.grpc.netty.ProtocolNegotiator$ClientFactory access$100(io.grpc.netty.NettyChannelBuilder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field protocolNegotiatorFactory:Lio/grpc/netty/ProtocolNegotiator$ClientFactory;
       4: areturn

  static io.grpc.internal.ManagedChannelImplBuilder access$600(io.grpc.netty.NettyChannelBuilder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field managedChannelImplBuilder:Lio/grpc/internal/ManagedChannelImplBuilder;
       4: areturn

  static {};
    Code:
       0: getstatic     #129                // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
       3: ldc2_w        #130                // long 1000l
       6: invokevirtual #88                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       9: putstatic     #90                 // Field AS_LARGE_AS_INFINITE:J
      12: new           #60                 // class io/netty/channel/ReflectiveChannelFactory
      15: dup
      16: getstatic     #132                // Field io/grpc/netty/Utils.DEFAULT_CLIENT_CHANNEL_TYPE:Ljava/lang/Class;
      19: invokespecial #61                 // Method io/netty/channel/ReflectiveChannelFactory."<init>":(Ljava/lang/Class;)V
      22: putstatic     #24                 // Field DEFAULT_CHANNEL_FACTORY:Lio/netty/channel/ChannelFactory;
      25: getstatic     #133                // Field io/grpc/netty/Utils.DEFAULT_WORKER_EVENT_LOOP_GROUP:Lio/grpc/internal/SharedResourceHolder$Resource;
      28: invokestatic  #134                // Method io/grpc/internal/SharedResourcePool.forResource:(Lio/grpc/internal/SharedResourceHolder$Resource;)Lio/grpc/internal/SharedResourcePool;
      31: putstatic     #26                 // Field DEFAULT_EVENT_LOOP_GROUP_POOL:Lio/grpc/internal/ObjectPool;
      34: ldc           #135                // String GRPC_EXPERIMENTAL_AUTOFLOWCONTROL
      36: invokestatic  #136                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
      39: astore_0
      40: aload_0
      41: ifnonnull     47
      44: ldc           #137                // String true
      46: astore_0
      47: aload_0
      48: invokestatic  #138                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      51: putstatic     #28                 // Field DEFAULT_AUTO_FLOW_CONTROL:Z
      54: return
}
