Compiled from "NettyServerStream.java"
class io.grpc.netty.NettyServerStream$Sink implements io.grpc.internal.AbstractServerStream$Sink {
  final io.grpc.netty.NettyServerStream this$0;

  private io.grpc.netty.NettyServerStream$Sink(io.grpc.netty.NettyServerStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/grpc/netty/NettyServerStream;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public void writeHeaders(io.grpc.Metadata);
    Code:
       0: ldc           #4                  // String NettyServerStream$Sink.writeHeaders
       2: invokestatic  #5                  // Method io/perfmark/PerfMark.startTask:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #2                  // Field this$0:Lio/grpc/netty/NettyServerStream;
       9: invokestatic  #6                  // Method io/grpc/netty/NettyServerStream.access$200:(Lio/grpc/netty/NettyServerStream;)Lio/grpc/netty/WriteQueue;
      12: aload_0
      13: getfield      #2                  // Field this$0:Lio/grpc/netty/NettyServerStream;
      16: invokevirtual #7                  // Method io/grpc/netty/NettyServerStream.transportState:()Lio/grpc/netty/NettyServerStream$TransportState;
      19: aload_1
      20: invokestatic  #8                  // Method io/grpc/netty/Utils.convertServerHeaders:(Lio/grpc/Metadata;)Lio/netty/handler/codec/http2/Http2Headers;
      23: invokestatic  #9                  // Method io/grpc/netty/SendResponseHeadersCommand.createHeaders:(Lio/grpc/netty/StreamIdHolder;Lio/netty/handler/codec/http2/Http2Headers;)Lio/grpc/netty/SendResponseHeadersCommand;
      26: iconst_1
      27: invokevirtual #10                 // Method io/grpc/netty/WriteQueue.enqueue:(Lio/grpc/netty/WriteQueue$QueuedCommand;Z)Lio/netty/channel/ChannelFuture;
      30: pop
      31: ldc           #4                  // String NettyServerStream$Sink.writeHeaders
      33: invokestatic  #11                 // Method io/perfmark/PerfMark.stopTask:(Ljava/lang/String;)V
      36: goto          47
      39: astore_2
      40: ldc           #4                  // String NettyServerStream$Sink.writeHeaders
      42: invokestatic  #11                 // Method io/perfmark/PerfMark.stopTask:(Ljava/lang/String;)V
      45: aload_2
      46: athrow
      47: return
    Exception table:
       from    to  target type
           5    31    39   any

  private void writeFrameInternal(io.grpc.internal.WritableBuffer, boolean, int);
    Code:
       0: iload_3
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      12: aload_1
      13: ifnonnull     27
      16: aload_0
      17: getfield      #2                  // Field this$0:Lio/grpc/netty/NettyServerStream;
      20: invokestatic  #6                  // Method io/grpc/netty/NettyServerStream.access$200:(Lio/grpc/netty/NettyServerStream;)Lio/grpc/netty/WriteQueue;
      23: invokevirtual #13                 // Method io/grpc/netty/WriteQueue.scheduleFlush:()V
      26: return
      27: aload_1
      28: checkcast     #14                 // class io/grpc/netty/NettyWritableBuffer
      31: invokevirtual #15                 // Method io/grpc/netty/NettyWritableBuffer.bytebuf:()Lio/netty/buffer/ByteBuf;
      34: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.touch:()Lio/netty/buffer/ByteBuf;
      37: astore        4
      39: aload         4
      41: invokevirtual #17                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      44: istore        5
      46: aload_0
      47: getfield      #2                  // Field this$0:Lio/grpc/netty/NettyServerStream;
      50: iload         5
      52: invokestatic  #18                 // Method io/grpc/netty/NettyServerStream.access$300:(Lio/grpc/netty/NettyServerStream;I)V
      55: aload_0
      56: getfield      #2                  // Field this$0:Lio/grpc/netty/NettyServerStream;
      59: invokestatic  #6                  // Method io/grpc/netty/NettyServerStream.access$200:(Lio/grpc/netty/NettyServerStream;)Lio/grpc/netty/WriteQueue;
      62: new           #19                 // class io/grpc/netty/SendGrpcFrameCommand
      65: dup
      66: aload_0
      67: getfield      #2                  // Field this$0:Lio/grpc/netty/NettyServerStream;
      70: invokevirtual #7                  // Method io/grpc/netty/NettyServerStream.transportState:()Lio/grpc/netty/NettyServerStream$TransportState;
      73: aload         4
      75: iconst_0
      76: invokespecial #20                 // Method io/grpc/netty/SendGrpcFrameCommand."<init>":(Lio/grpc/netty/StreamIdHolder;Lio/netty/buffer/ByteBuf;Z)V
      79: iload_2
      80: invokevirtual #10                 // Method io/grpc/netty/WriteQueue.enqueue:(Lio/grpc/netty/WriteQueue$QueuedCommand;Z)Lio/netty/channel/ChannelFuture;
      83: new           #21                 // class io/grpc/netty/NettyServerStream$Sink$1
      86: dup
      87: aload_0
      88: iload         5
      90: iload_3
      91: invokespecial #22                 // Method io/grpc/netty/NettyServerStream$Sink$1."<init>":(Lio/grpc/netty/NettyServerStream$Sink;II)V
      94: invokeinterface #23,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      99: pop
     100: return

  public void writeFrame(io.grpc.internal.WritableBuffer, boolean, int);
    Code:
       0: ldc           #24                 // String NettyServerStream$Sink.writeFrame
       2: invokestatic  #5                  // Method io/perfmark/PerfMark.startTask:(Ljava/lang/String;)V
       5: aload_0
       6: aload_1
       7: iload_2
       8: iload_3
       9: invokespecial #25                 // Method writeFrameInternal:(Lio/grpc/internal/WritableBuffer;ZI)V
      12: ldc           #24                 // String NettyServerStream$Sink.writeFrame
      14: invokestatic  #11                 // Method io/perfmark/PerfMark.stopTask:(Ljava/lang/String;)V
      17: goto          30
      20: astore        4
      22: ldc           #24                 // String NettyServerStream$Sink.writeFrame
      24: invokestatic  #11                 // Method io/perfmark/PerfMark.stopTask:(Ljava/lang/String;)V
      27: aload         4
      29: athrow
      30: return
    Exception table:
       from    to  target type
           5    12    20   any
          20    22    20   any

  public void writeTrailers(io.grpc.Metadata, boolean, io.grpc.Status);
    Code:
       0: ldc           #26                 // String NettyServerStream$Sink.writeTrailers
       2: invokestatic  #5                  // Method io/perfmark/PerfMark.startTask:(Ljava/lang/String;)V
       5: aload_1
       6: iload_2
       7: invokestatic  #27                 // Method io/grpc/netty/Utils.convertTrailers:(Lio/grpc/Metadata;Z)Lio/netty/handler/codec/http2/Http2Headers;
      10: astore        4
      12: aload_0
      13: getfield      #2                  // Field this$0:Lio/grpc/netty/NettyServerStream;
      16: invokestatic  #6                  // Method io/grpc/netty/NettyServerStream.access$200:(Lio/grpc/netty/NettyServerStream;)Lio/grpc/netty/WriteQueue;
      19: aload_0
      20: getfield      #2                  // Field this$0:Lio/grpc/netty/NettyServerStream;
      23: invokevirtual #7                  // Method io/grpc/netty/NettyServerStream.transportState:()Lio/grpc/netty/NettyServerStream$TransportState;
      26: aload         4
      28: aload_3
      29: invokestatic  #28                 // Method io/grpc/netty/SendResponseHeadersCommand.createTrailers:(Lio/grpc/netty/StreamIdHolder;Lio/netty/handler/codec/http2/Http2Headers;Lio/grpc/Status;)Lio/grpc/netty/SendResponseHeadersCommand;
      32: iconst_1
      33: invokevirtual #10                 // Method io/grpc/netty/WriteQueue.enqueue:(Lio/grpc/netty/WriteQueue$QueuedCommand;Z)Lio/netty/channel/ChannelFuture;
      36: pop
      37: ldc           #26                 // String NettyServerStream$Sink.writeTrailers
      39: invokestatic  #11                 // Method io/perfmark/PerfMark.stopTask:(Ljava/lang/String;)V
      42: goto          55
      45: astore        5
      47: ldc           #26                 // String NettyServerStream$Sink.writeTrailers
      49: invokestatic  #11                 // Method io/perfmark/PerfMark.stopTask:(Ljava/lang/String;)V
      52: aload         5
      54: athrow
      55: return
    Exception table:
       from    to  target type
           5    37    45   any
          45    47    45   any

  public void cancel(io.grpc.Status);
    Code:
       0: ldc           #29                 // String NettyServerStream$Sink.cancel
       2: invokestatic  #5                  // Method io/perfmark/PerfMark.startTask:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #2                  // Field this$0:Lio/grpc/netty/NettyServerStream;
       9: invokestatic  #6                  // Method io/grpc/netty/NettyServerStream.access$200:(Lio/grpc/netty/NettyServerStream;)Lio/grpc/netty/WriteQueue;
      12: new           #30                 // class io/grpc/netty/CancelServerStreamCommand
      15: dup
      16: aload_0
      17: getfield      #2                  // Field this$0:Lio/grpc/netty/NettyServerStream;
      20: invokevirtual #7                  // Method io/grpc/netty/NettyServerStream.transportState:()Lio/grpc/netty/NettyServerStream$TransportState;
      23: aload_1
      24: invokespecial #31                 // Method io/grpc/netty/CancelServerStreamCommand."<init>":(Lio/grpc/netty/NettyServerStream$TransportState;Lio/grpc/Status;)V
      27: iconst_1
      28: invokevirtual #10                 // Method io/grpc/netty/WriteQueue.enqueue:(Lio/grpc/netty/WriteQueue$QueuedCommand;Z)Lio/netty/channel/ChannelFuture;
      31: pop
      32: ldc           #29                 // String NettyServerStream$Sink.cancel
      34: invokestatic  #5                  // Method io/perfmark/PerfMark.startTask:(Ljava/lang/String;)V
      37: goto          48
      40: astore_2
      41: ldc           #29                 // String NettyServerStream$Sink.cancel
      43: invokestatic  #5                  // Method io/perfmark/PerfMark.startTask:(Ljava/lang/String;)V
      46: aload_2
      47: athrow
      48: return
    Exception table:
       from    to  target type
           5    32    40   any

  io.grpc.netty.NettyServerStream$Sink(io.grpc.netty.NettyServerStream, io.grpc.netty.NettyServerStream$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/grpc/netty/NettyServerStream;)V
       5: return
}
