Compiled from "NettyChannelBuilder.java"
final class io.grpc.netty.NettyChannelBuilder$DefaultProtocolNegotiator implements io.grpc.netty.ProtocolNegotiator$ClientFactory {
  private io.grpc.netty.NegotiationType negotiationType;

  private io.netty.handler.ssl.SslContext sslContext;

  final io.grpc.netty.NettyChannelBuilder this$0;

  private io.grpc.netty.NettyChannelBuilder$DefaultProtocolNegotiator(io.grpc.netty.NettyChannelBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lio/grpc/netty/NettyChannelBuilder;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: getstatic     #6                  // Field io/grpc/netty/NegotiationType.TLS:Lio/grpc/netty/NegotiationType;
      13: putfield      #2                  // Field negotiationType:Lio/grpc/netty/NegotiationType;
      16: return

  public io.grpc.netty.ProtocolNegotiator newNegotiator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field sslContext:Lio/netty/handler/ssl/SslContext;
       4: astore_1
       5: aload_0
       6: getfield      #2                  // Field negotiationType:Lio/grpc/netty/NegotiationType;
       9: getstatic     #6                  // Field io/grpc/netty/NegotiationType.TLS:Lio/grpc/netty/NegotiationType;
      12: if_acmpne     39
      15: aload_1
      16: ifnonnull     39
      19: invokestatic  #7                  // Method io/grpc/netty/GrpcSslContexts.forClient:()Lio/netty/handler/ssl/SslContextBuilder;
      22: invokevirtual #8                  // Method io/netty/handler/ssl/SslContextBuilder.build:()Lio/netty/handler/ssl/SslContext;
      25: astore_1
      26: goto          39
      29: astore_2
      30: new           #10                 // class java/lang/RuntimeException
      33: dup
      34: aload_2
      35: invokespecial #11                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      38: athrow
      39: aload_0
      40: getfield      #2                  // Field negotiationType:Lio/grpc/netty/NegotiationType;
      43: aload_1
      44: aload_0
      45: getfield      #4                  // Field this$0:Lio/grpc/netty/NettyChannelBuilder;
      48: invokestatic  #12                 // Method io/grpc/netty/NettyChannelBuilder.access$600:(Lio/grpc/netty/NettyChannelBuilder;)Lio/grpc/internal/ManagedChannelImplBuilder;
      51: invokevirtual #13                 // Method io/grpc/internal/ManagedChannelImplBuilder.getOffloadExecutorPool:()Lio/grpc/internal/ObjectPool;
      54: invokestatic  #14                 // Method io/grpc/netty/NettyChannelBuilder.createProtocolNegotiatorByType:(Lio/grpc/netty/NegotiationType;Lio/netty/handler/ssl/SslContext;Lio/grpc/internal/ObjectPool;)Lio/grpc/netty/ProtocolNegotiator;
      57: areturn
    Exception table:
       from    to  target type
          19    26    29   Class javax/net/ssl/SSLException

  public int getDefaultPort();
    Code:
       0: getstatic     #15                 // Field io/grpc/netty/NettyChannelBuilder$1.$SwitchMap$io$grpc$netty$NegotiationType:[I
       3: aload_0
       4: getfield      #2                  // Field negotiationType:Lio/grpc/netty/NegotiationType;
       7: invokevirtual #16                 // Method io/grpc/netty/NegotiationType.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 36
                     3: 39
               default: 43
          }
      36: bipush        80
      38: ireturn
      39: sipush        443
      42: ireturn
      43: new           #18                 // class java/lang/AssertionError
      46: dup
      47: new           #19                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      54: aload_0
      55: getfield      #2                  // Field negotiationType:Lio/grpc/netty/NegotiationType;
      58: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: ldc           #22                 // String  not handled
      63: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #25                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      72: athrow

  io.grpc.netty.NettyChannelBuilder$DefaultProtocolNegotiator(io.grpc.netty.NettyChannelBuilder, io.grpc.netty.NettyChannelBuilder$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method "<init>":(Lio/grpc/netty/NettyChannelBuilder;)V
       5: return

  static io.grpc.netty.NegotiationType access$402(io.grpc.netty.NettyChannelBuilder$DefaultProtocolNegotiator, io.grpc.netty.NegotiationType);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field negotiationType:Lio/grpc/netty/NegotiationType;
       6: areturn

  static io.netty.handler.ssl.SslContext access$502(io.grpc.netty.NettyChannelBuilder$DefaultProtocolNegotiator, io.netty.handler.ssl.SslContext);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field sslContext:Lio/netty/handler/ssl/SslContext;
       6: areturn
}
