Compiled from "DiffBuilder.java"
public class org.apache.commons.lang3.builder.DiffBuilder implements org.apache.commons.lang3.builder.Builder<org.apache.commons.lang3.builder.DiffResult> {
  private final java.util.List<org.apache.commons.lang3.builder.Diff<?>> diffs;

  private final boolean objectsTriviallyEqual;

  private final java.lang.Object left;

  private final java.lang.Object right;

  private final org.apache.commons.lang3.builder.ToStringStyle style;

  public org.apache.commons.lang3.builder.DiffBuilder(java.lang.Object, java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String lhs cannot be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #2                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #5                  // String rhs cannot be null
      28: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: new           #6                  // class java/util/ArrayList
      36: dup
      37: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      40: putfield      #8                  // Field diffs:Ljava/util/List;
      43: aload_0
      44: aload_1
      45: putfield      #9                  // Field left:Ljava/lang/Object;
      48: aload_0
      49: aload_2
      50: putfield      #10                 // Field right:Ljava/lang/Object;
      53: aload_0
      54: aload_3
      55: putfield      #11                 // Field style:Lorg/apache/commons/lang3/builder/ToStringStyle;
      58: aload_0
      59: iload         4
      61: ifeq          81
      64: aload_1
      65: aload_2
      66: if_acmpeq     77
      69: aload_1
      70: aload_2
      71: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ifeq          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: putfield      #13                 // Field objectsTriviallyEqual:Z
      85: return

  public org.apache.commons.lang3.builder.DiffBuilder(java.lang.Object, java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: invokespecial #14                 // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)V
       8: return

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, boolean, boolean);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: iload_2
      24: iload_3
      25: if_icmpeq     49
      28: aload_0
      29: getfield      #8                  // Field diffs:Ljava/util/List;
      32: new           #16                 // class org/apache/commons/lang3/builder/DiffBuilder$1
      35: dup
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokespecial #17                 // Method org/apache/commons/lang3/builder/DiffBuilder$1."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;ZZ)V
      43: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, boolean[], boolean[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #19                 // Method java/util/Arrays.equals:([Z[Z)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #20                 // class org/apache/commons/lang3/builder/DiffBuilder$2
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #21                 // Method org/apache/commons/lang3/builder/DiffBuilder$2."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[Z[Z)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, byte, byte);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: iload_2
      24: iload_3
      25: if_icmpeq     49
      28: aload_0
      29: getfield      #8                  // Field diffs:Ljava/util/List;
      32: new           #22                 // class org/apache/commons/lang3/builder/DiffBuilder$3
      35: dup
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokespecial #23                 // Method org/apache/commons/lang3/builder/DiffBuilder$3."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;BB)V
      43: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, byte[], byte[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #24                 // Method java/util/Arrays.equals:([B[B)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #25                 // class org/apache/commons/lang3/builder/DiffBuilder$4
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #26                 // Method org/apache/commons/lang3/builder/DiffBuilder$4."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[B[B)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, char, char);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: iload_2
      24: iload_3
      25: if_icmpeq     49
      28: aload_0
      29: getfield      #8                  // Field diffs:Ljava/util/List;
      32: new           #27                 // class org/apache/commons/lang3/builder/DiffBuilder$5
      35: dup
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokespecial #28                 // Method org/apache/commons/lang3/builder/DiffBuilder$5."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;CC)V
      43: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, char[], char[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #29                 // Method java/util/Arrays.equals:([C[C)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #30                 // class org/apache/commons/lang3/builder/DiffBuilder$6
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #31                 // Method org/apache/commons/lang3/builder/DiffBuilder$6."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[C[C)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, double, double);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: dload_2
      24: invokestatic  #32                 // Method java/lang/Double.doubleToLongBits:(D)J
      27: dload         4
      29: invokestatic  #32                 // Method java/lang/Double.doubleToLongBits:(D)J
      32: lcmp
      33: ifeq          58
      36: aload_0
      37: getfield      #8                  // Field diffs:Ljava/util/List;
      40: new           #33                 // class org/apache/commons/lang3/builder/DiffBuilder$7
      43: dup
      44: aload_0
      45: aload_1
      46: dload_2
      47: dload         4
      49: invokespecial #34                 // Method org/apache/commons/lang3/builder/DiffBuilder$7."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;DD)V
      52: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_0
      59: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, double[], double[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #35                 // Method java/util/Arrays.equals:([D[D)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #36                 // class org/apache/commons/lang3/builder/DiffBuilder$8
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #37                 // Method org/apache/commons/lang3/builder/DiffBuilder$8."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[D[D)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, float, float);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: fload_2
      24: invokestatic  #38                 // Method java/lang/Float.floatToIntBits:(F)I
      27: fload_3
      28: invokestatic  #38                 // Method java/lang/Float.floatToIntBits:(F)I
      31: if_icmpeq     55
      34: aload_0
      35: getfield      #8                  // Field diffs:Ljava/util/List;
      38: new           #39                 // class org/apache/commons/lang3/builder/DiffBuilder$9
      41: dup
      42: aload_0
      43: aload_1
      44: fload_2
      45: fload_3
      46: invokespecial #40                 // Method org/apache/commons/lang3/builder/DiffBuilder$9."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;FF)V
      49: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: aload_0
      56: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, float[], float[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #41                 // Method java/util/Arrays.equals:([F[F)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #42                 // class org/apache/commons/lang3/builder/DiffBuilder$10
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #43                 // Method org/apache/commons/lang3/builder/DiffBuilder$10."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[F[F)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, int, int);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: iload_2
      24: iload_3
      25: if_icmpeq     49
      28: aload_0
      29: getfield      #8                  // Field diffs:Ljava/util/List;
      32: new           #44                 // class org/apache/commons/lang3/builder/DiffBuilder$11
      35: dup
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokespecial #45                 // Method org/apache/commons/lang3/builder/DiffBuilder$11."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;II)V
      43: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, int[], int[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #46                 // Method java/util/Arrays.equals:([I[I)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #47                 // class org/apache/commons/lang3/builder/DiffBuilder$12
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #48                 // Method org/apache/commons/lang3/builder/DiffBuilder$12."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[I[I)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, long, long);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: lload_2
      24: lload         4
      26: lcmp
      27: ifeq          52
      30: aload_0
      31: getfield      #8                  // Field diffs:Ljava/util/List;
      34: new           #49                 // class org/apache/commons/lang3/builder/DiffBuilder$13
      37: dup
      38: aload_0
      39: aload_1
      40: lload_2
      41: lload         4
      43: invokespecial #50                 // Method org/apache/commons/lang3/builder/DiffBuilder$13."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;JJ)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, long[], long[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #51                 // Method java/util/Arrays.equals:([J[J)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #52                 // class org/apache/commons/lang3/builder/DiffBuilder$14
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #53                 // Method org/apache/commons/lang3/builder/DiffBuilder$14."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[J[J)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, short, short);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: iload_2
      24: iload_3
      25: if_icmpeq     49
      28: aload_0
      29: getfield      #8                  // Field diffs:Ljava/util/List;
      32: new           #54                 // class org/apache/commons/lang3/builder/DiffBuilder$15
      35: dup
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokespecial #55                 // Method org/apache/commons/lang3/builder/DiffBuilder$15."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;SS)V
      43: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, short[], short[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #56                 // Method java/util/Arrays.equals:([S[S)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #57                 // class org/apache/commons/lang3/builder/DiffBuilder$16
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #58                 // Method org/apache/commons/lang3/builder/DiffBuilder$16."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[S[S)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field objectsTriviallyEqual:Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_2
      10: aload_3
      11: if_acmpne     16
      14: aload_0
      15: areturn
      16: aload_2
      17: ifnull        26
      20: aload_2
      21: astore        4
      23: goto          29
      26: aload_3
      27: astore        4
      29: aload         4
      31: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: invokevirtual #60                 // Method java/lang/Class.isArray:()Z
      37: ifeq          284
      40: aload         4
      42: instanceof    #61                 // class "[Z"
      45: ifeq          68
      48: aload_0
      49: aload_1
      50: aload_2
      51: checkcast     #61                 // class "[Z"
      54: checkcast     #61                 // class "[Z"
      57: aload_3
      58: checkcast     #61                 // class "[Z"
      61: checkcast     #61                 // class "[Z"
      64: invokevirtual #62                 // Method append:(Ljava/lang/String;[Z[Z)Lorg/apache/commons/lang3/builder/DiffBuilder;
      67: areturn
      68: aload         4
      70: instanceof    #63                 // class "[B"
      73: ifeq          96
      76: aload_0
      77: aload_1
      78: aload_2
      79: checkcast     #63                 // class "[B"
      82: checkcast     #63                 // class "[B"
      85: aload_3
      86: checkcast     #63                 // class "[B"
      89: checkcast     #63                 // class "[B"
      92: invokevirtual #64                 // Method append:(Ljava/lang/String;[B[B)Lorg/apache/commons/lang3/builder/DiffBuilder;
      95: areturn
      96: aload         4
      98: instanceof    #65                 // class "[C"
     101: ifeq          124
     104: aload_0
     105: aload_1
     106: aload_2
     107: checkcast     #65                 // class "[C"
     110: checkcast     #65                 // class "[C"
     113: aload_3
     114: checkcast     #65                 // class "[C"
     117: checkcast     #65                 // class "[C"
     120: invokevirtual #66                 // Method append:(Ljava/lang/String;[C[C)Lorg/apache/commons/lang3/builder/DiffBuilder;
     123: areturn
     124: aload         4
     126: instanceof    #67                 // class "[D"
     129: ifeq          152
     132: aload_0
     133: aload_1
     134: aload_2
     135: checkcast     #67                 // class "[D"
     138: checkcast     #67                 // class "[D"
     141: aload_3
     142: checkcast     #67                 // class "[D"
     145: checkcast     #67                 // class "[D"
     148: invokevirtual #68                 // Method append:(Ljava/lang/String;[D[D)Lorg/apache/commons/lang3/builder/DiffBuilder;
     151: areturn
     152: aload         4
     154: instanceof    #69                 // class "[F"
     157: ifeq          180
     160: aload_0
     161: aload_1
     162: aload_2
     163: checkcast     #69                 // class "[F"
     166: checkcast     #69                 // class "[F"
     169: aload_3
     170: checkcast     #69                 // class "[F"
     173: checkcast     #69                 // class "[F"
     176: invokevirtual #70                 // Method append:(Ljava/lang/String;[F[F)Lorg/apache/commons/lang3/builder/DiffBuilder;
     179: areturn
     180: aload         4
     182: instanceof    #71                 // class "[I"
     185: ifeq          208
     188: aload_0
     189: aload_1
     190: aload_2
     191: checkcast     #71                 // class "[I"
     194: checkcast     #71                 // class "[I"
     197: aload_3
     198: checkcast     #71                 // class "[I"
     201: checkcast     #71                 // class "[I"
     204: invokevirtual #72                 // Method append:(Ljava/lang/String;[I[I)Lorg/apache/commons/lang3/builder/DiffBuilder;
     207: areturn
     208: aload         4
     210: instanceof    #73                 // class "[J"
     213: ifeq          236
     216: aload_0
     217: aload_1
     218: aload_2
     219: checkcast     #73                 // class "[J"
     222: checkcast     #73                 // class "[J"
     225: aload_3
     226: checkcast     #73                 // class "[J"
     229: checkcast     #73                 // class "[J"
     232: invokevirtual #74                 // Method append:(Ljava/lang/String;[J[J)Lorg/apache/commons/lang3/builder/DiffBuilder;
     235: areturn
     236: aload         4
     238: instanceof    #75                 // class "[S"
     241: ifeq          264
     244: aload_0
     245: aload_1
     246: aload_2
     247: checkcast     #75                 // class "[S"
     250: checkcast     #75                 // class "[S"
     253: aload_3
     254: checkcast     #75                 // class "[S"
     257: checkcast     #75                 // class "[S"
     260: invokevirtual #76                 // Method append:(Ljava/lang/String;[S[S)Lorg/apache/commons/lang3/builder/DiffBuilder;
     263: areturn
     264: aload_0
     265: aload_1
     266: aload_2
     267: checkcast     #77                 // class "[Ljava/lang/Object;"
     270: checkcast     #77                 // class "[Ljava/lang/Object;"
     273: aload_3
     274: checkcast     #77                 // class "[Ljava/lang/Object;"
     277: checkcast     #77                 // class "[Ljava/lang/Object;"
     280: invokevirtual #78                 // Method append:(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;
     283: areturn
     284: aload_2
     285: ifnull        298
     288: aload_2
     289: aload_3
     290: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     293: ifeq          298
     296: aload_0
     297: areturn
     298: aload_0
     299: getfield      #8                  // Field diffs:Ljava/util/List;
     302: new           #79                 // class org/apache/commons/lang3/builder/DiffBuilder$17
     305: dup
     306: aload_0
     307: aload_1
     308: aload_2
     309: aload_3
     310: invokespecial #80                 // Method org/apache/commons/lang3/builder/DiffBuilder$17."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     313: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     318: pop
     319: aload_0
     320: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, java.lang.Object[], java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #13                 // Field objectsTriviallyEqual:Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_2
      10: aload_3
      11: invokestatic  #81                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      14: ifne          38
      17: aload_0
      18: getfield      #8                  // Field diffs:Ljava/util/List;
      21: new           #82                 // class org/apache/commons/lang3/builder/DiffBuilder$18
      24: dup
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokespecial #83                 // Method org/apache/commons/lang3/builder/DiffBuilder$18."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V
      32: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      37: pop
      38: aload_0
      39: areturn

  public org.apache.commons.lang3.builder.DiffResult build();
    Code:
       0: new           #84                 // class org/apache/commons/lang3/builder/DiffResult
       3: dup
       4: aload_0
       5: getfield      #9                  // Field left:Ljava/lang/Object;
       8: aload_0
       9: getfield      #10                 // Field right:Ljava/lang/Object;
      12: aload_0
      13: getfield      #8                  // Field diffs:Ljava/util/List;
      16: aload_0
      17: getfield      #11                 // Field style:Lorg/apache/commons/lang3/builder/ToStringStyle;
      20: invokespecial #85                 // Method org/apache/commons/lang3/builder/DiffResult."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;Lorg/apache/commons/lang3/builder/ToStringStyle;)V
      23: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method build:()Lorg/apache/commons/lang3/builder/DiffResult;
       4: areturn
}
