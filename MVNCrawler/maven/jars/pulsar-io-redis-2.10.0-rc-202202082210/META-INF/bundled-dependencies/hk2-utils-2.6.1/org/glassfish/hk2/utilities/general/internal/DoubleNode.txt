Compiled from "DoubleNode.java"
public class org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V> {
  private final java.lang.ref.WeakReference<K> weakKey;

  private final V value;

  private org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V> previous;

  private org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V> next;

  private K hardenedKey;

  public org.glassfish.hk2.utilities.general.internal.DoubleNode(K, V, java.lang.ref.ReferenceQueue<? super K>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/WeakReference
       8: dup
       9: aload_1
      10: aload_3
      11: invokespecial #3                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      14: putfield      #4                  // Field weakKey:Ljava/lang/ref/WeakReference;
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field value:Ljava/lang/Object;
      22: return

  public org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V> getPrevious();
    Code:
       0: aload_0
       1: getfield      #6                  // Field previous:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
       4: areturn

  public void setPrevious(org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field previous:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
       5: return

  public org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V> getNext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field next:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
       4: areturn

  public void setNext(org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field next:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
       5: return

  public java.lang.ref.WeakReference<K> getWeakKey();
    Code:
       0: aload_0
       1: getfield      #4                  // Field weakKey:Ljava/lang/ref/WeakReference;
       4: areturn

  public V getValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/lang/Object;
       4: areturn

  public K getHardenedKey();
    Code:
       0: aload_0
       1: getfield      #8                  // Field hardenedKey:Ljava/lang/Object;
       4: areturn

  public void setHardenedKey(K);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field hardenedKey:Ljava/lang/Object;
       5: return
}
