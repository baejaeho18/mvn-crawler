Compiled from "LRUHybridCache.java"
class org.glassfish.hk2.utilities.cache.LRUHybridCache$OriginThreadAwareFuture implements java.util.concurrent.Future<org.glassfish.hk2.utilities.cache.HybridCacheEntry<V>> {
  private final K key;

  private final java.util.concurrent.FutureTask<org.glassfish.hk2.utilities.cache.HybridCacheEntry<V>> future;

  private volatile long threadId;

  private volatile long lastHit;

  final org.glassfish.hk2.utilities.cache.LRUHybridCache this$0;

  org.glassfish.hk2.utilities.cache.LRUHybridCache$OriginThreadAwareFuture(org.glassfish.hk2.utilities.cache.LRUHybridCache<K, org.glassfish.hk2.utilities.cache.HybridCacheEntry<V>>, K);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lorg/glassfish/hk2/utilities/cache/LRUHybridCache;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_3
      11: putfield      #1                  // Field key:Ljava/lang/Object;
      14: aload_0
      15: invokestatic  #6                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      18: invokevirtual #7                  // Method java/lang/Thread.getId:()J
      21: putfield      #3                  // Field threadId:J
      24: new           #8                  // class org/glassfish/hk2/utilities/cache/LRUHybridCache$OriginThreadAwareFuture$1
      27: dup
      28: aload_0
      29: aload_1
      30: aload_3
      31: invokespecial #9                  // Method org/glassfish/hk2/utilities/cache/LRUHybridCache$OriginThreadAwareFuture$1."<init>":(Lorg/glassfish/hk2/utilities/cache/LRUHybridCache$OriginThreadAwareFuture;Lorg/glassfish/hk2/utilities/cache/LRUHybridCache;Ljava/lang/Object;)V
      34: astore        4
      36: aload_0
      37: new           #10                 // class java/util/concurrent/FutureTask
      40: dup
      41: aload         4
      43: invokespecial #11                 // Method java/util/concurrent/FutureTask."<init>":(Ljava/util/concurrent/Callable;)V
      46: putfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
      49: aload_0
      50: invokestatic  #13                 // Method java/lang/System.nanoTime:()J
      53: putfield      #2                  // Field lastHit:J
      56: return

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
       4: invokevirtual #14                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_1
      11: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: if_acmpeq     19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #16                 // class org/glassfish/hk2/utilities/cache/LRUHybridCache$OriginThreadAwareFuture
      23: astore_2
      24: aload_0
      25: getfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
      28: aload_2
      29: getfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
      32: if_acmpeq     58
      35: aload_0
      36: getfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
      39: ifnull        56
      42: aload_0
      43: getfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
      46: aload_2
      47: getfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
      50: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      53: ifne          58
      56: iconst_0
      57: ireturn
      58: iconst_1
      59: ireturn

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: getfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
       4: iload_1
       5: invokevirtual #18                 // Method java/util/concurrent/FutureTask.cancel:(Z)Z
       8: ireturn

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
       4: invokevirtual #19                 // Method java/util/concurrent/FutureTask.isCancelled:()Z
       7: ireturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
       4: invokevirtual #20                 // Method java/util/concurrent/FutureTask.isDone:()Z
       7: ireturn

  public org.glassfish.hk2.utilities.cache.HybridCacheEntry<V> get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
       4: invokevirtual #21                 // Method java/util/concurrent/FutureTask.get:()Ljava/lang/Object;
       7: checkcast     #22                 // class org/glassfish/hk2/utilities/cache/HybridCacheEntry
      10: areturn

  public org.glassfish.hk2.utilities.cache.HybridCacheEntry<V> get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
       4: lload_1
       5: aload_3
       6: invokevirtual #23                 // Method java/util/concurrent/FutureTask.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
       9: checkcast     #22                 // class org/glassfish/hk2/utilities/cache/HybridCacheEntry
      12: areturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #12                 // Field future:Ljava/util/concurrent/FutureTask;
       4: invokevirtual #24                 // Method java/util/concurrent/FutureTask.run:()V
       7: return

  public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokevirtual #25                 // Method get:(JLjava/util/concurrent/TimeUnit;)Lorg/glassfish/hk2/utilities/cache/HybridCacheEntry;
       6: areturn

  public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method get:()Lorg/glassfish/hk2/utilities/cache/HybridCacheEntry;
       4: areturn

  static long access$102(org.glassfish.hk2.utilities.cache.LRUHybridCache$OriginThreadAwareFuture, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #3                  // Field threadId:J
       6: lreturn

  static long access$100(org.glassfish.hk2.utilities.cache.LRUHybridCache$OriginThreadAwareFuture);
    Code:
       0: aload_0
       1: getfield      #3                  // Field threadId:J
       4: lreturn

  static long access$202(org.glassfish.hk2.utilities.cache.LRUHybridCache$OriginThreadAwareFuture, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #2                  // Field lastHit:J
       6: lreturn

  static java.lang.Object access$300(org.glassfish.hk2.utilities.cache.LRUHybridCache$OriginThreadAwareFuture);
    Code:
       0: aload_0
       1: getfield      #1                  // Field key:Ljava/lang/Object;
       4: areturn

  static long access$200(org.glassfish.hk2.utilities.cache.LRUHybridCache$OriginThreadAwareFuture);
    Code:
       0: aload_0
       1: getfield      #2                  // Field lastHit:J
       4: lreturn
}
