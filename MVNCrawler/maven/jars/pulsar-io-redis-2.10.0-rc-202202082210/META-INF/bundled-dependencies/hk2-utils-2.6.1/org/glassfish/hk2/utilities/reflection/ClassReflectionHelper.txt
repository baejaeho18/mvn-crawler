Compiled from "ClassReflectionHelper.java"
public interface org.glassfish.hk2.utilities.reflection.ClassReflectionHelper {
  public abstract java.util.Set<org.glassfish.hk2.utilities.reflection.MethodWrapper> getAllMethods(java.lang.Class<?>);

  public abstract org.glassfish.hk2.utilities.reflection.MethodWrapper createMethodWrapper(java.lang.reflect.Method);

  public abstract java.util.Set<java.lang.reflect.Field> getAllFields(java.lang.Class<?>);

  public abstract java.lang.reflect.Method findPostConstruct(java.lang.Class<?>, java.lang.Class<?>) throws java.lang.IllegalArgumentException;

  public abstract java.lang.reflect.Method findPreDestroy(java.lang.Class<?>, java.lang.Class<?>) throws java.lang.IllegalArgumentException;

  public abstract void clean(java.lang.Class<?>);

  public abstract void dispose();

  public abstract int size();
}
