Compiled from "WeakHashClockImpl.java"
public class org.glassfish.hk2.utilities.general.internal.WeakHashClockImpl<K, V> implements org.glassfish.hk2.utilities.general.WeakHashClock<K, V> {
  private final boolean isWeak;

  private final java.util.concurrent.ConcurrentHashMap<K, org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V>> byKeyNotWeak;

  private final java.util.WeakHashMap<K, org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V>> byKey;

  private final java.lang.ref.ReferenceQueue<? super K> myQueue;

  private org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V> head;

  private org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V> tail;

  private org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V> dot;

  public org.glassfish.hk2.utilities.general.internal.WeakHashClockImpl(boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #4                  // Field myQueue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: iload_1
      17: putfield      #5                  // Field isWeak:Z
      20: iload_1
      21: ifeq          43
      24: aload_0
      25: new           #6                  // class java/util/WeakHashMap
      28: dup
      29: invokespecial #7                  // Method java/util/WeakHashMap."<init>":()V
      32: putfield      #8                  // Field byKey:Ljava/util/WeakHashMap;
      35: aload_0
      36: aconst_null
      37: putfield      #9                  // Field byKeyNotWeak:Ljava/util/concurrent/ConcurrentHashMap;
      40: goto          59
      43: aload_0
      44: new           #10                 // class java/util/concurrent/ConcurrentHashMap
      47: dup
      48: invokespecial #11                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      51: putfield      #9                  // Field byKeyNotWeak:Ljava/util/concurrent/ConcurrentHashMap;
      54: aload_0
      55: aconst_null
      56: putfield      #8                  // Field byKey:Ljava/util/WeakHashMap;
      59: return

  private org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V> addBeforeDot(K, V);
    Code:
       0: new           #12                 // class org/glassfish/hk2/utilities/general/internal/DoubleNode
       3: dup
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #4                  // Field myQueue:Ljava/lang/ref/ReferenceQueue;
      10: invokespecial #13                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      13: astore_3
      14: aload_0
      15: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      18: ifnonnull     38
      21: aload_0
      22: aload_3
      23: putfield      #15                 // Field head:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      26: aload_0
      27: aload_3
      28: putfield      #16                 // Field tail:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      31: aload_0
      32: aload_3
      33: putfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      36: aload_3
      37: areturn
      38: aload_0
      39: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      42: invokevirtual #17                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getPrevious:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      45: ifnonnull     71
      48: aload_0
      49: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      52: aload_3
      53: invokevirtual #18                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setPrevious:(Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;)V
      56: aload_3
      57: aload_0
      58: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      61: invokevirtual #19                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setNext:(Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;)V
      64: aload_0
      65: aload_3
      66: putfield      #15                 // Field head:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      69: aload_3
      70: areturn
      71: aload_3
      72: aload_0
      73: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      76: invokevirtual #19                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setNext:(Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;)V
      79: aload_3
      80: aload_0
      81: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      84: invokevirtual #17                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getPrevious:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      87: invokevirtual #18                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setPrevious:(Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;)V
      90: aload_0
      91: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      94: invokevirtual #17                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getPrevious:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      97: aload_3
      98: invokevirtual #19                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setNext:(Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;)V
     101: aload_0
     102: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
     105: aload_3
     106: invokevirtual #18                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setPrevious:(Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;)V
     109: aload_3
     110: areturn

  private void removeFromDLL(org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V>);
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getPrevious:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
       4: ifnull        18
       7: aload_1
       8: invokevirtual #17                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getPrevious:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      11: aload_1
      12: invokevirtual #20                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getNext:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      15: invokevirtual #19                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setNext:(Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;)V
      18: aload_1
      19: invokevirtual #20                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getNext:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      22: ifnull        36
      25: aload_1
      26: invokevirtual #20                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getNext:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      29: aload_1
      30: invokevirtual #17                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getPrevious:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      33: invokevirtual #18                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setPrevious:(Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;)V
      36: aload_1
      37: aload_0
      38: getfield      #15                 // Field head:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      41: if_acmpne     52
      44: aload_0
      45: aload_1
      46: invokevirtual #20                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getNext:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      49: putfield      #15                 // Field head:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      52: aload_1
      53: aload_0
      54: getfield      #16                 // Field tail:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      57: if_acmpne     68
      60: aload_0
      61: aload_1
      62: invokevirtual #17                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getPrevious:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      65: putfield      #16                 // Field tail:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      68: aload_1
      69: aload_0
      70: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      73: if_acmpne     99
      76: aload_0
      77: aload_1
      78: invokevirtual #20                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getNext:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      81: putfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      84: aload_0
      85: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      88: ifnonnull     99
      91: aload_0
      92: aload_0
      93: getfield      #15                 // Field head:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      96: putfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      99: aload_1
     100: aconst_null
     101: invokevirtual #19                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setNext:(Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;)V
     104: aload_1
     105: aconst_null
     106: invokevirtual #18                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setPrevious:(Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;)V
     109: return

  public void put(K, V);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     49
       8: new           #21                 // class java/lang/IllegalArgumentException
      11: dup
      12: new           #22                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #24                 // String key
      21: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #27                 // String  or value
      30: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: ldc           #28                 // String  is null
      39: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: dup
      51: astore_3
      52: monitorenter
      53: aload_0
      54: getfield      #5                  // Field isWeak:Z
      57: ifeq          64
      60: aload_0
      61: invokespecial #31                 // Method removeStale:()V
      64: aload_0
      65: aload_1
      66: aload_2
      67: invokespecial #32                 // Method addBeforeDot:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      70: astore        4
      72: aload_0
      73: getfield      #5                  // Field isWeak:Z
      76: ifeq          93
      79: aload_0
      80: getfield      #8                  // Field byKey:Ljava/util/WeakHashMap;
      83: aload_1
      84: aload         4
      86: invokevirtual #33                 // Method java/util/WeakHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: goto          104
      93: aload_0
      94: getfield      #9                  // Field byKeyNotWeak:Ljava/util/concurrent/ConcurrentHashMap;
      97: aload_1
      98: aload         4
     100: invokevirtual #34                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: aload_3
     105: monitorexit
     106: goto          116
     109: astore        5
     111: aload_3
     112: monitorexit
     113: aload         5
     115: athrow
     116: return
    Exception table:
       from    to  target type
          53   106   109   any
         109   113   109   any

  public V get(K);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #5                  // Field isWeak:Z
      10: ifeq          48
      13: aload_0
      14: dup
      15: astore_3
      16: monitorenter
      17: aload_0
      18: invokespecial #31                 // Method removeStale:()V
      21: aload_0
      22: getfield      #8                  // Field byKey:Ljava/util/WeakHashMap;
      25: aload_1
      26: invokevirtual #35                 // Method java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #12                 // class org/glassfish/hk2/utilities/general/internal/DoubleNode
      32: astore_2
      33: aload_3
      34: monitorexit
      35: goto          45
      38: astore        4
      40: aload_3
      41: monitorexit
      42: aload         4
      44: athrow
      45: goto          60
      48: aload_0
      49: getfield      #9                  // Field byKeyNotWeak:Ljava/util/concurrent/ConcurrentHashMap;
      52: aload_1
      53: invokevirtual #36                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #12                 // class org/glassfish/hk2/utilities/general/internal/DoubleNode
      59: astore_2
      60: aload_2
      61: ifnonnull     66
      64: aconst_null
      65: areturn
      66: aload_2
      67: invokevirtual #37                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getValue:()Ljava/lang/Object;
      70: areturn
    Exception table:
       from    to  target type
          17    35    38   any
          38    42    38   any

  public V remove(K);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: dup
       8: astore_2
       9: monitorenter
      10: aload_0
      11: getfield      #5                  // Field isWeak:Z
      14: ifeq          36
      17: aload_0
      18: invokespecial #31                 // Method removeStale:()V
      21: aload_0
      22: getfield      #8                  // Field byKey:Ljava/util/WeakHashMap;
      25: aload_1
      26: invokevirtual #38                 // Method java/util/WeakHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #12                 // class org/glassfish/hk2/utilities/general/internal/DoubleNode
      32: astore_3
      33: goto          48
      36: aload_0
      37: getfield      #9                  // Field byKeyNotWeak:Ljava/util/concurrent/ConcurrentHashMap;
      40: aload_1
      41: invokevirtual #39                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #12                 // class org/glassfish/hk2/utilities/general/internal/DoubleNode
      47: astore_3
      48: aload_3
      49: ifnonnull     56
      52: aconst_null
      53: aload_2
      54: monitorexit
      55: areturn
      56: aload_0
      57: aload_3
      58: invokespecial #40                 // Method removeFromDLL:(Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;)V
      61: aload_3
      62: invokevirtual #37                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getValue:()Ljava/lang/Object;
      65: aload_2
      66: monitorexit
      67: areturn
      68: astore        4
      70: aload_2
      71: monitorexit
      72: aload         4
      74: athrow
    Exception table:
       from    to  target type
          10    55    68   any
          56    67    68   any
          68    72    68   any

  public synchronized void releaseMatching(org.glassfish.hk2.utilities.cache.CacheKeyFilter<K>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #5                  // Field isWeak:Z
       9: ifeq          16
      12: aload_0
      13: invokespecial #31                 // Method removeStale:()V
      16: new           #41                 // class java/util/LinkedList
      19: dup
      20: invokespecial #42                 // Method java/util/LinkedList."<init>":()V
      23: astore_2
      24: aload_0
      25: getfield      #15                 // Field head:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      28: astore_3
      29: aload_3
      30: ifnull        73
      33: aload_3
      34: invokevirtual #43                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getWeakKey:()Ljava/lang/ref/WeakReference;
      37: invokevirtual #44                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      40: astore        4
      42: aload         4
      44: ifnull        65
      47: aload_1
      48: aload         4
      50: invokeinterface #45,  2           // InterfaceMethod org/glassfish/hk2/utilities/cache/CacheKeyFilter.matches:(Ljava/lang/Object;)Z
      55: ifeq          65
      58: aload_2
      59: aload         4
      61: invokevirtual #46                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      64: pop
      65: aload_3
      66: invokevirtual #20                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getNext:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      69: astore_3
      70: goto          29
      73: aload_2
      74: invokevirtual #47                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      77: astore        4
      79: aload         4
      81: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          108
      89: aload         4
      91: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: astore        5
      98: aload_0
      99: aload         5
     101: invokevirtual #50                 // Method remove:(Ljava/lang/Object;)Ljava/lang/Object;
     104: pop
     105: goto          79
     108: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isWeak:Z
       4: ifeq          30
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: invokespecial #31                 // Method removeStale:()V
      15: aload_0
      16: getfield      #8                  // Field byKey:Ljava/util/WeakHashMap;
      19: invokevirtual #51                 // Method java/util/WeakHashMap.size:()I
      22: aload_1
      23: monitorexit
      24: ireturn
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
      30: aload_0
      31: getfield      #9                  // Field byKeyNotWeak:Ljava/util/concurrent/ConcurrentHashMap;
      34: invokevirtual #52                 // Method java/util/concurrent/ConcurrentHashMap.size:()I
      37: ireturn
    Exception table:
       from    to  target type
          11    24    25   any
          25    28    25   any

  private org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V> moveDot();
    Code:
       0: aload_0
       1: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      13: astore_1
      14: aload_0
      15: aload_1
      16: invokevirtual #20                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getNext:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      19: putfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      22: aload_0
      23: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      26: ifnonnull     37
      29: aload_0
      30: aload_0
      31: getfield      #15                 // Field head:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      34: putfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      37: aload_1
      38: areturn

  private org.glassfish.hk2.utilities.general.internal.DoubleNode<K, V> moveDotNoWeak();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method moveDot:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
       4: astore_1
       5: aload_1
       6: astore_2
       7: aload_2
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_2
      14: invokevirtual #43                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getWeakKey:()Ljava/lang/ref/WeakReference;
      17: invokevirtual #44                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      20: dup
      21: astore_3
      22: ifnonnull     43
      25: aload_0
      26: invokespecial #53                 // Method moveDot:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      29: astore_2
      30: aload_2
      31: ifnonnull     36
      34: aconst_null
      35: areturn
      36: aload_2
      37: aload_1
      38: if_acmpne     13
      41: aconst_null
      42: areturn
      43: aload_2
      44: aload_3
      45: invokevirtual #54                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setHardenedKey:(Ljava/lang/Object;)V
      48: aload_2
      49: areturn

  public synchronized java.util.Map$Entry<K, V> next();
    Code:
       0: aload_0
       1: invokespecial #55                 // Method moveDotNoWeak:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: invokevirtual #56                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getHardenedKey:()Ljava/lang/Object;
      15: astore_2
      16: aload_1
      17: invokevirtual #37                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getValue:()Ljava/lang/Object;
      20: astore_3
      21: new           #57                 // class org/glassfish/hk2/utilities/general/internal/WeakHashClockImpl$1
      24: dup
      25: aload_0
      26: aload_2
      27: aload_3
      28: invokespecial #58                 // Method org/glassfish/hk2/utilities/general/internal/WeakHashClockImpl$1."<init>":(Lorg/glassfish/hk2/utilities/general/internal/WeakHashClockImpl;Ljava/lang/Object;Ljava/lang/Object;)V
      31: astore        4
      33: aload_1
      34: aconst_null
      35: invokevirtual #54                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setHardenedKey:(Ljava/lang/Object;)V
      38: aload_0
      39: invokespecial #31                 // Method removeStale:()V
      42: aload         4
      44: areturn
      45: astore        5
      47: aload_1
      48: aconst_null
      49: invokevirtual #54                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.setHardenedKey:(Ljava/lang/Object;)V
      52: aload_0
      53: invokespecial #31                 // Method removeStale:()V
      56: aload         5
      58: athrow
    Exception table:
       from    to  target type
          11    33    45   any
          45    47    45   any

  public synchronized void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isWeak:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #8                  // Field byKey:Ljava/util/WeakHashMap;
      11: invokevirtual #59                 // Method java/util/WeakHashMap.clear:()V
      14: goto          24
      17: aload_0
      18: getfield      #9                  // Field byKeyNotWeak:Ljava/util/concurrent/ConcurrentHashMap;
      21: invokevirtual #60                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      24: aload_0
      25: aload_0
      26: aload_0
      27: aconst_null
      28: dup_x1
      29: putfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      32: dup_x1
      33: putfield      #16                 // Field tail:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      36: putfield      #15                 // Field head:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      39: return

  public synchronized void clearStaleReferences();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method removeStale:()V
       4: return

  private void removeStale();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #4                  // Field myQueue:Ljava/lang/ref/ReferenceQueue;
       6: invokevirtual #61                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       9: ifnull        17
      12: iconst_1
      13: istore_1
      14: goto          2
      17: iload_1
      18: ifne          22
      21: return
      22: aload_0
      23: getfield      #15                 // Field head:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      26: astore_2
      27: aload_2
      28: ifnull        56
      31: aload_2
      32: invokevirtual #20                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getNext:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      35: astore_3
      36: aload_2
      37: invokevirtual #43                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getWeakKey:()Ljava/lang/ref/WeakReference;
      40: invokevirtual #44                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      43: ifnonnull     51
      46: aload_0
      47: aload_2
      48: invokespecial #40                 // Method removeFromDLL:(Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;)V
      51: aload_3
      52: astore_2
      53: goto          27
      56: return

  public boolean hasWeakKeys();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isWeak:Z
       4: ireturn

  public synchronized java.lang.String toString();
    Code:
       0: new           #62                 // class java/lang/StringBuffer
       3: dup
       4: ldc           #63                 // String WeakHashClockImpl({
       6: invokespecial #64                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: iconst_1
      11: istore_2
      12: aload_0
      13: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      16: astore_3
      17: aload_3
      18: ifnull        110
      21: aload_3
      22: invokevirtual #43                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getWeakKey:()Ljava/lang/ref/WeakReference;
      25: invokevirtual #44                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      28: astore        4
      30: aload         4
      32: ifnonnull     40
      35: ldc           #65                 // String null
      37: goto          45
      40: aload         4
      42: invokevirtual #66                 // Method java/lang/Object.toString:()Ljava/lang/String;
      45: astore        5
      47: iload_2
      48: ifeq          63
      51: iconst_0
      52: istore_2
      53: aload_1
      54: aload         5
      56: invokevirtual #67                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      59: pop
      60: goto          88
      63: aload_1
      64: new           #22                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #68                 // String ,
      73: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload         5
      78: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokevirtual #67                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      87: pop
      88: aload_3
      89: invokevirtual #20                 // Method org/glassfish/hk2/utilities/general/internal/DoubleNode.getNext:()Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
      92: astore_3
      93: aload_3
      94: ifnonnull     102
      97: aload_0
      98: getfield      #15                 // Field head:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
     101: astore_3
     102: aload_3
     103: aload_0
     104: getfield      #14                 // Field dot:Lorg/glassfish/hk2/utilities/general/internal/DoubleNode;
     107: if_acmpne     21
     110: aload_1
     111: new           #22                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #69                 // String },
     120: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_0
     124: invokestatic  #70                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
     127: invokevirtual #71                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     130: ldc           #72                 // String )
     132: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokevirtual #67                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     141: pop
     142: aload_1
     143: invokevirtual #73                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     146: areturn
}
