Compiled from "WeakDataFile.java"
final class org.jvnet.mimepull.WeakDataFile extends java.lang.ref.WeakReference<org.jvnet.mimepull.DataFile> {
  private static final java.util.logging.Logger LOGGER;

  private static int TIMEOUT;

  private static java.lang.ref.ReferenceQueue<org.jvnet.mimepull.DataFile> refQueue;

  private static java.util.Queue<org.jvnet.mimepull.WeakDataFile> refList;

  private java.io.File file;

  private final java.io.RandomAccessFile raf;

  private static boolean hasCleanUpExecutor;

  org.jvnet.mimepull.WeakDataFile(org.jvnet.mimepull.DataFile, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
       5: invokespecial #5                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
       8: getstatic     #6                  // Field refList:Ljava/util/Queue;
      11: aload_0
      12: invokeinterface #7,  2            // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: aload_2
      20: putfield      #1                  // Field file:Ljava/io/File;
      23: aload_0
      24: new           #8                  // class java/io/RandomAccessFile
      27: dup
      28: aload_2
      29: ldc           #9                  // String rw
      31: invokespecial #10                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      34: putfield      #11                 // Field raf:Ljava/io/RandomAccessFile;
      37: goto          50
      40: astore_3
      41: new           #13                 // class org/jvnet/mimepull/MIMEParsingException
      44: dup
      45: aload_3
      46: invokespecial #14                 // Method org/jvnet/mimepull/MIMEParsingException."<init>":(Ljava/lang/Throwable;)V
      49: athrow
      50: getstatic     #15                 // Field hasCleanUpExecutor:Z
      53: ifne          59
      56: invokestatic  #16                 // Method drainRefQueueBounded:()V
      59: return
    Exception table:
       from    to  target type
          23    37    40   Class java/io/IOException

  synchronized void read(long, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field raf:Ljava/io/RandomAccessFile;
       4: lload_1
       5: invokevirtual #17                 // Method java/io/RandomAccessFile.seek:(J)V
       8: aload_0
       9: getfield      #11                 // Field raf:Ljava/io/RandomAccessFile;
      12: aload_3
      13: iload         4
      15: iload         5
      17: invokevirtual #18                 // Method java/io/RandomAccessFile.readFully:([BII)V
      20: goto          35
      23: astore        6
      25: new           #13                 // class org/jvnet/mimepull/MIMEParsingException
      28: dup
      29: aload         6
      31: invokespecial #14                 // Method org/jvnet/mimepull/MIMEParsingException."<init>":(Ljava/lang/Throwable;)V
      34: athrow
      35: return
    Exception table:
       from    to  target type
           0    20    23   Class java/io/IOException

  synchronized long writeTo(long, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field raf:Ljava/io/RandomAccessFile;
       4: lload_1
       5: invokevirtual #17                 // Method java/io/RandomAccessFile.seek:(J)V
       8: aload_0
       9: getfield      #11                 // Field raf:Ljava/io/RandomAccessFile;
      12: aload_3
      13: iload         4
      15: iload         5
      17: invokevirtual #19                 // Method java/io/RandomAccessFile.write:([BII)V
      20: aload_0
      21: getfield      #11                 // Field raf:Ljava/io/RandomAccessFile;
      24: invokevirtual #20                 // Method java/io/RandomAccessFile.getFilePointer:()J
      27: lreturn
      28: astore        6
      30: new           #13                 // class org/jvnet/mimepull/MIMEParsingException
      33: dup
      34: aload         6
      36: invokespecial #14                 // Method org/jvnet/mimepull/MIMEParsingException."<init>":(Ljava/lang/Throwable;)V
      39: athrow
    Exception table:
       from    to  target type
           0    27    28   Class java/io/IOException

  void close();
    Code:
       0: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #21                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       6: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          30
      12: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #21                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      18: ldc           #23                 // String Deleting file = {0}
      20: aload_0
      21: getfield      #1                  // Field file:Ljava/io/File;
      24: invokevirtual #24                 // Method java/io/File.getName:()Ljava/lang/String;
      27: invokevirtual #25                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      30: getstatic     #6                  // Field refList:Ljava/util/Queue;
      33: aload_0
      34: invokeinterface #26,  2           // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: getfield      #11                 // Field raf:Ljava/io/RandomAccessFile;
      44: invokevirtual #27                 // Method java/io/RandomAccessFile.close:()V
      47: aload_0
      48: getfield      #1                  // Field file:Ljava/io/File;
      51: invokevirtual #28                 // Method java/io/File.delete:()Z
      54: istore_1
      55: iload_1
      56: ifne          89
      59: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
      62: getstatic     #29                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      65: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      68: ifeq          89
      71: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
      74: getstatic     #29                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      77: ldc           #30                 // String File {0} was not deleted
      79: aload_0
      80: getfield      #1                  // Field file:Ljava/io/File;
      83: invokevirtual #31                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      86: invokevirtual #25                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      89: goto          102
      92: astore_1
      93: new           #13                 // class org/jvnet/mimepull/MIMEParsingException
      96: dup
      97: aload_1
      98: invokespecial #14                 // Method org/jvnet/mimepull/MIMEParsingException."<init>":(Ljava/lang/Throwable;)V
     101: athrow
     102: return
    Exception table:
       from    to  target type
          40    89    92   Class java/io/IOException

  void renameTo(java.io.File);
    Code:
       0: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #21                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       6: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          38
      12: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #21                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      18: ldc           #32                 // String Moving file={0} to={1}
      20: iconst_2
      21: anewarray     #33                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_0
      27: getfield      #1                  // Field file:Ljava/io/File;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_1
      34: aastore
      35: invokevirtual #34                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      38: getstatic     #6                  // Field refList:Ljava/util/Queue;
      41: aload_0
      42: invokeinterface #26,  2           // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #11                 // Field raf:Ljava/io/RandomAccessFile;
      52: invokevirtual #27                 // Method java/io/RandomAccessFile.close:()V
      55: aload_0
      56: getfield      #1                  // Field file:Ljava/io/File;
      59: invokevirtual #35                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      62: aload_1
      63: invokevirtual #35                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      66: iconst_1
      67: anewarray     #36                 // class java/nio/file/CopyOption
      70: dup
      71: iconst_0
      72: getstatic     #37                 // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      75: aastore
      76: invokestatic  #38                 // Method java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      79: astore_2
      80: aload_1
      81: invokevirtual #35                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      84: aload_2
      85: invokeinterface #39,  2           // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z
      90: istore_3
      91: iload_3
      92: ifne          152
      95: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
      98: getstatic     #29                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
     101: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     104: ifeq          152
     107: new           #13                 // class org/jvnet/mimepull/MIMEParsingException
     110: dup
     111: new           #40                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #42                 // String File
     120: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_0
     124: getfield      #1                  // Field file:Ljava/io/File;
     127: invokevirtual #31                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     130: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #44                 // String  was not moved to
     135: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_1
     139: invokevirtual #31                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     142: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokespecial #46                 // Method org/jvnet/mimepull/MIMEParsingException."<init>":(Ljava/lang/String;)V
     151: athrow
     152: aload_0
     153: aload_2
     154: invokeinterface #47,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
     159: putfield      #1                  // Field file:Ljava/io/File;
     162: goto          175
     165: astore_2
     166: new           #13                 // class org/jvnet/mimepull/MIMEParsingException
     169: dup
     170: aload_2
     171: invokespecial #14                 // Method org/jvnet/mimepull/MIMEParsingException."<init>":(Ljava/lang/Throwable;)V
     174: athrow
     175: return
    Exception table:
       from    to  target type
          48   162   165   Class java/io/IOException

  static void drainRefQueueBounded();
    Code:
       0: getstatic     #2                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
       3: invokevirtual #48                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       6: checkcast     #49                 // class org/jvnet/mimepull/WeakDataFile
       9: dup
      10: astore_0
      11: ifnull        48
      14: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
      17: getstatic     #21                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      20: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      23: ifeq          41
      26: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
      29: getstatic     #21                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      32: ldc           #50                 // String Cleaning file = {0} from reference queue.
      34: aload_0
      35: getfield      #1                  // Field file:Ljava/io/File;
      38: invokevirtual #25                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      41: aload_0
      42: invokevirtual #51                 // Method close:()V
      45: goto          0
      48: return

  static java.util.logging.Logger access$100();
    Code:
       0: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
       3: areturn

  static int access$200();
    Code:
       0: getstatic     #3                  // Field TIMEOUT:I
       3: ireturn

  static java.lang.ref.ReferenceQueue access$300();
    Code:
       0: getstatic     #2                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
       3: areturn

  static java.io.File access$400(org.jvnet.mimepull.WeakDataFile);
    Code:
       0: aload_0
       1: getfield      #1                  // Field file:Ljava/io/File;
       4: areturn

  static {};
    Code:
       0: ldc           #49                 // class org/jvnet/mimepull/WeakDataFile
       2: invokevirtual #52                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #53                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
      11: bipush        10
      13: putstatic     #3                  // Field TIMEOUT:I
      16: new           #54                 // class java/lang/ref/ReferenceQueue
      19: dup
      20: invokespecial #55                 // Method java/lang/ref/ReferenceQueue."<init>":()V
      23: putstatic     #2                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      26: new           #56                 // class java/util/concurrent/ConcurrentLinkedQueue
      29: dup
      30: invokespecial #57                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      33: putstatic     #6                  // Field refList:Ljava/util/Queue;
      36: iconst_0
      37: putstatic     #15                 // Field hasCleanUpExecutor:Z
      40: bipush        10
      42: istore_0
      43: ldc           #58                 // String org.jvnet.mimepull.delay
      45: bipush        10
      47: invokestatic  #59                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      50: invokevirtual #60                 // Method java/lang/Integer.intValue:()I
      53: istore_0
      54: goto          90
      57: astore_1
      58: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
      61: getstatic     #62                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
      64: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      67: ifeq          90
      70: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
      73: getstatic     #62                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
      76: ldc           #63                 // String Cannot read \'\'{0}\'\' property, using defaults.
      78: iconst_1
      79: anewarray     #33                 // class java/lang/Object
      82: dup
      83: iconst_0
      84: ldc           #58                 // String org.jvnet.mimepull.delay
      86: aastore
      87: invokevirtual #34                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      90: invokestatic  #64                 // Method org/jvnet/mimepull/CleanUpExecutorFactory.newInstance:()Lorg/jvnet/mimepull/CleanUpExecutorFactory;
      93: astore_1
      94: aload_1
      95: ifnull        159
      98: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
     101: getstatic     #21                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     104: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     107: ifeq          128
     110: getstatic     #4                  // Field LOGGER:Ljava/util/logging/Logger;
     113: getstatic     #21                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     116: ldc           #65                 // String Initializing clean up executor for MIMEPULL: {0}
     118: aload_1
     119: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     122: invokevirtual #52                 // Method java/lang/Class.getName:()Ljava/lang/String;
     125: invokevirtual #25                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     128: aload_1
     129: invokevirtual #67                 // Method org/jvnet/mimepull/CleanUpExecutorFactory.getScheduledExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
     132: astore_2
     133: aload_2
     134: new           #68                 // class org/jvnet/mimepull/WeakDataFile$CleanupRunnable
     137: dup
     138: aconst_null
     139: invokespecial #69                 // Method org/jvnet/mimepull/WeakDataFile$CleanupRunnable."<init>":(Lorg/jvnet/mimepull/WeakDataFile$1;)V
     142: iload_0
     143: i2l
     144: iload_0
     145: i2l
     146: getstatic     #70                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     149: invokeinterface #71,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     154: pop
     155: iconst_1
     156: putstatic     #15                 // Field hasCleanUpExecutor:Z
     159: return
    Exception table:
       from    to  target type
          43    54    57   Class java/lang/SecurityException
}
