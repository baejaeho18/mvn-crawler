Compiled from "WeakDataFile.java"
class org.jvnet.mimepull.WeakDataFile$CleanupRunnable implements java.lang.Runnable {
  private org.jvnet.mimepull.WeakDataFile$CleanupRunnable();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public void run();
    Code:
       0: invokestatic  #3                  // Method org/jvnet/mimepull/WeakDataFile.access$100:()Ljava/util/logging/Logger;
       3: getstatic     #4                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       6: invokevirtual #5                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          23
      12: invokestatic  #3                  // Method org/jvnet/mimepull/WeakDataFile.access$100:()Ljava/util/logging/Logger;
      15: getstatic     #4                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      18: ldc           #6                  // String Running cleanup task
      20: invokevirtual #7                  // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      23: invokestatic  #8                  // Method org/jvnet/mimepull/WeakDataFile.access$300:()Ljava/lang/ref/ReferenceQueue;
      26: invokestatic  #9                  // Method org/jvnet/mimepull/WeakDataFile.access$200:()I
      29: i2l
      30: invokevirtual #10                 // Method java/lang/ref/ReferenceQueue.remove:(J)Ljava/lang/ref/Reference;
      33: checkcast     #11                 // class org/jvnet/mimepull/WeakDataFile
      36: astore_1
      37: aload_1
      38: ifnull        89
      41: invokestatic  #3                  // Method org/jvnet/mimepull/WeakDataFile.access$100:()Ljava/util/logging/Logger;
      44: getstatic     #4                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      47: invokevirtual #5                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      50: ifeq          68
      53: invokestatic  #3                  // Method org/jvnet/mimepull/WeakDataFile.access$100:()Ljava/util/logging/Logger;
      56: getstatic     #4                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      59: ldc           #12                 // String Cleaning file = {0} from reference queue.
      61: aload_1
      62: invokestatic  #13                 // Method org/jvnet/mimepull/WeakDataFile.access$400:(Lorg/jvnet/mimepull/WeakDataFile;)Ljava/io/File;
      65: invokevirtual #14                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      68: aload_1
      69: invokevirtual #15                 // Method org/jvnet/mimepull/WeakDataFile.close:()V
      72: invokestatic  #8                  // Method org/jvnet/mimepull/WeakDataFile.access$300:()Ljava/lang/ref/ReferenceQueue;
      75: invokestatic  #9                  // Method org/jvnet/mimepull/WeakDataFile.access$200:()I
      78: i2l
      79: invokevirtual #10                 // Method java/lang/ref/ReferenceQueue.remove:(J)Ljava/lang/ref/Reference;
      82: checkcast     #11                 // class org/jvnet/mimepull/WeakDataFile
      85: astore_1
      86: goto          37
      89: goto          93
      92: astore_1
      93: return
    Exception table:
       from    to  target type
           0    89    92   Class java/lang/InterruptedException

  org.jvnet.mimepull.WeakDataFile$CleanupRunnable(org.jvnet.mimepull.WeakDataFile$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
