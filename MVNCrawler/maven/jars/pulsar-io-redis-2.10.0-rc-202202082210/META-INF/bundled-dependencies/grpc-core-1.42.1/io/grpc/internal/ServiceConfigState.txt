Compiled from "ServiceConfigState.java"
final class io.grpc.internal.ServiceConfigState {
  private final io.grpc.NameResolver$ConfigOrError defaultServiceConfig;

  private final boolean lookUpServiceConfig;

  private io.grpc.NameResolver$ConfigOrError currentServiceConfigOrError;

  private boolean updated;

  static final boolean $assertionsDisabled;

  io.grpc.internal.ServiceConfigState(io.grpc.internal.ManagedChannelServiceConfig, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: aload_0
       9: aconst_null
      10: putfield      #2                  // Field defaultServiceConfig:Lio/grpc/NameResolver$ConfigOrError;
      13: goto          24
      16: aload_0
      17: aload_1
      18: invokestatic  #3                  // Method io/grpc/NameResolver$ConfigOrError.fromConfig:(Ljava/lang/Object;)Lio/grpc/NameResolver$ConfigOrError;
      21: putfield      #2                  // Field defaultServiceConfig:Lio/grpc/NameResolver$ConfigOrError;
      24: aload_0
      25: iload_2
      26: putfield      #4                  // Field lookUpServiceConfig:Z
      29: iload_2
      30: ifne          41
      33: aload_0
      34: aload_0
      35: getfield      #2                  // Field defaultServiceConfig:Lio/grpc/NameResolver$ConfigOrError;
      38: putfield      #5                  // Field currentServiceConfigOrError:Lio/grpc/NameResolver$ConfigOrError;
      41: return

  boolean shouldWaitOnServiceConfig();
    Code:
       0: aload_0
       1: getfield      #6                  // Field updated:Z
       4: ifne          18
       7: aload_0
       8: invokevirtual #7                  // Method expectUpdates:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  io.grpc.NameResolver$ConfigOrError getCurrent();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method shouldWaitOnServiceConfig:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #9                  // String still waiting on service config
      14: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: getfield      #5                  // Field currentServiceConfigOrError:Lio/grpc/NameResolver$ConfigOrError;
      21: areturn

  void update(io.grpc.NameResolver$ConfigOrError);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method expectUpdates:()Z
       4: ldc           #11                 // String unexpected service config update
       6: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
       9: aload_0
      10: getfield      #6                  // Field updated:Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: istore_2
      22: aload_0
      23: iconst_1
      24: putfield      #6                  // Field updated:Z
      27: iload_2
      28: ifeq          108
      31: aload_1
      32: ifnonnull     46
      35: aload_0
      36: aload_0
      37: getfield      #2                  // Field defaultServiceConfig:Lio/grpc/NameResolver$ConfigOrError;
      40: putfield      #5                  // Field currentServiceConfigOrError:Lio/grpc/NameResolver$ConfigOrError;
      43: goto          196
      46: aload_1
      47: invokevirtual #12                 // Method io/grpc/NameResolver$ConfigOrError.getError:()Lio/grpc/Status;
      50: ifnull        79
      53: aload_0
      54: getfield      #2                  // Field defaultServiceConfig:Lio/grpc/NameResolver$ConfigOrError;
      57: ifnull        71
      60: aload_0
      61: aload_0
      62: getfield      #2                  // Field defaultServiceConfig:Lio/grpc/NameResolver$ConfigOrError;
      65: putfield      #5                  // Field currentServiceConfigOrError:Lio/grpc/NameResolver$ConfigOrError;
      68: goto          196
      71: aload_0
      72: aload_1
      73: putfield      #5                  // Field currentServiceConfigOrError:Lio/grpc/NameResolver$ConfigOrError;
      76: goto          196
      79: getstatic     #13                 // Field $assertionsDisabled:Z
      82: ifne          100
      85: aload_1
      86: invokevirtual #14                 // Method io/grpc/NameResolver$ConfigOrError.getConfig:()Ljava/lang/Object;
      89: ifnonnull     100
      92: new           #15                 // class java/lang/AssertionError
      95: dup
      96: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      99: athrow
     100: aload_0
     101: aload_1
     102: putfield      #5                  // Field currentServiceConfigOrError:Lio/grpc/NameResolver$ConfigOrError;
     105: goto          196
     108: aload_1
     109: ifnonnull     138
     112: aload_0
     113: getfield      #2                  // Field defaultServiceConfig:Lio/grpc/NameResolver$ConfigOrError;
     116: ifnull        130
     119: aload_0
     120: aload_0
     121: getfield      #2                  // Field defaultServiceConfig:Lio/grpc/NameResolver$ConfigOrError;
     124: putfield      #5                  // Field currentServiceConfigOrError:Lio/grpc/NameResolver$ConfigOrError;
     127: goto          196
     130: aload_0
     131: aconst_null
     132: putfield      #5                  // Field currentServiceConfigOrError:Lio/grpc/NameResolver$ConfigOrError;
     135: goto          196
     138: aload_1
     139: invokevirtual #12                 // Method io/grpc/NameResolver$ConfigOrError.getError:()Lio/grpc/Status;
     142: ifnull        170
     145: aload_0
     146: getfield      #5                  // Field currentServiceConfigOrError:Lio/grpc/NameResolver$ConfigOrError;
     149: ifnull        196
     152: aload_0
     153: getfield      #5                  // Field currentServiceConfigOrError:Lio/grpc/NameResolver$ConfigOrError;
     156: invokevirtual #12                 // Method io/grpc/NameResolver$ConfigOrError.getError:()Lio/grpc/Status;
     159: ifnull        196
     162: aload_0
     163: aload_1
     164: putfield      #5                  // Field currentServiceConfigOrError:Lio/grpc/NameResolver$ConfigOrError;
     167: goto          196
     170: getstatic     #13                 // Field $assertionsDisabled:Z
     173: ifne          191
     176: aload_1
     177: invokevirtual #14                 // Method io/grpc/NameResolver$ConfigOrError.getConfig:()Ljava/lang/Object;
     180: ifnonnull     191
     183: new           #15                 // class java/lang/AssertionError
     186: dup
     187: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
     190: athrow
     191: aload_0
     192: aload_1
     193: putfield      #5                  // Field currentServiceConfigOrError:Lio/grpc/NameResolver$ConfigOrError;
     196: return

  boolean expectUpdates();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lookUpServiceConfig:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #17                 // class io/grpc/internal/ServiceConfigState
       2: invokevirtual #18                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #13                 // Field $assertionsDisabled:Z
      16: return
}
