Compiled from "JndiResourceResolverFactory.java"
final class io.grpc.internal.JndiResourceResolverFactory$JndiRecordFetcher implements io.grpc.internal.JndiResourceResolverFactory$RecordFetcher {
  static final boolean $assertionsDisabled;

  io.grpc.internal.JndiResourceResolverFactory$JndiRecordFetcher();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.util.List<java.lang.String> getAllRecords(java.lang.String, java.lang.String) throws javax.naming.NamingException;
    Code:
       0: invokestatic  #2                  // Method checkAvailable:()V
       3: iconst_1
       4: anewarray     #3                  // class java/lang/String
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: astore_3
      12: new           #4                  // class java/util/ArrayList
      15: dup
      16: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      19: astore        4
      21: new           #6                  // class java/util/Hashtable
      24: dup
      25: invokespecial #7                  // Method java/util/Hashtable."<init>":()V
      28: astore        5
      30: aload         5
      32: ldc           #8                  // String com.sun.jndi.ldap.connect.timeout
      34: ldc           #9                  // String 5000
      36: invokevirtual #10                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload         5
      42: ldc           #11                 // String com.sun.jndi.ldap.read.timeout
      44: ldc           #9                  // String 5000
      46: invokevirtual #10                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: new           #12                 // class javax/naming/directory/InitialDirContext
      53: dup
      54: aload         5
      56: invokespecial #13                 // Method javax/naming/directory/InitialDirContext."<init>":(Ljava/util/Hashtable;)V
      59: astore        6
      61: aload         6
      63: aload_2
      64: aload_3
      65: invokeinterface #14,  3           // InterfaceMethod javax/naming/directory/DirContext.getAttributes:(Ljava/lang/String;[Ljava/lang/String;)Ljavax/naming/directory/Attributes;
      70: astore        7
      72: aload         7
      74: invokeinterface #15,  1           // InterfaceMethod javax/naming/directory/Attributes.getAll:()Ljavax/naming/NamingEnumeration;
      79: astore        8
      81: aload         8
      83: invokeinterface #16,  1           // InterfaceMethod javax/naming/NamingEnumeration.hasMore:()Z
      88: ifeq          198
      91: aload         8
      93: invokeinterface #17,  1           // InterfaceMethod javax/naming/NamingEnumeration.next:()Ljava/lang/Object;
      98: checkcast     #18                 // class javax/naming/directory/Attribute
     101: astore        9
     103: getstatic     #19                 // Field $assertionsDisabled:Z
     106: ifne          136
     109: aload_3
     110: invokestatic  #20                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     113: aload         9
     115: invokeinterface #21,  1           // InterfaceMethod javax/naming/directory/Attribute.getID:()Ljava/lang/String;
     120: invokeinterface #22,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     125: ifne          136
     128: new           #23                 // class java/lang/AssertionError
     131: dup
     132: invokespecial #24                 // Method java/lang/AssertionError."<init>":()V
     135: athrow
     136: aload         9
     138: invokeinterface #25,  1           // InterfaceMethod javax/naming/directory/Attribute.getAll:()Ljavax/naming/NamingEnumeration;
     143: astore        10
     145: aload         10
     147: invokeinterface #16,  1           // InterfaceMethod javax/naming/NamingEnumeration.hasMore:()Z
     152: ifeq          176
     155: aload         4
     157: aload         10
     159: invokeinterface #17,  1           // InterfaceMethod javax/naming/NamingEnumeration.next:()Ljava/lang/Object;
     164: invokestatic  #26                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     167: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     172: pop
     173: goto          145
     176: goto          188
     179: astore        11
     181: aload         10
     183: aload         11
     185: invokestatic  #29                 // Method closeThenThrow:(Ljavax/naming/NamingEnumeration;Ljavax/naming/NamingException;)V
     188: aload         10
     190: invokeinterface #30,  1           // InterfaceMethod javax/naming/NamingEnumeration.close:()V
     195: goto          81
     198: goto          210
     201: astore        9
     203: aload         8
     205: aload         9
     207: invokestatic  #29                 // Method closeThenThrow:(Ljavax/naming/NamingEnumeration;Ljavax/naming/NamingException;)V
     210: aload         8
     212: invokeinterface #30,  1           // InterfaceMethod javax/naming/NamingEnumeration.close:()V
     217: goto          229
     220: astore        7
     222: aload         6
     224: aload         7
     226: invokestatic  #31                 // Method closeThenThrow:(Ljavax/naming/directory/DirContext;Ljavax/naming/NamingException;)V
     229: aload         6
     231: invokeinterface #32,  1           // InterfaceMethod javax/naming/directory/DirContext.close:()V
     236: aload         4
     238: areturn
    Exception table:
       from    to  target type
         145   176   179   Class javax/naming/NamingException
          81   198   201   Class javax/naming/NamingException
          61   217   220   Class javax/naming/NamingException

  private static void closeThenThrow(javax.naming.NamingEnumeration<?>, javax.naming.NamingException) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: invokeinterface #30,  1           // InterfaceMethod javax/naming/NamingEnumeration.close:()V
       6: goto          10
       9: astore_2
      10: aload_1
      11: athrow
    Exception table:
       from    to  target type
           0     6     9   Class javax/naming/NamingException

  private static void closeThenThrow(javax.naming.directory.DirContext, javax.naming.NamingException) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod javax/naming/directory/DirContext.close:()V
       6: goto          10
       9: astore_2
      10: aload_1
      11: athrow
    Exception table:
       from    to  target type
           0     6     9   Class javax/naming/NamingException

  private static void checkAvailable();
    Code:
       0: invokestatic  #33                 // Method io/grpc/internal/JndiResourceResolverFactory.access$000:()Ljava/lang/Throwable;
       3: ifnull        19
       6: new           #34                 // class java/lang/UnsupportedOperationException
       9: dup
      10: ldc           #35                 // String JNDI is not currently available
      12: invokestatic  #33                 // Method io/grpc/internal/JndiResourceResolverFactory.access$000:()Ljava/lang/Throwable;
      15: invokespecial #36                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      18: athrow
      19: return

  static {};
    Code:
       0: ldc           #37                 // class io/grpc/internal/JndiResourceResolverFactory
       2: invokevirtual #38                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #19                 // Field $assertionsDisabled:Z
      16: return
}
