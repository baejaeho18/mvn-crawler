Compiled from "RoundRobinLoadBalancer.java"
final class io.grpc.util.RoundRobinLoadBalancer$ReadyPicker extends io.grpc.util.RoundRobinLoadBalancer$RoundRobinPicker {
  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.grpc.util.RoundRobinLoadBalancer$ReadyPicker> indexUpdater;

  private final java.util.List<io.grpc.LoadBalancer$Subchannel> list;

  private volatile int index;

  io.grpc.util.RoundRobinLoadBalancer$ReadyPicker(java.util.List<io.grpc.LoadBalancer$Subchannel>, int);
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method io/grpc/util/RoundRobinLoadBalancer$RoundRobinPicker."<init>":(Lio/grpc/util/RoundRobinLoadBalancer$1;)V
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #3                  // String empty list
      21: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      24: aload_0
      25: aload_1
      26: putfield      #5                  // Field list:Ljava/util/List;
      29: aload_0
      30: iload_2
      31: iconst_1
      32: isub
      33: putfield      #6                  // Field index:I
      36: return

  public io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method nextSubchannel:()Lio/grpc/LoadBalancer$Subchannel;
       4: invokestatic  #8                  // Method io/grpc/LoadBalancer$PickResult.withSubchannel:(Lio/grpc/LoadBalancer$Subchannel;)Lio/grpc/LoadBalancer$PickResult;
       7: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #9                  // class io/grpc/util/RoundRobinLoadBalancer$ReadyPicker
       2: invokestatic  #10                 // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Class;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       5: ldc           #11                 // String list
       7: aload_0
       8: getfield      #5                  // Field list:Ljava/util/List;
      11: invokevirtual #12                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      14: invokevirtual #13                 // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      17: areturn

  private io.grpc.LoadBalancer$Subchannel nextSubchannel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field list:Ljava/util/List;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
       9: istore_1
      10: getstatic     #15                 // Field indexUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      13: aload_0
      14: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
      17: istore_2
      18: iload_2
      19: iload_1
      20: if_icmplt     39
      23: iload_2
      24: istore_3
      25: iload_2
      26: iload_1
      27: irem
      28: istore_2
      29: getstatic     #15                 // Field indexUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      32: aload_0
      33: iload_3
      34: iload_2
      35: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      38: pop
      39: aload_0
      40: getfield      #5                  // Field list:Ljava/util/List;
      43: iload_2
      44: invokeinterface #18,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: checkcast     #19                 // class io/grpc/LoadBalancer$Subchannel
      52: areturn

  java.util.List<io.grpc.LoadBalancer$Subchannel> getList();
    Code:
       0: aload_0
       1: getfield      #5                  // Field list:Ljava/util/List;
       4: areturn

  boolean isEquivalentTo(io.grpc.util.RoundRobinLoadBalancer$RoundRobinPicker);
    Code:
       0: aload_1
       1: instanceof    #9                  // class io/grpc/util/RoundRobinLoadBalancer$ReadyPicker
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #9                  // class io/grpc/util/RoundRobinLoadBalancer$ReadyPicker
      13: astore_2
      14: aload_2
      15: aload_0
      16: if_acmpeq     61
      19: aload_0
      20: getfield      #5                  // Field list:Ljava/util/List;
      23: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
      28: aload_2
      29: getfield      #5                  // Field list:Ljava/util/List;
      32: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
      37: if_icmpne     65
      40: new           #20                 // class java/util/HashSet
      43: dup
      44: aload_0
      45: getfield      #5                  // Field list:Ljava/util/List;
      48: invokespecial #21                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      51: aload_2
      52: getfield      #5                  // Field list:Ljava/util/List;
      55: invokevirtual #22                 // Method java/util/HashSet.containsAll:(Ljava/util/Collection;)Z
      58: ifeq          65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: ireturn

  static {};
    Code:
       0: ldc           #9                  // class io/grpc/util/RoundRobinLoadBalancer$ReadyPicker
       2: ldc           #23                 // String index
       4: invokestatic  #24                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #15                 // Field indexUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
