Compiled from "RoundRobinLoadBalancer.java"
final class io.grpc.util.RoundRobinLoadBalancer extends io.grpc.LoadBalancer {
  static final io.grpc.Attributes$Key<io.grpc.util.RoundRobinLoadBalancer$Ref<io.grpc.ConnectivityStateInfo>> STATE_INFO;

  private final io.grpc.LoadBalancer$Helper helper;

  private final java.util.Map<io.grpc.EquivalentAddressGroup, io.grpc.LoadBalancer$Subchannel> subchannels;

  private final java.util.Random random;

  private io.grpc.ConnectivityState currentState;

  private io.grpc.util.RoundRobinLoadBalancer$RoundRobinPicker currentPicker;

  private static final io.grpc.Status EMPTY_OK;

  io.grpc.util.RoundRobinLoadBalancer(io.grpc.LoadBalancer$Helper);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/grpc/LoadBalancer."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field subchannels:Ljava/util/Map;
      15: aload_0
      16: new           #6                  // class io/grpc/util/RoundRobinLoadBalancer$EmptyPicker
      19: dup
      20: getstatic     #7                  // Field EMPTY_OK:Lio/grpc/Status;
      23: invokespecial #8                  // Method io/grpc/util/RoundRobinLoadBalancer$EmptyPicker."<init>":(Lio/grpc/Status;)V
      26: putfield      #9                  // Field currentPicker:Lio/grpc/util/RoundRobinLoadBalancer$RoundRobinPicker;
      29: aload_0
      30: aload_1
      31: ldc           #10                 // String helper
      33: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #12                 // class io/grpc/LoadBalancer$Helper
      39: putfield      #13                 // Field helper:Lio/grpc/LoadBalancer$Helper;
      42: aload_0
      43: new           #14                 // class java/util/Random
      46: dup
      47: invokespecial #15                 // Method java/util/Random."<init>":()V
      50: putfield      #16                 // Field random:Ljava/util/Random;
      53: return

  public void handleResolvedAddresses(io.grpc.LoadBalancer$ResolvedAddresses);
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method io/grpc/LoadBalancer$ResolvedAddresses.getAddresses:()Ljava/util/List;
       4: astore_2
       5: aload_0
       6: getfield      #5                  // Field subchannels:Ljava/util/Map;
       9: invokeinterface #18,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      14: astore_3
      15: aload_2
      16: invokestatic  #19                 // Method stripAttrs:(Ljava/util/List;)Ljava/util/Map;
      19: astore        4
      21: aload_3
      22: aload         4
      24: invokeinterface #18,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      29: invokestatic  #20                 // Method setsDifference:(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;
      32: astore        5
      34: aload         4
      36: invokeinterface #21,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      41: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      46: astore        6
      48: aload         6
      50: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          225
      58: aload         6
      60: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #25                 // class java/util/Map$Entry
      68: astore        7
      70: aload         7
      72: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      77: checkcast     #27                 // class io/grpc/EquivalentAddressGroup
      80: astore        8
      82: aload         7
      84: invokeinterface #28,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      89: checkcast     #27                 // class io/grpc/EquivalentAddressGroup
      92: astore        9
      94: aload_0
      95: getfield      #5                  // Field subchannels:Ljava/util/Map;
      98: aload         8
     100: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     105: checkcast     #30                 // class io/grpc/LoadBalancer$Subchannel
     108: astore        10
     110: aload         10
     112: ifnull        128
     115: aload         10
     117: aload         9
     119: invokestatic  #31                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     122: invokevirtual #32                 // Method io/grpc/LoadBalancer$Subchannel.updateAddresses:(Ljava/util/List;)V
     125: goto          48
     128: invokestatic  #33                 // Method io/grpc/Attributes.newBuilder:()Lio/grpc/Attributes$Builder;
     131: getstatic     #34                 // Field STATE_INFO:Lio/grpc/Attributes$Key;
     134: new           #35                 // class io/grpc/util/RoundRobinLoadBalancer$Ref
     137: dup
     138: getstatic     #36                 // Field io/grpc/ConnectivityState.IDLE:Lio/grpc/ConnectivityState;
     141: invokestatic  #37                 // Method io/grpc/ConnectivityStateInfo.forNonError:(Lio/grpc/ConnectivityState;)Lio/grpc/ConnectivityStateInfo;
     144: invokespecial #38                 // Method io/grpc/util/RoundRobinLoadBalancer$Ref."<init>":(Ljava/lang/Object;)V
     147: invokevirtual #39                 // Method io/grpc/Attributes$Builder.set:(Lio/grpc/Attributes$Key;Ljava/lang/Object;)Lio/grpc/Attributes$Builder;
     150: astore        11
     152: aload_0
     153: getfield      #13                 // Field helper:Lio/grpc/LoadBalancer$Helper;
     156: invokestatic  #40                 // Method io/grpc/LoadBalancer$CreateSubchannelArgs.newBuilder:()Lio/grpc/LoadBalancer$CreateSubchannelArgs$Builder;
     159: aload         9
     161: invokevirtual #41                 // Method io/grpc/LoadBalancer$CreateSubchannelArgs$Builder.setAddresses:(Lio/grpc/EquivalentAddressGroup;)Lio/grpc/LoadBalancer$CreateSubchannelArgs$Builder;
     164: aload         11
     166: invokevirtual #42                 // Method io/grpc/Attributes$Builder.build:()Lio/grpc/Attributes;
     169: invokevirtual #43                 // Method io/grpc/LoadBalancer$CreateSubchannelArgs$Builder.setAttributes:(Lio/grpc/Attributes;)Lio/grpc/LoadBalancer$CreateSubchannelArgs$Builder;
     172: invokevirtual #44                 // Method io/grpc/LoadBalancer$CreateSubchannelArgs$Builder.build:()Lio/grpc/LoadBalancer$CreateSubchannelArgs;
     175: invokevirtual #45                 // Method io/grpc/LoadBalancer$Helper.createSubchannel:(Lio/grpc/LoadBalancer$CreateSubchannelArgs;)Lio/grpc/LoadBalancer$Subchannel;
     178: ldc           #46                 // String subchannel
     180: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     183: checkcast     #30                 // class io/grpc/LoadBalancer$Subchannel
     186: astore        12
     188: aload         12
     190: new           #47                 // class io/grpc/util/RoundRobinLoadBalancer$1
     193: dup
     194: aload_0
     195: aload         12
     197: invokespecial #48                 // Method io/grpc/util/RoundRobinLoadBalancer$1."<init>":(Lio/grpc/util/RoundRobinLoadBalancer;Lio/grpc/LoadBalancer$Subchannel;)V
     200: invokevirtual #49                 // Method io/grpc/LoadBalancer$Subchannel.start:(Lio/grpc/LoadBalancer$SubchannelStateListener;)V
     203: aload_0
     204: getfield      #5                  // Field subchannels:Ljava/util/Map;
     207: aload         8
     209: aload         12
     211: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     216: pop
     217: aload         12
     219: invokevirtual #51                 // Method io/grpc/LoadBalancer$Subchannel.requestConnection:()V
     222: goto          48
     225: new           #52                 // class java/util/ArrayList
     228: dup
     229: invokespecial #53                 // Method java/util/ArrayList."<init>":()V
     232: astore        6
     234: aload         5
     236: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     241: astore        7
     243: aload         7
     245: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     250: ifeq          285
     253: aload         7
     255: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     260: checkcast     #27                 // class io/grpc/EquivalentAddressGroup
     263: astore        8
     265: aload         6
     267: aload_0
     268: getfield      #5                  // Field subchannels:Ljava/util/Map;
     271: aload         8
     273: invokeinterface #54,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     278: invokevirtual #55                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     281: pop
     282: goto          243
     285: aload_0
     286: invokespecial #56                 // Method updateBalancingState:()V
     289: aload         6
     291: invokevirtual #57                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     294: astore        7
     296: aload         7
     298: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     303: ifeq          327
     306: aload         7
     308: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     313: checkcast     #30                 // class io/grpc/LoadBalancer$Subchannel
     316: astore        8
     318: aload_0
     319: aload         8
     321: invokespecial #58                 // Method shutdownSubchannel:(Lio/grpc/LoadBalancer$Subchannel;)V
     324: goto          296
     327: return

  public void handleNameResolutionError(io.grpc.Status);
    Code:
       0: aload_0
       1: getfield      #59                 // Field currentState:Lio/grpc/ConnectivityState;
       4: getstatic     #60                 // Field io/grpc/ConnectivityState.READY:Lio/grpc/ConnectivityState;
       7: if_acmpeq     25
      10: aload_0
      11: getstatic     #61                 // Field io/grpc/ConnectivityState.TRANSIENT_FAILURE:Lio/grpc/ConnectivityState;
      14: new           #6                  // class io/grpc/util/RoundRobinLoadBalancer$EmptyPicker
      17: dup
      18: aload_1
      19: invokespecial #8                  // Method io/grpc/util/RoundRobinLoadBalancer$EmptyPicker."<init>":(Lio/grpc/Status;)V
      22: invokespecial #62                 // Method updateBalancingState:(Lio/grpc/ConnectivityState;Lio/grpc/util/RoundRobinLoadBalancer$RoundRobinPicker;)V
      25: return

  private void processSubchannelState(io.grpc.LoadBalancer$Subchannel, io.grpc.ConnectivityStateInfo);
    Code:
       0: aload_0
       1: getfield      #5                  // Field subchannels:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #63                 // Method io/grpc/LoadBalancer$Subchannel.getAddresses:()Lio/grpc/EquivalentAddressGroup;
       8: invokestatic  #64                 // Method stripAttrs:(Lio/grpc/EquivalentAddressGroup;)Lio/grpc/EquivalentAddressGroup;
      11: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: aload_1
      17: if_acmpeq     21
      20: return
      21: aload_2
      22: invokevirtual #65                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      25: getstatic     #61                 // Field io/grpc/ConnectivityState.TRANSIENT_FAILURE:Lio/grpc/ConnectivityState;
      28: if_acmpeq     41
      31: aload_2
      32: invokevirtual #65                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      35: getstatic     #36                 // Field io/grpc/ConnectivityState.IDLE:Lio/grpc/ConnectivityState;
      38: if_acmpne     48
      41: aload_0
      42: getfield      #13                 // Field helper:Lio/grpc/LoadBalancer$Helper;
      45: invokevirtual #66                 // Method io/grpc/LoadBalancer$Helper.refreshNameResolution:()V
      48: aload_2
      49: invokevirtual #65                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      52: getstatic     #36                 // Field io/grpc/ConnectivityState.IDLE:Lio/grpc/ConnectivityState;
      55: if_acmpne     62
      58: aload_1
      59: invokevirtual #51                 // Method io/grpc/LoadBalancer$Subchannel.requestConnection:()V
      62: aload_1
      63: invokestatic  #67                 // Method getSubchannelStateInfoRef:(Lio/grpc/LoadBalancer$Subchannel;)Lio/grpc/util/RoundRobinLoadBalancer$Ref;
      66: astore_3
      67: aload_3
      68: getfield      #68                 // Field io/grpc/util/RoundRobinLoadBalancer$Ref.value:Ljava/lang/Object;
      71: checkcast     #69                 // class io/grpc/ConnectivityStateInfo
      74: invokevirtual #65                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      77: getstatic     #61                 // Field io/grpc/ConnectivityState.TRANSIENT_FAILURE:Lio/grpc/ConnectivityState;
      80: invokevirtual #70                 // Method io/grpc/ConnectivityState.equals:(Ljava/lang/Object;)Z
      83: ifeq          113
      86: aload_2
      87: invokevirtual #65                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      90: getstatic     #71                 // Field io/grpc/ConnectivityState.CONNECTING:Lio/grpc/ConnectivityState;
      93: invokevirtual #70                 // Method io/grpc/ConnectivityState.equals:(Ljava/lang/Object;)Z
      96: ifne          112
      99: aload_2
     100: invokevirtual #65                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
     103: getstatic     #36                 // Field io/grpc/ConnectivityState.IDLE:Lio/grpc/ConnectivityState;
     106: invokevirtual #70                 // Method io/grpc/ConnectivityState.equals:(Ljava/lang/Object;)Z
     109: ifeq          113
     112: return
     113: aload_3
     114: aload_2
     115: putfield      #68                 // Field io/grpc/util/RoundRobinLoadBalancer$Ref.value:Ljava/lang/Object;
     118: aload_0
     119: invokespecial #56                 // Method updateBalancingState:()V
     122: return

  private void shutdownSubchannel(io.grpc.LoadBalancer$Subchannel);
    Code:
       0: aload_1
       1: invokevirtual #72                 // Method io/grpc/LoadBalancer$Subchannel.shutdown:()V
       4: aload_1
       5: invokestatic  #67                 // Method getSubchannelStateInfoRef:(Lio/grpc/LoadBalancer$Subchannel;)Lio/grpc/util/RoundRobinLoadBalancer$Ref;
       8: getstatic     #73                 // Field io/grpc/ConnectivityState.SHUTDOWN:Lio/grpc/ConnectivityState;
      11: invokestatic  #37                 // Method io/grpc/ConnectivityStateInfo.forNonError:(Lio/grpc/ConnectivityState;)Lio/grpc/ConnectivityStateInfo;
      14: putfield      #68                 // Field io/grpc/util/RoundRobinLoadBalancer$Ref.value:Ljava/lang/Object;
      17: return

  public void shutdown();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method getSubchannels:()Ljava/util/Collection;
       4: invokeinterface #75,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          37
      19: aload_1
      20: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #30                 // class io/grpc/LoadBalancer$Subchannel
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokespecial #58                 // Method shutdownSubchannel:(Lio/grpc/LoadBalancer$Subchannel;)V
      34: goto          10
      37: aload_0
      38: getfield      #5                  // Field subchannels:Ljava/util/Map;
      41: invokeinterface #76,  1           // InterfaceMethod java/util/Map.clear:()V
      46: return

  private void updateBalancingState();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method getSubchannels:()Ljava/util/Collection;
       4: invokestatic  #77                 // Method filterNonFailingSubchannels:(Ljava/util/Collection;)Ljava/util/List;
       7: astore_1
       8: aload_1
       9: invokeinterface #78,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      14: ifeq          144
      17: iconst_0
      18: istore_2
      19: getstatic     #7                  // Field EMPTY_OK:Lio/grpc/Status;
      22: astore_3
      23: aload_0
      24: invokevirtual #74                 // Method getSubchannels:()Ljava/util/Collection;
      27: invokeinterface #75,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      32: astore        4
      34: aload         4
      36: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          116
      44: aload         4
      46: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #30                 // class io/grpc/LoadBalancer$Subchannel
      54: astore        5
      56: aload         5
      58: invokestatic  #67                 // Method getSubchannelStateInfoRef:(Lio/grpc/LoadBalancer$Subchannel;)Lio/grpc/util/RoundRobinLoadBalancer$Ref;
      61: getfield      #68                 // Field io/grpc/util/RoundRobinLoadBalancer$Ref.value:Ljava/lang/Object;
      64: checkcast     #69                 // class io/grpc/ConnectivityStateInfo
      67: astore        6
      69: aload         6
      71: invokevirtual #65                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      74: getstatic     #71                 // Field io/grpc/ConnectivityState.CONNECTING:Lio/grpc/ConnectivityState;
      77: if_acmpeq     91
      80: aload         6
      82: invokevirtual #65                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      85: getstatic     #36                 // Field io/grpc/ConnectivityState.IDLE:Lio/grpc/ConnectivityState;
      88: if_acmpne     93
      91: iconst_1
      92: istore_2
      93: aload_3
      94: getstatic     #7                  // Field EMPTY_OK:Lio/grpc/Status;
      97: if_acmpeq     107
     100: aload_3
     101: invokevirtual #79                 // Method io/grpc/Status.isOk:()Z
     104: ifne          113
     107: aload         6
     109: invokevirtual #80                 // Method io/grpc/ConnectivityStateInfo.getStatus:()Lio/grpc/Status;
     112: astore_3
     113: goto          34
     116: aload_0
     117: iload_2
     118: ifeq          127
     121: getstatic     #71                 // Field io/grpc/ConnectivityState.CONNECTING:Lio/grpc/ConnectivityState;
     124: goto          130
     127: getstatic     #61                 // Field io/grpc/ConnectivityState.TRANSIENT_FAILURE:Lio/grpc/ConnectivityState;
     130: new           #6                  // class io/grpc/util/RoundRobinLoadBalancer$EmptyPicker
     133: dup
     134: aload_3
     135: invokespecial #8                  // Method io/grpc/util/RoundRobinLoadBalancer$EmptyPicker."<init>":(Lio/grpc/Status;)V
     138: invokespecial #62                 // Method updateBalancingState:(Lio/grpc/ConnectivityState;Lio/grpc/util/RoundRobinLoadBalancer$RoundRobinPicker;)V
     141: goto          174
     144: aload_0
     145: getfield      #16                 // Field random:Ljava/util/Random;
     148: aload_1
     149: invokeinterface #81,  1           // InterfaceMethod java/util/List.size:()I
     154: invokevirtual #82                 // Method java/util/Random.nextInt:(I)I
     157: istore_2
     158: aload_0
     159: getstatic     #60                 // Field io/grpc/ConnectivityState.READY:Lio/grpc/ConnectivityState;
     162: new           #83                 // class io/grpc/util/RoundRobinLoadBalancer$ReadyPicker
     165: dup
     166: aload_1
     167: iload_2
     168: invokespecial #84                 // Method io/grpc/util/RoundRobinLoadBalancer$ReadyPicker."<init>":(Ljava/util/List;I)V
     171: invokespecial #62                 // Method updateBalancingState:(Lio/grpc/ConnectivityState;Lio/grpc/util/RoundRobinLoadBalancer$RoundRobinPicker;)V
     174: return

  private void updateBalancingState(io.grpc.ConnectivityState, io.grpc.util.RoundRobinLoadBalancer$RoundRobinPicker);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #59                 // Field currentState:Lio/grpc/ConnectivityState;
       5: if_acmpne     19
       8: aload_2
       9: aload_0
      10: getfield      #9                  // Field currentPicker:Lio/grpc/util/RoundRobinLoadBalancer$RoundRobinPicker;
      13: invokevirtual #85                 // Method io/grpc/util/RoundRobinLoadBalancer$RoundRobinPicker.isEquivalentTo:(Lio/grpc/util/RoundRobinLoadBalancer$RoundRobinPicker;)Z
      16: ifne          38
      19: aload_0
      20: getfield      #13                 // Field helper:Lio/grpc/LoadBalancer$Helper;
      23: aload_1
      24: aload_2
      25: invokevirtual #86                 // Method io/grpc/LoadBalancer$Helper.updateBalancingState:(Lio/grpc/ConnectivityState;Lio/grpc/LoadBalancer$SubchannelPicker;)V
      28: aload_0
      29: aload_1
      30: putfield      #59                 // Field currentState:Lio/grpc/ConnectivityState;
      33: aload_0
      34: aload_2
      35: putfield      #9                  // Field currentPicker:Lio/grpc/util/RoundRobinLoadBalancer$RoundRobinPicker;
      38: return

  private static java.util.List<io.grpc.LoadBalancer$Subchannel> filterNonFailingSubchannels(java.util.Collection<io.grpc.LoadBalancer$Subchannel>);
    Code:
       0: new           #52                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokeinterface #87,  1           // InterfaceMethod java/util/Collection.size:()I
      10: invokespecial #88                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_1
      14: aload_0
      15: invokeinterface #75,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          58
      30: aload_2
      31: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #30                 // class io/grpc/LoadBalancer$Subchannel
      39: astore_3
      40: aload_3
      41: invokestatic  #89                 // Method isReady:(Lio/grpc/LoadBalancer$Subchannel;)Z
      44: ifeq          55
      47: aload_1
      48: aload_3
      49: invokeinterface #90,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: goto          21
      58: aload_1
      59: areturn

  private static java.util.Map<io.grpc.EquivalentAddressGroup, io.grpc.EquivalentAddressGroup> stripAttrs(java.util.List<io.grpc.EquivalentAddressGroup>);
    Code:
       0: new           #3                  // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokeinterface #81,  1           // InterfaceMethod java/util/List.size:()I
      10: iconst_2
      11: imul
      12: invokespecial #91                 // Method java/util/HashMap."<init>":(I)V
      15: astore_1
      16: aload_0
      17: invokeinterface #92,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          57
      32: aload_2
      33: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #27                 // class io/grpc/EquivalentAddressGroup
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokestatic  #64                 // Method stripAttrs:(Lio/grpc/EquivalentAddressGroup;)Lio/grpc/EquivalentAddressGroup;
      47: aload_3
      48: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: goto          23
      57: aload_1
      58: areturn

  private static io.grpc.EquivalentAddressGroup stripAttrs(io.grpc.EquivalentAddressGroup);
    Code:
       0: new           #27                 // class io/grpc/EquivalentAddressGroup
       3: dup
       4: aload_0
       5: invokevirtual #93                 // Method io/grpc/EquivalentAddressGroup.getAddresses:()Ljava/util/List;
       8: invokespecial #94                 // Method io/grpc/EquivalentAddressGroup."<init>":(Ljava/util/List;)V
      11: areturn

  java.util.Collection<io.grpc.LoadBalancer$Subchannel> getSubchannels();
    Code:
       0: aload_0
       1: getfield      #5                  // Field subchannels:Ljava/util/Map;
       4: invokeinterface #95,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  private static io.grpc.util.RoundRobinLoadBalancer$Ref<io.grpc.ConnectivityStateInfo> getSubchannelStateInfoRef(io.grpc.LoadBalancer$Subchannel);
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method io/grpc/LoadBalancer$Subchannel.getAttributes:()Lio/grpc/Attributes;
       4: getstatic     #34                 // Field STATE_INFO:Lio/grpc/Attributes$Key;
       7: invokevirtual #97                 // Method io/grpc/Attributes.get:(Lio/grpc/Attributes$Key;)Ljava/lang/Object;
      10: ldc           #98                 // String STATE_INFO
      12: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #35                 // class io/grpc/util/RoundRobinLoadBalancer$Ref
      18: areturn

  static boolean isReady(io.grpc.LoadBalancer$Subchannel);
    Code:
       0: aload_0
       1: invokestatic  #67                 // Method getSubchannelStateInfoRef:(Lio/grpc/LoadBalancer$Subchannel;)Lio/grpc/util/RoundRobinLoadBalancer$Ref;
       4: getfield      #68                 // Field io/grpc/util/RoundRobinLoadBalancer$Ref.value:Ljava/lang/Object;
       7: checkcast     #69                 // class io/grpc/ConnectivityStateInfo
      10: invokevirtual #65                 // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      13: getstatic     #60                 // Field io/grpc/ConnectivityState.READY:Lio/grpc/ConnectivityState;
      16: if_acmpne     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private static <T> java.util.Set<T> setsDifference(java.util.Set<T>, java.util.Set<T>);
    Code:
       0: new           #99                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: invokespecial #100                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokeinterface #101,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      16: pop
      17: aload_2
      18: areturn

  static void access$000(io.grpc.util.RoundRobinLoadBalancer, io.grpc.LoadBalancer$Subchannel, io.grpc.ConnectivityStateInfo);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method processSubchannelState:(Lio/grpc/LoadBalancer$Subchannel;Lio/grpc/ConnectivityStateInfo;)V
       6: return

  static {};
    Code:
       0: ldc           #102                // String state-info
       2: invokestatic  #103                // Method io/grpc/Attributes$Key.create:(Ljava/lang/String;)Lio/grpc/Attributes$Key;
       5: putstatic     #34                 // Field STATE_INFO:Lio/grpc/Attributes$Key;
       8: getstatic     #104                // Field io/grpc/Status.OK:Lio/grpc/Status;
      11: ldc           #105                // String no subchannels ready
      13: invokevirtual #106                // Method io/grpc/Status.withDescription:(Ljava/lang/String;)Lio/grpc/Status;
      16: putstatic     #7                  // Field EMPTY_OK:Lio/grpc/Status;
      19: return
}
