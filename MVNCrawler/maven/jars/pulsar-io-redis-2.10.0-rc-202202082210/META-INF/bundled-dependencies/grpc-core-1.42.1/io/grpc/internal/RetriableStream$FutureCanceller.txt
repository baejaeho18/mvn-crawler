Compiled from "RetriableStream.java"
final class io.grpc.internal.RetriableStream$FutureCanceller {
  final java.lang.Object lock;

  java.util.concurrent.Future<?> future;

  boolean cancelled;

  io.grpc.internal.RetriableStream$FutureCanceller(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field lock:Ljava/lang/Object;
       9: return

  void setFuture(java.util.concurrent.Future<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #3                  // Field cancelled:Z
      11: ifne          19
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field future:Ljava/util/concurrent/Future;
      19: aload_2
      20: monitorexit
      21: goto          29
      24: astore_3
      25: aload_2
      26: monitorexit
      27: aload_3
      28: athrow
      29: return
    Exception table:
       from    to  target type
           7    21    24   any
          24    27    24   any

  java.util.concurrent.Future<?> markCancelled();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field cancelled:Z
       5: aload_0
       6: getfield      #4                  // Field future:Ljava/util/concurrent/Future;
       9: areturn

  boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cancelled:Z
       4: ireturn
}
