Compiled from "GracefulSwitchLoadBalancer.java"
public final class io.grpc.util.GracefulSwitchLoadBalancer extends io.grpc.util.ForwardingLoadBalancer {
  private final io.grpc.LoadBalancer defaultBalancer;

  static final io.grpc.LoadBalancer$SubchannelPicker BUFFER_PICKER;

  private final io.grpc.LoadBalancer$Helper helper;

  private io.grpc.LoadBalancer$Factory currentBalancerFactory;

  private io.grpc.LoadBalancer currentLb;

  private io.grpc.LoadBalancer$Factory pendingBalancerFactory;

  private io.grpc.LoadBalancer pendingLb;

  private io.grpc.ConnectivityState pendingState;

  private io.grpc.LoadBalancer$SubchannelPicker pendingPicker;

  private boolean currentLbIsReady;

  public io.grpc.util.GracefulSwitchLoadBalancer(io.grpc.LoadBalancer$Helper);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method io/grpc/util/ForwardingLoadBalancer."<init>":()V
       4: aload_0
       5: new           #10                 // class io/grpc/util/GracefulSwitchLoadBalancer$1
       8: dup
       9: aload_0
      10: invokespecial #11                 // Method io/grpc/util/GracefulSwitchLoadBalancer$1."<init>":(Lio/grpc/util/GracefulSwitchLoadBalancer;)V
      13: putfield      #1                  // Field defaultBalancer:Lio/grpc/LoadBalancer;
      16: aload_0
      17: aload_0
      18: getfield      #1                  // Field defaultBalancer:Lio/grpc/LoadBalancer;
      21: putfield      #2                  // Field currentLb:Lio/grpc/LoadBalancer;
      24: aload_0
      25: aload_0
      26: getfield      #1                  // Field defaultBalancer:Lio/grpc/LoadBalancer;
      29: putfield      #7                  // Field pendingLb:Lio/grpc/LoadBalancer;
      32: aload_0
      33: aload_1
      34: ldc           #12                 // String helper
      36: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #14                 // class io/grpc/LoadBalancer$Helper
      42: putfield      #8                  // Field helper:Lio/grpc/LoadBalancer$Helper;
      45: return

  public void switchTo(io.grpc.LoadBalancer$Factory);
    Code:
       0: aload_1
       1: ldc           #15                 // String newBalancerFactory
       3: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: aload_0
       9: getfield      #16                 // Field pendingBalancerFactory:Lio/grpc/LoadBalancer$Factory;
      12: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      15: ifeq          19
      18: return
      19: aload_0
      20: getfield      #7                  // Field pendingLb:Lio/grpc/LoadBalancer;
      23: invokevirtual #18                 // Method io/grpc/LoadBalancer.shutdown:()V
      26: aload_0
      27: aload_0
      28: getfield      #1                  // Field defaultBalancer:Lio/grpc/LoadBalancer;
      31: putfield      #7                  // Field pendingLb:Lio/grpc/LoadBalancer;
      34: aload_0
      35: aconst_null
      36: putfield      #16                 // Field pendingBalancerFactory:Lio/grpc/LoadBalancer$Factory;
      39: aload_0
      40: getstatic     #19                 // Field io/grpc/ConnectivityState.CONNECTING:Lio/grpc/ConnectivityState;
      43: putfield      #5                  // Field pendingState:Lio/grpc/ConnectivityState;
      46: aload_0
      47: getstatic     #20                 // Field BUFFER_PICKER:Lio/grpc/LoadBalancer$SubchannelPicker;
      50: putfield      #4                  // Field pendingPicker:Lio/grpc/LoadBalancer$SubchannelPicker;
      53: aload_1
      54: aload_0
      55: getfield      #21                 // Field currentBalancerFactory:Lio/grpc/LoadBalancer$Factory;
      58: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      61: ifeq          65
      64: return
      65: new           #22                 // class io/grpc/util/GracefulSwitchLoadBalancer$1PendingHelper
      68: dup
      69: aload_0
      70: invokespecial #23                 // Method io/grpc/util/GracefulSwitchLoadBalancer$1PendingHelper."<init>":(Lio/grpc/util/GracefulSwitchLoadBalancer;)V
      73: astore_2
      74: aload_2
      75: aload_1
      76: aload_2
      77: invokevirtual #24                 // Method io/grpc/LoadBalancer$Factory.newLoadBalancer:(Lio/grpc/LoadBalancer$Helper;)Lio/grpc/LoadBalancer;
      80: putfield      #25                 // Field io/grpc/util/GracefulSwitchLoadBalancer$1PendingHelper.lb:Lio/grpc/LoadBalancer;
      83: aload_0
      84: aload_2
      85: getfield      #25                 // Field io/grpc/util/GracefulSwitchLoadBalancer$1PendingHelper.lb:Lio/grpc/LoadBalancer;
      88: putfield      #7                  // Field pendingLb:Lio/grpc/LoadBalancer;
      91: aload_0
      92: aload_1
      93: putfield      #16                 // Field pendingBalancerFactory:Lio/grpc/LoadBalancer$Factory;
      96: aload_0
      97: getfield      #6                  // Field currentLbIsReady:Z
     100: ifne          107
     103: aload_0
     104: invokespecial #3                  // Method swap:()V
     107: return

  private void swap();
    Code:
       0: aload_0
       1: getfield      #8                  // Field helper:Lio/grpc/LoadBalancer$Helper;
       4: aload_0
       5: getfield      #5                  // Field pendingState:Lio/grpc/ConnectivityState;
       8: aload_0
       9: getfield      #4                  // Field pendingPicker:Lio/grpc/LoadBalancer$SubchannelPicker;
      12: invokevirtual #26                 // Method io/grpc/LoadBalancer$Helper.updateBalancingState:(Lio/grpc/ConnectivityState;Lio/grpc/LoadBalancer$SubchannelPicker;)V
      15: aload_0
      16: getfield      #2                  // Field currentLb:Lio/grpc/LoadBalancer;
      19: invokevirtual #18                 // Method io/grpc/LoadBalancer.shutdown:()V
      22: aload_0
      23: aload_0
      24: getfield      #7                  // Field pendingLb:Lio/grpc/LoadBalancer;
      27: putfield      #2                  // Field currentLb:Lio/grpc/LoadBalancer;
      30: aload_0
      31: aload_0
      32: getfield      #16                 // Field pendingBalancerFactory:Lio/grpc/LoadBalancer$Factory;
      35: putfield      #21                 // Field currentBalancerFactory:Lio/grpc/LoadBalancer$Factory;
      38: aload_0
      39: aload_0
      40: getfield      #1                  // Field defaultBalancer:Lio/grpc/LoadBalancer;
      43: putfield      #7                  // Field pendingLb:Lio/grpc/LoadBalancer;
      46: aload_0
      47: aconst_null
      48: putfield      #16                 // Field pendingBalancerFactory:Lio/grpc/LoadBalancer$Factory;
      51: return

  protected io.grpc.LoadBalancer delegate();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pendingLb:Lio/grpc/LoadBalancer;
       4: aload_0
       5: getfield      #1                  // Field defaultBalancer:Lio/grpc/LoadBalancer;
       8: if_acmpne     18
      11: aload_0
      12: getfield      #2                  // Field currentLb:Lio/grpc/LoadBalancer;
      15: goto          22
      18: aload_0
      19: getfield      #7                  // Field pendingLb:Lio/grpc/LoadBalancer;
      22: areturn

  public void handleSubchannelState(io.grpc.LoadBalancer$Subchannel, io.grpc.ConnectivityStateInfo);
    Code:
       0: new           #27                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #30                 // String handleSubchannelState() is not supported by
      13: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #32                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #33                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pendingLb:Lio/grpc/LoadBalancer;
       4: invokevirtual #18                 // Method io/grpc/LoadBalancer.shutdown:()V
       7: aload_0
       8: getfield      #2                  // Field currentLb:Lio/grpc/LoadBalancer;
      11: invokevirtual #18                 // Method io/grpc/LoadBalancer.shutdown:()V
      14: return

  static io.grpc.LoadBalancer$Helper access$000(io.grpc.util.GracefulSwitchLoadBalancer);
    Code:
       0: aload_0
       1: getfield      #8                  // Field helper:Lio/grpc/LoadBalancer$Helper;
       4: areturn

  static io.grpc.LoadBalancer access$100(io.grpc.util.GracefulSwitchLoadBalancer);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pendingLb:Lio/grpc/LoadBalancer;
       4: areturn

  static boolean access$200(io.grpc.util.GracefulSwitchLoadBalancer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field currentLbIsReady:Z
       4: ireturn

  static io.grpc.ConnectivityState access$302(io.grpc.util.GracefulSwitchLoadBalancer, io.grpc.ConnectivityState);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field pendingState:Lio/grpc/ConnectivityState;
       6: areturn

  static io.grpc.LoadBalancer$SubchannelPicker access$402(io.grpc.util.GracefulSwitchLoadBalancer, io.grpc.LoadBalancer$SubchannelPicker);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field pendingPicker:Lio/grpc/LoadBalancer$SubchannelPicker;
       6: areturn

  static void access$500(io.grpc.util.GracefulSwitchLoadBalancer);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method swap:()V
       4: return

  static io.grpc.LoadBalancer access$600(io.grpc.util.GracefulSwitchLoadBalancer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field currentLb:Lio/grpc/LoadBalancer;
       4: areturn

  static boolean access$202(io.grpc.util.GracefulSwitchLoadBalancer, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field currentLbIsReady:Z
       6: ireturn

  static io.grpc.LoadBalancer access$700(io.grpc.util.GracefulSwitchLoadBalancer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field defaultBalancer:Lio/grpc/LoadBalancer;
       4: areturn

  static {};
    Code:
       0: new           #36                 // class io/grpc/util/GracefulSwitchLoadBalancer$2
       3: dup
       4: invokespecial #37                 // Method io/grpc/util/GracefulSwitchLoadBalancer$2."<init>":()V
       7: putstatic     #20                 // Field BUFFER_PICKER:Lio/grpc/LoadBalancer$SubchannelPicker;
      10: return
}
