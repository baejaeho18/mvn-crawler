Compiled from "MessageDeframer.java"
final class io.grpc.internal.MessageDeframer$SizeEnforcingInputStream extends java.io.FilterInputStream {
  private final int maxMessageSize;

  private final io.grpc.internal.StatsTraceContext statsTraceCtx;

  private long maxCount;

  private long count;

  private long mark;

  io.grpc.internal.MessageDeframer$SizeEnforcingInputStream(java.io.InputStream, int, io.grpc.internal.StatsTraceContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: ldc2_w        #2                  // long -1l
       9: putfield      #4                  // Field mark:J
      12: aload_0
      13: iload_2
      14: putfield      #5                  // Field maxMessageSize:I
      17: aload_0
      18: aload_3
      19: putfield      #6                  // Field statsTraceCtx:Lio/grpc/internal/StatsTraceContext;
      22: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Ljava/io/InputStream;
       4: invokevirtual #8                  // Method java/io/InputStream.read:()I
       7: istore_1
       8: iload_1
       9: iconst_m1
      10: if_icmpeq     23
      13: aload_0
      14: dup
      15: getfield      #9                  // Field count:J
      18: lconst_1
      19: ladd
      20: putfield      #9                  // Field count:J
      23: aload_0
      24: invokespecial #10                 // Method verifySize:()V
      27: aload_0
      28: invokespecial #11                 // Method reportCount:()V
      31: iload_1
      32: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Ljava/io/InputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #12                 // Method java/io/InputStream.read:([BII)I
      10: istore        4
      12: iload         4
      14: iconst_m1
      15: if_icmpeq     30
      18: aload_0
      19: dup
      20: getfield      #9                  // Field count:J
      23: iload         4
      25: i2l
      26: ladd
      27: putfield      #9                  // Field count:J
      30: aload_0
      31: invokespecial #10                 // Method verifySize:()V
      34: aload_0
      35: invokespecial #11                 // Method reportCount:()V
      38: iload         4
      40: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Ljava/io/InputStream;
       4: lload_1
       5: invokevirtual #13                 // Method java/io/InputStream.skip:(J)J
       8: lstore_3
       9: aload_0
      10: dup
      11: getfield      #9                  // Field count:J
      14: lload_3
      15: ladd
      16: putfield      #9                  // Field count:J
      19: aload_0
      20: invokespecial #10                 // Method verifySize:()V
      23: aload_0
      24: invokespecial #11                 // Method reportCount:()V
      27: lload_3
      28: lreturn

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Ljava/io/InputStream;
       4: iload_1
       5: invokevirtual #14                 // Method java/io/InputStream.mark:(I)V
       8: aload_0
       9: aload_0
      10: getfield      #9                  // Field count:J
      13: putfield      #4                  // Field mark:J
      16: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Ljava/io/InputStream;
       4: invokevirtual #15                 // Method java/io/InputStream.markSupported:()Z
       7: ifne          20
      10: new           #16                 // class java/io/IOException
      13: dup
      14: ldc           #17                 // String Mark not supported
      16: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #4                  // Field mark:J
      24: ldc2_w        #2                  // long -1l
      27: lcmp
      28: ifne          41
      31: new           #16                 // class java/io/IOException
      34: dup
      35: ldc           #19                 // String Mark not set
      37: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: getfield      #7                  // Field in:Ljava/io/InputStream;
      45: invokevirtual #20                 // Method java/io/InputStream.reset:()V
      48: aload_0
      49: aload_0
      50: getfield      #4                  // Field mark:J
      53: putfield      #9                  // Field count:J
      56: return

  private void reportCount();
    Code:
       0: aload_0
       1: getfield      #9                  // Field count:J
       4: aload_0
       5: getfield      #21                 // Field maxCount:J
       8: lcmp
       9: ifle          36
      12: aload_0
      13: getfield      #6                  // Field statsTraceCtx:Lio/grpc/internal/StatsTraceContext;
      16: aload_0
      17: getfield      #9                  // Field count:J
      20: aload_0
      21: getfield      #21                 // Field maxCount:J
      24: lsub
      25: invokevirtual #22                 // Method io/grpc/internal/StatsTraceContext.inboundUncompressedSize:(J)V
      28: aload_0
      29: aload_0
      30: getfield      #9                  // Field count:J
      33: putfield      #21                 // Field maxCount:J
      36: return

  private void verifySize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field count:J
       4: aload_0
       5: getfield      #5                  // Field maxMessageSize:I
       8: i2l
       9: lcmp
      10: ifle          42
      13: getstatic     #23                 // Field io/grpc/Status.RESOURCE_EXHAUSTED:Lio/grpc/Status;
      16: ldc           #24                 // String Decompressed gRPC message exceeds maximum size %d
      18: iconst_1
      19: anewarray     #25                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #5                  // Field maxMessageSize:I
      28: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aastore
      32: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      35: invokevirtual #28                 // Method io/grpc/Status.withDescription:(Ljava/lang/String;)Lio/grpc/Status;
      38: invokevirtual #29                 // Method io/grpc/Status.asRuntimeException:()Lio/grpc/StatusRuntimeException;
      41: athrow
      42: return
}
