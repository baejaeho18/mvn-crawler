Compiled from "GracefulSwitchLoadBalancer.java"
class io.grpc.util.GracefulSwitchLoadBalancer$1PendingHelper extends io.grpc.util.ForwardingLoadBalancerHelper {
  io.grpc.LoadBalancer lb;

  final io.grpc.util.GracefulSwitchLoadBalancer this$0;

  io.grpc.util.GracefulSwitchLoadBalancer$1PendingHelper(io.grpc.util.GracefulSwitchLoadBalancer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
       5: aload_0
       6: invokespecial #2                  // Method io/grpc/util/ForwardingLoadBalancerHelper."<init>":()V
       9: return

  protected io.grpc.LoadBalancer$Helper delegate();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
       4: invokestatic  #3                  // Method io/grpc/util/GracefulSwitchLoadBalancer.access$000:(Lio/grpc/util/GracefulSwitchLoadBalancer;)Lio/grpc/LoadBalancer$Helper;
       7: areturn

  public void updateBalancingState(io.grpc.ConnectivityState, io.grpc.LoadBalancer$SubchannelPicker);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lb:Lio/grpc/LoadBalancer;
       4: aload_0
       5: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
       8: invokestatic  #5                  // Method io/grpc/util/GracefulSwitchLoadBalancer.access$100:(Lio/grpc/util/GracefulSwitchLoadBalancer;)Lio/grpc/LoadBalancer;
      11: if_acmpne     61
      14: aload_0
      15: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
      18: invokestatic  #6                  // Method io/grpc/util/GracefulSwitchLoadBalancer.access$200:(Lio/grpc/util/GracefulSwitchLoadBalancer;)Z
      21: ldc           #7                  // String there\'s pending lb while current lb has been out of READY
      23: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      26: aload_0
      27: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
      30: aload_1
      31: invokestatic  #9                  // Method io/grpc/util/GracefulSwitchLoadBalancer.access$302:(Lio/grpc/util/GracefulSwitchLoadBalancer;Lio/grpc/ConnectivityState;)Lio/grpc/ConnectivityState;
      34: pop
      35: aload_0
      36: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
      39: aload_2
      40: invokestatic  #10                 // Method io/grpc/util/GracefulSwitchLoadBalancer.access$402:(Lio/grpc/util/GracefulSwitchLoadBalancer;Lio/grpc/LoadBalancer$SubchannelPicker;)Lio/grpc/LoadBalancer$SubchannelPicker;
      43: pop
      44: aload_1
      45: getstatic     #11                 // Field io/grpc/ConnectivityState.READY:Lio/grpc/ConnectivityState;
      48: if_acmpne     144
      51: aload_0
      52: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
      55: invokestatic  #12                 // Method io/grpc/util/GracefulSwitchLoadBalancer.access$500:(Lio/grpc/util/GracefulSwitchLoadBalancer;)V
      58: goto          144
      61: aload_0
      62: getfield      #4                  // Field lb:Lio/grpc/LoadBalancer;
      65: aload_0
      66: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
      69: invokestatic  #13                 // Method io/grpc/util/GracefulSwitchLoadBalancer.access$600:(Lio/grpc/util/GracefulSwitchLoadBalancer;)Lio/grpc/LoadBalancer;
      72: if_acmpne     144
      75: aload_0
      76: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
      79: aload_1
      80: getstatic     #11                 // Field io/grpc/ConnectivityState.READY:Lio/grpc/ConnectivityState;
      83: if_acmpne     90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: invokestatic  #14                 // Method io/grpc/util/GracefulSwitchLoadBalancer.access$202:(Lio/grpc/util/GracefulSwitchLoadBalancer;Z)Z
      94: pop
      95: aload_0
      96: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
      99: invokestatic  #6                  // Method io/grpc/util/GracefulSwitchLoadBalancer.access$200:(Lio/grpc/util/GracefulSwitchLoadBalancer;)Z
     102: ifne          132
     105: aload_0
     106: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
     109: invokestatic  #5                  // Method io/grpc/util/GracefulSwitchLoadBalancer.access$100:(Lio/grpc/util/GracefulSwitchLoadBalancer;)Lio/grpc/LoadBalancer;
     112: aload_0
     113: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
     116: invokestatic  #15                 // Method io/grpc/util/GracefulSwitchLoadBalancer.access$700:(Lio/grpc/util/GracefulSwitchLoadBalancer;)Lio/grpc/LoadBalancer;
     119: if_acmpeq     132
     122: aload_0
     123: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
     126: invokestatic  #12                 // Method io/grpc/util/GracefulSwitchLoadBalancer.access$500:(Lio/grpc/util/GracefulSwitchLoadBalancer;)V
     129: goto          144
     132: aload_0
     133: getfield      #1                  // Field this$0:Lio/grpc/util/GracefulSwitchLoadBalancer;
     136: invokestatic  #3                  // Method io/grpc/util/GracefulSwitchLoadBalancer.access$000:(Lio/grpc/util/GracefulSwitchLoadBalancer;)Lio/grpc/LoadBalancer$Helper;
     139: aload_1
     140: aload_2
     141: invokevirtual #16                 // Method io/grpc/LoadBalancer$Helper.updateBalancingState:(Lio/grpc/ConnectivityState;Lio/grpc/LoadBalancer$SubchannelPicker;)V
     144: return
}
