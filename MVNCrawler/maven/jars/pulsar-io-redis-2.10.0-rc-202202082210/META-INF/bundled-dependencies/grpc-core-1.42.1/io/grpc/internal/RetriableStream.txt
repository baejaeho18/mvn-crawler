Compiled from "RetriableStream.java"
abstract class io.grpc.internal.RetriableStream<ReqT> implements io.grpc.internal.ClientStream {
  static final io.grpc.Metadata$Key<java.lang.String> GRPC_PREVIOUS_RPC_ATTEMPTS;

  static final io.grpc.Metadata$Key<java.lang.String> GRPC_RETRY_PUSHBACK_MS;

  private static final io.grpc.Status CANCELLED_BECAUSE_COMMITTED;

  private final io.grpc.MethodDescriptor<ReqT, ?> method;

  private final java.util.concurrent.Executor callExecutor;

  private final java.util.concurrent.Executor listenerSerializeExecutor;

  private final java.util.concurrent.ScheduledExecutorService scheduledExecutorService;

  private final io.grpc.Metadata headers;

  private final io.grpc.internal.RetryPolicy retryPolicy;

  private final io.grpc.internal.HedgingPolicy hedgingPolicy;

  private final boolean isHedging;

  private final java.lang.Object lock;

  private final io.grpc.internal.RetriableStream$ChannelBufferMeter channelBufferUsed;

  private final long perRpcBufferLimit;

  private final long channelBufferLimit;

  private final io.grpc.internal.RetriableStream$Throttle throttle;

  private final io.grpc.internal.InsightBuilder closedSubstreamsInsight;

  private volatile io.grpc.internal.RetriableStream$State state;

  private final java.util.concurrent.atomic.AtomicBoolean noMoreTransparentRetry;

  private long perRpcBufferUsed;

  private io.grpc.internal.ClientStreamListener masterListener;

  private io.grpc.internal.RetriableStream$FutureCanceller scheduledRetry;

  private io.grpc.internal.RetriableStream$FutureCanceller scheduledHedging;

  private long nextBackoffIntervalNanos;

  private io.grpc.Status cancellationStatus;

  private boolean isClosed;

  private static java.util.Random random;

  io.grpc.internal.RetriableStream(io.grpc.MethodDescriptor<ReqT, ?>, io.grpc.Metadata, io.grpc.internal.RetriableStream$ChannelBufferMeter, long, long, java.util.concurrent.Executor, java.util.concurrent.ScheduledExecutorService, io.grpc.internal.RetryPolicy, io.grpc.internal.HedgingPolicy, io.grpc.internal.RetriableStream$Throttle);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #32                 // class io/grpc/SynchronizationContext
       8: dup
       9: new           #33                 // class io/grpc/internal/RetriableStream$1
      12: dup
      13: aload_0
      14: invokespecial #34                 // Method io/grpc/internal/RetriableStream$1."<init>":(Lio/grpc/internal/RetriableStream;)V
      17: invokespecial #35                 // Method io/grpc/SynchronizationContext."<init>":(Ljava/lang/Thread$UncaughtExceptionHandler;)V
      20: putfield      #15                 // Field listenerSerializeExecutor:Ljava/util/concurrent/Executor;
      23: aload_0
      24: new           #36                 // class java/lang/Object
      27: dup
      28: invokespecial #31                 // Method java/lang/Object."<init>":()V
      31: putfield      #25                 // Field lock:Ljava/lang/Object;
      34: aload_0
      35: new           #37                 // class io/grpc/internal/InsightBuilder
      38: dup
      39: invokespecial #38                 // Method io/grpc/internal/InsightBuilder."<init>":()V
      42: putfield      #14                 // Field closedSubstreamsInsight:Lio/grpc/internal/InsightBuilder;
      45: aload_0
      46: new           #39                 // class io/grpc/internal/RetriableStream$State
      49: dup
      50: new           #40                 // class java/util/ArrayList
      53: dup
      54: bipush        8
      56: invokespecial #41                 // Method java/util/ArrayList."<init>":(I)V
      59: invokestatic  #42                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      62: aconst_null
      63: aconst_null
      64: iconst_0
      65: iconst_0
      66: iconst_0
      67: iconst_0
      68: invokespecial #43                 // Method io/grpc/internal/RetriableStream$State."<init>":(Ljava/util/List;Ljava/util/Collection;Ljava/util/Collection;Lio/grpc/internal/RetriableStream$Substream;ZZZI)V
      71: putfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      74: aload_0
      75: new           #44                 // class java/util/concurrent/atomic/AtomicBoolean
      78: dup
      79: invokespecial #45                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      82: putfield      #13                 // Field noMoreTransparentRetry:Ljava/util/concurrent/atomic/AtomicBoolean;
      85: aload_0
      86: aload_1
      87: putfield      #17                 // Field method:Lio/grpc/MethodDescriptor;
      90: aload_0
      91: aload_3
      92: putfield      #3                  // Field channelBufferUsed:Lio/grpc/internal/RetriableStream$ChannelBufferMeter;
      95: aload_0
      96: lload         4
      98: putfield      #4                  // Field perRpcBufferLimit:J
     101: aload_0
     102: lload         6
     104: putfield      #2                  // Field channelBufferLimit:J
     107: aload_0
     108: aload         8
     110: putfield      #18                 // Field callExecutor:Ljava/util/concurrent/Executor;
     113: aload_0
     114: aload         9
     116: putfield      #20                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
     119: aload_0
     120: aload_2
     121: putfield      #46                 // Field headers:Lio/grpc/Metadata;
     124: aload_0
     125: aload         10
     127: putfield      #11                 // Field retryPolicy:Lio/grpc/internal/RetryPolicy;
     130: aload         10
     132: ifnull        144
     135: aload_0
     136: aload         10
     138: getfield      #47                 // Field io/grpc/internal/RetryPolicy.initialBackoffNanos:J
     141: putfield      #7                  // Field nextBackoffIntervalNanos:J
     144: aload_0
     145: aload         11
     147: putfield      #21                 // Field hedgingPolicy:Lio/grpc/internal/HedgingPolicy;
     150: aload         10
     152: ifnull        160
     155: aload         11
     157: ifnonnull     164
     160: iconst_1
     161: goto          165
     164: iconst_0
     165: ldc           #48                 // String Should not provide both retryPolicy and hedgingPolicy
     167: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     170: aload_0
     171: aload         11
     173: ifnull        180
     176: iconst_1
     177: goto          181
     180: iconst_0
     181: putfield      #12                 // Field isHedging:Z
     184: aload_0
     185: aload         12
     187: putfield      #23                 // Field throttle:Lio/grpc/internal/RetriableStream$Throttle;
     190: return

  private java.lang.Runnable commit(io.grpc.internal.RetriableStream$Substream);
    Code:
       0: aload_0
       1: getfield      #25                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      11: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
      14: ifnull        21
      17: aconst_null
      18: aload_2
      19: monitorexit
      20: areturn
      21: aload_0
      22: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      25: getfield      #51                 // Field io/grpc/internal/RetriableStream$State.drainedSubstreams:Ljava/util/Collection;
      28: astore_3
      29: aload_0
      30: aload_0
      31: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      34: aload_1
      35: invokevirtual #52                 // Method io/grpc/internal/RetriableStream$State.committed:(Lio/grpc/internal/RetriableStream$Substream;)Lio/grpc/internal/RetriableStream$State;
      38: putfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      41: aload_0
      42: getfield      #3                  // Field channelBufferUsed:Lio/grpc/internal/RetriableStream$ChannelBufferMeter;
      45: aload_0
      46: getfield      #5                  // Field perRpcBufferUsed:J
      49: lneg
      50: invokevirtual #53                 // Method io/grpc/internal/RetriableStream$ChannelBufferMeter.addAndGet:(J)J
      53: pop2
      54: aload_0
      55: getfield      #8                  // Field scheduledRetry:Lio/grpc/internal/RetriableStream$FutureCanceller;
      58: ifnull        78
      61: aload_0
      62: getfield      #8                  // Field scheduledRetry:Lio/grpc/internal/RetriableStream$FutureCanceller;
      65: invokevirtual #54                 // Method io/grpc/internal/RetriableStream$FutureCanceller.markCancelled:()Ljava/util/concurrent/Future;
      68: astore        4
      70: aload_0
      71: aconst_null
      72: putfield      #8                  // Field scheduledRetry:Lio/grpc/internal/RetriableStream$FutureCanceller;
      75: goto          81
      78: aconst_null
      79: astore        4
      81: aload_0
      82: getfield      #22                 // Field scheduledHedging:Lio/grpc/internal/RetriableStream$FutureCanceller;
      85: ifnull        105
      88: aload_0
      89: getfield      #22                 // Field scheduledHedging:Lio/grpc/internal/RetriableStream$FutureCanceller;
      92: invokevirtual #54                 // Method io/grpc/internal/RetriableStream$FutureCanceller.markCancelled:()Ljava/util/concurrent/Future;
      95: astore        5
      97: aload_0
      98: aconst_null
      99: putfield      #22                 // Field scheduledHedging:Lio/grpc/internal/RetriableStream$FutureCanceller;
     102: goto          108
     105: aconst_null
     106: astore        5
     108: new           #55                 // class io/grpc/internal/RetriableStream$1CommitTask
     111: dup
     112: aload_0
     113: aload_3
     114: aload_1
     115: aload         4
     117: aload         5
     119: invokespecial #56                 // Method io/grpc/internal/RetriableStream$1CommitTask."<init>":(Lio/grpc/internal/RetriableStream;Ljava/util/Collection;Lio/grpc/internal/RetriableStream$Substream;Ljava/util/concurrent/Future;Ljava/util/concurrent/Future;)V
     122: aload_2
     123: monitorexit
     124: areturn
     125: astore        6
     127: aload_2
     128: monitorexit
     129: aload         6
     131: athrow
    Exception table:
       from    to  target type
           7    20   125   any
          21   124   125   any
         125   129   125   any

  abstract void postCommit();

  private void commitAndRun(io.grpc.internal.RetriableStream$Substream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method commit:(Lio/grpc/internal/RetriableStream$Substream;)Ljava/lang/Runnable;
       5: astore_2
       6: aload_2
       7: ifnull        16
      10: aload_2
      11: invokeinterface #57,  1           // InterfaceMethod java/lang/Runnable.run:()V
      16: return

  private io.grpc.internal.RetriableStream$Substream createSubstream(int, boolean);
    Code:
       0: new           #58                 // class io/grpc/internal/RetriableStream$Substream
       3: dup
       4: iload_1
       5: invokespecial #59                 // Method io/grpc/internal/RetriableStream$Substream."<init>":(I)V
       8: astore_3
       9: new           #60                 // class io/grpc/internal/RetriableStream$BufferSizeTracer
      12: dup
      13: aload_0
      14: aload_3
      15: invokespecial #61                 // Method io/grpc/internal/RetriableStream$BufferSizeTracer."<init>":(Lio/grpc/internal/RetriableStream;Lio/grpc/internal/RetriableStream$Substream;)V
      18: astore        4
      20: new           #62                 // class io/grpc/internal/RetriableStream$2
      23: dup
      24: aload_0
      25: aload         4
      27: invokespecial #63                 // Method io/grpc/internal/RetriableStream$2."<init>":(Lio/grpc/internal/RetriableStream;Lio/grpc/ClientStreamTracer;)V
      30: astore        5
      32: aload_0
      33: aload_0
      34: getfield      #46                 // Field headers:Lio/grpc/Metadata;
      37: iload_1
      38: invokevirtual #64                 // Method updateHeaders:(Lio/grpc/Metadata;I)Lio/grpc/Metadata;
      41: astore        6
      43: aload_3
      44: aload_0
      45: aload         6
      47: aload         5
      49: iload_1
      50: iload_2
      51: invokevirtual #65                 // Method newSubstream:(Lio/grpc/Metadata;Lio/grpc/ClientStreamTracer$Factory;IZ)Lio/grpc/internal/ClientStream;
      54: putfield      #66                 // Field io/grpc/internal/RetriableStream$Substream.stream:Lio/grpc/internal/ClientStream;
      57: aload_3
      58: areturn

  abstract io.grpc.internal.ClientStream newSubstream(io.grpc.Metadata, io.grpc.ClientStreamTracer$Factory, int, boolean);

  final io.grpc.Metadata updateHeaders(io.grpc.Metadata, int);
    Code:
       0: new           #67                 // class io/grpc/Metadata
       3: dup
       4: invokespecial #68                 // Method io/grpc/Metadata."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #69                 // Method io/grpc/Metadata.merge:(Lio/grpc/Metadata;)V
      13: iload_2
      14: ifle          28
      17: aload_3
      18: getstatic     #70                 // Field GRPC_PREVIOUS_RPC_ATTEMPTS:Lio/grpc/Metadata$Key;
      21: iload_2
      22: invokestatic  #71                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      25: invokevirtual #72                 // Method io/grpc/Metadata.put:(Lio/grpc/Metadata$Key;Ljava/lang/Object;)V
      28: aload_3
      29: areturn

  private void drain(io.grpc.internal.RetriableStream$Substream);
    Code:
       0: iconst_0
       1: istore_2
       2: sipush        128
       5: istore_3
       6: aconst_null
       7: astore        4
       9: iconst_0
      10: istore        5
      12: aconst_null
      13: astore        6
      15: aload_0
      16: getfield      #25                 // Field lock:Ljava/lang/Object;
      19: dup
      20: astore        8
      22: monitorenter
      23: aload_0
      24: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      27: astore        7
      29: iload         5
      31: ifeq          71
      34: aload         7
      36: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
      39: ifnull        57
      42: aload         7
      44: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
      47: aload_1
      48: if_acmpeq     57
      51: aload         8
      53: monitorexit
      54: goto          324
      57: aload         7
      59: getfield      #73                 // Field io/grpc/internal/RetriableStream$State.cancelled:Z
      62: ifeq          71
      65: aload         8
      67: monitorexit
      68: goto          324
      71: iload_2
      72: aload         7
      74: getfield      #74                 // Field io/grpc/internal/RetriableStream$State.buffer:Ljava/util/List;
      77: invokeinterface #75,  1           // InterfaceMethod java/util/List.size:()I
      82: if_icmpne     122
      85: aload_0
      86: aload         7
      88: aload_1
      89: invokevirtual #76                 // Method io/grpc/internal/RetriableStream$State.substreamDrained:(Lio/grpc/internal/RetriableStream$Substream;)Lio/grpc/internal/RetriableStream$State;
      92: putfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      95: aload_0
      96: invokevirtual #77                 // Method isReady:()Z
      99: ifne          106
     102: aload         8
     104: monitorexit
     105: return
     106: new           #78                 // class io/grpc/internal/RetriableStream$3
     109: dup
     110: aload_0
     111: invokespecial #79                 // Method io/grpc/internal/RetriableStream$3."<init>":(Lio/grpc/internal/RetriableStream;)V
     114: astore        6
     116: aload         8
     118: monitorexit
     119: goto          324
     122: aload_1
     123: getfield      #80                 // Field io/grpc/internal/RetriableStream$Substream.closed:Z
     126: ifeq          133
     129: aload         8
     131: monitorexit
     132: return
     133: iload_2
     134: iload_3
     135: iadd
     136: aload         7
     138: getfield      #74                 // Field io/grpc/internal/RetriableStream$State.buffer:Ljava/util/List;
     141: invokeinterface #75,  1           // InterfaceMethod java/util/List.size:()I
     146: invokestatic  #81                 // Method java/lang/Math.min:(II)I
     149: istore        9
     151: aload         4
     153: ifnonnull     181
     156: new           #40                 // class java/util/ArrayList
     159: dup
     160: aload         7
     162: getfield      #74                 // Field io/grpc/internal/RetriableStream$State.buffer:Ljava/util/List;
     165: iload_2
     166: iload         9
     168: invokeinterface #82,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
     173: invokespecial #83                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     176: astore        4
     178: goto          209
     181: aload         4
     183: invokeinterface #84,  1           // InterfaceMethod java/util/List.clear:()V
     188: aload         4
     190: aload         7
     192: getfield      #74                 // Field io/grpc/internal/RetriableStream$State.buffer:Ljava/util/List;
     195: iload_2
     196: iload         9
     198: invokeinterface #82,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
     203: invokeinterface #85,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     208: pop
     209: iload         9
     211: istore_2
     212: aload         8
     214: monitorexit
     215: goto          226
     218: astore        10
     220: aload         8
     222: monitorexit
     223: aload         10
     225: athrow
     226: aload         4
     228: invokeinterface #86,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     233: astore        8
     235: aload         8
     237: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     242: ifeq          321
     245: aload         8
     247: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     252: checkcast     #89                 // class io/grpc/internal/RetriableStream$BufferEntry
     255: astore        9
     257: aload         9
     259: aload_1
     260: invokeinterface #90,  2           // InterfaceMethod io/grpc/internal/RetriableStream$BufferEntry.runWith:(Lio/grpc/internal/RetriableStream$Substream;)V
     265: aload         9
     267: instanceof    #91                 // class io/grpc/internal/RetriableStream$StartEntry
     270: ifeq          276
     273: iconst_1
     274: istore        5
     276: iload         5
     278: ifeq          318
     281: aload_0
     282: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
     285: astore        7
     287: aload         7
     289: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
     292: ifnull        307
     295: aload         7
     297: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
     300: aload_1
     301: if_acmpeq     307
     304: goto          321
     307: aload         7
     309: getfield      #73                 // Field io/grpc/internal/RetriableStream$State.cancelled:Z
     312: ifeq          318
     315: goto          321
     318: goto          235
     321: goto          15
     324: aload         6
     326: ifnull        341
     329: aload_0
     330: getfield      #15                 // Field listenerSerializeExecutor:Ljava/util/concurrent/Executor;
     333: aload         6
     335: invokeinterface #92,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     340: return
     341: aload_1
     342: getfield      #66                 // Field io/grpc/internal/RetriableStream$Substream.stream:Lio/grpc/internal/ClientStream;
     345: aload_0
     346: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
     349: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
     352: aload_1
     353: if_acmpne     363
     356: aload_0
     357: getfield      #93                 // Field cancellationStatus:Lio/grpc/Status;
     360: goto          366
     363: getstatic     #30                 // Field CANCELLED_BECAUSE_COMMITTED:Lio/grpc/Status;
     366: invokeinterface #94,  2           // InterfaceMethod io/grpc/internal/ClientStream.cancel:(Lio/grpc/Status;)V
     371: return
    Exception table:
       from    to  target type
          23    54   218   any
          57    68   218   any
          71   105   218   any
         106   119   218   any
         122   132   218   any
         133   215   218   any
         218   223   218   any

  abstract io.grpc.Status prestart();

  public final void start(io.grpc.internal.ClientStreamListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field masterListener:Lio/grpc/internal/ClientStreamListener;
       5: aload_0
       6: invokevirtual #95                 // Method prestart:()Lio/grpc/Status;
       9: astore_2
      10: aload_2
      11: ifnull        20
      14: aload_0
      15: aload_2
      16: invokevirtual #96                 // Method cancel:(Lio/grpc/Status;)V
      19: return
      20: aload_0
      21: getfield      #25                 // Field lock:Ljava/lang/Object;
      24: dup
      25: astore_3
      26: monitorenter
      27: aload_0
      28: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      31: getfield      #74                 // Field io/grpc/internal/RetriableStream$State.buffer:Ljava/util/List;
      34: new           #91                 // class io/grpc/internal/RetriableStream$StartEntry
      37: dup
      38: aload_0
      39: invokespecial #97                 // Method io/grpc/internal/RetriableStream$StartEntry."<init>":(Lio/grpc/internal/RetriableStream;)V
      42: invokeinterface #98,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_3
      49: monitorexit
      50: goto          60
      53: astore        4
      55: aload_3
      56: monitorexit
      57: aload         4
      59: athrow
      60: aload_0
      61: iconst_0
      62: iconst_0
      63: invokespecial #26                 // Method createSubstream:(IZ)Lio/grpc/internal/RetriableStream$Substream;
      66: astore_3
      67: aload_0
      68: getfield      #12                 // Field isHedging:Z
      71: ifeq          196
      74: aconst_null
      75: astore        4
      77: aload_0
      78: getfield      #25                 // Field lock:Ljava/lang/Object;
      81: dup
      82: astore        5
      84: monitorenter
      85: aload_0
      86: aload_0
      87: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      90: aload_3
      91: invokevirtual #99                 // Method io/grpc/internal/RetriableStream$State.addActiveHedge:(Lio/grpc/internal/RetriableStream$Substream;)Lio/grpc/internal/RetriableStream$State;
      94: putfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      97: aload_0
      98: aload_0
      99: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
     102: invokespecial #24                 // Method hasPotentialHedging:(Lio/grpc/internal/RetriableStream$State;)Z
     105: ifeq          143
     108: aload_0
     109: getfield      #23                 // Field throttle:Lio/grpc/internal/RetriableStream$Throttle;
     112: ifnull        125
     115: aload_0
     116: getfield      #23                 // Field throttle:Lio/grpc/internal/RetriableStream$Throttle;
     119: invokevirtual #100                // Method io/grpc/internal/RetriableStream$Throttle.isAboveThreshold:()Z
     122: ifeq          143
     125: aload_0
     126: new           #101                // class io/grpc/internal/RetriableStream$FutureCanceller
     129: dup
     130: aload_0
     131: getfield      #25                 // Field lock:Ljava/lang/Object;
     134: invokespecial #102                // Method io/grpc/internal/RetriableStream$FutureCanceller."<init>":(Ljava/lang/Object;)V
     137: dup
     138: astore        4
     140: putfield      #22                 // Field scheduledHedging:Lio/grpc/internal/RetriableStream$FutureCanceller;
     143: aload         5
     145: monitorexit
     146: goto          157
     149: astore        6
     151: aload         5
     153: monitorexit
     154: aload         6
     156: athrow
     157: aload         4
     159: ifnull        196
     162: aload         4
     164: aload_0
     165: getfield      #20                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
     168: new           #103                // class io/grpc/internal/RetriableStream$HedgingRunnable
     171: dup
     172: aload_0
     173: aload         4
     175: invokespecial #104                // Method io/grpc/internal/RetriableStream$HedgingRunnable."<init>":(Lio/grpc/internal/RetriableStream;Lio/grpc/internal/RetriableStream$FutureCanceller;)V
     178: aload_0
     179: getfield      #21                 // Field hedgingPolicy:Lio/grpc/internal/HedgingPolicy;
     182: getfield      #105                // Field io/grpc/internal/HedgingPolicy.hedgingDelayNanos:J
     185: getstatic     #106                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     188: invokeinterface #107,  5          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     193: invokevirtual #108                // Method io/grpc/internal/RetriableStream$FutureCanceller.setFuture:(Ljava/util/concurrent/Future;)V
     196: aload_0
     197: aload_3
     198: invokespecial #19                 // Method drain:(Lio/grpc/internal/RetriableStream$Substream;)V
     201: return
    Exception table:
       from    to  target type
          27    50    53   any
          53    57    53   any
          85   146   149   any
         149   154   149   any

  private void pushbackHedging(java.lang.Integer);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokevirtual #109                // Method java/lang/Integer.intValue:()I
       9: ifge          17
      12: aload_0
      13: invokespecial #10                 // Method freezeHedging:()V
      16: return
      17: aload_0
      18: getfield      #25                 // Field lock:Ljava/lang/Object;
      21: dup
      22: astore        4
      24: monitorenter
      25: aload_0
      26: getfield      #22                 // Field scheduledHedging:Lio/grpc/internal/RetriableStream$FutureCanceller;
      29: ifnonnull     36
      32: aload         4
      34: monitorexit
      35: return
      36: aload_0
      37: getfield      #22                 // Field scheduledHedging:Lio/grpc/internal/RetriableStream$FutureCanceller;
      40: invokevirtual #54                 // Method io/grpc/internal/RetriableStream$FutureCanceller.markCancelled:()Ljava/util/concurrent/Future;
      43: astore_3
      44: aload_0
      45: new           #101                // class io/grpc/internal/RetriableStream$FutureCanceller
      48: dup
      49: aload_0
      50: getfield      #25                 // Field lock:Ljava/lang/Object;
      53: invokespecial #102                // Method io/grpc/internal/RetriableStream$FutureCanceller."<init>":(Ljava/lang/Object;)V
      56: dup
      57: astore_2
      58: putfield      #22                 // Field scheduledHedging:Lio/grpc/internal/RetriableStream$FutureCanceller;
      61: aload         4
      63: monitorexit
      64: goto          75
      67: astore        5
      69: aload         4
      71: monitorexit
      72: aload         5
      74: athrow
      75: aload_3
      76: ifnull        87
      79: aload_3
      80: iconst_0
      81: invokeinterface #110,  2          // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      86: pop
      87: aload_2
      88: aload_0
      89: getfield      #20                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      92: new           #103                // class io/grpc/internal/RetriableStream$HedgingRunnable
      95: dup
      96: aload_0
      97: aload_2
      98: invokespecial #104                // Method io/grpc/internal/RetriableStream$HedgingRunnable."<init>":(Lio/grpc/internal/RetriableStream;Lio/grpc/internal/RetriableStream$FutureCanceller;)V
     101: aload_1
     102: invokevirtual #109                // Method java/lang/Integer.intValue:()I
     105: i2l
     106: getstatic     #111                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     109: invokeinterface #107,  5          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     114: invokevirtual #108                // Method io/grpc/internal/RetriableStream$FutureCanceller.setFuture:(Ljava/util/concurrent/Future;)V
     117: return
    Exception table:
       from    to  target type
          25    35    67   any
          36    64    67   any
          67    72    67   any

  public final void cancel(io.grpc.Status);
    Code:
       0: new           #58                 // class io/grpc/internal/RetriableStream$Substream
       3: dup
       4: iconst_0
       5: invokespecial #59                 // Method io/grpc/internal/RetriableStream$Substream."<init>":(I)V
       8: astore_2
       9: aload_2
      10: new           #112                // class io/grpc/internal/NoopClientStream
      13: dup
      14: invokespecial #113                // Method io/grpc/internal/NoopClientStream."<init>":()V
      17: putfield      #66                 // Field io/grpc/internal/RetriableStream$Substream.stream:Lio/grpc/internal/ClientStream;
      20: aload_0
      21: aload_2
      22: invokespecial #1                  // Method commit:(Lio/grpc/internal/RetriableStream$Substream;)Ljava/lang/Runnable;
      25: astore_3
      26: aload_3
      27: ifnull        55
      30: aload_3
      31: invokeinterface #57,  1           // InterfaceMethod java/lang/Runnable.run:()V
      36: aload_0
      37: getfield      #15                 // Field listenerSerializeExecutor:Ljava/util/concurrent/Executor;
      40: new           #114                // class io/grpc/internal/RetriableStream$4
      43: dup
      44: aload_0
      45: aload_1
      46: invokespecial #115                // Method io/grpc/internal/RetriableStream$4."<init>":(Lio/grpc/internal/RetriableStream;Lio/grpc/Status;)V
      49: invokeinterface #92,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      54: return
      55: aconst_null
      56: astore        4
      58: aload_0
      59: getfield      #25                 // Field lock:Ljava/lang/Object;
      62: dup
      63: astore        5
      65: monitorenter
      66: aload_0
      67: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      70: getfield      #51                 // Field io/grpc/internal/RetriableStream$State.drainedSubstreams:Ljava/util/Collection;
      73: aload_0
      74: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      77: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
      80: invokeinterface #116,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      85: ifeq          100
      88: aload_0
      89: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      92: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
      95: astore        4
      97: goto          105
     100: aload_0
     101: aload_1
     102: putfield      #93                 // Field cancellationStatus:Lio/grpc/Status;
     105: aload_0
     106: aload_0
     107: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
     110: invokevirtual #117                // Method io/grpc/internal/RetriableStream$State.cancelled:()Lio/grpc/internal/RetriableStream$State;
     113: putfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
     116: aload         5
     118: monitorexit
     119: goto          130
     122: astore        6
     124: aload         5
     126: monitorexit
     127: aload         6
     129: athrow
     130: aload         4
     132: ifnull        146
     135: aload         4
     137: getfield      #66                 // Field io/grpc/internal/RetriableStream$Substream.stream:Lio/grpc/internal/ClientStream;
     140: aload_1
     141: invokeinterface #94,  2           // InterfaceMethod io/grpc/internal/ClientStream.cancel:(Lio/grpc/Status;)V
     146: return
    Exception table:
       from    to  target type
          66   119   122   any
         122   127   122   any

  private void delayOrExecute(io.grpc.internal.RetriableStream$BufferEntry);
    Code:
       0: aload_0
       1: getfield      #25                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      11: getfield      #118                // Field io/grpc/internal/RetriableStream$State.passThrough:Z
      14: ifne          31
      17: aload_0
      18: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      21: getfield      #74                 // Field io/grpc/internal/RetriableStream$State.buffer:Ljava/util/List;
      24: aload_1
      25: invokeinterface #98,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      35: getfield      #51                 // Field io/grpc/internal/RetriableStream$State.drainedSubstreams:Ljava/util/Collection;
      38: astore_2
      39: aload_3
      40: monitorexit
      41: goto          51
      44: astore        4
      46: aload_3
      47: monitorexit
      48: aload         4
      50: athrow
      51: aload_2
      52: invokeinterface #119,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          89
      67: aload_3
      68: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #58                 // class io/grpc/internal/RetriableStream$Substream
      76: astore        4
      78: aload_1
      79: aload         4
      81: invokeinterface #90,  2           // InterfaceMethod io/grpc/internal/RetriableStream$BufferEntry.runWith:(Lio/grpc/internal/RetriableStream$Substream;)V
      86: goto          58
      89: return
    Exception table:
       from    to  target type
           7    41    44   any
          44    48    44   any

  public final void writeMessage(java.io.InputStream);
    Code:
       0: new           #120                // class java/lang/IllegalStateException
       3: dup
       4: ldc           #121                // String RetriableStream.writeMessage() should not be called directly
       6: invokespecial #122                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  final void sendMessage(ReqT);
    Code:
       0: aload_0
       1: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
       4: astore_2
       5: aload_2
       6: getfield      #118                // Field io/grpc/internal/RetriableStream$State.passThrough:Z
       9: ifeq          33
      12: aload_2
      13: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
      16: getfield      #66                 // Field io/grpc/internal/RetriableStream$Substream.stream:Lio/grpc/internal/ClientStream;
      19: aload_0
      20: getfield      #17                 // Field method:Lio/grpc/MethodDescriptor;
      23: aload_1
      24: invokevirtual #123                // Method io/grpc/MethodDescriptor.streamRequest:(Ljava/lang/Object;)Ljava/io/InputStream;
      27: invokeinterface #124,  2          // InterfaceMethod io/grpc/internal/ClientStream.writeMessage:(Ljava/io/InputStream;)V
      32: return
      33: aload_0
      34: new           #125                // class io/grpc/internal/RetriableStream$1SendMessageEntry
      37: dup
      38: aload_0
      39: aload_1
      40: invokespecial #126                // Method io/grpc/internal/RetriableStream$1SendMessageEntry."<init>":(Lio/grpc/internal/RetriableStream;Ljava/lang/Object;)V
      43: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      46: return

  public final void request(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
       4: astore_2
       5: aload_2
       6: getfield      #118                // Field io/grpc/internal/RetriableStream$State.passThrough:Z
       9: ifeq          26
      12: aload_2
      13: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
      16: getfield      #66                 // Field io/grpc/internal/RetriableStream$Substream.stream:Lio/grpc/internal/ClientStream;
      19: iload_1
      20: invokeinterface #128,  2          // InterfaceMethod io/grpc/internal/ClientStream.request:(I)V
      25: return
      26: aload_0
      27: new           #129                // class io/grpc/internal/RetriableStream$1RequestEntry
      30: dup
      31: aload_0
      32: iload_1
      33: invokespecial #130                // Method io/grpc/internal/RetriableStream$1RequestEntry."<init>":(Lio/grpc/internal/RetriableStream;I)V
      36: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      39: return

  public final void flush();
    Code:
       0: aload_0
       1: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
       4: astore_1
       5: aload_1
       6: getfield      #118                // Field io/grpc/internal/RetriableStream$State.passThrough:Z
       9: ifeq          25
      12: aload_1
      13: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
      16: getfield      #66                 // Field io/grpc/internal/RetriableStream$Substream.stream:Lio/grpc/internal/ClientStream;
      19: invokeinterface #131,  1          // InterfaceMethod io/grpc/internal/ClientStream.flush:()V
      24: return
      25: aload_0
      26: new           #132                // class io/grpc/internal/RetriableStream$1FlushEntry
      29: dup
      30: aload_0
      31: invokespecial #133                // Method io/grpc/internal/RetriableStream$1FlushEntry."<init>":(Lio/grpc/internal/RetriableStream;)V
      34: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      37: return

  public final boolean isReady();
    Code:
       0: aload_0
       1: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
       4: getfield      #51                 // Field io/grpc/internal/RetriableStream$State.drainedSubstreams:Ljava/util/Collection;
       7: invokeinterface #119,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          49
      22: aload_1
      23: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #58                 // class io/grpc/internal/RetriableStream$Substream
      31: astore_2
      32: aload_2
      33: getfield      #66                 // Field io/grpc/internal/RetriableStream$Substream.stream:Lio/grpc/internal/ClientStream;
      36: invokeinterface #134,  1          // InterfaceMethod io/grpc/internal/ClientStream.isReady:()Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: goto          13
      49: iconst_0
      50: ireturn

  public void optimizeForDirectExecutor();
    Code:
       0: aload_0
       1: new           #135                // class io/grpc/internal/RetriableStream$1OptimizeDirectEntry
       4: dup
       5: aload_0
       6: invokespecial #136                // Method io/grpc/internal/RetriableStream$1OptimizeDirectEntry."<init>":(Lio/grpc/internal/RetriableStream;)V
       9: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      12: return

  public final void setCompressor(io.grpc.Compressor);
    Code:
       0: aload_0
       1: new           #137                // class io/grpc/internal/RetriableStream$1CompressorEntry
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #138                // Method io/grpc/internal/RetriableStream$1CompressorEntry."<init>":(Lio/grpc/internal/RetriableStream;Lio/grpc/Compressor;)V
      10: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      13: return

  public final void setFullStreamDecompression(boolean);
    Code:
       0: aload_0
       1: new           #139                // class io/grpc/internal/RetriableStream$1FullStreamDecompressionEntry
       4: dup
       5: aload_0
       6: iload_1
       7: invokespecial #140                // Method io/grpc/internal/RetriableStream$1FullStreamDecompressionEntry."<init>":(Lio/grpc/internal/RetriableStream;Z)V
      10: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      13: return

  public final void setMessageCompression(boolean);
    Code:
       0: aload_0
       1: new           #141                // class io/grpc/internal/RetriableStream$1MessageCompressionEntry
       4: dup
       5: aload_0
       6: iload_1
       7: invokespecial #142                // Method io/grpc/internal/RetriableStream$1MessageCompressionEntry."<init>":(Lio/grpc/internal/RetriableStream;Z)V
      10: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      13: return

  public final void halfClose();
    Code:
       0: aload_0
       1: new           #143                // class io/grpc/internal/RetriableStream$1HalfCloseEntry
       4: dup
       5: aload_0
       6: invokespecial #144                // Method io/grpc/internal/RetriableStream$1HalfCloseEntry."<init>":(Lio/grpc/internal/RetriableStream;)V
       9: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      12: return

  public final void setAuthority(java.lang.String);
    Code:
       0: aload_0
       1: new           #145                // class io/grpc/internal/RetriableStream$1AuthorityEntry
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #146                // Method io/grpc/internal/RetriableStream$1AuthorityEntry."<init>":(Lio/grpc/internal/RetriableStream;Ljava/lang/String;)V
      10: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      13: return

  public final void setDecompressorRegistry(io.grpc.DecompressorRegistry);
    Code:
       0: aload_0
       1: new           #147                // class io/grpc/internal/RetriableStream$1DecompressorRegistryEntry
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #148                // Method io/grpc/internal/RetriableStream$1DecompressorRegistryEntry."<init>":(Lio/grpc/internal/RetriableStream;Lio/grpc/DecompressorRegistry;)V
      10: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      13: return

  public final void setMaxInboundMessageSize(int);
    Code:
       0: aload_0
       1: new           #149                // class io/grpc/internal/RetriableStream$1MaxInboundMessageSizeEntry
       4: dup
       5: aload_0
       6: iload_1
       7: invokespecial #150                // Method io/grpc/internal/RetriableStream$1MaxInboundMessageSizeEntry."<init>":(Lio/grpc/internal/RetriableStream;I)V
      10: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      13: return

  public final void setMaxOutboundMessageSize(int);
    Code:
       0: aload_0
       1: new           #151                // class io/grpc/internal/RetriableStream$1MaxOutboundMessageSizeEntry
       4: dup
       5: aload_0
       6: iload_1
       7: invokespecial #152                // Method io/grpc/internal/RetriableStream$1MaxOutboundMessageSizeEntry."<init>":(Lio/grpc/internal/RetriableStream;I)V
      10: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      13: return

  public final void setDeadline(io.grpc.Deadline);
    Code:
       0: aload_0
       1: new           #153                // class io/grpc/internal/RetriableStream$1DeadlineEntry
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #154                // Method io/grpc/internal/RetriableStream$1DeadlineEntry."<init>":(Lio/grpc/internal/RetriableStream;Lio/grpc/Deadline;)V
      10: invokespecial #127                // Method delayOrExecute:(Lio/grpc/internal/RetriableStream$BufferEntry;)V
      13: return

  public final io.grpc.Attributes getAttributes();
    Code:
       0: aload_0
       1: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
       4: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
       7: ifnull        26
      10: aload_0
      11: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      14: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
      17: getfield      #66                 // Field io/grpc/internal/RetriableStream$Substream.stream:Lio/grpc/internal/ClientStream;
      20: invokeinterface #155,  1          // InterfaceMethod io/grpc/internal/ClientStream.getAttributes:()Lio/grpc/Attributes;
      25: areturn
      26: getstatic     #156                // Field io/grpc/Attributes.EMPTY:Lio/grpc/Attributes;
      29: areturn

  public void appendTimeoutInsight(io.grpc.internal.InsightBuilder);
    Code:
       0: aload_0
       1: getfield      #25                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_1
       8: ldc           #157                // String closed
      10: aload_0
      11: getfield      #14                 // Field closedSubstreamsInsight:Lio/grpc/internal/InsightBuilder;
      14: invokevirtual #158                // Method io/grpc/internal/InsightBuilder.appendKeyValue:(Ljava/lang/String;Ljava/lang/Object;)Lio/grpc/internal/InsightBuilder;
      17: pop
      18: aload_0
      19: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      22: astore_2
      23: aload_3
      24: monitorexit
      25: goto          35
      28: astore        4
      30: aload_3
      31: monitorexit
      32: aload         4
      34: athrow
      35: aload_2
      36: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
      39: ifnull        74
      42: new           #37                 // class io/grpc/internal/InsightBuilder
      45: dup
      46: invokespecial #38                 // Method io/grpc/internal/InsightBuilder."<init>":()V
      49: astore_3
      50: aload_2
      51: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
      54: getfield      #66                 // Field io/grpc/internal/RetriableStream$Substream.stream:Lio/grpc/internal/ClientStream;
      57: aload_3
      58: invokeinterface #159,  2          // InterfaceMethod io/grpc/internal/ClientStream.appendTimeoutInsight:(Lio/grpc/internal/InsightBuilder;)V
      63: aload_1
      64: ldc           #160                // String committed
      66: aload_3
      67: invokevirtual #158                // Method io/grpc/internal/InsightBuilder.appendKeyValue:(Ljava/lang/String;Ljava/lang/Object;)Lio/grpc/internal/InsightBuilder;
      70: pop
      71: goto          154
      74: new           #37                 // class io/grpc/internal/InsightBuilder
      77: dup
      78: invokespecial #38                 // Method io/grpc/internal/InsightBuilder."<init>":()V
      81: astore_3
      82: aload_2
      83: getfield      #51                 // Field io/grpc/internal/RetriableStream$State.drainedSubstreams:Ljava/util/Collection;
      86: invokeinterface #119,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      91: astore        4
      93: aload         4
      95: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          146
     103: aload         4
     105: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     110: checkcast     #58                 // class io/grpc/internal/RetriableStream$Substream
     113: astore        5
     115: new           #37                 // class io/grpc/internal/InsightBuilder
     118: dup
     119: invokespecial #38                 // Method io/grpc/internal/InsightBuilder."<init>":()V
     122: astore        6
     124: aload         5
     126: getfield      #66                 // Field io/grpc/internal/RetriableStream$Substream.stream:Lio/grpc/internal/ClientStream;
     129: aload         6
     131: invokeinterface #159,  2          // InterfaceMethod io/grpc/internal/ClientStream.appendTimeoutInsight:(Lio/grpc/internal/InsightBuilder;)V
     136: aload_3
     137: aload         6
     139: invokevirtual #161                // Method io/grpc/internal/InsightBuilder.append:(Ljava/lang/Object;)Lio/grpc/internal/InsightBuilder;
     142: pop
     143: goto          93
     146: aload_1
     147: ldc           #162                // String open
     149: aload_3
     150: invokevirtual #158                // Method io/grpc/internal/InsightBuilder.appendKeyValue:(Ljava/lang/String;Ljava/lang/Object;)Lio/grpc/internal/InsightBuilder;
     153: pop
     154: return
    Exception table:
       from    to  target type
           7    25    28   any
          28    32    28   any

  static void setRandom(java.util.Random);
    Code:
       0: aload_0
       1: putstatic     #6                  // Field random:Ljava/util/Random;
       4: return

  private boolean hasPotentialHedging(io.grpc.internal.RetriableStream$State);
    Code:
       0: aload_1
       1: getfield      #50                 // Field io/grpc/internal/RetriableStream$State.winningSubstream:Lio/grpc/internal/RetriableStream$Substream;
       4: ifnonnull     32
       7: aload_1
       8: getfield      #163                // Field io/grpc/internal/RetriableStream$State.hedgingAttemptCount:I
      11: aload_0
      12: getfield      #21                 // Field hedgingPolicy:Lio/grpc/internal/HedgingPolicy;
      15: getfield      #164                // Field io/grpc/internal/HedgingPolicy.maxAttempts:I
      18: if_icmpge     32
      21: aload_1
      22: getfield      #165                // Field io/grpc/internal/RetriableStream$State.hedgingFrozen:Z
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private void freezeHedging();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #25                 // Field lock:Ljava/lang/Object;
       6: dup
       7: astore_2
       8: monitorenter
       9: aload_0
      10: getfield      #22                 // Field scheduledHedging:Lio/grpc/internal/RetriableStream$FutureCanceller;
      13: ifnull        29
      16: aload_0
      17: getfield      #22                 // Field scheduledHedging:Lio/grpc/internal/RetriableStream$FutureCanceller;
      20: invokevirtual #54                 // Method io/grpc/internal/RetriableStream$FutureCanceller.markCancelled:()Ljava/util/concurrent/Future;
      23: astore_1
      24: aload_0
      25: aconst_null
      26: putfield      #22                 // Field scheduledHedging:Lio/grpc/internal/RetriableStream$FutureCanceller;
      29: aload_0
      30: aload_0
      31: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      34: invokevirtual #166                // Method io/grpc/internal/RetriableStream$State.freezeHedging:()Lio/grpc/internal/RetriableStream$State;
      37: putfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
      40: aload_2
      41: monitorexit
      42: goto          50
      45: astore_3
      46: aload_2
      47: monitorexit
      48: aload_3
      49: athrow
      50: aload_1
      51: ifnull        62
      54: aload_1
      55: iconst_0
      56: invokeinterface #110,  2          // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      61: pop
      62: return
    Exception table:
       from    to  target type
           9    42    45   any
          45    48    45   any

  static io.grpc.Status access$000();
    Code:
       0: getstatic     #30                 // Field CANCELLED_BECAUSE_COMMITTED:Lio/grpc/Status;
       3: areturn

  static boolean access$100(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #29                 // Field isClosed:Z
       4: ireturn

  static io.grpc.internal.ClientStreamListener access$200(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #28                 // Field masterListener:Lio/grpc/internal/ClientStreamListener;
       4: areturn

  static io.grpc.internal.RetriableStream$State access$300(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
       4: areturn

  static io.grpc.internal.RetriableStream$Substream access$400(io.grpc.internal.RetriableStream, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #26                 // Method createSubstream:(IZ)Lio/grpc/internal/RetriableStream$Substream;
       6: areturn

  static java.lang.Object access$500(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #25                 // Field lock:Ljava/lang/Object;
       4: areturn

  static io.grpc.internal.RetriableStream$State access$302(io.grpc.internal.RetriableStream, io.grpc.internal.RetriableStream$State);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #27                 // Field state:Lio/grpc/internal/RetriableStream$State;
       6: areturn

  static boolean access$600(io.grpc.internal.RetriableStream, io.grpc.internal.RetriableStream$State);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method hasPotentialHedging:(Lio/grpc/internal/RetriableStream$State;)Z
       5: ireturn

  static io.grpc.internal.RetriableStream$Throttle access$700(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #23                 // Field throttle:Lio/grpc/internal/RetriableStream$Throttle;
       4: areturn

  static io.grpc.internal.RetriableStream$FutureCanceller access$802(io.grpc.internal.RetriableStream, io.grpc.internal.RetriableStream$FutureCanceller);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #22                 // Field scheduledHedging:Lio/grpc/internal/RetriableStream$FutureCanceller;
       6: areturn

  static io.grpc.internal.HedgingPolicy access$900(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #21                 // Field hedgingPolicy:Lio/grpc/internal/HedgingPolicy;
       4: areturn

  static java.util.concurrent.ScheduledExecutorService access$1000(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #20                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  static void access$1100(io.grpc.internal.RetriableStream, io.grpc.internal.RetriableStream$Substream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method drain:(Lio/grpc/internal/RetriableStream$Substream;)V
       5: return

  static java.util.concurrent.Executor access$1200(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #18                 // Field callExecutor:Ljava/util/concurrent/Executor;
       4: areturn

  static boolean access$102(io.grpc.internal.RetriableStream, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #29                 // Field isClosed:Z
       6: ireturn

  static io.grpc.MethodDescriptor access$1300(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #17                 // Field method:Lio/grpc/MethodDescriptor;
       4: areturn

  static void access$1400(io.grpc.internal.RetriableStream, io.grpc.internal.RetriableStream$Substream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method commitAndRun:(Lio/grpc/internal/RetriableStream$Substream;)V
       5: return

  static java.util.concurrent.Executor access$1500(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #15                 // Field listenerSerializeExecutor:Ljava/util/concurrent/Executor;
       4: areturn

  static io.grpc.internal.InsightBuilder access$1600(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #14                 // Field closedSubstreamsInsight:Lio/grpc/internal/InsightBuilder;
       4: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$1700(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #13                 // Field noMoreTransparentRetry:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static boolean access$1800(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #12                 // Field isHedging:Z
       4: ireturn

  static io.grpc.internal.RetryPolicy access$1900(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #11                 // Field retryPolicy:Lio/grpc/internal/RetryPolicy;
       4: areturn

  static void access$2000(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method freezeHedging:()V
       4: return

  static void access$2100(io.grpc.internal.RetriableStream, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method pushbackHedging:(Ljava/lang/Integer;)V
       5: return

  static io.grpc.internal.RetriableStream$FutureCanceller access$2202(io.grpc.internal.RetriableStream, io.grpc.internal.RetriableStream$FutureCanceller);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #8                  // Field scheduledRetry:Lio/grpc/internal/RetriableStream$FutureCanceller;
       6: areturn

  static long access$2300(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nextBackoffIntervalNanos:J
       4: lreturn

  static java.util.Random access$2400();
    Code:
       0: getstatic     #6                  // Field random:Ljava/util/Random;
       3: areturn

  static long access$2302(io.grpc.internal.RetriableStream, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #7                  // Field nextBackoffIntervalNanos:J
       6: lreturn

  static long access$2500(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #5                  // Field perRpcBufferUsed:J
       4: lreturn

  static long access$2600(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #4                  // Field perRpcBufferLimit:J
       4: lreturn

  static io.grpc.internal.RetriableStream$ChannelBufferMeter access$2700(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #3                  // Field channelBufferUsed:Lio/grpc/internal/RetriableStream$ChannelBufferMeter;
       4: areturn

  static long access$2502(io.grpc.internal.RetriableStream, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #5                  // Field perRpcBufferUsed:J
       6: lreturn

  static long access$2800(io.grpc.internal.RetriableStream);
    Code:
       0: aload_0
       1: getfield      #2                  // Field channelBufferLimit:J
       4: lreturn

  static java.lang.Runnable access$2900(io.grpc.internal.RetriableStream, io.grpc.internal.RetriableStream$Substream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method commit:(Lio/grpc/internal/RetriableStream$Substream;)Ljava/lang/Runnable;
       5: areturn

  static {};
    Code:
       0: ldc           #167                // String grpc-previous-rpc-attempts
       2: getstatic     #168                // Field io/grpc/Metadata.ASCII_STRING_MARSHALLER:Lio/grpc/Metadata$AsciiMarshaller;
       5: invokestatic  #169                // Method io/grpc/Metadata$Key.of:(Ljava/lang/String;Lio/grpc/Metadata$AsciiMarshaller;)Lio/grpc/Metadata$Key;
       8: putstatic     #70                 // Field GRPC_PREVIOUS_RPC_ATTEMPTS:Lio/grpc/Metadata$Key;
      11: ldc           #170                // String grpc-retry-pushback-ms
      13: getstatic     #168                // Field io/grpc/Metadata.ASCII_STRING_MARSHALLER:Lio/grpc/Metadata$AsciiMarshaller;
      16: invokestatic  #169                // Method io/grpc/Metadata$Key.of:(Ljava/lang/String;Lio/grpc/Metadata$AsciiMarshaller;)Lio/grpc/Metadata$Key;
      19: putstatic     #171                // Field GRPC_RETRY_PUSHBACK_MS:Lio/grpc/Metadata$Key;
      22: getstatic     #172                // Field io/grpc/Status.CANCELLED:Lio/grpc/Status;
      25: ldc           #173                // String Stream thrown away because RetriableStream committed
      27: invokevirtual #174                // Method io/grpc/Status.withDescription:(Ljava/lang/String;)Lio/grpc/Status;
      30: putstatic     #30                 // Field CANCELLED_BECAUSE_COMMITTED:Lio/grpc/Status;
      33: new           #175                // class java/util/Random
      36: dup
      37: invokespecial #176                // Method java/util/Random."<init>":()V
      40: putstatic     #6                  // Field random:Ljava/util/Random;
      43: return
}
