Compiled from "ManagedChannelImpl.java"
final class io.grpc.internal.ManagedChannelImpl extends io.grpc.ManagedChannel implements io.grpc.InternalInstrumented<io.grpc.InternalChannelz$ChannelStats> {
  static final java.util.logging.Logger logger;

  static final java.util.regex.Pattern URI_PATTERN;

  static final long IDLE_TIMEOUT_MILLIS_DISABLE;

  static final long SUBCHANNEL_SHUTDOWN_DELAY_SECONDS;

  static final io.grpc.Status SHUTDOWN_NOW_STATUS;

  static final io.grpc.Status SHUTDOWN_STATUS;

  static final io.grpc.Status SUBCHANNEL_SHUTDOWN_STATUS;

  private static final io.grpc.internal.ManagedChannelServiceConfig EMPTY_SERVICE_CONFIG;

  private static final io.grpc.InternalConfigSelector INITIAL_PENDING_SELECTOR;

  private final io.grpc.InternalLogId logId;

  private final java.lang.String target;

  private final java.lang.String authorityOverride;

  private final io.grpc.NameResolverRegistry nameResolverRegistry;

  private final io.grpc.NameResolver$Factory nameResolverFactory;

  private final io.grpc.NameResolver$Args nameResolverArgs;

  private final io.grpc.internal.AutoConfiguredLoadBalancerFactory loadBalancerFactory;

  private final io.grpc.internal.ClientTransportFactory originalTransportFactory;

  private final io.grpc.ChannelCredentials originalChannelCreds;

  private final io.grpc.internal.ClientTransportFactory transportFactory;

  private final io.grpc.internal.ClientTransportFactory oobTransportFactory;

  private final io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor scheduledExecutor;

  private final java.util.concurrent.Executor executor;

  private final io.grpc.internal.ObjectPool<? extends java.util.concurrent.Executor> executorPool;

  private final io.grpc.internal.ObjectPool<? extends java.util.concurrent.Executor> balancerRpcExecutorPool;

  private final io.grpc.internal.ManagedChannelImpl$ExecutorHolder balancerRpcExecutorHolder;

  private final io.grpc.internal.ManagedChannelImpl$ExecutorHolder offloadExecutorHolder;

  private final io.grpc.internal.TimeProvider timeProvider;

  private final int maxTraceEvents;

  final io.grpc.SynchronizationContext syncContext;

  private boolean fullStreamDecompression;

  private final io.grpc.DecompressorRegistry decompressorRegistry;

  private final io.grpc.CompressorRegistry compressorRegistry;

  private final com.google.common.base.Supplier<com.google.common.base.Stopwatch> stopwatchSupplier;

  private final long idleTimeoutMillis;

  private final io.grpc.internal.ConnectivityStateManager channelStateManager;

  private final io.grpc.internal.BackoffPolicy$Provider backoffPolicyProvider;

  private final io.grpc.Channel interceptorChannel;

  private final java.lang.String userAgent;

  private io.grpc.NameResolver nameResolver;

  private boolean nameResolverStarted;

  private io.grpc.internal.ManagedChannelImpl$LbHelperImpl lbHelper;

  private volatile io.grpc.LoadBalancer$SubchannelPicker subchannelPicker;

  private boolean panicMode;

  private final java.util.Set<io.grpc.internal.InternalSubchannel> subchannels;

  private java.util.Collection<io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall<?, ?>> pendingCalls;

  private final java.lang.Object pendingCallsInUseObject;

  private final java.util.Set<io.grpc.internal.OobChannel> oobChannels;

  private final io.grpc.internal.DelayedClientTransport delayedTransport;

  private final io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry uncommittedRetriableStreamsRegistry;

  private final java.util.concurrent.atomic.AtomicBoolean shutdown;

  private boolean shutdownNowed;

  private boolean terminating;

  private volatile boolean terminated;

  private final java.util.concurrent.CountDownLatch terminatedLatch;

  private final io.grpc.internal.CallTracer$Factory callTracerFactory;

  private final io.grpc.internal.CallTracer channelCallTracer;

  private final io.grpc.internal.ChannelTracer channelTracer;

  private final io.grpc.ChannelLogger channelLogger;

  private final io.grpc.InternalChannelz channelz;

  private final io.grpc.internal.ManagedChannelImpl$RealChannel realChannel;

  private io.grpc.internal.ManagedChannelImpl$ResolutionState lastResolutionState;

  private io.grpc.internal.ManagedChannelServiceConfig lastServiceConfig;

  private final io.grpc.internal.ManagedChannelServiceConfig defaultServiceConfig;

  private boolean serviceConfigUpdated;

  private final boolean lookUpServiceConfig;

  private final io.grpc.internal.RetriableStream$ChannelBufferMeter channelBufferUsed;

  private final long perRpcBufferLimit;

  private final long channelBufferLimit;

  private final boolean retryEnabled;

  private final io.grpc.internal.ManagedClientTransport$Listener delayedTransportListener;

  final io.grpc.internal.InUseStateAggregator<java.lang.Object> inUseStateAggregator;

  private io.grpc.SynchronizationContext$ScheduledHandle scheduledNameResolverRefresh;

  private io.grpc.internal.BackoffPolicy nameResolverBackoffPolicy;

  private final io.grpc.internal.ClientCallImpl$ClientStreamProvider transportProvider;

  private final io.grpc.internal.Rescheduler idleTimer;

  private static final io.grpc.ClientCall<java.lang.Object, java.lang.Object> NOOP_CALL;

  private void maybeShutdownNowSubchannels();
    Code:
       0: aload_0
       1: getfield      #45                 // Field shutdownNowed:Z
       4: ifeq          88
       7: aload_0
       8: getfield      #64                 // Field subchannels:Ljava/util/Set;
      11: invokeinterface #69,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          46
      26: aload_1
      27: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #72                 // class io/grpc/internal/InternalSubchannel
      35: astore_2
      36: aload_2
      37: getstatic     #73                 // Field SHUTDOWN_NOW_STATUS:Lio/grpc/Status;
      40: invokevirtual #74                 // Method io/grpc/internal/InternalSubchannel.shutdownNow:(Lio/grpc/Status;)V
      43: goto          17
      46: aload_0
      47: getfield      #63                 // Field oobChannels:Ljava/util/Set;
      50: invokeinterface #69,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      55: astore_1
      56: aload_1
      57: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          88
      65: aload_1
      66: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #75                 // class io/grpc/internal/OobChannel
      74: astore_2
      75: aload_2
      76: invokevirtual #76                 // Method io/grpc/internal/OobChannel.getInternalSubchannel:()Lio/grpc/internal/InternalSubchannel;
      79: getstatic     #73                 // Field SHUTDOWN_NOW_STATUS:Lio/grpc/Status;
      82: invokevirtual #74                 // Method io/grpc/internal/InternalSubchannel.shutdownNow:(Lio/grpc/Status;)V
      85: goto          56
      88: return

  public com.google.common.util.concurrent.ListenableFuture<io.grpc.InternalChannelz$ChannelStats> getStats();
    Code:
       0: invokestatic  #77                 // Method com/google/common/util/concurrent/SettableFuture.create:()Lcom/google/common/util/concurrent/SettableFuture;
       3: astore_1
       4: aload_0
       5: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
       8: new           #79                 // class io/grpc/internal/ManagedChannelImpl$1StatsFetcher
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #80                 // Method io/grpc/internal/ManagedChannelImpl$1StatsFetcher."<init>":(Lio/grpc/internal/ManagedChannelImpl;Lcom/google/common/util/concurrent/SettableFuture;)V
      17: invokevirtual #81                 // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
      20: aload_1
      21: areturn

  public io.grpc.InternalLogId getLogId();
    Code:
       0: aload_0
       1: getfield      #82                 // Field logId:Lio/grpc/InternalLogId;
       4: areturn

  private void shutdownNameResolverAndLoadBalancer(boolean);
    Code:
       0: aload_0
       1: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
       4: invokevirtual #83                 // Method io/grpc/SynchronizationContext.throwIfNotInThisSynchronizationContext:()V
       7: iload_1
       8: ifeq          37
      11: aload_0
      12: getfield      #31                 // Field nameResolverStarted:Z
      15: ldc           #84                 // String nameResolver is not started
      17: invokestatic  #85                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      20: aload_0
      21: getfield      #32                 // Field lbHelper:Lio/grpc/internal/ManagedChannelImpl$LbHelperImpl;
      24: ifnull        31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ldc           #86                 // String lbHelper is null
      34: invokestatic  #85                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      37: aload_0
      38: getfield      #87                 // Field nameResolver:Lio/grpc/NameResolver;
      41: ifnull        95
      44: aload_0
      45: invokespecial #88                 // Method cancelNameResolverBackoff:()V
      48: aload_0
      49: getfield      #87                 // Field nameResolver:Lio/grpc/NameResolver;
      52: invokevirtual #89                 // Method io/grpc/NameResolver.shutdown:()V
      55: aload_0
      56: iconst_0
      57: putfield      #31                 // Field nameResolverStarted:Z
      60: iload_1
      61: ifeq          90
      64: aload_0
      65: aload_0
      66: getfield      #65                 // Field target:Ljava/lang/String;
      69: aload_0
      70: getfield      #4                  // Field authorityOverride:Ljava/lang/String;
      73: aload_0
      74: getfield      #14                 // Field nameResolverFactory:Lio/grpc/NameResolver$Factory;
      77: aload_0
      78: getfield      #15                 // Field nameResolverArgs:Lio/grpc/NameResolver$Args;
      81: invokestatic  #90                 // Method getNameResolver:(Ljava/lang/String;Ljava/lang/String;Lio/grpc/NameResolver$Factory;Lio/grpc/NameResolver$Args;)Lio/grpc/NameResolver;
      84: putfield      #87                 // Field nameResolver:Lio/grpc/NameResolver;
      87: goto          95
      90: aload_0
      91: aconst_null
      92: putfield      #87                 // Field nameResolver:Lio/grpc/NameResolver;
      95: aload_0
      96: getfield      #32                 // Field lbHelper:Lio/grpc/internal/ManagedChannelImpl$LbHelperImpl;
      99: ifnull        117
     102: aload_0
     103: getfield      #32                 // Field lbHelper:Lio/grpc/internal/ManagedChannelImpl$LbHelperImpl;
     106: getfield      #91                 // Field io/grpc/internal/ManagedChannelImpl$LbHelperImpl.lb:Lio/grpc/internal/AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer;
     109: invokevirtual #92                 // Method io/grpc/internal/AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer.shutdown:()V
     112: aload_0
     113: aconst_null
     114: putfield      #32                 // Field lbHelper:Lio/grpc/internal/ManagedChannelImpl$LbHelperImpl;
     117: aload_0
     118: aconst_null
     119: putfield      #59                 // Field subchannelPicker:Lio/grpc/LoadBalancer$SubchannelPicker;
     122: return

  void exitIdleMode();
    Code:
       0: aload_0
       1: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
       4: invokevirtual #83                 // Method io/grpc/SynchronizationContext.throwIfNotInThisSynchronizationContext:()V
       7: aload_0
       8: getfield      #58                 // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: invokevirtual #93                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      14: ifne          24
      17: aload_0
      18: getfield      #94                 // Field panicMode:Z
      21: ifeq          25
      24: return
      25: aload_0
      26: getfield      #95                 // Field inUseStateAggregator:Lio/grpc/internal/InUseStateAggregator;
      29: invokevirtual #96                 // Method io/grpc/internal/InUseStateAggregator.isInUse:()Z
      32: ifeq          43
      35: aload_0
      36: iconst_0
      37: invokespecial #46                 // Method cancelIdleTimer:(Z)V
      40: goto          47
      43: aload_0
      44: invokespecial #1                  // Method rescheduleIdleTimer:()V
      47: aload_0
      48: getfield      #32                 // Field lbHelper:Lio/grpc/internal/ManagedChannelImpl$LbHelperImpl;
      51: ifnull        55
      54: return
      55: aload_0
      56: getfield      #47                 // Field channelLogger:Lio/grpc/ChannelLogger;
      59: getstatic     #97                 // Field io/grpc/ChannelLogger$ChannelLogLevel.INFO:Lio/grpc/ChannelLogger$ChannelLogLevel;
      62: ldc           #98                 // String Exiting idle mode
      64: invokevirtual #99                 // Method io/grpc/ChannelLogger.log:(Lio/grpc/ChannelLogger$ChannelLogLevel;Ljava/lang/String;)V
      67: new           #100                // class io/grpc/internal/ManagedChannelImpl$LbHelperImpl
      70: dup
      71: aload_0
      72: aconst_null
      73: invokespecial #101                // Method io/grpc/internal/ManagedChannelImpl$LbHelperImpl."<init>":(Lio/grpc/internal/ManagedChannelImpl;Lio/grpc/internal/ManagedChannelImpl$1;)V
      76: astore_1
      77: aload_1
      78: aload_0
      79: getfield      #102                // Field loadBalancerFactory:Lio/grpc/internal/AutoConfiguredLoadBalancerFactory;
      82: aload_1
      83: invokevirtual #103                // Method io/grpc/internal/AutoConfiguredLoadBalancerFactory.newLoadBalancer:(Lio/grpc/LoadBalancer$Helper;)Lio/grpc/internal/AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer;
      86: putfield      #91                 // Field io/grpc/internal/ManagedChannelImpl$LbHelperImpl.lb:Lio/grpc/internal/AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer;
      89: aload_0
      90: aload_1
      91: putfield      #32                 // Field lbHelper:Lio/grpc/internal/ManagedChannelImpl$LbHelperImpl;
      94: new           #104                // class io/grpc/internal/ManagedChannelImpl$NameResolverListener
      97: dup
      98: aload_0
      99: aload_1
     100: aload_0
     101: getfield      #87                 // Field nameResolver:Lio/grpc/NameResolver;
     104: invokespecial #105                // Method io/grpc/internal/ManagedChannelImpl$NameResolverListener."<init>":(Lio/grpc/internal/ManagedChannelImpl;Lio/grpc/internal/ManagedChannelImpl$LbHelperImpl;Lio/grpc/NameResolver;)V
     107: astore_2
     108: aload_0
     109: getfield      #87                 // Field nameResolver:Lio/grpc/NameResolver;
     112: aload_2
     113: invokevirtual #106                // Method io/grpc/NameResolver.start:(Lio/grpc/NameResolver$Listener2;)V
     116: aload_0
     117: iconst_1
     118: putfield      #31                 // Field nameResolverStarted:Z
     121: return

  private void enterIdleMode();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #2                  // Method shutdownNameResolverAndLoadBalancer:(Z)V
       5: aload_0
       6: getfield      #57                 // Field delayedTransport:Lio/grpc/internal/DelayedClientTransport;
       9: aconst_null
      10: invokevirtual #107                // Method io/grpc/internal/DelayedClientTransport.reprocess:(Lio/grpc/LoadBalancer$SubchannelPicker;)V
      13: aload_0
      14: getfield      #47                 // Field channelLogger:Lio/grpc/ChannelLogger;
      17: getstatic     #97                 // Field io/grpc/ChannelLogger$ChannelLogLevel.INFO:Lio/grpc/ChannelLogger$ChannelLogLevel;
      20: ldc           #108                // String Entering IDLE state
      22: invokevirtual #99                 // Method io/grpc/ChannelLogger.log:(Lio/grpc/ChannelLogger$ChannelLogLevel;Ljava/lang/String;)V
      25: aload_0
      26: getfield      #66                 // Field channelStateManager:Lio/grpc/internal/ConnectivityStateManager;
      29: getstatic     #109                // Field io/grpc/ConnectivityState.IDLE:Lio/grpc/ConnectivityState;
      32: invokevirtual #110                // Method io/grpc/internal/ConnectivityStateManager.gotoState:(Lio/grpc/ConnectivityState;)V
      35: aload_0
      36: getfield      #95                 // Field inUseStateAggregator:Lio/grpc/internal/InUseStateAggregator;
      39: iconst_2
      40: anewarray     #111                // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_0
      46: getfield      #36                 // Field pendingCallsInUseObject:Ljava/lang/Object;
      49: aastore
      50: dup
      51: iconst_1
      52: aload_0
      53: getfield      #57                 // Field delayedTransport:Lio/grpc/internal/DelayedClientTransport;
      56: aastore
      57: invokevirtual #112                // Method io/grpc/internal/InUseStateAggregator.anyObjectInUse:([Ljava/lang/Object;)Z
      60: ifeq          67
      63: aload_0
      64: invokevirtual #113                // Method exitIdleMode:()V
      67: return

  private void cancelIdleTimer(boolean);
    Code:
       0: aload_0
       1: getfield      #114                // Field idleTimer:Lio/grpc/internal/Rescheduler;
       4: iload_1
       5: invokevirtual #115                // Method io/grpc/internal/Rescheduler.cancel:(Z)V
       8: return

  private void rescheduleIdleTimer();
    Code:
       0: aload_0
       1: getfield      #116                // Field idleTimeoutMillis:J
       4: ldc2_w        #118                // long -1l
       7: lcmp
       8: ifne          12
      11: return
      12: aload_0
      13: getfield      #114                // Field idleTimer:Lio/grpc/internal/Rescheduler;
      16: aload_0
      17: getfield      #116                // Field idleTimeoutMillis:J
      20: getstatic     #120                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      23: invokevirtual #121                // Method io/grpc/internal/Rescheduler.reschedule:(JLjava/util/concurrent/TimeUnit;)V
      26: return

  private void cancelNameResolverBackoff();
    Code:
       0: aload_0
       1: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
       4: invokevirtual #83                 // Method io/grpc/SynchronizationContext.throwIfNotInThisSynchronizationContext:()V
       7: aload_0
       8: getfield      #61                 // Field scheduledNameResolverRefresh:Lio/grpc/SynchronizationContext$ScheduledHandle;
      11: ifnull        31
      14: aload_0
      15: getfield      #61                 // Field scheduledNameResolverRefresh:Lio/grpc/SynchronizationContext$ScheduledHandle;
      18: invokevirtual #122                // Method io/grpc/SynchronizationContext$ScheduledHandle.cancel:()V
      21: aload_0
      22: aconst_null
      23: putfield      #61                 // Field scheduledNameResolverRefresh:Lio/grpc/SynchronizationContext$ScheduledHandle;
      26: aload_0
      27: aconst_null
      28: putfield      #10                 // Field nameResolverBackoffPolicy:Lio/grpc/internal/BackoffPolicy;
      31: return

  private void refreshAndResetNameResolution();
    Code:
       0: aload_0
       1: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
       4: invokevirtual #83                 // Method io/grpc/SynchronizationContext.throwIfNotInThisSynchronizationContext:()V
       7: aload_0
       8: invokespecial #88                 // Method cancelNameResolverBackoff:()V
      11: aload_0
      12: invokespecial #60                 // Method refreshNameResolution:()V
      15: return

  private void refreshNameResolution();
    Code:
       0: aload_0
       1: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
       4: invokevirtual #83                 // Method io/grpc/SynchronizationContext.throwIfNotInThisSynchronizationContext:()V
       7: aload_0
       8: getfield      #31                 // Field nameResolverStarted:Z
      11: ifeq          21
      14: aload_0
      15: getfield      #87                 // Field nameResolver:Lio/grpc/NameResolver;
      18: invokevirtual #123                // Method io/grpc/NameResolver.refresh:()V
      21: return

  io.grpc.internal.ManagedChannelImpl(io.grpc.internal.ManagedChannelImplBuilder, io.grpc.internal.ClientTransportFactory, io.grpc.internal.BackoffPolicy$Provider, io.grpc.internal.ObjectPool<? extends java.util.concurrent.Executor>, com.google.common.base.Supplier<com.google.common.base.Stopwatch>, java.util.List<io.grpc.ClientInterceptor>, io.grpc.internal.TimeProvider);
    Code:
       0: aload_0
       1: invokespecial #124                // Method io/grpc/ManagedChannel."<init>":()V
       4: aload_0
       5: new           #125                // class io/grpc/SynchronizationContext
       8: dup
       9: new           #126                // class io/grpc/internal/ManagedChannelImpl$2
      12: dup
      13: aload_0
      14: invokespecial #127                // Method io/grpc/internal/ManagedChannelImpl$2."<init>":(Lio/grpc/internal/ManagedChannelImpl;)V
      17: invokespecial #128                // Method io/grpc/SynchronizationContext."<init>":(Ljava/lang/Thread$UncaughtExceptionHandler;)V
      20: putfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
      23: aload_0
      24: new           #129                // class io/grpc/internal/ConnectivityStateManager
      27: dup
      28: invokespecial #130                // Method io/grpc/internal/ConnectivityStateManager."<init>":()V
      31: putfield      #66                 // Field channelStateManager:Lio/grpc/internal/ConnectivityStateManager;
      34: aload_0
      35: new           #131                // class java/util/HashSet
      38: dup
      39: bipush        16
      41: ldc           #132                // float 0.75f
      43: invokespecial #133                // Method java/util/HashSet."<init>":(IF)V
      46: putfield      #64                 // Field subchannels:Ljava/util/Set;
      49: aload_0
      50: new           #111                // class java/lang/Object
      53: dup
      54: invokespecial #134                // Method java/lang/Object."<init>":()V
      57: putfield      #36                 // Field pendingCallsInUseObject:Ljava/lang/Object;
      60: aload_0
      61: new           #131                // class java/util/HashSet
      64: dup
      65: iconst_1
      66: ldc           #132                // float 0.75f
      68: invokespecial #133                // Method java/util/HashSet."<init>":(IF)V
      71: putfield      #63                 // Field oobChannels:Ljava/util/Set;
      74: aload_0
      75: new           #135                // class io/grpc/internal/ManagedChannelImpl$UncommittedRetriableStreamsRegistry
      78: dup
      79: aload_0
      80: aconst_null
      81: invokespecial #136                // Method io/grpc/internal/ManagedChannelImpl$UncommittedRetriableStreamsRegistry."<init>":(Lio/grpc/internal/ManagedChannelImpl;Lio/grpc/internal/ManagedChannelImpl$1;)V
      84: putfield      #49                 // Field uncommittedRetriableStreamsRegistry:Lio/grpc/internal/ManagedChannelImpl$UncommittedRetriableStreamsRegistry;
      87: aload_0
      88: new           #137                // class java/util/concurrent/atomic/AtomicBoolean
      91: dup
      92: iconst_0
      93: invokespecial #138                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      96: putfield      #58                 // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
      99: aload_0
     100: new           #139                // class java/util/concurrent/CountDownLatch
     103: dup
     104: iconst_1
     105: invokespecial #140                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     108: putfield      #141                // Field terminatedLatch:Ljava/util/concurrent/CountDownLatch;
     111: aload_0
     112: getstatic     #142                // Field io/grpc/internal/ManagedChannelImpl$ResolutionState.NO_RESOLUTION:Lio/grpc/internal/ManagedChannelImpl$ResolutionState;
     115: putfield      #11                 // Field lastResolutionState:Lio/grpc/internal/ManagedChannelImpl$ResolutionState;
     118: aload_0
     119: getstatic     #7                  // Field EMPTY_SERVICE_CONFIG:Lio/grpc/internal/ManagedChannelServiceConfig;
     122: putfield      #55                 // Field lastServiceConfig:Lio/grpc/internal/ManagedChannelServiceConfig;
     125: aload_0
     126: iconst_0
     127: putfield      #5                  // Field serviceConfigUpdated:Z
     130: aload_0
     131: new           #143                // class io/grpc/internal/RetriableStream$ChannelBufferMeter
     134: dup
     135: invokespecial #144                // Method io/grpc/internal/RetriableStream$ChannelBufferMeter."<init>":()V
     138: putfield      #54                 // Field channelBufferUsed:Lio/grpc/internal/RetriableStream$ChannelBufferMeter;
     141: aload_0
     142: new           #145                // class io/grpc/internal/ManagedChannelImpl$DelayedTransportListener
     145: dup
     146: aload_0
     147: aconst_null
     148: invokespecial #146                // Method io/grpc/internal/ManagedChannelImpl$DelayedTransportListener."<init>":(Lio/grpc/internal/ManagedChannelImpl;Lio/grpc/internal/ManagedChannelImpl$1;)V
     151: putfield      #147                // Field delayedTransportListener:Lio/grpc/internal/ManagedClientTransport$Listener;
     154: aload_0
     155: new           #148                // class io/grpc/internal/ManagedChannelImpl$IdleModeStateAggregator
     158: dup
     159: aload_0
     160: aconst_null
     161: invokespecial #149                // Method io/grpc/internal/ManagedChannelImpl$IdleModeStateAggregator."<init>":(Lio/grpc/internal/ManagedChannelImpl;Lio/grpc/internal/ManagedChannelImpl$1;)V
     164: putfield      #95                 // Field inUseStateAggregator:Lio/grpc/internal/InUseStateAggregator;
     167: aload_0
     168: new           #150                // class io/grpc/internal/ManagedChannelImpl$ChannelStreamProvider
     171: dup
     172: aload_0
     173: aconst_null
     174: invokespecial #151                // Method io/grpc/internal/ManagedChannelImpl$ChannelStreamProvider."<init>":(Lio/grpc/internal/ManagedChannelImpl;Lio/grpc/internal/ManagedChannelImpl$1;)V
     177: putfield      #39                 // Field transportProvider:Lio/grpc/internal/ClientCallImpl$ClientStreamProvider;
     180: aload_0
     181: aload_1
     182: getfield      #152                // Field io/grpc/internal/ManagedChannelImplBuilder.target:Ljava/lang/String;
     185: ldc           #153                // String target
     187: invokestatic  #154                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     190: checkcast     #155                // class java/lang/String
     193: putfield      #65                 // Field target:Ljava/lang/String;
     196: aload_0
     197: ldc           #156                // String Channel
     199: aload_0
     200: getfield      #65                 // Field target:Ljava/lang/String;
     203: invokestatic  #157                // Method io/grpc/InternalLogId.allocate:(Ljava/lang/String;Ljava/lang/String;)Lio/grpc/InternalLogId;
     206: putfield      #82                 // Field logId:Lio/grpc/InternalLogId;
     209: aload_0
     210: aload         7
     212: ldc           #158                // String timeProvider
     214: invokestatic  #154                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     217: checkcast     #159                // class io/grpc/internal/TimeProvider
     220: putfield      #27                 // Field timeProvider:Lio/grpc/internal/TimeProvider;
     223: aload_0
     224: aload_1
     225: getfield      #160                // Field io/grpc/internal/ManagedChannelImplBuilder.executorPool:Lio/grpc/internal/ObjectPool;
     228: ldc           #161                // String executorPool
     230: invokestatic  #154                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     233: checkcast     #162                // class io/grpc/internal/ObjectPool
     236: putfield      #163                // Field executorPool:Lio/grpc/internal/ObjectPool;
     239: aload_0
     240: aload_0
     241: getfield      #163                // Field executorPool:Lio/grpc/internal/ObjectPool;
     244: invokeinterface #164,  1          // InterfaceMethod io/grpc/internal/ObjectPool.getObject:()Ljava/lang/Object;
     249: ldc           #165                // String executor
     251: invokestatic  #154                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     254: checkcast     #166                // class java/util/concurrent/Executor
     257: putfield      #34                 // Field executor:Ljava/util/concurrent/Executor;
     260: aload_0
     261: aload_1
     262: getfield      #167                // Field io/grpc/internal/ManagedChannelImplBuilder.channelCredentials:Lio/grpc/ChannelCredentials;
     265: putfield      #13                 // Field originalChannelCreds:Lio/grpc/ChannelCredentials;
     268: aload_0
     269: aload_2
     270: putfield      #16                 // Field originalTransportFactory:Lio/grpc/internal/ClientTransportFactory;
     273: aload_0
     274: new           #168                // class io/grpc/internal/CallCredentialsApplyingTransportFactory
     277: dup
     278: aload_2
     279: aload_1
     280: getfield      #169                // Field io/grpc/internal/ManagedChannelImplBuilder.callCredentials:Lio/grpc/CallCredentials;
     283: aload_0
     284: getfield      #34                 // Field executor:Ljava/util/concurrent/Executor;
     287: invokespecial #170                // Method io/grpc/internal/CallCredentialsApplyingTransportFactory."<init>":(Lio/grpc/internal/ClientTransportFactory;Lio/grpc/CallCredentials;Ljava/util/concurrent/Executor;)V
     290: putfield      #50                 // Field transportFactory:Lio/grpc/internal/ClientTransportFactory;
     293: aload_0
     294: new           #168                // class io/grpc/internal/CallCredentialsApplyingTransportFactory
     297: dup
     298: aload_2
     299: aconst_null
     300: aload_0
     301: getfield      #34                 // Field executor:Ljava/util/concurrent/Executor;
     304: invokespecial #170                // Method io/grpc/internal/CallCredentialsApplyingTransportFactory."<init>":(Lio/grpc/internal/ClientTransportFactory;Lio/grpc/CallCredentials;Ljava/util/concurrent/Executor;)V
     307: putfield      #24                 // Field oobTransportFactory:Lio/grpc/internal/ClientTransportFactory;
     310: aload_0
     311: new           #171                // class io/grpc/internal/ManagedChannelImpl$RestrictedScheduledExecutor
     314: dup
     315: aload_0
     316: getfield      #50                 // Field transportFactory:Lio/grpc/internal/ClientTransportFactory;
     319: invokeinterface #172,  1          // InterfaceMethod io/grpc/internal/ClientTransportFactory.getScheduledExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
     324: aconst_null
     325: invokespecial #173                // Method io/grpc/internal/ManagedChannelImpl$RestrictedScheduledExecutor."<init>":(Ljava/util/concurrent/ScheduledExecutorService;Lio/grpc/internal/ManagedChannelImpl$1;)V
     328: putfield      #35                 // Field scheduledExecutor:Lio/grpc/internal/ManagedChannelImpl$RestrictedScheduledExecutor;
     331: aload_0
     332: aload_1
     333: getfield      #174                // Field io/grpc/internal/ManagedChannelImplBuilder.maxTraceEvents:I
     336: putfield      #26                 // Field maxTraceEvents:I
     339: aload_0
     340: new           #175                // class io/grpc/internal/ChannelTracer
     343: dup
     344: aload_0
     345: getfield      #82                 // Field logId:Lio/grpc/InternalLogId;
     348: aload_1
     349: getfield      #174                // Field io/grpc/internal/ManagedChannelImplBuilder.maxTraceEvents:I
     352: aload         7
     354: invokeinterface #176,  1          // InterfaceMethod io/grpc/internal/TimeProvider.currentTimeNanos:()J
     359: new           #177                // class java/lang/StringBuilder
     362: dup
     363: invokespecial #178                // Method java/lang/StringBuilder."<init>":()V
     366: ldc           #179                // String Channel for \'
     368: invokevirtual #180                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     371: aload_0
     372: getfield      #65                 // Field target:Ljava/lang/String;
     375: invokevirtual #180                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     378: ldc           #181                // String \'
     380: invokevirtual #180                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     383: invokevirtual #182                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     386: invokespecial #183                // Method io/grpc/internal/ChannelTracer."<init>":(Lio/grpc/InternalLogId;IJLjava/lang/String;)V
     389: putfield      #67                 // Field channelTracer:Lio/grpc/internal/ChannelTracer;
     392: aload_0
     393: new           #184                // class io/grpc/internal/ChannelLoggerImpl
     396: dup
     397: aload_0
     398: getfield      #67                 // Field channelTracer:Lio/grpc/internal/ChannelTracer;
     401: aload         7
     403: invokespecial #185                // Method io/grpc/internal/ChannelLoggerImpl."<init>":(Lio/grpc/internal/ChannelTracer;Lio/grpc/internal/TimeProvider;)V
     406: putfield      #47                 // Field channelLogger:Lio/grpc/ChannelLogger;
     409: aload_1
     410: getfield      #186                // Field io/grpc/internal/ManagedChannelImplBuilder.proxyDetector:Lio/grpc/ProxyDetector;
     413: ifnull        423
     416: aload_1
     417: getfield      #186                // Field io/grpc/internal/ManagedChannelImplBuilder.proxyDetector:Lio/grpc/ProxyDetector;
     420: goto          426
     423: getstatic     #187                // Field io/grpc/internal/GrpcUtil.DEFAULT_PROXY_DETECTOR:Lio/grpc/ProxyDetector;
     426: astore        8
     428: aload_0
     429: aload_1
     430: getfield      #188                // Field io/grpc/internal/ManagedChannelImplBuilder.retryEnabled:Z
     433: putfield      #56                 // Field retryEnabled:Z
     436: aload_0
     437: new           #189                // class io/grpc/internal/AutoConfiguredLoadBalancerFactory
     440: dup
     441: aload_1
     442: getfield      #190                // Field io/grpc/internal/ManagedChannelImplBuilder.defaultLbPolicy:Ljava/lang/String;
     445: invokespecial #191                // Method io/grpc/internal/AutoConfiguredLoadBalancerFactory."<init>":(Ljava/lang/String;)V
     448: putfield      #102                // Field loadBalancerFactory:Lio/grpc/internal/AutoConfiguredLoadBalancerFactory;
     451: aload_0
     452: new           #192                // class io/grpc/internal/ManagedChannelImpl$ExecutorHolder
     455: dup
     456: aload_1
     457: getfield      #193                // Field io/grpc/internal/ManagedChannelImplBuilder.offloadExecutorPool:Lio/grpc/internal/ObjectPool;
     460: ldc           #194                // String offloadExecutorPool
     462: invokestatic  #154                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     465: checkcast     #162                // class io/grpc/internal/ObjectPool
     468: invokespecial #195                // Method io/grpc/internal/ManagedChannelImpl$ExecutorHolder."<init>":(Lio/grpc/internal/ObjectPool;)V
     471: putfield      #48                 // Field offloadExecutorHolder:Lio/grpc/internal/ManagedChannelImpl$ExecutorHolder;
     474: aload_0
     475: aload_1
     476: getfield      #196                // Field io/grpc/internal/ManagedChannelImplBuilder.nameResolverRegistry:Lio/grpc/NameResolverRegistry;
     479: putfield      #12                 // Field nameResolverRegistry:Lio/grpc/NameResolverRegistry;
     482: new           #197                // class io/grpc/internal/ScParser
     485: dup
     486: aload_0
     487: getfield      #56                 // Field retryEnabled:Z
     490: aload_1
     491: getfield      #198                // Field io/grpc/internal/ManagedChannelImplBuilder.maxRetryAttempts:I
     494: aload_1
     495: getfield      #199                // Field io/grpc/internal/ManagedChannelImplBuilder.maxHedgedAttempts:I
     498: aload_0
     499: getfield      #102                // Field loadBalancerFactory:Lio/grpc/internal/AutoConfiguredLoadBalancerFactory;
     502: invokespecial #200                // Method io/grpc/internal/ScParser."<init>":(ZIILio/grpc/internal/AutoConfiguredLoadBalancerFactory;)V
     505: astore        9
     507: aload_0
     508: invokestatic  #201                // Method io/grpc/NameResolver$Args.newBuilder:()Lio/grpc/NameResolver$Args$Builder;
     511: aload_1
     512: invokevirtual #202                // Method io/grpc/internal/ManagedChannelImplBuilder.getDefaultPort:()I
     515: invokevirtual #203                // Method io/grpc/NameResolver$Args$Builder.setDefaultPort:(I)Lio/grpc/NameResolver$Args$Builder;
     518: aload         8
     520: invokevirtual #204                // Method io/grpc/NameResolver$Args$Builder.setProxyDetector:(Lio/grpc/ProxyDetector;)Lio/grpc/NameResolver$Args$Builder;
     523: aload_0
     524: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
     527: invokevirtual #205                // Method io/grpc/NameResolver$Args$Builder.setSynchronizationContext:(Lio/grpc/SynchronizationContext;)Lio/grpc/NameResolver$Args$Builder;
     530: aload_0
     531: getfield      #35                 // Field scheduledExecutor:Lio/grpc/internal/ManagedChannelImpl$RestrictedScheduledExecutor;
     534: invokevirtual #206                // Method io/grpc/NameResolver$Args$Builder.setScheduledExecutorService:(Ljava/util/concurrent/ScheduledExecutorService;)Lio/grpc/NameResolver$Args$Builder;
     537: aload         9
     539: invokevirtual #207                // Method io/grpc/NameResolver$Args$Builder.setServiceConfigParser:(Lio/grpc/NameResolver$ServiceConfigParser;)Lio/grpc/NameResolver$Args$Builder;
     542: aload_0
     543: getfield      #47                 // Field channelLogger:Lio/grpc/ChannelLogger;
     546: invokevirtual #208                // Method io/grpc/NameResolver$Args$Builder.setChannelLogger:(Lio/grpc/ChannelLogger;)Lio/grpc/NameResolver$Args$Builder;
     549: new           #209                // class io/grpc/internal/ManagedChannelImpl$3
     552: dup
     553: aload_0
     554: invokespecial #210                // Method io/grpc/internal/ManagedChannelImpl$3."<init>":(Lio/grpc/internal/ManagedChannelImpl;)V
     557: invokevirtual #211                // Method io/grpc/NameResolver$Args$Builder.setOffloadExecutor:(Ljava/util/concurrent/Executor;)Lio/grpc/NameResolver$Args$Builder;
     560: invokevirtual #212                // Method io/grpc/NameResolver$Args$Builder.build:()Lio/grpc/NameResolver$Args;
     563: putfield      #15                 // Field nameResolverArgs:Lio/grpc/NameResolver$Args;
     566: aload_0
     567: aload_1
     568: getfield      #213                // Field io/grpc/internal/ManagedChannelImplBuilder.authorityOverride:Ljava/lang/String;
     571: putfield      #4                  // Field authorityOverride:Ljava/lang/String;
     574: aload_0
     575: aload_1
     576: getfield      #214                // Field io/grpc/internal/ManagedChannelImplBuilder.nameResolverFactory:Lio/grpc/NameResolver$Factory;
     579: putfield      #14                 // Field nameResolverFactory:Lio/grpc/NameResolver$Factory;
     582: aload_0
     583: aload_0
     584: getfield      #65                 // Field target:Ljava/lang/String;
     587: aload_0
     588: getfield      #4                  // Field authorityOverride:Ljava/lang/String;
     591: aload_0
     592: getfield      #14                 // Field nameResolverFactory:Lio/grpc/NameResolver$Factory;
     595: aload_0
     596: getfield      #15                 // Field nameResolverArgs:Lio/grpc/NameResolver$Args;
     599: invokestatic  #90                 // Method getNameResolver:(Ljava/lang/String;Ljava/lang/String;Lio/grpc/NameResolver$Factory;Lio/grpc/NameResolver$Args;)Lio/grpc/NameResolver;
     602: putfield      #87                 // Field nameResolver:Lio/grpc/NameResolver;
     605: aload_0
     606: aload         4
     608: ldc           #215                // String balancerRpcExecutorPool
     610: invokestatic  #154                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     613: checkcast     #162                // class io/grpc/internal/ObjectPool
     616: putfield      #25                 // Field balancerRpcExecutorPool:Lio/grpc/internal/ObjectPool;
     619: aload_0
     620: new           #192                // class io/grpc/internal/ManagedChannelImpl$ExecutorHolder
     623: dup
     624: aload         4
     626: invokespecial #195                // Method io/grpc/internal/ManagedChannelImpl$ExecutorHolder."<init>":(Lio/grpc/internal/ObjectPool;)V
     629: putfield      #3                  // Field balancerRpcExecutorHolder:Lio/grpc/internal/ManagedChannelImpl$ExecutorHolder;
     632: aload_0
     633: new           #216                // class io/grpc/internal/DelayedClientTransport
     636: dup
     637: aload_0
     638: getfield      #34                 // Field executor:Ljava/util/concurrent/Executor;
     641: aload_0
     642: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
     645: invokespecial #217                // Method io/grpc/internal/DelayedClientTransport."<init>":(Ljava/util/concurrent/Executor;Lio/grpc/SynchronizationContext;)V
     648: putfield      #57                 // Field delayedTransport:Lio/grpc/internal/DelayedClientTransport;
     651: aload_0
     652: getfield      #57                 // Field delayedTransport:Lio/grpc/internal/DelayedClientTransport;
     655: aload_0
     656: getfield      #147                // Field delayedTransportListener:Lio/grpc/internal/ManagedClientTransport$Listener;
     659: invokevirtual #218                // Method io/grpc/internal/DelayedClientTransport.start:(Lio/grpc/internal/ManagedClientTransport$Listener;)Ljava/lang/Runnable;
     662: pop
     663: aload_0
     664: aload_3
     665: putfield      #18                 // Field backoffPolicyProvider:Lio/grpc/internal/BackoffPolicy$Provider;
     668: aload_1
     669: getfield      #219                // Field io/grpc/internal/ManagedChannelImplBuilder.defaultServiceConfig:Ljava/util/Map;
     672: ifnull        732
     675: aload         9
     677: aload_1
     678: getfield      #219                // Field io/grpc/internal/ManagedChannelImplBuilder.defaultServiceConfig:Ljava/util/Map;
     681: invokevirtual #220                // Method io/grpc/internal/ScParser.parseServiceConfig:(Ljava/util/Map;)Lio/grpc/NameResolver$ConfigOrError;
     684: astore        10
     686: aload         10
     688: invokevirtual #221                // Method io/grpc/NameResolver$ConfigOrError.getError:()Lio/grpc/Status;
     691: ifnonnull     698
     694: iconst_1
     695: goto          699
     698: iconst_0
     699: ldc           #222                // String Default config is invalid: %s
     701: aload         10
     703: invokevirtual #221                // Method io/grpc/NameResolver$ConfigOrError.getError:()Lio/grpc/Status;
     706: invokestatic  #223                // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
     709: aload_0
     710: aload         10
     712: invokevirtual #224                // Method io/grpc/NameResolver$ConfigOrError.getConfig:()Ljava/lang/Object;
     715: checkcast     #225                // class io/grpc/internal/ManagedChannelServiceConfig
     718: putfield      #8                  // Field defaultServiceConfig:Lio/grpc/internal/ManagedChannelServiceConfig;
     721: aload_0
     722: aload_0
     723: getfield      #8                  // Field defaultServiceConfig:Lio/grpc/internal/ManagedChannelServiceConfig;
     726: putfield      #55                 // Field lastServiceConfig:Lio/grpc/internal/ManagedChannelServiceConfig;
     729: goto          737
     732: aload_0
     733: aconst_null
     734: putfield      #8                  // Field defaultServiceConfig:Lio/grpc/internal/ManagedChannelServiceConfig;
     737: aload_0
     738: aload_1
     739: getfield      #226                // Field io/grpc/internal/ManagedChannelImplBuilder.lookUpServiceConfig:Z
     742: putfield      #9                  // Field lookUpServiceConfig:Z
     745: aload_0
     746: new           #227                // class io/grpc/internal/ManagedChannelImpl$RealChannel
     749: dup
     750: aload_0
     751: aload_0
     752: getfield      #87                 // Field nameResolver:Lio/grpc/NameResolver;
     755: invokevirtual #228                // Method io/grpc/NameResolver.getServiceAuthority:()Ljava/lang/String;
     758: aconst_null
     759: invokespecial #229                // Method io/grpc/internal/ManagedChannelImpl$RealChannel."<init>":(Lio/grpc/internal/ManagedChannelImpl;Ljava/lang/String;Lio/grpc/internal/ManagedChannelImpl$1;)V
     762: putfield      #6                  // Field realChannel:Lio/grpc/internal/ManagedChannelImpl$RealChannel;
     765: aload_0
     766: getfield      #6                  // Field realChannel:Lio/grpc/internal/ManagedChannelImpl$RealChannel;
     769: astore        10
     771: aload_1
     772: getfield      #230                // Field io/grpc/internal/ManagedChannelImplBuilder.binlog:Lio/grpc/BinaryLog;
     775: ifnull        789
     778: aload_1
     779: getfield      #230                // Field io/grpc/internal/ManagedChannelImplBuilder.binlog:Lio/grpc/BinaryLog;
     782: aload         10
     784: invokevirtual #231                // Method io/grpc/BinaryLog.wrapChannel:(Lio/grpc/Channel;)Lio/grpc/Channel;
     787: astore        10
     789: aload_0
     790: aload         10
     792: aload         6
     794: invokestatic  #232                // Method io/grpc/ClientInterceptors.intercept:(Lio/grpc/Channel;Ljava/util/List;)Lio/grpc/Channel;
     797: putfield      #233                // Field interceptorChannel:Lio/grpc/Channel;
     800: aload_0
     801: aload         5
     803: ldc           #234                // String stopwatchSupplier
     805: invokestatic  #154                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     808: checkcast     #235                // class com/google/common/base/Supplier
     811: putfield      #17                 // Field stopwatchSupplier:Lcom/google/common/base/Supplier;
     814: aload_1
     815: getfield      #236                // Field io/grpc/internal/ManagedChannelImplBuilder.idleTimeoutMillis:J
     818: ldc2_w        #118                // long -1l
     821: lcmp
     822: ifne          836
     825: aload_0
     826: aload_1
     827: getfield      #236                // Field io/grpc/internal/ManagedChannelImplBuilder.idleTimeoutMillis:J
     830: putfield      #116                // Field idleTimeoutMillis:J
     833: goto          869
     836: aload_1
     837: getfield      #236                // Field io/grpc/internal/ManagedChannelImplBuilder.idleTimeoutMillis:J
     840: getstatic     #237                // Field io/grpc/internal/ManagedChannelImplBuilder.IDLE_MODE_MIN_TIMEOUT_MILLIS:J
     843: lcmp
     844: iflt          851
     847: iconst_1
     848: goto          852
     851: iconst_0
     852: ldc           #238                // String invalid idleTimeoutMillis %s
     854: aload_1
     855: getfield      #236                // Field io/grpc/internal/ManagedChannelImplBuilder.idleTimeoutMillis:J
     858: invokestatic  #239                // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;J)V
     861: aload_0
     862: aload_1
     863: getfield      #236                // Field io/grpc/internal/ManagedChannelImplBuilder.idleTimeoutMillis:J
     866: putfield      #116                // Field idleTimeoutMillis:J
     869: aload_0
     870: new           #240                // class io/grpc/internal/Rescheduler
     873: dup
     874: new           #241                // class io/grpc/internal/ManagedChannelImpl$IdleModeTimer
     877: dup
     878: aload_0
     879: aconst_null
     880: invokespecial #242                // Method io/grpc/internal/ManagedChannelImpl$IdleModeTimer."<init>":(Lio/grpc/internal/ManagedChannelImpl;Lio/grpc/internal/ManagedChannelImpl$1;)V
     883: aload_0
     884: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
     887: aload_0
     888: getfield      #50                 // Field transportFactory:Lio/grpc/internal/ClientTransportFactory;
     891: invokeinterface #172,  1          // InterfaceMethod io/grpc/internal/ClientTransportFactory.getScheduledExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
     896: aload         5
     898: invokeinterface #243,  1          // InterfaceMethod com/google/common/base/Supplier.get:()Ljava/lang/Object;
     903: checkcast     #244                // class com/google/common/base/Stopwatch
     906: invokespecial #245                // Method io/grpc/internal/Rescheduler."<init>":(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lcom/google/common/base/Stopwatch;)V
     909: putfield      #114                // Field idleTimer:Lio/grpc/internal/Rescheduler;
     912: aload_0
     913: aload_1
     914: getfield      #246                // Field io/grpc/internal/ManagedChannelImplBuilder.fullStreamDecompression:Z
     917: putfield      #40                 // Field fullStreamDecompression:Z
     920: aload_0
     921: aload_1
     922: getfield      #247                // Field io/grpc/internal/ManagedChannelImplBuilder.decompressorRegistry:Lio/grpc/DecompressorRegistry;
     925: ldc           #248                // String decompressorRegistry
     927: invokestatic  #154                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     930: checkcast     #249                // class io/grpc/DecompressorRegistry
     933: putfield      #41                 // Field decompressorRegistry:Lio/grpc/DecompressorRegistry;
     936: aload_0
     937: aload_1
     938: getfield      #250                // Field io/grpc/internal/ManagedChannelImplBuilder.compressorRegistry:Lio/grpc/CompressorRegistry;
     941: ldc           #251                // String compressorRegistry
     943: invokestatic  #154                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     946: checkcast     #252                // class io/grpc/CompressorRegistry
     949: putfield      #42                 // Field compressorRegistry:Lio/grpc/CompressorRegistry;
     952: aload_0
     953: aload_1
     954: getfield      #253                // Field io/grpc/internal/ManagedChannelImplBuilder.userAgent:Ljava/lang/String;
     957: putfield      #19                 // Field userAgent:Ljava/lang/String;
     960: aload_0
     961: aload_1
     962: getfield      #254                // Field io/grpc/internal/ManagedChannelImplBuilder.retryBufferSize:J
     965: putfield      #52                 // Field channelBufferLimit:J
     968: aload_0
     969: aload_1
     970: getfield      #255                // Field io/grpc/internal/ManagedChannelImplBuilder.perRpcBufferLimit:J
     973: putfield      #53                 // Field perRpcBufferLimit:J
     976: aload_0
     977: new           #256                // class io/grpc/internal/ManagedChannelImpl$1ChannelCallTracerFactory
     980: dup
     981: aload_0
     982: aload         7
     984: invokespecial #257                // Method io/grpc/internal/ManagedChannelImpl$1ChannelCallTracerFactory."<init>":(Lio/grpc/internal/ManagedChannelImpl;Lio/grpc/internal/TimeProvider;)V
     987: putfield      #23                 // Field callTracerFactory:Lio/grpc/internal/CallTracer$Factory;
     990: aload_0
     991: aload_0
     992: getfield      #23                 // Field callTracerFactory:Lio/grpc/internal/CallTracer$Factory;
     995: invokeinterface #258,  1          // InterfaceMethod io/grpc/internal/CallTracer$Factory.create:()Lio/grpc/internal/CallTracer;
    1000: putfield      #68                 // Field channelCallTracer:Lio/grpc/internal/CallTracer;
    1003: aload_0
    1004: aload_1
    1005: getfield      #259                // Field io/grpc/internal/ManagedChannelImplBuilder.channelz:Lio/grpc/InternalChannelz;
    1008: invokestatic  #260                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
    1011: checkcast     #261                // class io/grpc/InternalChannelz
    1014: putfield      #22                 // Field channelz:Lio/grpc/InternalChannelz;
    1017: aload_0
    1018: getfield      #22                 // Field channelz:Lio/grpc/InternalChannelz;
    1021: aload_0
    1022: invokevirtual #262                // Method io/grpc/InternalChannelz.addRootChannel:(Lio/grpc/InternalInstrumented;)V
    1025: aload_0
    1026: getfield      #9                  // Field lookUpServiceConfig:Z
    1029: ifne          1057
    1032: aload_0
    1033: getfield      #8                  // Field defaultServiceConfig:Lio/grpc/internal/ManagedChannelServiceConfig;
    1036: ifnull        1052
    1039: aload_0
    1040: getfield      #47                 // Field channelLogger:Lio/grpc/ChannelLogger;
    1043: getstatic     #97                 // Field io/grpc/ChannelLogger$ChannelLogLevel.INFO:Lio/grpc/ChannelLogger$ChannelLogLevel;
    1046: ldc_w         #263                // String Service config look-up disabled, using default service config
    1049: invokevirtual #99                 // Method io/grpc/ChannelLogger.log:(Lio/grpc/ChannelLogger$ChannelLogLevel;Ljava/lang/String;)V
    1052: aload_0
    1053: iconst_1
    1054: putfield      #5                  // Field serviceConfigUpdated:Z
    1057: return

  private static io.grpc.NameResolver getNameResolver(java.lang.String, io.grpc.NameResolver$Factory, io.grpc.NameResolver$Args);
    Code:
       0: aconst_null
       1: astore_3
       2: new           #177                // class java/lang/StringBuilder
       5: dup
       6: invokespecial #178                // Method java/lang/StringBuilder."<init>":()V
       9: astore        4
      11: new           #264                // class java/net/URI
      14: dup
      15: aload_0
      16: invokespecial #265                // Method java/net/URI."<init>":(Ljava/lang/String;)V
      19: astore_3
      20: goto          36
      23: astore        5
      25: aload         4
      27: aload         5
      29: invokevirtual #267                // Method java/net/URISyntaxException.getMessage:()Ljava/lang/String;
      32: invokevirtual #180                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: pop
      36: aload_3
      37: ifnull        56
      40: aload_1
      41: aload_3
      42: aload_2
      43: invokevirtual #268                // Method io/grpc/NameResolver$Factory.newNameResolver:(Ljava/net/URI;Lio/grpc/NameResolver$Args;)Lio/grpc/NameResolver;
      46: astore        5
      48: aload         5
      50: ifnull        56
      53: aload         5
      55: areturn
      56: getstatic     #269                // Field URI_PATTERN:Ljava/util/regex/Pattern;
      59: aload_0
      60: invokevirtual #270                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      63: invokevirtual #271                // Method java/util/regex/Matcher.matches:()Z
      66: ifne          136
      69: new           #264                // class java/net/URI
      72: dup
      73: aload_1
      74: invokevirtual #272                // Method io/grpc/NameResolver$Factory.getDefaultScheme:()Ljava/lang/String;
      77: ldc_w         #273                // String
      80: new           #177                // class java/lang/StringBuilder
      83: dup
      84: invokespecial #178                // Method java/lang/StringBuilder."<init>":()V
      87: ldc_w         #274                // String /
      90: invokevirtual #180                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: invokevirtual #180                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #182                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: aconst_null
     101: invokespecial #275                // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     104: astore_3
     105: goto          120
     108: astore        5
     110: new           #276                // class java/lang/IllegalArgumentException
     113: dup
     114: aload         5
     116: invokespecial #277                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     119: athrow
     120: aload_1
     121: aload_3
     122: aload_2
     123: invokevirtual #268                // Method io/grpc/NameResolver$Factory.newNameResolver:(Ljava/net/URI;Lio/grpc/NameResolver$Args;)Lio/grpc/NameResolver;
     126: astore        5
     128: aload         5
     130: ifnull        136
     133: aload         5
     135: areturn
     136: new           #276                // class java/lang/IllegalArgumentException
     139: dup
     140: ldc_w         #278                // String cannot find a NameResolver for %s%s
     143: iconst_2
     144: anewarray     #111                // class java/lang/Object
     147: dup
     148: iconst_0
     149: aload_0
     150: aastore
     151: dup
     152: iconst_1
     153: aload         4
     155: invokevirtual #279                // Method java/lang/StringBuilder.length:()I
     158: ifle          191
     161: new           #177                // class java/lang/StringBuilder
     164: dup
     165: invokespecial #178                // Method java/lang/StringBuilder."<init>":()V
     168: ldc_w         #280                // String  (
     171: invokevirtual #180                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload         4
     176: invokevirtual #281                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     179: ldc_w         #282                // String )
     182: invokevirtual #180                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: invokevirtual #182                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     188: goto          194
     191: ldc_w         #273                // String
     194: aastore
     195: invokestatic  #283                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     198: invokespecial #284                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     201: athrow
    Exception table:
       from    to  target type
          11    20    23   Class java/net/URISyntaxException
          69   105   108   Class java/net/URISyntaxException

  static io.grpc.NameResolver getNameResolver(java.lang.String, java.lang.String, io.grpc.NameResolver$Factory, io.grpc.NameResolver$Args);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokestatic  #285                // Method getNameResolver:(Ljava/lang/String;Lio/grpc/NameResolver$Factory;Lio/grpc/NameResolver$Args;)Lio/grpc/NameResolver;
       6: astore        4
       8: aload_1
       9: ifnonnull     15
      12: aload         4
      14: areturn
      15: new           #286                // class io/grpc/internal/ManagedChannelImpl$4
      18: dup
      19: aload         4
      21: aload_1
      22: invokespecial #287                // Method io/grpc/internal/ManagedChannelImpl$4."<init>":(Lio/grpc/NameResolver;Ljava/lang/String;)V
      25: areturn

  io.grpc.InternalConfigSelector getConfigSelector();
    Code:
       0: aload_0
       1: getfield      #6                  // Field realChannel:Lio/grpc/internal/ManagedChannelImpl$RealChannel;
       4: invokestatic  #288                // Method io/grpc/internal/ManagedChannelImpl$RealChannel.access$3000:(Lio/grpc/internal/ManagedChannelImpl$RealChannel;)Ljava/util/concurrent/atomic/AtomicReference;
       7: invokevirtual #289                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      10: checkcast     #290                // class io/grpc/InternalConfigSelector
      13: areturn

  public io.grpc.internal.ManagedChannelImpl shutdown();
    Code:
       0: aload_0
       1: getfield      #47                 // Field channelLogger:Lio/grpc/ChannelLogger;
       4: getstatic     #291                // Field io/grpc/ChannelLogger$ChannelLogLevel.DEBUG:Lio/grpc/ChannelLogger$ChannelLogLevel;
       7: ldc_w         #292                // String shutdown() called
      10: invokevirtual #99                 // Method io/grpc/ChannelLogger.log:(Lio/grpc/ChannelLogger$ChannelLogLevel;Ljava/lang/String;)V
      13: aload_0
      14: getfield      #58                 // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
      17: iconst_0
      18: iconst_1
      19: invokevirtual #293                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      22: ifne          27
      25: aload_0
      26: areturn
      27: aload_0
      28: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
      31: new           #294                // class io/grpc/internal/ManagedChannelImpl$1Shutdown
      34: dup
      35: aload_0
      36: invokespecial #295                // Method io/grpc/internal/ManagedChannelImpl$1Shutdown."<init>":(Lio/grpc/internal/ManagedChannelImpl;)V
      39: invokevirtual #81                 // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
      42: aload_0
      43: getfield      #6                  // Field realChannel:Lio/grpc/internal/ManagedChannelImpl$RealChannel;
      46: invokevirtual #296                // Method io/grpc/internal/ManagedChannelImpl$RealChannel.shutdown:()V
      49: aload_0
      50: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
      53: new           #297                // class io/grpc/internal/ManagedChannelImpl$1CancelIdleTimer
      56: dup
      57: aload_0
      58: invokespecial #298                // Method io/grpc/internal/ManagedChannelImpl$1CancelIdleTimer."<init>":(Lio/grpc/internal/ManagedChannelImpl;)V
      61: invokevirtual #81                 // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
      64: aload_0
      65: areturn

  public io.grpc.internal.ManagedChannelImpl shutdownNow();
    Code:
       0: aload_0
       1: getfield      #47                 // Field channelLogger:Lio/grpc/ChannelLogger;
       4: getstatic     #291                // Field io/grpc/ChannelLogger$ChannelLogLevel.DEBUG:Lio/grpc/ChannelLogger$ChannelLogLevel;
       7: ldc_w         #299                // String shutdownNow() called
      10: invokevirtual #99                 // Method io/grpc/ChannelLogger.log:(Lio/grpc/ChannelLogger$ChannelLogLevel;Ljava/lang/String;)V
      13: aload_0
      14: invokevirtual #300                // Method shutdown:()Lio/grpc/internal/ManagedChannelImpl;
      17: pop
      18: aload_0
      19: getfield      #6                  // Field realChannel:Lio/grpc/internal/ManagedChannelImpl$RealChannel;
      22: invokevirtual #301                // Method io/grpc/internal/ManagedChannelImpl$RealChannel.shutdownNow:()V
      25: aload_0
      26: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
      29: new           #302                // class io/grpc/internal/ManagedChannelImpl$1ShutdownNow
      32: dup
      33: aload_0
      34: invokespecial #303                // Method io/grpc/internal/ManagedChannelImpl$1ShutdownNow."<init>":(Lio/grpc/internal/ManagedChannelImpl;)V
      37: invokevirtual #81                 // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
      40: aload_0
      41: areturn

  void panic(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #94                 // Field panicMode:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #94                 // Field panicMode:Z
      13: aload_0
      14: iconst_1
      15: invokespecial #46                 // Method cancelIdleTimer:(Z)V
      18: aload_0
      19: iconst_0
      20: invokespecial #2                  // Method shutdownNameResolverAndLoadBalancer:(Z)V
      23: aload_0
      24: new           #304                // class io/grpc/internal/ManagedChannelImpl$1PanicSubchannelPicker
      27: dup
      28: aload_0
      29: aload_1
      30: invokespecial #305                // Method io/grpc/internal/ManagedChannelImpl$1PanicSubchannelPicker."<init>":(Lio/grpc/internal/ManagedChannelImpl;Ljava/lang/Throwable;)V
      33: invokespecial #28                 // Method updateSubchannelPicker:(Lio/grpc/LoadBalancer$SubchannelPicker;)V
      36: aload_0
      37: getfield      #47                 // Field channelLogger:Lio/grpc/ChannelLogger;
      40: getstatic     #306                // Field io/grpc/ChannelLogger$ChannelLogLevel.ERROR:Lio/grpc/ChannelLogger$ChannelLogLevel;
      43: ldc_w         #307                // String PANIC! Entering TRANSIENT_FAILURE
      46: invokevirtual #99                 // Method io/grpc/ChannelLogger.log:(Lio/grpc/ChannelLogger$ChannelLogLevel;Ljava/lang/String;)V
      49: aload_0
      50: getfield      #66                 // Field channelStateManager:Lio/grpc/internal/ConnectivityStateManager;
      53: getstatic     #308                // Field io/grpc/ConnectivityState.TRANSIENT_FAILURE:Lio/grpc/ConnectivityState;
      56: invokevirtual #110                // Method io/grpc/internal/ConnectivityStateManager.gotoState:(Lio/grpc/ConnectivityState;)V
      59: return

  boolean isInPanicMode();
    Code:
       0: aload_0
       1: getfield      #94                 // Field panicMode:Z
       4: ireturn

  private void updateSubchannelPicker(io.grpc.LoadBalancer$SubchannelPicker);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field subchannelPicker:Lio/grpc/LoadBalancer$SubchannelPicker;
       5: aload_0
       6: getfield      #57                 // Field delayedTransport:Lio/grpc/internal/DelayedClientTransport;
       9: aload_1
      10: invokevirtual #107                // Method io/grpc/internal/DelayedClientTransport.reprocess:(Lio/grpc/LoadBalancer$SubchannelPicker;)V
      13: return

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #58                 // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #93                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #141                // Field terminatedLatch:Ljava/util/concurrent/CountDownLatch;
       4: lload_1
       5: aload_3
       6: invokevirtual #309                // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
       9: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #38                 // Field terminated:Z
       4: ireturn

  public <ReqT, RespT> io.grpc.ClientCall<ReqT, RespT> newCall(io.grpc.MethodDescriptor<ReqT, RespT>, io.grpc.CallOptions);
    Code:
       0: aload_0
       1: getfield      #233                // Field interceptorChannel:Lio/grpc/Channel;
       4: aload_1
       5: aload_2
       6: invokevirtual #310                // Method io/grpc/Channel.newCall:(Lio/grpc/MethodDescriptor;Lio/grpc/CallOptions;)Lio/grpc/ClientCall;
       9: areturn

  public java.lang.String authority();
    Code:
       0: aload_0
       1: getfield      #233                // Field interceptorChannel:Lio/grpc/Channel;
       4: invokevirtual #311                // Method io/grpc/Channel.authority:()Ljava/lang/String;
       7: areturn

  private java.util.concurrent.Executor getCallExecutor(io.grpc.CallOptions);
    Code:
       0: aload_1
       1: invokevirtual #312                // Method io/grpc/CallOptions.getExecutor:()Ljava/util/concurrent/Executor;
       4: astore_2
       5: aload_2
       6: ifnonnull     14
       9: aload_0
      10: getfield      #34                 // Field executor:Ljava/util/concurrent/Executor;
      13: astore_2
      14: aload_2
      15: areturn

  private void maybeTerminateChannel();
    Code:
       0: aload_0
       1: getfield      #38                 // Field terminated:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #58                 // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
      12: invokevirtual #93                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      15: ifeq          112
      18: aload_0
      19: getfield      #64                 // Field subchannels:Ljava/util/Set;
      22: invokeinterface #313,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      27: ifeq          112
      30: aload_0
      31: getfield      #63                 // Field oobChannels:Ljava/util/Set;
      34: invokeinterface #313,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      39: ifeq          112
      42: aload_0
      43: getfield      #47                 // Field channelLogger:Lio/grpc/ChannelLogger;
      46: getstatic     #97                 // Field io/grpc/ChannelLogger$ChannelLogLevel.INFO:Lio/grpc/ChannelLogger$ChannelLogLevel;
      49: ldc_w         #314                // String Terminated
      52: invokevirtual #99                 // Method io/grpc/ChannelLogger.log:(Lio/grpc/ChannelLogger$ChannelLogLevel;Ljava/lang/String;)V
      55: aload_0
      56: getfield      #22                 // Field channelz:Lio/grpc/InternalChannelz;
      59: aload_0
      60: invokevirtual #315                // Method io/grpc/InternalChannelz.removeRootChannel:(Lio/grpc/InternalInstrumented;)V
      63: aload_0
      64: getfield      #163                // Field executorPool:Lio/grpc/internal/ObjectPool;
      67: aload_0
      68: getfield      #34                 // Field executor:Ljava/util/concurrent/Executor;
      71: invokeinterface #316,  2          // InterfaceMethod io/grpc/internal/ObjectPool.returnObject:(Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload_0
      78: getfield      #3                  // Field balancerRpcExecutorHolder:Lio/grpc/internal/ManagedChannelImpl$ExecutorHolder;
      81: invokevirtual #317                // Method io/grpc/internal/ManagedChannelImpl$ExecutorHolder.release:()V
      84: aload_0
      85: getfield      #48                 // Field offloadExecutorHolder:Lio/grpc/internal/ManagedChannelImpl$ExecutorHolder;
      88: invokevirtual #317                // Method io/grpc/internal/ManagedChannelImpl$ExecutorHolder.release:()V
      91: aload_0
      92: getfield      #50                 // Field transportFactory:Lio/grpc/internal/ClientTransportFactory;
      95: invokeinterface #318,  1          // InterfaceMethod io/grpc/internal/ClientTransportFactory.close:()V
     100: aload_0
     101: iconst_1
     102: putfield      #38                 // Field terminated:Z
     105: aload_0
     106: getfield      #141                // Field terminatedLatch:Ljava/util/concurrent/CountDownLatch;
     109: invokevirtual #319                // Method java/util/concurrent/CountDownLatch.countDown:()V
     112: return

  private void handleInternalSubchannelState(io.grpc.ConnectivityStateInfo);
    Code:
       0: aload_1
       1: invokevirtual #320                // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
       4: getstatic     #308                // Field io/grpc/ConnectivityState.TRANSIENT_FAILURE:Lio/grpc/ConnectivityState;
       7: if_acmpeq     20
      10: aload_1
      11: invokevirtual #320                // Method io/grpc/ConnectivityStateInfo.getState:()Lio/grpc/ConnectivityState;
      14: getstatic     #109                // Field io/grpc/ConnectivityState.IDLE:Lio/grpc/ConnectivityState;
      17: if_acmpne     24
      20: aload_0
      21: invokespecial #30                 // Method refreshAndResetNameResolution:()V
      24: return

  public io.grpc.ConnectivityState getState(boolean);
    Code:
       0: aload_0
       1: getfield      #66                 // Field channelStateManager:Lio/grpc/internal/ConnectivityStateManager;
       4: invokevirtual #321                // Method io/grpc/internal/ConnectivityStateManager.getState:()Lio/grpc/ConnectivityState;
       7: astore_2
       8: iload_1
       9: ifeq          34
      12: aload_2
      13: getstatic     #109                // Field io/grpc/ConnectivityState.IDLE:Lio/grpc/ConnectivityState;
      16: if_acmpne     34
      19: aload_0
      20: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
      23: new           #322                // class io/grpc/internal/ManagedChannelImpl$1RequestConnection
      26: dup
      27: aload_0
      28: invokespecial #323                // Method io/grpc/internal/ManagedChannelImpl$1RequestConnection."<init>":(Lio/grpc/internal/ManagedChannelImpl;)V
      31: invokevirtual #81                 // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
      34: aload_2
      35: areturn

  public void notifyWhenStateChanged(io.grpc.ConnectivityState, java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
       4: new           #324                // class io/grpc/internal/ManagedChannelImpl$1NotifyStateChanged
       7: dup
       8: aload_0
       9: aload_2
      10: aload_1
      11: invokespecial #325                // Method io/grpc/internal/ManagedChannelImpl$1NotifyStateChanged."<init>":(Lio/grpc/internal/ManagedChannelImpl;Ljava/lang/Runnable;Lio/grpc/ConnectivityState;)V
      14: invokevirtual #81                 // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
      17: return

  public void resetConnectBackoff();
    Code:
       0: aload_0
       1: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
       4: new           #326                // class io/grpc/internal/ManagedChannelImpl$1ResetConnectBackoff
       7: dup
       8: aload_0
       9: invokespecial #327                // Method io/grpc/internal/ManagedChannelImpl$1ResetConnectBackoff."<init>":(Lio/grpc/internal/ManagedChannelImpl;)V
      12: invokevirtual #81                 // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
      15: return

  public void enterIdle();
    Code:
       0: aload_0
       1: getfield      #78                 // Field syncContext:Lio/grpc/SynchronizationContext;
       4: new           #328                // class io/grpc/internal/ManagedChannelImpl$1PrepareToLoseNetworkRunnable
       7: dup
       8: aload_0
       9: invokespecial #329                // Method io/grpc/internal/ManagedChannelImpl$1PrepareToLoseNetworkRunnable."<init>":(Lio/grpc/internal/ManagedChannelImpl;)V
      12: invokevirtual #81                 // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
      15: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #330                // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       4: ldc_w         #331                // String logId
       7: aload_0
       8: getfield      #82                 // Field logId:Lio/grpc/InternalLogId;
      11: invokevirtual #332                // Method io/grpc/InternalLogId.getId:()J
      14: invokevirtual #333                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;J)Lcom/google/common/base/MoreObjects$ToStringHelper;
      17: ldc           #153                // String target
      19: aload_0
      20: getfield      #65                 // Field target:Ljava/lang/String;
      23: invokevirtual #334                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      26: invokevirtual #335                // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      29: areturn

  public io.grpc.ManagedChannel shutdownNow();
    Code:
       0: aload_0
       1: invokevirtual #336                // Method shutdownNow:()Lio/grpc/internal/ManagedChannelImpl;
       4: areturn

  public io.grpc.ManagedChannel shutdown();
    Code:
       0: aload_0
       1: invokevirtual #300                // Method shutdown:()Lio/grpc/internal/ManagedChannelImpl;
       4: areturn

  static io.grpc.internal.CallTracer access$300(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #68                 // Field channelCallTracer:Lio/grpc/internal/CallTracer;
       4: areturn

  static io.grpc.internal.ChannelTracer access$400(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #67                 // Field channelTracer:Lio/grpc/internal/ChannelTracer;
       4: areturn

  static io.grpc.internal.ConnectivityStateManager access$500(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #66                 // Field channelStateManager:Lio/grpc/internal/ConnectivityStateManager;
       4: areturn

  static java.lang.String access$600(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #65                 // Field target:Ljava/lang/String;
       4: areturn

  static java.util.Set access$700(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #64                 // Field subchannels:Ljava/util/Set;
       4: areturn

  static java.util.Set access$800(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #63                 // Field oobChannels:Ljava/util/Set;
       4: areturn

  static void access$900(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: invokespecial #62                 // Method enterIdleMode:()V
       4: return

  static io.grpc.SynchronizationContext$ScheduledHandle access$1102(io.grpc.internal.ManagedChannelImpl, io.grpc.SynchronizationContext$ScheduledHandle);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #61                 // Field scheduledNameResolverRefresh:Lio/grpc/SynchronizationContext$ScheduledHandle;
       6: areturn

  static void access$1200(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: invokespecial #60                 // Method refreshNameResolution:()V
       4: return

  static io.grpc.LoadBalancer$SubchannelPicker access$1300(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #59                 // Field subchannelPicker:Lio/grpc/LoadBalancer$SubchannelPicker;
       4: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$1400(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #58                 // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static io.grpc.internal.DelayedClientTransport access$1500(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #57                 // Field delayedTransport:Lio/grpc/internal/DelayedClientTransport;
       4: areturn

  static boolean access$1600(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #56                 // Field retryEnabled:Z
       4: ireturn

  static io.grpc.internal.ManagedChannelServiceConfig access$1700(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #55                 // Field lastServiceConfig:Lio/grpc/internal/ManagedChannelServiceConfig;
       4: areturn

  static io.grpc.internal.RetriableStream$ChannelBufferMeter access$1800(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #54                 // Field channelBufferUsed:Lio/grpc/internal/RetriableStream$ChannelBufferMeter;
       4: areturn

  static long access$1900(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #53                 // Field perRpcBufferLimit:J
       4: lreturn

  static long access$2000(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #52                 // Field channelBufferLimit:J
       4: lreturn

  static java.util.concurrent.Executor access$2100(io.grpc.internal.ManagedChannelImpl, io.grpc.CallOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #51                 // Method getCallExecutor:(Lio/grpc/CallOptions;)Ljava/util/concurrent/Executor;
       5: areturn

  static io.grpc.internal.ClientTransportFactory access$2200(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #50                 // Field transportFactory:Lio/grpc/internal/ClientTransportFactory;
       4: areturn

  static io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry access$2300(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #49                 // Field uncommittedRetriableStreamsRegistry:Lio/grpc/internal/ManagedChannelImpl$UncommittedRetriableStreamsRegistry;
       4: areturn

  static io.grpc.internal.ManagedChannelImpl$ExecutorHolder access$2700(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #48                 // Field offloadExecutorHolder:Lio/grpc/internal/ManagedChannelImpl$ExecutorHolder;
       4: areturn

  static io.grpc.ChannelLogger access$3100(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #47                 // Field channelLogger:Lio/grpc/ChannelLogger;
       4: areturn

  static void access$3200(io.grpc.internal.ManagedChannelImpl, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #46                 // Method cancelIdleTimer:(Z)V
       5: return

  static boolean access$3300(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #45                 // Field shutdownNowed:Z
       4: ireturn

  static boolean access$3302(io.grpc.internal.ManagedChannelImpl, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #45                 // Field shutdownNowed:Z
       6: ireturn

  static void access$3400(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: invokespecial #44                 // Method maybeShutdownNowSubchannels:()V
       4: return

  static io.grpc.InternalConfigSelector access$3500();
    Code:
       0: getstatic     #43                 // Field INITIAL_PENDING_SELECTOR:Lio/grpc/InternalConfigSelector;
       3: areturn

  static io.grpc.CompressorRegistry access$3600(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #42                 // Field compressorRegistry:Lio/grpc/CompressorRegistry;
       4: areturn

  static io.grpc.DecompressorRegistry access$3700(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #41                 // Field decompressorRegistry:Lio/grpc/DecompressorRegistry;
       4: areturn

  static boolean access$3800(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #40                 // Field fullStreamDecompression:Z
       4: ireturn

  static io.grpc.internal.ClientCallImpl$ClientStreamProvider access$3900(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #39                 // Field transportProvider:Lio/grpc/internal/ClientCallImpl$ClientStreamProvider;
       4: areturn

  static boolean access$4000(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #38                 // Field terminated:Z
       4: ireturn

  static java.util.Collection access$4200(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #37                 // Field pendingCalls:Ljava/util/Collection;
       4: areturn

  static java.util.Collection access$4202(io.grpc.internal.ManagedChannelImpl, java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #37                 // Field pendingCalls:Ljava/util/Collection;
       6: areturn

  static java.lang.Object access$4300(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #36                 // Field pendingCallsInUseObject:Ljava/lang/Object;
       4: areturn

  static io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor access$4400(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #35                 // Field scheduledExecutor:Lio/grpc/internal/ManagedChannelImpl$RestrictedScheduledExecutor;
       4: areturn

  static java.util.concurrent.Executor access$4600(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #34                 // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  static io.grpc.ClientCall access$4700();
    Code:
       0: getstatic     #33                 // Field NOOP_CALL:Lio/grpc/ClientCall;
       3: areturn

  static io.grpc.internal.ManagedChannelImpl$LbHelperImpl access$4900(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #32                 // Field lbHelper:Lio/grpc/internal/ManagedChannelImpl$LbHelperImpl;
       4: areturn

  static io.grpc.SynchronizationContext$ScheduledHandle access$1100(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #61                 // Field scheduledNameResolverRefresh:Lio/grpc/SynchronizationContext$ScheduledHandle;
       4: areturn

  static boolean access$5000(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #31                 // Field nameResolverStarted:Z
       4: ireturn

  static void access$5100(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method refreshAndResetNameResolution:()V
       4: return

  static boolean access$5200(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #29                 // Field terminating:Z
       4: ireturn

  static void access$5300(io.grpc.internal.ManagedChannelImpl, io.grpc.LoadBalancer$SubchannelPicker);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method updateSubchannelPicker:(Lio/grpc/LoadBalancer$SubchannelPicker;)V
       5: return

  static io.grpc.internal.TimeProvider access$5400(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #27                 // Field timeProvider:Lio/grpc/internal/TimeProvider;
       4: areturn

  static int access$5500(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #26                 // Field maxTraceEvents:I
       4: ireturn

  static io.grpc.internal.ObjectPool access$5600(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #25                 // Field balancerRpcExecutorPool:Lio/grpc/internal/ObjectPool;
       4: areturn

  static io.grpc.internal.ClientTransportFactory access$5700(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #24                 // Field oobTransportFactory:Lio/grpc/internal/ClientTransportFactory;
       4: areturn

  static io.grpc.internal.CallTracer$Factory access$5800(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #23                 // Field callTracerFactory:Lio/grpc/internal/CallTracer$Factory;
       4: areturn

  static io.grpc.InternalChannelz access$5900(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #22                 // Field channelz:Lio/grpc/InternalChannelz;
       4: areturn

  static void access$6000(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method maybeTerminateChannel:()V
       4: return

  static void access$6100(io.grpc.internal.ManagedChannelImpl, io.grpc.ConnectivityStateInfo);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method handleInternalSubchannelState:(Lio/grpc/ConnectivityStateInfo;)V
       5: return

  static java.lang.String access$6200(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #19                 // Field userAgent:Ljava/lang/String;
       4: areturn

  static io.grpc.internal.BackoffPolicy$Provider access$6300(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #18                 // Field backoffPolicyProvider:Lio/grpc/internal/BackoffPolicy$Provider;
       4: areturn

  static com.google.common.base.Supplier access$6400(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #17                 // Field stopwatchSupplier:Lcom/google/common/base/Supplier;
       4: areturn

  static io.grpc.internal.ClientTransportFactory access$6500(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #16                 // Field originalTransportFactory:Lio/grpc/internal/ClientTransportFactory;
       4: areturn

  static io.grpc.NameResolver$Args access$6600(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #15                 // Field nameResolverArgs:Lio/grpc/NameResolver$Args;
       4: areturn

  static io.grpc.NameResolver$Factory access$6700(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #14                 // Field nameResolverFactory:Lio/grpc/NameResolver$Factory;
       4: areturn

  static io.grpc.ChannelCredentials access$6800(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #13                 // Field originalChannelCreds:Lio/grpc/ChannelCredentials;
       4: areturn

  static io.grpc.NameResolverRegistry access$6900(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #12                 // Field nameResolverRegistry:Lio/grpc/NameResolverRegistry;
       4: areturn

  static io.grpc.internal.ManagedChannelImpl$ResolutionState access$7000(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #11                 // Field lastResolutionState:Lio/grpc/internal/ManagedChannelImpl$ResolutionState;
       4: areturn

  static io.grpc.internal.ManagedChannelImpl$ResolutionState access$7002(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.ManagedChannelImpl$ResolutionState);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #11                 // Field lastResolutionState:Lio/grpc/internal/ManagedChannelImpl$ResolutionState;
       6: areturn

  static io.grpc.internal.BackoffPolicy access$7102(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.BackoffPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #10                 // Field nameResolverBackoffPolicy:Lio/grpc/internal/BackoffPolicy;
       6: areturn

  static boolean access$7200(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #9                  // Field lookUpServiceConfig:Z
       4: ireturn

  static io.grpc.internal.ManagedChannelServiceConfig access$7300(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #8                  // Field defaultServiceConfig:Lio/grpc/internal/ManagedChannelServiceConfig;
       4: areturn

  static io.grpc.internal.ManagedChannelServiceConfig access$7400();
    Code:
       0: getstatic     #7                  // Field EMPTY_SERVICE_CONFIG:Lio/grpc/internal/ManagedChannelServiceConfig;
       3: areturn

  static io.grpc.internal.ManagedChannelImpl$RealChannel access$7500(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field realChannel:Lio/grpc/internal/ManagedChannelImpl$RealChannel;
       4: areturn

  static boolean access$7600(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field serviceConfigUpdated:Z
       4: ireturn

  static io.grpc.internal.ManagedChannelServiceConfig access$1702(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.ManagedChannelServiceConfig);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #55                 // Field lastServiceConfig:Lio/grpc/internal/ManagedChannelServiceConfig;
       6: areturn

  static boolean access$7602(io.grpc.internal.ManagedChannelImpl, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #5                  // Field serviceConfigUpdated:Z
       6: ireturn

  static io.grpc.internal.BackoffPolicy access$7100(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #10                 // Field nameResolverBackoffPolicy:Lio/grpc/internal/BackoffPolicy;
       4: areturn

  static java.lang.String access$7800(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field authorityOverride:Ljava/lang/String;
       4: areturn

  static io.grpc.internal.ManagedChannelImpl$ExecutorHolder access$7900(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field balancerRpcExecutorHolder:Lio/grpc/internal/ManagedChannelImpl$ExecutorHolder;
       4: areturn

  static boolean access$5202(io.grpc.internal.ManagedChannelImpl, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #29                 // Field terminating:Z
       6: ireturn

  static void access$8000(io.grpc.internal.ManagedChannelImpl, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method shutdownNameResolverAndLoadBalancer:(Z)V
       5: return

  static void access$8100(io.grpc.internal.ManagedChannelImpl);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method rescheduleIdleTimer:()V
       4: return

  static {};
    Code:
       0: ldc           #117                // class io/grpc/internal/ManagedChannelImpl
       2: invokevirtual #337                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #338                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #339                // Field logger:Ljava/util/logging/Logger;
      11: ldc_w         #340                // String [a-zA-Z][a-zA-Z0-9+.-]*:/.*
      14: invokestatic  #341                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      17: putstatic     #269                // Field URI_PATTERN:Ljava/util/regex/Pattern;
      20: getstatic     #342                // Field io/grpc/Status.UNAVAILABLE:Lio/grpc/Status;
      23: ldc_w         #343                // String Channel shutdownNow invoked
      26: invokevirtual #344                // Method io/grpc/Status.withDescription:(Ljava/lang/String;)Lio/grpc/Status;
      29: putstatic     #73                 // Field SHUTDOWN_NOW_STATUS:Lio/grpc/Status;
      32: getstatic     #342                // Field io/grpc/Status.UNAVAILABLE:Lio/grpc/Status;
      35: ldc_w         #345                // String Channel shutdown invoked
      38: invokevirtual #344                // Method io/grpc/Status.withDescription:(Ljava/lang/String;)Lio/grpc/Status;
      41: putstatic     #346                // Field SHUTDOWN_STATUS:Lio/grpc/Status;
      44: getstatic     #342                // Field io/grpc/Status.UNAVAILABLE:Lio/grpc/Status;
      47: ldc_w         #347                // String Subchannel shutdown invoked
      50: invokevirtual #344                // Method io/grpc/Status.withDescription:(Ljava/lang/String;)Lio/grpc/Status;
      53: putstatic     #348                // Field SUBCHANNEL_SHUTDOWN_STATUS:Lio/grpc/Status;
      56: invokestatic  #349                // Method io/grpc/internal/ManagedChannelServiceConfig.empty:()Lio/grpc/internal/ManagedChannelServiceConfig;
      59: putstatic     #7                  // Field EMPTY_SERVICE_CONFIG:Lio/grpc/internal/ManagedChannelServiceConfig;
      62: new           #350                // class io/grpc/internal/ManagedChannelImpl$1
      65: dup
      66: invokespecial #351                // Method io/grpc/internal/ManagedChannelImpl$1."<init>":()V
      69: putstatic     #43                 // Field INITIAL_PENDING_SELECTOR:Lio/grpc/InternalConfigSelector;
      72: new           #352                // class io/grpc/internal/ManagedChannelImpl$5
      75: dup
      76: invokespecial #353                // Method io/grpc/internal/ManagedChannelImpl$5."<init>":()V
      79: putstatic     #33                 // Field NOOP_CALL:Lio/grpc/ClientCall;
      82: return
}
