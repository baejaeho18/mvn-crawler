Compiled from "KeepAliveManager.java"
public class io.grpc.internal.KeepAliveManager {
  private static final long MIN_KEEPALIVE_TIME_NANOS;

  private static final long MIN_KEEPALIVE_TIMEOUT_NANOS;

  private final java.util.concurrent.ScheduledExecutorService scheduler;

  private final com.google.common.base.Stopwatch stopwatch;

  private final io.grpc.internal.KeepAliveManager$KeepAlivePinger keepAlivePinger;

  private final boolean keepAliveDuringTransportIdle;

  private io.grpc.internal.KeepAliveManager$State state;

  private java.util.concurrent.ScheduledFuture<?> shutdownFuture;

  private java.util.concurrent.ScheduledFuture<?> pingFuture;

  private final java.lang.Runnable shutdown;

  private final java.lang.Runnable sendPing;

  private final long keepAliveTimeInNanos;

  private final long keepAliveTimeoutInNanos;

  public io.grpc.internal.KeepAliveManager(io.grpc.internal.KeepAliveManager$KeepAlivePinger, java.util.concurrent.ScheduledExecutorService, long, long, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #11                 // Method com/google/common/base/Stopwatch.createUnstarted:()Lcom/google/common/base/Stopwatch;
       6: lload_3
       7: lload         5
       9: iload         7
      11: invokespecial #12                 // Method "<init>":(Lio/grpc/internal/KeepAliveManager$KeepAlivePinger;Ljava/util/concurrent/ScheduledExecutorService;Lcom/google/common/base/Stopwatch;JJZ)V
      14: return

  io.grpc.internal.KeepAliveManager(io.grpc.internal.KeepAliveManager$KeepAlivePinger, java.util.concurrent.ScheduledExecutorService, com.google.common.base.Stopwatch, long, long, boolean);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #14                 // Field io/grpc/internal/KeepAliveManager$State.IDLE:Lio/grpc/internal/KeepAliveManager$State;
       8: putfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      11: aload_0
      12: new           #15                 // class io/grpc/internal/LogExceptionRunnable
      15: dup
      16: new           #16                 // class io/grpc/internal/KeepAliveManager$1
      19: dup
      20: aload_0
      21: invokespecial #17                 // Method io/grpc/internal/KeepAliveManager$1."<init>":(Lio/grpc/internal/KeepAliveManager;)V
      24: invokespecial #18                 // Method io/grpc/internal/LogExceptionRunnable."<init>":(Ljava/lang/Runnable;)V
      27: putfield      #6                  // Field shutdown:Ljava/lang/Runnable;
      30: aload_0
      31: new           #15                 // class io/grpc/internal/LogExceptionRunnable
      34: dup
      35: new           #19                 // class io/grpc/internal/KeepAliveManager$2
      38: dup
      39: aload_0
      40: invokespecial #20                 // Method io/grpc/internal/KeepAliveManager$2."<init>":(Lio/grpc/internal/KeepAliveManager;)V
      43: invokespecial #18                 // Method io/grpc/internal/LogExceptionRunnable."<init>":(Ljava/lang/Runnable;)V
      46: putfield      #3                  // Field sendPing:Ljava/lang/Runnable;
      49: aload_0
      50: aload_1
      51: ldc           #21                 // String keepAlivePinger
      53: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #23                 // class io/grpc/internal/KeepAliveManager$KeepAlivePinger
      59: putfield      #9                  // Field keepAlivePinger:Lio/grpc/internal/KeepAliveManager$KeepAlivePinger;
      62: aload_0
      63: aload_2
      64: ldc           #24                 // String scheduler
      66: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #25                 // class java/util/concurrent/ScheduledExecutorService
      72: putfield      #4                  // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
      75: aload_0
      76: aload_3
      77: ldc           #26                 // String stopwatch
      79: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: checkcast     #27                 // class com/google/common/base/Stopwatch
      85: putfield      #1                  // Field stopwatch:Lcom/google/common/base/Stopwatch;
      88: aload_0
      89: lload         4
      91: putfield      #2                  // Field keepAliveTimeInNanos:J
      94: aload_0
      95: lload         6
      97: putfield      #5                  // Field keepAliveTimeoutInNanos:J
     100: aload_0
     101: iload         8
     103: putfield      #28                 // Field keepAliveDuringTransportIdle:Z
     106: aload_3
     107: invokevirtual #29                 // Method com/google/common/base/Stopwatch.reset:()Lcom/google/common/base/Stopwatch;
     110: invokevirtual #30                 // Method com/google/common/base/Stopwatch.start:()Lcom/google/common/base/Stopwatch;
     113: pop
     114: return

  public synchronized void onTransportStarted();
    Code:
       0: aload_0
       1: getfield      #28                 // Field keepAliveDuringTransportIdle:Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #31                 // Method onTransportActive:()V
      11: return

  public synchronized void onDataReceived();
    Code:
       0: aload_0
       1: getfield      #1                  // Field stopwatch:Lcom/google/common/base/Stopwatch;
       4: invokevirtual #29                 // Method com/google/common/base/Stopwatch.reset:()Lcom/google/common/base/Stopwatch;
       7: invokevirtual #30                 // Method com/google/common/base/Stopwatch.start:()Lcom/google/common/base/Stopwatch;
      10: pop
      11: aload_0
      12: getfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      15: getstatic     #32                 // Field io/grpc/internal/KeepAliveManager$State.PING_SCHEDULED:Lio/grpc/internal/KeepAliveManager$State;
      18: if_acmpne     31
      21: aload_0
      22: getstatic     #33                 // Field io/grpc/internal/KeepAliveManager$State.PING_DELAYED:Lio/grpc/internal/KeepAliveManager$State;
      25: putfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      28: goto          135
      31: aload_0
      32: getfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      35: getstatic     #34                 // Field io/grpc/internal/KeepAliveManager$State.PING_SENT:Lio/grpc/internal/KeepAliveManager$State;
      38: if_acmpeq     51
      41: aload_0
      42: getfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      45: getstatic     #35                 // Field io/grpc/internal/KeepAliveManager$State.IDLE_AND_PING_SENT:Lio/grpc/internal/KeepAliveManager$State;
      48: if_acmpne     135
      51: aload_0
      52: getfield      #7                  // Field shutdownFuture:Ljava/util/concurrent/ScheduledFuture;
      55: ifnull        69
      58: aload_0
      59: getfield      #7                  // Field shutdownFuture:Ljava/util/concurrent/ScheduledFuture;
      62: iconst_0
      63: invokeinterface #36,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      68: pop
      69: aload_0
      70: getfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      73: getstatic     #35                 // Field io/grpc/internal/KeepAliveManager$State.IDLE_AND_PING_SENT:Lio/grpc/internal/KeepAliveManager$State;
      76: if_acmpne     87
      79: aload_0
      80: getstatic     #14                 // Field io/grpc/internal/KeepAliveManager$State.IDLE:Lio/grpc/internal/KeepAliveManager$State;
      83: putfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      86: return
      87: aload_0
      88: getstatic     #32                 // Field io/grpc/internal/KeepAliveManager$State.PING_SCHEDULED:Lio/grpc/internal/KeepAliveManager$State;
      91: putfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      94: aload_0
      95: getfield      #8                  // Field pingFuture:Ljava/util/concurrent/ScheduledFuture;
      98: ifnonnull     105
     101: iconst_1
     102: goto          106
     105: iconst_0
     106: ldc           #37                 // String There should be no outstanding pingFuture
     108: invokestatic  #38                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
     111: aload_0
     112: aload_0
     113: getfield      #4                  // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
     116: aload_0
     117: getfield      #3                  // Field sendPing:Ljava/lang/Runnable;
     120: aload_0
     121: getfield      #2                  // Field keepAliveTimeInNanos:J
     124: getstatic     #39                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     127: invokeinterface #40,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     132: putfield      #8                  // Field pingFuture:Ljava/util/concurrent/ScheduledFuture;
     135: return

  public synchronized void onTransportActive();
    Code:
       0: aload_0
       1: getfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
       4: getstatic     #14                 // Field io/grpc/internal/KeepAliveManager$State.IDLE:Lio/grpc/internal/KeepAliveManager$State;
       7: if_acmpne     62
      10: aload_0
      11: getstatic     #32                 // Field io/grpc/internal/KeepAliveManager$State.PING_SCHEDULED:Lio/grpc/internal/KeepAliveManager$State;
      14: putfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      17: aload_0
      18: getfield      #8                  // Field pingFuture:Ljava/util/concurrent/ScheduledFuture;
      21: ifnonnull     79
      24: aload_0
      25: aload_0
      26: getfield      #4                  // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
      29: aload_0
      30: getfield      #3                  // Field sendPing:Ljava/lang/Runnable;
      33: aload_0
      34: getfield      #2                  // Field keepAliveTimeInNanos:J
      37: aload_0
      38: getfield      #1                  // Field stopwatch:Lcom/google/common/base/Stopwatch;
      41: getstatic     #39                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      44: invokevirtual #41                 // Method com/google/common/base/Stopwatch.elapsed:(Ljava/util/concurrent/TimeUnit;)J
      47: lsub
      48: getstatic     #39                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      51: invokeinterface #40,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      56: putfield      #8                  // Field pingFuture:Ljava/util/concurrent/ScheduledFuture;
      59: goto          79
      62: aload_0
      63: getfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      66: getstatic     #35                 // Field io/grpc/internal/KeepAliveManager$State.IDLE_AND_PING_SENT:Lio/grpc/internal/KeepAliveManager$State;
      69: if_acmpne     79
      72: aload_0
      73: getstatic     #34                 // Field io/grpc/internal/KeepAliveManager$State.PING_SENT:Lio/grpc/internal/KeepAliveManager$State;
      76: putfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      79: return

  public synchronized void onTransportIdle();
    Code:
       0: aload_0
       1: getfield      #28                 // Field keepAliveDuringTransportIdle:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      12: getstatic     #32                 // Field io/grpc/internal/KeepAliveManager$State.PING_SCHEDULED:Lio/grpc/internal/KeepAliveManager$State;
      15: if_acmpeq     28
      18: aload_0
      19: getfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      22: getstatic     #33                 // Field io/grpc/internal/KeepAliveManager$State.PING_DELAYED:Lio/grpc/internal/KeepAliveManager$State;
      25: if_acmpne     35
      28: aload_0
      29: getstatic     #14                 // Field io/grpc/internal/KeepAliveManager$State.IDLE:Lio/grpc/internal/KeepAliveManager$State;
      32: putfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      35: aload_0
      36: getfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      39: getstatic     #34                 // Field io/grpc/internal/KeepAliveManager$State.PING_SENT:Lio/grpc/internal/KeepAliveManager$State;
      42: if_acmpne     52
      45: aload_0
      46: getstatic     #35                 // Field io/grpc/internal/KeepAliveManager$State.IDLE_AND_PING_SENT:Lio/grpc/internal/KeepAliveManager$State;
      49: putfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      52: return

  public synchronized void onTransportTermination();
    Code:
       0: aload_0
       1: getfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
       4: getstatic     #42                 // Field io/grpc/internal/KeepAliveManager$State.DISCONNECTED:Lio/grpc/internal/KeepAliveManager$State;
       7: if_acmpeq     58
      10: aload_0
      11: getstatic     #42                 // Field io/grpc/internal/KeepAliveManager$State.DISCONNECTED:Lio/grpc/internal/KeepAliveManager$State;
      14: putfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
      17: aload_0
      18: getfield      #7                  // Field shutdownFuture:Ljava/util/concurrent/ScheduledFuture;
      21: ifnull        35
      24: aload_0
      25: getfield      #7                  // Field shutdownFuture:Ljava/util/concurrent/ScheduledFuture;
      28: iconst_0
      29: invokeinterface #36,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      34: pop
      35: aload_0
      36: getfield      #8                  // Field pingFuture:Ljava/util/concurrent/ScheduledFuture;
      39: ifnull        58
      42: aload_0
      43: getfield      #8                  // Field pingFuture:Ljava/util/concurrent/ScheduledFuture;
      46: iconst_0
      47: invokeinterface #36,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      52: pop
      53: aload_0
      54: aconst_null
      55: putfield      #8                  // Field pingFuture:Ljava/util/concurrent/ScheduledFuture;
      58: return

  public static long clampKeepAliveTimeInNanos(long);
    Code:
       0: lload_0
       1: getstatic     #43                 // Field MIN_KEEPALIVE_TIME_NANOS:J
       4: invokestatic  #44                 // Method java/lang/Math.max:(JJ)J
       7: lreturn

  public static long clampKeepAliveTimeoutInNanos(long);
    Code:
       0: lload_0
       1: getstatic     #45                 // Field MIN_KEEPALIVE_TIMEOUT_NANOS:J
       4: invokestatic  #44                 // Method java/lang/Math.max:(JJ)J
       7: lreturn

  static io.grpc.internal.KeepAliveManager$State access$000(io.grpc.internal.KeepAliveManager);
    Code:
       0: aload_0
       1: getfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
       4: areturn

  static io.grpc.internal.KeepAliveManager$State access$002(io.grpc.internal.KeepAliveManager, io.grpc.internal.KeepAliveManager$State);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #10                 // Field state:Lio/grpc/internal/KeepAliveManager$State;
       6: areturn

  static io.grpc.internal.KeepAliveManager$KeepAlivePinger access$100(io.grpc.internal.KeepAliveManager);
    Code:
       0: aload_0
       1: getfield      #9                  // Field keepAlivePinger:Lio/grpc/internal/KeepAliveManager$KeepAlivePinger;
       4: areturn

  static java.util.concurrent.ScheduledFuture access$202(io.grpc.internal.KeepAliveManager, java.util.concurrent.ScheduledFuture);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #8                  // Field pingFuture:Ljava/util/concurrent/ScheduledFuture;
       6: areturn

  static java.util.concurrent.ScheduledFuture access$302(io.grpc.internal.KeepAliveManager, java.util.concurrent.ScheduledFuture);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field shutdownFuture:Ljava/util/concurrent/ScheduledFuture;
       6: areturn

  static java.lang.Runnable access$400(io.grpc.internal.KeepAliveManager);
    Code:
       0: aload_0
       1: getfield      #6                  // Field shutdown:Ljava/lang/Runnable;
       4: areturn

  static long access$500(io.grpc.internal.KeepAliveManager);
    Code:
       0: aload_0
       1: getfield      #5                  // Field keepAliveTimeoutInNanos:J
       4: lreturn

  static java.util.concurrent.ScheduledExecutorService access$600(io.grpc.internal.KeepAliveManager);
    Code:
       0: aload_0
       1: getfield      #4                  // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  static java.lang.Runnable access$700(io.grpc.internal.KeepAliveManager);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sendPing:Ljava/lang/Runnable;
       4: areturn

  static long access$800(io.grpc.internal.KeepAliveManager);
    Code:
       0: aload_0
       1: getfield      #2                  // Field keepAliveTimeInNanos:J
       4: lreturn

  static com.google.common.base.Stopwatch access$900(io.grpc.internal.KeepAliveManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field stopwatch:Lcom/google/common/base/Stopwatch;
       4: areturn

  static {};
    Code:
       0: getstatic     #46                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       3: ldc2_w        #47                 // long 10l
       6: invokevirtual #49                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       9: putstatic     #43                 // Field MIN_KEEPALIVE_TIME_NANOS:J
      12: getstatic     #50                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      15: ldc2_w        #47                 // long 10l
      18: invokevirtual #49                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      21: putstatic     #45                 // Field MIN_KEEPALIVE_TIMEOUT_NANOS:J
      24: return
}
