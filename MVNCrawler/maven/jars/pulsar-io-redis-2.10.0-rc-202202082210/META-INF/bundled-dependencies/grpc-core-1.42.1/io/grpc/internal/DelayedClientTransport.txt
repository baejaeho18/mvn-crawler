Compiled from "DelayedClientTransport.java"
final class io.grpc.internal.DelayedClientTransport implements io.grpc.internal.ManagedClientTransport {
  private final io.grpc.InternalLogId logId;

  private final java.lang.Object lock;

  private final java.util.concurrent.Executor defaultAppExecutor;

  private final io.grpc.SynchronizationContext syncContext;

  private java.lang.Runnable reportTransportInUse;

  private java.lang.Runnable reportTransportNotInUse;

  private java.lang.Runnable reportTransportTerminated;

  private io.grpc.internal.ManagedClientTransport$Listener listener;

  private java.util.Collection<io.grpc.internal.DelayedClientTransport$PendingStream> pendingStreams;

  private io.grpc.Status shutdownStatus;

  private io.grpc.LoadBalancer$SubchannelPicker lastPicker;

  private long lastPickerVersion;

  io.grpc.internal.DelayedClientTransport(java.util.concurrent.Executor, io.grpc.SynchronizationContext);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #9                  // class io/grpc/internal/DelayedClientTransport
       7: aconst_null
       8: invokestatic  #10                 // Method io/grpc/InternalLogId.allocate:(Ljava/lang/Class;Ljava/lang/String;)Lio/grpc/InternalLogId;
      11: putfield      #11                 // Field logId:Lio/grpc/InternalLogId;
      14: aload_0
      15: new           #12                 // class java/lang/Object
      18: dup
      19: invokespecial #8                  // Method java/lang/Object."<init>":()V
      22: putfield      #6                  // Field lock:Ljava/lang/Object;
      25: aload_0
      26: new           #13                 // class java/util/LinkedHashSet
      29: dup
      30: invokespecial #14                 // Method java/util/LinkedHashSet."<init>":()V
      33: putfield      #4                  // Field pendingStreams:Ljava/util/Collection;
      36: aload_0
      37: aload_1
      38: putfield      #15                 // Field defaultAppExecutor:Ljava/util/concurrent/Executor;
      41: aload_0
      42: aload_2
      43: putfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
      46: return

  public final java.lang.Runnable start(io.grpc.internal.ManagedClientTransport$Listener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field listener:Lio/grpc/internal/ManagedClientTransport$Listener;
       5: aload_0
       6: new           #16                 // class io/grpc/internal/DelayedClientTransport$1
       9: dup
      10: aload_0
      11: aload_1
      12: invokespecial #17                 // Method io/grpc/internal/DelayedClientTransport$1."<init>":(Lio/grpc/internal/DelayedClientTransport;Lio/grpc/internal/ManagedClientTransport$Listener;)V
      15: putfield      #18                 // Field reportTransportInUse:Ljava/lang/Runnable;
      18: aload_0
      19: new           #19                 // class io/grpc/internal/DelayedClientTransport$2
      22: dup
      23: aload_0
      24: aload_1
      25: invokespecial #20                 // Method io/grpc/internal/DelayedClientTransport$2."<init>":(Lio/grpc/internal/DelayedClientTransport;Lio/grpc/internal/ManagedClientTransport$Listener;)V
      28: putfield      #3                  // Field reportTransportNotInUse:Ljava/lang/Runnable;
      31: aload_0
      32: new           #21                 // class io/grpc/internal/DelayedClientTransport$3
      35: dup
      36: aload_0
      37: aload_1
      38: invokespecial #22                 // Method io/grpc/internal/DelayedClientTransport$3."<init>":(Lio/grpc/internal/DelayedClientTransport;Lio/grpc/internal/ManagedClientTransport$Listener;)V
      41: putfield      #5                  // Field reportTransportTerminated:Ljava/lang/Runnable;
      44: aconst_null
      45: areturn

  public final io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor<?, ?>, io.grpc.Metadata, io.grpc.CallOptions, io.grpc.ClientStreamTracer[]);
    Code:
       0: new           #23                 // class io/grpc/internal/PickSubchannelArgsImpl
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #24                 // Method io/grpc/internal/PickSubchannelArgsImpl."<init>":(Lio/grpc/MethodDescriptor;Lio/grpc/Metadata;Lio/grpc/CallOptions;)V
      10: astore        5
      12: aconst_null
      13: astore        6
      15: ldc2_w        #25                 // long -1l
      18: lstore        7
      20: aload_0
      21: getfield      #6                  // Field lock:Ljava/lang/Object;
      24: dup
      25: astore        9
      27: monitorenter
      28: aload_0
      29: getfield      #1                  // Field shutdownStatus:Lio/grpc/Status;
      32: ifnull        63
      35: new           #27                 // class io/grpc/internal/FailingClientStream
      38: dup
      39: aload_0
      40: getfield      #1                  // Field shutdownStatus:Lio/grpc/Status;
      43: aload         4
      45: invokespecial #28                 // Method io/grpc/internal/FailingClientStream."<init>":(Lio/grpc/Status;[Lio/grpc/ClientStreamTracer;)V
      48: astore        10
      50: aload         9
      52: monitorexit
      53: aload_0
      54: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
      57: invokevirtual #29                 // Method io/grpc/SynchronizationContext.drain:()V
      60: aload         10
      62: areturn
      63: aload_0
      64: getfield      #30                 // Field lastPicker:Lio/grpc/LoadBalancer$SubchannelPicker;
      67: ifnonnull     93
      70: aload_0
      71: aload         5
      73: aload         4
      75: invokespecial #31                 // Method createPendingStream:(Lio/grpc/LoadBalancer$PickSubchannelArgs;[Lio/grpc/ClientStreamTracer;)Lio/grpc/internal/DelayedClientTransport$PendingStream;
      78: astore        10
      80: aload         9
      82: monitorexit
      83: aload_0
      84: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
      87: invokevirtual #29                 // Method io/grpc/SynchronizationContext.drain:()V
      90: aload         10
      92: areturn
      93: aload         6
      95: ifnull        131
      98: lload         7
     100: aload_0
     101: getfield      #32                 // Field lastPickerVersion:J
     104: lcmp
     105: ifne          131
     108: aload_0
     109: aload         5
     111: aload         4
     113: invokespecial #31                 // Method createPendingStream:(Lio/grpc/LoadBalancer$PickSubchannelArgs;[Lio/grpc/ClientStreamTracer;)Lio/grpc/internal/DelayedClientTransport$PendingStream;
     116: astore        10
     118: aload         9
     120: monitorexit
     121: aload_0
     122: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
     125: invokevirtual #29                 // Method io/grpc/SynchronizationContext.drain:()V
     128: aload         10
     130: areturn
     131: aload_0
     132: getfield      #30                 // Field lastPicker:Lio/grpc/LoadBalancer$SubchannelPicker;
     135: astore        6
     137: aload_0
     138: getfield      #32                 // Field lastPickerVersion:J
     141: lstore        7
     143: aload         9
     145: monitorexit
     146: goto          157
     149: astore        11
     151: aload         9
     153: monitorexit
     154: aload         11
     156: athrow
     157: aload         6
     159: aload         5
     161: invokevirtual #33                 // Method io/grpc/LoadBalancer$SubchannelPicker.pickSubchannel:(Lio/grpc/LoadBalancer$PickSubchannelArgs;)Lio/grpc/LoadBalancer$PickResult;
     164: astore        9
     166: aload         9
     168: aload_3
     169: invokevirtual #34                 // Method io/grpc/CallOptions.isWaitForReady:()Z
     172: invokestatic  #35                 // Method io/grpc/internal/GrpcUtil.getTransportFromPickResult:(Lio/grpc/LoadBalancer$PickResult;Z)Lio/grpc/internal/ClientTransport;
     175: astore        10
     177: aload         10
     179: ifnull        218
     182: aload         10
     184: aload         5
     186: invokevirtual #36                 // Method io/grpc/LoadBalancer$PickSubchannelArgs.getMethodDescriptor:()Lio/grpc/MethodDescriptor;
     189: aload         5
     191: invokevirtual #37                 // Method io/grpc/LoadBalancer$PickSubchannelArgs.getHeaders:()Lio/grpc/Metadata;
     194: aload         5
     196: invokevirtual #38                 // Method io/grpc/LoadBalancer$PickSubchannelArgs.getCallOptions:()Lio/grpc/CallOptions;
     199: aload         4
     201: invokeinterface #39,  5           // InterfaceMethod io/grpc/internal/ClientTransport.newStream:(Lio/grpc/MethodDescriptor;Lio/grpc/Metadata;Lio/grpc/CallOptions;[Lio/grpc/ClientStreamTracer;)Lio/grpc/internal/ClientStream;
     206: astore        11
     208: aload_0
     209: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
     212: invokevirtual #29                 // Method io/grpc/SynchronizationContext.drain:()V
     215: aload         11
     217: areturn
     218: goto          20
     221: astore        12
     223: aload_0
     224: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
     227: invokevirtual #29                 // Method io/grpc/SynchronizationContext.drain:()V
     230: aload         12
     232: athrow
    Exception table:
       from    to  target type
          28    53   149   any
          63    83   149   any
          93   121   149   any
         131   146   149   any
         149   154   149   any
           0    53   221   any
          63    83   221   any
          93   121   221   any
         131   208   221   any
         218   223   221   any

  private io.grpc.internal.DelayedClientTransport$PendingStream createPendingStream(io.grpc.LoadBalancer$PickSubchannelArgs, io.grpc.ClientStreamTracer[]);
    Code:
       0: new           #40                 // class io/grpc/internal/DelayedClientTransport$PendingStream
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aconst_null
       8: invokespecial #41                 // Method io/grpc/internal/DelayedClientTransport$PendingStream."<init>":(Lio/grpc/internal/DelayedClientTransport;Lio/grpc/LoadBalancer$PickSubchannelArgs;[Lio/grpc/ClientStreamTracer;Lio/grpc/internal/DelayedClientTransport$1;)V
      11: astore_3
      12: aload_0
      13: getfield      #4                  // Field pendingStreams:Ljava/util/Collection;
      16: aload_3
      17: invokeinterface #42,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: invokevirtual #43                 // Method getPendingStreamsCount:()I
      27: iconst_1
      28: if_icmpne     42
      31: aload_0
      32: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
      35: aload_0
      36: getfield      #18                 // Field reportTransportInUse:Ljava/lang/Runnable;
      39: invokevirtual #44                 // Method io/grpc/SynchronizationContext.executeLater:(Ljava/lang/Runnable;)V
      42: aload_3
      43: areturn

  public final void ping(io.grpc.internal.ClientTransport$PingCallback, java.util.concurrent.Executor);
    Code:
       0: new           #45                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #46                 // String This method is not expected to be called
       6: invokespecial #47                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public com.google.common.util.concurrent.ListenableFuture<io.grpc.InternalChannelz$SocketStats> getStats();
    Code:
       0: invokestatic  #48                 // Method com/google/common/util/concurrent/SettableFuture.create:()Lcom/google/common/util/concurrent/SettableFuture;
       3: astore_1
       4: aload_1
       5: aconst_null
       6: invokevirtual #49                 // Method com/google/common/util/concurrent/SettableFuture.set:(Ljava/lang/Object;)Z
       9: pop
      10: aload_1
      11: areturn

  public final void shutdown(io.grpc.Status);
    Code:
       0: aload_0
       1: getfield      #6                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #1                  // Field shutdownStatus:Lio/grpc/Status;
      11: ifnull        17
      14: aload_2
      15: monitorexit
      16: return
      17: aload_0
      18: aload_1
      19: putfield      #1                  // Field shutdownStatus:Lio/grpc/Status;
      22: aload_0
      23: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
      26: new           #50                 // class io/grpc/internal/DelayedClientTransport$4
      29: dup
      30: aload_0
      31: aload_1
      32: invokespecial #51                 // Method io/grpc/internal/DelayedClientTransport$4."<init>":(Lio/grpc/internal/DelayedClientTransport;Lio/grpc/Status;)V
      35: invokevirtual #44                 // Method io/grpc/SynchronizationContext.executeLater:(Ljava/lang/Runnable;)V
      38: aload_0
      39: invokevirtual #52                 // Method hasPendingStreams:()Z
      42: ifne          68
      45: aload_0
      46: getfield      #5                  // Field reportTransportTerminated:Ljava/lang/Runnable;
      49: ifnull        68
      52: aload_0
      53: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
      56: aload_0
      57: getfield      #5                  // Field reportTransportTerminated:Ljava/lang/Runnable;
      60: invokevirtual #44                 // Method io/grpc/SynchronizationContext.executeLater:(Ljava/lang/Runnable;)V
      63: aload_0
      64: aconst_null
      65: putfield      #5                  // Field reportTransportTerminated:Ljava/lang/Runnable;
      68: aload_2
      69: monitorexit
      70: goto          78
      73: astore_3
      74: aload_2
      75: monitorexit
      76: aload_3
      77: athrow
      78: aload_0
      79: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
      82: invokevirtual #29                 // Method io/grpc/SynchronizationContext.drain:()V
      85: return
    Exception table:
       from    to  target type
           7    16    73   any
          17    70    73   any
          73    76    73   any

  public final void shutdownNow(io.grpc.Status);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method shutdown:(Lio/grpc/Status;)V
       5: aload_0
       6: getfield      #6                  // Field lock:Ljava/lang/Object;
       9: dup
      10: astore        4
      12: monitorenter
      13: aload_0
      14: getfield      #4                  // Field pendingStreams:Ljava/util/Collection;
      17: astore_2
      18: aload_0
      19: getfield      #5                  // Field reportTransportTerminated:Ljava/lang/Runnable;
      22: astore_3
      23: aload_0
      24: aconst_null
      25: putfield      #5                  // Field reportTransportTerminated:Ljava/lang/Runnable;
      28: aload_0
      29: getfield      #4                  // Field pendingStreams:Ljava/util/Collection;
      32: invokeinterface #54,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      37: ifne          47
      40: aload_0
      41: invokestatic  #55                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      44: putfield      #4                  // Field pendingStreams:Ljava/util/Collection;
      47: aload         4
      49: monitorexit
      50: goto          61
      53: astore        5
      55: aload         4
      57: monitorexit
      58: aload         5
      60: athrow
      61: aload_3
      62: ifnull        141
      65: aload_2
      66: invokeinterface #56,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      71: astore        4
      73: aload         4
      75: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          133
      83: aload         4
      85: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: checkcast     #40                 // class io/grpc/internal/DelayedClientTransport$PendingStream
      93: astore        5
      95: aload         5
      97: new           #27                 // class io/grpc/internal/FailingClientStream
     100: dup
     101: aload_1
     102: getstatic     #59                 // Field io/grpc/internal/ClientStreamListener$RpcProgress.REFUSED:Lio/grpc/internal/ClientStreamListener$RpcProgress;
     105: aload         5
     107: invokestatic  #60                 // Method io/grpc/internal/DelayedClientTransport$PendingStream.access$200:(Lio/grpc/internal/DelayedClientTransport$PendingStream;)[Lio/grpc/ClientStreamTracer;
     110: invokespecial #61                 // Method io/grpc/internal/FailingClientStream."<init>":(Lio/grpc/Status;Lio/grpc/internal/ClientStreamListener$RpcProgress;[Lio/grpc/ClientStreamTracer;)V
     113: invokevirtual #62                 // Method io/grpc/internal/DelayedClientTransport$PendingStream.setStream:(Lio/grpc/internal/ClientStream;)Ljava/lang/Runnable;
     116: astore        6
     118: aload         6
     120: ifnull        130
     123: aload         6
     125: invokeinterface #63,  1           // InterfaceMethod java/lang/Runnable.run:()V
     130: goto          73
     133: aload_0
     134: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
     137: aload_3
     138: invokevirtual #64                 // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
     141: return
    Exception table:
       from    to  target type
          13    50    53   any
          53    58    53   any

  public final boolean hasPendingStreams();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field pendingStreams:Ljava/util/Collection;
      11: invokeinterface #54,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: aload_1
      25: monitorexit
      26: ireturn
      27: astore_2
      28: aload_1
      29: monitorexit
      30: aload_2
      31: athrow
    Exception table:
       from    to  target type
           7    26    27   any
          27    30    27   any

  final int getPendingStreamsCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field pendingStreams:Ljava/util/Collection;
      11: invokeinterface #65,  1           // InterfaceMethod java/util/Collection.size:()I
      16: aload_1
      17: monitorexit
      18: ireturn
      19: astore_2
      20: aload_1
      21: monitorexit
      22: aload_2
      23: athrow
    Exception table:
       from    to  target type
           7    18    19   any
          19    22    19   any

  final void reprocess(io.grpc.LoadBalancer$SubchannelPicker);
    Code:
       0: aload_0
       1: getfield      #6                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: aload_1
       9: putfield      #30                 // Field lastPicker:Lio/grpc/LoadBalancer$SubchannelPicker;
      12: aload_0
      13: dup
      14: getfield      #32                 // Field lastPickerVersion:J
      17: lconst_1
      18: ladd
      19: putfield      #32                 // Field lastPickerVersion:J
      22: aload_1
      23: ifnull        33
      26: aload_0
      27: invokevirtual #52                 // Method hasPendingStreams:()Z
      30: ifne          36
      33: aload_3
      34: monitorexit
      35: return
      36: new           #66                 // class java/util/ArrayList
      39: dup
      40: aload_0
      41: getfield      #4                  // Field pendingStreams:Ljava/util/Collection;
      44: invokespecial #67                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      47: astore_2
      48: aload_3
      49: monitorexit
      50: goto          60
      53: astore        4
      55: aload_3
      56: monitorexit
      57: aload         4
      59: athrow
      60: new           #66                 // class java/util/ArrayList
      63: dup
      64: invokespecial #68                 // Method java/util/ArrayList."<init>":()V
      67: astore_3
      68: aload_2
      69: invokevirtual #69                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      72: astore        4
      74: aload         4
      76: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifeq          188
      84: aload         4
      86: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #40                 // class io/grpc/internal/DelayedClientTransport$PendingStream
      94: astore        5
      96: aload_1
      97: aload         5
      99: invokestatic  #70                 // Method io/grpc/internal/DelayedClientTransport$PendingStream.access$300:(Lio/grpc/internal/DelayedClientTransport$PendingStream;)Lio/grpc/LoadBalancer$PickSubchannelArgs;
     102: invokevirtual #33                 // Method io/grpc/LoadBalancer$SubchannelPicker.pickSubchannel:(Lio/grpc/LoadBalancer$PickSubchannelArgs;)Lio/grpc/LoadBalancer$PickResult;
     105: astore        6
     107: aload         5
     109: invokestatic  #70                 // Method io/grpc/internal/DelayedClientTransport$PendingStream.access$300:(Lio/grpc/internal/DelayedClientTransport$PendingStream;)Lio/grpc/LoadBalancer$PickSubchannelArgs;
     112: invokevirtual #38                 // Method io/grpc/LoadBalancer$PickSubchannelArgs.getCallOptions:()Lio/grpc/CallOptions;
     115: astore        7
     117: aload         6
     119: aload         7
     121: invokevirtual #34                 // Method io/grpc/CallOptions.isWaitForReady:()Z
     124: invokestatic  #35                 // Method io/grpc/internal/GrpcUtil.getTransportFromPickResult:(Lio/grpc/LoadBalancer$PickResult;Z)Lio/grpc/internal/ClientTransport;
     127: astore        8
     129: aload         8
     131: ifnull        185
     134: aload_0
     135: getfield      #15                 // Field defaultAppExecutor:Ljava/util/concurrent/Executor;
     138: astore        9
     140: aload         7
     142: invokevirtual #71                 // Method io/grpc/CallOptions.getExecutor:()Ljava/util/concurrent/Executor;
     145: ifnull        155
     148: aload         7
     150: invokevirtual #71                 // Method io/grpc/CallOptions.getExecutor:()Ljava/util/concurrent/Executor;
     153: astore        9
     155: aload         5
     157: aload         8
     159: invokestatic  #72                 // Method io/grpc/internal/DelayedClientTransport$PendingStream.access$400:(Lio/grpc/internal/DelayedClientTransport$PendingStream;Lio/grpc/internal/ClientTransport;)Ljava/lang/Runnable;
     162: astore        10
     164: aload         10
     166: ifnull        178
     169: aload         9
     171: aload         10
     173: invokeinterface #73,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     178: aload_3
     179: aload         5
     181: invokevirtual #74                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     184: pop
     185: goto          74
     188: aload_0
     189: getfield      #6                  // Field lock:Ljava/lang/Object;
     192: dup
     193: astore        4
     195: monitorenter
     196: aload_0
     197: invokevirtual #52                 // Method hasPendingStreams:()Z
     200: ifne          207
     203: aload         4
     205: monitorexit
     206: return
     207: aload_0
     208: getfield      #4                  // Field pendingStreams:Ljava/util/Collection;
     211: aload_3
     212: invokeinterface #75,  2           // InterfaceMethod java/util/Collection.removeAll:(Ljava/util/Collection;)Z
     217: pop
     218: aload_0
     219: getfield      #4                  // Field pendingStreams:Ljava/util/Collection;
     222: invokeinterface #54,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
     227: ifeq          241
     230: aload_0
     231: new           #13                 // class java/util/LinkedHashSet
     234: dup
     235: invokespecial #14                 // Method java/util/LinkedHashSet."<init>":()V
     238: putfield      #4                  // Field pendingStreams:Ljava/util/Collection;
     241: aload_0
     242: invokevirtual #52                 // Method hasPendingStreams:()Z
     245: ifne          289
     248: aload_0
     249: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
     252: aload_0
     253: getfield      #3                  // Field reportTransportNotInUse:Ljava/lang/Runnable;
     256: invokevirtual #44                 // Method io/grpc/SynchronizationContext.executeLater:(Ljava/lang/Runnable;)V
     259: aload_0
     260: getfield      #1                  // Field shutdownStatus:Lio/grpc/Status;
     263: ifnull        289
     266: aload_0
     267: getfield      #5                  // Field reportTransportTerminated:Ljava/lang/Runnable;
     270: ifnull        289
     273: aload_0
     274: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
     277: aload_0
     278: getfield      #5                  // Field reportTransportTerminated:Ljava/lang/Runnable;
     281: invokevirtual #44                 // Method io/grpc/SynchronizationContext.executeLater:(Ljava/lang/Runnable;)V
     284: aload_0
     285: aconst_null
     286: putfield      #5                  // Field reportTransportTerminated:Ljava/lang/Runnable;
     289: aload         4
     291: monitorexit
     292: goto          303
     295: astore        11
     297: aload         4
     299: monitorexit
     300: aload         11
     302: athrow
     303: aload_0
     304: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
     307: invokevirtual #29                 // Method io/grpc/SynchronizationContext.drain:()V
     310: return
    Exception table:
       from    to  target type
           7    35    53   any
          36    50    53   any
          53    57    53   any
         196   206   295   any
         207   292   295   any
         295   300   295   any

  public io.grpc.InternalLogId getLogId();
    Code:
       0: aload_0
       1: getfield      #11                 // Field logId:Lio/grpc/InternalLogId;
       4: areturn

  static io.grpc.internal.ManagedClientTransport$Listener access$100(io.grpc.internal.DelayedClientTransport);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listener:Lio/grpc/internal/ManagedClientTransport$Listener;
       4: areturn

  static java.lang.Object access$500(io.grpc.internal.DelayedClientTransport);
    Code:
       0: aload_0
       1: getfield      #6                  // Field lock:Ljava/lang/Object;
       4: areturn

  static java.lang.Runnable access$600(io.grpc.internal.DelayedClientTransport);
    Code:
       0: aload_0
       1: getfield      #5                  // Field reportTransportTerminated:Ljava/lang/Runnable;
       4: areturn

  static java.util.Collection access$700(io.grpc.internal.DelayedClientTransport);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pendingStreams:Ljava/util/Collection;
       4: areturn

  static java.lang.Runnable access$800(io.grpc.internal.DelayedClientTransport);
    Code:
       0: aload_0
       1: getfield      #3                  // Field reportTransportNotInUse:Ljava/lang/Runnable;
       4: areturn

  static io.grpc.SynchronizationContext access$900(io.grpc.internal.DelayedClientTransport);
    Code:
       0: aload_0
       1: getfield      #2                  // Field syncContext:Lio/grpc/SynchronizationContext;
       4: areturn

  static io.grpc.Status access$1000(io.grpc.internal.DelayedClientTransport);
    Code:
       0: aload_0
       1: getfield      #1                  // Field shutdownStatus:Lio/grpc/Status;
       4: areturn

  static java.lang.Runnable access$602(io.grpc.internal.DelayedClientTransport, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field reportTransportTerminated:Ljava/lang/Runnable;
       6: areturn
}
