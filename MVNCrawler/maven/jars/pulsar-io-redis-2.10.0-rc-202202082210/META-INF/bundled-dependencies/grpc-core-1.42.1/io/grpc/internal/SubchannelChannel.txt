Compiled from "SubchannelChannel.java"
final class io.grpc.internal.SubchannelChannel extends io.grpc.Channel {
  static final io.grpc.Status NOT_READY_ERROR;

  static final io.grpc.Status WAIT_FOR_READY_ERROR;

  private static final io.grpc.internal.FailingClientTransport notReadyTransport;

  private final io.grpc.internal.InternalSubchannel subchannel;

  private final java.util.concurrent.Executor executor;

  private final java.util.concurrent.ScheduledExecutorService deadlineCancellationExecutor;

  private final io.grpc.internal.CallTracer callsTracer;

  private final java.util.concurrent.atomic.AtomicReference<io.grpc.InternalConfigSelector> configSelector;

  private final io.grpc.internal.ClientCallImpl$ClientStreamProvider transportProvider;

  io.grpc.internal.SubchannelChannel(io.grpc.internal.InternalSubchannel, java.util.concurrent.Executor, java.util.concurrent.ScheduledExecutorService, io.grpc.internal.CallTracer, java.util.concurrent.atomic.AtomicReference<io.grpc.InternalConfigSelector>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method io/grpc/Channel."<init>":()V
       4: aload_0
       5: new           #4                  // class io/grpc/internal/SubchannelChannel$1
       8: dup
       9: aload_0
      10: invokespecial #5                  // Method io/grpc/internal/SubchannelChannel$1."<init>":(Lio/grpc/internal/SubchannelChannel;)V
      13: putfield      #6                  // Field transportProvider:Lio/grpc/internal/ClientCallImpl$ClientStreamProvider;
      16: aload_0
      17: aload_1
      18: ldc           #7                  // String subchannel
      20: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #9                  // class io/grpc/internal/InternalSubchannel
      26: putfield      #2                  // Field subchannel:Lio/grpc/internal/InternalSubchannel;
      29: aload_0
      30: aload_2
      31: ldc           #10                 // String executor
      33: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #11                 // class java/util/concurrent/Executor
      39: putfield      #12                 // Field executor:Ljava/util/concurrent/Executor;
      42: aload_0
      43: aload_3
      44: ldc           #13                 // String deadlineCancellationExecutor
      46: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #14                 // class java/util/concurrent/ScheduledExecutorService
      52: putfield      #15                 // Field deadlineCancellationExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      55: aload_0
      56: aload         4
      58: ldc           #16                 // String callsTracer
      60: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #17                 // class io/grpc/internal/CallTracer
      66: putfield      #18                 // Field callsTracer:Lio/grpc/internal/CallTracer;
      69: aload_0
      70: aload         5
      72: ldc           #19                 // String configSelector
      74: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #20                 // class java/util/concurrent/atomic/AtomicReference
      80: putfield      #21                 // Field configSelector:Ljava/util/concurrent/atomic/AtomicReference;
      83: return

  public <RequestT, ResponseT> io.grpc.ClientCall<RequestT, ResponseT> newCall(io.grpc.MethodDescriptor<RequestT, ResponseT>, io.grpc.CallOptions);
    Code:
       0: aload_2
       1: invokevirtual #22                 // Method io/grpc/CallOptions.getExecutor:()Ljava/util/concurrent/Executor;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #12                 // Field executor:Ljava/util/concurrent/Executor;
      11: goto          18
      14: aload_2
      15: invokevirtual #22                 // Method io/grpc/CallOptions.getExecutor:()Ljava/util/concurrent/Executor;
      18: astore_3
      19: aload_2
      20: invokevirtual #23                 // Method io/grpc/CallOptions.isWaitForReady:()Z
      23: ifeq          36
      26: new           #24                 // class io/grpc/internal/SubchannelChannel$2
      29: dup
      30: aload_0
      31: aload_3
      32: invokespecial #25                 // Method io/grpc/internal/SubchannelChannel$2."<init>":(Lio/grpc/internal/SubchannelChannel;Ljava/util/concurrent/Executor;)V
      35: areturn
      36: new           #26                 // class io/grpc/internal/ClientCallImpl
      39: dup
      40: aload_1
      41: aload_3
      42: aload_2
      43: getstatic     #27                 // Field io/grpc/internal/GrpcUtil.CALL_OPTIONS_RPC_OWNED_BY_BALANCER:Lio/grpc/CallOptions$Key;
      46: getstatic     #28                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      49: invokevirtual #29                 // Method io/grpc/CallOptions.withOption:(Lio/grpc/CallOptions$Key;Ljava/lang/Object;)Lio/grpc/CallOptions;
      52: aload_0
      53: getfield      #6                  // Field transportProvider:Lio/grpc/internal/ClientCallImpl$ClientStreamProvider;
      56: aload_0
      57: getfield      #15                 // Field deadlineCancellationExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      60: aload_0
      61: getfield      #18                 // Field callsTracer:Lio/grpc/internal/CallTracer;
      64: aload_0
      65: getfield      #21                 // Field configSelector:Ljava/util/concurrent/atomic/AtomicReference;
      68: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      71: checkcast     #31                 // class io/grpc/InternalConfigSelector
      74: invokespecial #32                 // Method io/grpc/internal/ClientCallImpl."<init>":(Lio/grpc/MethodDescriptor;Ljava/util/concurrent/Executor;Lio/grpc/CallOptions;Lio/grpc/internal/ClientCallImpl$ClientStreamProvider;Ljava/util/concurrent/ScheduledExecutorService;Lio/grpc/internal/CallTracer;Lio/grpc/InternalConfigSelector;)V
      77: areturn

  public java.lang.String authority();
    Code:
       0: aload_0
       1: getfield      #2                  // Field subchannel:Lio/grpc/internal/InternalSubchannel;
       4: invokevirtual #33                 // Method io/grpc/internal/InternalSubchannel.getAuthority:()Ljava/lang/String;
       7: areturn

  static io.grpc.internal.InternalSubchannel access$000(io.grpc.internal.SubchannelChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field subchannel:Lio/grpc/internal/InternalSubchannel;
       4: areturn

  static io.grpc.internal.FailingClientTransport access$100();
    Code:
       0: getstatic     #1                  // Field notReadyTransport:Lio/grpc/internal/FailingClientTransport;
       3: areturn

  static {};
    Code:
       0: getstatic     #34                 // Field io/grpc/Status.UNAVAILABLE:Lio/grpc/Status;
       3: ldc           #35                 // String Subchannel is NOT READY
       5: invokevirtual #36                 // Method io/grpc/Status.withDescription:(Ljava/lang/String;)Lio/grpc/Status;
       8: putstatic     #37                 // Field NOT_READY_ERROR:Lio/grpc/Status;
      11: getstatic     #34                 // Field io/grpc/Status.UNAVAILABLE:Lio/grpc/Status;
      14: ldc           #38                 // String wait-for-ready RPC is not supported on Subchannel.asChannel()
      16: invokevirtual #36                 // Method io/grpc/Status.withDescription:(Ljava/lang/String;)Lio/grpc/Status;
      19: putstatic     #39                 // Field WAIT_FOR_READY_ERROR:Lio/grpc/Status;
      22: new           #40                 // class io/grpc/internal/FailingClientTransport
      25: dup
      26: getstatic     #37                 // Field NOT_READY_ERROR:Lio/grpc/Status;
      29: getstatic     #41                 // Field io/grpc/internal/ClientStreamListener$RpcProgress.REFUSED:Lio/grpc/internal/ClientStreamListener$RpcProgress;
      32: invokespecial #42                 // Method io/grpc/internal/FailingClientTransport."<init>":(Lio/grpc/Status;Lio/grpc/internal/ClientStreamListener$RpcProgress;)V
      35: putstatic     #1                  // Field notReadyTransport:Lio/grpc/internal/FailingClientTransport;
      38: return
}
