Compiled from "ReadableBuffers.java"
class io.grpc.internal.ReadableBuffers$ByteArrayWrapper extends io.grpc.internal.AbstractReadableBuffer {
  int offset;

  final int end;

  final byte[] bytes;

  int mark;

  io.grpc.internal.ReadableBuffers$ByteArrayWrapper(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokespecial #1                  // Method "<init>":([BII)V
       8: return

  io.grpc.internal.ReadableBuffers$ByteArrayWrapper(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/grpc/internal/AbstractReadableBuffer."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #3                  // Field mark:I
       9: iload_2
      10: iflt          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ldc           #4                  // String offset must be >= 0
      20: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      23: iload_3
      24: iflt          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ldc           #6                  // String length must be >= 0
      34: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      37: iload_2
      38: iload_3
      39: iadd
      40: aload_1
      41: arraylength
      42: if_icmpgt     49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ldc           #7                  // String offset + length exceeds array boundary
      52: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      55: aload_0
      56: aload_1
      57: ldc           #8                  // String bytes
      59: invokestatic  #9                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #10                 // class "[B"
      65: putfield      #11                 // Field bytes:[B
      68: aload_0
      69: iload_2
      70: putfield      #12                 // Field offset:I
      73: aload_0
      74: iload_2
      75: iload_3
      76: iadd
      77: putfield      #13                 // Field end:I
      80: return

  public int readableBytes();
    Code:
       0: aload_0
       1: getfield      #13                 // Field end:I
       4: aload_0
       5: getfield      #12                 // Field offset:I
       8: isub
       9: ireturn

  public void skipBytes(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #14                 // Method checkReadable:(I)V
       5: aload_0
       6: dup
       7: getfield      #12                 // Field offset:I
      10: iload_1
      11: iadd
      12: putfield      #12                 // Field offset:I
      15: return

  public int readUnsignedByte();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #14                 // Method checkReadable:(I)V
       5: aload_0
       6: getfield      #11                 // Field bytes:[B
       9: aload_0
      10: dup
      11: getfield      #12                 // Field offset:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #12                 // Field offset:I
      20: baload
      21: sipush        255
      24: iand
      25: ireturn

  public void readBytes(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field bytes:[B
       4: aload_0
       5: getfield      #12                 // Field offset:I
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokestatic  #15                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      14: aload_0
      15: dup
      16: getfield      #12                 // Field offset:I
      19: iload_3
      20: iadd
      21: putfield      #12                 // Field offset:I
      24: return

  public void readBytes(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: ldc           #16                 // String dest
       3: invokestatic  #9                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      11: istore_2
      12: aload_0
      13: iload_2
      14: invokevirtual #14                 // Method checkReadable:(I)V
      17: aload_1
      18: aload_0
      19: getfield      #11                 // Field bytes:[B
      22: aload_0
      23: getfield      #12                 // Field offset:I
      26: iload_2
      27: invokevirtual #18                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      30: pop
      31: aload_0
      32: dup
      33: getfield      #12                 // Field offset:I
      36: iload_2
      37: iadd
      38: putfield      #12                 // Field offset:I
      41: return

  public void readBytes(java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_2
       2: invokevirtual #14                 // Method checkReadable:(I)V
       5: aload_1
       6: aload_0
       7: getfield      #11                 // Field bytes:[B
      10: aload_0
      11: getfield      #12                 // Field offset:I
      14: iload_2
      15: invokevirtual #19                 // Method java/io/OutputStream.write:([BII)V
      18: aload_0
      19: dup
      20: getfield      #12                 // Field offset:I
      23: iload_2
      24: iadd
      25: putfield      #12                 // Field offset:I
      28: return

  public io.grpc.internal.ReadableBuffers$ByteArrayWrapper readBytes(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #14                 // Method checkReadable:(I)V
       5: aload_0
       6: getfield      #12                 // Field offset:I
       9: istore_2
      10: aload_0
      11: dup
      12: getfield      #12                 // Field offset:I
      15: iload_1
      16: iadd
      17: putfield      #12                 // Field offset:I
      20: new           #20                 // class io/grpc/internal/ReadableBuffers$ByteArrayWrapper
      23: dup
      24: aload_0
      25: getfield      #11                 // Field bytes:[B
      28: iload_2
      29: iload_1
      30: invokespecial #1                  // Method "<init>":([BII)V
      33: areturn

  public boolean hasArray();
    Code:
       0: iconst_1
       1: ireturn

  public byte[] array();
    Code:
       0: aload_0
       1: getfield      #11                 // Field bytes:[B
       4: areturn

  public int arrayOffset();
    Code:
       0: aload_0
       1: getfield      #12                 // Field offset:I
       4: ireturn

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public void mark();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #12                 // Field offset:I
       5: putfield      #3                  // Field mark:I
       8: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mark:I
       4: iconst_m1
       5: if_icmpne     16
       8: new           #21                 // class java/nio/InvalidMarkException
      11: dup
      12: invokespecial #22                 // Method java/nio/InvalidMarkException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_0
      18: getfield      #3                  // Field mark:I
      21: putfield      #12                 // Field offset:I
      24: return

  public io.grpc.internal.ReadableBuffer readBytes(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #23                 // Method readBytes:(I)Lio/grpc/internal/ReadableBuffers$ByteArrayWrapper;
       5: areturn
}
