Compiled from "ManagedChannelImpl.java"
final class io.grpc.internal.ManagedChannelImpl$NameResolverListener extends io.grpc.NameResolver$Listener2 {
  final io.grpc.internal.ManagedChannelImpl$LbHelperImpl helper;

  final io.grpc.NameResolver resolver;

  final io.grpc.internal.ManagedChannelImpl this$0;

  io.grpc.internal.ManagedChannelImpl$NameResolverListener(io.grpc.internal.ManagedChannelImpl, io.grpc.internal.ManagedChannelImpl$LbHelperImpl, io.grpc.NameResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
       5: aload_0
       6: invokespecial #3                  // Method io/grpc/NameResolver$Listener2."<init>":()V
       9: aload_0
      10: aload_2
      11: ldc           #4                  // String helperImpl
      13: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #6                  // class io/grpc/internal/ManagedChannelImpl$LbHelperImpl
      19: putfield      #7                  // Field helper:Lio/grpc/internal/ManagedChannelImpl$LbHelperImpl;
      22: aload_0
      23: aload_3
      24: ldc           #8                  // String resolver
      26: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #9                  // class io/grpc/NameResolver
      32: putfield      #10                 // Field resolver:Lio/grpc/NameResolver;
      35: return

  public void onResult(io.grpc.NameResolver$ResolutionResult);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
       4: getfield      #11                 // Field io/grpc/internal/ManagedChannelImpl.syncContext:Lio/grpc/SynchronizationContext;
       7: new           #12                 // class io/grpc/internal/ManagedChannelImpl$NameResolverListener$1NamesResolved
      10: dup
      11: aload_0
      12: aload_1
      13: invokespecial #13                 // Method io/grpc/internal/ManagedChannelImpl$NameResolverListener$1NamesResolved."<init>":(Lio/grpc/internal/ManagedChannelImpl$NameResolverListener;Lio/grpc/NameResolver$ResolutionResult;)V
      16: invokevirtual #14                 // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
      19: return

  public void onError(io.grpc.Status);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method io/grpc/Status.isOk:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #16                 // String the error status must not be OK
      14: invokestatic  #17                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      17: aload_0
      18: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      21: getfield      #11                 // Field io/grpc/internal/ManagedChannelImpl.syncContext:Lio/grpc/SynchronizationContext;
      24: new           #18                 // class io/grpc/internal/ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler
      27: dup
      28: aload_0
      29: aload_1
      30: invokespecial #19                 // Method io/grpc/internal/ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler."<init>":(Lio/grpc/internal/ManagedChannelImpl$NameResolverListener;Lio/grpc/Status;)V
      33: invokevirtual #14                 // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
      36: return

  private void handleErrorInSyncContext(io.grpc.Status);
    Code:
       0: getstatic     #20                 // Field io/grpc/internal/ManagedChannelImpl.logger:Ljava/util/logging/Logger;
       3: getstatic     #21                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       6: ldc           #22                 // String [{0}] Failed to resolve name. status={1}
       8: iconst_2
       9: anewarray     #23                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_0
      15: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      18: invokevirtual #24                 // Method io/grpc/internal/ManagedChannelImpl.getLogId:()Lio/grpc/InternalLogId;
      21: aastore
      22: dup
      23: iconst_1
      24: aload_1
      25: aastore
      26: invokevirtual #25                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      29: aload_0
      30: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      33: invokestatic  #26                 // Method io/grpc/internal/ManagedChannelImpl.access$7500:(Lio/grpc/internal/ManagedChannelImpl;)Lio/grpc/internal/ManagedChannelImpl$RealChannel;
      36: invokevirtual #27                 // Method io/grpc/internal/ManagedChannelImpl$RealChannel.onConfigError:()V
      39: aload_0
      40: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      43: invokestatic  #28                 // Method io/grpc/internal/ManagedChannelImpl.access$7000:(Lio/grpc/internal/ManagedChannelImpl;)Lio/grpc/internal/ManagedChannelImpl$ResolutionState;
      46: getstatic     #29                 // Field io/grpc/internal/ManagedChannelImpl$ResolutionState.ERROR:Lio/grpc/internal/ManagedChannelImpl$ResolutionState;
      49: if_acmpeq     86
      52: aload_0
      53: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      56: invokestatic  #30                 // Method io/grpc/internal/ManagedChannelImpl.access$3100:(Lio/grpc/internal/ManagedChannelImpl;)Lio/grpc/ChannelLogger;
      59: getstatic     #31                 // Field io/grpc/ChannelLogger$ChannelLogLevel.WARNING:Lio/grpc/ChannelLogger$ChannelLogLevel;
      62: ldc           #32                 // String Failed to resolve name: {0}
      64: iconst_1
      65: anewarray     #23                 // class java/lang/Object
      68: dup
      69: iconst_0
      70: aload_1
      71: aastore
      72: invokevirtual #33                 // Method io/grpc/ChannelLogger.log:(Lio/grpc/ChannelLogger$ChannelLogLevel;Ljava/lang/String;[Ljava/lang/Object;)V
      75: aload_0
      76: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      79: getstatic     #29                 // Field io/grpc/internal/ManagedChannelImpl$ResolutionState.ERROR:Lio/grpc/internal/ManagedChannelImpl$ResolutionState;
      82: invokestatic  #34                 // Method io/grpc/internal/ManagedChannelImpl.access$7002:(Lio/grpc/internal/ManagedChannelImpl;Lio/grpc/internal/ManagedChannelImpl$ResolutionState;)Lio/grpc/internal/ManagedChannelImpl$ResolutionState;
      85: pop
      86: aload_0
      87: getfield      #7                  // Field helper:Lio/grpc/internal/ManagedChannelImpl$LbHelperImpl;
      90: aload_0
      91: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      94: invokestatic  #35                 // Method io/grpc/internal/ManagedChannelImpl.access$4900:(Lio/grpc/internal/ManagedChannelImpl;)Lio/grpc/internal/ManagedChannelImpl$LbHelperImpl;
      97: if_acmpeq     101
     100: return
     101: aload_0
     102: getfield      #7                  // Field helper:Lio/grpc/internal/ManagedChannelImpl$LbHelperImpl;
     105: getfield      #36                 // Field io/grpc/internal/ManagedChannelImpl$LbHelperImpl.lb:Lio/grpc/internal/AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer;
     108: aload_1
     109: invokevirtual #37                 // Method io/grpc/internal/AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer.handleNameResolutionError:(Lio/grpc/Status;)V
     112: aload_0
     113: invokespecial #38                 // Method scheduleExponentialBackOffInSyncContext:()V
     116: return

  private void scheduleExponentialBackOffInSyncContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
       4: invokestatic  #39                 // Method io/grpc/internal/ManagedChannelImpl.access$1100:(Lio/grpc/internal/ManagedChannelImpl;)Lio/grpc/SynchronizationContext$ScheduledHandle;
       7: ifnull        24
      10: aload_0
      11: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      14: invokestatic  #39                 // Method io/grpc/internal/ManagedChannelImpl.access$1100:(Lio/grpc/internal/ManagedChannelImpl;)Lio/grpc/SynchronizationContext$ScheduledHandle;
      17: invokevirtual #40                 // Method io/grpc/SynchronizationContext$ScheduledHandle.isPending:()Z
      20: ifeq          24
      23: return
      24: aload_0
      25: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      28: invokestatic  #41                 // Method io/grpc/internal/ManagedChannelImpl.access$7100:(Lio/grpc/internal/ManagedChannelImpl;)Lio/grpc/internal/BackoffPolicy;
      31: ifnonnull     54
      34: aload_0
      35: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      38: aload_0
      39: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      42: invokestatic  #42                 // Method io/grpc/internal/ManagedChannelImpl.access$6300:(Lio/grpc/internal/ManagedChannelImpl;)Lio/grpc/internal/BackoffPolicy$Provider;
      45: invokeinterface #43,  1           // InterfaceMethod io/grpc/internal/BackoffPolicy$Provider.get:()Lio/grpc/internal/BackoffPolicy;
      50: invokestatic  #44                 // Method io/grpc/internal/ManagedChannelImpl.access$7102:(Lio/grpc/internal/ManagedChannelImpl;Lio/grpc/internal/BackoffPolicy;)Lio/grpc/internal/BackoffPolicy;
      53: pop
      54: aload_0
      55: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      58: invokestatic  #41                 // Method io/grpc/internal/ManagedChannelImpl.access$7100:(Lio/grpc/internal/ManagedChannelImpl;)Lio/grpc/internal/BackoffPolicy;
      61: invokeinterface #45,  1           // InterfaceMethod io/grpc/internal/BackoffPolicy.nextBackoffNanos:()J
      66: lstore_1
      67: aload_0
      68: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      71: invokestatic  #30                 // Method io/grpc/internal/ManagedChannelImpl.access$3100:(Lio/grpc/internal/ManagedChannelImpl;)Lio/grpc/ChannelLogger;
      74: getstatic     #46                 // Field io/grpc/ChannelLogger$ChannelLogLevel.DEBUG:Lio/grpc/ChannelLogger$ChannelLogLevel;
      77: ldc           #47                 // String Scheduling DNS resolution backoff for {0} ns
      79: iconst_1
      80: anewarray     #23                 // class java/lang/Object
      83: dup
      84: iconst_0
      85: lload_1
      86: invokestatic  #48                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      89: aastore
      90: invokevirtual #33                 // Method io/grpc/ChannelLogger.log:(Lio/grpc/ChannelLogger$ChannelLogLevel;Ljava/lang/String;[Ljava/lang/Object;)V
      93: aload_0
      94: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
      97: aload_0
      98: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
     101: getfield      #11                 // Field io/grpc/internal/ManagedChannelImpl.syncContext:Lio/grpc/SynchronizationContext;
     104: new           #49                 // class io/grpc/internal/ManagedChannelImpl$DelayedNameResolverRefresh
     107: dup
     108: aload_0
     109: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
     112: invokespecial #50                 // Method io/grpc/internal/ManagedChannelImpl$DelayedNameResolverRefresh."<init>":(Lio/grpc/internal/ManagedChannelImpl;)V
     115: lload_1
     116: getstatic     #51                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     119: aload_0
     120: getfield      #2                  // Field this$0:Lio/grpc/internal/ManagedChannelImpl;
     123: invokestatic  #52                 // Method io/grpc/internal/ManagedChannelImpl.access$2200:(Lio/grpc/internal/ManagedChannelImpl;)Lio/grpc/internal/ClientTransportFactory;
     126: invokeinterface #53,  1           // InterfaceMethod io/grpc/internal/ClientTransportFactory.getScheduledExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
     131: invokevirtual #54                 // Method io/grpc/SynchronizationContext.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)Lio/grpc/SynchronizationContext$ScheduledHandle;
     134: invokestatic  #55                 // Method io/grpc/internal/ManagedChannelImpl.access$1102:(Lio/grpc/internal/ManagedChannelImpl;Lio/grpc/SynchronizationContext$ScheduledHandle;)Lio/grpc/SynchronizationContext$ScheduledHandle;
     137: pop
     138: return

  static void access$7700(io.grpc.internal.ManagedChannelImpl$NameResolverListener, io.grpc.Status);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method handleErrorInSyncContext:(Lio/grpc/Status;)V
       5: return
}
