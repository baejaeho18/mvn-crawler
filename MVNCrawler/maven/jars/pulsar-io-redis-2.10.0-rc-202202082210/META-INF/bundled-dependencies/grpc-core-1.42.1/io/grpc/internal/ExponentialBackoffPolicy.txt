Compiled from "ExponentialBackoffPolicy.java"
public final class io.grpc.internal.ExponentialBackoffPolicy implements io.grpc.internal.BackoffPolicy {
  private java.util.Random random;

  private long initialBackoffNanos;

  private long maxBackoffNanos;

  private double multiplier;

  private double jitter;

  private long nextBackoffNanos;

  public io.grpc.internal.ExponentialBackoffPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/Random
       8: dup
       9: invokespecial #3                  // Method java/util/Random."<init>":()V
      12: putfield      #4                  // Field random:Ljava/util/Random;
      15: aload_0
      16: getstatic     #5                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      19: lconst_1
      20: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      23: putfield      #7                  // Field initialBackoffNanos:J
      26: aload_0
      27: getstatic     #8                  // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      30: ldc2_w        #9                  // long 2l
      33: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      36: putfield      #11                 // Field maxBackoffNanos:J
      39: aload_0
      40: ldc2_w        #12                 // double 1.6d
      43: putfield      #14                 // Field multiplier:D
      46: aload_0
      47: ldc2_w        #15                 // double 0.2d
      50: putfield      #17                 // Field jitter:D
      53: aload_0
      54: aload_0
      55: getfield      #7                  // Field initialBackoffNanos:J
      58: putfield      #18                 // Field nextBackoffNanos:J
      61: return

  public long nextBackoffNanos();
    Code:
       0: aload_0
       1: getfield      #18                 // Field nextBackoffNanos:J
       4: lstore_1
       5: aload_0
       6: lload_1
       7: l2d
       8: aload_0
       9: getfield      #14                 // Field multiplier:D
      12: dmul
      13: d2l
      14: aload_0
      15: getfield      #11                 // Field maxBackoffNanos:J
      18: invokestatic  #19                 // Method java/lang/Math.min:(JJ)J
      21: putfield      #18                 // Field nextBackoffNanos:J
      24: lload_1
      25: aload_0
      26: aload_0
      27: getfield      #17                 // Field jitter:D
      30: dneg
      31: lload_1
      32: l2d
      33: dmul
      34: aload_0
      35: getfield      #17                 // Field jitter:D
      38: lload_1
      39: l2d
      40: dmul
      41: invokespecial #20                 // Method uniformRandom:(DD)J
      44: ladd
      45: lreturn

  private long uniformRandom(double, double);
    Code:
       0: dload_3
       1: dload_1
       2: dcmpl
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      14: dload_3
      15: dload_1
      16: dsub
      17: dstore        5
      19: aload_0
      20: getfield      #4                  // Field random:Ljava/util/Random;
      23: invokevirtual #22                 // Method java/util/Random.nextDouble:()D
      26: dload         5
      28: dmul
      29: dload_1
      30: dadd
      31: d2l
      32: lreturn

  io.grpc.internal.ExponentialBackoffPolicy setRandom(java.util.Random);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field random:Ljava/util/Random;
       5: aload_0
       6: areturn

  io.grpc.internal.ExponentialBackoffPolicy setInitialBackoffNanos(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field initialBackoffNanos:J
       5: aload_0
       6: areturn

  io.grpc.internal.ExponentialBackoffPolicy setMaxBackoffNanos(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #11                 // Field maxBackoffNanos:J
       5: aload_0
       6: areturn

  io.grpc.internal.ExponentialBackoffPolicy setMultiplier(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #14                 // Field multiplier:D
       5: aload_0
       6: areturn

  io.grpc.internal.ExponentialBackoffPolicy setJitter(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #17                 // Field jitter:D
       5: aload_0
       6: areturn
}
