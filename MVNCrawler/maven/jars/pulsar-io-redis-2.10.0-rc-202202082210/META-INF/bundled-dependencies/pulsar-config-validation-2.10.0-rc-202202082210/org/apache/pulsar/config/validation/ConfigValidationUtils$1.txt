Compiled from "ConfigValidationUtils.java"
final class org.apache.pulsar.config.validation.ConfigValidationUtils$1 extends org.apache.pulsar.config.validation.ConfigValidationUtils$NestableFieldValidator {
  final boolean val$notNull;

  final java.lang.Class val$cls;

  org.apache.pulsar.config.validation.ConfigValidationUtils$1(boolean, java.lang.Class);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field val$notNull:Z
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$cls:Ljava/lang/Class;
      10: aload_0
      11: invokespecial #3                  // Method org/apache/pulsar/config/validation/ConfigValidationUtils$NestableFieldValidator."<init>":()V
      14: return

  public void validateField(java.lang.String, java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_3
       1: ifnonnull     44
       4: aload_0
       5: getfield      #1                  // Field val$notNull:Z
       8: ifeq          43
      11: new           #4                  // class java/lang/IllegalArgumentException
      14: dup
      15: new           #5                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #7                  // String Field
      24: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_2
      28: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #9                  // String  must not be null
      33: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: return
      44: aload_0
      45: getfield      #2                  // Field val$cls:Ljava/lang/Class;
      48: aload_3
      49: invokevirtual #12                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      52: ifne          110
      55: new           #4                  // class java/lang/IllegalArgumentException
      58: dup
      59: new           #5                  // class java/lang/StringBuilder
      62: dup
      63: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      66: aload_1
      67: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_2
      71: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: ldc           #13                 // String  must be a
      76: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #2                  // Field val$cls:Ljava/lang/Class;
      83: invokevirtual #14                 // Method java/lang/Class.getName:()Ljava/lang/String;
      86: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #15                 // String . (
      91: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_3
      95: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: ldc           #17                 // String )
     100: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: return
}
