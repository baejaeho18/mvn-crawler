Compiled from "CachedSubchannelPool.java"
final class io.grpc.grpclb.CachedSubchannelPool implements io.grpc.grpclb.SubchannelPool {
  private final java.util.HashMap<io.grpc.EquivalentAddressGroup, io.grpc.grpclb.CachedSubchannelPool$CacheEntry> cache;

  private final io.grpc.LoadBalancer$Helper helper;

  private io.grpc.grpclb.SubchannelPool$PooledSubchannelStateListener listener;

  static final long SHUTDOWN_TIMEOUT_MS;

  public io.grpc.grpclb.CachedSubchannelPool(io.grpc.LoadBalancer$Helper);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/HashMap
       8: dup
       9: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      12: putfield      #1                  // Field cache:Ljava/util/HashMap;
      15: aload_0
      16: aload_1
      17: ldc           #7                  // String helper
      19: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #9                  // class io/grpc/LoadBalancer$Helper
      25: putfield      #10                 // Field helper:Lio/grpc/LoadBalancer$Helper;
      28: return

  public void registerListener(io.grpc.grpclb.SubchannelPool$PooledSubchannelStateListener);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #11                 // String listener
       4: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #12                 // class io/grpc/grpclb/SubchannelPool$PooledSubchannelStateListener
      10: putfield      #2                  // Field listener:Lio/grpc/grpclb/SubchannelPool$PooledSubchannelStateListener;
      13: return

  public io.grpc.LoadBalancer$Subchannel takeOrCreateSubchannel(io.grpc.EquivalentAddressGroup, io.grpc.Attributes);
    Code:
       0: aload_0
       1: getfield      #1                  // Field cache:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #13                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #14                 // class io/grpc/grpclb/CachedSubchannelPool$CacheEntry
      11: astore_3
      12: aload_3
      13: ifnonnull     57
      16: aload_0
      17: getfield      #10                 // Field helper:Lio/grpc/LoadBalancer$Helper;
      20: invokestatic  #15                 // Method io/grpc/LoadBalancer$CreateSubchannelArgs.newBuilder:()Lio/grpc/LoadBalancer$CreateSubchannelArgs$Builder;
      23: aload_1
      24: invokevirtual #16                 // Method io/grpc/LoadBalancer$CreateSubchannelArgs$Builder.setAddresses:(Lio/grpc/EquivalentAddressGroup;)Lio/grpc/LoadBalancer$CreateSubchannelArgs$Builder;
      27: aload_2
      28: invokevirtual #17                 // Method io/grpc/LoadBalancer$CreateSubchannelArgs$Builder.setAttributes:(Lio/grpc/Attributes;)Lio/grpc/LoadBalancer$CreateSubchannelArgs$Builder;
      31: invokevirtual #18                 // Method io/grpc/LoadBalancer$CreateSubchannelArgs$Builder.build:()Lio/grpc/LoadBalancer$CreateSubchannelArgs;
      34: invokevirtual #19                 // Method io/grpc/LoadBalancer$Helper.createSubchannel:(Lio/grpc/LoadBalancer$CreateSubchannelArgs;)Lio/grpc/LoadBalancer$Subchannel;
      37: astore        4
      39: aload         4
      41: new           #20                 // class io/grpc/grpclb/CachedSubchannelPool$1
      44: dup
      45: aload_0
      46: aload         4
      48: invokespecial #21                 // Method io/grpc/grpclb/CachedSubchannelPool$1."<init>":(Lio/grpc/grpclb/CachedSubchannelPool;Lio/grpc/LoadBalancer$Subchannel;)V
      51: invokevirtual #22                 // Method io/grpc/LoadBalancer$Subchannel.start:(Lio/grpc/LoadBalancer$SubchannelStateListener;)V
      54: goto          91
      57: aload_3
      58: getfield      #23                 // Field io/grpc/grpclb/CachedSubchannelPool$CacheEntry.subchannel:Lio/grpc/LoadBalancer$Subchannel;
      61: astore        4
      63: aload_3
      64: getfield      #24                 // Field io/grpc/grpclb/CachedSubchannelPool$CacheEntry.shutdownTimer:Lio/grpc/SynchronizationContext$ScheduledHandle;
      67: invokevirtual #25                 // Method io/grpc/SynchronizationContext$ScheduledHandle.cancel:()V
      70: aload_0
      71: getfield      #10                 // Field helper:Lio/grpc/LoadBalancer$Helper;
      74: invokevirtual #26                 // Method io/grpc/LoadBalancer$Helper.getSynchronizationContext:()Lio/grpc/SynchronizationContext;
      77: new           #27                 // class io/grpc/grpclb/CachedSubchannelPool$2
      80: dup
      81: aload_0
      82: aload         4
      84: aload_3
      85: invokespecial #28                 // Method io/grpc/grpclb/CachedSubchannelPool$2."<init>":(Lio/grpc/grpclb/CachedSubchannelPool;Lio/grpc/LoadBalancer$Subchannel;Lio/grpc/grpclb/CachedSubchannelPool$CacheEntry;)V
      88: invokevirtual #29                 // Method io/grpc/SynchronizationContext.execute:(Ljava/lang/Runnable;)V
      91: aload         4
      93: areturn

  private void updateCachedSubchannelState(io.grpc.LoadBalancer$Subchannel, io.grpc.ConnectivityStateInfo);
    Code:
       0: aload_0
       1: getfield      #1                  // Field cache:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #30                 // Method io/grpc/LoadBalancer$Subchannel.getAddresses:()Lio/grpc/EquivalentAddressGroup;
       8: invokevirtual #31                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #14                 // class io/grpc/grpclb/CachedSubchannelPool$CacheEntry
      14: astore_3
      15: aload_3
      16: ifnull        27
      19: aload_3
      20: getfield      #23                 // Field io/grpc/grpclb/CachedSubchannelPool$CacheEntry.subchannel:Lio/grpc/LoadBalancer$Subchannel;
      23: aload_1
      24: if_acmpeq     28
      27: return
      28: aload_3
      29: aload_2
      30: putfield      #32                 // Field io/grpc/grpclb/CachedSubchannelPool$CacheEntry.state:Lio/grpc/ConnectivityStateInfo;
      33: return

  public void returnSubchannel(io.grpc.LoadBalancer$Subchannel, io.grpc.ConnectivityStateInfo);
    Code:
       0: aload_0
       1: getfield      #1                  // Field cache:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #30                 // Method io/grpc/LoadBalancer$Subchannel.getAddresses:()Lio/grpc/EquivalentAddressGroup;
       8: invokevirtual #31                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #14                 // class io/grpc/grpclb/CachedSubchannelPool$CacheEntry
      14: astore_3
      15: aload_3
      16: ifnull        32
      19: aload_3
      20: getfield      #23                 // Field io/grpc/grpclb/CachedSubchannelPool$CacheEntry.subchannel:Lio/grpc/LoadBalancer$Subchannel;
      23: aload_1
      24: if_acmpeq     31
      27: aload_1
      28: invokevirtual #33                 // Method io/grpc/LoadBalancer$Subchannel.shutdown:()V
      31: return
      32: new           #34                 // class io/grpc/grpclb/CachedSubchannelPool$ShutdownSubchannelTask
      35: dup
      36: aload_0
      37: aload_1
      38: aconst_null
      39: invokespecial #35                 // Method io/grpc/grpclb/CachedSubchannelPool$ShutdownSubchannelTask."<init>":(Lio/grpc/grpclb/CachedSubchannelPool;Lio/grpc/LoadBalancer$Subchannel;Lio/grpc/grpclb/CachedSubchannelPool$1;)V
      42: astore        4
      44: aload_0
      45: getfield      #10                 // Field helper:Lio/grpc/LoadBalancer$Helper;
      48: invokevirtual #26                 // Method io/grpc/LoadBalancer$Helper.getSynchronizationContext:()Lio/grpc/SynchronizationContext;
      51: aload         4
      53: ldc2_w        #37                 // long 10000l
      56: getstatic     #39                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      59: aload_0
      60: getfield      #10                 // Field helper:Lio/grpc/LoadBalancer$Helper;
      63: invokevirtual #40                 // Method io/grpc/LoadBalancer$Helper.getScheduledExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
      66: invokevirtual #41                 // Method io/grpc/SynchronizationContext.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)Lio/grpc/SynchronizationContext$ScheduledHandle;
      69: astore        5
      71: new           #14                 // class io/grpc/grpclb/CachedSubchannelPool$CacheEntry
      74: dup
      75: aload_1
      76: aload         5
      78: aload_2
      79: invokespecial #42                 // Method io/grpc/grpclb/CachedSubchannelPool$CacheEntry."<init>":(Lio/grpc/LoadBalancer$Subchannel;Lio/grpc/SynchronizationContext$ScheduledHandle;Lio/grpc/ConnectivityStateInfo;)V
      82: astore        6
      84: aload_0
      85: getfield      #1                  // Field cache:Ljava/util/HashMap;
      88: aload_1
      89: invokevirtual #30                 // Method io/grpc/LoadBalancer$Subchannel.getAddresses:()Lio/grpc/EquivalentAddressGroup;
      92: aload         6
      94: invokevirtual #43                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field cache:Ljava/util/HashMap;
       4: invokevirtual #44                 // Method java/util/HashMap.values:()Ljava/util/Collection;
       7: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          49
      22: aload_1
      23: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #14                 // class io/grpc/grpclb/CachedSubchannelPool$CacheEntry
      31: astore_2
      32: aload_2
      33: getfield      #24                 // Field io/grpc/grpclb/CachedSubchannelPool$CacheEntry.shutdownTimer:Lio/grpc/SynchronizationContext$ScheduledHandle;
      36: invokevirtual #25                 // Method io/grpc/SynchronizationContext$ScheduledHandle.cancel:()V
      39: aload_2
      40: getfield      #23                 // Field io/grpc/grpclb/CachedSubchannelPool$CacheEntry.subchannel:Lio/grpc/LoadBalancer$Subchannel;
      43: invokevirtual #33                 // Method io/grpc/LoadBalancer$Subchannel.shutdown:()V
      46: goto          13
      49: aload_0
      50: getfield      #1                  // Field cache:Ljava/util/HashMap;
      53: invokevirtual #48                 // Method java/util/HashMap.clear:()V
      56: return

  static void access$000(io.grpc.grpclb.CachedSubchannelPool, io.grpc.LoadBalancer$Subchannel, io.grpc.ConnectivityStateInfo);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method updateCachedSubchannelState:(Lio/grpc/LoadBalancer$Subchannel;Lio/grpc/ConnectivityStateInfo;)V
       6: return

  static io.grpc.grpclb.SubchannelPool$PooledSubchannelStateListener access$100(io.grpc.grpclb.CachedSubchannelPool);
    Code:
       0: aload_0
       1: getfield      #2                  // Field listener:Lio/grpc/grpclb/SubchannelPool$PooledSubchannelStateListener;
       4: areturn

  static java.util.HashMap access$300(io.grpc.grpclb.CachedSubchannelPool);
    Code:
       0: aload_0
       1: getfield      #1                  // Field cache:Ljava/util/HashMap;
       4: areturn
}
