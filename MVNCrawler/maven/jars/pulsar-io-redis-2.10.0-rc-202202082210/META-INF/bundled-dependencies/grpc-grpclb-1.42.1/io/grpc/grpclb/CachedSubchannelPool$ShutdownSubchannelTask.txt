Compiled from "CachedSubchannelPool.java"
final class io.grpc.grpclb.CachedSubchannelPool$ShutdownSubchannelTask implements java.lang.Runnable {
  private final io.grpc.LoadBalancer$Subchannel subchannel;

  final io.grpc.grpclb.CachedSubchannelPool this$0;

  private io.grpc.grpclb.CachedSubchannelPool$ShutdownSubchannelTask(io.grpc.grpclb.CachedSubchannelPool, io.grpc.LoadBalancer$Subchannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/grpc/grpclb/CachedSubchannelPool;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: ldc           #4                  // String subchannel
      13: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #6                  // class io/grpc/LoadBalancer$Subchannel
      19: putfield      #7                  // Field subchannel:Lio/grpc/LoadBalancer$Subchannel;
      22: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/grpc/grpclb/CachedSubchannelPool;
       4: invokestatic  #8                  // Method io/grpc/grpclb/CachedSubchannelPool.access$300:(Lio/grpc/grpclb/CachedSubchannelPool;)Ljava/util/HashMap;
       7: aload_0
       8: getfield      #7                  // Field subchannel:Lio/grpc/LoadBalancer$Subchannel;
      11: invokevirtual #9                  // Method io/grpc/LoadBalancer$Subchannel.getAddresses:()Lio/grpc/EquivalentAddressGroup;
      14: invokevirtual #10                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #11                 // class io/grpc/grpclb/CachedSubchannelPool$CacheEntry
      20: astore_1
      21: aload_1
      22: getfield      #12                 // Field io/grpc/grpclb/CachedSubchannelPool$CacheEntry.subchannel:Lio/grpc/LoadBalancer$Subchannel;
      25: aload_0
      26: getfield      #7                  // Field subchannel:Lio/grpc/LoadBalancer$Subchannel;
      29: if_acmpne     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ldc           #13                 // String Inconsistent state
      39: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      42: aload_0
      43: getfield      #7                  // Field subchannel:Lio/grpc/LoadBalancer$Subchannel;
      46: invokevirtual #15                 // Method io/grpc/LoadBalancer$Subchannel.shutdown:()V
      49: return

  io.grpc.grpclb.CachedSubchannelPool$ShutdownSubchannelTask(io.grpc.grpclb.CachedSubchannelPool, io.grpc.LoadBalancer$Subchannel, io.grpc.grpclb.CachedSubchannelPool$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lio/grpc/grpclb/CachedSubchannelPool;Lio/grpc/LoadBalancer$Subchannel;)V
       6: return
}
