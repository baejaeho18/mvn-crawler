Compiled from "NumberSerializers.java"
public class com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base<java.lang.Object> {
  public com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field com/fasterxml/jackson/core/JsonParser$NumberType.DOUBLE:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
       5: ldc           #2                  // String number
       7: invokespecial #3                  // Method com/fasterxml/jackson/databind/ser/std/NumberSerializers$Base."<init>":(Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonParser$NumberType;Ljava/lang/String;)V
      10: return

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_1
       2: checkcast     #4                  // class java/lang/Double
       5: invokevirtual #5                  // Method java/lang/Double.doubleValue:()D
       8: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V
      11: return

  public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException;
    Code:
       0: aload_1
       1: checkcast     #4                  // class java/lang/Double
       4: astore        5
       6: aload         5
       8: invokevirtual #5                  // Method java/lang/Double.doubleValue:()D
      11: invokestatic  #7                  // Method notFinite:(D)Z
      14: ifeq          55
      17: aload         4
      19: aload_2
      20: aload         4
      22: aload_1
      23: getstatic     #8                  // Field com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;
      26: invokevirtual #9                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.typeId:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      29: invokevirtual #10                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      32: astore        6
      34: aload_2
      35: aload         5
      37: invokevirtual #5                  // Method java/lang/Double.doubleValue:()D
      40: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V
      43: aload         4
      45: aload_2
      46: aload         6
      48: invokevirtual #11                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypeSuffix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      51: pop
      52: goto          64
      55: aload_2
      56: aload         5
      58: invokevirtual #5                  // Method java/lang/Double.doubleValue:()D
      61: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V
      64: return

  public static boolean notFinite(double);
    Code:
       0: dload_0
       1: invokestatic  #12                 // Method java/lang/Double.isNaN:(D)Z
       4: ifne          14
       7: dload_0
       8: invokestatic  #13                 // Method java/lang/Double.isInfinite:(D)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn
}
