Compiled from "SerializerCache.java"
public final class com.fasterxml.jackson.databind.ser.SerializerCache {
  private final java.util.HashMap<com.fasterxml.jackson.databind.util.TypeKey, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>> _sharedMap;

  private final java.util.concurrent.atomic.AtomicReference<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap> _readOnlyMap;

  public com.fasterxml.jackson.databind.ser.SerializerCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: bipush        64
      11: invokespecial #3                  // Method java/util/HashMap."<init>":(I)V
      14: putfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
      17: aload_0
      18: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      21: dup
      22: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      25: putfield      #7                  // Field _readOnlyMap:Ljava/util/concurrent/atomic/AtomicReference;
      28: return

  public com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _readOnlyMap:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #9                  // class com/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap
      10: astore_1
      11: aload_1
      12: ifnull        17
      15: aload_1
      16: areturn
      17: aload_0
      18: invokespecial #10                 // Method _makeReadOnlyLookupMap:()Lcom/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap;
      21: areturn

  private final synchronized com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _makeReadOnlyLookupMap();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _readOnlyMap:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #9                  // class com/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap
      10: astore_1
      11: aload_1
      12: ifnonnull     31
      15: aload_0
      16: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
      19: invokestatic  #11                 // Method com/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap.from:(Ljava/util/HashMap;)Lcom/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap;
      22: astore_1
      23: aload_0
      24: getfield      #7                  // Field _readOnlyMap:Ljava/util/concurrent/atomic/AtomicReference;
      27: aload_1
      28: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      31: aload_1
      32: areturn

  public synchronized int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       4: invokevirtual #13                 // Method java/util/HashMap.size:()I
       7: ireturn

  public com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> untypedValueSerializer(java.lang.Class<?>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       8: new           #14                 // class com/fasterxml/jackson/databind/util/TypeKey
      11: dup
      12: aload_1
      13: iconst_0
      14: invokespecial #15                 // Method com/fasterxml/jackson/databind/util/TypeKey."<init>":(Ljava/lang/Class;Z)V
      17: invokevirtual #16                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #17                 // class com/fasterxml/jackson/databind/JsonSerializer
      23: aload_2
      24: monitorexit
      25: areturn
      26: astore_3
      27: aload_2
      28: monitorexit
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           4    25    26   any
          26    29    26   any

  public com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> untypedValueSerializer(com.fasterxml.jackson.databind.JavaType);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       8: new           #14                 // class com/fasterxml/jackson/databind/util/TypeKey
      11: dup
      12: aload_1
      13: iconst_0
      14: invokespecial #18                 // Method com/fasterxml/jackson/databind/util/TypeKey."<init>":(Lcom/fasterxml/jackson/databind/JavaType;Z)V
      17: invokevirtual #16                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #17                 // class com/fasterxml/jackson/databind/JsonSerializer
      23: aload_2
      24: monitorexit
      25: areturn
      26: astore_3
      27: aload_2
      28: monitorexit
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           4    25    26   any
          26    29    26   any

  public com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> typedValueSerializer(com.fasterxml.jackson.databind.JavaType);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       8: new           #14                 // class com/fasterxml/jackson/databind/util/TypeKey
      11: dup
      12: aload_1
      13: iconst_1
      14: invokespecial #18                 // Method com/fasterxml/jackson/databind/util/TypeKey."<init>":(Lcom/fasterxml/jackson/databind/JavaType;Z)V
      17: invokevirtual #16                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #17                 // class com/fasterxml/jackson/databind/JsonSerializer
      23: aload_2
      24: monitorexit
      25: areturn
      26: astore_3
      27: aload_2
      28: monitorexit
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           4    25    26   any
          26    29    26   any

  public com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> typedValueSerializer(java.lang.Class<?>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       8: new           #14                 // class com/fasterxml/jackson/databind/util/TypeKey
      11: dup
      12: aload_1
      13: iconst_1
      14: invokespecial #15                 // Method com/fasterxml/jackson/databind/util/TypeKey."<init>":(Ljava/lang/Class;Z)V
      17: invokevirtual #16                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #17                 // class com/fasterxml/jackson/databind/JsonSerializer
      23: aload_2
      24: monitorexit
      25: areturn
      26: astore_3
      27: aload_2
      28: monitorexit
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           4    25    26   any
          26    29    26   any

  public void addTypedSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       8: new           #14                 // class com/fasterxml/jackson/databind/util/TypeKey
      11: dup
      12: aload_1
      13: iconst_1
      14: invokespecial #18                 // Method com/fasterxml/jackson/databind/util/TypeKey."<init>":(Lcom/fasterxml/jackson/databind/JavaType;Z)V
      17: aload_2
      18: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: ifnonnull     32
      24: aload_0
      25: getfield      #7                  // Field _readOnlyMap:Ljava/util/concurrent/atomic/AtomicReference;
      28: aconst_null
      29: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      32: aload_3
      33: monitorexit
      34: goto          44
      37: astore        4
      39: aload_3
      40: monitorexit
      41: aload         4
      43: athrow
      44: return
    Exception table:
       from    to  target type
           4    34    37   any
          37    41    37   any

  public void addTypedSerializer(java.lang.Class<?>, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       8: new           #14                 // class com/fasterxml/jackson/databind/util/TypeKey
      11: dup
      12: aload_1
      13: iconst_1
      14: invokespecial #15                 // Method com/fasterxml/jackson/databind/util/TypeKey."<init>":(Ljava/lang/Class;Z)V
      17: aload_2
      18: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: ifnonnull     32
      24: aload_0
      25: getfield      #7                  // Field _readOnlyMap:Ljava/util/concurrent/atomic/AtomicReference;
      28: aconst_null
      29: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      32: aload_3
      33: monitorexit
      34: goto          44
      37: astore        4
      39: aload_3
      40: monitorexit
      41: aload         4
      43: athrow
      44: return
    Exception table:
       from    to  target type
           4    34    37   any
          37    41    37   any

  public void addAndResolveNonTypedSerializer(java.lang.Class<?>, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       9: new           #14                 // class com/fasterxml/jackson/databind/util/TypeKey
      12: dup
      13: aload_1
      14: iconst_0
      15: invokespecial #15                 // Method com/fasterxml/jackson/databind/util/TypeKey."<init>":(Ljava/lang/Class;Z)V
      18: aload_2
      19: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: ifnonnull     33
      25: aload_0
      26: getfield      #7                  // Field _readOnlyMap:Ljava/util/concurrent/atomic/AtomicReference;
      29: aconst_null
      30: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      33: aload_2
      34: instanceof    #20                 // class com/fasterxml/jackson/databind/ser/ResolvableSerializer
      37: ifeq          50
      40: aload_2
      41: checkcast     #20                 // class com/fasterxml/jackson/databind/ser/ResolvableSerializer
      44: aload_3
      45: invokeinterface #21,  2           // InterfaceMethod com/fasterxml/jackson/databind/ser/ResolvableSerializer.resolve:(Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      50: aload         4
      52: monitorexit
      53: goto          64
      56: astore        5
      58: aload         4
      60: monitorexit
      61: aload         5
      63: athrow
      64: return
    Exception table:
       from    to  target type
           5    53    56   any
          56    61    56   any

  public void addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       9: new           #14                 // class com/fasterxml/jackson/databind/util/TypeKey
      12: dup
      13: aload_1
      14: iconst_0
      15: invokespecial #18                 // Method com/fasterxml/jackson/databind/util/TypeKey."<init>":(Lcom/fasterxml/jackson/databind/JavaType;Z)V
      18: aload_2
      19: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: ifnonnull     33
      25: aload_0
      26: getfield      #7                  // Field _readOnlyMap:Ljava/util/concurrent/atomic/AtomicReference;
      29: aconst_null
      30: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      33: aload_2
      34: instanceof    #20                 // class com/fasterxml/jackson/databind/ser/ResolvableSerializer
      37: ifeq          50
      40: aload_2
      41: checkcast     #20                 // class com/fasterxml/jackson/databind/ser/ResolvableSerializer
      44: aload_3
      45: invokeinterface #21,  2           // InterfaceMethod com/fasterxml/jackson/databind/ser/ResolvableSerializer.resolve:(Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      50: aload         4
      52: monitorexit
      53: goto          64
      56: astore        5
      58: aload         4
      60: monitorexit
      61: aload         5
      63: athrow
      64: return
    Exception table:
       from    to  target type
           5    53    56   any
          56    61    56   any

  public void addAndResolveNonTypedSerializer(java.lang.Class<?>, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: dup
       2: astore        5
       4: monitorenter
       5: aload_0
       6: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       9: new           #14                 // class com/fasterxml/jackson/databind/util/TypeKey
      12: dup
      13: aload_1
      14: iconst_0
      15: invokespecial #15                 // Method com/fasterxml/jackson/databind/util/TypeKey."<init>":(Ljava/lang/Class;Z)V
      18: aload_3
      19: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: astore        6
      24: aload_0
      25: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
      28: new           #14                 // class com/fasterxml/jackson/databind/util/TypeKey
      31: dup
      32: aload_2
      33: iconst_0
      34: invokespecial #18                 // Method com/fasterxml/jackson/databind/util/TypeKey."<init>":(Lcom/fasterxml/jackson/databind/JavaType;Z)V
      37: aload_3
      38: invokevirtual #19                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: astore        7
      43: aload         6
      45: ifnull        53
      48: aload         7
      50: ifnonnull     61
      53: aload_0
      54: getfield      #7                  // Field _readOnlyMap:Ljava/util/concurrent/atomic/AtomicReference;
      57: aconst_null
      58: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      61: aload_3
      62: instanceof    #20                 // class com/fasterxml/jackson/databind/ser/ResolvableSerializer
      65: ifeq          79
      68: aload_3
      69: checkcast     #20                 // class com/fasterxml/jackson/databind/ser/ResolvableSerializer
      72: aload         4
      74: invokeinterface #21,  2           // InterfaceMethod com/fasterxml/jackson/databind/ser/ResolvableSerializer.resolve:(Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      79: aload         5
      81: monitorexit
      82: goto          93
      85: astore        8
      87: aload         5
      89: monitorexit
      90: aload         8
      92: athrow
      93: return
    Exception table:
       from    to  target type
           5    82    85   any
          85    90    85   any

  public synchronized void flush();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       4: invokevirtual #22                 // Method java/util/HashMap.clear:()V
       7: return
}
