Compiled from "StdScalarSerializer.java"
public abstract class com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<T> extends com.fasterxml.jackson.databind.ser.std.StdSerializer<T> {
  protected com.fasterxml.jackson.databind.ser.std.StdScalarSerializer(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/fasterxml/jackson/databind/ser/std/StdSerializer."<init>":(Ljava/lang/Class;)V
       5: return

  protected com.fasterxml.jackson.databind.ser.std.StdScalarSerializer(java.lang.Class<?>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/fasterxml/jackson/databind/ser/std/StdSerializer."<init>":(Ljava/lang/Class;)V
       5: return

  protected com.fasterxml.jackson.databind.ser.std.StdScalarSerializer(com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/StdSerializer."<init>":(Lcom/fasterxml/jackson/databind/ser/std/StdSerializer;)V
       5: return

  public void serializeWithType(T, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException;
    Code:
       0: aload         4
       2: aload_2
       3: aload         4
       5: aload_1
       6: getstatic     #3                  // Field com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;
       9: invokevirtual #4                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.typeId:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      12: invokevirtual #5                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      15: astore        5
      17: aload_0
      18: aload_1
      19: aload_2
      20: aload_3
      21: invokevirtual #6                  // Method serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      24: aload         4
      26: aload_2
      27: aload         5
      29: invokevirtual #7                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypeSuffix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
      32: pop
      33: return

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: ldc           #8                  // String string
       3: iconst_1
       4: invokevirtual #9                  // Method createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       7: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #10                 // Method visitStringFormat:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V
       6: return
}
