Compiled from "RedisSinkConfig.java"
public class org.apache.pulsar.io.redis.sink.RedisSinkConfig extends org.apache.pulsar.io.redis.RedisAbstractConfig implements java.io.Serializable {
  private static final long serialVersionUID;

  private long operationTimeout;

  private long batchTimeMs;

  private int batchSize;

  public static org.apache.pulsar.io.redis.sink.RedisSinkConfig load(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #1                  // class com/fasterxml/jackson/databind/ObjectMapper
       3: dup
       4: new           #2                  // class com/fasterxml/jackson/dataformat/yaml/YAMLFactory
       7: dup
       8: invokespecial #3                  // Method com/fasterxml/jackson/dataformat/yaml/YAMLFactory."<init>":()V
      11: invokespecial #4                  // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":(Lcom/fasterxml/jackson/core/JsonFactory;)V
      14: astore_1
      15: aload_1
      16: new           #5                  // class java/io/File
      19: dup
      20: aload_0
      21: invokespecial #6                  // Method java/io/File."<init>":(Ljava/lang/String;)V
      24: ldc           #7                  // class org/apache/pulsar/io/redis/sink/RedisSinkConfig
      26: invokevirtual #8                  // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:(Ljava/io/File;Ljava/lang/Class;)Ljava/lang/Object;
      29: checkcast     #7                  // class org/apache/pulsar/io/redis/sink/RedisSinkConfig
      32: areturn

  public static org.apache.pulsar.io.redis.sink.RedisSinkConfig load(java.util.Map<java.lang.String, java.lang.Object>) throws java.io.IOException;
    Code:
       0: new           #1                  // class com/fasterxml/jackson/databind/ObjectMapper
       3: dup
       4: invokespecial #9                  // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #1                  // class com/fasterxml/jackson/databind/ObjectMapper
      12: dup
      13: invokespecial #9                  // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
      16: aload_0
      17: invokevirtual #10                 // Method com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString:(Ljava/lang/Object;)Ljava/lang/String;
      20: ldc           #7                  // class org/apache/pulsar/io/redis/sink/RedisSinkConfig
      22: invokevirtual #11                 // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      25: checkcast     #7                  // class org/apache/pulsar/io/redis/sink/RedisSinkConfig
      28: areturn

  public void validate();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method org/apache/pulsar/io/redis/RedisAbstractConfig.validate:()V
       4: aload_0
       5: getfield      #13                 // Field operationTimeout:J
       8: lconst_0
       9: lcmp
      10: ifle          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ldc           #14                 // String operationTimeout must be a positive long.
      20: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      23: aload_0
      24: getfield      #16                 // Field batchTimeMs:J
      27: lconst_0
      28: lcmp
      29: ifle          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ldc           #17                 // String batchTimeMs must be a positive long.
      39: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      42: aload_0
      43: getfield      #18                 // Field batchSize:I
      46: ifle          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ldc           #19                 // String batchSize must be a positive integer.
      56: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      59: return

  public org.apache.pulsar.io.redis.sink.RedisSinkConfig();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method org/apache/pulsar/io/redis/RedisAbstractConfig."<init>":()V
       4: aload_0
       5: ldc2_w        #21                 // long 10000l
       8: putfield      #13                 // Field operationTimeout:J
      11: aload_0
      12: ldc2_w        #23                 // long 1000l
      15: putfield      #16                 // Field batchTimeMs:J
      18: aload_0
      19: sipush        200
      22: putfield      #18                 // Field batchSize:I
      25: return

  public long getOperationTimeout();
    Code:
       0: aload_0
       1: getfield      #13                 // Field operationTimeout:J
       4: lreturn

  public long getBatchTimeMs();
    Code:
       0: aload_0
       1: getfield      #16                 // Field batchTimeMs:J
       4: lreturn

  public int getBatchSize();
    Code:
       0: aload_0
       1: getfield      #18                 // Field batchSize:I
       4: ireturn

  public org.apache.pulsar.io.redis.sink.RedisSinkConfig setOperationTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #13                 // Field operationTimeout:J
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.redis.sink.RedisSinkConfig setBatchTimeMs(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #16                 // Field batchTimeMs:J
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.redis.sink.RedisSinkConfig setBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field batchSize:I
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #27                 // String RedisSinkConfig(operationTimeout=
       9: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #29                 // Method getOperationTimeout:()J
      16: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #31                 // String , batchTimeMs=
      21: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #32                 // Method getBatchTimeMs:()J
      28: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #33                 // String , batchSize=
      33: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #34                 // Method getBatchSize:()I
      40: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #36                 // String )
      45: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #7                  // class org/apache/pulsar/io/redis/sink/RedisSinkConfig
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #7                  // class org/apache/pulsar/io/redis/sink/RedisSinkConfig
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #38                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #29                 // Method getOperationTimeout:()J
      35: aload_2
      36: invokevirtual #29                 // Method getOperationTimeout:()J
      39: lcmp
      40: ifeq          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: invokevirtual #32                 // Method getBatchTimeMs:()J
      49: aload_2
      50: invokevirtual #32                 // Method getBatchTimeMs:()J
      53: lcmp
      54: ifeq          59
      57: iconst_0
      58: ireturn
      59: aload_0
      60: invokevirtual #34                 // Method getBatchSize:()I
      63: aload_2
      64: invokevirtual #34                 // Method getBatchSize:()I
      67: if_icmpeq     72
      70: iconst_0
      71: ireturn
      72: iconst_1
      73: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #7                  // class org/apache/pulsar/io/redis/sink/RedisSinkConfig
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #29                 // Method getOperationTimeout:()J
       9: lstore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: lload_3
      15: bipush        32
      17: lushr
      18: lload_3
      19: lxor
      20: l2i
      21: iadd
      22: istore_2
      23: aload_0
      24: invokevirtual #32                 // Method getBatchTimeMs:()J
      27: lstore        5
      29: iload_2
      30: bipush        59
      32: imul
      33: lload         5
      35: bipush        32
      37: lushr
      38: lload         5
      40: lxor
      41: l2i
      42: iadd
      43: istore_2
      44: iload_2
      45: bipush        59
      47: imul
      48: aload_0
      49: invokevirtual #34                 // Method getBatchSize:()I
      52: iadd
      53: istore_2
      54: iload_2
      55: ireturn
}
