Compiled from "IQueryOperation.java"
public interface de.flapdoodle.mongoom.IQueryOperation<T, Q extends de.flapdoodle.mongoom.IQuery<T>, V> {
  public abstract Q exists(boolean);

  public abstract Q size(int);

  public abstract Q mod(int, int);

  public abstract Q eq(V);

  public abstract Q ne(V);

  public abstract Q gt(V);

  public abstract Q lt(V);

  public abstract Q gte(V);

  public abstract Q lte(V);

  public abstract Q all(V...);

  public abstract Q in(V...);

  public abstract Q nin(V...);

  public abstract Q all(java.util.Collection<V>);

  public abstract Q in(java.util.Collection<V>);

  public abstract Q nin(java.util.Collection<V>);

  public abstract <V> Q type(java.lang.Class<?>);

  public abstract Q match(java.util.regex.Pattern);

  public abstract de.flapdoodle.mongoom.IQueryOperation<T, Q, V> not();

  public abstract de.flapdoodle.mongoom.ISubQuery<T, Q> elemMatch();

  public abstract <V> de.flapdoodle.mongoom.IQueryOperation<T, Q, V> field(de.flapdoodle.mongoom.mapping.properties.PropertyReference<V>);

  public abstract <C extends java.util.Collection<V>, V> de.flapdoodle.mongoom.IListQueryOperation<T, Q, V> listfield(de.flapdoodle.mongoom.mapping.properties.PropertyReference<C>);
}
