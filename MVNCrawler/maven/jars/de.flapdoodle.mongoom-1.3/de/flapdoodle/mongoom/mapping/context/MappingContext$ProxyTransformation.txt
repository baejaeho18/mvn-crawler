Compiled from "MappingContext.java"
class de.flapdoodle.mongoom.mapping.context.MappingContext$ProxyTransformation<Bean, Mapped> implements de.flapdoodle.mongoom.mapping.ITransformation<Bean, Mapped> {
  de.flapdoodle.mongoom.mapping.ITransformation<Bean, Mapped> _parent;

  java.lang.ThreadLocal<java.util.Set<java.lang.Integer>> _loopBeanMap;

  de.flapdoodle.mongoom.mapping.context.MappingContext$ProxyTransformation();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ThreadLocal
       8: dup
       9: invokespecial #3                  // Method java/lang/ThreadLocal."<init>":()V
      12: putfield      #4                  // Field _loopBeanMap:Ljava/lang/ThreadLocal;
      15: return

  protected void setParent(de.flapdoodle.mongoom.mapping.ITransformation<Bean, Mapped>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field _parent:Lde/flapdoodle/mongoom/mapping/ITransformation;
       5: return

  public Mapped asObject(Bean);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: aload_1
       4: invokespecial #6                  // Method checkLoop:(Ljava/lang/Object;)Z
       7: istore_2
       8: aload_0
       9: getfield      #5                  // Field _parent:Lde/flapdoodle/mongoom/mapping/ITransformation;
      12: aload_1
      13: invokeinterface #7,  2            // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.asObject:(Ljava/lang/Object;)Ljava/lang/Object;
      18: astore_3
      19: aload_0
      20: iload_2
      21: aload_1
      22: invokespecial #8                  // Method clearLoop:(ZLjava/lang/Object;)V
      25: aload_3
      26: areturn
      27: astore        4
      29: aload_0
      30: iload_2
      31: aload_1
      32: invokespecial #8                  // Method clearLoop:(ZLjava/lang/Object;)V
      35: aload         4
      37: athrow
    Exception table:
       from    to  target type
           2    19    27   any
          27    29    27   any

  private void clearLoop(boolean, Bean);
    Code:
       0: iload_1
       1: ifeq          75
       4: aload_2
       5: invokestatic  #9                  // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       8: istore_3
       9: aload_0
      10: getfield      #4                  // Field _loopBeanMap:Ljava/lang/ThreadLocal;
      13: invokevirtual #10                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      16: checkcast     #11                 // class java/util/Set
      19: astore        4
      21: aload         4
      23: iload_3
      24: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: invokeinterface #13,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      32: ifne          57
      35: aload_0
      36: getfield      #4                  // Field _loopBeanMap:Ljava/lang/ThreadLocal;
      39: aconst_null
      40: invokevirtual #14                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      43: new           #15                 // class de/flapdoodle/mongoom/exceptions/MappingException
      46: dup
      47: aload_2
      48: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      51: ldc           #17                 // String Something went wrong with loop detection
      53: invokespecial #18                 // Method de/flapdoodle/mongoom/exceptions/MappingException."<init>":(Ljava/lang/Class;Ljava/lang/String;)V
      56: athrow
      57: aload         4
      59: invokeinterface #19,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      64: ifeq          75
      67: aload_0
      68: getfield      #4                  // Field _loopBeanMap:Ljava/lang/ThreadLocal;
      71: aconst_null
      72: invokevirtual #14                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      75: return

  private boolean checkLoop(Bean);
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: istore_2
       5: aload_0
       6: getfield      #4                  // Field _loopBeanMap:Ljava/lang/ThreadLocal;
       9: invokevirtual #10                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      12: checkcast     #11                 // class java/util/Set
      15: astore_3
      16: aload_3
      17: ifnonnull     32
      20: invokestatic  #20                 // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      23: astore_3
      24: aload_0
      25: getfield      #4                  // Field _loopBeanMap:Ljava/lang/ThreadLocal;
      28: aload_3
      29: invokevirtual #14                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      32: aload_3
      33: iload_2
      34: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      37: invokeinterface #21,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      42: ifne          59
      45: new           #15                 // class de/flapdoodle/mongoom/exceptions/MappingException
      48: dup
      49: aload_1
      50: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      53: ldc           #22                 // String Loop detected
      55: invokespecial #18                 // Method de/flapdoodle/mongoom/exceptions/MappingException."<init>":(Ljava/lang/Class;Ljava/lang/String;)V
      58: athrow
      59: iconst_1
      60: ireturn

  public Bean asEntity(Mapped);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _parent:Lde/flapdoodle/mongoom/mapping/ITransformation;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.asEntity:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public <Source> de.flapdoodle.mongoom.mapping.ITransformation<Source, ?> propertyTransformation(de.flapdoodle.mongoom.mapping.naming.PropertyName<Source>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _parent:Lde/flapdoodle/mongoom/mapping/ITransformation;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.propertyTransformation:(Lde/flapdoodle/mongoom/mapping/naming/PropertyName;)Lde/flapdoodle/mongoom/mapping/ITransformation;
      10: areturn

  public <Source> de.flapdoodle.mongoom.mapping.naming.PropertyName<Source> propertyName(de.flapdoodle.mongoom.mapping.properties.PropertyReference<Source>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _parent:Lde/flapdoodle/mongoom/mapping/ITransformation;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.propertyName:(Lde/flapdoodle/mongoom/mapping/properties/PropertyReference;)Lde/flapdoodle/mongoom/mapping/naming/PropertyName;
      10: areturn

  public de.flapdoodle.mongoom.mapping.naming.PropertyName<?> propertyName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _parent:Lde/flapdoodle/mongoom/mapping/ITransformation;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.propertyName:(Ljava/lang/String;)Lde/flapdoodle/mongoom/mapping/naming/PropertyName;
      10: areturn

  public java.util.Set<de.flapdoodle.mongoom.mapping.naming.PropertyName<?>> properties();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _parent:Lde/flapdoodle/mongoom/mapping/ITransformation;
       4: invokeinterface #27,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.properties:()Ljava/util/Set;
       9: areturn
}
