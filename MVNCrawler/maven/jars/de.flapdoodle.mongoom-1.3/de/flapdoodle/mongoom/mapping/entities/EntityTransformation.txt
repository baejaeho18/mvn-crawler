Compiled from "EntityTransformation.java"
public class de.flapdoodle.mongoom.mapping.entities.EntityTransformation<Bean> extends de.flapdoodle.mongoom.mapping.entities.AbstractBeanTransformation<Bean, de.flapdoodle.mongoom.mapping.entities.EntityContext<Bean>> implements de.flapdoodle.mongoom.mapping.IEntityTransformation<Bean> {
  private de.flapdoodle.mongoom.mapping.entities.EntityTransformation$VersionUpdater<Bean> _versionUpdater;

  private de.flapdoodle.mongoom.mapping.ITransformation _idTransformation;

  private de.flapdoodle.mongoom.mapping.properties.IPropertyField<?> _idProperty;

  private de.flapdoodle.mongoom.mapping.callbacks.IEntityReadCallback<Bean> _readCallback;

  private de.flapdoodle.mongoom.mapping.callbacks.IEntityWriteCallback<Bean> _writeCallback;

  private de.flapdoodle.mongoom.datastore.collections.ICollection _collection;

  private de.flapdoodle.mongoom.datastore.index.IIndex _index;

  public de.flapdoodle.mongoom.mapping.entities.EntityTransformation(de.flapdoodle.mongoom.mapping.entities.EntityContext<Bean>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method de/flapdoodle/mongoom/mapping/entities/AbstractBeanTransformation."<init>":(Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;)V
       5: aload_0
       6: new           #2                  // class de/flapdoodle/mongoom/mapping/entities/EntityTransformation$VersionUpdater
       9: dup
      10: aload_0
      11: getfield      #3                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
      14: checkcast     #4                  // class de/flapdoodle/mongoom/mapping/entities/EntityContext
      17: invokevirtual #5                  // Method de/flapdoodle/mongoom/mapping/entities/EntityContext.getVersionProperty:()Lde/flapdoodle/mongoom/mapping/properties/IPropertyField;
      20: aload_0
      21: getfield      #3                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
      24: checkcast     #4                  // class de/flapdoodle/mongoom/mapping/entities/EntityContext
      27: invokevirtual #6                  // Method de/flapdoodle/mongoom/mapping/entities/EntityContext.getVersionFactory:()Lde/flapdoodle/mongoom/mapping/versions/IVersionFactory;
      30: invokespecial #7                  // Method de/flapdoodle/mongoom/mapping/entities/EntityTransformation$VersionUpdater."<init>":(Lde/flapdoodle/mongoom/mapping/properties/IPropertyField;Lde/flapdoodle/mongoom/mapping/versions/IVersionFactory;)V
      33: putfield      #8                  // Field _versionUpdater:Lde/flapdoodle/mongoom/mapping/entities/EntityTransformation$VersionUpdater;
      36: aload_0
      37: aload_1
      38: invokevirtual #9                  // Method de/flapdoodle/mongoom/mapping/entities/EntityContext.getIdProperty:()Lde/flapdoodle/mongoom/mapping/properties/IPropertyField;
      41: putfield      #10                 // Field _idProperty:Lde/flapdoodle/mongoom/mapping/properties/IPropertyField;
      44: aload_0
      45: getfield      #10                 // Field _idProperty:Lde/flapdoodle/mongoom/mapping/properties/IPropertyField;
      48: ifnonnull     65
      51: new           #11                 // class de/flapdoodle/mongoom/exceptions/MappingException
      54: dup
      55: aload_1
      56: invokevirtual #12                 // Method de/flapdoodle/mongoom/mapping/entities/EntityContext.getEntityClass:()Ljava/lang/Class;
      59: ldc           #13                 // String Id not set
      61: invokespecial #14                 // Method de/flapdoodle/mongoom/exceptions/MappingException."<init>":(Ljava/lang/Class;Ljava/lang/String;)V
      64: athrow
      65: aload_0
      66: aload_1
      67: invokevirtual #15                 // Method de/flapdoodle/mongoom/mapping/entities/EntityContext.getIdTransformation:()Lde/flapdoodle/mongoom/mapping/ITransformation;
      70: putfield      #16                 // Field _idTransformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
      73: aload_0
      74: getfield      #16                 // Field _idTransformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
      77: ifnonnull     94
      80: new           #11                 // class de/flapdoodle/mongoom/exceptions/MappingException
      83: dup
      84: aload_1
      85: invokevirtual #12                 // Method de/flapdoodle/mongoom/mapping/entities/EntityContext.getEntityClass:()Ljava/lang/Class;
      88: ldc           #17                 // String Id Transformation not set
      90: invokespecial #14                 // Method de/flapdoodle/mongoom/exceptions/MappingException."<init>":(Ljava/lang/Class;Ljava/lang/String;)V
      93: athrow
      94: aload_0
      95: aload_1
      96: invokevirtual #18                 // Method de/flapdoodle/mongoom/mapping/entities/EntityContext.getReadCallback:()Lde/flapdoodle/mongoom/mapping/callbacks/IEntityReadCallback;
      99: putfield      #19                 // Field _readCallback:Lde/flapdoodle/mongoom/mapping/callbacks/IEntityReadCallback;
     102: aload_0
     103: aload_1
     104: invokevirtual #20                 // Method de/flapdoodle/mongoom/mapping/entities/EntityContext.getWriteCallback:()Lde/flapdoodle/mongoom/mapping/callbacks/IEntityWriteCallback;
     107: putfield      #21                 // Field _writeCallback:Lde/flapdoodle/mongoom/mapping/callbacks/IEntityWriteCallback;
     110: aload_0
     111: getfield      #21                 // Field _writeCallback:Lde/flapdoodle/mongoom/mapping/callbacks/IEntityWriteCallback;
     114: ifnonnull     128
     117: aload_0
     118: new           #22                 // class de/flapdoodle/mongoom/mapping/callbacks/NoopWriteCallback
     121: dup
     122: invokespecial #23                 // Method de/flapdoodle/mongoom/mapping/callbacks/NoopWriteCallback."<init>":()V
     125: putfield      #21                 // Field _writeCallback:Lde/flapdoodle/mongoom/mapping/callbacks/IEntityWriteCallback;
     128: aload_0
     129: getfield      #19                 // Field _readCallback:Lde/flapdoodle/mongoom/mapping/callbacks/IEntityReadCallback;
     132: ifnonnull     146
     135: aload_0
     136: new           #24                 // class de/flapdoodle/mongoom/mapping/callbacks/NoopReadCallback
     139: dup
     140: invokespecial #25                 // Method de/flapdoodle/mongoom/mapping/callbacks/NoopReadCallback."<init>":()V
     143: putfield      #19                 // Field _readCallback:Lde/flapdoodle/mongoom/mapping/callbacks/IEntityReadCallback;
     146: aload_0
     147: aload_1
     148: invokevirtual #26                 // Method de/flapdoodle/mongoom/mapping/entities/EntityContext.getEntityAnnotation:()Lde/flapdoodle/mongoom/annotations/Entity;
     151: invokeinterface #27,  1           // InterfaceMethod de/flapdoodle/mongoom/annotations/Entity.value:()Ljava/lang/String;
     156: aload_0
     157: invokevirtual #28                 // Method getContext:()Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
     160: checkcast     #4                  // class de/flapdoodle/mongoom/mapping/entities/EntityContext
     163: invokevirtual #26                 // Method de/flapdoodle/mongoom/mapping/entities/EntityContext.getEntityAnnotation:()Lde/flapdoodle/mongoom/annotations/Entity;
     166: invokeinterface #29,  1           // InterfaceMethod de/flapdoodle/mongoom/annotations/Entity.cap:()Lde/flapdoodle/mongoom/annotations/CappedAt;
     171: invokestatic  #30                 // Method de/flapdoodle/mongoom/datastore/collections/ICollectionCap$Annotated.with:(Lde/flapdoodle/mongoom/annotations/CappedAt;)Lde/flapdoodle/mongoom/datastore/collections/ICollectionCap;
     174: invokestatic  #31                 // Method de/flapdoodle/mongoom/datastore/collections/Collections.newCollection:(Ljava/lang/String;Lde/flapdoodle/mongoom/datastore/collections/ICollectionCap;)Lde/flapdoodle/mongoom/datastore/collections/ICollection;
     177: putfield      #32                 // Field _collection:Lde/flapdoodle/mongoom/datastore/collections/ICollection;
     180: aload_0
     181: aload_1
     182: invokevirtual #33                 // Method de/flapdoodle/mongoom/mapping/entities/EntityContext.index:()Lde/flapdoodle/mongoom/datastore/index/IIndex;
     185: putfield      #34                 // Field _index:Lde/flapdoodle/mongoom/datastore/index/IIndex;
     188: return

  public void newVersion(Bean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field _versionUpdater:Lde/flapdoodle/mongoom/mapping/entities/EntityTransformation$VersionUpdater;
       4: aload_1
       5: invokevirtual #35                 // Method de/flapdoodle/mongoom/mapping/entities/EntityTransformation$VersionUpdater.newVersion:(Ljava/lang/Object;)V
       8: return

  public java.lang.Object getVersion(Bean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field _versionUpdater:Lde/flapdoodle/mongoom/mapping/entities/EntityTransformation$VersionUpdater;
       4: aload_1
       5: invokevirtual #36                 // Method de/flapdoodle/mongoom/mapping/entities/EntityTransformation$VersionUpdater.getVersion:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public Bean asEntity(com.mongodb.DBObject);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #37                 // Method de/flapdoodle/mongoom/mapping/entities/AbstractBeanTransformation.asEntity:(Lcom/mongodb/DBObject;)Ljava/lang/Object;
       5: astore_2
       6: aload_0
       7: getfield      #19                 // Field _readCallback:Lde/flapdoodle/mongoom/mapping/callbacks/IEntityReadCallback;
      10: aload_2
      11: invokeinterface #38,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/callbacks/IEntityReadCallback.onRead:(Ljava/lang/Object;)V
      16: aload_2
      17: areturn

  public com.mongodb.DBObject asObject(Bean);
    Code:
       0: aload_0
       1: getfield      #21                 // Field _writeCallback:Lde/flapdoodle/mongoom/mapping/callbacks/IEntityWriteCallback;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/callbacks/IEntityWriteCallback.onWrite:(Ljava/lang/Object;)V
      10: aload_0
      11: aload_1
      12: invokespecial #40                 // Method de/flapdoodle/mongoom/mapping/entities/AbstractBeanTransformation.asObject:(Ljava/lang/Object;)Lcom/mongodb/DBObject;
      15: areturn

  public java.lang.Object getId(Bean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field _idProperty:Lde/flapdoodle/mongoom/mapping/properties/IPropertyField;
       4: invokeinterface #41,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/properties/IPropertyField.getField:()Ljava/lang/reflect/Field;
       9: astore_2
      10: aload_0
      11: aload_2
      12: aload_1
      13: invokevirtual #42                 // Method getFieldValue:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      16: astore_3
      17: aload_0
      18: getfield      #16                 // Field _idTransformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
      21: aload_3
      22: invokeinterface #43,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.asObject:(Ljava/lang/Object;)Ljava/lang/Object;
      27: astore        4
      29: aload         4
      31: areturn

  public void setId(Bean, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field _idProperty:Lde/flapdoodle/mongoom/mapping/properties/IPropertyField;
       4: invokeinterface #41,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/properties/IPropertyField.getField:()Ljava/lang/reflect/Field;
       9: astore_3
      10: aload_0
      11: getfield      #16                 // Field _idTransformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
      14: aload_2
      15: invokeinterface #44,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.asEntity:(Ljava/lang/Object;)Ljava/lang/Object;
      20: astore        4
      22: aload_0
      23: aload_1
      24: aload_3
      25: aload         4
      27: invokevirtual #45                 // Method setFieldValue:(Ljava/lang/Object;Ljava/lang/reflect/Field;Ljava/lang/Object;)V
      30: return

  public de.flapdoodle.mongoom.datastore.collections.ICollection collection();
    Code:
       0: aload_0
       1: getfield      #32                 // Field _collection:Lde/flapdoodle/mongoom/datastore/collections/ICollection;
       4: areturn

  public de.flapdoodle.mongoom.datastore.index.IIndex indexes();
    Code:
       0: aload_0
       1: getfield      #34                 // Field _index:Lde/flapdoodle/mongoom/datastore/index/IIndex;
       4: areturn

  public <Source> de.flapdoodle.mongoom.mapping.IViewTransformation<Source, com.mongodb.DBObject> viewTransformation(java.lang.Class<Source>);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getContext:()Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
       4: checkcast     #4                  // class de/flapdoodle/mongoom/mapping/entities/EntityContext
       7: aload_1
       8: invokevirtual #46                 // Method de/flapdoodle/mongoom/mapping/entities/EntityContext.viewTransformation:(Ljava/lang/Class;)Lde/flapdoodle/mongoom/mapping/IViewTransformation;
      11: areturn

  public java.lang.Object asEntity(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #47                 // class com/mongodb/DBObject
       5: invokevirtual #48                 // Method asEntity:(Lcom/mongodb/DBObject;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object asObject(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method asObject:(Ljava/lang/Object;)Lcom/mongodb/DBObject;
       5: areturn
}
