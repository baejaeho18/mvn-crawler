Compiled from "AbstractCollectionTransformation.java"
public abstract class de.flapdoodle.mongoom.mapping.types.AbstractCollectionTransformation<Bean, Mapped, C extends java.util.Collection<Bean>> implements de.flapdoodle.mongoom.mapping.IContainerTransformation<Bean, Mapped, C, java.util.List<Mapped>> {
  private final java.lang.Class<Bean> _collectionType;

  private final de.flapdoodle.mongoom.mapping.ITransformation<Bean, Mapped> _transformation;

  public de.flapdoodle.mongoom.mapping.types.AbstractCollectionTransformation(java.lang.Class<Bean>, de.flapdoodle.mongoom.mapping.ITransformation<Bean, Mapped>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _collectionType:Ljava/lang/Class;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
      14: return

  public java.util.List<Mapped> asObject(C);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: invokestatic  #4                  // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       9: astore_2
      10: aload_1
      11: invokeinterface #5,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          53
      26: aload_3
      27: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: astore        4
      34: aload_2
      35: aload_0
      36: getfield      #3                  // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
      39: aload         4
      41: invokeinterface #8,  2            // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.asObject:(Ljava/lang/Object;)Ljava/lang/Object;
      46: invokevirtual #9                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      49: pop
      50: goto          17
      53: aload_2
      54: areturn

  public C asEntity(java.util.List<Mapped>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #10                 // Method newContainer:()Ljava/util/Collection;
      10: astore_2
      11: aload_1
      12: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          56
      27: aload_3
      28: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: astore        4
      35: aload_2
      36: aload_0
      37: getfield      #3                  // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
      40: aload         4
      42: invokeinterface #12,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.asEntity:(Ljava/lang/Object;)Ljava/lang/Object;
      47: invokeinterface #13,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          18
      56: aload_2
      57: areturn

  protected abstract C newContainer();

  public <Source> de.flapdoodle.mongoom.mapping.ITransformation<Source, ?> propertyTransformation(de.flapdoodle.mongoom.mapping.naming.PropertyName<Source>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.propertyTransformation:(Lde/flapdoodle/mongoom/mapping/naming/PropertyName;)Lde/flapdoodle/mongoom/mapping/ITransformation;
      10: areturn

  public <Source> de.flapdoodle.mongoom.mapping.naming.PropertyName propertyName(de.flapdoodle.mongoom.mapping.properties.PropertyReference<Source>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.propertyName:(Lde/flapdoodle/mongoom/mapping/properties/PropertyReference;)Lde/flapdoodle/mongoom/mapping/naming/PropertyName;
      10: areturn

  public de.flapdoodle.mongoom.mapping.naming.PropertyName propertyName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.propertyName:(Ljava/lang/String;)Lde/flapdoodle/mongoom/mapping/naming/PropertyName;
      10: areturn

  public java.util.Set<de.flapdoodle.mongoom.mapping.naming.PropertyName<?>> properties();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
       4: invokeinterface #17,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.properties:()Ljava/util/Set;
       9: areturn

  public de.flapdoodle.mongoom.mapping.ITransformation<Bean, Mapped> containerConverter();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
       4: areturn

  public java.lang.Object asEntity(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #18                 // class java/util/List
       5: invokevirtual #19                 // Method asEntity:(Ljava/util/List;)Ljava/util/Collection;
       8: areturn

  public java.lang.Object asObject(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class java/util/Collection
       5: invokevirtual #21                 // Method asObject:(Ljava/util/Collection;)Ljava/util/List;
       8: areturn
}
