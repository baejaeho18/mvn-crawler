Compiled from "FloatVisitor.java"
class de.flapdoodle.mongoom.mapping.types.truncations.FloatVisitor$FloatTransformation extends de.flapdoodle.mongoom.mapping.types.AbstractPrimitiveTransformation<java.lang.Float, java.lang.Double> {
  public de.flapdoodle.mongoom.mapping.types.truncations.FloatVisitor$FloatTransformation();
    Code:
       0: aload_0
       1: ldc_w         #1                  // class java/lang/Float
       4: invokespecial #2                  // Method de/flapdoodle/mongoom/mapping/types/AbstractPrimitiveTransformation."<init>":(Ljava/lang/Class;)V
       7: return

  public java.lang.Double asObject(java.lang.Float);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: invokevirtual #3                  // Method java/lang/Float.doubleValue:()D
       8: invokestatic  #4                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      11: goto          15
      14: aconst_null
      15: areturn

  public java.lang.Float asEntity(java.lang.Double);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: invokevirtual #5                  // Method java/lang/Double.floatValue:()F
       8: invokestatic  #6                  // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      11: goto          15
      14: aconst_null
      15: areturn

  public java.lang.Object asEntity(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/Double
       5: invokevirtual #8                  // Method asEntity:(Ljava/lang/Double;)Ljava/lang/Float;
       8: areturn

  public java.lang.Object asObject(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/lang/Float
       5: invokevirtual #9                  // Method asObject:(Ljava/lang/Float;)Ljava/lang/Double;
       8: areturn
}
