Compiled from "AbstractSmallerTypeVisitor.java"
public abstract class de.flapdoodle.mongoom.mapping.types.truncations.AbstractSmallerTypeVisitor<S, B> extends de.flapdoodle.mongoom.mapping.AbstractVisitor implements de.flapdoodle.mongoom.mapping.ITypeVisitor<S, B> {
  public static java.util.logging.Logger _logger;

  private final java.lang.Class<?>[] _types;

  private final java.lang.Class<B> _bigType;

  protected de.flapdoodle.mongoom.mapping.types.truncations.AbstractSmallerTypeVisitor(java.lang.Class<B>, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method de/flapdoodle/mongoom/mapping/AbstractVisitor."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _bigType:Ljava/lang/Class;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field _types:[Ljava/lang/Class;
      14: return

  public de.flapdoodle.mongoom.mapping.ITransformation<S, B> transformation(de.flapdoodle.mongoom.mapping.context.IMappingContext, de.flapdoodle.mongoom.mapping.context.IPropertyContext<?>, de.flapdoodle.mongoom.mapping.ITypeInfo);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #4                  // Method isType:(Lde/flapdoodle/mongoom/mapping/ITypeInfo;)Z
       5: ifeq          50
       8: getstatic     #5                  // Field _logger:Ljava/util/logging/Logger;
      11: new           #6                  // class java/lang/StringBuilder
      14: dup
      15: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #8                  // String Data truncation may occur for
      20: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_3
      24: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #11                 // String , better use this type:
      29: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: getfield      #2                  // Field _bigType:Ljava/lang/Class;
      36: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokevirtual #13                 // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
      45: aload_0
      46: invokevirtual #14                 // Method newTransformation:()Lde/flapdoodle/mongoom/mapping/ITransformation;
      49: areturn
      50: new           #15                 // class de/flapdoodle/mongoom/exceptions/MappingException
      53: dup
      54: aload_3
      55: invokeinterface #16,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITypeInfo.getDeclaringClass:()Ljava/lang/Class;
      60: new           #6                  // class java/lang/StringBuilder
      63: dup
      64: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #17                 // String Type does not match:
      69: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #3                  // Field _types:[Ljava/lang/Class;
      76: invokestatic  #18                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      79: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: ldc           #19                 // String !=
      84: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_3
      88: invokeinterface #20,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITypeInfo.getType:()Ljava/lang/Class;
      93: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      96: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokespecial #21                 // Method de/flapdoodle/mongoom/exceptions/MappingException."<init>":(Ljava/lang/Class;Ljava/lang/String;)V
     102: athrow

  protected abstract de.flapdoodle.mongoom.mapping.ITransformation<S, B> newTransformation();

  private boolean isType(de.flapdoodle.mongoom.mapping.ITypeInfo);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _types:[Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     45
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: aload_1
      26: invokeinterface #20,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITypeInfo.getType:()Ljava/lang/Class;
      31: invokevirtual #22                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      34: ifeq          39
      37: iconst_1
      38: ireturn
      39: iinc          4, 1
      42: goto          11
      45: iconst_0
      46: ireturn

  static {};
    Code:
       0: ldc_w         #23                 // class de/flapdoodle/mongoom/mapping/types/truncations/AbstractSmallerTypeVisitor
       3: invokestatic  #24                 // Method de/flapdoodle/mongoom/logging/LogConfig.getLogger:(Ljava/lang/Class;)Ljava/util/logging/Logger;
       6: putstatic     #5                  // Field _logger:Ljava/util/logging/Logger;
       9: return
}
