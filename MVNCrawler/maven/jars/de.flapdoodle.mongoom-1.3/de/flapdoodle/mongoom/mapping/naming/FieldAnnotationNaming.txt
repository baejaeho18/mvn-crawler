Compiled from "FieldAnnotationNaming.java"
public class de.flapdoodle.mongoom.mapping.naming.FieldAnnotationNaming implements de.flapdoodle.mongoom.mapping.naming.IPropertyNaming {
  public de.flapdoodle.mongoom.mapping.naming.FieldAnnotationNaming();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public de.flapdoodle.mongoom.mapping.naming.PropertyName name(java.lang.reflect.Field, de.flapdoodle.mongoom.mapping.naming.PropertyName);
    Code:
       0: aload_1
       1: ldc_w         #2                  // class de/flapdoodle/mongoom/annotations/Property
       4: invokevirtual #3                  // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       7: checkcast     #2                  // class de/flapdoodle/mongoom/annotations/Property
      10: astore_3
      11: aload_1
      12: ldc_w         #4                  // class de/flapdoodle/mongoom/annotations/Id
      15: invokevirtual #3                  // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      18: checkcast     #4                  // class de/flapdoodle/mongoom/annotations/Id
      21: astore        4
      23: aload_1
      24: ldc_w         #5                  // class de/flapdoodle/mongoom/annotations/Version
      27: invokevirtual #3                  // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      30: checkcast     #5                  // class de/flapdoodle/mongoom/annotations/Version
      33: astore        5
      35: aload_3
      36: ifnull        75
      39: aload         4
      41: ifnull        75
      44: new           #6                  // class de/flapdoodle/mongoom/exceptions/MappingException
      47: dup
      48: aload_1
      49: invokevirtual #7                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      52: new           #8                  // class java/lang/StringBuilder
      55: dup
      56: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #10                 // String Id and Property in same place:
      61: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_1
      65: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #14                 // Method de/flapdoodle/mongoom/exceptions/MappingException."<init>":(Ljava/lang/Class;Ljava/lang/String;)V
      74: athrow
      75: aload         5
      77: ifnull        116
      80: aload         4
      82: ifnull        116
      85: new           #6                  // class de/flapdoodle/mongoom/exceptions/MappingException
      88: dup
      89: aload_1
      90: invokevirtual #7                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      93: new           #8                  // class java/lang/StringBuilder
      96: dup
      97: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #15                 // String Id and Version in same place:
     102: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_1
     106: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     109: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokespecial #14                 // Method de/flapdoodle/mongoom/exceptions/MappingException."<init>":(Ljava/lang/Class;Ljava/lang/String;)V
     115: athrow
     116: aload         4
     118: ifnull        131
     121: ldc           #16                 // String _id
     123: aload_2
     124: invokevirtual #17                 // Method de/flapdoodle/mongoom/mapping/naming/PropertyName.getType:()Ljava/lang/Class;
     127: invokestatic  #18                 // Method de/flapdoodle/mongoom/mapping/naming/PropertyName.with:(Ljava/lang/String;Ljava/lang/Class;)Lde/flapdoodle/mongoom/mapping/naming/PropertyName;
     130: areturn
     131: aload         5
     133: ifnull        146
     136: ldc           #19                 // String _version
     138: aload_2
     139: invokevirtual #17                 // Method de/flapdoodle/mongoom/mapping/naming/PropertyName.getType:()Ljava/lang/Class;
     142: invokestatic  #18                 // Method de/flapdoodle/mongoom/mapping/naming/PropertyName.with:(Ljava/lang/String;Ljava/lang/Class;)Lde/flapdoodle/mongoom/mapping/naming/PropertyName;
     145: areturn
     146: aload_3
     147: ifnull        168
     150: aload_2
     151: invokevirtual #20                 // Method de/flapdoodle/mongoom/mapping/naming/PropertyName.getName:()Ljava/lang/String;
     154: aload_3
     155: invokeinterface #21,  1           // InterfaceMethod de/flapdoodle/mongoom/annotations/Property.value:()Ljava/lang/String;
     160: aload_2
     161: invokevirtual #17                 // Method de/flapdoodle/mongoom/mapping/naming/PropertyName.getType:()Ljava/lang/Class;
     164: invokestatic  #22                 // Method de/flapdoodle/mongoom/mapping/naming/PropertyName.with:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Lde/flapdoodle/mongoom/mapping/naming/PropertyName;
     167: areturn
     168: aload_2
     169: areturn
}
