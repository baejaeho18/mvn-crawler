Compiled from "ColorTransformation.java"
public class de.flapdoodle.mongoom.mapping.types.color.ColorTransformation implements de.flapdoodle.mongoom.mapping.ITransformation<java.awt.Color, com.mongodb.DBObject> {
  private de.flapdoodle.mongoom.mapping.entities.IPropertyTransformations _map;

  public de.flapdoodle.mongoom.mapping.types.color.ColorTransformation();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: new           #2                  // class de/flapdoodle/mongoom/mapping/entities/PropertyTransformationMap
       7: dup
       8: invokespecial #3                  // Method de/flapdoodle/mongoom/mapping/entities/PropertyTransformationMap."<init>":()V
      11: astore_1
      12: iconst_4
      13: anewarray     #4                  // class java/lang/String
      16: dup
      17: iconst_0
      18: ldc           #5                  // String r
      20: aastore
      21: dup
      22: iconst_1
      23: ldc           #6                  // String g
      25: aastore
      26: dup
      27: iconst_2
      28: ldc           #7                  // String b
      30: aastore
      31: dup
      32: iconst_3
      33: ldc           #8                  // String a
      35: aastore
      36: invokestatic  #9                  // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      39: invokevirtual #10                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      42: astore_2
      43: aload_2
      44: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          92
      52: aload_2
      53: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #4                  // class java/lang/String
      61: astore_3
      62: aload_1
      63: aload_3
      64: ldc_w         #13                 // class java/lang/Integer
      67: invokestatic  #14                 // Method de/flapdoodle/mongoom/mapping/naming/PropertyName.with:(Ljava/lang/String;Ljava/lang/Class;)Lde/flapdoodle/mongoom/mapping/naming/PropertyName;
      70: ldc_w         #13                 // class java/lang/Integer
      73: invokestatic  #15                 // Method de/flapdoodle/mongoom/mapping/properties/Property.of:(Lde/flapdoodle/mongoom/mapping/naming/PropertyName;Ljava/lang/Class;)Lde/flapdoodle/mongoom/mapping/properties/IProperty;
      76: new           #16                 // class de/flapdoodle/mongoom/mapping/types/NoopTransformation
      79: dup
      80: ldc_w         #13                 // class java/lang/Integer
      83: invokespecial #17                 // Method de/flapdoodle/mongoom/mapping/types/NoopTransformation."<init>":(Ljava/lang/Class;)V
      86: invokevirtual #18                 // Method de/flapdoodle/mongoom/mapping/entities/PropertyTransformationMap.setTransformation:(Lde/flapdoodle/mongoom/mapping/properties/IProperty;Lde/flapdoodle/mongoom/mapping/ITransformation;)V
      89: goto          43
      92: aload_0
      93: aload_1
      94: invokevirtual #19                 // Method de/flapdoodle/mongoom/mapping/entities/PropertyTransformationMap.readOnly:()Lde/flapdoodle/mongoom/mapping/entities/IPropertyTransformations;
      97: putfield      #20                 // Field _map:Lde/flapdoodle/mongoom/mapping/entities/IPropertyTransformations;
     100: return

  public com.mongodb.DBObject asObject(java.awt.Color);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #21                 // class com/mongodb/BasicDBObject
       9: dup
      10: invokespecial #22                 // Method com/mongodb/BasicDBObject."<init>":()V
      13: astore_2
      14: aload_2
      15: ldc           #5                  // String r
      17: aload_1
      18: invokevirtual #23                 // Method java/awt/Color.getRed:()I
      21: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: invokevirtual #25                 // Method com/mongodb/BasicDBObject.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: aload_2
      29: ldc           #6                  // String g
      31: aload_1
      32: invokevirtual #26                 // Method java/awt/Color.getGreen:()I
      35: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: invokevirtual #25                 // Method com/mongodb/BasicDBObject.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_2
      43: ldc           #7                  // String b
      45: aload_1
      46: invokevirtual #27                 // Method java/awt/Color.getBlue:()I
      49: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: invokevirtual #25                 // Method com/mongodb/BasicDBObject.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload_2
      57: ldc           #8                  // String a
      59: aload_1
      60: invokevirtual #28                 // Method java/awt/Color.getAlpha:()I
      63: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: invokevirtual #25                 // Method com/mongodb/BasicDBObject.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: aload_2
      71: areturn

  public java.awt.Color asEntity(com.mongodb.DBObject);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #29                 // class java/awt/Color
       9: dup
      10: aload_0
      11: aload_1
      12: ldc           #5                  // String r
      14: iconst_0
      15: invokespecial #30                 // Method getValue:(Lcom/mongodb/DBObject;Ljava/lang/String;I)I
      18: aload_0
      19: aload_1
      20: ldc           #6                  // String g
      22: iconst_0
      23: invokespecial #30                 // Method getValue:(Lcom/mongodb/DBObject;Ljava/lang/String;I)I
      26: aload_0
      27: aload_1
      28: ldc           #7                  // String b
      30: iconst_0
      31: invokespecial #30                 // Method getValue:(Lcom/mongodb/DBObject;Ljava/lang/String;I)I
      34: aload_0
      35: aload_1
      36: ldc           #8                  // String a
      38: iconst_0
      39: invokespecial #30                 // Method getValue:(Lcom/mongodb/DBObject;Ljava/lang/String;I)I
      42: invokespecial #31                 // Method java/awt/Color."<init>":(IIII)V
      45: areturn

  private int getValue(com.mongodb.DBObject, java.lang.String, int);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #32,  2           // InterfaceMethod com/mongodb/DBObject.get:(Ljava/lang/String;)Ljava/lang/Object;
       7: astore        4
       9: aload         4
      11: instanceof    #13                 // class java/lang/Integer
      14: ifeq          26
      17: aload         4
      19: checkcast     #13                 // class java/lang/Integer
      22: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
      25: ireturn
      26: iload_3
      27: ireturn

  public java.util.Set<de.flapdoodle.mongoom.mapping.naming.PropertyName<?>> properties();
    Code:
       0: aload_0
       1: getfield      #20                 // Field _map:Lde/flapdoodle/mongoom/mapping/entities/IPropertyTransformations;
       4: invokeinterface #34,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.propertyNames:()Ljava/util/Set;
       9: areturn

  public de.flapdoodle.mongoom.mapping.naming.PropertyName<?> propertyName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field _map:Lde/flapdoodle/mongoom/mapping/entities/IPropertyTransformations;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.get:(Ljava/lang/String;)Lde/flapdoodle/mongoom/mapping/naming/PropertyName;
      10: areturn

  public <Source> de.flapdoodle.mongoom.mapping.naming.PropertyName<Source> propertyName(de.flapdoodle.mongoom.mapping.properties.PropertyReference<Source>);
    Code:
       0: aload_0
       1: getfield      #20                 // Field _map:Lde/flapdoodle/mongoom/mapping/entities/IPropertyTransformations;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.get:(Lde/flapdoodle/mongoom/mapping/properties/PropertyReference;)Lde/flapdoodle/mongoom/mapping/naming/PropertyName;
      10: areturn

  public <Source> de.flapdoodle.mongoom.mapping.ITransformation<Source, ?> propertyTransformation(de.flapdoodle.mongoom.mapping.naming.PropertyName<Source>);
    Code:
       0: aload_0
       1: getfield      #20                 // Field _map:Lde/flapdoodle/mongoom/mapping/entities/IPropertyTransformations;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.get:(Lde/flapdoodle/mongoom/mapping/naming/PropertyName;)Lde/flapdoodle/mongoom/mapping/ITransformation;
      10: areturn

  public java.lang.Object asEntity(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #38                 // class com/mongodb/DBObject
       5: invokevirtual #39                 // Method asEntity:(Lcom/mongodb/DBObject;)Ljava/awt/Color;
       8: areturn

  public java.lang.Object asObject(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class java/awt/Color
       5: invokevirtual #40                 // Method asObject:(Ljava/awt/Color;)Lcom/mongodb/DBObject;
       8: areturn
}
