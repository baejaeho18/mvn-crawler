Compiled from "AbstractBeanTransformation.java"
public abstract class de.flapdoodle.mongoom.mapping.entities.AbstractBeanTransformation<Bean, C extends de.flapdoodle.mongoom.mapping.entities.IBeanContext<Bean>> implements de.flapdoodle.mongoom.mapping.ITransformation<Bean, com.mongodb.DBObject> {
  protected final C _entityContext;

  protected de.flapdoodle.mongoom.mapping.entities.AbstractBeanTransformation(C);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
       9: return

  protected C getContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
       4: areturn

  public com.mongodb.DBObject asObject(Bean);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #3                  // class com/mongodb/BasicDBObject
       9: dup
      10: invokespecial #4                  // Method com/mongodb/BasicDBObject."<init>":()V
      13: astore_2
      14: aload_0
      15: getfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
      18: invokeinterface #5,  1            // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IBeanContext.getPropertyTransformations:()Lde/flapdoodle/mongoom/mapping/entities/IPropertyTransformations;
      23: astore_3
      24: aload_3
      25: invokeinterface #6,  1            // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.propertyNames:()Ljava/util/Set;
      30: invokeinterface #7,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      35: astore        4
      37: aload         4
      39: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          131
      47: aload         4
      49: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #10                 // class de/flapdoodle/mongoom/mapping/naming/PropertyName
      57: astore        5
      59: aload_3
      60: aload         5
      62: invokeinterface #11,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.get:(Lde/flapdoodle/mongoom/mapping/naming/PropertyName;)Lde/flapdoodle/mongoom/mapping/ITransformation;
      67: astore        6
      69: aload_3
      70: aload         5
      72: invokeinterface #12,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.getProperty:(Lde/flapdoodle/mongoom/mapping/naming/PropertyName;)Lde/flapdoodle/mongoom/mapping/properties/IProperty;
      77: checkcast     #13                 // class de/flapdoodle/mongoom/mapping/properties/IPropertyField
      80: astore        7
      82: aload         7
      84: invokeinterface #14,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/properties/IPropertyField.getField:()Ljava/lang/reflect/Field;
      89: astore        8
      91: aload_0
      92: aload         8
      94: aload_1
      95: invokevirtual #15                 // Method getFieldValue:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      98: astore        9
     100: aload         6
     102: aload         9
     104: invokeinterface #16,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.asObject:(Ljava/lang/Object;)Ljava/lang/Object;
     109: astore        10
     111: aload         10
     113: ifnull        128
     116: aload_2
     117: aload         5
     119: invokevirtual #17                 // Method de/flapdoodle/mongoom/mapping/naming/PropertyName.getMapped:()Ljava/lang/String;
     122: aload         10
     124: invokevirtual #18                 // Method com/mongodb/BasicDBObject.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
     127: pop
     128: goto          37
     131: aload_2
     132: areturn

  protected java.lang.Object getFieldValue(java.lang.reflect.Field, Bean);
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #19                 // Method java/lang/reflect/Field.setAccessible:(Z)V
       5: aload_1
       6: aload_2
       7: invokevirtual #20                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn
      11: astore_3
      12: new           #22                 // class de/flapdoodle/mongoom/exceptions/MappingException
      15: dup
      16: aload_0
      17: getfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
      20: invokeinterface #23,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IBeanContext.getViewClass:()Ljava/lang/Class;
      25: aload_3
      26: invokespecial #24                 // Method de/flapdoodle/mongoom/exceptions/MappingException."<init>":(Ljava/lang/Class;Ljava/lang/Throwable;)V
      29: athrow
      30: astore_3
      31: new           #22                 // class de/flapdoodle/mongoom/exceptions/MappingException
      34: dup
      35: aload_0
      36: getfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
      39: invokeinterface #23,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IBeanContext.getViewClass:()Ljava/lang/Class;
      44: aload_3
      45: invokespecial #24                 // Method de/flapdoodle/mongoom/exceptions/MappingException."<init>":(Ljava/lang/Class;Ljava/lang/Throwable;)V
      48: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/IllegalArgumentException
           0    10    30   Class java/lang/IllegalAccessException

  public Bean asEntity(com.mongodb.DBObject);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokespecial #26                 // Method newInstance:()Ljava/lang/Object;
      10: astore_2
      11: aload_0
      12: getfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
      15: invokeinterface #5,  1            // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IBeanContext.getPropertyTransformations:()Lde/flapdoodle/mongoom/mapping/entities/IPropertyTransformations;
      20: astore_3
      21: aload_3
      22: invokeinterface #6,  1            // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.propertyNames:()Ljava/util/Set;
      27: invokeinterface #7,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      32: astore        4
      34: aload         4
      36: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          121
      44: aload         4
      46: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #10                 // class de/flapdoodle/mongoom/mapping/naming/PropertyName
      54: astore        5
      56: aload_3
      57: aload         5
      59: invokeinterface #11,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.get:(Lde/flapdoodle/mongoom/mapping/naming/PropertyName;)Lde/flapdoodle/mongoom/mapping/ITransformation;
      64: astore        6
      66: aload_3
      67: aload         5
      69: invokeinterface #12,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.getProperty:(Lde/flapdoodle/mongoom/mapping/naming/PropertyName;)Lde/flapdoodle/mongoom/mapping/properties/IProperty;
      74: checkcast     #13                 // class de/flapdoodle/mongoom/mapping/properties/IPropertyField
      77: astore        7
      79: aload         7
      81: invokeinterface #14,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/properties/IPropertyField.getField:()Ljava/lang/reflect/Field;
      86: astore        8
      88: aload         6
      90: aload_0
      91: aload_1
      92: aload         5
      94: invokespecial #27                 // Method getValue:(Lcom/mongodb/DBObject;Lde/flapdoodle/mongoom/mapping/naming/PropertyName;)Ljava/lang/Object;
      97: invokeinterface #28,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.asEntity:(Ljava/lang/Object;)Ljava/lang/Object;
     102: astore        9
     104: aload         9
     106: ifnull        118
     109: aload_0
     110: aload_2
     111: aload         8
     113: aload         9
     115: invokevirtual #29                 // Method setFieldValue:(Ljava/lang/Object;Ljava/lang/reflect/Field;Ljava/lang/Object;)V
     118: goto          34
     121: aload_2
     122: areturn

  private java.lang.Object getValue(com.mongodb.DBObject, de.flapdoodle.mongoom.mapping.naming.PropertyName);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #17                 // Method de/flapdoodle/mongoom/mapping/naming/PropertyName.getMapped:()Ljava/lang/String;
       6: invokestatic  #30                 // Method de/flapdoodle/mongoom/mapping/properties/Property.split:(Ljava/lang/String;)Ljava/util/List;
       9: invokespecial #31                 // Method getValue:(Lcom/mongodb/DBObject;Ljava/util/List;)Ljava/lang/Object;
      12: areturn

  private java.lang.Object getValue(com.mongodb.DBObject, java.util.List<java.lang.String>);
    Code:
       0: aload_2
       1: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
       6: iconst_1
       7: if_icmple     58
      10: aload_1
      11: aload_2
      12: iconst_0
      13: invokeinterface #33,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      18: checkcast     #34                 // class java/lang/String
      21: invokeinterface #35,  2           // InterfaceMethod com/mongodb/DBObject.get:(Ljava/lang/String;)Ljava/lang/Object;
      26: astore_3
      27: aload_3
      28: instanceof    #36                 // class com/mongodb/DBObject
      31: ifeq          56
      34: aload_0
      35: aload_3
      36: checkcast     #36                 // class com/mongodb/DBObject
      39: aload_2
      40: iconst_1
      41: aload_2
      42: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
      47: invokeinterface #37,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      52: invokespecial #31                 // Method getValue:(Lcom/mongodb/DBObject;Ljava/util/List;)Ljava/lang/Object;
      55: areturn
      56: aconst_null
      57: areturn
      58: aload_1
      59: aload_2
      60: iconst_0
      61: invokeinterface #33,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      66: checkcast     #34                 // class java/lang/String
      69: invokeinterface #35,  2           // InterfaceMethod com/mongodb/DBObject.get:(Ljava/lang/String;)Ljava/lang/Object;
      74: areturn

  protected void setFieldValue(Bean, java.lang.reflect.Field, java.lang.Object);
    Code:
       0: aload_2
       1: iconst_1
       2: invokevirtual #19                 // Method java/lang/reflect/Field.setAccessible:(Z)V
       5: aload_2
       6: aload_1
       7: aload_3
       8: invokevirtual #38                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      11: goto          56
      14: astore        4
      16: new           #22                 // class de/flapdoodle/mongoom/exceptions/MappingException
      19: dup
      20: aload_0
      21: getfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
      24: invokeinterface #23,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IBeanContext.getViewClass:()Ljava/lang/Class;
      29: aload         4
      31: invokespecial #24                 // Method de/flapdoodle/mongoom/exceptions/MappingException."<init>":(Ljava/lang/Class;Ljava/lang/Throwable;)V
      34: athrow
      35: astore        4
      37: new           #22                 // class de/flapdoodle/mongoom/exceptions/MappingException
      40: dup
      41: aload_0
      42: getfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
      45: invokeinterface #23,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IBeanContext.getViewClass:()Ljava/lang/Class;
      50: aload         4
      52: invokespecial #24                 // Method de/flapdoodle/mongoom/exceptions/MappingException."<init>":(Ljava/lang/Class;Ljava/lang/Throwable;)V
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    11    14   Class java/lang/IllegalArgumentException
           0    11    35   Class java/lang/IllegalAccessException

  private Bean newInstance();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
       4: invokeinterface #23,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IBeanContext.getViewClass:()Ljava/lang/Class;
       9: astore_1
      10: aload_1
      11: invokestatic  #39                 // Method de/flapdoodle/mongoom/mapping/converter/reflection/ClassInformation.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;
      14: areturn

  public <Source> de.flapdoodle.mongoom.mapping.naming.PropertyName<Source> propertyName(de.flapdoodle.mongoom.mapping.properties.PropertyReference<Source>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
       4: invokeinterface #5,  1            // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IBeanContext.getPropertyTransformations:()Lde/flapdoodle/mongoom/mapping/entities/IPropertyTransformations;
       9: aload_1
      10: invokeinterface #40,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.get:(Lde/flapdoodle/mongoom/mapping/properties/PropertyReference;)Lde/flapdoodle/mongoom/mapping/naming/PropertyName;
      15: areturn

  public de.flapdoodle.mongoom.mapping.naming.PropertyName<?> propertyName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
       4: invokeinterface #5,  1            // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IBeanContext.getPropertyTransformations:()Lde/flapdoodle/mongoom/mapping/entities/IPropertyTransformations;
       9: aload_1
      10: invokeinterface #41,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.get:(Ljava/lang/String;)Lde/flapdoodle/mongoom/mapping/naming/PropertyName;
      15: areturn

  public <Source> de.flapdoodle.mongoom.mapping.ITransformation<Source, ?> propertyTransformation(de.flapdoodle.mongoom.mapping.naming.PropertyName<Source>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
       4: invokeinterface #5,  1            // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IBeanContext.getPropertyTransformations:()Lde/flapdoodle/mongoom/mapping/entities/IPropertyTransformations;
       9: aload_1
      10: invokeinterface #11,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.get:(Lde/flapdoodle/mongoom/mapping/naming/PropertyName;)Lde/flapdoodle/mongoom/mapping/ITransformation;
      15: areturn

  public java.util.Set<de.flapdoodle.mongoom.mapping.naming.PropertyName<?>> properties();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _entityContext:Lde/flapdoodle/mongoom/mapping/entities/IBeanContext;
       4: invokeinterface #5,  1            // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IBeanContext.getPropertyTransformations:()Lde/flapdoodle/mongoom/mapping/entities/IPropertyTransformations;
       9: invokeinterface #6,  1            // InterfaceMethod de/flapdoodle/mongoom/mapping/entities/IPropertyTransformations.propertyNames:()Ljava/util/Set;
      14: areturn

  public java.lang.Object asEntity(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #36                 // class com/mongodb/DBObject
       5: invokevirtual #42                 // Method asEntity:(Lcom/mongodb/DBObject;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object asObject(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method asObject:(Ljava/lang/Object;)Lcom/mongodb/DBObject;
       5: areturn
}
