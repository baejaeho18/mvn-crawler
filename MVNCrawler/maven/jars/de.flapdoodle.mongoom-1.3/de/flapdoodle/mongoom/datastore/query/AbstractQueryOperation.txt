Compiled from "AbstractQueryOperation.java"
public abstract class de.flapdoodle.mongoom.datastore.query.AbstractQueryOperation<T, Q extends de.flapdoodle.mongoom.IQuery<T>, V> {
  protected final Q _query;

  protected final java.lang.String _field;

  protected final de.flapdoodle.mongoom.datastore.factories.IDBObjectFactory _queryBuilder;

  protected final de.flapdoodle.mongoom.mapping.ITransformation _transformation;

  protected boolean _not;

  protected final de.flapdoodle.mongoom.mapping.properties.IPropertyMappedName _name;

  public de.flapdoodle.mongoom.datastore.query.AbstractQueryOperation(Q, de.flapdoodle.mongoom.datastore.factories.IDBObjectFactory, de.flapdoodle.mongoom.datastore.query.MappedNameTransformation);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field _not:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field _query:Lde/flapdoodle/mongoom/IQuery;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field _queryBuilder:Lde/flapdoodle/mongoom/datastore/factories/IDBObjectFactory;
      19: aload_0
      20: aload_3
      21: invokevirtual #5                  // Method de/flapdoodle/mongoom/datastore/query/MappedNameTransformation.name:()Lde/flapdoodle/mongoom/mapping/properties/IPropertyMappedName;
      24: invokeinterface #6,  1            // InterfaceMethod de/flapdoodle/mongoom/mapping/properties/IPropertyMappedName.getMapped:()Ljava/lang/String;
      29: putfield      #7                  // Field _field:Ljava/lang/String;
      32: aload_0
      33: aload_3
      34: invokevirtual #5                  // Method de/flapdoodle/mongoom/datastore/query/MappedNameTransformation.name:()Lde/flapdoodle/mongoom/mapping/properties/IPropertyMappedName;
      37: putfield      #8                  // Field _name:Lde/flapdoodle/mongoom/mapping/properties/IPropertyMappedName;
      40: aload_0
      41: aload_3
      42: invokevirtual #9                  // Method de/flapdoodle/mongoom/datastore/query/MappedNameTransformation.transformation:()Lde/flapdoodle/mongoom/mapping/ITransformation;
      45: putfield      #10                 // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
      48: return

  protected static <V> java.lang.Object asObject(de.flapdoodle.mongoom.mapping.ITransformation, V);
    Code:
       0: aload_0
       1: instanceof    #11                 // class de/flapdoodle/mongoom/mapping/IQueryTransformation
       4: ifeq          18
       7: aload_0
       8: checkcast     #11                 // class de/flapdoodle/mongoom/mapping/IQueryTransformation
      11: aload_1
      12: invokeinterface #12,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/IQueryTransformation.asQueryObject:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: aload_0
      19: aload_1
      20: invokeinterface #13,  2           // InterfaceMethod de/flapdoodle/mongoom/mapping/ITransformation.asObject:(Ljava/lang/Object;)Ljava/lang/Object;
      25: areturn

  protected <V> Q opList(java.lang.String, boolean, V...);
    Code:
       0: aload_3
       1: invokestatic  #14                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       4: invokestatic  #15                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
       7: astore        4
       9: aload_0
      10: aload_1
      11: iload_2
      12: aload         4
      14: invokevirtual #16                 // Method opList:(Ljava/lang/String;ZLjava/util/Collection;)Lde/flapdoodle/mongoom/IQuery;
      17: areturn

  protected <V> Q opList(java.lang.String, boolean, java.util.Collection<V>);
    Code:
       0: invokestatic  #17                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       3: astore        4
       5: aload_3
       6: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: astore        5
      13: aload         5
      15: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          53
      23: aload         5
      25: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: astore        6
      32: aload         4
      34: aload_0
      35: iload_2
      36: invokevirtual #21                 // Method getConverter:(Z)Lde/flapdoodle/mongoom/mapping/ITransformation;
      39: aload         6
      41: invokestatic  #22                 // Method asObject:(Lde/flapdoodle/mongoom/mapping/ITransformation;Ljava/lang/Object;)Ljava/lang/Object;
      44: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: goto          13
      53: aload_0
      54: getfield      #4                  // Field _queryBuilder:Lde/flapdoodle/mongoom/datastore/factories/IDBObjectFactory;
      57: aload_0
      58: getfield      #7                  // Field _field:Ljava/lang/String;
      61: invokeinterface #24,  2           // InterfaceMethod de/flapdoodle/mongoom/datastore/factories/IDBObjectFactory.get:(Ljava/lang/String;)Lde/flapdoodle/mongoom/datastore/factories/IDBObjectFactory;
      66: astore        5
      68: aload_0
      69: getfield      #2                  // Field _not:Z
      72: ifeq          86
      75: aload         5
      77: ldc           #25                 // String $not
      79: invokeinterface #24,  2           // InterfaceMethod de/flapdoodle/mongoom/datastore/factories/IDBObjectFactory.get:(Ljava/lang/String;)Lde/flapdoodle/mongoom/datastore/factories/IDBObjectFactory;
      84: astore        5
      86: aload         5
      88: aload_1
      89: aload         4
      91: invokeinterface #26,  3           // InterfaceMethod de/flapdoodle/mongoom/datastore/factories/IDBObjectFactory.set:(Ljava/lang/String;Ljava/lang/Object;)Lde/flapdoodle/mongoom/datastore/factories/IDBObjectFactory;
      96: pop
      97: aload_0
      98: getfield      #3                  // Field _query:Lde/flapdoodle/mongoom/IQuery;
     101: areturn

  protected <V> Q op(java.lang.String, boolean, V);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _queryBuilder:Lde/flapdoodle/mongoom/datastore/factories/IDBObjectFactory;
       4: aload_0
       5: getfield      #7                  // Field _field:Ljava/lang/String;
       8: invokeinterface #24,  2           // InterfaceMethod de/flapdoodle/mongoom/datastore/factories/IDBObjectFactory.get:(Ljava/lang/String;)Lde/flapdoodle/mongoom/datastore/factories/IDBObjectFactory;
      13: astore        4
      15: aload_0
      16: getfield      #2                  // Field _not:Z
      19: ifeq          33
      22: aload         4
      24: ldc           #25                 // String $not
      26: invokeinterface #24,  2           // InterfaceMethod de/flapdoodle/mongoom/datastore/factories/IDBObjectFactory.get:(Ljava/lang/String;)Lde/flapdoodle/mongoom/datastore/factories/IDBObjectFactory;
      31: astore        4
      33: aload         4
      35: aload_1
      36: aload_0
      37: iload_2
      38: invokevirtual #21                 // Method getConverter:(Z)Lde/flapdoodle/mongoom/mapping/ITransformation;
      41: aload_3
      42: invokestatic  #22                 // Method asObject:(Lde/flapdoodle/mongoom/mapping/ITransformation;Ljava/lang/Object;)Ljava/lang/Object;
      45: invokeinterface #26,  3           // InterfaceMethod de/flapdoodle/mongoom/datastore/factories/IDBObjectFactory.set:(Ljava/lang/String;Ljava/lang/Object;)Lde/flapdoodle/mongoom/datastore/factories/IDBObjectFactory;
      50: pop
      51: aload_0
      52: getfield      #3                  // Field _query:Lde/flapdoodle/mongoom/IQuery;
      55: areturn

  protected de.flapdoodle.mongoom.mapping.ITransformation getConverter(boolean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
       4: ifnonnull     37
       7: new           #27                 // class de/flapdoodle/mongoom/exceptions/MappingException
      10: dup
      11: new           #28                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #30                 // String No Converter for
      20: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #7                  // Field _field:Ljava/lang/String;
      27: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #33                 // Method de/flapdoodle/mongoom/exceptions/MappingException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_1
      38: ifeq          64
      41: aload_0
      42: getfield      #10                 // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
      45: instanceof    #34                 // class de/flapdoodle/mongoom/mapping/IContainerTransformation
      48: ifeq          64
      51: aload_0
      52: getfield      #10                 // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
      55: checkcast     #34                 // class de/flapdoodle/mongoom/mapping/IContainerTransformation
      58: invokeinterface #35,  1           // InterfaceMethod de/flapdoodle/mongoom/mapping/IContainerTransformation.containerConverter:()Lde/flapdoodle/mongoom/mapping/ITransformation;
      63: areturn
      64: aload_0
      65: getfield      #10                 // Field _transformation:Lde/flapdoodle/mongoom/mapping/ITransformation;
      68: areturn

  private static java.lang.String asName(java.lang.String[]);
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: iconst_1
       9: istore_2
      10: aload_0
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     61
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: iload_2
      33: ifeq          41
      36: iconst_0
      37: istore_2
      38: goto          48
      41: aload_1
      42: ldc           #36                 // String .
      44: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: aload_1
      49: aload         6
      51: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: pop
      55: iinc          5, 1
      58: goto          19
      61: aload_1
      62: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: areturn
}
