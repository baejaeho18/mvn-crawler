Compiled from "SctpLimitStreamsTest.java"
public abstract class io.netty.channel.sctp.SctpLimitStreamsTest {
  public io.netty.channel.sctp.SctpLimitStreamsTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void checkSupported();
    Code:
       0: invokestatic  #2                  // Method io/netty/channel/sctp/SctpTestUtil.isSctpSupported:()Z
       3: invokestatic  #3                  // Method org/junit/jupiter/api/Assumptions.assumeTrue:(Z)V
       6: return

  public void testSctpInitMaxstreams() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method newEventLoopGroup:()Lio/netty/channel/EventLoopGroup;
       4: astore_1
       5: new           #5                  // class io/netty/bootstrap/ServerBootstrap
       8: dup
       9: invokespecial #6                  // Method io/netty/bootstrap/ServerBootstrap."<init>":()V
      12: astore_2
      13: aload_2
      14: aload_1
      15: invokevirtual #7                  // Method io/netty/bootstrap/ServerBootstrap.group:(Lio/netty/channel/EventLoopGroup;)Lio/netty/bootstrap/ServerBootstrap;
      18: aload_0
      19: invokevirtual #8                  // Method serverClass:()Ljava/lang/Class;
      22: invokevirtual #9                  // Method io/netty/bootstrap/ServerBootstrap.channel:(Ljava/lang/Class;)Lio/netty/bootstrap/AbstractBootstrap;
      25: checkcast     #5                  // class io/netty/bootstrap/ServerBootstrap
      28: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      31: iconst_1
      32: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      35: invokevirtual #12                 // Method io/netty/bootstrap/ServerBootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
      38: checkcast     #5                  // class io/netty/bootstrap/ServerBootstrap
      41: getstatic     #13                 // Field io/netty/channel/sctp/SctpChannelOption.SCTP_INIT_MAXSTREAMS:Lio/netty/channel/ChannelOption;
      44: iconst_1
      45: iconst_1
      46: invokestatic  #14                 // Method com/sun/nio/sctp/SctpStandardSocketOptions$InitMaxStreams.create:(II)Lcom/sun/nio/sctp/SctpStandardSocketOptions$InitMaxStreams;
      49: invokevirtual #12                 // Method io/netty/bootstrap/ServerBootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
      52: checkcast     #5                  // class io/netty/bootstrap/ServerBootstrap
      55: new           #15                 // class java/net/InetSocketAddress
      58: dup
      59: iconst_0
      60: invokespecial #16                 // Method java/net/InetSocketAddress."<init>":(I)V
      63: invokevirtual #17                 // Method io/netty/bootstrap/ServerBootstrap.localAddress:(Ljava/net/SocketAddress;)Lio/netty/bootstrap/AbstractBootstrap;
      66: checkcast     #5                  // class io/netty/bootstrap/ServerBootstrap
      69: new           #18                 // class io/netty/channel/ChannelInboundHandlerAdapter
      72: dup
      73: invokespecial #19                 // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
      76: invokevirtual #20                 // Method io/netty/bootstrap/ServerBootstrap.childHandler:(Lio/netty/channel/ChannelHandler;)Lio/netty/bootstrap/ServerBootstrap;
      79: pop
      80: new           #21                 // class io/netty/bootstrap/Bootstrap
      83: dup
      84: invokespecial #22                 // Method io/netty/bootstrap/Bootstrap."<init>":()V
      87: aload_1
      88: invokevirtual #23                 // Method io/netty/bootstrap/Bootstrap.group:(Lio/netty/channel/EventLoopGroup;)Lio/netty/bootstrap/AbstractBootstrap;
      91: checkcast     #21                 // class io/netty/bootstrap/Bootstrap
      94: aload_0
      95: invokevirtual #24                 // Method clientClass:()Ljava/lang/Class;
      98: invokevirtual #25                 // Method io/netty/bootstrap/Bootstrap.channel:(Ljava/lang/Class;)Lio/netty/bootstrap/AbstractBootstrap;
     101: checkcast     #21                 // class io/netty/bootstrap/Bootstrap
     104: getstatic     #13                 // Field io/netty/channel/sctp/SctpChannelOption.SCTP_INIT_MAXSTREAMS:Lio/netty/channel/ChannelOption;
     107: bipush        112
     109: bipush        112
     111: invokestatic  #14                 // Method com/sun/nio/sctp/SctpStandardSocketOptions$InitMaxStreams.create:(II)Lcom/sun/nio/sctp/SctpStandardSocketOptions$InitMaxStreams;
     114: invokevirtual #26                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
     117: checkcast     #21                 // class io/netty/bootstrap/Bootstrap
     120: new           #18                 // class io/netty/channel/ChannelInboundHandlerAdapter
     123: dup
     124: invokespecial #19                 // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
     127: invokevirtual #27                 // Method io/netty/bootstrap/Bootstrap.handler:(Lio/netty/channel/ChannelHandler;)Lio/netty/bootstrap/AbstractBootstrap;
     130: checkcast     #21                 // class io/netty/bootstrap/Bootstrap
     133: astore_3
     134: aload_2
     135: invokevirtual #28                 // Method io/netty/bootstrap/ServerBootstrap.bind:()Lio/netty/channel/ChannelFuture;
     138: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/ChannelFuture.syncUninterruptibly:()Lio/netty/channel/ChannelFuture;
     143: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
     148: astore        4
     150: aload_3
     151: aload         4
     153: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/Channel.localAddress:()Ljava/net/SocketAddress;
     158: invokevirtual #32                 // Method io/netty/bootstrap/Bootstrap.connect:(Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
     161: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/ChannelFuture.syncUninterruptibly:()Lio/netty/channel/ChannelFuture;
     166: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
     171: checkcast     #33                 // class io/netty/channel/sctp/SctpChannel
     174: astore        5
     176: iconst_1
     177: aload         5
     179: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/sctp/SctpChannel.association:()Lcom/sun/nio/sctp/Association;
     184: invokevirtual #35                 // Method com/sun/nio/sctp/Association.maxOutboundStreams:()I
     187: invokestatic  #36                 // Method org/junit/jupiter/api/Assertions.assertEquals:(II)V
     190: iconst_1
     191: aload         5
     193: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/sctp/SctpChannel.association:()Lcom/sun/nio/sctp/Association;
     198: invokevirtual #37                 // Method com/sun/nio/sctp/Association.maxInboundStreams:()I
     201: invokestatic  #36                 // Method org/junit/jupiter/api/Assertions.assertEquals:(II)V
     204: aload         4
     206: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
     211: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/ChannelFuture.syncUninterruptibly:()Lio/netty/channel/ChannelFuture;
     216: pop
     217: aload         5
     219: invokeinterface #39,  1           // InterfaceMethod io/netty/channel/sctp/SctpChannel.close:()Lio/netty/channel/ChannelFuture;
     224: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/ChannelFuture.syncUninterruptibly:()Lio/netty/channel/ChannelFuture;
     229: pop
     230: aload_1
     231: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/EventLoopGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
     236: pop
     237: goto          252
     240: astore        6
     242: aload_1
     243: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/EventLoopGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
     248: pop
     249: aload         6
     251: athrow
     252: return
    Exception table:
       from    to  target type
           5   230   240   any
         240   242   240   any

  protected abstract io.netty.channel.EventLoopGroup newEventLoopGroup();

  protected abstract java.lang.Class<? extends io.netty.channel.sctp.SctpChannel> clientClass();

  protected abstract java.lang.Class<? extends io.netty.channel.sctp.SctpServerChannel> serverClass();
}
