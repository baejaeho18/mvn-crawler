Compiled from "CloudWatchMeterRegistry.java"
class io.micrometer.cloudwatch.CloudWatchMeterRegistry$Batch {
  private long wallTime;

  final io.micrometer.cloudwatch.CloudWatchMeterRegistry this$0;

  private io.micrometer.cloudwatch.CloudWatchMeterRegistry$Batch(io.micrometer.cloudwatch.CloudWatchMeterRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
       5: aload_0
       6: invokespecial #12                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_0
      11: getfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
      14: invokestatic  #13                 // Method io/micrometer/cloudwatch/CloudWatchMeterRegistry.access$200:(Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;)Lio/micrometer/core/instrument/Clock;
      17: invokeinterface #14,  1           // InterfaceMethod io/micrometer/core/instrument/Clock.wallTime:()J
      22: putfield      #15                 // Field wallTime:J
      25: return

  private java.util.stream.Stream<com.amazonaws.services.cloudwatch.model.MetricDatum> gaugeData(io.micrometer.core.instrument.Gauge);
    Code:
       0: aload_1
       1: invokeinterface #16,  1           // InterfaceMethod io/micrometer/core/instrument/Gauge.value:()D
       6: dstore_2
       7: dload_2
       8: invokestatic  #17                 // Method java/lang/Double.isNaN:(D)Z
      11: ifne          21
      14: dload_2
      15: invokestatic  #18                 // Method java/lang/Double.isInfinite:(D)Z
      18: ifeq          25
      21: invokestatic  #19                 // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
      24: areturn
      25: aload_0
      26: aload_1
      27: invokeinterface #20,  1           // InterfaceMethod io/micrometer/core/instrument/Gauge.getId:()Lio/micrometer/core/instrument/Meter$Id;
      32: ldc           #21                 // String value
      34: dload_2
      35: invokespecial #22                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      38: invokestatic  #23                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      41: areturn

  private java.util.stream.Stream<com.amazonaws.services.cloudwatch.model.MetricDatum> counterData(io.micrometer.core.instrument.Counter);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #24,  1           // InterfaceMethod io/micrometer/core/instrument/Counter.getId:()Lio/micrometer/core/instrument/Meter$Id;
       7: ldc           #25                 // String count
       9: aload_1
      10: invokeinterface #26,  1           // InterfaceMethod io/micrometer/core/instrument/Counter.count:()D
      15: invokespecial #22                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      18: invokestatic  #23                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      21: areturn

  private java.util.stream.Stream<com.amazonaws.services.cloudwatch.model.MetricDatum> timerData(io.micrometer.core.instrument.Timer);
    Code:
       0: invokestatic  #27                 // InterfaceMethod java/util/stream/Stream.builder:()Ljava/util/stream/Stream$Builder;
       3: astore_2
       4: aload_2
       5: aload_0
       6: aload_1
       7: invokeinterface #28,  1           // InterfaceMethod io/micrometer/core/instrument/Timer.getId:()Lio/micrometer/core/instrument/Meter$Id;
      12: ldc           #29                 // String sum
      14: aload_0
      15: getfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
      18: invokevirtual #30                 // Method io/micrometer/cloudwatch/CloudWatchMeterRegistry.getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      21: invokevirtual #31                 // Method java/util/concurrent/TimeUnit.name:()Ljava/lang/String;
      24: aload_1
      25: aload_0
      26: getfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
      29: invokevirtual #30                 // Method io/micrometer/cloudwatch/CloudWatchMeterRegistry.getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      32: invokeinterface #32,  2           // InterfaceMethod io/micrometer/core/instrument/Timer.totalTime:(Ljava/util/concurrent/TimeUnit;)D
      37: invokespecial #33                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      40: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream$Builder.add:(Ljava/lang/Object;)Ljava/util/stream/Stream$Builder;
      45: pop
      46: aload_2
      47: aload_0
      48: aload_1
      49: invokeinterface #28,  1           // InterfaceMethod io/micrometer/core/instrument/Timer.getId:()Lio/micrometer/core/instrument/Meter$Id;
      54: ldc           #25                 // String count
      56: ldc           #25                 // String count
      58: aload_1
      59: invokeinterface #35,  1           // InterfaceMethod io/micrometer/core/instrument/Timer.count:()J
      64: l2d
      65: invokespecial #33                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      68: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream$Builder.add:(Ljava/lang/Object;)Ljava/util/stream/Stream$Builder;
      73: pop
      74: aload_2
      75: aload_0
      76: aload_1
      77: invokeinterface #28,  1           // InterfaceMethod io/micrometer/core/instrument/Timer.getId:()Lio/micrometer/core/instrument/Meter$Id;
      82: ldc           #36                 // String avg
      84: aload_0
      85: getfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
      88: invokevirtual #30                 // Method io/micrometer/cloudwatch/CloudWatchMeterRegistry.getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      91: invokevirtual #31                 // Method java/util/concurrent/TimeUnit.name:()Ljava/lang/String;
      94: aload_1
      95: aload_0
      96: getfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
      99: invokevirtual #30                 // Method io/micrometer/cloudwatch/CloudWatchMeterRegistry.getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
     102: invokeinterface #37,  2           // InterfaceMethod io/micrometer/core/instrument/Timer.mean:(Ljava/util/concurrent/TimeUnit;)D
     107: invokespecial #33                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
     110: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream$Builder.add:(Ljava/lang/Object;)Ljava/util/stream/Stream$Builder;
     115: pop
     116: aload_2
     117: aload_0
     118: aload_1
     119: invokeinterface #28,  1           // InterfaceMethod io/micrometer/core/instrument/Timer.getId:()Lio/micrometer/core/instrument/Meter$Id;
     124: ldc           #38                 // String max
     126: aload_0
     127: getfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
     130: invokevirtual #30                 // Method io/micrometer/cloudwatch/CloudWatchMeterRegistry.getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
     133: invokevirtual #31                 // Method java/util/concurrent/TimeUnit.name:()Ljava/lang/String;
     136: aload_1
     137: aload_0
     138: getfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
     141: invokevirtual #30                 // Method io/micrometer/cloudwatch/CloudWatchMeterRegistry.getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
     144: invokeinterface #39,  2           // InterfaceMethod io/micrometer/core/instrument/Timer.max:(Ljava/util/concurrent/TimeUnit;)D
     149: invokespecial #33                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
     152: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream$Builder.add:(Ljava/lang/Object;)Ljava/util/stream/Stream$Builder;
     157: pop
     158: aload_2
     159: invokeinterface #40,  1           // InterfaceMethod java/util/stream/Stream$Builder.build:()Ljava/util/stream/Stream;
     164: areturn

  private java.util.stream.Stream<com.amazonaws.services.cloudwatch.model.MetricDatum> summaryData(io.micrometer.core.instrument.DistributionSummary);
    Code:
       0: invokestatic  #27                 // InterfaceMethod java/util/stream/Stream.builder:()Ljava/util/stream/Stream$Builder;
       3: astore_2
       4: aload_2
       5: aload_0
       6: aload_1
       7: invokeinterface #41,  1           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.getId:()Lio/micrometer/core/instrument/Meter$Id;
      12: ldc           #29                 // String sum
      14: aload_1
      15: invokeinterface #42,  1           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.totalAmount:()D
      20: invokespecial #22                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      23: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream$Builder.add:(Ljava/lang/Object;)Ljava/util/stream/Stream$Builder;
      28: pop
      29: aload_2
      30: aload_0
      31: aload_1
      32: invokeinterface #41,  1           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.getId:()Lio/micrometer/core/instrument/Meter$Id;
      37: ldc           #25                 // String count
      39: aload_1
      40: invokeinterface #43,  1           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.count:()J
      45: l2d
      46: invokespecial #22                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      49: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream$Builder.add:(Ljava/lang/Object;)Ljava/util/stream/Stream$Builder;
      54: pop
      55: aload_2
      56: aload_0
      57: aload_1
      58: invokeinterface #41,  1           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.getId:()Lio/micrometer/core/instrument/Meter$Id;
      63: ldc           #36                 // String avg
      65: aload_1
      66: invokeinterface #44,  1           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.mean:()D
      71: invokespecial #22                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      74: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream$Builder.add:(Ljava/lang/Object;)Ljava/util/stream/Stream$Builder;
      79: pop
      80: aload_2
      81: aload_0
      82: aload_1
      83: invokeinterface #41,  1           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.getId:()Lio/micrometer/core/instrument/Meter$Id;
      88: ldc           #38                 // String max
      90: aload_1
      91: invokeinterface #45,  1           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.max:()D
      96: invokespecial #22                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      99: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream$Builder.add:(Ljava/lang/Object;)Ljava/util/stream/Stream$Builder;
     104: pop
     105: aload_2
     106: invokeinterface #40,  1           // InterfaceMethod java/util/stream/Stream$Builder.build:()Ljava/util/stream/Stream;
     111: areturn

  private java.util.stream.Stream<com.amazonaws.services.cloudwatch.model.MetricDatum> longTaskTimerData(io.micrometer.core.instrument.LongTaskTimer);
    Code:
       0: iconst_2
       1: anewarray     #46                 // class com/amazonaws/services/cloudwatch/model/MetricDatum
       4: dup
       5: iconst_0
       6: aload_0
       7: aload_1
       8: invokeinterface #47,  1           // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.getId:()Lio/micrometer/core/instrument/Meter$Id;
      13: ldc           #48                 // String activeTasks
      15: aload_1
      16: invokeinterface #49,  1           // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.activeTasks:()I
      21: i2d
      22: invokespecial #22                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      25: aastore
      26: dup
      27: iconst_1
      28: aload_0
      29: aload_1
      30: invokeinterface #47,  1           // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.getId:()Lio/micrometer/core/instrument/Meter$Id;
      35: ldc           #50                 // String duration
      37: aload_1
      38: aload_0
      39: getfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
      42: invokevirtual #30                 // Method io/micrometer/cloudwatch/CloudWatchMeterRegistry.getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      45: invokeinterface #51,  2           // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.duration:(Ljava/util/concurrent/TimeUnit;)D
      50: invokespecial #22                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      53: aastore
      54: invokestatic  #52                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      57: areturn

  private java.util.stream.Stream<com.amazonaws.services.cloudwatch.model.MetricDatum> timeGaugeData(io.micrometer.core.instrument.TimeGauge);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
       5: invokevirtual #30                 // Method io/micrometer/cloudwatch/CloudWatchMeterRegistry.getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
       8: invokeinterface #53,  2           // InterfaceMethod io/micrometer/core/instrument/TimeGauge.value:(Ljava/util/concurrent/TimeUnit;)D
      13: dstore_2
      14: dload_2
      15: invokestatic  #17                 // Method java/lang/Double.isNaN:(D)Z
      18: ifne          28
      21: dload_2
      22: invokestatic  #18                 // Method java/lang/Double.isInfinite:(D)Z
      25: ifeq          32
      28: invokestatic  #19                 // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
      31: areturn
      32: aload_0
      33: aload_1
      34: invokeinterface #54,  1           // InterfaceMethod io/micrometer/core/instrument/TimeGauge.getId:()Lio/micrometer/core/instrument/Meter$Id;
      39: ldc           #21                 // String value
      41: dload_2
      42: invokespecial #22                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      45: invokestatic  #23                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      48: areturn

  private java.util.stream.Stream<com.amazonaws.services.cloudwatch.model.MetricDatum> functionCounterData(io.micrometer.core.instrument.FunctionCounter);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #55,  1           // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.getId:()Lio/micrometer/core/instrument/Meter$Id;
       7: ldc           #25                 // String count
       9: aload_1
      10: invokeinterface #56,  1           // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.count:()D
      15: invokespecial #22                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      18: invokestatic  #23                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      21: areturn

  private java.util.stream.Stream<com.amazonaws.services.cloudwatch.model.MetricDatum> functionTimerData(io.micrometer.core.instrument.FunctionTimer);
    Code:
       0: iconst_2
       1: anewarray     #46                 // class com/amazonaws/services/cloudwatch/model/MetricDatum
       4: dup
       5: iconst_0
       6: aload_0
       7: aload_1
       8: invokeinterface #57,  1           // InterfaceMethod io/micrometer/core/instrument/FunctionTimer.getId:()Lio/micrometer/core/instrument/Meter$Id;
      13: ldc           #25                 // String count
      15: aload_1
      16: invokeinterface #58,  1           // InterfaceMethod io/micrometer/core/instrument/FunctionTimer.count:()D
      21: invokespecial #22                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      24: aastore
      25: dup
      26: iconst_1
      27: aload_0
      28: aload_1
      29: invokeinterface #57,  1           // InterfaceMethod io/micrometer/core/instrument/FunctionTimer.getId:()Lio/micrometer/core/instrument/Meter$Id;
      34: ldc           #36                 // String avg
      36: aload_1
      37: aload_0
      38: getfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
      41: invokevirtual #30                 // Method io/micrometer/cloudwatch/CloudWatchMeterRegistry.getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      44: invokeinterface #59,  2           // InterfaceMethod io/micrometer/core/instrument/FunctionTimer.mean:(Ljava/util/concurrent/TimeUnit;)D
      49: invokespecial #22                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      52: aastore
      53: invokestatic  #52                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      56: areturn

  private java.util.stream.Stream<com.amazonaws.services.cloudwatch.model.MetricDatum> metricData(io.micrometer.core.instrument.Meter);
    Code:
       0: aload_1
       1: invokeinterface #60,  1           // InterfaceMethod io/micrometer/core/instrument/Meter.measure:()Ljava/lang/Iterable;
       6: invokeinterface #61,  1           // InterfaceMethod java/lang/Iterable.spliterator:()Ljava/util/Spliterator;
      11: iconst_0
      12: invokestatic  #62                 // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      15: aload_0
      16: aload_1
      17: invokedynamic #63,  0             // InvokeDynamic #0:apply:(Lio/micrometer/cloudwatch/CloudWatchMeterRegistry$Batch;Lio/micrometer/core/instrument/Meter;)Ljava/util/function/Function;
      22: invokeinterface #64,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      27: invokedynamic #65,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      32: invokeinterface #66,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      37: areturn

  private com.amazonaws.services.cloudwatch.model.MetricDatum metricDatum(io.micrometer.core.instrument.Meter$Id, double);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: dload_2
       5: invokespecial #33                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
       8: areturn

  private com.amazonaws.services.cloudwatch.model.MetricDatum metricDatum(io.micrometer.core.instrument.Meter$Id, java.lang.String, double);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: dload_3
       5: invokespecial #33                 // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/String;Ljava/lang/String;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
       8: areturn

  private com.amazonaws.services.cloudwatch.model.MetricDatum metricDatum(io.micrometer.core.instrument.Meter$Id, java.lang.String, java.lang.String, double);
    Code:
       0: dload         4
       2: invokestatic  #17                 // Method java/lang/Double.isNaN:(D)Z
       5: ifeq          10
       8: aconst_null
       9: areturn
      10: aload_0
      11: getfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
      14: invokevirtual #67                 // Method io/micrometer/cloudwatch/CloudWatchMeterRegistry.config:()Lio/micrometer/core/instrument/MeterRegistry$Config;
      17: invokevirtual #68                 // Method io/micrometer/core/instrument/MeterRegistry$Config.namingConvention:()Lio/micrometer/core/instrument/config/NamingConvention;
      20: new           #69                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
      27: aload_1
      28: invokevirtual #71                 // Method io/micrometer/core/instrument/Meter$Id.getName:()Ljava/lang/String;
      31: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #73                 // String .
      36: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_2
      40: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: aload_1
      47: invokevirtual #75                 // Method io/micrometer/core/instrument/Meter$Id.getType:()Lio/micrometer/core/instrument/Meter$Type;
      50: aload_1
      51: invokevirtual #76                 // Method io/micrometer/core/instrument/Meter$Id.getBaseUnit:()Ljava/lang/String;
      54: invokeinterface #77,  4           // InterfaceMethod io/micrometer/core/instrument/config/NamingConvention.name:(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;)Ljava/lang/String;
      59: astore        6
      61: aload_1
      62: aload_0
      63: getfield      #11                 // Field this$0:Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;
      66: invokevirtual #67                 // Method io/micrometer/cloudwatch/CloudWatchMeterRegistry.config:()Lio/micrometer/core/instrument/MeterRegistry$Config;
      69: invokevirtual #68                 // Method io/micrometer/core/instrument/MeterRegistry$Config.namingConvention:()Lio/micrometer/core/instrument/config/NamingConvention;
      72: invokevirtual #78                 // Method io/micrometer/core/instrument/Meter$Id.getConventionTags:(Lio/micrometer/core/instrument/config/NamingConvention;)Ljava/util/List;
      75: astore        7
      77: new           #46                 // class com/amazonaws/services/cloudwatch/model/MetricDatum
      80: dup
      81: invokespecial #79                 // Method com/amazonaws/services/cloudwatch/model/MetricDatum."<init>":()V
      84: aload         6
      86: invokevirtual #80                 // Method com/amazonaws/services/cloudwatch/model/MetricDatum.withMetricName:(Ljava/lang/String;)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      89: aload_0
      90: aload         7
      92: invokespecial #81                 // Method toDimensions:(Ljava/util/List;)Ljava/util/List;
      95: invokevirtual #82                 // Method com/amazonaws/services/cloudwatch/model/MetricDatum.withDimensions:(Ljava/util/Collection;)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      98: new           #83                 // class java/util/Date
     101: dup
     102: aload_0
     103: getfield      #15                 // Field wallTime:J
     106: invokespecial #84                 // Method java/util/Date."<init>":(J)V
     109: invokevirtual #85                 // Method com/amazonaws/services/cloudwatch/model/MetricDatum.withTimestamp:(Ljava/util/Date;)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
     112: dload         4
     114: invokestatic  #86                 // Method io/micrometer/cloudwatch/CloudWatchUtils.clampMetricValue:(D)D
     117: invokestatic  #87                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     120: invokevirtual #88                 // Method com/amazonaws/services/cloudwatch/model/MetricDatum.withValue:(Ljava/lang/Double;)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
     123: aload_0
     124: aload_3
     125: invokespecial #89                 // Method toStandardUnit:(Ljava/lang/String;)Lcom/amazonaws/services/cloudwatch/model/StandardUnit;
     128: invokevirtual #90                 // Method com/amazonaws/services/cloudwatch/model/MetricDatum.withUnit:(Lcom/amazonaws/services/cloudwatch/model/StandardUnit;)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
     131: areturn

  private com.amazonaws.services.cloudwatch.model.StandardUnit toStandardUnit(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #91                 // Field com/amazonaws/services/cloudwatch/model/StandardUnit.None:Lcom/amazonaws/services/cloudwatch/model/StandardUnit;
       7: areturn
       8: aload_1
       9: invokevirtual #92                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      12: astore_2
      13: iconst_m1
      14: istore_3
      15: aload_2
      16: invokevirtual #93                 // Method java/lang/String.hashCode:()I
      19: lookupswitch  { // 3
              85195282: 66
              94224491: 52
              94851343: 80
               default: 91
          }
      52: aload_2
      53: ldc           #94                 // String bytes
      55: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      58: ifeq          91
      61: iconst_0
      62: istore_3
      63: goto          91
      66: aload_2
      67: ldc           #96                 // String milliseconds
      69: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      72: ifeq          91
      75: iconst_1
      76: istore_3
      77: goto          91
      80: aload_2
      81: ldc           #25                 // String count
      83: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      86: ifeq          91
      89: iconst_2
      90: istore_3
      91: iload_3
      92: tableswitch   { // 0 to 2
                     0: 120
                     1: 124
                     2: 128
               default: 132
          }
     120: getstatic     #97                 // Field com/amazonaws/services/cloudwatch/model/StandardUnit.Bytes:Lcom/amazonaws/services/cloudwatch/model/StandardUnit;
     123: areturn
     124: getstatic     #98                 // Field com/amazonaws/services/cloudwatch/model/StandardUnit.Milliseconds:Lcom/amazonaws/services/cloudwatch/model/StandardUnit;
     127: areturn
     128: getstatic     #99                 // Field com/amazonaws/services/cloudwatch/model/StandardUnit.Count:Lcom/amazonaws/services/cloudwatch/model/StandardUnit;
     131: areturn
     132: getstatic     #91                 // Field com/amazonaws/services/cloudwatch/model/StandardUnit.None:Lcom/amazonaws/services/cloudwatch/model/StandardUnit;
     135: areturn

  private java.util.List<com.amazonaws.services.cloudwatch.model.Dimension> toDimensions(java.util.List<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_1
       1: invokeinterface #100,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #101,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      11: invokeinterface #64,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokestatic  #102                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      19: invokeinterface #103,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #104                // class java/util/List
      27: areturn

  private static com.amazonaws.services.cloudwatch.model.Dimension lambda$toDimensions$1(io.micrometer.core.instrument.Tag);
    Code:
       0: new           #105                // class com/amazonaws/services/cloudwatch/model/Dimension
       3: dup
       4: invokespecial #106                // Method com/amazonaws/services/cloudwatch/model/Dimension."<init>":()V
       7: aload_0
       8: invokeinterface #107,  1          // InterfaceMethod io/micrometer/core/instrument/Tag.getKey:()Ljava/lang/String;
      13: invokevirtual #108                // Method com/amazonaws/services/cloudwatch/model/Dimension.withName:(Ljava/lang/String;)Lcom/amazonaws/services/cloudwatch/model/Dimension;
      16: aload_0
      17: invokeinterface #109,  1          // InterfaceMethod io/micrometer/core/instrument/Tag.getValue:()Ljava/lang/String;
      22: invokevirtual #110                // Method com/amazonaws/services/cloudwatch/model/Dimension.withValue:(Ljava/lang/String;)Lcom/amazonaws/services/cloudwatch/model/Dimension;
      25: areturn

  private com.amazonaws.services.cloudwatch.model.MetricDatum lambda$metricData$0(io.micrometer.core.instrument.Meter, io.micrometer.core.instrument.Measurement);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #111,  1          // InterfaceMethod io/micrometer/core/instrument/Meter.getId:()Lio/micrometer/core/instrument/Meter$Id;
       7: aload_2
       8: invokevirtual #112                // Method io/micrometer/core/instrument/Measurement.getStatistic:()Lio/micrometer/core/instrument/Statistic;
      11: invokevirtual #113                // Method io/micrometer/core/instrument/Meter$Id.withTag:(Lio/micrometer/core/instrument/Statistic;)Lio/micrometer/core/instrument/Meter$Id;
      14: aload_2
      15: invokevirtual #114                // Method io/micrometer/core/instrument/Measurement.getValue:()D
      18: invokespecial #115                // Method metricDatum:(Lio/micrometer/core/instrument/Meter$Id;D)Lcom/amazonaws/services/cloudwatch/model/MetricDatum;
      21: areturn

  io.micrometer.cloudwatch.CloudWatchMeterRegistry$Batch(io.micrometer.cloudwatch.CloudWatchMeterRegistry, io.micrometer.cloudwatch.CloudWatchMeterRegistry$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method "<init>":(Lio/micrometer/cloudwatch/CloudWatchMeterRegistry;)V
       5: return

  static java.util.stream.Stream access$300(io.micrometer.cloudwatch.CloudWatchMeterRegistry$Batch, io.micrometer.core.instrument.Meter);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method metricData:(Lio/micrometer/core/instrument/Meter;)Ljava/util/stream/Stream;
       5: areturn

  static java.util.stream.Stream access$400(io.micrometer.cloudwatch.CloudWatchMeterRegistry$Batch, io.micrometer.core.instrument.FunctionTimer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method functionTimerData:(Lio/micrometer/core/instrument/FunctionTimer;)Ljava/util/stream/Stream;
       5: areturn

  static java.util.stream.Stream access$500(io.micrometer.cloudwatch.CloudWatchMeterRegistry$Batch, io.micrometer.core.instrument.FunctionCounter);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method functionCounterData:(Lio/micrometer/core/instrument/FunctionCounter;)Ljava/util/stream/Stream;
       5: areturn

  static java.util.stream.Stream access$600(io.micrometer.cloudwatch.CloudWatchMeterRegistry$Batch, io.micrometer.core.instrument.TimeGauge);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method timeGaugeData:(Lio/micrometer/core/instrument/TimeGauge;)Ljava/util/stream/Stream;
       5: areturn

  static java.util.stream.Stream access$700(io.micrometer.cloudwatch.CloudWatchMeterRegistry$Batch, io.micrometer.core.instrument.LongTaskTimer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method longTaskTimerData:(Lio/micrometer/core/instrument/LongTaskTimer;)Ljava/util/stream/Stream;
       5: areturn

  static java.util.stream.Stream access$800(io.micrometer.cloudwatch.CloudWatchMeterRegistry$Batch, io.micrometer.core.instrument.DistributionSummary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method summaryData:(Lio/micrometer/core/instrument/DistributionSummary;)Ljava/util/stream/Stream;
       5: areturn

  static java.util.stream.Stream access$900(io.micrometer.cloudwatch.CloudWatchMeterRegistry$Batch, io.micrometer.core.instrument.Timer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method timerData:(Lio/micrometer/core/instrument/Timer;)Ljava/util/stream/Stream;
       5: areturn

  static java.util.stream.Stream access$1000(io.micrometer.cloudwatch.CloudWatchMeterRegistry$Batch, io.micrometer.core.instrument.Counter);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method counterData:(Lio/micrometer/core/instrument/Counter;)Ljava/util/stream/Stream;
       5: areturn

  static java.util.stream.Stream access$1100(io.micrometer.cloudwatch.CloudWatchMeterRegistry$Batch, io.micrometer.core.instrument.Gauge);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method gaugeData:(Lio/micrometer/core/instrument/Gauge;)Ljava/util/stream/Stream;
       5: areturn
}
