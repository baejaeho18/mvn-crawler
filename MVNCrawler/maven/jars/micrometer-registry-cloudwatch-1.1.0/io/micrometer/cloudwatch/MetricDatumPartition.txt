Compiled from "MetricDatumPartition.java"
public class io.micrometer.cloudwatch.MetricDatumPartition extends java.util.AbstractList<java.util.List<com.amazonaws.services.cloudwatch.model.MetricDatum>> {
  private final java.util.List<com.amazonaws.services.cloudwatch.model.MetricDatum> list;

  private final int partitionSize;

  private final int partitionCount;

  public io.micrometer.cloudwatch.MetricDatumPartition(java.util.List<com.amazonaws.services.cloudwatch.model.MetricDatum>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractList."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field list:Ljava/util/List;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field partitionSize:I
      14: aload_0
      15: aload_0
      16: getfield      #2                  // Field list:Ljava/util/List;
      19: invokeinterface #4,  1            // InterfaceMethod java/util/List.size:()I
      24: iload_2
      25: invokestatic  #5                  // Method io/micrometer/core/instrument/util/MathUtils.divideWithCeilingRoundingMode:(II)I
      28: putfield      #6                  // Field partitionCount:I
      31: return

  public static java.util.List<java.util.List<com.amazonaws.services.cloudwatch.model.MetricDatum>> partition(java.util.List<com.amazonaws.services.cloudwatch.model.MetricDatum>, int);
    Code:
       0: new           #7                  // class io/micrometer/cloudwatch/MetricDatumPartition
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #8                  // Method "<init>":(Ljava/util/List;I)V
       9: areturn

  public java.util.List<com.amazonaws.services.cloudwatch.model.MetricDatum> get(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #3                  // Field partitionSize:I
       5: imul
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #3                  // Field partitionSize:I
      12: iadd
      13: aload_0
      14: getfield      #2                  // Field list:Ljava/util/List;
      17: invokeinterface #4,  1            // InterfaceMethod java/util/List.size:()I
      22: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      25: istore_3
      26: aload_0
      27: getfield      #2                  // Field list:Ljava/util/List;
      30: iload_2
      31: iload_3
      32: invokeinterface #10,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      37: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field partitionCount:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field list:Ljava/util/List;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ireturn

  public java.lang.Object get(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #12                 // Method get:(I)Ljava/util/List;
       5: areturn
}
