Compiled from "Runner.scala"
class de.sciss.lucre.expr.graph.Runner$Attr$Impl implements scala.Product,de.sciss.lucre.expr.graph.Runner$Attr,java.io.Serializable {
  private final de.sciss.lucre.expr.graph.Ex key;

  private final de.sciss.lucre.expr.graph.Flow value;

  public static de.sciss.lucre.expr.graph.Runner$Attr$Impl apply(de.sciss.lucre.expr.graph.Ex<java.lang.String>, de.sciss.lucre.expr.graph.Flow);
    Code:
       0: getstatic     #32                 // Field de/sciss/lucre/expr/graph/Runner$Attr$Impl$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$Attr$Impl$;
       3: aload_0
       4: aload_1
       5: invokevirtual #34                 // Method de/sciss/lucre/expr/graph/Runner$Attr$Impl$.apply:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Flow;)Lde/sciss/lucre/expr/graph/Runner$Attr$Impl;
       8: areturn

  public static de.sciss.lucre.expr.graph.Runner$Attr$Impl fromProduct(scala.Product);
    Code:
       0: getstatic     #32                 // Field de/sciss/lucre/expr/graph/Runner$Attr$Impl$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$Attr$Impl$;
       3: aload_0
       4: invokevirtual #38                 // Method de/sciss/lucre/expr/graph/Runner$Attr$Impl$.fromProduct:(Lscala/Product;)Lde/sciss/lucre/expr/graph/Runner$Attr$Impl;
       7: areturn

  public static de.sciss.lucre.expr.graph.Runner$Attr$Impl unapply(de.sciss.lucre.expr.graph.Runner$Attr$Impl);
    Code:
       0: getstatic     #32                 // Field de/sciss/lucre/expr/graph/Runner$Attr$Impl$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$Attr$Impl$;
       3: aload_0
       4: invokevirtual #42                 // Method de/sciss/lucre/expr/graph/Runner$Attr$Impl$.unapply:(Lde/sciss/lucre/expr/graph/Runner$Attr$Impl;)Lde/sciss/lucre/expr/graph/Runner$Attr$Impl;
       7: areturn

  public de.sciss.lucre.expr.graph.Runner$Attr$Impl(de.sciss.lucre.expr.graph.Ex<java.lang.String>, de.sciss.lucre.expr.graph.Flow);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field key:Lde/sciss/lucre/expr/graph/Ex;
       5: aload_0
       6: aload_2
       7: putfield      #49                 // Field value:Lde/sciss/lucre/expr/graph/Flow;
      10: aload_0
      11: invokespecial #52                 // Method java/lang/Object."<init>":()V
      14: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #60                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #64                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #71                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #75                 // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     104
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class de/sciss/lucre/expr/graph/Runner$Attr$Impl
      11: ifeq          97
      14: aload_2
      15: checkcast     #2                  // class de/sciss/lucre/expr/graph/Runner$Attr$Impl
      18: astore_3
      19: aload_0
      20: invokevirtual #81                 // Method key:()Lde/sciss/lucre/expr/graph/Ex;
      23: aload_3
      24: invokevirtual #81                 // Method key:()Lde/sciss/lucre/expr/graph/Ex;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          93
      42: aload         4
      44: invokevirtual #83                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          93
      50: aload_0
      51: invokevirtual #86                 // Method value:()Lde/sciss/lucre/expr/graph/Flow;
      54: aload_3
      55: invokevirtual #86                 // Method value:()Lde/sciss/lucre/expr/graph/Flow;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          93
      73: aload         5
      75: invokevirtual #83                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          93
      81: aload_3
      82: aload_0
      83: invokevirtual #89                 // Method canEqual:(Ljava/lang/Object;)Z
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: goto          101
      97: iconst_0
      98: goto          101
     101: ifeq          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #71                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #100                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class de/sciss/lucre/expr/graph/Runner$Attr$Impl
       4: ireturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     14
       7: aload_0
       8: invokevirtual #108                // Method _1:()Lde/sciss/lucre/expr/graph/Ex;
      11: goto          41
      14: iconst_1
      15: iload_2
      16: if_icmpne     26
      19: aload_0
      20: invokevirtual #111                // Method _2:()Lde/sciss/lucre/expr/graph/Flow;
      23: goto          41
      26: new           #113                // class java/lang/IndexOutOfBoundsException
      29: dup
      30: iload_1
      31: invokestatic  #119                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      34: invokevirtual #123                // Method java/lang/Integer.toString:()Ljava/lang/String;
      37: invokespecial #126                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: areturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     12
       7: ldc           #130                // String key
       9: goto          37
      12: iconst_1
      13: iload_2
      14: if_icmpne     22
      17: ldc           #131                // String value
      19: goto          37
      22: new           #113                // class java/lang/IndexOutOfBoundsException
      25: dup
      26: iload_1
      27: invokestatic  #119                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      30: invokevirtual #123                // Method java/lang/Integer.toString:()Ljava/lang/String;
      33: invokespecial #126                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: areturn

  public de.sciss.lucre.expr.graph.Ex<java.lang.String> key();
    Code:
       0: aload_0
       1: getfield      #47                 // Field key:Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Flow value();
    Code:
       0: aload_0
       1: getfield      #49                 // Field value:Lde/sciss/lucre/expr/graph/Flow;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #137                // String Runner$Attr
       2: areturn

  public final <T extends de.sciss.lucre.Txn<T>> de.sciss.lucre.Form<T> expandValue(de.sciss.lucre.expr.Context<T>, T);
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method value:()Lde/sciss/lucre/expr/graph/Flow;
       4: aload_1
       5: aload_2
       6: invokeinterface #146,  3          // InterfaceMethod de/sciss/lucre/expr/graph/Flow.expand:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
      11: checkcast     #148                // class de/sciss/lucre/Form
      14: areturn

  public de.sciss.lucre.expr.graph.Runner$Attr$Impl copy(de.sciss.lucre.expr.graph.Ex<java.lang.String>, de.sciss.lucre.expr.graph.Flow);
    Code:
       0: new           #2                  // class de/sciss/lucre/expr/graph/Runner$Attr$Impl
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #153                // Method "<init>":(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Flow;)V
       9: areturn

  public de.sciss.lucre.expr.graph.Ex<java.lang.String> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method key:()Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Flow copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method value:()Lde/sciss/lucre/expr/graph/Flow;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex<java.lang.String> _1();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method key:()Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Flow _2();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method value:()Lde/sciss/lucre/expr/graph/Flow;
       4: areturn
}
