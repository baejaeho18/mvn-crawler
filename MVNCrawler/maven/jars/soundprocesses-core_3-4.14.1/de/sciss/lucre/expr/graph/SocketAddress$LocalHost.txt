Compiled from "SocketAddress.scala"
public final class de.sciss.lucre.expr.graph.SocketAddress$LocalHost implements de.sciss.lucre.expr.graph.Ex<java.lang.String>, java.io.Serializable {
  private transient java.lang.Object ref;

  public static de.sciss.lucre.expr.graph.SocketAddress$LocalHost apply();
    Code:
       0: getstatic     #33                 // Field de/sciss/lucre/expr/graph/SocketAddress$LocalHost$.MODULE$:Lde/sciss/lucre/expr/graph/SocketAddress$LocalHost$;
       3: invokevirtual #35                 // Method de/sciss/lucre/expr/graph/SocketAddress$LocalHost$.apply:()Lde/sciss/lucre/expr/graph/SocketAddress$LocalHost;
       6: areturn

  public static de.sciss.lucre.expr.graph.SocketAddress$LocalHost fromProduct(scala.Product);
    Code:
       0: getstatic     #33                 // Field de/sciss/lucre/expr/graph/SocketAddress$LocalHost$.MODULE$:Lde/sciss/lucre/expr/graph/SocketAddress$LocalHost$;
       3: aload_0
       4: invokevirtual #39                 // Method de/sciss/lucre/expr/graph/SocketAddress$LocalHost$.fromProduct:(Lscala/Product;)Lde/sciss/lucre/expr/graph/SocketAddress$LocalHost;
       7: areturn

  public static de.sciss.lucre.expr.graph.SocketAddress$LocalHost read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: getstatic     #33                 // Field de/sciss/lucre/expr/graph/SocketAddress$LocalHost$.MODULE$:Lde/sciss/lucre/expr/graph/SocketAddress$LocalHost$;
       3: aload_0
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #43                 // Method de/sciss/lucre/expr/graph/SocketAddress$LocalHost$.read:(Lde/sciss/lucre/expr/ExElem$RefMapIn;Ljava/lang/String;II)Lde/sciss/lucre/expr/graph/SocketAddress$LocalHost;
      10: areturn

  public static boolean unapply(de.sciss.lucre.expr.graph.SocketAddress$LocalHost);
    Code:
       0: getstatic     #33                 // Field de/sciss/lucre/expr/graph/SocketAddress$LocalHost$.MODULE$:Lde/sciss/lucre/expr/graph/SocketAddress$LocalHost$;
       3: aload_0
       4: invokevirtual #47                 // Method de/sciss/lucre/expr/graph/SocketAddress$LocalHost$.unapply:(Lde/sciss/lucre/expr/graph/SocketAddress$LocalHost;)Z
       7: ireturn

  public de.sciss.lucre.expr.graph.SocketAddress$LocalHost();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #55                 // InterfaceMethod de/sciss/lucre/expr/graph/Lazy.$init$:(Lde/sciss/lucre/expr/graph/Lazy;)V
       8: invokestatic  #60                 // Method scala/runtime/Statics.releaseFence:()V
      11: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #68                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #72                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public final java.lang.Object ref();
    Code:
       0: aload_0
       1: getfield      #75                 // Field ref:Ljava/lang/Object;
       4: areturn

  public void de$sciss$lucre$expr$graph$Lazy$_setter_$ref_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field ref:Ljava/lang/Object;
       5: return

  public de.sciss.lucre.Disposable expand(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #86                 // InterfaceMethod de/sciss/lucre/expr/graph/Lazy.expand$:(Lde/sciss/lucre/expr/graph/Lazy;Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
       6: areturn

  public int hashCode();
    Code:
       0: getstatic     #95                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #99                 // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     30
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class de/sciss/lucre/expr/graph/SocketAddress$LocalHost
      11: ifeq          23
      14: aload_2
      15: checkcast     #2                  // class de/sciss/lucre/expr/graph/SocketAddress$LocalHost
      18: astore_3
      19: iconst_1
      20: goto          27
      23: iconst_0
      24: goto          27
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #95                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #107                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class de/sciss/lucre/expr/graph/SocketAddress$LocalHost
       4: ireturn

  public int productArity();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: new           #115                // class java/lang/IndexOutOfBoundsException
       5: dup
       6: iload_1
       7: invokestatic  #121                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      10: invokevirtual #125                // Method java/lang/Integer.toString:()Ljava/lang/String;
      13: invokespecial #128                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: athrow
      18: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: new           #115                // class java/lang/IndexOutOfBoundsException
       5: dup
       6: iload_1
       7: invokestatic  #121                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      10: invokevirtual #125                // Method java/lang/Integer.toString:()Ljava/lang/String;
      13: invokespecial #128                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: athrow
      18: athrow

  public java.lang.String productPrefix();
    Code:
       0: ldc           #136                // String SocketAddress$LocalHost
       2: areturn

  public <T extends de.sciss.lucre.Txn<T>> de.sciss.lucre.IExpr<T, java.lang.String> mkRepr(de.sciss.lucre.expr.Context<T>, T);
    Code:
       0: getstatic     #144                // Field de/sciss/lucre/expr/graph/SocketAddress$.MODULE$:Lde/sciss/lucre/expr/graph/SocketAddress$;
       3: invokevirtual #147                // Method de/sciss/lucre/expr/graph/SocketAddress$.mkLocalHostName:()Ljava/lang/String;
       6: goto          59
       9: astore        4
      11: aload         4
      13: astore        5
      15: aload         5
      17: ifnull        53
      20: getstatic     #152                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      23: aload         5
      25: invokevirtual #155                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      28: astore        6
      30: aload         6
      32: invokevirtual #161                // Method scala/Option.isEmpty:()Z
      35: ifne          53
      38: aload         6
      40: invokevirtual #164                // Method scala/Option.get:()Ljava/lang/Object;
      43: checkcast     #131                // class java/lang/Throwable
      46: astore        7
      48: ldc           #166                // String localhost
      50: goto          56
      53: aload         4
      55: athrow
      56: goto          59
      59: astore_3
      60: getstatic     #171                // Field de/sciss/lucre/expr/graph/Const$.MODULE$:Lde/sciss/lucre/expr/graph/Const$;
      63: aload_3
      64: invokevirtual #174                // Method de/sciss/lucre/expr/graph/Const$.apply:(Ljava/lang/Object;)Lde/sciss/lucre/expr/graph/Const;
      67: aload_1
      68: aload_2
      69: invokevirtual #178                // Method de/sciss/lucre/expr/graph/Const.expand:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
      72: checkcast     #180                // class de/sciss/lucre/IExpr
      75: areturn
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Throwable

  public de.sciss.lucre.expr.graph.SocketAddress$LocalHost copy();
    Code:
       0: new           #2                  // class de/sciss/lucre/expr/graph/SocketAddress$LocalHost
       3: dup
       4: invokespecial #190                // Method "<init>":()V
       7: areturn

  public de.sciss.lucre.Disposable mkRepr(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #192                // Method mkRepr:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/IExpr;
       6: areturn
}
