Compiled from "Runner.scala"
public final class de.sciss.lucre.expr.graph.Runner$Progress implements de.sciss.lucre.expr.graph.Ex<java.lang.Object>, java.io.Serializable {
  private transient java.lang.Object ref;

  private final de.sciss.lucre.expr.graph.Runner r;

  public static de.sciss.lucre.expr.graph.Runner$Progress apply(de.sciss.lucre.expr.graph.Runner);
    Code:
       0: getstatic     #38                 // Field de/sciss/lucre/expr/graph/Runner$Progress$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$Progress$;
       3: aload_0
       4: invokevirtual #40                 // Method de/sciss/lucre/expr/graph/Runner$Progress$.apply:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Runner$Progress;
       7: areturn

  public static de.sciss.lucre.expr.graph.Runner$Progress fromProduct(scala.Product);
    Code:
       0: getstatic     #38                 // Field de/sciss/lucre/expr/graph/Runner$Progress$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$Progress$;
       3: aload_0
       4: invokevirtual #44                 // Method de/sciss/lucre/expr/graph/Runner$Progress$.fromProduct:(Lscala/Product;)Lde/sciss/lucre/expr/graph/Runner$Progress;
       7: areturn

  public static de.sciss.lucre.expr.graph.Runner$Progress read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: getstatic     #38                 // Field de/sciss/lucre/expr/graph/Runner$Progress$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$Progress$;
       3: aload_0
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #48                 // Method de/sciss/lucre/expr/graph/Runner$Progress$.read:(Lde/sciss/lucre/expr/ExElem$RefMapIn;Ljava/lang/String;II)Lde/sciss/lucre/expr/graph/Runner$Progress;
      10: areturn

  public static de.sciss.lucre.expr.graph.Runner$Progress unapply(de.sciss.lucre.expr.graph.Runner$Progress);
    Code:
       0: getstatic     #38                 // Field de/sciss/lucre/expr/graph/Runner$Progress$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$Progress$;
       3: aload_0
       4: invokevirtual #52                 // Method de/sciss/lucre/expr/graph/Runner$Progress$.unapply:(Lde/sciss/lucre/expr/graph/Runner$Progress;)Lde/sciss/lucre/expr/graph/Runner$Progress;
       7: areturn

  public de.sciss.lucre.expr.graph.Runner$Progress(de.sciss.lucre.expr.graph.Runner);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field r:Lde/sciss/lucre/expr/graph/Runner;
       5: aload_0
       6: invokespecial #59                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #63                 // InterfaceMethod de/sciss/lucre/expr/graph/Lazy.$init$:(Lde/sciss/lucre/expr/graph/Lazy;)V
      13: invokestatic  #68                 // Method scala/runtime/Statics.releaseFence:()V
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #76                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #80                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public final java.lang.Object ref();
    Code:
       0: aload_0
       1: getfield      #83                 // Field ref:Ljava/lang/Object;
       4: areturn

  public void de$sciss$lucre$expr$graph$Lazy$_setter_$ref_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field ref:Ljava/lang/Object;
       5: return

  public de.sciss.lucre.Disposable expand(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #94                 // InterfaceMethod de/sciss/lucre/expr/graph/Lazy.expand$:(Lde/sciss/lucre/expr/graph/Lazy;Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
       6: areturn

  public int hashCode();
    Code:
       0: getstatic     #103                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #107                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     65
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class de/sciss/lucre/expr/graph/Runner$Progress
      11: ifeq          58
      14: aload_2
      15: checkcast     #2                  // class de/sciss/lucre/expr/graph/Runner$Progress
      18: astore_3
      19: aload_0
      20: invokevirtual #112                // Method r:()Lde/sciss/lucre/expr/graph/Runner;
      23: aload_3
      24: invokevirtual #112                // Method r:()Lde/sciss/lucre/expr/graph/Runner;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          54
      42: aload         4
      44: invokevirtual #114                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: goto          62
      58: iconst_0
      59: goto          62
      62: ifeq          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #103                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #120                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class de/sciss/lucre/expr/graph/Runner$Progress
       4: ireturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     14
       7: aload_0
       8: invokevirtual #129                // Method _1:()Lde/sciss/lucre/expr/graph/Runner;
      11: goto          29
      14: new           #131                // class java/lang/IndexOutOfBoundsException
      17: dup
      18: iload_1
      19: invokestatic  #137                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      22: invokevirtual #141                // Method java/lang/Integer.toString:()Ljava/lang/String;
      25: invokespecial #144                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: areturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     12
       7: ldc           #148                // String r
       9: goto          27
      12: new           #131                // class java/lang/IndexOutOfBoundsException
      15: dup
      16: iload_1
      17: invokestatic  #137                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      20: invokevirtual #141                // Method java/lang/Integer.toString:()Ljava/lang/String;
      23: invokespecial #144                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: areturn

  public de.sciss.lucre.expr.graph.Runner r();
    Code:
       0: aload_0
       1: getfield      #56                 // Field r:Lde/sciss/lucre/expr/graph/Runner;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #153                // String Runner$Progress
       2: areturn

  public <T extends de.sciss.lucre.Txn<T>> de.sciss.lucre.IExpr<T, java.lang.Object> mkRepr(de.sciss.lucre.expr.Context<T>, T);
    Code:
       0: aload_0
       1: invokevirtual #112                // Method r:()Lde/sciss/lucre/expr/graph/Runner;
       4: aload_1
       5: aload_2
       6: invokeinterface #158,  3          // InterfaceMethod de/sciss/lucre/expr/graph/Runner.expand:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
      11: checkcast     #160                // class de/sciss/proc/Runner
      14: astore_3
      15: new           #21                 // class de/sciss/lucre/expr/graph/Runner$ExpandedProgress
      18: dup
      19: aload_3
      20: aload_2
      21: aload_1
      22: invokeinterface #166,  1          // InterfaceMethod de/sciss/lucre/expr/Context.targets:()Lde/sciss/lucre/ITargets;
      27: invokespecial #169                // Method de/sciss/lucre/expr/graph/Runner$ExpandedProgress."<init>":(Lde/sciss/proc/Runner;Lde/sciss/lucre/Txn;Lde/sciss/lucre/ITargets;)V
      30: areturn

  public de.sciss.lucre.expr.graph.Runner$Progress copy(de.sciss.lucre.expr.graph.Runner);
    Code:
       0: new           #2                  // class de/sciss/lucre/expr/graph/Runner$Progress
       3: dup
       4: aload_1
       5: invokespecial #174                // Method "<init>":(Lde/sciss/lucre/expr/graph/Runner;)V
       8: areturn

  public de.sciss.lucre.expr.graph.Runner copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #112                // Method r:()Lde/sciss/lucre/expr/graph/Runner;
       4: areturn

  public de.sciss.lucre.expr.graph.Runner _1();
    Code:
       0: aload_0
       1: invokevirtual #112                // Method r:()Lde/sciss/lucre/expr/graph/Runner;
       4: areturn

  public de.sciss.lucre.Disposable mkRepr(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #177                // Method mkRepr:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/IExpr;
       6: areturn
}
