Compiled from "Curve.scala"
public final class de.sciss.lucre.expr.graph.Curve {
  public static de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Cubed();
    Code:
       0: getstatic     #34                 // Field de/sciss/lucre/expr/graph/Curve$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$;
       3: invokevirtual #36                 // Method de/sciss/lucre/expr/graph/Curve$.Cubed:()Lde/sciss/lucre/expr/graph/Ex;
       6: areturn

  public static de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Exp();
    Code:
       0: getstatic     #34                 // Field de/sciss/lucre/expr/graph/Curve$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$;
       3: invokevirtual #39                 // Method de/sciss/lucre/expr/graph/Curve$.Exp:()Lde/sciss/lucre/expr/graph/Ex;
       6: areturn

  public static de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Lin();
    Code:
       0: getstatic     #34                 // Field de/sciss/lucre/expr/graph/Curve$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$;
       3: invokevirtual #42                 // Method de/sciss/lucre/expr/graph/Curve$.Lin:()Lde/sciss/lucre/expr/graph/Ex;
       6: areturn

  public static de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Sine();
    Code:
       0: getstatic     #34                 // Field de/sciss/lucre/expr/graph/Curve$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$;
       3: invokevirtual #45                 // Method de/sciss/lucre/expr/graph/Curve$.Sine:()Lde/sciss/lucre/expr/graph/Ex;
       6: areturn

  public static de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Squared();
    Code:
       0: getstatic     #34                 // Field de/sciss/lucre/expr/graph/Curve$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$;
       3: invokevirtual #48                 // Method de/sciss/lucre/expr/graph/Curve$.Squared:()Lde/sciss/lucre/expr/graph/Ex;
       6: areturn

  public static de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Step();
    Code:
       0: getstatic     #34                 // Field de/sciss/lucre/expr/graph/Curve$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$;
       3: invokevirtual #51                 // Method de/sciss/lucre/expr/graph/Curve$.Step:()Lde/sciss/lucre/expr/graph/Ex;
       6: areturn

  public static de.sciss.lucre.Adjunct$FromAny<de.sciss.synth.Curve> Type();
    Code:
       0: getstatic     #34                 // Field de/sciss/lucre/expr/graph/Curve$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$;
       3: invokevirtual #56                 // Method de/sciss/lucre/expr/graph/Curve$.Type:()Lde/sciss/lucre/Adjunct$FromAny;
       6: areturn

  public static de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Welch();
    Code:
       0: getstatic     #34                 // Field de/sciss/lucre/expr/graph/Curve$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$;
       3: invokevirtual #59                 // Method de/sciss/lucre/expr/graph/Curve$.Welch:()Lde/sciss/lucre/expr/graph/Ex;
       6: areturn

  public static void init();
    Code:
       0: getstatic     #34                 // Field de/sciss/lucre/expr/graph/Curve$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$;
       3: invokevirtual #63                 // Method de/sciss/lucre/expr/graph/Curve$.init:()V
       6: return
}
