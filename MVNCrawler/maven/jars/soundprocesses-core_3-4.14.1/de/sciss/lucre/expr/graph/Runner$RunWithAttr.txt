Compiled from "Runner.scala"
public final class de.sciss.lucre.expr.graph.Runner$RunWithAttr implements scala.Product,de.sciss.lucre.expr.graph.Lazy,de.sciss.lucre.expr.graph.Act,java.io.Serializable {
  private transient java.lang.Object ref;

  private final de.sciss.lucre.expr.graph.Runner r;

  private final scala.collection.immutable.Seq map;

  public static de.sciss.lucre.expr.graph.Runner$RunWithAttr apply(de.sciss.lucre.expr.graph.Runner, scala.collection.immutable.Seq<de.sciss.lucre.expr.graph.Runner$Attr>);
    Code:
       0: getstatic     #43                 // Field de/sciss/lucre/expr/graph/Runner$RunWithAttr$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$RunWithAttr$;
       3: aload_0
       4: aload_1
       5: invokevirtual #45                 // Method de/sciss/lucre/expr/graph/Runner$RunWithAttr$.apply:(Lde/sciss/lucre/expr/graph/Runner;Lscala/collection/immutable/Seq;)Lde/sciss/lucre/expr/graph/Runner$RunWithAttr;
       8: areturn

  public static de.sciss.lucre.expr.graph.Runner$RunWithAttr fromProduct(scala.Product);
    Code:
       0: getstatic     #43                 // Field de/sciss/lucre/expr/graph/Runner$RunWithAttr$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$RunWithAttr$;
       3: aload_0
       4: invokevirtual #49                 // Method de/sciss/lucre/expr/graph/Runner$RunWithAttr$.fromProduct:(Lscala/Product;)Lde/sciss/lucre/expr/graph/Runner$RunWithAttr;
       7: areturn

  public static de.sciss.lucre.expr.graph.Runner$RunWithAttr read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: getstatic     #43                 // Field de/sciss/lucre/expr/graph/Runner$RunWithAttr$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$RunWithAttr$;
       3: aload_0
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #53                 // Method de/sciss/lucre/expr/graph/Runner$RunWithAttr$.read:(Lde/sciss/lucre/expr/ExElem$RefMapIn;Ljava/lang/String;II)Lde/sciss/lucre/expr/graph/Runner$RunWithAttr;
      10: areturn

  public static de.sciss.lucre.expr.graph.Runner$RunWithAttr unapply(de.sciss.lucre.expr.graph.Runner$RunWithAttr);
    Code:
       0: getstatic     #43                 // Field de/sciss/lucre/expr/graph/Runner$RunWithAttr$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$RunWithAttr$;
       3: aload_0
       4: invokevirtual #57                 // Method de/sciss/lucre/expr/graph/Runner$RunWithAttr$.unapply:(Lde/sciss/lucre/expr/graph/Runner$RunWithAttr;)Lde/sciss/lucre/expr/graph/Runner$RunWithAttr;
       7: areturn

  public de.sciss.lucre.expr.graph.Runner$RunWithAttr(de.sciss.lucre.expr.graph.Runner, scala.collection.immutable.Seq<de.sciss.lucre.expr.graph.Runner$Attr>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #62                 // Field r:Lde/sciss/lucre/expr/graph/Runner;
       5: aload_0
       6: aload_2
       7: putfield      #64                 // Field map:Lscala/collection/immutable/Seq;
      10: aload_0
      11: invokespecial #67                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #71                 // InterfaceMethod de/sciss/lucre/expr/graph/Lazy.$init$:(Lde/sciss/lucre/expr/graph/Lazy;)V
      18: invokestatic  #76                 // Method scala/runtime/Statics.releaseFence:()V
      21: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #84                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #88                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public final java.lang.Object ref();
    Code:
       0: aload_0
       1: getfield      #91                 // Field ref:Ljava/lang/Object;
       4: areturn

  public void de$sciss$lucre$expr$graph$Lazy$_setter_$ref_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #91                 // Field ref:Ljava/lang/Object;
       5: return

  public de.sciss.lucre.Disposable expand(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // InterfaceMethod de/sciss/lucre/expr/graph/Lazy.expand$:(Lde/sciss/lucre/expr/graph/Lazy;Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
       6: areturn

  public int hashCode();
    Code:
       0: getstatic     #111                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #115                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     96
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class de/sciss/lucre/expr/graph/Runner$RunWithAttr
      11: ifeq          89
      14: aload_2
      15: checkcast     #2                  // class de/sciss/lucre/expr/graph/Runner$RunWithAttr
      18: astore_3
      19: aload_0
      20: invokevirtual #120                // Method r:()Lde/sciss/lucre/expr/graph/Runner;
      23: aload_3
      24: invokevirtual #120                // Method r:()Lde/sciss/lucre/expr/graph/Runner;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          85
      42: aload         4
      44: invokevirtual #122                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          85
      50: aload_0
      51: invokevirtual #125                // Method map:()Lscala/collection/immutable/Seq;
      54: aload_3
      55: invokevirtual #125                // Method map:()Lscala/collection/immutable/Seq;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          85
      73: aload         5
      75: invokevirtual #122                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: goto          93
      89: iconst_0
      90: goto          93
      93: ifeq          100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #111                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #133                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class de/sciss/lucre/expr/graph/Runner$RunWithAttr
       4: ireturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     14
       7: aload_0
       8: invokevirtual #142                // Method _1:()Lde/sciss/lucre/expr/graph/Runner;
      11: goto          41
      14: iconst_1
      15: iload_2
      16: if_icmpne     26
      19: aload_0
      20: invokevirtual #145                // Method _2:()Lscala/collection/immutable/Seq;
      23: goto          41
      26: new           #147                // class java/lang/IndexOutOfBoundsException
      29: dup
      30: iload_1
      31: invokestatic  #153                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      34: invokevirtual #157                // Method java/lang/Integer.toString:()Ljava/lang/String;
      37: invokespecial #160                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: areturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     12
       7: ldc           #164                // String r
       9: goto          37
      12: iconst_1
      13: iload_2
      14: if_icmpne     22
      17: ldc           #165                // String map
      19: goto          37
      22: new           #147                // class java/lang/IndexOutOfBoundsException
      25: dup
      26: iload_1
      27: invokestatic  #153                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      30: invokevirtual #157                // Method java/lang/Integer.toString:()Ljava/lang/String;
      33: invokespecial #160                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: areturn

  public de.sciss.lucre.expr.graph.Runner r();
    Code:
       0: aload_0
       1: getfield      #62                 // Field r:Lde/sciss/lucre/expr/graph/Runner;
       4: areturn

  public scala.collection.immutable.Seq<de.sciss.lucre.expr.graph.Runner$Attr> map();
    Code:
       0: aload_0
       1: getfield      #64                 // Field map:Lscala/collection/immutable/Seq;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #171                // String Runner$RunWithAttr
       2: areturn

  public <T extends de.sciss.lucre.Txn<T>> de.sciss.lucre.expr.IAction<T> mkRepr(de.sciss.lucre.expr.Context<T>, T);
    Code:
       0: aload_0
       1: invokevirtual #120                // Method r:()Lde/sciss/lucre/expr/graph/Runner;
       4: aload_1
       5: aload_2
       6: invokeinterface #176,  3          // InterfaceMethod de/sciss/lucre/expr/graph/Runner.expand:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
      11: checkcast     #178                // class de/sciss/proc/Runner
      14: astore_3
      15: aload_0
      16: invokevirtual #125                // Method map:()Lscala/collection/immutable/Seq;
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokedynamic #199,  0            // InvokeDynamic #0:apply:(Lde/sciss/lucre/expr/graph/Runner$RunWithAttr;Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lscala/Function1;
      27: invokeinterface #202,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
      32: checkcast     #127                // class scala/collection/immutable/Seq
      35: astore        4
      37: new           #204                // class de/sciss/lucre/expr/IExprFormAsRunnerMap
      40: dup
      41: aload         4
      43: aload_2
      44: aload_1
      45: invokeinterface #210,  1          // InterfaceMethod de/sciss/lucre/expr/Context.targets:()Lde/sciss/lucre/ITargets;
      50: invokespecial #213                // Method de/sciss/lucre/expr/IExprFormAsRunnerMap."<init>":(Lscala/collection/immutable/Seq;Lde/sciss/lucre/Txn;Lde/sciss/lucre/ITargets;)V
      53: astore        5
      55: new           #25                 // class de/sciss/lucre/expr/graph/Runner$ExpandedRunWith
      58: dup
      59: aload_3
      60: aload         5
      62: invokespecial #216                // Method de/sciss/lucre/expr/graph/Runner$ExpandedRunWith."<init>":(Lde/sciss/proc/Runner;Lde/sciss/lucre/MapObjLike;)V
      65: areturn

  public de.sciss.lucre.expr.graph.Runner$RunWithAttr copy(de.sciss.lucre.expr.graph.Runner, scala.collection.immutable.Seq<de.sciss.lucre.expr.graph.Runner$Attr>);
    Code:
       0: new           #2                  // class de/sciss/lucre/expr/graph/Runner$RunWithAttr
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #224                // Method "<init>":(Lde/sciss/lucre/expr/graph/Runner;Lscala/collection/immutable/Seq;)V
       9: areturn

  public de.sciss.lucre.expr.graph.Runner copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #120                // Method r:()Lde/sciss/lucre/expr/graph/Runner;
       4: areturn

  public scala.collection.immutable.Seq<de.sciss.lucre.expr.graph.Runner$Attr> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method map:()Lscala/collection/immutable/Seq;
       4: areturn

  public de.sciss.lucre.expr.graph.Runner _1();
    Code:
       0: aload_0
       1: invokevirtual #120                // Method r:()Lde/sciss/lucre/expr/graph/Runner;
       4: areturn

  public scala.collection.immutable.Seq<de.sciss.lucre.expr.graph.Runner$Attr> _2();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method map:()Lscala/collection/immutable/Seq;
       4: areturn

  public de.sciss.lucre.Disposable mkRepr(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #228                // Method mkRepr:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/expr/IAction;
       6: areturn

  private final scala.Tuple2 $anonfun$1(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn, de.sciss.lucre.expr.graph.Runner$Attr);
    Code:
       0: aload_3
       1: invokeinterface #234,  1          // InterfaceMethod de/sciss/lucre/expr/graph/Runner$Attr.key:()Lde/sciss/lucre/expr/graph/Ex;
       6: aload_1
       7: aload_2
       8: invokeinterface #237,  3          // InterfaceMethod de/sciss/lucre/expr/graph/Ex.expand:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
      13: checkcast     #239                // class de/sciss/lucre/IExpr
      16: astore        4
      18: aload_3
      19: aload_1
      20: aload_2
      21: invokeinterface #243,  3          // InterfaceMethod de/sciss/lucre/expr/graph/Runner$Attr.expandValue:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Form;
      26: astore        5
      28: getstatic     #248                // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      31: aload         4
      33: aload         5
      35: invokevirtual #251                // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      38: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #268,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
