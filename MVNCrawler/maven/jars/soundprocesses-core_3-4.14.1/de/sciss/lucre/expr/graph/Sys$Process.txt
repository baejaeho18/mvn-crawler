Compiled from "Sys.scala"
public interface de.sciss.lucre.expr.graph.Sys$Process extends de.sciss.lucre.expr.graph.Runner {
  public static de.sciss.lucre.expr.graph.Sys$Process apply(de.sciss.lucre.expr.graph.Ex<java.lang.String>, de.sciss.lucre.expr.graph.Ex<scala.collection.immutable.Seq<java.lang.String>>);
    Code:
       0: getstatic     #25                 // Field de/sciss/lucre/expr/graph/Sys$Process$.MODULE$:Lde/sciss/lucre/expr/graph/Sys$Process$;
       3: aload_0
       4: aload_1
       5: invokevirtual #27                 // Method de/sciss/lucre/expr/graph/Sys$Process$.apply:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Sys$Process;
       8: areturn

  public static de.sciss.lucre.expr.graph.Sys$Process read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: getstatic     #25                 // Field de/sciss/lucre/expr/graph/Sys$Process$.MODULE$:Lde/sciss/lucre/expr/graph/Sys$Process$;
       3: aload_0
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #31                 // Method de/sciss/lucre/expr/graph/Sys$Process$.read:(Lde/sciss/lucre/expr/ExElem$RefMapIn;Ljava/lang/String;II)Lde/sciss/lucre/expr/graph/Sys$Process;
      10: areturn

  public static de.sciss.lucre.expr.graph.Ex<scala.collection.immutable.Seq<java.lang.String>> apply$default$2();
    Code:
       0: getstatic     #25                 // Field de/sciss/lucre/expr/graph/Sys$Process$.MODULE$:Lde/sciss/lucre/expr/graph/Sys$Process$;
       3: invokevirtual #36                 // Method de/sciss/lucre/expr/graph/Sys$Process$.apply$default$2:()Lde/sciss/lucre/expr/graph/Ex;
       6: areturn

  public abstract de.sciss.lucre.expr.graph.Ex<java.net.URI> directory();

  public abstract void directory_$eq(de.sciss.lucre.expr.graph.Ex<java.net.URI>);

  public abstract de.sciss.lucre.expr.graph.Ex<java.lang.String> output();
}
