Compiled from "Proc.scala"
public interface de.sciss.lucre.expr.graph.Proc extends de.sciss.lucre.expr.graph.Obj {
  public static final long OFFSET$_m_0;

  public static de.sciss.lucre.expr.graph.Ex Ops(de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Proc>);
    Code:
       0: getstatic     #67                 // Field de/sciss/lucre/expr/graph/Proc$.MODULE$:Lde/sciss/lucre/expr/graph/Proc$;
       3: aload_0
       4: invokevirtual #69                 // Method de/sciss/lucre/expr/graph/Proc$.Ops:(Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Ex;
       7: areturn

  public static de.sciss.lucre.expr.graph.Obj$Make apply();
    Code:
       0: getstatic     #67                 // Field de/sciss/lucre/expr/graph/Proc$.MODULE$:Lde/sciss/lucre/expr/graph/Proc$;
       3: invokevirtual #73                 // Method de/sciss/lucre/expr/graph/Proc$.apply:()Lde/sciss/lucre/expr/graph/Obj$Make;
       6: areturn

  public static void init();
    Code:
       0: getstatic     #67                 // Field de/sciss/lucre/expr/graph/Proc$.MODULE$:Lde/sciss/lucre/expr/graph/Proc$;
       3: invokevirtual #77                 // Method de/sciss/lucre/expr/graph/Proc$.init:()V
       6: return

  public static de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Proc> read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: getstatic     #67                 // Field de/sciss/lucre/expr/graph/Proc$.MODULE$:Lde/sciss/lucre/expr/graph/Proc$;
       3: aload_0
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #82                 // Method de/sciss/lucre/expr/graph/Proc$.read:(Lde/sciss/lucre/expr/ExElem$RefMapIn;Ljava/lang/String;II)Lde/sciss/lucre/expr/graph/Ex;
      10: areturn

  public static <T extends de.sciss.lucre.Txn<T>> de.sciss.lucre.expr.graph.Proc wrap(de.sciss.proc.Proc<T>, T);
    Code:
       0: getstatic     #67                 // Field de/sciss/lucre/expr/graph/Proc$.MODULE$:Lde/sciss/lucre/expr/graph/Proc$;
       3: aload_0
       4: aload_1
       5: invokevirtual #87                 // Method de/sciss/lucre/expr/graph/Proc$.wrap:(Lde/sciss/proc/Proc;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/expr/graph/Proc;
       8: areturn

  private static {};
    Code:
       0: getstatic     #93                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #63                 // class de/sciss/lucre/expr/graph/Proc$
       5: ldc           #95                 // String 0bitmap$1
       7: invokevirtual #99                 // Method scala/runtime/LazyVals$.getOffset:(Ljava/lang/Class;Ljava/lang/String;)J
      10: putstatic     #101                // Field OFFSET$_m_0:J
      13: return
}
