Compiled from "SocketAddress.scala"
public final class de.sciss.lucre.expr.graph.SocketAddress$ implements de.sciss.lucre.expr.ExElem$ProductReader<scala.Product>, de.sciss.lucre.expr.graph.SocketAddressPlatform, scala.deriving.Mirror$Product {
  public static final de.sciss.lucre.expr.graph.SocketAddress$LocalHost$ LocalHost;

  public static final de.sciss.lucre.expr.graph.SocketAddress$Apply$ Apply;

  public static final de.sciss.lucre.expr.graph.SocketAddress$Host$ Host;

  public static final de.sciss.lucre.expr.graph.SocketAddress$Port$ Port;

  public static final de.sciss.lucre.expr.graph.SocketAddress$ExOps$ ExOps;

  public static final de.sciss.lucre.expr.graph.SocketAddress$ExValue$ ExValue;

  private static final de.sciss.lucre.expr.graph.SocketAddress$Impl$ Impl;

  public static final de.sciss.lucre.expr.graph.SocketAddress$ MODULE$;

  private de.sciss.lucre.expr.graph.SocketAddress$();
    Code:
       0: aload_0
       1: invokespecial #84                 // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class de/sciss/lucre/expr/graph/SocketAddress$
       3: dup
       4: invokespecial #87                 // Method "<init>":()V
       7: putstatic     #89                 // Field MODULE$:Lde/sciss/lucre/expr/graph/SocketAddress$;
      10: return

  public java.lang.String mkLocalHostName();
    Code:
       0: aload_0
       1: invokestatic  #95                 // InterfaceMethod de/sciss/lucre/expr/graph/SocketAddressPlatform.mkLocalHostName$:(Lde/sciss/lucre/expr/graph/SocketAddressPlatform;)Ljava/lang/String;
       4: areturn

  private java.lang.Object writeReplace();
    Code:
       0: new           #99                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class de/sciss/lucre/expr/graph/SocketAddress$
       6: invokespecial #102                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public de.sciss.lucre.expr.graph.SocketAddress apply(java.lang.String, int);
    Code:
       0: new           #24                 // class de/sciss/lucre/expr/graph/SocketAddress
       3: dup
       4: aload_1
       5: iload_2
       6: invokespecial #109                // Method de/sciss/lucre/expr/graph/SocketAddress."<init>":(Ljava/lang/String;I)V
       9: areturn

  public de.sciss.lucre.expr.graph.SocketAddress unapply(de.sciss.lucre.expr.graph.SocketAddress);
    Code:
       0: aload_1
       1: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #118                // String SocketAddress
       2: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.SocketAddress> apply(de.sciss.lucre.expr.graph.Ex<java.lang.String>, de.sciss.lucre.expr.graph.Ex<java.lang.Object>);
    Code:
       0: getstatic     #122                // Field de/sciss/lucre/expr/graph/SocketAddress$Impl$.MODULE$:Lde/sciss/lucre/expr/graph/SocketAddress$Impl$;
       3: aload_1
       4: aload_2
       5: invokevirtual #125                // Method de/sciss/lucre/expr/graph/SocketAddress$Impl$.apply:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/SocketAddress$Impl;
       8: areturn

  public de.sciss.lucre.expr.graph.Ex<java.lang.String> apply$default$1();
    Code:
       0: getstatic     #131                // Field de/sciss/lucre/expr/graph/SocketAddress$LocalHost$.MODULE$:Lde/sciss/lucre/expr/graph/SocketAddress$LocalHost$;
       3: invokevirtual #134                // Method de/sciss/lucre/expr/graph/SocketAddress$LocalHost$.apply:()Lde/sciss/lucre/expr/graph/SocketAddress$LocalHost;
       6: areturn

  public scala.Product read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: getstatic     #145                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: iload_3
       4: iconst_2
       5: if_icmpne     18
       8: iload         4
      10: iconst_0
      11: if_icmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokevirtual #149                // Method scala/Predef$.require:(Z)V
      22: aload_1
      23: invokevirtual #152                // Method de/sciss/lucre/expr/ExElem$RefMapIn.readElem:()Ljava/lang/Object;
      26: astore        5
      28: aload         5
      30: instanceof    #154                // class java/lang/String
      33: ifeq          63
      36: aload         5
      38: checkcast     #154                // class java/lang/String
      41: astore        6
      43: aload_1
      44: invokevirtual #158                // Method de/sciss/lucre/expr/ExElem$RefMapIn.readInt:()I
      47: istore        7
      49: new           #24                 // class de/sciss/lucre/expr/graph/SocketAddress
      52: dup
      53: aload         6
      55: iload         7
      57: invokespecial #109                // Method de/sciss/lucre/expr/graph/SocketAddress."<init>":(Ljava/lang/String;I)V
      60: goto          106
      63: aload         5
      65: instanceof    #160                // class de/sciss/lucre/expr/graph/Ex
      68: ifeq          95
      71: aload         5
      73: checkcast     #160                // class de/sciss/lucre/expr/graph/Ex
      76: astore        8
      78: aload_1
      79: invokevirtual #163                // Method de/sciss/lucre/expr/ExElem$RefMapIn.readEx:()Lde/sciss/lucre/expr/graph/Ex;
      82: astore        9
      84: aload_0
      85: aload         8
      87: aload         9
      89: invokevirtual #165                // Method apply:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Ex;
      92: goto          106
      95: new           #167                // class java/lang/IllegalStateException
      98: dup
      99: invokespecial #168                // Method java/lang/IllegalStateException."<init>":()V
     102: athrow
     103: nop
     104: nop
     105: athrow
     106: areturn

  public final de.sciss.lucre.expr.graph.Ex ExOps(de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.SocketAddress>);
    Code:
       0: aload_1
       1: areturn

  public de.sciss.lucre.expr.graph.SocketAddress fromProduct(scala.Product);
    Code:
       0: new           #24                 // class de/sciss/lucre/expr/graph/SocketAddress
       3: dup
       4: aload_1
       5: iconst_0
       6: invokeinterface #185,  2          // InterfaceMethod scala/Product.productElement:(I)Ljava/lang/Object;
      11: checkcast     #154                // class java/lang/String
      14: aload_1
      15: iconst_1
      16: invokeinterface #185,  2          // InterfaceMethod scala/Product.productElement:(I)Ljava/lang/Object;
      21: invokestatic  #191                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      24: invokespecial #109                // Method de/sciss/lucre/expr/graph/SocketAddress."<init>":(Ljava/lang/String;I)V
      27: areturn

  public java.lang.Object read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokevirtual #195                // Method read:(Lde/sciss/lucre/expr/ExElem$RefMapIn;Ljava/lang/String;II)Lscala/Product;
       9: areturn

  public java.lang.Object fromProduct(scala.Product);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #199                // Method fromProduct:(Lscala/Product;)Lde/sciss/lucre/expr/graph/SocketAddress;
       5: areturn
}
