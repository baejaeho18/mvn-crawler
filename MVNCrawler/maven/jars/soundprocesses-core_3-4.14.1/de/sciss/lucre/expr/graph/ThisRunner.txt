Compiled from "ThisRunner.scala"
public interface de.sciss.lucre.expr.graph.ThisRunner extends de.sciss.lucre.expr.graph.Control {
  public static de.sciss.lucre.expr.graph.ThisRunner apply();
    Code:
       0: getstatic     #79                 // Field de/sciss/lucre/expr/graph/ThisRunner$.MODULE$:Lde/sciss/lucre/expr/graph/ThisRunner$;
       3: invokevirtual #81                 // Method de/sciss/lucre/expr/graph/ThisRunner$.apply:()Lde/sciss/lucre/expr/graph/ThisRunner;
       6: areturn

  public static de.sciss.lucre.expr.graph.ThisRunner read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: getstatic     #79                 // Field de/sciss/lucre/expr/graph/ThisRunner$.MODULE$:Lde/sciss/lucre/expr/graph/ThisRunner$;
       3: aload_0
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #85                 // Method de/sciss/lucre/expr/graph/ThisRunner$.read:(Lde/sciss/lucre/expr/ExElem$RefMapIn;Ljava/lang/String;II)Lde/sciss/lucre/expr/graph/ThisRunner;
      10: areturn

  public abstract de.sciss.lucre.expr.graph.Act stop();

  public abstract de.sciss.lucre.expr.graph.Act done();

  public abstract de.sciss.lucre.expr.graph.Act fail(de.sciss.lucre.expr.graph.Ex<java.lang.String>);

  public abstract de.sciss.lucre.expr.graph.Ex<java.lang.Object> progress();

  public abstract void progress_$eq(de.sciss.lucre.expr.graph.Ex<java.lang.Object>);

  public abstract <A> de.sciss.lucre.expr.graph.ThisRunner$Attr<A> attr(java.lang.String, de.sciss.lucre.expr.graph.Obj$Bridge<A>);
}
