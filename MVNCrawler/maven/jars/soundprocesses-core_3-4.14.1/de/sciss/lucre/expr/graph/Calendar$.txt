Compiled from "Calendar.scala"
public final class de.sciss.lucre.expr.graph.Calendar$ implements de.sciss.lucre.expr.ExElem$ProductReader<de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Calendar>> {
  public static final de.sciss.lucre.expr.graph.Calendar$TruncOp$ de$sciss$lucre$expr$graph$Calendar$$$TruncOp;

  public static final de.sciss.lucre.expr.graph.Calendar$SetOp$ de$sciss$lucre$expr$graph$Calendar$$$SetOp;

  public static final de.sciss.lucre.expr.graph.Calendar$GetOp$ de$sciss$lucre$expr$graph$Calendar$$$GetOp;

  public static final de.sciss.lucre.expr.graph.Calendar$AddOp$ de$sciss$lucre$expr$graph$Calendar$$$AddOp;

  public static final de.sciss.lucre.expr.graph.Calendar$Trunc$ Trunc;

  public static final de.sciss.lucre.expr.graph.Calendar$Set$ Set;

  public static final de.sciss.lucre.expr.graph.Calendar$Add$ Add;

  public static final de.sciss.lucre.expr.graph.Calendar$Get$ Get;

  public static final de.sciss.lucre.expr.graph.Calendar$ApplyOp$ de$sciss$lucre$expr$graph$Calendar$$$ApplyOp;

  public static final de.sciss.lucre.expr.graph.Calendar$Schedule$ Schedule;

  private static final de.sciss.lucre.expr.graph.Calendar$Apply$ Apply;

  public static final de.sciss.lucre.expr.graph.Calendar$Ops$ Ops;

  public static final de.sciss.lucre.expr.graph.Calendar$ MODULE$;

  private de.sciss.lucre.expr.graph.Calendar$();
    Code:
       0: aload_0
       1: invokespecial #115                // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class de/sciss/lucre/expr/graph/Calendar$
       3: dup
       4: invokespecial #118                // Method "<init>":()V
       7: putstatic     #120                // Field MODULE$:Lde/sciss/lucre/expr/graph/Calendar$;
      10: return

  private java.lang.Object writeReplace();
    Code:
       0: new           #124                // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class de/sciss/lucre/expr/graph/Calendar$
       6: invokespecial #127                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Calendar> apply(de.sciss.lucre.expr.graph.Ex<java.lang.Object>, de.sciss.lucre.expr.graph.Ex<java.lang.String>);
    Code:
       0: getstatic     #134                // Field de/sciss/lucre/expr/graph/Calendar$Apply$.MODULE$:Lde/sciss/lucre/expr/graph/Calendar$Apply$;
       3: aload_1
       4: aload_2
       5: invokevirtual #137                // Method de/sciss/lucre/expr/graph/Calendar$Apply$.apply:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Calendar$Apply;
       8: areturn

  public de.sciss.lucre.expr.graph.Ex<java.lang.Object> apply$default$1();
    Code:
       0: getstatic     #146                // Field de/sciss/lucre/expr/graph/TimeStamp$.MODULE$:Lde/sciss/lucre/expr/graph/TimeStamp$;
       3: invokevirtual #149                // Method de/sciss/lucre/expr/graph/TimeStamp$.apply:()Lde/sciss/lucre/expr/graph/TimeStamp;
       6: areturn

  public de.sciss.lucre.expr.graph.Ex<java.lang.String> apply$default$2();
    Code:
       0: getstatic     #156                // Field de/sciss/lucre/expr/graph/Ex$.MODULE$:Lde/sciss/lucre/expr/graph/Ex$;
       3: ldc           #158                // String default
       5: getstatic     #161                // Field de/sciss/lucre/expr/graph/Ex$Value$string$.MODULE$:Lde/sciss/lucre/expr/graph/Ex$Value$string$;
       8: invokevirtual #165                // Method de/sciss/lucre/expr/graph/Ex$.const:(Ljava/lang/Object;Lde/sciss/lucre/expr/graph/Ex$Value;)Lde/sciss/lucre/expr/graph/Ex;
      11: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Calendar> read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: getstatic     #177                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: iload_3
       4: iconst_2
       5: if_icmpne     18
       8: iload         4
      10: iconst_0
      11: if_icmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokevirtual #181                // Method scala/Predef$.require:(Z)V
      22: aload_1
      23: invokevirtual #184                // Method de/sciss/lucre/expr/ExElem$RefMapIn.readEx:()Lde/sciss/lucre/expr/graph/Ex;
      26: astore        5
      28: aload_1
      29: invokevirtual #184                // Method de/sciss/lucre/expr/ExElem$RefMapIn.readEx:()Lde/sciss/lucre/expr/graph/Ex;
      32: astore        6
      34: aload_0
      35: aload         5
      37: aload         6
      39: invokevirtual #186                // Method apply:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Ex;
      42: areturn

  public final int Milli();
    Code:
       0: iconst_0
       1: ireturn

  public final int Second();
    Code:
       0: iconst_1
       1: ireturn

  public final int Minute();
    Code:
       0: iconst_2
       1: ireturn

  public final int Hour();
    Code:
       0: iconst_3
       1: ireturn

  public final int Day();
    Code:
       0: iconst_4
       1: ireturn

  public final int Week();
    Code:
       0: iconst_5
       1: ireturn

  public final int Month();
    Code:
       0: bipush        6
       2: ireturn

  public final int Year();
    Code:
       0: bipush        7
       2: ireturn

  public final int DayOfWeek();
    Code:
       0: bipush        8
       2: ireturn

  public java.time.temporal.TemporalUnit de$sciss$lucre$expr$graph$Calendar$$$mkUnit(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 7
                     0: 48
                     1: 57
                     2: 66
                     3: 75
                     4: 84
                     5: 93
                     6: 102
                     7: 111
               default: 120
          }
      48: getstatic     #212                // Field java/time/temporal/ChronoUnit.MILLIS:Ljava/time/temporal/ChronoUnit;
      51: goto          155
      54: nop
      55: nop
      56: athrow
      57: getstatic     #215                // Field java/time/temporal/ChronoUnit.SECONDS:Ljava/time/temporal/ChronoUnit;
      60: goto          155
      63: nop
      64: nop
      65: athrow
      66: getstatic     #218                // Field java/time/temporal/ChronoUnit.MINUTES:Ljava/time/temporal/ChronoUnit;
      69: goto          155
      72: nop
      73: nop
      74: athrow
      75: getstatic     #221                // Field java/time/temporal/ChronoUnit.HOURS:Ljava/time/temporal/ChronoUnit;
      78: goto          155
      81: nop
      82: nop
      83: athrow
      84: getstatic     #224                // Field java/time/temporal/ChronoUnit.DAYS:Ljava/time/temporal/ChronoUnit;
      87: goto          155
      90: nop
      91: nop
      92: athrow
      93: getstatic     #227                // Field java/time/temporal/ChronoUnit.WEEKS:Ljava/time/temporal/ChronoUnit;
      96: goto          155
      99: nop
     100: nop
     101: athrow
     102: getstatic     #230                // Field java/time/temporal/ChronoUnit.MONTHS:Ljava/time/temporal/ChronoUnit;
     105: goto          155
     108: nop
     109: nop
     110: athrow
     111: getstatic     #233                // Field java/time/temporal/ChronoUnit.YEARS:Ljava/time/temporal/ChronoUnit;
     114: goto          155
     117: nop
     118: nop
     119: athrow
     120: getstatic     #239                // Field java/lang/System.err:Ljava/io/PrintStream;
     123: new           #241                // class java/lang/StringBuilder
     126: dup
     127: ldc           #242                // int 22
     129: invokespecial #245                // Method java/lang/StringBuilder."<init>":(I)V
     132: ldc           #247                // String Illegal calendar unit
     134: invokevirtual #251                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: iload_1
     138: invokevirtual #254                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     141: invokevirtual #258                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokevirtual #264                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     147: aconst_null
     148: goto          155
     151: nop
     152: nop
     153: athrow
     154: athrow
     155: areturn

  public java.time.temporal.TemporalField de$sciss$lucre$expr$graph$Calendar$$$mkField(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 8
                     0: 52
                     1: 61
                     2: 70
                     3: 79
                     4: 88
                     5: 97
                     6: 106
                     7: 115
                     8: 124
               default: 133
          }
      52: getstatic     #274                // Field java/time/temporal/ChronoField.MILLI_OF_SECOND:Ljava/time/temporal/ChronoField;
      55: goto          170
      58: nop
      59: nop
      60: athrow
      61: getstatic     #277                // Field java/time/temporal/ChronoField.SECOND_OF_MINUTE:Ljava/time/temporal/ChronoField;
      64: goto          170
      67: nop
      68: nop
      69: athrow
      70: getstatic     #280                // Field java/time/temporal/ChronoField.MINUTE_OF_HOUR:Ljava/time/temporal/ChronoField;
      73: goto          170
      76: nop
      77: nop
      78: athrow
      79: getstatic     #283                // Field java/time/temporal/ChronoField.HOUR_OF_DAY:Ljava/time/temporal/ChronoField;
      82: goto          170
      85: nop
      86: nop
      87: athrow
      88: getstatic     #286                // Field java/time/temporal/ChronoField.DAY_OF_MONTH:Ljava/time/temporal/ChronoField;
      91: goto          170
      94: nop
      95: nop
      96: athrow
      97: getstatic     #289                // Field java/time/temporal/ChronoField.ALIGNED_WEEK_OF_YEAR:Ljava/time/temporal/ChronoField;
     100: goto          170
     103: nop
     104: nop
     105: athrow
     106: getstatic     #292                // Field java/time/temporal/ChronoField.MONTH_OF_YEAR:Ljava/time/temporal/ChronoField;
     109: goto          170
     112: nop
     113: nop
     114: athrow
     115: getstatic     #295                // Field java/time/temporal/ChronoField.YEAR:Ljava/time/temporal/ChronoField;
     118: goto          170
     121: nop
     122: nop
     123: athrow
     124: getstatic     #298                // Field java/time/temporal/ChronoField.DAY_OF_WEEK:Ljava/time/temporal/ChronoField;
     127: goto          170
     130: nop
     131: nop
     132: athrow
     133: getstatic     #239                // Field java/lang/System.err:Ljava/io/PrintStream;
     136: new           #241                // class java/lang/StringBuilder
     139: dup
     140: ldc_w         #299                // int 23
     143: invokespecial #245                // Method java/lang/StringBuilder."<init>":(I)V
     146: ldc_w         #301                // String Illegal calendar field
     149: invokevirtual #251                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: iload_1
     153: invokevirtual #254                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     156: invokevirtual #258                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokevirtual #264                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     162: aconst_null
     163: goto          170
     166: nop
     167: nop
     168: athrow
     169: athrow
     170: areturn

  public final de.sciss.lucre.expr.graph.Ex Ops(de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Calendar>);
    Code:
       0: aload_1
       1: areturn

  public java.lang.Object read(de.sciss.lucre.expr.ExElem$RefMapIn, java.lang.String, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokevirtual #306                // Method read:(Lde/sciss/lucre/expr/ExElem$RefMapIn;Ljava/lang/String;II)Lde/sciss/lucre/expr/graph/Ex;
       9: areturn
}
