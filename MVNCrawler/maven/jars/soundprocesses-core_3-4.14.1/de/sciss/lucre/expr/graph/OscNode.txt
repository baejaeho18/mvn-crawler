Compiled from "OscNode.scala"
public interface de.sciss.lucre.expr.graph.OscNode extends de.sciss.lucre.expr.graph.Control {
  public static java.lang.String defaultCodec();
    Code:
       0: getstatic     #40                 // Field de/sciss/lucre/expr/graph/OscNode$.MODULE$:Lde/sciss/lucre/expr/graph/OscNode$;
       3: invokevirtual #42                 // Method de/sciss/lucre/expr/graph/OscNode$.defaultCodec:()Ljava/lang/String;
       6: areturn

  public static int defaultDump();
    Code:
       0: getstatic     #40                 // Field de/sciss/lucre/expr/graph/OscNode$.MODULE$:Lde/sciss/lucre/expr/graph/OscNode$;
       3: invokevirtual #46                 // Method de/sciss/lucre/expr/graph/OscNode$.defaultDump:()I
       6: ireturn

  public static java.lang.String keyCodec();
    Code:
       0: getstatic     #40                 // Field de/sciss/lucre/expr/graph/OscNode$.MODULE$:Lde/sciss/lucre/expr/graph/OscNode$;
       3: invokevirtual #49                 // Method de/sciss/lucre/expr/graph/OscNode$.keyCodec:()Ljava/lang/String;
       6: areturn

  public static java.lang.String keyDump();
    Code:
       0: getstatic     #40                 // Field de/sciss/lucre/expr/graph/OscNode$.MODULE$:Lde/sciss/lucre/expr/graph/OscNode$;
       3: invokevirtual #52                 // Method de/sciss/lucre/expr/graph/OscNode$.keyDump:()Ljava/lang/String;
       6: areturn

  public abstract de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.SocketAddress> self();

  public abstract de.sciss.lucre.expr.graph.Trig received();

  public abstract de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.OscMessage> message();

  public abstract de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.SocketAddress> sender();

  public static de.sciss.lucre.expr.graph.Ex dump$(de.sciss.lucre.expr.graph.OscNode);
    Code:
       0: aload_0
       1: invokespecial #66                 // InterfaceMethod dump:()Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public default de.sciss.lucre.expr.graph.Ex<java.lang.Object> dump();
    Code:
       0: getstatic     #71                 // Field de/sciss/lucre/expr/graph/OscNode$Dump$.MODULE$:Lde/sciss/lucre/expr/graph/OscNode$Dump$;
       3: aload_0
       4: invokevirtual #75                 // Method de/sciss/lucre/expr/graph/OscNode$Dump$.apply:(Lde/sciss/lucre/expr/graph/OscNode;)Lde/sciss/lucre/expr/graph/OscNode$Dump;
       7: areturn

  public static void dump_$eq$(de.sciss.lucre.expr.graph.OscNode, de.sciss.lucre.expr.graph.Ex);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #83                 // InterfaceMethod dump_$eq:(Lde/sciss/lucre/expr/graph/Ex;)V
       5: return

  public default void dump_$eq(de.sciss.lucre.expr.graph.Ex<java.lang.Object>);
    Code:
       0: getstatic     #90                 // Field de/sciss/lucre/expr/Graph$.MODULE$:Lde/sciss/lucre/expr/Graph$;
       3: invokevirtual #94                 // Method de/sciss/lucre/expr/Graph$.builder:()Lde/sciss/lucre/expr/Graph$Builder;
       6: astore_2
       7: aload_2
       8: aload_0
       9: ldc           #95                 // String dump
      11: aload_1
      12: invokeinterface #99,  4           // InterfaceMethod de/sciss/lucre/expr/Graph$Builder.putProperty:(Lde/sciss/lucre/expr/graph/Control;Ljava/lang/String;Ljava/lang/Object;)V
      17: return

  public static de.sciss.lucre.expr.graph.Trig select$(de.sciss.lucre.expr.graph.OscNode, de.sciss.lucre.expr.graph.Ex, scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #109                // InterfaceMethod select:(Lde/sciss/lucre/expr/graph/Ex;Lscala/collection/immutable/Seq;)Lde/sciss/lucre/expr/graph/Trig;
       6: areturn

  public default de.sciss.lucre.expr.graph.Trig select(de.sciss.lucre.expr.graph.Ex<java.lang.String>, scala.collection.immutable.Seq<de.sciss.lucre.expr.graph.CaseDef<?>>);
    Code:
       0: aload_0
       1: invokeinterface #113,  1          // InterfaceMethod received:()Lde/sciss/lucre/expr/graph/Trig;
       6: astore_3
       7: aload_0
       8: invokeinterface #115,  1          // InterfaceMethod message:()Lde/sciss/lucre/expr/graph/Ex;
      13: astore        4
      15: getstatic     #118                // Field de/sciss/lucre/expr/graph/OscMessage$Ops$.MODULE$:Lde/sciss/lucre/expr/graph/OscMessage$Ops$;
      18: getstatic     #123                // Field de/sciss/lucre/expr/graph/OscMessage$.MODULE$:Lde/sciss/lucre/expr/graph/OscMessage$;
      21: aload         4
      23: invokevirtual #127                // Method de/sciss/lucre/expr/graph/OscMessage$.Ops:(Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Ex;
      26: aload_1
      27: aload_2
      28: invokevirtual #131                // Method de/sciss/lucre/expr/graph/OscMessage$Ops$.select$extension:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lscala/collection/immutable/Seq;)Lde/sciss/lucre/expr/graph/OscMessage$Select;
      31: astore        5
      33: getstatic     #136                // Field de/sciss/lucre/expr/TrigOps$.MODULE$:Lde/sciss/lucre/expr/TrigOps$;
      36: getstatic     #141                // Field de/sciss/lucre/expr/graph/Trig$.MODULE$:Lde/sciss/lucre/expr/graph/Trig$;
      39: aload_3
      40: invokevirtual #145                // Method de/sciss/lucre/expr/graph/Trig$.ops:(Lde/sciss/lucre/expr/graph/Trig;)Lde/sciss/lucre/expr/graph/Trig;
      43: aload         5
      45: invokevirtual #149                // Method de/sciss/lucre/expr/TrigOps$.$minus$minus$greater$extension:(Lde/sciss/lucre/expr/graph/Trig;Lde/sciss/lucre/expr/graph/Act;)Lde/sciss/lucre/expr/graph/Act;
      48: pop
      49: aload         5
      51: areturn

  public static de.sciss.lucre.expr.graph.Ex codec$(de.sciss.lucre.expr.graph.OscNode);
    Code:
       0: aload_0
       1: invokespecial #158                // InterfaceMethod codec:()Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public default de.sciss.lucre.expr.graph.Ex<java.lang.String> codec();
    Code:
       0: getstatic     #162                // Field de/sciss/lucre/expr/graph/OscNode$Codec$.MODULE$:Lde/sciss/lucre/expr/graph/OscNode$Codec$;
       3: aload_0
       4: invokevirtual #165                // Method de/sciss/lucre/expr/graph/OscNode$Codec$.apply:(Lde/sciss/lucre/expr/graph/OscNode;)Lde/sciss/lucre/expr/graph/OscNode$Codec;
       7: areturn

  public static void codec_$eq$(de.sciss.lucre.expr.graph.OscNode, de.sciss.lucre.expr.graph.Ex);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #169                // InterfaceMethod codec_$eq:(Lde/sciss/lucre/expr/graph/Ex;)V
       5: return

  public default void codec_$eq(de.sciss.lucre.expr.graph.Ex<java.lang.String>);
    Code:
       0: getstatic     #90                 // Field de/sciss/lucre/expr/Graph$.MODULE$:Lde/sciss/lucre/expr/Graph$;
       3: invokevirtual #94                 // Method de/sciss/lucre/expr/Graph$.builder:()Lde/sciss/lucre/expr/Graph$Builder;
       6: astore_2
       7: aload_2
       8: aload_0
       9: ldc           #171                // String codec
      11: aload_1
      12: invokeinterface #99,  4           // InterfaceMethod de/sciss/lucre/expr/Graph$Builder.putProperty:(Lde/sciss/lucre/expr/graph/Control;Ljava/lang/String;Ljava/lang/Object;)V
      17: return
}
