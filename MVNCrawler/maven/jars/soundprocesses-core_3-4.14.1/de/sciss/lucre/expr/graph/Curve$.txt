Compiled from "Curve.scala"
public final class de.sciss.lucre.expr.graph.Curve$ implements java.io.Serializable {
  public static final long OFFSET$_m_0;

  public long 0bitmap$1;

  private static scala.runtime.BoxedUnit _init$lzy1;

  public static final de.sciss.lucre.expr.graph.Curve$Const$ Const;

  public static final de.sciss.lucre.expr.graph.Curve$Par$ Par;

  public static final de.sciss.lucre.expr.graph.Curve$ParOp$ ParOp;

  private static final de.sciss.lucre.expr.graph.Curve$TypeImpl$ TypeImpl;

  public static final de.sciss.lucre.expr.graph.Curve$ MODULE$;

  private de.sciss.lucre.expr.graph.Curve$();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method java/lang/Object."<init>":()V
       4: return

  private static {};
    Code:
       0: getstatic     #57                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class de/sciss/lucre/expr/graph/Curve$
       5: ldc           #58                 // String 0bitmap$1
       7: invokevirtual #62                 // Method scala/runtime/LazyVals$.getOffset:(Ljava/lang/Class;Ljava/lang/String;)J
      10: putstatic     #64                 // Field OFFSET$_m_0:J
      13: new           #2                  // class de/sciss/lucre/expr/graph/Curve$
      16: dup
      17: invokespecial #65                 // Method "<init>":()V
      20: putstatic     #67                 // Field MODULE$:Lde/sciss/lucre/expr/graph/Curve$;
      23: return

  private java.lang.Object writeReplace();
    Code:
       0: new           #71                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class de/sciss/lucre/expr/graph/Curve$
       6: invokespecial #74                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  private scala.runtime.BoxedUnit _init();
    Code:
       0: getstatic     #57                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #64                 // Field OFFSET$_m_0:J
       7: invokevirtual #82                 // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #57                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #86                 // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #87                 // long 3l
      24: lcmp
      25: ifne          35
      28: getstatic     #90                 // Field _init$lzy1:Lscala/runtime/BoxedUnit;
      31: areturn
      32: nop
      33: nop
      34: athrow
      35: lload_3
      36: lconst_0
      37: lcmp
      38: ifne          118
      41: getstatic     #57                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      44: aload_0
      45: getstatic     #64                 // Field OFFSET$_m_0:J
      48: lload_1
      49: iconst_1
      50: iconst_0
      51: invokevirtual #94                 // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      54: ifeq          115
      57: getstatic     #99                 // Field de/sciss/lucre/Adjunct$.MODULE$:Lde/sciss/lucre/Adjunct$;
      60: getstatic     #101                // Field de/sciss/lucre/expr/graph/Curve$TypeImpl$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$TypeImpl$;
      63: invokevirtual #105                // Method de/sciss/lucre/Adjunct$.addFactory:(Lde/sciss/lucre/Adjunct$Factory;)V
      66: getstatic     #110                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      69: astore        5
      71: aload         5
      73: putstatic     #90                 // Field _init$lzy1:Lscala/runtime/BoxedUnit;
      76: getstatic     #57                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      79: aload_0
      80: getstatic     #64                 // Field OFFSET$_m_0:J
      83: iconst_3
      84: iconst_0
      85: invokevirtual #114                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      88: aload         5
      90: areturn
      91: nop
      92: nop
      93: athrow
      94: astore        6
      96: getstatic     #57                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      99: aload_0
     100: getstatic     #64                 // Field OFFSET$_m_0:J
     103: iconst_0
     104: iconst_0
     105: invokevirtual #114                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
     108: aload         6
     110: athrow
     111: nop
     112: nop
     113: athrow
     114: athrow
     115: goto          130
     118: getstatic     #57                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     121: aload_0
     122: getstatic     #64                 // Field OFFSET$_m_0:J
     125: lload_1
     126: iconst_0
     127: invokevirtual #118                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     130: goto          0
     133: nop
     134: athrow
    Exception table:
       from    to  target type
          57    91    94   Class java/lang/Throwable

  public void init();
    Code:
       0: aload_0
       1: invokespecial #121                // Method _init:()Lscala/runtime/BoxedUnit;
       4: pop
       5: return

  public de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Step();
    Code:
       0: getstatic     #126                // Field de/sciss/lucre/expr/graph/Curve$Const$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$Const$;
       3: iconst_0
       4: invokevirtual #130                // Method de/sciss/lucre/expr/graph/Curve$Const$.apply:(I)Lde/sciss/lucre/expr/graph/Ex;
       7: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Lin();
    Code:
       0: getstatic     #126                // Field de/sciss/lucre/expr/graph/Curve$Const$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$Const$;
       3: iconst_1
       4: invokevirtual #130                // Method de/sciss/lucre/expr/graph/Curve$Const$.apply:(I)Lde/sciss/lucre/expr/graph/Ex;
       7: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Exp();
    Code:
       0: getstatic     #126                // Field de/sciss/lucre/expr/graph/Curve$Const$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$Const$;
       3: iconst_2
       4: invokevirtual #130                // Method de/sciss/lucre/expr/graph/Curve$Const$.apply:(I)Lde/sciss/lucre/expr/graph/Ex;
       7: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Sine();
    Code:
       0: getstatic     #126                // Field de/sciss/lucre/expr/graph/Curve$Const$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$Const$;
       3: iconst_3
       4: invokevirtual #130                // Method de/sciss/lucre/expr/graph/Curve$Const$.apply:(I)Lde/sciss/lucre/expr/graph/Ex;
       7: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Welch();
    Code:
       0: getstatic     #126                // Field de/sciss/lucre/expr/graph/Curve$Const$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$Const$;
       3: iconst_4
       4: invokevirtual #130                // Method de/sciss/lucre/expr/graph/Curve$Const$.apply:(I)Lde/sciss/lucre/expr/graph/Ex;
       7: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Squared();
    Code:
       0: getstatic     #126                // Field de/sciss/lucre/expr/graph/Curve$Const$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$Const$;
       3: bipush        6
       5: invokevirtual #130                // Method de/sciss/lucre/expr/graph/Curve$Const$.apply:(I)Lde/sciss/lucre/expr/graph/Ex;
       8: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.synth.Curve> Cubed();
    Code:
       0: getstatic     #126                // Field de/sciss/lucre/expr/graph/Curve$Const$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$Const$;
       3: bipush        7
       5: invokevirtual #130                // Method de/sciss/lucre/expr/graph/Curve$Const$.apply:(I)Lde/sciss/lucre/expr/graph/Ex;
       8: areturn

  public de.sciss.lucre.Adjunct$FromAny<de.sciss.synth.Curve> Type();
    Code:
       0: getstatic     #101                // Field de/sciss/lucre/expr/graph/Curve$TypeImpl$.MODULE$:Lde/sciss/lucre/expr/graph/Curve$TypeImpl$;
       3: areturn
}
