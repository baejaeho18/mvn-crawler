Compiled from "Runner.scala"
final class de.sciss.lucre.expr.graph.Runner$Impl implements scala.Product,de.sciss.lucre.expr.graph.Lazy,de.sciss.lucre.expr.graph.Control,de.sciss.lucre.expr.graph.Runner,java.io.Serializable {
  private transient java.lang.Object ref;

  private final de.sciss.lucre.expr.graph.Ex obj;

  public static de.sciss.lucre.expr.graph.Runner$Impl apply(de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Obj>);
    Code:
       0: getstatic     #38                 // Field de/sciss/lucre/expr/graph/Runner$Impl$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$Impl$;
       3: aload_0
       4: invokevirtual #40                 // Method de/sciss/lucre/expr/graph/Runner$Impl$.apply:(Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Runner$Impl;
       7: areturn

  public static de.sciss.lucre.expr.graph.Runner$Impl fromProduct(scala.Product);
    Code:
       0: getstatic     #38                 // Field de/sciss/lucre/expr/graph/Runner$Impl$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$Impl$;
       3: aload_0
       4: invokevirtual #44                 // Method de/sciss/lucre/expr/graph/Runner$Impl$.fromProduct:(Lscala/Product;)Lde/sciss/lucre/expr/graph/Runner$Impl;
       7: areturn

  public static de.sciss.lucre.expr.graph.Runner$Impl unapply(de.sciss.lucre.expr.graph.Runner$Impl);
    Code:
       0: getstatic     #38                 // Field de/sciss/lucre/expr/graph/Runner$Impl$.MODULE$:Lde/sciss/lucre/expr/graph/Runner$Impl$;
       3: aload_0
       4: invokevirtual #48                 // Method de/sciss/lucre/expr/graph/Runner$Impl$.unapply:(Lde/sciss/lucre/expr/graph/Runner$Impl;)Lde/sciss/lucre/expr/graph/Runner$Impl;
       7: areturn

  public de.sciss.lucre.expr.graph.Runner$Impl(de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Obj>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field obj:Lde/sciss/lucre/expr/graph/Ex;
       5: aload_0
       6: invokespecial #56                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #60                 // InterfaceMethod de/sciss/lucre/expr/graph/Lazy.$init$:(Lde/sciss/lucre/expr/graph/Lazy;)V
      13: aload_0
      14: invokestatic  #63                 // InterfaceMethod de/sciss/lucre/expr/graph/Control.$init$:(Lde/sciss/lucre/expr/graph/Control;)V
      17: invokestatic  #68                 // Method scala/runtime/Statics.releaseFence:()V
      20: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #76                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #80                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public final java.lang.Object ref();
    Code:
       0: aload_0
       1: getfield      #83                 // Field ref:Ljava/lang/Object;
       4: areturn

  public void de$sciss$lucre$expr$graph$Lazy$_setter_$ref_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field ref:Ljava/lang/Object;
       5: return

  public de.sciss.lucre.Disposable expand(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #94                 // InterfaceMethod de/sciss/lucre/expr/graph/Lazy.expand$:(Lde/sciss/lucre/expr/graph/Lazy;Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
       6: areturn

  public java.lang.Object token();
    Code:
       0: aload_0
       1: invokestatic  #101                // InterfaceMethod de/sciss/lucre/expr/graph/Control.token$:(Lde/sciss/lucre/expr/graph/Control;)Ljava/lang/Object;
       4: areturn

  public de.sciss.lucre.expr.graph.Act run();
    Code:
       0: aload_0
       1: invokestatic  #107                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.run$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Act;
       4: areturn

  public de.sciss.lucre.expr.graph.Act stop();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.stop$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Act;
       4: areturn

  public de.sciss.lucre.expr.graph.Act runWith(scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #118                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.runWith$:(Lde/sciss/lucre/expr/graph/Runner;Lscala/collection/immutable/Seq;)Lde/sciss/lucre/expr/graph/Act;
       5: areturn

  public de.sciss.lucre.expr.graph.Ex state();
    Code:
       0: aload_0
       1: invokestatic  #125                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.state$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig stopped();
    Code:
       0: aload_0
       1: invokestatic  #131                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.stopped$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex isStopped();
    Code:
       0: aload_0
       1: invokestatic  #135                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.isStopped$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig running();
    Code:
       0: aload_0
       1: invokestatic  #139                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.running$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex isRunning();
    Code:
       0: aload_0
       1: invokestatic  #143                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.isRunning$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig done();
    Code:
       0: aload_0
       1: invokestatic  #147                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.done$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex isDone();
    Code:
       0: aload_0
       1: invokestatic  #151                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.isDone$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig failed();
    Code:
       0: aload_0
       1: invokestatic  #155                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.failed$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex hasFailed();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.hasFailed$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig stoppedOrDone();
    Code:
       0: aload_0
       1: invokestatic  #163                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.stoppedOrDone$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex isStoppedOrDone();
    Code:
       0: aload_0
       1: invokestatic  #167                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.isStoppedOrDone$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig idle();
    Code:
       0: aload_0
       1: invokestatic  #171                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.idle$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex isIdle();
    Code:
       0: aload_0
       1: invokestatic  #175                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.isIdle$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig busy();
    Code:
       0: aload_0
       1: invokestatic  #179                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.busy$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex isBusy();
    Code:
       0: aload_0
       1: invokestatic  #183                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.isBusy$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex progress();
    Code:
       0: aload_0
       1: invokestatic  #187                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.progress$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex messages();
    Code:
       0: aload_0
       1: invokestatic  #191                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.messages$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #198                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #202                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     65
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class de/sciss/lucre/expr/graph/Runner$Impl
      11: ifeq          58
      14: aload_2
      15: checkcast     #2                  // class de/sciss/lucre/expr/graph/Runner$Impl
      18: astore_3
      19: aload_0
      20: invokevirtual #206                // Method obj:()Lde/sciss/lucre/expr/graph/Ex;
      23: aload_3
      24: invokevirtual #206                // Method obj:()Lde/sciss/lucre/expr/graph/Ex;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          54
      42: aload         4
      44: invokevirtual #208                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: goto          62
      58: iconst_0
      59: goto          62
      62: ifeq          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #198                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #216                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class de/sciss/lucre/expr/graph/Runner$Impl
       4: ireturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     14
       7: aload_0
       8: invokevirtual #225                // Method _1:()Lde/sciss/lucre/expr/graph/Ex;
      11: goto          29
      14: new           #227                // class java/lang/IndexOutOfBoundsException
      17: dup
      18: iload_1
      19: invokestatic  #233                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      22: invokevirtual #237                // Method java/lang/Integer.toString:()Ljava/lang/String;
      25: invokespecial #240                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: areturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     12
       7: ldc           #244                // String obj
       9: goto          27
      12: new           #227                // class java/lang/IndexOutOfBoundsException
      15: dup
      16: iload_1
      17: invokestatic  #233                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      20: invokevirtual #237                // Method java/lang/Integer.toString:()Ljava/lang/String;
      23: invokespecial #240                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Obj> obj();
    Code:
       0: aload_0
       1: getfield      #53                 // Field obj:Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #250                // String Runner
       2: areturn

  public <T extends de.sciss.lucre.Txn<T>> de.sciss.proc.Runner<T> mkRepr(de.sciss.lucre.expr.Context<T>, T);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #255                // class de/sciss/lucre/synth/Txn
       6: ifeq          32
       9: new           #17                 // class de/sciss/lucre/expr/Context$WithTxn
      12: dup
      13: aload_1
      14: aload_2
      15: invokespecial #258                // Method de/sciss/lucre/expr/Context$WithTxn."<init>":(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)V
      18: astore        4
      20: aload_0
      21: aload         4
      23: invokevirtual #262                // Method de/sciss/lucre/expr/Context$WithTxn.cast:()Lde/sciss/lucre/expr/Context$WithTxn;
      26: invokespecial #266                // Method mkControlImpl:(Lde/sciss/lucre/expr/Context$WithTxn;)Lde/sciss/proc/Runner;
      29: goto          46
      32: new           #268                // class java/lang/Exception
      35: dup
      36: ldc_w         #270                // String Need a SoundProcesses system
      39: invokespecial #271                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      42: athrow
      43: nop
      44: nop
      45: athrow
      46: areturn

  private <T extends de.sciss.lucre.synth.Txn<T>> de.sciss.proc.Runner<T> mkControlImpl(de.sciss.lucre.expr.Context$WithTxn<T>);
    Code:
       0: getstatic     #285                // Field de/sciss/proc/Universe$.MODULE$:Lde/sciss/proc/Universe$;
       3: aload_1
       4: invokevirtual #288                // Method de/sciss/lucre/expr/Context$WithTxn.tx:()Lde/sciss/lucre/Txn;
       7: checkcast     #255                // class de/sciss/lucre/synth/Txn
      10: aload_1
      11: invokevirtual #291                // Method de/sciss/lucre/expr/Context$WithTxn.ctx:()Lde/sciss/lucre/expr/Context;
      14: invokeinterface #295,  1          // InterfaceMethod de/sciss/lucre/expr/Context.cursor:()Lde/sciss/lucre/Cursor;
      19: aload_1
      20: invokevirtual #291                // Method de/sciss/lucre/expr/Context$WithTxn.ctx:()Lde/sciss/lucre/expr/Context;
      23: invokeinterface #299,  1          // InterfaceMethod de/sciss/lucre/expr/Context.workspace:()Lde/sciss/lucre/Workspace;
      28: invokevirtual #302                // Method de/sciss/proc/Universe$.apply:(Lde/sciss/lucre/synth/Txn;Lde/sciss/lucre/Cursor;Lde/sciss/lucre/Workspace;)Lde/sciss/proc/Universe;
      31: astore_2
      32: new           #22                 // class de/sciss/lucre/expr/graph/Runner$ExpandedImpl
      35: dup
      36: aload_0
      37: invokevirtual #206                // Method obj:()Lde/sciss/lucre/expr/graph/Ex;
      40: aload_1
      41: invokevirtual #291                // Method de/sciss/lucre/expr/Context$WithTxn.ctx:()Lde/sciss/lucre/expr/Context;
      44: aload_1
      45: invokevirtual #288                // Method de/sciss/lucre/expr/Context$WithTxn.tx:()Lde/sciss/lucre/Txn;
      48: invokeinterface #304,  3          // InterfaceMethod de/sciss/lucre/expr/graph/Ex.expand:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
      53: checkcast     #306                // class de/sciss/lucre/IExpr
      56: aload_1
      57: invokevirtual #288                // Method de/sciss/lucre/expr/Context$WithTxn.tx:()Lde/sciss/lucre/Txn;
      60: aload_2
      61: invokespecial #309                // Method de/sciss/lucre/expr/graph/Runner$ExpandedImpl."<init>":(Lde/sciss/lucre/IExpr;Lde/sciss/lucre/Txn;Lde/sciss/proc/Universe;)V
      64: areturn

  public de.sciss.lucre.expr.graph.Runner$Impl copy(de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Obj>);
    Code:
       0: new           #2                  // class de/sciss/lucre/expr/graph/Runner$Impl
       3: dup
       4: aload_1
       5: invokespecial #314                // Method "<init>":(Lde/sciss/lucre/expr/graph/Ex;)V
       8: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Obj> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #206                // Method obj:()Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Obj> _1();
    Code:
       0: aload_0
       1: invokevirtual #206                // Method obj:()Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.Disposable mkRepr(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #317                // Method mkRepr:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/proc/Runner;
       6: areturn
}
