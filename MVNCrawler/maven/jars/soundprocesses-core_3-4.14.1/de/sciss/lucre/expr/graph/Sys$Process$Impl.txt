Compiled from "Sys.scala"
final class de.sciss.lucre.expr.graph.Sys$Process$Impl implements scala.Product,de.sciss.lucre.expr.graph.Lazy,de.sciss.lucre.expr.graph.Control,de.sciss.lucre.expr.graph.Runner,de.sciss.lucre.expr.graph.Sys$Process,java.io.Serializable {
  private transient java.lang.Object ref;

  private final de.sciss.lucre.expr.graph.Ex cmd;

  private final de.sciss.lucre.expr.graph.Ex args;

  public static de.sciss.lucre.expr.graph.Sys$Process$Impl apply(de.sciss.lucre.expr.graph.Ex<java.lang.String>, de.sciss.lucre.expr.graph.Ex<scala.collection.immutable.Seq<java.lang.String>>);
    Code:
       0: getstatic     #69                 // Field de/sciss/lucre/expr/graph/Sys$Process$Impl$.MODULE$:Lde/sciss/lucre/expr/graph/Sys$Process$Impl$;
       3: aload_0
       4: aload_1
       5: invokevirtual #71                 // Method de/sciss/lucre/expr/graph/Sys$Process$Impl$.apply:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Sys$Process$Impl;
       8: areturn

  public static de.sciss.lucre.expr.graph.Sys$Process$Impl fromProduct(scala.Product);
    Code:
       0: getstatic     #69                 // Field de/sciss/lucre/expr/graph/Sys$Process$Impl$.MODULE$:Lde/sciss/lucre/expr/graph/Sys$Process$Impl$;
       3: aload_0
       4: invokevirtual #75                 // Method de/sciss/lucre/expr/graph/Sys$Process$Impl$.fromProduct:(Lscala/Product;)Lde/sciss/lucre/expr/graph/Sys$Process$Impl;
       7: areturn

  public static de.sciss.lucre.expr.graph.Sys$Process$Impl unapply(de.sciss.lucre.expr.graph.Sys$Process$Impl);
    Code:
       0: getstatic     #69                 // Field de/sciss/lucre/expr/graph/Sys$Process$Impl$.MODULE$:Lde/sciss/lucre/expr/graph/Sys$Process$Impl$;
       3: aload_0
       4: invokevirtual #79                 // Method de/sciss/lucre/expr/graph/Sys$Process$Impl$.unapply:(Lde/sciss/lucre/expr/graph/Sys$Process$Impl;)Lde/sciss/lucre/expr/graph/Sys$Process$Impl;
       7: areturn

  public de.sciss.lucre.expr.graph.Sys$Process$Impl(de.sciss.lucre.expr.graph.Ex<java.lang.String>, de.sciss.lucre.expr.graph.Ex<scala.collection.immutable.Seq<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #84                 // Field cmd:Lde/sciss/lucre/expr/graph/Ex;
       5: aload_0
       6: aload_2
       7: putfield      #86                 // Field args:Lde/sciss/lucre/expr/graph/Ex;
      10: aload_0
      11: invokespecial #89                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #93                 // InterfaceMethod de/sciss/lucre/expr/graph/Lazy.$init$:(Lde/sciss/lucre/expr/graph/Lazy;)V
      18: aload_0
      19: invokestatic  #96                 // InterfaceMethod de/sciss/lucre/expr/graph/Control.$init$:(Lde/sciss/lucre/expr/graph/Control;)V
      22: invokestatic  #101                // Method scala/runtime/Statics.releaseFence:()V
      25: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #109                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #113                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public final java.lang.Object ref();
    Code:
       0: aload_0
       1: getfield      #116                // Field ref:Ljava/lang/Object;
       4: areturn

  public void de$sciss$lucre$expr$graph$Lazy$_setter_$ref_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #116                // Field ref:Ljava/lang/Object;
       5: return

  public de.sciss.lucre.Disposable expand(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #127                // InterfaceMethod de/sciss/lucre/expr/graph/Lazy.expand$:(Lde/sciss/lucre/expr/graph/Lazy;Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
       6: areturn

  public java.lang.Object token();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod de/sciss/lucre/expr/graph/Control.token$:(Lde/sciss/lucre/expr/graph/Control;)Ljava/lang/Object;
       4: areturn

  public de.sciss.lucre.expr.graph.Act run();
    Code:
       0: aload_0
       1: invokestatic  #140                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.run$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Act;
       4: areturn

  public de.sciss.lucre.expr.graph.Act stop();
    Code:
       0: aload_0
       1: invokestatic  #144                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.stop$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Act;
       4: areturn

  public de.sciss.lucre.expr.graph.Act runWith(scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #151                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.runWith$:(Lde/sciss/lucre/expr/graph/Runner;Lscala/collection/immutable/Seq;)Lde/sciss/lucre/expr/graph/Act;
       5: areturn

  public de.sciss.lucre.expr.graph.Ex state();
    Code:
       0: aload_0
       1: invokestatic  #158                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.state$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig stopped();
    Code:
       0: aload_0
       1: invokestatic  #164                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.stopped$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex isStopped();
    Code:
       0: aload_0
       1: invokestatic  #168                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.isStopped$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig running();
    Code:
       0: aload_0
       1: invokestatic  #172                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.running$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex isRunning();
    Code:
       0: aload_0
       1: invokestatic  #176                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.isRunning$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig done();
    Code:
       0: aload_0
       1: invokestatic  #180                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.done$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex isDone();
    Code:
       0: aload_0
       1: invokestatic  #184                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.isDone$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig failed();
    Code:
       0: aload_0
       1: invokestatic  #188                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.failed$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex hasFailed();
    Code:
       0: aload_0
       1: invokestatic  #192                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.hasFailed$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig stoppedOrDone();
    Code:
       0: aload_0
       1: invokestatic  #196                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.stoppedOrDone$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex isStoppedOrDone();
    Code:
       0: aload_0
       1: invokestatic  #200                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.isStoppedOrDone$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig idle();
    Code:
       0: aload_0
       1: invokestatic  #204                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.idle$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex isIdle();
    Code:
       0: aload_0
       1: invokestatic  #208                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.isIdle$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Trig busy();
    Code:
       0: aload_0
       1: invokestatic  #212                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.busy$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Trig;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex isBusy();
    Code:
       0: aload_0
       1: invokestatic  #216                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.isBusy$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex progress();
    Code:
       0: aload_0
       1: invokestatic  #220                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.progress$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex messages();
    Code:
       0: aload_0
       1: invokestatic  #224                // InterfaceMethod de/sciss/lucre/expr/graph/Runner.messages$:(Lde/sciss/lucre/expr/graph/Runner;)Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #231                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #235                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     96
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class de/sciss/lucre/expr/graph/Sys$Process$Impl
      11: ifeq          89
      14: aload_2
      15: checkcast     #2                  // class de/sciss/lucre/expr/graph/Sys$Process$Impl
      18: astore_3
      19: aload_0
      20: invokevirtual #239                // Method cmd:()Lde/sciss/lucre/expr/graph/Ex;
      23: aload_3
      24: invokevirtual #239                // Method cmd:()Lde/sciss/lucre/expr/graph/Ex;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          85
      42: aload         4
      44: invokevirtual #241                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          85
      50: aload_0
      51: invokevirtual #243                // Method args:()Lde/sciss/lucre/expr/graph/Ex;
      54: aload_3
      55: invokevirtual #243                // Method args:()Lde/sciss/lucre/expr/graph/Ex;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          85
      73: aload         5
      75: invokevirtual #241                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: goto          93
      89: iconst_0
      90: goto          93
      93: ifeq          100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #231                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #251                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class de/sciss/lucre/expr/graph/Sys$Process$Impl
       4: ireturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     14
       7: aload_0
       8: invokevirtual #260                // Method _1:()Lde/sciss/lucre/expr/graph/Ex;
      11: goto          41
      14: iconst_1
      15: iload_2
      16: if_icmpne     26
      19: aload_0
      20: invokevirtual #263                // Method _2:()Lde/sciss/lucre/expr/graph/Ex;
      23: goto          41
      26: new           #265                // class java/lang/IndexOutOfBoundsException
      29: dup
      30: iload_1
      31: invokestatic  #271                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      34: invokevirtual #275                // Method java/lang/Integer.toString:()Ljava/lang/String;
      37: invokespecial #278                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: areturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     13
       7: ldc_w         #282                // String cmd
      10: goto          39
      13: iconst_1
      14: iload_2
      15: if_icmpne     24
      18: ldc_w         #283                // String args
      21: goto          39
      24: new           #265                // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #271                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #275                // Method java/lang/Integer.toString:()Ljava/lang/String;
      35: invokespecial #278                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: areturn

  public de.sciss.lucre.expr.graph.Ex<java.lang.String> cmd();
    Code:
       0: aload_0
       1: getfield      #84                 // Field cmd:Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex<scala.collection.immutable.Seq<java.lang.String>> args();
    Code:
       0: aload_0
       1: getfield      #86                 // Field args:Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #290                // String Sys$Process
       3: areturn

  public de.sciss.lucre.expr.graph.Ex<java.net.URI> directory();
    Code:
       0: getstatic     #295                // Field de/sciss/lucre/expr/graph/Sys$Process$Directory$.MODULE$:Lde/sciss/lucre/expr/graph/Sys$Process$Directory$;
       3: aload_0
       4: invokevirtual #298                // Method de/sciss/lucre/expr/graph/Sys$Process$Directory$.apply:(Lde/sciss/lucre/expr/graph/Sys$Process;)Lde/sciss/lucre/expr/graph/Sys$Process$Directory;
       7: areturn

  public void directory_$eq(de.sciss.lucre.expr.graph.Ex<java.net.URI>);
    Code:
       0: getstatic     #307                // Field de/sciss/lucre/expr/Graph$.MODULE$:Lde/sciss/lucre/expr/Graph$;
       3: invokevirtual #311                // Method de/sciss/lucre/expr/Graph$.builder:()Lde/sciss/lucre/expr/Graph$Builder;
       6: astore_2
       7: aload_2
       8: aload_0
       9: ldc_w         #312                // String directory
      12: aload_1
      13: invokeinterface #316,  4          // InterfaceMethod de/sciss/lucre/expr/Graph$Builder.putProperty:(Lde/sciss/lucre/expr/graph/Control;Ljava/lang/String;Ljava/lang/Object;)V
      18: return

  public de.sciss.lucre.expr.graph.Ex<java.lang.String> output();
    Code:
       0: getstatic     #322                // Field de/sciss/lucre/expr/graph/Sys$Process$Output$.MODULE$:Lde/sciss/lucre/expr/graph/Sys$Process$Output$;
       3: aload_0
       4: invokevirtual #325                // Method de/sciss/lucre/expr/graph/Sys$Process$Output$.apply:(Lde/sciss/lucre/expr/graph/Sys$Process;)Lde/sciss/lucre/expr/graph/Sys$Process$Output;
       7: areturn

  public <T extends de.sciss.lucre.Txn<T>> de.sciss.lucre.expr.graph.Sys$Process$Peer<T> mkRepr(de.sciss.lucre.expr.Context<T>, T);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #330                // class de/sciss/lucre/synth/Txn
       6: ifeq          32
       9: new           #19                 // class de/sciss/lucre/expr/Context$WithTxn
      12: dup
      13: aload_1
      14: aload_2
      15: invokespecial #333                // Method de/sciss/lucre/expr/Context$WithTxn."<init>":(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)V
      18: astore        4
      20: aload_0
      21: aload         4
      23: invokevirtual #337                // Method de/sciss/lucre/expr/Context$WithTxn.cast:()Lde/sciss/lucre/expr/Context$WithTxn;
      26: invokespecial #341                // Method mkControlImpl:(Lde/sciss/lucre/expr/Context$WithTxn;)Lde/sciss/lucre/expr/graph/Sys$Process$Peer;
      29: goto          46
      32: new           #343                // class java/lang/Exception
      35: dup
      36: ldc_w         #345                // String Need a SoundProcesses system
      39: invokespecial #346                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      42: athrow
      43: nop
      44: nop
      45: athrow
      46: areturn

  private <T extends de.sciss.lucre.synth.Txn<T>> de.sciss.lucre.expr.graph.Sys$Process$Peer<T> mkControlImpl(de.sciss.lucre.expr.Context$WithTxn<T>);
    Code:
       0: getstatic     #358                // Field de/sciss/proc/Universe$.MODULE$:Lde/sciss/proc/Universe$;
       3: aload_1
       4: invokevirtual #361                // Method de/sciss/lucre/expr/Context$WithTxn.tx:()Lde/sciss/lucre/Txn;
       7: checkcast     #330                // class de/sciss/lucre/synth/Txn
      10: aload_1
      11: invokevirtual #364                // Method de/sciss/lucre/expr/Context$WithTxn.ctx:()Lde/sciss/lucre/expr/Context;
      14: invokeinterface #368,  1          // InterfaceMethod de/sciss/lucre/expr/Context.cursor:()Lde/sciss/lucre/Cursor;
      19: aload_1
      20: invokevirtual #364                // Method de/sciss/lucre/expr/Context$WithTxn.ctx:()Lde/sciss/lucre/expr/Context;
      23: invokeinterface #372,  1          // InterfaceMethod de/sciss/lucre/expr/Context.workspace:()Lde/sciss/lucre/Workspace;
      28: invokevirtual #375                // Method de/sciss/proc/Universe$.apply:(Lde/sciss/lucre/synth/Txn;Lde/sciss/lucre/Cursor;Lde/sciss/lucre/Workspace;)Lde/sciss/proc/Universe;
      31: astore_2
      32: aload_1
      33: invokevirtual #364                // Method de/sciss/lucre/expr/Context$WithTxn.ctx:()Lde/sciss/lucre/expr/Context;
      36: aload_0
      37: ldc_w         #312                // String directory
      40: aload_1
      41: invokevirtual #361                // Method de/sciss/lucre/expr/Context$WithTxn.tx:()Lde/sciss/lucre/Txn;
      44: invokeinterface #379,  4          // InterfaceMethod de/sciss/lucre/expr/Context.getProperty:(Lde/sciss/lucre/expr/graph/Control;Ljava/lang/String;Lde/sciss/lucre/Txn;)Lscala/Option;
      49: aload_0
      50: aload_1
      51: invokedynamic #400,  0            // InvokeDynamic #0:apply:(Lde/sciss/lucre/expr/graph/Sys$Process$Impl;Lde/sciss/lucre/expr/Context$WithTxn;)Lscala/Function1;
      56: invokevirtual #406                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      59: astore_3
      60: new           #54                 // class de/sciss/lucre/expr/graph/SysPlatform$ExpandedProcess
      63: dup
      64: getstatic     #411                // Field de/sciss/lucre/expr/graph/Sys$.MODULE$:Lde/sciss/lucre/expr/graph/Sys$;
      67: aload_0
      68: invokevirtual #239                // Method cmd:()Lde/sciss/lucre/expr/graph/Ex;
      71: aload_1
      72: invokevirtual #364                // Method de/sciss/lucre/expr/Context$WithTxn.ctx:()Lde/sciss/lucre/expr/Context;
      75: aload_1
      76: invokevirtual #361                // Method de/sciss/lucre/expr/Context$WithTxn.tx:()Lde/sciss/lucre/Txn;
      79: invokeinterface #413,  3          // InterfaceMethod de/sciss/lucre/expr/graph/Ex.expand:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
      84: checkcast     #415                // class de/sciss/lucre/IExpr
      87: aload_0
      88: invokevirtual #243                // Method args:()Lde/sciss/lucre/expr/graph/Ex;
      91: aload_1
      92: invokevirtual #364                // Method de/sciss/lucre/expr/Context$WithTxn.ctx:()Lde/sciss/lucre/expr/Context;
      95: aload_1
      96: invokevirtual #361                // Method de/sciss/lucre/expr/Context$WithTxn.tx:()Lde/sciss/lucre/Txn;
      99: invokeinterface #413,  3          // InterfaceMethod de/sciss/lucre/expr/graph/Ex.expand:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
     104: checkcast     #415                // class de/sciss/lucre/IExpr
     107: aload_3
     108: aload_2
     109: aload_1
     110: invokevirtual #364                // Method de/sciss/lucre/expr/Context$WithTxn.ctx:()Lde/sciss/lucre/expr/Context;
     113: invokeinterface #419,  1          // InterfaceMethod de/sciss/lucre/expr/Context.targets:()Lde/sciss/lucre/ITargets;
     118: invokespecial #422                // Method de/sciss/lucre/expr/graph/SysPlatform$ExpandedProcess."<init>":(Lde/sciss/lucre/expr/graph/SysPlatform;Lde/sciss/lucre/IExpr;Lde/sciss/lucre/IExpr;Lscala/Option;Lde/sciss/proc/Universe;Lde/sciss/lucre/ITargets;)V
     121: areturn

  public de.sciss.lucre.expr.graph.Sys$Process$Impl copy(de.sciss.lucre.expr.graph.Ex<java.lang.String>, de.sciss.lucre.expr.graph.Ex<scala.collection.immutable.Seq<java.lang.String>>);
    Code:
       0: new           #2                  // class de/sciss/lucre/expr/graph/Sys$Process$Impl
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #429                // Method "<init>":(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;)V
       9: areturn

  public de.sciss.lucre.expr.graph.Ex<java.lang.String> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #239                // Method cmd:()Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex<scala.collection.immutable.Seq<java.lang.String>> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #243                // Method args:()Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex<java.lang.String> _1();
    Code:
       0: aload_0
       1: invokevirtual #239                // Method cmd:()Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.expr.graph.Ex<scala.collection.immutable.Seq<java.lang.String>> _2();
    Code:
       0: aload_0
       1: invokevirtual #243                // Method args:()Lde/sciss/lucre/expr/graph/Ex;
       4: areturn

  public de.sciss.lucre.Disposable mkRepr(de.sciss.lucre.expr.Context, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #433                // Method mkRepr:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/expr/graph/Sys$Process$Peer;
       6: areturn

  private final de.sciss.lucre.IExpr $anonfun$1(de.sciss.lucre.expr.Context$WithTxn, de.sciss.lucre.expr.graph.Ex);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #364                // Method de/sciss/lucre/expr/Context$WithTxn.ctx:()Lde/sciss/lucre/expr/Context;
       5: aload_1
       6: invokevirtual #361                // Method de/sciss/lucre/expr/Context$WithTxn.tx:()Lde/sciss/lucre/Txn;
       9: invokeinterface #413,  3          // InterfaceMethod de/sciss/lucre/expr/graph/Ex.expand:(Lde/sciss/lucre/expr/Context;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
      14: checkcast     #415                // class de/sciss/lucre/IExpr
      17: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #447,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
