Compiled from "Timeline.scala"
public final class de.sciss.lucre.expr.graph.Timeline$Ops$ implements java.io.Serializable {
  public static final de.sciss.lucre.expr.graph.Timeline$Ops$ MODULE$;

  public de.sciss.lucre.expr.graph.Timeline$Ops$();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class de/sciss/lucre/expr/graph/Timeline$Ops$
       3: dup
       4: invokespecial #57                 // Method "<init>":()V
       7: putstatic     #59                 // Field MODULE$:Lde/sciss/lucre/expr/graph/Timeline$Ops$;
      10: return

  private java.lang.Object writeReplace();
    Code:
       0: new           #63                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class de/sciss/lucre/expr/graph/Timeline$Ops$
       6: invokespecial #66                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public final int hashCode$extension(de.sciss.lucre.expr.graph.Ex);
    Code:
       0: aload_1
       1: invokeinterface #75,  1           // InterfaceMethod de/sciss/lucre/expr/graph/Ex.hashCode:()I
       6: ireturn

  public final boolean equals$extension(de.sciss.lucre.expr.graph.Ex, java.lang.Object);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #34                 // class de/sciss/lucre/expr/graph/Timeline$Ops
       6: ifeq          60
       9: aload_3
      10: ifnonnull     17
      13: aconst_null
      14: goto          24
      17: aload_3
      18: checkcast     #34                 // class de/sciss/lucre/expr/graph/Timeline$Ops
      21: invokevirtual #83                 // Method de/sciss/lucre/expr/graph/Timeline$Ops.de$sciss$lucre$expr$graph$Timeline$Ops$$tl:()Lde/sciss/lucre/expr/graph/Ex;
      24: astore        4
      26: aload_1
      27: aload         4
      29: astore        5
      31: dup
      32: ifnonnull     44
      35: pop
      36: aload         5
      38: ifnull        52
      41: goto          56
      44: aload         5
      46: invokevirtual #87                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: goto          64
      60: iconst_0
      61: goto          64
      64: ireturn

  public final <A> de.sciss.lucre.expr.graph.Act add$extension(de.sciss.lucre.expr.graph.Ex, de.sciss.lucre.expr.graph.Ex<de.sciss.span.SpanLike>, de.sciss.lucre.expr.graph.Ex<A>, de.sciss.lucre.expr.graph.Obj$Source<A>);
    Code:
       0: getstatic     #97                 // Field de/sciss/lucre/expr/graph/Timeline$Add$.MODULE$:Lde/sciss/lucre/expr/graph/Timeline$Add$;
       3: aload_1
       4: aload_2
       5: aload_3
       6: aload         4
       8: invokevirtual #101                // Method de/sciss/lucre/expr/graph/Timeline$Add$.apply:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Obj$Source;)Lde/sciss/lucre/expr/graph/Timeline$Add;
      11: areturn

  public final de.sciss.lucre.expr.graph.Act remove$extension(de.sciss.lucre.expr.graph.Ex, de.sciss.lucre.expr.graph.Ex<de.sciss.span.SpanLike>, de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Obj>);
    Code:
       0: getstatic     #108                // Field de/sciss/lucre/expr/graph/Timeline$Remove$.MODULE$:Lde/sciss/lucre/expr/graph/Timeline$Remove$;
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokevirtual #111                // Method de/sciss/lucre/expr/graph/Timeline$Remove$.apply:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Timeline$Remove;
       9: areturn

  public final de.sciss.lucre.expr.graph.Timeline$Split split$extension(de.sciss.lucre.expr.graph.Ex, de.sciss.lucre.expr.graph.Ex<de.sciss.span.SpanLike>, de.sciss.lucre.expr.graph.Ex<de.sciss.lucre.expr.graph.Obj>, de.sciss.lucre.expr.graph.Ex<java.lang.Object>);
    Code:
       0: getstatic     #118                // Field de/sciss/lucre/expr/graph/Timeline$Split$.MODULE$:Lde/sciss/lucre/expr/graph/Timeline$Split$;
       3: aload_1
       4: aload_2
       5: aload_3
       6: aload         4
       8: invokevirtual #120                // Method de/sciss/lucre/expr/graph/Timeline$Split$.apply:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Timeline$Split;
      11: areturn

  public final <A> de.sciss.lucre.expr.graph.Act addAll$extension(de.sciss.lucre.expr.graph.Ex, de.sciss.lucre.expr.graph.Ex<scala.collection.immutable.Seq<scala.Tuple2<de.sciss.span.SpanLike, A>>>, de.sciss.lucre.expr.graph.Obj$Source<A>);
    Code:
       0: getstatic     #127                // Field de/sciss/lucre/expr/graph/Timeline$AddAll$.MODULE$:Lde/sciss/lucre/expr/graph/Timeline$AddAll$;
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokevirtual #130                // Method de/sciss/lucre/expr/graph/Timeline$AddAll$.apply:(Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Ex;Lde/sciss/lucre/expr/graph/Obj$Source;)Lde/sciss/lucre/expr/graph/Timeline$AddAll;
       9: areturn

  public final de.sciss.lucre.expr.graph.Ex<scala.collection.immutable.Seq<de.sciss.lucre.expr.graph.Timed<de.sciss.lucre.expr.graph.Obj>>> children$extension(de.sciss.lucre.expr.graph.Ex);
    Code:
       0: getstatic     #136                // Field de/sciss/lucre/expr/graph/Timeline$Children$.MODULE$:Lde/sciss/lucre/expr/graph/Timeline$Children$;
       3: aload_1
       4: invokevirtual #139                // Method de/sciss/lucre/expr/graph/Timeline$Children$.apply:(Lde/sciss/lucre/expr/graph/Ex;)Lde/sciss/lucre/expr/graph/Timeline$Children;
       7: areturn
}
