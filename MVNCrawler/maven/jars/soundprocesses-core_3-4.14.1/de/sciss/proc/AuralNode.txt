Compiled from "AuralNode.scala"
public interface de.sciss.proc.AuralNode<T extends de.sciss.lucre.Txn<T>> extends de.sciss.lucre.synth.NodeRef, de.sciss.lucre.Disposable<T> {
  public static <T extends de.sciss.lucre.synth.Txn<T>> de.sciss.proc.AuralNode$Builder<T> apply(de.sciss.proc.TimeRef, long, de.sciss.synth.NestedUGenGraphBuilder$Result, de.sciss.lucre.synth.Server, scala.Option<java.lang.String>, de.sciss.lucre.synth.RT);
    Code:
       0: getstatic     #27                 // Field de/sciss/proc/AuralNode$.MODULE$:Lde/sciss/proc/AuralNode$;
       3: aload_0
       4: lload_1
       5: aload_3
       6: aload         4
       8: aload         5
      10: aload         6
      12: invokevirtual #29                 // Method de/sciss/proc/AuralNode$.apply:(Lde/sciss/proc/TimeRef;JLde/sciss/synth/NestedUGenGraphBuilder$Result;Lde/sciss/lucre/synth/Server;Lscala/Option;Lde/sciss/lucre/synth/RT;)Lde/sciss/proc/AuralNode$Builder;
      15: areturn

  public abstract de.sciss.proc.TimeRef timeRef();

  public abstract de.sciss.proc.TimeRef shiftTo(long);

  public abstract scala.Option<de.sciss.lucre.synth.Group> groupOption(de.sciss.lucre.synth.RT);

  public abstract de.sciss.lucre.synth.Group group(T);

  public abstract de.sciss.lucre.synth.Synth synth();

  public abstract void group_$eq(de.sciss.lucre.synth.Group, T);

  public abstract de.sciss.lucre.synth.Group preGroup(T);

  public abstract void addUser(de.sciss.lucre.synth.DynamicUser, de.sciss.lucre.synth.RT);

  public abstract void removeUser(de.sciss.lucre.synth.DynamicUser, de.sciss.lucre.synth.RT);

  public abstract void addResource(de.sciss.lucre.synth.Resource, de.sciss.lucre.synth.RT);

  public abstract void removeResource(de.sciss.lucre.synth.Resource, de.sciss.lucre.synth.RT);

  public abstract void addDisposable(de.sciss.lucre.Disposable<T>, T);

  public abstract void addControl(de.sciss.synth.ControlSet, T);
}
