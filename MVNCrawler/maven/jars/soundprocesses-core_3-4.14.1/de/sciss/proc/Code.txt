Compiled from "Code.scala"
public interface de.sciss.proc.Code extends scala.Product,de.sciss.serial.Writable {
  public static final long OFFSET$_m_0;

  public static java.lang.String UserPackage();
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: invokevirtual #78                 // Method de/sciss/proc/Code$.UserPackage:()Ljava/lang/String;
       6: areturn

  public static void addType(de.sciss.proc.Code$Type);
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: aload_0
       4: invokevirtual #82                 // Method de/sciss/proc/Code$.addType:(Lde/sciss/proc/Code$Type;)V
       7: return

  public static de.sciss.proc.Code apply(int, java.lang.String);
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: iload_0
       4: aload_1
       5: invokevirtual #86                 // Method de/sciss/proc/Code$.apply:(ILjava/lang/String;)Lde/sciss/proc/Code;
       8: areturn

  public static java.lang.String attrSource();
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: invokevirtual #89                 // Method de/sciss/proc/Code$.attrSource:()Ljava/lang/String;
       6: areturn

  public static de.sciss.serial.ConstFormat<de.sciss.proc.Code> format();
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: invokevirtual #94                 // Method de/sciss/proc/Code$.format:()Lde/sciss/serial/ConstFormat;
       6: areturn

  public static java.lang.String fullPrelude(de.sciss.proc.Code);
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: aload_0
       4: invokevirtual #98                 // Method de/sciss/proc/Code$.fullPrelude:(Lde/sciss/proc/Code;)Ljava/lang/String;
       7: areturn

  public static <A> scala.concurrent.Future<A> future(scala.Function0<A>, de.sciss.proc.Code$Compiler);
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: aload_0
       4: aload_1
       5: invokevirtual #103                // Method de/sciss/proc/Code$.future:(Lscala/Function0;Lde/sciss/proc/Code$Compiler;)Lscala/concurrent/Future;
       8: areturn

  public static scala.collection.immutable.IndexedSeq<de.sciss.proc.Code$Import> getImports(int);
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: iload_0
       4: invokevirtual #108                // Method de/sciss/proc/Code$.getImports:(I)Lscala/collection/immutable/IndexedSeq;
       7: areturn

  public static de.sciss.proc.Code$Type getType(int);
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: iload_0
       4: invokevirtual #112                // Method de/sciss/proc/Code$.getType:(I)Lde/sciss/proc/Code$Type;
       7: areturn

  public static java.lang.String importsPrelude(de.sciss.proc.Code, int);
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: aload_0
       4: iload_1
       5: invokevirtual #116                // Method de/sciss/proc/Code$.importsPrelude:(Lde/sciss/proc/Code;I)Ljava/lang/String;
       8: areturn

  public static void init();
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: invokevirtual #120                // Method de/sciss/proc/Code$.init:()V
       6: return

  public static java.lang.String packagePrelude();
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: invokevirtual #123                // Method de/sciss/proc/Code$.packagePrelude:()Ljava/lang/String;
       6: areturn

  public static de.sciss.proc.Code read(de.sciss.serial.DataInput);
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: aload_0
       4: invokevirtual #127                // Method de/sciss/proc/Code$.read:(Lde/sciss/serial/DataInput;)Lde/sciss/proc/Code;
       7: areturn

  public static void registerImports(int, scala.collection.immutable.Seq<de.sciss.proc.Code$Import>);
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: iload_0
       4: aload_1
       5: invokevirtual #132                // Method de/sciss/proc/Code$.registerImports:(ILscala/collection/immutable/Seq;)V
       8: return

  public static int typeId();
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: invokevirtual #136                // Method de/sciss/proc/Code$.typeId:()I
       6: ireturn

  public static scala.collection.immutable.Seq<de.sciss.proc.Code$Type> types();
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: invokevirtual #141                // Method de/sciss/proc/Code$.types:()Lscala/collection/immutable/Seq;
       6: areturn

  public static scala.collection.immutable.Map<java.lang.String, byte[]> unpackJar(byte[]);
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: aload_0
       4: invokevirtual #146                // Method de/sciss/proc/Code$.unpackJar:([B)Lscala/collection/immutable/Map;
       7: areturn

  public static int importsPrelude$default$2();
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: invokevirtual #149                // Method de/sciss/proc/Code$.importsPrelude$default$2:()I
       6: ireturn

  private static {};
    Code:
       0: getstatic     #155                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #72                 // class de/sciss/proc/Code$
       5: ldc           #157                // String 0bitmap$1
       7: invokevirtual #161                // Method scala/runtime/LazyVals$.getOffset:(Ljava/lang/Class;Ljava/lang/String;)J
      10: putstatic     #163                // Field OFFSET$_m_0:J
      13: return

  public abstract de.sciss.proc.Code$Type tpe();

  public abstract java.lang.String source();

  public abstract de.sciss.proc.Code updateSource(java.lang.String);

  public abstract java.lang.String prelude();

  public abstract java.lang.String postlude();

  public abstract scala.concurrent.Future<scala.runtime.BoxedUnit> compileBody(de.sciss.proc.Code$Compiler);

  public abstract java.lang.Object execute(java.lang.Object, de.sciss.proc.Code$Compiler);

  public static void write$(de.sciss.proc.Code, de.sciss.serial.DataOutput);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #186                // InterfaceMethod write:(Lde/sciss/serial/DataOutput;)V
       5: return

  public default void write(de.sciss.serial.DataOutput);
    Code:
       0: getstatic     #76                 // Field de/sciss/proc/Code$.MODULE$:Lde/sciss/proc/Code$;
       3: invokevirtual #94                 // Method de/sciss/proc/Code$.format:()Lde/sciss/serial/ConstFormat;
       6: aload_0
       7: aload_1
       8: invokeinterface #193,  3          // InterfaceMethod de/sciss/serial/ConstFormat.write:(Ljava/lang/Object;Lde/sciss/serial/DataOutput;)V
      13: return
}
