Compiled from "Warp.scala"
public final class de.sciss.proc.Warp$Parametric implements de.sciss.proc.Warp,scala.Product,java.io.Serializable {
  private final double curvature;

  private final boolean useLin;

  private final double grow;

  public static de.sciss.proc.Warp$Parametric apply(double);
    Code:
       0: getstatic     #29                 // Field de/sciss/proc/Warp$Parametric$.MODULE$:Lde/sciss/proc/Warp$Parametric$;
       3: dload_0
       4: invokevirtual #31                 // Method de/sciss/proc/Warp$Parametric$.apply:(D)Lde/sciss/proc/Warp$Parametric;
       7: areturn

  public static de.sciss.proc.Warp$Parametric fromProduct(scala.Product);
    Code:
       0: getstatic     #29                 // Field de/sciss/proc/Warp$Parametric$.MODULE$:Lde/sciss/proc/Warp$Parametric$;
       3: aload_0
       4: invokevirtual #35                 // Method de/sciss/proc/Warp$Parametric$.fromProduct:(Lscala/Product;)Lde/sciss/proc/Warp$Parametric;
       7: areturn

  public static de.sciss.proc.Warp$Parametric unapply(de.sciss.proc.Warp$Parametric);
    Code:
       0: getstatic     #29                 // Field de/sciss/proc/Warp$Parametric$.MODULE$:Lde/sciss/proc/Warp$Parametric$;
       3: aload_0
       4: invokevirtual #39                 // Method de/sciss/proc/Warp$Parametric$.unapply:(Lde/sciss/proc/Warp$Parametric;)Lde/sciss/proc/Warp$Parametric;
       7: areturn

  public de.sciss.proc.Warp$Parametric(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #43                 // Field curvature:D
       5: aload_0
       6: invokespecial #46                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: getstatic     #51                 // Field scala/runtime/RichDouble$.MODULE$:Lscala/runtime/RichDouble$;
      13: getstatic     #56                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      16: dload_1
      17: invokevirtual #60                 // Method scala/Predef$.doubleWrapper:(D)D
      20: invokevirtual #63                 // Method scala/runtime/RichDouble$.abs$extension:(D)D
      23: ldc2_w        #64                 // double 0.001d
      26: dcmpg
      27: ifge          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: putfield      #67                 // Field useLin:Z
      38: aload_0
      39: getstatic     #72                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
      42: dload_1
      43: invokevirtual #75                 // Method scala/math/package$.exp:(D)D
      46: putfield      #77                 // Field grow:D
      49: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #85                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #89                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public int hashCode();
    Code:
       0: ldc           #92                 // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #96                 // Method productPrefix:()Ljava/lang/String;
       8: invokevirtual #100                // Method java/lang/String.hashCode:()I
      11: invokestatic  #106                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #109                // Method curvature:()D
      20: invokestatic  #113                // Method scala/runtime/Statics.doubleHash:(D)I
      23: invokestatic  #106                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: iconst_1
      29: invokestatic  #116                // Method scala/runtime/Statics.finalizeHash:(II)I
      32: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     46
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class de/sciss/proc/Warp$Parametric
      11: ifeq          39
      14: aload_2
      15: checkcast     #2                  // class de/sciss/proc/Warp$Parametric
      18: astore_3
      19: aload_0
      20: invokevirtual #109                // Method curvature:()D
      23: aload_3
      24: invokevirtual #109                // Method curvature:()D
      27: dcmpl
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: goto          43
      39: iconst_0
      40: goto          43
      43: ifeq          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #130                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class de/sciss/proc/Warp$Parametric
       4: ireturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #134                // String Parametric
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     14
       7: aload_0
       8: invokevirtual #140                // Method _1:()D
      11: goto          29
      14: new           #142                // class java/lang/IndexOutOfBoundsException
      17: dup
      18: iload_1
      19: invokestatic  #148                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      22: invokevirtual #152                // Method java/lang/Integer.toString:()Ljava/lang/String;
      25: invokespecial #155                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: invokestatic  #159                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      32: areturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     12
       7: ldc           #163                // String curvature
       9: goto          27
      12: new           #142                // class java/lang/IndexOutOfBoundsException
      15: dup
      16: iload_1
      17: invokestatic  #148                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      20: invokevirtual #152                // Method java/lang/Integer.toString:()Ljava/lang/String;
      23: invokespecial #155                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: areturn

  public double curvature();
    Code:
       0: aload_0
       1: getfield      #43                 // Field curvature:D
       4: dreturn

  public int id();
    Code:
       0: iconst_2
       1: ireturn

  public double map(de.sciss.proc.ParamSpec, double);
    Code:
       0: aload_0
       1: getfield      #67                 // Field useLin:Z
       4: ifeq          18
       7: getstatic     #171                // Field de/sciss/proc/Warp$Linear$.MODULE$:Lde/sciss/proc/Warp$Linear$;
      10: aload_1
      11: dload_2
      12: invokevirtual #173                // Method de/sciss/proc/Warp$Linear$.map:(Lde/sciss/proc/ParamSpec;D)D
      15: goto          67
      18: aload_1
      19: invokevirtual #178                // Method de/sciss/proc/ParamSpec.range:()D
      22: dconst_1
      23: aload_0
      24: getfield      #77                 // Field grow:D
      27: dsub
      28: ddiv
      29: dstore        4
      31: aload_1
      32: invokevirtual #181                // Method de/sciss/proc/ParamSpec.lo:()D
      35: dload         4
      37: dadd
      38: dstore        6
      40: dload         6
      42: dload         4
      44: new           #183                // class de/sciss/numbers/RichDouble
      47: dup
      48: getstatic     #188                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      51: aload_0
      52: getfield      #77                 // Field grow:D
      55: invokevirtual #191                // Method de/sciss/synth/Import$.doubleNumberWrapper:(D)D
      58: invokespecial #193                // Method de/sciss/numbers/RichDouble."<init>":(D)V
      61: dload_2
      62: invokevirtual #196                // Method de/sciss/numbers/RichDouble.pow:(D)D
      65: dmul
      66: dsub
      67: dreturn

  public de.sciss.synth.GE map(de.sciss.proc.ParamSpec, de.sciss.synth.GE);
    Code:
       0: aload_0
       1: getfield      #67                 // Field useLin:Z
       4: ifeq          18
       7: getstatic     #171                // Field de/sciss/proc/Warp$Linear$.MODULE$:Lde/sciss/proc/Warp$Linear$;
      10: aload_1
      11: aload_2
      12: invokevirtual #202                // Method de/sciss/proc/Warp$Linear$.map:(Lde/sciss/proc/ParamSpec;Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      15: goto          94
      18: aload_1
      19: invokevirtual #178                // Method de/sciss/proc/ParamSpec.range:()D
      22: dconst_1
      23: aload_0
      24: getfield      #77                 // Field grow:D
      27: dsub
      28: ddiv
      29: dstore_3
      30: aload_1
      31: invokevirtual #181                // Method de/sciss/proc/ParamSpec.lo:()D
      34: dload_3
      35: dadd
      36: dstore        5
      38: new           #204                // class de/sciss/synth/RichDouble
      41: dup
      42: getstatic     #188                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      45: dload         5
      47: invokevirtual #207                // Method de/sciss/synth/Import$.doubleGEWrapper:(D)D
      50: invokespecial #208                // Method de/sciss/synth/RichDouble."<init>":(D)V
      53: new           #204                // class de/sciss/synth/RichDouble
      56: dup
      57: getstatic     #188                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      60: dload_3
      61: invokevirtual #207                // Method de/sciss/synth/Import$.doubleGEWrapper:(D)D
      64: invokespecial #208                // Method de/sciss/synth/RichDouble."<init>":(D)V
      67: new           #204                // class de/sciss/synth/RichDouble
      70: dup
      71: getstatic     #188                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      74: aload_0
      75: getfield      #77                 // Field grow:D
      78: invokevirtual #207                // Method de/sciss/synth/Import$.doubleGEWrapper:(D)D
      81: invokespecial #208                // Method de/sciss/synth/RichDouble."<init>":(D)V
      84: aload_2
      85: invokevirtual #211                // Method de/sciss/synth/RichDouble.pow:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      88: invokevirtual #214                // Method de/sciss/synth/RichDouble.$times:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      91: invokevirtual #217                // Method de/sciss/synth/RichDouble.$minus:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      94: areturn

  public double inverseMap(de.sciss.proc.ParamSpec, double);
    Code:
       0: aload_0
       1: getfield      #67                 // Field useLin:Z
       4: ifeq          18
       7: getstatic     #171                // Field de/sciss/proc/Warp$Linear$.MODULE$:Lde/sciss/proc/Warp$Linear$;
      10: aload_1
      11: dload_2
      12: invokevirtual #223                // Method de/sciss/proc/Warp$Linear$.inverseMap:(Lde/sciss/proc/ParamSpec;D)D
      15: goto          64
      18: aload_1
      19: invokevirtual #178                // Method de/sciss/proc/ParamSpec.range:()D
      22: dconst_1
      23: aload_0
      24: getfield      #77                 // Field grow:D
      27: dsub
      28: ddiv
      29: dstore        4
      31: aload_1
      32: invokevirtual #181                // Method de/sciss/proc/ParamSpec.lo:()D
      35: dload         4
      37: dadd
      38: dstore        6
      40: getstatic     #228                // Field de/sciss/numbers/RichDouble$.MODULE$:Lde/sciss/numbers/RichDouble$;
      43: getstatic     #188                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      46: dload         6
      48: dload_2
      49: dsub
      50: dload         4
      52: ddiv
      53: invokevirtual #191                // Method de/sciss/synth/Import$.doubleNumberWrapper:(D)D
      56: invokevirtual #231                // Method de/sciss/numbers/RichDouble$.log$extension:(D)D
      59: aload_0
      60: invokevirtual #109                // Method curvature:()D
      63: ddiv
      64: dreturn

  public de.sciss.synth.GE inverseMap(de.sciss.proc.ParamSpec, de.sciss.synth.GE);
    Code:
       0: aload_0
       1: getfield      #67                 // Field useLin:Z
       4: ifeq          18
       7: getstatic     #171                // Field de/sciss/proc/Warp$Linear$.MODULE$:Lde/sciss/proc/Warp$Linear$;
      10: aload_1
      11: aload_2
      12: invokevirtual #233                // Method de/sciss/proc/Warp$Linear$.inverseMap:(Lde/sciss/proc/ParamSpec;Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      15: goto          110
      18: aload_1
      19: invokevirtual #178                // Method de/sciss/proc/ParamSpec.range:()D
      22: dconst_1
      23: aload_0
      24: getfield      #77                 // Field grow:D
      27: dsub
      28: ddiv
      29: dstore_3
      30: aload_1
      31: invokevirtual #181                // Method de/sciss/proc/ParamSpec.lo:()D
      34: dload_3
      35: dadd
      36: dstore        5
      38: getstatic     #238                // Field de/sciss/synth/GEOps$.MODULE$:Lde/sciss/synth/GEOps$;
      41: getstatic     #188                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      44: getstatic     #238                // Field de/sciss/synth/GEOps$.MODULE$:Lde/sciss/synth/GEOps$;
      47: getstatic     #188                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      50: getstatic     #238                // Field de/sciss/synth/GEOps$.MODULE$:Lde/sciss/synth/GEOps$;
      53: getstatic     #188                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      56: new           #204                // class de/sciss/synth/RichDouble
      59: dup
      60: getstatic     #188                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      63: dload         5
      65: invokevirtual #207                // Method de/sciss/synth/Import$.doubleGEWrapper:(D)D
      68: invokespecial #208                // Method de/sciss/synth/RichDouble."<init>":(D)V
      71: aload_2
      72: invokevirtual #217                // Method de/sciss/synth/RichDouble.$minus:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      75: invokevirtual #241                // Method de/sciss/synth/Import$.geOps:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      78: getstatic     #246                // Field de/sciss/synth/GE$.MODULE$:Lde/sciss/synth/GE$;
      81: dload_3
      82: invokevirtual #250                // Method de/sciss/synth/GE$.const:(D)Lde/sciss/synth/ugen/Constant;
      85: invokevirtual #254                // Method de/sciss/synth/GEOps$.$div$extension:(Lde/sciss/synth/GE;Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      88: invokevirtual #241                // Method de/sciss/synth/Import$.geOps:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      91: invokevirtual #256                // Method de/sciss/synth/GEOps$.log$extension:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      94: invokevirtual #241                // Method de/sciss/synth/Import$.geOps:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      97: getstatic     #246                // Field de/sciss/synth/GE$.MODULE$:Lde/sciss/synth/GE$;
     100: aload_0
     101: invokevirtual #109                // Method curvature:()D
     104: invokevirtual #250                // Method de/sciss/synth/GE$.const:(D)Lde/sciss/synth/ugen/Constant;
     107: invokevirtual #254                // Method de/sciss/synth/GEOps$.$div$extension:(Lde/sciss/synth/GE;Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
     110: areturn

  public void write(de.sciss.serial.DataOutput);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #261                // Method id:()I
       5: invokeinterface #267,  2          // InterfaceMethod de/sciss/serial/DataOutput.writeShort:(I)V
      10: aload_1
      11: aload_0
      12: invokevirtual #109                // Method curvature:()D
      15: invokeinterface #270,  3          // InterfaceMethod de/sciss/serial/DataOutput.writeDouble:(D)V
      20: return

  public de.sciss.proc.Warp$Parametric copy(double);
    Code:
       0: new           #2                  // class de/sciss/proc/Warp$Parametric
       3: dup
       4: dload_1
       5: invokespecial #273                // Method "<init>":(D)V
       8: areturn

  public double copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #109                // Method curvature:()D
       4: dreturn

  public double _1();
    Code:
       0: aload_0
       1: invokevirtual #109                // Method curvature:()D
       4: dreturn
}
