Compiled from "Cursors.scala"
public interface de.sciss.proc.Cursors<T extends de.sciss.lucre.confluent.Txn<T>, D extends de.sciss.lucre.Txn<D>> extends de.sciss.lucre.Elem<D> {
  public static final long OFFSET$_m_0;

  public static <T extends de.sciss.lucre.confluent.Txn<T>, D1 extends de.sciss.lucre.Txn<D1>> de.sciss.proc.Cursors<T, D1> apply(de.sciss.lucre.confluent.Access<T>, D1);
    Code:
       0: getstatic     #57                 // Field de/sciss/proc/Cursors$.MODULE$:Lde/sciss/proc/Cursors$;
       3: aload_0
       4: aload_1
       5: invokevirtual #59                 // Method de/sciss/proc/Cursors$.apply:(Lde/sciss/lucre/confluent/Access;Lde/sciss/lucre/Txn;)Lde/sciss/proc/Cursors;
       8: areturn

  public static <T extends de.sciss.lucre.confluent.Txn<T>, D1 extends de.sciss.lucre.Txn<D1>> de.sciss.serial.TFormat<D1, de.sciss.proc.Cursors<T, D1>> format();
    Code:
       0: getstatic     #57                 // Field de/sciss/proc/Cursors$.MODULE$:Lde/sciss/proc/Cursors$;
       3: invokevirtual #64                 // Method de/sciss/proc/Cursors$.format:()Lde/sciss/serial/TFormat;
       6: areturn

  public static void init();
    Code:
       0: getstatic     #57                 // Field de/sciss/proc/Cursors$.MODULE$:Lde/sciss/proc/Cursors$;
       3: invokevirtual #68                 // Method de/sciss/proc/Cursors$.init:()V
       6: return

  public static <T extends de.sciss.lucre.Txn<T>> de.sciss.lucre.Elem<T> readIdentifiedObj(de.sciss.serial.DataInput, T);
    Code:
       0: getstatic     #57                 // Field de/sciss/proc/Cursors$.MODULE$:Lde/sciss/proc/Cursors$;
       3: aload_0
       4: aload_1
       5: invokevirtual #73                 // Method de/sciss/proc/Cursors$.readIdentifiedObj:(Lde/sciss/serial/DataInput;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Elem;
       8: areturn

  public static <T extends de.sciss.lucre.Txn<T>> de.sciss.lucre.Elem<T> readObj(de.sciss.serial.DataInput, T);
    Code:
       0: getstatic     #57                 // Field de/sciss/proc/Cursors$.MODULE$:Lde/sciss/proc/Cursors$;
       3: aload_0
       4: aload_1
       5: invokevirtual #76                 // Method de/sciss/proc/Cursors$.readObj:(Lde/sciss/serial/DataInput;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Elem;
       8: areturn

  public static int typeId();
    Code:
       0: getstatic     #57                 // Field de/sciss/proc/Cursors$.MODULE$:Lde/sciss/proc/Cursors$;
       3: invokevirtual #80                 // Method de/sciss/proc/Cursors$.typeId:()I
       6: ireturn

  private static {};
    Code:
       0: getstatic     #86                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #53                 // class de/sciss/proc/Cursors$
       5: ldc           #88                 // String 0bitmap$1
       7: invokevirtual #92                 // Method scala/runtime/LazyVals$.getOffset:(Ljava/lang/Class;Ljava/lang/String;)J
      10: putstatic     #94                 // Field OFFSET$_m_0:J
      13: return

  public abstract de.sciss.lucre.confluent.Access<T> seminal();

  public abstract de.sciss.lucre.confluent.Cursor$Data<T, D> cursor();

  public abstract de.sciss.lucre.StringObj<D> name(D);

  public abstract void name_$eq(de.sciss.lucre.StringObj<D>, D);

  public abstract scala.collection.Iterator<de.sciss.proc.Cursors<T, D>> descendants(D);

  public abstract de.sciss.proc.Cursors<T, D> addChild(de.sciss.lucre.confluent.Access<T>, D);

  public abstract void removeChild(de.sciss.proc.Cursors<T, D>, D);

  public abstract de.sciss.lucre.EventLike<D, de.sciss.proc.Cursors$Update<T, D>> changed();
}
