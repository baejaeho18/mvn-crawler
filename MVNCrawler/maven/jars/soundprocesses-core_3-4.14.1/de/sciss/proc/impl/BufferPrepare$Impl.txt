Compiled from "BufferPrepare.scala"
abstract class de.sciss.proc.impl.BufferPrepare$Impl<T extends de.sciss.lucre.synth.Txn<T>, Next> implements de.sciss.proc.impl.BufferPrepare<T>, de.sciss.processor.impl.ProcessorBase<scala.runtime.BoxedUnit, de.sciss.proc.impl.AsyncResource<T>> {
  private java.lang.Object de$sciss$model$impl$ModelImpl$$sync;

  private volatile scala.collection.immutable.Vector de$sciss$model$impl$ModelImpl$$listeners;

  private scala.concurrent.ExecutionContext de$sciss$processor$impl$ProcessorBase$$_context;

  private volatile boolean de$sciss$processor$impl$ProcessorBase$$_aborted;

  private volatile double de$sciss$processor$impl$ProcessorBase$$_progress;

  private volatile int de$sciss$processor$impl$ProcessorBase$$_lastProg;

  private de.sciss.processor.ProcessorLike child;

  private scala.concurrent.Promise promise;

  private int progressResolution;

  private final scala.concurrent.stm.Ref<java.lang.Object> offsetRef;

  private final long numFrames;

  private final scala.concurrent.stm.Ref<java.lang.Object> installed;

  public de.sciss.proc.impl.BufferPrepare$Impl();
    Code:
       0: aload_0
       1: invokespecial #64                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #68                 // InterfaceMethod scala/concurrent/Future.$init$:(Lscala/concurrent/Future;)V
       8: aload_0
       9: invokestatic  #71                 // InterfaceMethod de/sciss/model/impl/ModelImpl.$init$:(Lde/sciss/model/impl/ModelImpl;)V
      12: aload_0
      13: invokestatic  #74                 // InterfaceMethod de/sciss/processor/impl/ProcessorBase.$init$:(Lde/sciss/processor/impl/ProcessorBase;)V
      16: aload_0
      17: getstatic     #80                 // Field scala/concurrent/stm/Ref$.MODULE$:Lscala/concurrent/stm/Ref$;
      20: iconst_0
      21: invokevirtual #84                 // Method scala/concurrent/stm/Ref$.apply:(I)Lscala/concurrent/stm/Ref;
      24: putfield      #86                 // Field offsetRef:Lscala/concurrent/stm/Ref;
      27: aload_0
      28: aload_0
      29: invokevirtual #90                 // Method config:()Lde/sciss/proc/impl/BufferPrepare$Config;
      32: invokevirtual #94                 // Method de/sciss/proc/impl/BufferPrepare$Config.spec:()Lde/sciss/audiofile/AudioFileSpec;
      35: invokevirtual #99                 // Method de/sciss/audiofile/AudioFileSpec.numFrames:()J
      38: putfield      #101                // Field numFrames:J
      41: aload_0
      42: getstatic     #80                 // Field scala/concurrent/stm/Ref$.MODULE$:Lscala/concurrent/stm/Ref$;
      45: iconst_0
      46: invokevirtual #104                // Method scala/concurrent/stm/Ref$.apply:(Z)Lscala/concurrent/stm/Ref;
      49: putfield      #106                // Field installed:Lscala/concurrent/stm/Ref;
      52: invokestatic  #111                // Method scala/runtime/Statics.releaseFence:()V
      55: return

  public scala.concurrent.Future failed();
    Code:
       0: aload_0
       1: invokestatic  #119                // InterfaceMethod scala/concurrent/Future.failed$:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       4: areturn

  public void foreach(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #127                // InterfaceMethod scala/concurrent/Future.foreach$:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
       6: return

  public scala.concurrent.Future transform(scala.Function1, scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #135                // InterfaceMethod scala/concurrent/Future.transform$:(Lscala/concurrent/Future;Lscala/Function1;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       7: areturn

  public scala.concurrent.Future map(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #141                // InterfaceMethod scala/concurrent/Future.map$:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future flatMap(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #145                // InterfaceMethod scala/concurrent/Future.flatMap$:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future flatten(scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #152                // InterfaceMethod scala/concurrent/Future.flatten$:(Lscala/concurrent/Future;Lscala/$less$colon$less;)Lscala/concurrent/Future;
       5: areturn

  public scala.concurrent.Future filter(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #158                // InterfaceMethod scala/concurrent/Future.filter$:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future withFilter(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #162                // InterfaceMethod scala/concurrent/Future.withFilter$:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future collect(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #169                // InterfaceMethod scala/concurrent/Future.collect$:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future recover(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #174                // InterfaceMethod scala/concurrent/Future.recover$:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future recoverWith(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #178                // InterfaceMethod scala/concurrent/Future.recoverWith$:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future zip(scala.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #184                // InterfaceMethod scala/concurrent/Future.zip$:(Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
       5: areturn

  public scala.concurrent.Future zipWith(scala.concurrent.Future, scala.Function2, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #191                // InterfaceMethod scala/concurrent/Future.zipWith$:(Lscala/concurrent/Future;Lscala/concurrent/Future;Lscala/Function2;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       7: areturn

  public scala.concurrent.Future fallbackTo(scala.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #196                // InterfaceMethod scala/concurrent/Future.fallbackTo$:(Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
       5: areturn

  public scala.concurrent.Future mapTo(scala.reflect.ClassTag);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #203                // InterfaceMethod scala/concurrent/Future.mapTo$:(Lscala/concurrent/Future;Lscala/reflect/ClassTag;)Lscala/concurrent/Future;
       5: areturn

  public scala.concurrent.Future andThen(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #208                // InterfaceMethod scala/concurrent/Future.andThen$:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public java.lang.Object de$sciss$model$impl$ModelImpl$$sync();
    Code:
       0: aload_0
       1: getfield      #211                // Field de$sciss$model$impl$ModelImpl$$sync:Ljava/lang/Object;
       4: areturn

  public scala.collection.immutable.Vector de$sciss$model$impl$ModelImpl$$listeners();
    Code:
       0: aload_0
       1: getfield      #214                // Field de$sciss$model$impl$ModelImpl$$listeners:Lscala/collection/immutable/Vector;
       4: areturn

  public void de$sciss$model$impl$ModelImpl$$listeners_$eq(scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #214                // Field de$sciss$model$impl$ModelImpl$$listeners:Lscala/collection/immutable/Vector;
       5: return

  public void de$sciss$model$impl$ModelImpl$_setter_$de$sciss$model$impl$ModelImpl$$sync_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #211                // Field de$sciss$model$impl$ModelImpl$$sync:Ljava/lang/Object;
       5: return

  public void releaseListeners();
    Code:
       0: aload_0
       1: invokestatic  #224                // InterfaceMethod de/sciss/model/impl/ModelImpl.releaseListeners$:(Lde/sciss/model/impl/ModelImpl;)V
       4: return

  public void dispatch(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #230                // InterfaceMethod de/sciss/model/impl/ModelImpl.dispatch$:(Lde/sciss/model/impl/ModelImpl;Ljava/lang/Object;)V
       5: return

  public void startListening();
    Code:
       0: aload_0
       1: invokestatic  #234                // InterfaceMethod de/sciss/model/impl/ModelImpl.startListening$:(Lde/sciss/model/impl/ModelImpl;)V
       4: return

  public void stopListening();
    Code:
       0: aload_0
       1: invokestatic  #238                // InterfaceMethod de/sciss/model/impl/ModelImpl.stopListening$:(Lde/sciss/model/impl/ModelImpl;)V
       4: return

  public scala.PartialFunction addListener(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #244                // InterfaceMethod de/sciss/model/impl/ModelImpl.addListener$:(Lde/sciss/model/impl/ModelImpl;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public void removeListener(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #250                // InterfaceMethod de/sciss/model/impl/ModelImpl.removeListener$:(Lde/sciss/model/impl/ModelImpl;Lscala/PartialFunction;)V
       5: return

  public scala.Option value();
    Code:
       0: aload_0
       1: invokestatic  #256                // InterfaceMethod de/sciss/processor/impl/FutureProxy.value$:(Lde/sciss/processor/impl/FutureProxy;)Lscala/Option;
       4: areturn

  public boolean isCompleted();
    Code:
       0: aload_0
       1: invokestatic  #262                // InterfaceMethod de/sciss/processor/impl/FutureProxy.isCompleted$:(Lde/sciss/processor/impl/FutureProxy;)Z
       4: ireturn

  public void onComplete(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #268                // InterfaceMethod de/sciss/processor/impl/FutureProxy.onComplete$:(Lde/sciss/processor/impl/FutureProxy;Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
       6: return

  public de.sciss.processor.impl.FutureProxy ready(scala.concurrent.duration.Duration, scala.concurrent.CanAwait);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #276                // InterfaceMethod de/sciss/processor/impl/FutureProxy.ready$:(Lde/sciss/processor/impl/FutureProxy;Lscala/concurrent/duration/Duration;Lscala/concurrent/CanAwait;)Lde/sciss/processor/impl/FutureProxy;
       6: areturn

  public java.lang.Object result(scala.concurrent.duration.Duration, scala.concurrent.CanAwait);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #284                // InterfaceMethod de/sciss/processor/impl/FutureProxy.result$:(Lde/sciss/processor/impl/FutureProxy;Lscala/concurrent/duration/Duration;Lscala/concurrent/CanAwait;)Ljava/lang/Object;
       6: areturn

  public scala.concurrent.Future transform(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #287                // InterfaceMethod de/sciss/processor/impl/FutureProxy.transform$:(Lde/sciss/processor/impl/FutureProxy;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future transformWith(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #291                // InterfaceMethod de/sciss/processor/impl/FutureProxy.transformWith$:(Lde/sciss/processor/impl/FutureProxy;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.ExecutionContext de$sciss$processor$impl$ProcessorBase$$_context();
    Code:
       0: aload_0
       1: getfield      #294                // Field de$sciss$processor$impl$ProcessorBase$$_context:Lscala/concurrent/ExecutionContext;
       4: areturn

  public boolean de$sciss$processor$impl$ProcessorBase$$_aborted();
    Code:
       0: aload_0
       1: getfield      #296                // Field de$sciss$processor$impl$ProcessorBase$$_aborted:Z
       4: ireturn

  public double de$sciss$processor$impl$ProcessorBase$$_progress();
    Code:
       0: aload_0
       1: getfield      #299                // Field de$sciss$processor$impl$ProcessorBase$$_progress:D
       4: dreturn

  public int de$sciss$processor$impl$ProcessorBase$$_lastProg();
    Code:
       0: aload_0
       1: getfield      #302                // Field de$sciss$processor$impl$ProcessorBase$$_lastProg:I
       4: ireturn

  public de.sciss.processor.ProcessorLike child();
    Code:
       0: aload_0
       1: getfield      #305                // Field child:Lde/sciss/processor/ProcessorLike;
       4: areturn

  public final scala.concurrent.Promise promise();
    Code:
       0: aload_0
       1: getfield      #308                // Field promise:Lscala/concurrent/Promise;
       4: areturn

  public int progressResolution();
    Code:
       0: aload_0
       1: getfield      #310                // Field progressResolution:I
       4: ireturn

  public void de$sciss$processor$impl$ProcessorBase$$_context_$eq(scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #294                // Field de$sciss$processor$impl$ProcessorBase$$_context:Lscala/concurrent/ExecutionContext;
       5: return

  public void de$sciss$processor$impl$ProcessorBase$$_aborted_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #296                // Field de$sciss$processor$impl$ProcessorBase$$_aborted:Z
       5: return

  public void de$sciss$processor$impl$ProcessorBase$$_progress_$eq(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #299                // Field de$sciss$processor$impl$ProcessorBase$$_progress:D
       5: return

  public void de$sciss$processor$impl$ProcessorBase$$_lastProg_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #302                // Field de$sciss$processor$impl$ProcessorBase$$_lastProg:I
       5: return

  public void child_$eq(de.sciss.processor.ProcessorLike);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #305                // Field child:Lde/sciss/processor/ProcessorLike;
       5: return

  public void de$sciss$processor$impl$ProcessorBase$_setter_$promise_$eq(scala.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #308                // Field promise:Lscala/concurrent/Promise;
       5: return

  public void de$sciss$processor$impl$ProcessorBase$_setter_$progressResolution_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #310                // Field progressResolution:I
       5: return

  public scala.concurrent.ExecutionContext executionContext();
    Code:
       0: aload_0
       1: invokestatic  #328                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.executionContext$:(Lde/sciss/processor/impl/ProcessorBase;)Lscala/concurrent/ExecutionContext;
       4: areturn

  public void start(scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #333                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.start$:(Lde/sciss/processor/impl/ProcessorBase;Lscala/concurrent/ExecutionContext;)V
       5: return

  public scala.concurrent.Future peerFuture();
    Code:
       0: aload_0
       1: invokestatic  #338                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.peerFuture$:(Lde/sciss/processor/impl/ProcessorBase;)Lscala/concurrent/Future;
       4: areturn

  public void notifyAborted();
    Code:
       0: aload_0
       1: invokestatic  #342                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.notifyAborted$:(Lde/sciss/processor/impl/ProcessorBase;)V
       4: return

  public void abort();
    Code:
       0: aload_0
       1: invokestatic  #346                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.abort$:(Lde/sciss/processor/impl/ProcessorBase;)V
       4: return

  public void checkAborted();
    Code:
       0: aload_0
       1: invokestatic  #350                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.checkAborted$:(Lde/sciss/processor/impl/ProcessorBase;)V
       4: return

  public boolean aborted();
    Code:
       0: aload_0
       1: invokestatic  #355                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.aborted$:(Lde/sciss/processor/impl/ProcessorBase;)Z
       4: ireturn

  public void progress_$eq(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #360                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.progress_$eq$:(Lde/sciss/processor/impl/ProcessorBase;D)V
       5: return

  public double progress();
    Code:
       0: aload_0
       1: invokestatic  #365                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.progress$:(Lde/sciss/processor/impl/ProcessorBase;)D
       4: dreturn

  public abstract Next prepareNext(int, int, double, de.sciss.lucre.synth.RT);

  public abstract int blockSize();

  public long numFrames();
    Code:
       0: aload_0
       1: getfield      #101                // Field numFrames:J
       4: lreturn

  public final scala.concurrent.Future<scala.runtime.BoxedUnit> awaitFut(scala.concurrent.Future<java.lang.Object>, double, scala.Function0<scala.concurrent.Future<scala.runtime.BoxedUnit>>);
    Code:
       0: aload_1
       1: invokeinterface #381,  1          // InterfaceMethod scala/concurrent/Future.isCompleted:()Z
       6: ifeq          45
       9: aload_0
      10: dload_2
      11: invokevirtual #383                // Method progress_$eq:(D)V
      14: aload_0
      15: invokevirtual #385                // Method progress:()D
      18: dconst_1
      19: dcmpl
      20: ifne          32
      23: getstatic     #390                // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      26: invokevirtual #393                // Method scala/concurrent/Future$.unit:()Lscala/concurrent/Future;
      29: goto          42
      32: aload         4
      34: invokeinterface #397,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      39: checkcast     #7                  // class scala/concurrent/Future
      42: goto          95
      45: getstatic     #402                // Field de/sciss/lucre/synth/Executor$.MODULE$:Lde/sciss/lucre/synth/Executor$;
      48: aload_1
      49: lconst_1
      50: getstatic     #408                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      53: invokevirtual #412                // Method de/sciss/lucre/synth/Executor$.timeOut:(Lscala/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lscala/concurrent/Future;
      56: new           #23                 // class de/sciss/proc/impl/BufferPrepare$$anon$2
      59: dup
      60: invokespecial #413                // Method de/sciss/proc/impl/BufferPrepare$$anon$2."<init>":()V
      63: aload_0
      64: invokevirtual #415                // Method executionContext:()Lscala/concurrent/ExecutionContext;
      67: invokeinterface #417,  3          // InterfaceMethod scala/concurrent/Future.recover:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      72: astore        5
      74: aload         5
      76: aload_0
      77: aload_1
      78: dload_2
      79: aload         4
      81: invokedynamic #438,  0            // InvokeDynamic #0:apply:(Lde/sciss/proc/impl/BufferPrepare$Impl;Lscala/concurrent/Future;DLscala/Function0;)Lscala/Function1;
      86: aload_0
      87: invokevirtual #415                // Method executionContext:()Lscala/concurrent/ExecutionContext;
      90: invokeinterface #440,  3          // InterfaceMethod scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      95: areturn

  public scala.Option<Next> nextChunk();
    Code:
       0: getstatic     #449                // Field scala/concurrent/stm/TxnExecutor$.MODULE$:Lscala/concurrent/stm/TxnExecutor$;
       3: invokevirtual #453                // Method scala/concurrent/stm/TxnExecutor$.defaultAtomic:()Lscala/concurrent/stm/TxnExecutor;
       6: aload_0
       7: invokedynamic #462,  0            // InvokeDynamic #1:apply:(Lde/sciss/proc/impl/BufferPrepare$Impl;)Lscala/Function1;
      12: getstatic     #467                // Field scala/concurrent/stm/MaybeTxn$.MODULE$:Lscala/concurrent/stm/MaybeTxn$;
      15: invokevirtual #471                // Method scala/concurrent/stm/MaybeTxn$.unknown:()Lscala/concurrent/stm/MaybeTxn;
      18: invokeinterface #476,  3          // InterfaceMethod scala/concurrent/stm/TxnExecutor.apply:(Lscala/Function1;Lscala/concurrent/stm/MaybeTxn;)Ljava/lang/Object;
      23: checkcast     #478                // class scala/Option
      26: areturn

  public final void install(de.sciss.proc.AuralNode<T>, T);
    Code:
       0: getstatic     #487                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #106                // Field installed:Lscala/concurrent/stm/Ref;
       7: iconst_1
       8: invokestatic  #493                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      11: getstatic     #498                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
      14: aload_2
      15: invokevirtual #502                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      18: invokeinterface #508,  3          // InterfaceMethod scala/concurrent/stm/Ref.swap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: invokestatic  #512                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: invokevirtual #515                // Method scala/Predef$.require:(Z)V
      37: getstatic     #520                // Field de/sciss/synth/proc/graph/Buffer$.MODULE$:Lde/sciss/synth/proc/graph/Buffer$;
      40: aload_0
      41: invokevirtual #90                 // Method config:()Lde/sciss/proc/impl/BufferPrepare$Config;
      44: invokevirtual #524                // Method de/sciss/proc/impl/BufferPrepare$Config.key:()Ljava/lang/String;
      47: invokevirtual #528                // Method de/sciss/synth/proc/graph/Buffer$.controlName:(Ljava/lang/String;)Ljava/lang/String;
      50: astore_3
      51: aload_0
      52: invokevirtual #90                 // Method config:()Lde/sciss/proc/impl/BufferPrepare$Config;
      55: invokevirtual #532                // Method de/sciss/proc/impl/BufferPrepare$Config.buf:()Lde/sciss/lucre/synth/Buffer$Modifiable;
      58: astore        4
      60: aload_1
      61: getstatic     #537                // Field de/sciss/synth/ControlSet$.MODULE$:Lde/sciss/synth/ControlSet$;
      64: getstatic     #487                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      67: aload_3
      68: invokevirtual #540                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      71: checkcast     #542                // class java/lang/String
      74: astore        5
      76: getstatic     #545                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      79: aload         5
      81: aload         4
      83: invokeinterface #548,  1          // InterfaceMethod de/sciss/lucre/synth/Buffer$Modifiable.id:()I
      88: invokestatic  #552                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      91: invokevirtual #556                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      94: invokevirtual #560                // Method de/sciss/synth/ControlSet$.stringIntControlSet:(Lscala/Tuple2;)Lde/sciss/synth/ControlSet$Value;
      97: aload_2
      98: invokeinterface #566,  3          // InterfaceMethod de/sciss/proc/AuralNode.addControl:(Lde/sciss/synth/ControlSet;Lde/sciss/lucre/Txn;)V
     103: getstatic     #571                // Field de/sciss/lucre/synth/Buffer$.MODULE$:Lde/sciss/lucre/synth/Buffer$;
     106: aload         4
     108: aload_1
     109: invokevirtual #575                // Method de/sciss/lucre/synth/Buffer$.disposeWithNode:(Lde/sciss/lucre/synth/Buffer;Lde/sciss/lucre/synth/NodeRef;)Lde/sciss/lucre/synth/Resource;
     112: astore        6
     114: aload_1
     115: aload         6
     117: aload_2
     118: invokeinterface #579,  3          // InterfaceMethod de/sciss/proc/AuralNode.addResource:(Lde/sciss/lucre/synth/Resource;Lde/sciss/lucre/synth/RT;)V
     123: return

  public void dispose(T);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #600,  0            // InvokeDynamic #2:apply$mcV$sp:(Lde/sciss/proc/impl/BufferPrepare$Impl;)Lscala/runtime/java8/JFunction0$mcV$sp;
       7: invokeinterface #604,  2          // InterfaceMethod de/sciss/lucre/synth/Txn.afterCommit:(Lscala/Function0;)V
      12: aload_0
      13: invokevirtual #90                 // Method config:()Lde/sciss/proc/impl/BufferPrepare$Config;
      16: invokevirtual #532                // Method de/sciss/proc/impl/BufferPrepare$Config.buf:()Lde/sciss/lucre/synth/Buffer$Modifiable;
      19: astore_2
      20: aload_2
      21: aload_1
      22: invokeinterface #608,  2          // InterfaceMethod de/sciss/lucre/synth/Buffer$Modifiable.isOnline:(Lde/sciss/lucre/synth/RT;)Z
      27: ifeq          59
      30: aload_0
      31: getfield      #106                // Field installed:Lscala/concurrent/stm/Ref;
      34: getstatic     #498                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
      37: aload_1
      38: invokevirtual #502                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      41: invokeinterface #610,  2          // InterfaceMethod scala/concurrent/stm/Ref.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      46: invokestatic  #512                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      49: ifne          59
      52: aload_2
      53: aload_1
      54: invokeinterface #612,  2          // InterfaceMethod de/sciss/lucre/synth/Buffer$Modifiable.dispose:(Ljava/lang/Object;)V
      59: return

  public void install(de.sciss.proc.AuralNode, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #588                // class de/sciss/lucre/synth/Txn
       6: invokevirtual #615                // Method install:(Lde/sciss/proc/AuralNode;Lde/sciss/lucre/synth/Txn;)V
       9: return

  public void dispose(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #588                // class de/sciss/lucre/synth/Txn
       5: invokevirtual #618                // Method dispose:(Lde/sciss/lucre/synth/Txn;)V
       8: return

  public scala.concurrent.Awaitable ready(scala.concurrent.duration.Duration, scala.concurrent.CanAwait);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #621                // Method ready:(Lscala/concurrent/duration/Duration;Lscala/concurrent/CanAwait;)Lde/sciss/processor/impl/FutureProxy;
       6: areturn

  private final scala.concurrent.Future awaitFut$$anonfun$1(scala.concurrent.Future, double, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #627                // Method checkAborted:()V
       4: aload_0
       5: aload_1
       6: dload_2
       7: aload         4
       9: invokevirtual #629                // Method awaitFut:(Lscala/concurrent/Future;DLscala/Function0;)Lscala/concurrent/Future;
      12: areturn

  private final scala.Option nextChunk$$anonfun$1(scala.concurrent.stm.InTxn);
    Code:
       0: aload_0
       1: getfield      #86                 // Field offsetRef:Lscala/concurrent/stm/Ref;
       4: aload_1
       5: invokeinterface #610,  2          // InterfaceMethod scala/concurrent/stm/Ref.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #633                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      13: istore_2
      14: getstatic     #638                // Field scala/math/package$.MODULE$:Lscala/math/package$;
      17: aload_0
      18: invokevirtual #639                // Method numFrames:()J
      21: iload_2
      22: i2l
      23: lsub
      24: getstatic     #644                // Field scala/Int$.MODULE$:Lscala/Int$;
      27: aload_0
      28: invokevirtual #646                // Method blockSize:()I
      31: invokevirtual #650                // Method scala/Int$.int2long:(I)J
      34: invokevirtual #654                // Method scala/math/package$.min:(JJ)J
      37: l2i
      38: istore_3
      39: iload_2
      40: iload_3
      41: iadd
      42: istore        4
      44: iload_3
      45: iconst_0
      46: if_icmple     154
      49: aload_0
      50: getfield      #86                 // Field offsetRef:Lscala/concurrent/stm/Ref;
      53: iload         4
      55: invokestatic  #552                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      58: aload_1
      59: invokeinterface #657,  3          // InterfaceMethod scala/concurrent/stm/Ref.update:(Ljava/lang/Object;Ljava/lang/Object;)V
      64: getstatic     #662                // Field de/sciss/lucre/synth/RT$.MODULE$:Lde/sciss/lucre/synth/RT$;
      67: aload_1
      68: invokevirtual #666                // Method de/sciss/lucre/synth/RT$.wrap:(Lscala/concurrent/stm/InTxn;)Lde/sciss/lucre/synth/RT;
      71: astore        5
      73: aload_0
      74: invokevirtual #90                 // Method config:()Lde/sciss/proc/impl/BufferPrepare$Config;
      77: invokevirtual #532                // Method de/sciss/proc/impl/BufferPrepare$Config.buf:()Lde/sciss/lucre/synth/Buffer$Modifiable;
      80: aload         5
      82: invokeinterface #608,  2          // InterfaceMethod de/sciss/lucre/synth/Buffer$Modifiable.isOnline:(Lde/sciss/lucre/synth/RT;)Z
      87: ifeq          148
      90: iload         4
      92: i2l
      93: aload_0
      94: invokevirtual #639                // Method numFrames:()J
      97: lcmp
      98: ifne          105
     101: dconst_1
     102: goto          123
     105: getstatic     #638                // Field scala/math/package$.MODULE$:Lscala/math/package$;
     108: ldc2_w        #667                // double 0.9999d
     111: iload         4
     113: i2d
     114: aload_0
     115: invokevirtual #639                // Method numFrames:()J
     118: l2d
     119: ddiv
     120: invokevirtual #671                // Method scala/math/package$.min:(DD)D
     123: dstore        6
     125: aload_0
     126: iload_2
     127: iload_3
     128: dload         6
     130: aload         5
     132: invokevirtual #673                // Method prepareNext:(IIDLde/sciss/lucre/synth/RT;)Ljava/lang/Object;
     135: astore        8
     137: getstatic     #678                // Field scala/Some$.MODULE$:Lscala/Some$;
     140: aload         8
     142: invokevirtual #681                // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
     145: goto          151
     148: getstatic     #686                // Field scala/None$.MODULE$:Lscala/None$;
     151: goto          157
     154: getstatic     #686                // Field scala/None$.MODULE$:Lscala/None$;
     157: areturn

  private final void dispose$$anonfun$1();
    Code:
       0: aload_0
       1: invokevirtual #697                // Method abort:()V
       4: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #709,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
