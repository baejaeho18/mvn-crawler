Compiled from "TimelineRunnerImpl.scala"
final class de.sciss.proc.impl.TimelineRunnerImpl$Impl<T extends de.sciss.lucre.synth.Txn<T>> implements de.sciss.proc.impl.BasicAuralRunnerImpl<T> {
  public static final long OFFSET$0;

  private scala.concurrent.stm.Ref de$sciss$lucre$impl$ObservableImpl$$obsRef;

  private scala.concurrent.stm.Ref de$sciss$proc$impl$BasicViewBaseImpl$$stateRef;

  public de.sciss.proc.impl.BasicRunnerImpl$messages$ messages$lzy1;

  public long 0bitmap$1;

  private scala.concurrent.stm.Ref de$sciss$proc$impl$BasicAuralRunnerImpl$$targetState;

  private scala.concurrent.stm.Ref de$sciss$proc$impl$BasicAuralRunnerImpl$$auralRef;

  private scala.concurrent.stm.Ref de$sciss$proc$impl$BasicAuralRunnerImpl$$attrRef;

  private scala.concurrent.stm.Ref de$sciss$proc$impl$BasicAuralRunnerImpl$$attrDirty;

  private de.sciss.lucre.Disposable de$sciss$proc$impl$BasicAuralRunnerImpl$$obsUniverse;

  public de.sciss.proc.impl.BasicAuralRunnerImpl$progress$ progress$lzy1;

  private final de.sciss.lucre.Source<T, de.sciss.proc.Timeline<T>> objH;

  private final de.sciss.proc.Universe universe;

  private final scala.concurrent.stm.Ref<java.lang.Object> schToken;

  public de.sciss.proc.impl.TimelineRunnerImpl$Impl(de.sciss.lucre.Source<T, de.sciss.proc.Timeline<T>>, de.sciss.proc.Universe<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field objH:Lde/sciss/lucre/Source;
       5: aload_0
       6: aload_2
       7: putfield      #77                 // Field universe:Lde/sciss/proc/Universe;
      10: aload_0
      11: invokespecial #80                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #84                 // InterfaceMethod de/sciss/lucre/impl/ObservableImpl.$init$:(Lde/sciss/lucre/impl/ObservableImpl;)V
      18: aload_0
      19: invokestatic  #87                 // InterfaceMethod de/sciss/proc/impl/BasicViewBaseImpl.$init$:(Lde/sciss/proc/impl/BasicViewBaseImpl;)V
      22: aload_0
      23: invokestatic  #90                 // InterfaceMethod de/sciss/proc/impl/BasicRunnerImpl.$init$:(Lde/sciss/proc/impl/BasicRunnerImpl;)V
      26: aload_0
      27: invokestatic  #93                 // InterfaceMethod de/sciss/proc/impl/BasicAuralRunnerImpl.$init$:(Lde/sciss/proc/impl/BasicAuralRunnerImpl;)V
      30: aload_0
      31: getstatic     #99                 // Field scala/concurrent/stm/Ref$.MODULE$:Lscala/concurrent/stm/Ref$;
      34: iconst_m1
      35: invokevirtual #103                // Method scala/concurrent/stm/Ref$.apply:(I)Lscala/concurrent/stm/Ref;
      38: putfield      #105                // Field schToken:Lscala/concurrent/stm/Ref;
      41: invokestatic  #110                // Method scala/runtime/Statics.releaseFence:()V
      44: return

  private static {};
    Code:
       0: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class de/sciss/proc/impl/TimelineRunnerImpl$Impl
       5: ldc           #119                // String 0bitmap$1
       7: invokevirtual #123                // Method scala/runtime/LazyVals$.getOffset:(Ljava/lang/Class;Ljava/lang/String;)J
      10: putstatic     #125                // Field OFFSET$0:J
      13: return

  public de.sciss.lucre.Disposable reactNow(scala.Function1, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #133                // InterfaceMethod de/sciss/proc/ViewBase.reactNow$:(Lde/sciss/proc/ViewBase;Lscala/Function1;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
       6: areturn

  public de.sciss.lucre.MapObjLike prepare$default$1();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod de/sciss/proc/Runner.prepare$default$1$:(Lde/sciss/proc/Runner;)Lde/sciss/lucre/MapObjLike;
       4: areturn

  public scala.concurrent.stm.Ref de$sciss$lucre$impl$ObservableImpl$$obsRef();
    Code:
       0: aload_0
       1: getfield      #144                // Field de$sciss$lucre$impl$ObservableImpl$$obsRef:Lscala/concurrent/stm/Ref;
       4: areturn

  public void de$sciss$lucre$impl$ObservableImpl$_setter_$de$sciss$lucre$impl$ObservableImpl$$obsRef_$eq(scala.concurrent.stm.Ref);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #144                // Field de$sciss$lucre$impl$ObservableImpl$$obsRef:Lscala/concurrent/stm/Ref;
       5: return

  public void fire(java.lang.Object, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #154                // InterfaceMethod de/sciss/lucre/impl/ObservableImpl.fire$:(Lde/sciss/lucre/impl/ObservableImpl;Ljava/lang/Object;Lde/sciss/lucre/Txn;)V
       6: return

  public de.sciss.lucre.Disposable react(scala.Function1, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #160                // InterfaceMethod de/sciss/lucre/impl/ObservableImpl.react$:(Lde/sciss/lucre/impl/ObservableImpl;Lscala/Function1;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
       6: areturn

  public scala.concurrent.stm.Ref de$sciss$proc$impl$BasicViewBaseImpl$$stateRef();
    Code:
       0: aload_0
       1: getfield      #162                // Field de$sciss$proc$impl$BasicViewBaseImpl$$stateRef:Lscala/concurrent/stm/Ref;
       4: areturn

  public void de$sciss$proc$impl$BasicViewBaseImpl$_setter_$de$sciss$proc$impl$BasicViewBaseImpl$$stateRef_$eq(scala.concurrent.stm.Ref);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #162                // Field de$sciss$proc$impl$BasicViewBaseImpl$$stateRef:Lscala/concurrent/stm/Ref;
       5: return

  public de.sciss.proc.Runner$State state(de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #169                // InterfaceMethod de/sciss/proc/impl/BasicViewBaseImpl.state$:(Lde/sciss/proc/impl/BasicViewBaseImpl;Lde/sciss/lucre/Txn;)Lde/sciss/proc/Runner$State;
       5: areturn

  public void state_$eq(de.sciss.proc.Runner$State, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #176                // InterfaceMethod de/sciss/proc/impl/BasicViewBaseImpl.state_$eq$:(Lde/sciss/proc/impl/BasicViewBaseImpl;Lde/sciss/proc/Runner$State;Lde/sciss/lucre/Txn;)V
       6: return

  public final de.sciss.proc.impl.BasicRunnerImpl$messages$ messages();
    Code:
       0: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #125                // Field OFFSET$0:J
       7: invokevirtual #185                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #189                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #190                // long 3l
      24: lcmp
      25: ifne          36
      28: aload_0
      29: getfield      #193                // Field messages$lzy1:Lde/sciss/proc/impl/BasicRunnerImpl$messages$;
      32: areturn
      33: nop
      34: nop
      35: athrow
      36: lload_3
      37: lconst_0
      38: lcmp
      39: ifne          116
      42: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      45: aload_0
      46: getstatic     #125                // Field OFFSET$0:J
      49: lload_1
      50: iconst_1
      51: iconst_0
      52: invokevirtual #197                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      55: ifeq          113
      58: new           #43                 // class de/sciss/proc/impl/BasicRunnerImpl$messages$
      61: dup
      62: aload_0
      63: invokespecial #199                // Method de/sciss/proc/impl/BasicRunnerImpl$messages$."<init>":(Lde/sciss/proc/impl/BasicRunnerImpl;)V
      66: astore        5
      68: aload_0
      69: aload         5
      71: putfield      #193                // Field messages$lzy1:Lde/sciss/proc/impl/BasicRunnerImpl$messages$;
      74: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      77: aload_0
      78: getstatic     #125                // Field OFFSET$0:J
      81: iconst_3
      82: iconst_0
      83: invokevirtual #203                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      86: aload         5
      88: areturn
      89: nop
      90: nop
      91: athrow
      92: astore        6
      94: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      97: aload_0
      98: getstatic     #125                // Field OFFSET$0:J
     101: iconst_0
     102: iconst_0
     103: invokevirtual #203                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
     106: aload         6
     108: athrow
     109: nop
     110: nop
     111: athrow
     112: athrow
     113: goto          128
     116: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     119: aload_0
     120: getstatic     #125                // Field OFFSET$0:J
     123: lload_1
     124: iconst_0
     125: invokevirtual #207                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     128: goto          0
     131: nop
     132: athrow
    Exception table:
       from    to  target type
          58    89    92   Class java/lang/Throwable

  public de.sciss.lucre.Workspace workspace();
    Code:
       0: aload_0
       1: invokestatic  #213                // InterfaceMethod de/sciss/proc/impl/BasicRunnerImpl.workspace$:(Lde/sciss/proc/impl/BasicRunnerImpl;)Lde/sciss/lucre/Workspace;
       4: areturn

  public de.sciss.lucre.Cursor cursor();
    Code:
       0: aload_0
       1: invokestatic  #219                // InterfaceMethod de/sciss/proc/impl/BasicRunnerImpl.cursor$:(Lde/sciss/proc/impl/BasicRunnerImpl;)Lde/sciss/lucre/Cursor;
       4: areturn

  public void initControl(de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #225                // InterfaceMethod de/sciss/proc/impl/BasicRunnerImpl.initControl$:(Lde/sciss/proc/impl/BasicRunnerImpl;Lde/sciss/lucre/Txn;)V
       5: return

  public void dispose(de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #229                // InterfaceMethod de/sciss/proc/impl/BasicRunnerImpl.dispose$:(Lde/sciss/proc/impl/BasicRunnerImpl;Lde/sciss/lucre/Txn;)V
       5: return

  public scala.concurrent.stm.Ref de$sciss$proc$impl$BasicAuralRunnerImpl$$targetState();
    Code:
       0: aload_0
       1: getfield      #231                // Field de$sciss$proc$impl$BasicAuralRunnerImpl$$targetState:Lscala/concurrent/stm/Ref;
       4: areturn

  public scala.concurrent.stm.Ref de$sciss$proc$impl$BasicAuralRunnerImpl$$auralRef();
    Code:
       0: aload_0
       1: getfield      #233                // Field de$sciss$proc$impl$BasicAuralRunnerImpl$$auralRef:Lscala/concurrent/stm/Ref;
       4: areturn

  public scala.concurrent.stm.Ref de$sciss$proc$impl$BasicAuralRunnerImpl$$attrRef();
    Code:
       0: aload_0
       1: getfield      #235                // Field de$sciss$proc$impl$BasicAuralRunnerImpl$$attrRef:Lscala/concurrent/stm/Ref;
       4: areturn

  public scala.concurrent.stm.Ref de$sciss$proc$impl$BasicAuralRunnerImpl$$attrDirty();
    Code:
       0: aload_0
       1: getfield      #237                // Field de$sciss$proc$impl$BasicAuralRunnerImpl$$attrDirty:Lscala/concurrent/stm/Ref;
       4: areturn

  public de.sciss.lucre.Disposable de$sciss$proc$impl$BasicAuralRunnerImpl$$obsUniverse();
    Code:
       0: aload_0
       1: getfield      #240                // Field de$sciss$proc$impl$BasicAuralRunnerImpl$$obsUniverse:Lde/sciss/lucre/Disposable;
       4: areturn

  public final de.sciss.proc.impl.BasicAuralRunnerImpl$progress$ progress();
    Code:
       0: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #125                // Field OFFSET$0:J
       7: invokevirtual #185                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_1
      16: invokevirtual #189                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #190                // long 3l
      24: lcmp
      25: ifne          36
      28: aload_0
      29: getfield      #244                // Field progress$lzy1:Lde/sciss/proc/impl/BasicAuralRunnerImpl$progress$;
      32: areturn
      33: nop
      34: nop
      35: athrow
      36: lload_3
      37: lconst_0
      38: lcmp
      39: ifne          116
      42: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      45: aload_0
      46: getstatic     #125                // Field OFFSET$0:J
      49: lload_1
      50: iconst_1
      51: iconst_1
      52: invokevirtual #197                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      55: ifeq          113
      58: new           #40                 // class de/sciss/proc/impl/BasicAuralRunnerImpl$progress$
      61: dup
      62: aload_0
      63: invokespecial #246                // Method de/sciss/proc/impl/BasicAuralRunnerImpl$progress$."<init>":(Lde/sciss/proc/impl/BasicAuralRunnerImpl;)V
      66: astore        5
      68: aload_0
      69: aload         5
      71: putfield      #244                // Field progress$lzy1:Lde/sciss/proc/impl/BasicAuralRunnerImpl$progress$;
      74: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      77: aload_0
      78: getstatic     #125                // Field OFFSET$0:J
      81: iconst_3
      82: iconst_1
      83: invokevirtual #203                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      86: aload         5
      88: areturn
      89: nop
      90: nop
      91: athrow
      92: astore        6
      94: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      97: aload_0
      98: getstatic     #125                // Field OFFSET$0:J
     101: iconst_0
     102: iconst_1
     103: invokevirtual #203                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
     106: aload         6
     108: athrow
     109: nop
     110: nop
     111: athrow
     112: athrow
     113: goto          128
     116: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     119: aload_0
     120: getstatic     #125                // Field OFFSET$0:J
     123: lload_1
     124: iconst_1
     125: invokevirtual #207                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     128: goto          0
     131: nop
     132: athrow
    Exception table:
       from    to  target type
          58    89    92   Class java/lang/Throwable

  public void de$sciss$proc$impl$BasicAuralRunnerImpl$$obsUniverse_$eq(de.sciss.lucre.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #240                // Field de$sciss$proc$impl$BasicAuralRunnerImpl$$obsUniverse:Lde/sciss/lucre/Disposable;
       5: return

  public void de$sciss$proc$impl$BasicAuralRunnerImpl$_setter_$de$sciss$proc$impl$BasicAuralRunnerImpl$$targetState_$eq(scala.concurrent.stm.Ref);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #231                // Field de$sciss$proc$impl$BasicAuralRunnerImpl$$targetState:Lscala/concurrent/stm/Ref;
       5: return

  public void de$sciss$proc$impl$BasicAuralRunnerImpl$_setter_$de$sciss$proc$impl$BasicAuralRunnerImpl$$auralRef_$eq(scala.concurrent.stm.Ref);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #233                // Field de$sciss$proc$impl$BasicAuralRunnerImpl$$auralRef:Lscala/concurrent/stm/Ref;
       5: return

  public void de$sciss$proc$impl$BasicAuralRunnerImpl$_setter_$de$sciss$proc$impl$BasicAuralRunnerImpl$$attrRef_$eq(scala.concurrent.stm.Ref);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #235                // Field de$sciss$proc$impl$BasicAuralRunnerImpl$$attrRef:Lscala/concurrent/stm/Ref;
       5: return

  public void de$sciss$proc$impl$BasicAuralRunnerImpl$_setter_$de$sciss$proc$impl$BasicAuralRunnerImpl$$attrDirty_$eq(scala.concurrent.stm.Ref);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #237                // Field de$sciss$proc$impl$BasicAuralRunnerImpl$$attrDirty:Lscala/concurrent/stm/Ref;
       5: return

  public void prepare(de.sciss.lucre.MapObjLike, de.sciss.lucre.synth.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #260                // InterfaceMethod de/sciss/proc/impl/BasicAuralRunnerImpl.prepare$:(Lde/sciss/proc/impl/BasicAuralRunnerImpl;Lde/sciss/lucre/MapObjLike;Lde/sciss/lucre/synth/Txn;)V
       6: return

  public void run(de.sciss.lucre.synth.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #268                // InterfaceMethod de/sciss/proc/impl/BasicAuralRunnerImpl.run$:(Lde/sciss/proc/impl/BasicAuralRunnerImpl;Lde/sciss/lucre/synth/Txn;)V
       5: return

  public void stop(de.sciss.lucre.synth.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #272                // InterfaceMethod de/sciss/proc/impl/BasicAuralRunnerImpl.stop$:(Lde/sciss/proc/impl/BasicAuralRunnerImpl;Lde/sciss/lucre/synth/Txn;)V
       5: return

  public void disposeRef(de.sciss.lucre.synth.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #276                // InterfaceMethod de/sciss/proc/impl/BasicAuralRunnerImpl.disposeRef$:(Lde/sciss/proc/impl/BasicAuralRunnerImpl;Lde/sciss/lucre/synth/Txn;)V
       5: return

  public de.sciss.proc.impl.BasicAuralRunnerImpl init(de.sciss.lucre.synth.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #282                // InterfaceMethod de/sciss/proc/impl/BasicAuralRunnerImpl.init$:(Lde/sciss/proc/impl/BasicAuralRunnerImpl;Lde/sciss/lucre/synth/Txn;)Lde/sciss/proc/impl/BasicAuralRunnerImpl;
       5: areturn

  public de.sciss.proc.Universe<T> universe();
    Code:
       0: aload_0
       1: getfield      #77                 // Field universe:Lde/sciss/proc/Universe;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #288                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #289                // int 15
       7: invokespecial #292                // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc_w         #294                // String Runner.Timeline
      13: invokevirtual #298                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: getstatic     #303                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      19: getstatic     #308                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      22: aload_0
      23: invokevirtual #312                // Method hashCode:()I
      26: invokevirtual #316                // Method scala/Predef$.intWrapper:(I)I
      29: invokevirtual #320                // Method scala/runtime/RichInt$.toHexString$extension:(I)Ljava/lang/String;
      32: invokevirtual #298                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #322                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: areturn

  public de.sciss.lucre.Obj<T> obj(T);
    Code:
       0: aload_0
       1: getfield      #75                 // Field objH:Lde/sciss/lucre/Source;
       4: aload_1
       5: invokeinterface #330,  2          // InterfaceMethod de/sciss/lucre/Source.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #332                // class de/sciss/lucre/Obj
      13: areturn

  private void mkSch(T);
    Code:
       0: aload_0
       1: getfield      #75                 // Field objH:Lde/sciss/lucre/Source;
       4: aload_1
       5: invokeinterface #330,  2          // InterfaceMethod de/sciss/lucre/Source.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #336                // class de/sciss/proc/Timeline
      13: astore_2
      14: aload_2
      15: aload_1
      16: invokeinterface #340,  2          // InterfaceMethod de/sciss/proc/Timeline.lastEvent:(Lde/sciss/lucre/Txn;)Lscala/Option;
      21: aload_0
      22: aload_1
      23: invokedynamic #359,  0            // InvokeDynamic #0:apply$mcVJ$sp:(Lde/sciss/proc/impl/TimelineRunnerImpl$Impl;Lde/sciss/lucre/synth/Txn;)Lscala/runtime/java8/JFunction1$mcVJ$sp;
      28: invokevirtual #365                // Method scala/Option.foreach:(Lscala/Function1;)V
      31: return

  private void cancelSch(T);
    Code:
       0: aload_0
       1: getfield      #105                // Field schToken:Lscala/concurrent/stm/Ref;
       4: iconst_m1
       5: invokestatic  #374                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       8: getstatic     #379                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
      11: aload_1
      12: invokevirtual #383                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      15: invokeinterface #389,  3          // InterfaceMethod scala/concurrent/stm/Ref.swap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: invokestatic  #393                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      23: istore_2
      24: iload_2
      25: iconst_0
      26: if_icmplt     45
      29: aload_0
      30: invokevirtual #395                // Method universe:()Lde/sciss/proc/Universe;
      33: invokeinterface #401,  1          // InterfaceMethod de/sciss/proc/Universe.scheduler:()Lde/sciss/proc/Scheduler;
      38: iload_2
      39: aload_1
      40: invokeinterface #407,  3          // InterfaceMethod de/sciss/proc/Scheduler.cancel:(ILde/sciss/lucre/Txn;)V
      45: return

  public void stateWillChanged(de.sciss.proc.Runner$State, T);
    Code:
       0: aload_1
       1: astore_3
       2: getstatic     #415                // Field de/sciss/proc/Runner$Running$.MODULE$:Lde/sciss/proc/Runner$Running$;
       5: aload_3
       6: invokevirtual #419                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: ifeq          20
      12: aload_0
      13: aload_2
      14: invokespecial #421                // Method mkSch:(Lde/sciss/lucre/synth/Txn;)V
      17: goto          41
      20: getstatic     #424                // Field de/sciss/proc/Runner$Stopped$.MODULE$:Lde/sciss/proc/Runner$Stopped$;
      23: aload_3
      24: invokevirtual #419                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          38
      30: aload_0
      31: aload_2
      32: invokespecial #426                // Method cancelSch:(Lde/sciss/lucre/synth/Txn;)V
      35: goto          41
      38: goto          41
      41: return

  public void disposeData(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #430                // InterfaceMethod de/sciss/proc/impl/BasicAuralRunnerImpl.disposeData$:(Lde/sciss/proc/impl/BasicAuralRunnerImpl;Lde/sciss/lucre/synth/Txn;)V
       5: aload_0
       6: aload_1
       7: invokespecial #426                // Method cancelSch:(Lde/sciss/lucre/synth/Txn;)V
      10: return

  public void stateWillChanged(de.sciss.proc.Runner$State, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #432                // class de/sciss/lucre/synth/Txn
       6: invokevirtual #434                // Method stateWillChanged:(Lde/sciss/proc/Runner$State;Lde/sciss/lucre/synth/Txn;)V
       9: return

  public void disposeData(de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #432                // class de/sciss/lucre/synth/Txn
       5: invokevirtual #436                // Method disposeData:(Lde/sciss/lucre/synth/Txn;)V
       8: return

  public de.sciss.proc.Runner$Progress progress();
    Code:
       0: aload_0
       1: invokevirtual #439                // Method progress:()Lde/sciss/proc/impl/BasicAuralRunnerImpl$progress$;
       4: areturn

  public void prepare(de.sciss.lucre.MapObjLike, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #432                // class de/sciss/lucre/synth/Txn
       6: invokevirtual #442                // Method prepare:(Lde/sciss/lucre/MapObjLike;Lde/sciss/lucre/synth/Txn;)V
       9: return

  public void run(de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #432                // class de/sciss/lucre/synth/Txn
       5: invokevirtual #444                // Method run:(Lde/sciss/lucre/synth/Txn;)V
       8: return

  public void stop(de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #432                // class de/sciss/lucre/synth/Txn
       5: invokevirtual #446                // Method stop:(Lde/sciss/lucre/synth/Txn;)V
       8: return

  public void initControl(de.sciss.lucre.Exec);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #449                // class de/sciss/lucre/Txn
       5: invokevirtual #451                // Method initControl:(Lde/sciss/lucre/Txn;)V
       8: return

  public void dispose(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #449                // class de/sciss/lucre/Txn
       5: invokevirtual #455                // Method dispose:(Lde/sciss/lucre/Txn;)V
       8: return

  public de.sciss.proc.Runner$Messages messages();
    Code:
       0: aload_0
       1: invokevirtual #458                // Method messages:()Lde/sciss/proc/impl/BasicRunnerImpl$messages$;
       4: areturn

  public de.sciss.lucre.Disposable react(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #449                // class de/sciss/lucre/Txn
       6: invokevirtual #461                // Method react:(Lscala/Function1;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
       9: areturn

  private final boolean $anonfun$1(de.sciss.lucre.synth.Txn, de.sciss.lucre.BooleanObj);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #471,  2          // InterfaceMethod de/sciss/lucre/BooleanObj.value:(Lde/sciss/lucre/Exec;)Ljava/lang/Object;
       7: invokestatic  #474                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      10: ireturn

  private final void $anonfun$2(de.sciss.lucre.synth.Txn);
    Code:
       0: aload_0
       1: getfield      #75                 // Field objH:Lde/sciss/lucre/Source;
       4: aload_1
       5: invokeinterface #330,  2          // InterfaceMethod de/sciss/lucre/Source.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #336                // class de/sciss/proc/Timeline
      13: astore_2
      14: aload_2
      15: aload_1
      16: invokeinterface #479,  2          // InterfaceMethod de/sciss/proc/Timeline.attr:(Lde/sciss/lucre/Txn;)Lde/sciss/lucre/MapObj$Modifiable;
      21: ldc_w         #481                // String loop
      24: aload_1
      25: getstatic     #486                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      28: ldc_w         #467                // class de/sciss/lucre/BooleanObj
      31: invokevirtual #489                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      34: invokeinterface #493,  4          // InterfaceMethod de/sciss/lucre/MapObj$Modifiable.$:(Ljava/lang/Object;Lde/sciss/lucre/Txn;Lscala/reflect/ClassTag;)Lscala/Option;
      39: aload_0
      40: aload_1
      41: invokedynamic #503,  0            // InvokeDynamic #1:apply:(Lde/sciss/proc/impl/TimelineRunnerImpl$Impl;Lde/sciss/lucre/synth/Txn;)Lscala/Function1;
      46: invokevirtual #507                // Method scala/Option.exists:(Lscala/Function1;)Z
      49: istore_3
      50: iload_3
      51: ifeq          64
      54: aload_0
      55: aload_1
      56: invokevirtual #446                // Method stop:(Lde/sciss/lucre/synth/Txn;)V
      59: aload_0
      60: aload_1
      61: invokevirtual #444                // Method run:(Lde/sciss/lucre/synth/Txn;)V
      64: return

  private final void mkSch$$anonfun$1(de.sciss.lucre.synth.Txn, long);
    Code:
       0: lconst_0
       1: lstore        4
       3: lload_2
       4: lload         4
       6: lsub
       7: lstore        6
       9: lload         6
      11: lconst_0
      12: lcmp
      13: ifle          84
      16: aload_0
      17: invokevirtual #395                // Method universe:()Lde/sciss/proc/Universe;
      20: invokeinterface #401,  1          // InterfaceMethod de/sciss/proc/Universe.scheduler:()Lde/sciss/proc/Scheduler;
      25: astore        8
      27: aload         8
      29: aload_1
      30: invokeinterface #514,  2          // InterfaceMethod de/sciss/proc/Scheduler.time:(Lde/sciss/lucre/Txn;)J
      35: lstore        9
      37: aload         8
      39: lload         9
      41: lload         6
      43: ladd
      44: aload_0
      45: invokedynamic #523,  0            // InvokeDynamic #2:applyVoid:(Lde/sciss/proc/impl/TimelineRunnerImpl$Impl;)Lscala/runtime/function/JProcedure1;
      50: aload_1
      51: invokeinterface #527,  5          // InterfaceMethod de/sciss/proc/Scheduler.schedule:(JLscala/Function1;Lde/sciss/lucre/Txn;)I
      56: istore        11
      58: aload_0
      59: aload_1
      60: invokespecial #426                // Method cancelSch:(Lde/sciss/lucre/synth/Txn;)V
      63: aload_0
      64: getfield      #105                // Field schToken:Lscala/concurrent/stm/Ref;
      67: iload         11
      69: invokestatic  #374                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      72: getstatic     #379                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
      75: aload_1
      76: invokevirtual #383                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      79: invokeinterface #530,  3          // InterfaceMethod scala/concurrent/stm/Ref.update:(Ljava/lang/Object;Ljava/lang/Object;)V
      84: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #546,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
