Compiled from "MkSynthGraphSource.scala"
interface de.sciss.proc.impl.MkSynthGraphSource$GraphLine {
  public static void $init$(de.sciss.proc.impl.MkSynthGraphSource$GraphLine);
    Code:
       0: aload_0
       1: getstatic     #17                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: invokevirtual #21                 // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
       7: invokevirtual #27                 // Method scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
      10: invokeinterface #31,  2           // InterfaceMethod uses_$eq:(Lscala/collection/immutable/Set;)V
      15: aload_0
      16: getstatic     #36                 // Field scala/Option$.MODULE$:Lscala/Option$;
      19: invokevirtual #39                 // Method scala/Option$.empty:()Lscala/Option;
      22: invokeinterface #43,  2           // InterfaceMethod valName_$eq:(Lscala/Option;)V
      27: return

  public abstract scala.collection.immutable.Set<java.lang.String> uses();

  public abstract void uses_$eq(scala.collection.immutable.Set<java.lang.String>);

  public abstract scala.Option<java.lang.String> valName();

  public abstract void valName_$eq(scala.Option<java.lang.String>);

  public abstract java.lang.String elemName();

  public abstract boolean hasArgNamed(java.lang.String);
}
