Compiled from "MutableRunnerImpl.scala"
public class de.sciss.proc.impl.MutableRunnerImpl<T extends de.sciss.lucre.Txn<T>> implements de.sciss.proc.Runner$Mutable<T>, de.sciss.lucre.impl.ObservableImpl<T, de.sciss.proc.Runner$State> {
  public static final long OFFSET$0;

  private scala.concurrent.stm.Ref de$sciss$lucre$impl$ObservableImpl$$obsRef;

  public long 0bitmap$1;

  private final T tx0;

  private final de.sciss.proc.Universe universe;

  public final scala.concurrent.stm.Ref<scala.Option<de.sciss.proc.Runner<T>>> de$sciss$proc$impl$MutableRunnerImpl$$ref;

  private final scala.concurrent.stm.Ref<de.sciss.proc.Runner$State> refState;

  private final scala.concurrent.stm.Ref<scala.Option<de.sciss.proc.impl.MutableRunnerImpl<T>.MutableRef>> refObs;

  public de.sciss.proc.impl.MutableRunnerImpl$messages$ messages$lzy1;

  public de.sciss.proc.impl.MutableRunnerImpl$progress$ progress$lzy1;

  public de.sciss.proc.impl.MutableRunnerImpl(scala.Option<de.sciss.proc.Runner<T>>, T, de.sciss.proc.Universe<T>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #62                 // Field tx0:Lde/sciss/lucre/Txn;
       5: aload_0
       6: aload_3
       7: putfield      #64                 // Field universe:Lde/sciss/proc/Universe;
      10: aload_0
      11: invokespecial #67                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #71                 // InterfaceMethod de/sciss/lucre/impl/ObservableImpl.$init$:(Lde/sciss/lucre/impl/ObservableImpl;)V
      18: aload_0
      19: getstatic     #77                 // Field scala/concurrent/stm/Ref$.MODULE$:Lscala/concurrent/stm/Ref$;
      22: aload_1
      23: invokevirtual #81                 // Method scala/concurrent/stm/Ref$.apply:(Ljava/lang/Object;)Lscala/concurrent/stm/Ref;
      26: putfield      #83                 // Field de$sciss$proc$impl$MutableRunnerImpl$$ref:Lscala/concurrent/stm/Ref;
      29: aload_0
      30: getstatic     #77                 // Field scala/concurrent/stm/Ref$.MODULE$:Lscala/concurrent/stm/Ref$;
      33: getstatic     #86                 // Field de/sciss/proc/Runner$Stopped$.MODULE$:Lde/sciss/proc/Runner$Stopped$;
      36: invokevirtual #81                 // Method scala/concurrent/stm/Ref$.apply:(Ljava/lang/Object;)Lscala/concurrent/stm/Ref;
      39: putfield      #88                 // Field refState:Lscala/concurrent/stm/Ref;
      42: aload_0
      43: getstatic     #77                 // Field scala/concurrent/stm/Ref$.MODULE$:Lscala/concurrent/stm/Ref$;
      46: aload_1
      47: aload_0
      48: aload_2
      49: invokedynamic #109,  0            // InvokeDynamic #0:apply:(Lde/sciss/proc/impl/MutableRunnerImpl;Lde/sciss/lucre/Txn;)Lscala/Function1;
      54: invokevirtual #115                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      57: invokevirtual #81                 // Method scala/concurrent/stm/Ref$.apply:(Ljava/lang/Object;)Lscala/concurrent/stm/Ref;
      60: putfield      #117                // Field refObs:Lscala/concurrent/stm/Ref;
      63: invokestatic  #122                // Method scala/runtime/Statics.releaseFence:()V
      66: return

  private static {};
    Code:
       0: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class de/sciss/proc/impl/MutableRunnerImpl
       5: ldc           #132                // String 0bitmap$1
       7: invokevirtual #136                // Method scala/runtime/LazyVals$.getOffset:(Ljava/lang/Class;Ljava/lang/String;)J
      10: putstatic     #138                // Field OFFSET$0:J
      13: return

  public de.sciss.lucre.Disposable reactNow(scala.Function1, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #146                // InterfaceMethod de/sciss/proc/ViewBase.reactNow$:(Lde/sciss/proc/ViewBase;Lscala/Function1;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
       6: areturn

  public de.sciss.lucre.MapObjLike prepare$default$1();
    Code:
       0: aload_0
       1: invokestatic  #153                // InterfaceMethod de/sciss/proc/Runner.prepare$default$1$:(Lde/sciss/proc/Runner;)Lde/sciss/lucre/MapObjLike;
       4: areturn

  public scala.concurrent.stm.Ref de$sciss$lucre$impl$ObservableImpl$$obsRef();
    Code:
       0: aload_0
       1: getfield      #156                // Field de$sciss$lucre$impl$ObservableImpl$$obsRef:Lscala/concurrent/stm/Ref;
       4: areturn

  public void de$sciss$lucre$impl$ObservableImpl$_setter_$de$sciss$lucre$impl$ObservableImpl$$obsRef_$eq(scala.concurrent.stm.Ref);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #156                // Field de$sciss$lucre$impl$ObservableImpl$$obsRef:Lscala/concurrent/stm/Ref;
       5: return

  public void fire(java.lang.Object, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #166                // InterfaceMethod de/sciss/lucre/impl/ObservableImpl.fire$:(Lde/sciss/lucre/impl/ObservableImpl;Ljava/lang/Object;Lde/sciss/lucre/Txn;)V
       6: return

  public de.sciss.lucre.Disposable react(scala.Function1, de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #172                // InterfaceMethod de/sciss/lucre/impl/ObservableImpl.react$:(Lde/sciss/lucre/impl/ObservableImpl;Lscala/Function1;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
       6: areturn

  public de.sciss.proc.Universe<T> universe();
    Code:
       0: aload_0
       1: getfield      #64                 // Field universe:Lde/sciss/proc/Universe;
       4: areturn

  private void setState(de.sciss.proc.Runner$State, T);
    Code:
       0: aload_0
       1: getfield      #88                 // Field refState:Lscala/concurrent/stm/Ref;
       4: aload_1
       5: getstatic     #183                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
       8: aload_2
       9: invokevirtual #187                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      12: invokeinterface #193,  3          // InterfaceMethod scala/concurrent/stm/Ref.swap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #23                 // class de/sciss/proc/Runner$State
      20: astore_3
      21: aload_1
      22: aload_3
      23: astore        4
      25: dup
      26: ifnonnull     38
      29: pop
      30: aload         4
      32: ifnull        52
      35: goto          46
      38: aload         4
      40: invokevirtual #197                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      43: ifne          52
      46: aload_0
      47: aload_1
      48: aload_2
      49: invokevirtual #199                // Method fire:(Ljava/lang/Object;Lde/sciss/lucre/Txn;)V
      52: return

  public scala.Option<de.sciss.proc.Runner<T>> peer(T);
    Code:
       0: aload_0
       1: getfield      #83                 // Field de$sciss$proc$impl$MutableRunnerImpl$$ref:Lscala/concurrent/stm/Ref;
       4: getstatic     #183                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
       7: aload_1
       8: invokevirtual #187                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      11: invokeinterface #207,  2          // InterfaceMethod scala/concurrent/stm/Ref.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #111                // class scala/Option
      19: areturn

  public void peer_$eq(scala.Option<de.sciss.proc.Runner<T>>, T);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokedynamic #216,  0            // InvokeDynamic #1:apply:(Lde/sciss/proc/impl/MutableRunnerImpl;Lde/sciss/lucre/Txn;)Lscala/Function1;
       8: invokevirtual #115                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      11: astore_3
      12: aload_0
      13: getfield      #117                // Field refObs:Lscala/concurrent/stm/Ref;
      16: aload_3
      17: getstatic     #183                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
      20: aload_2
      21: invokevirtual #187                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      24: invokeinterface #193,  3          // InterfaceMethod scala/concurrent/stm/Ref.swap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #111                // class scala/Option
      32: aload_2
      33: invokedynamic #229,  0            // InvokeDynamic #2:applyVoid:(Lde/sciss/lucre/Txn;)Lscala/runtime/function/JProcedure1;
      38: invokevirtual #233                // Method scala/Option.foreach:(Lscala/Function1;)V
      41: aload_0
      42: getfield      #83                 // Field de$sciss$proc$impl$MutableRunnerImpl$$ref:Lscala/concurrent/stm/Ref;
      45: aload_1
      46: getstatic     #183                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
      49: aload_2
      50: invokevirtual #187                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      53: invokeinterface #193,  3          // InterfaceMethod scala/concurrent/stm/Ref.swap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #111                // class scala/Option
      61: aload_2
      62: invokedynamic #241,  0            // InvokeDynamic #3:applyVoid:(Lde/sciss/lucre/Txn;)Lscala/runtime/function/JProcedure1;
      67: invokevirtual #233                // Method scala/Option.foreach:(Lscala/Function1;)V
      70: aload_1
      71: aload_0
      72: aload_2
      73: invokedynamic #248,  0            // InvokeDynamic #4:applyVoid:(Lde/sciss/proc/impl/MutableRunnerImpl;Lde/sciss/lucre/Txn;)Lscala/runtime/function/JProcedure1;
      78: invokevirtual #233                // Method scala/Option.foreach:(Lscala/Function1;)V
      81: return

  public final de.sciss.proc.impl.MutableRunnerImpl$messages$ messages();
    Code:
       0: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #138                // Field OFFSET$0:J
       7: invokevirtual #257                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #261                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #262                // long 3l
      24: lcmp
      25: ifne          36
      28: aload_0
      29: getfield      #265                // Field messages$lzy1:Lde/sciss/proc/impl/MutableRunnerImpl$messages$;
      32: areturn
      33: nop
      34: nop
      35: athrow
      36: lload_3
      37: lconst_0
      38: lcmp
      39: ifne          116
      42: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      45: aload_0
      46: getstatic     #138                // Field OFFSET$0:J
      49: lload_1
      50: iconst_1
      51: iconst_0
      52: invokevirtual #269                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      55: ifeq          113
      58: new           #32                 // class de/sciss/proc/impl/MutableRunnerImpl$messages$
      61: dup
      62: aload_0
      63: invokespecial #272                // Method de/sciss/proc/impl/MutableRunnerImpl$messages$."<init>":(Lde/sciss/proc/impl/MutableRunnerImpl;)V
      66: astore        5
      68: aload_0
      69: aload         5
      71: putfield      #265                // Field messages$lzy1:Lde/sciss/proc/impl/MutableRunnerImpl$messages$;
      74: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      77: aload_0
      78: getstatic     #138                // Field OFFSET$0:J
      81: iconst_3
      82: iconst_0
      83: invokevirtual #276                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      86: aload         5
      88: areturn
      89: nop
      90: nop
      91: athrow
      92: astore        6
      94: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      97: aload_0
      98: getstatic     #138                // Field OFFSET$0:J
     101: iconst_0
     102: iconst_0
     103: invokevirtual #276                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
     106: aload         6
     108: athrow
     109: nop
     110: nop
     111: athrow
     112: athrow
     113: goto          128
     116: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     119: aload_0
     120: getstatic     #138                // Field OFFSET$0:J
     123: lload_1
     124: iconst_0
     125: invokevirtual #280                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     128: goto          0
     131: nop
     132: athrow
    Exception table:
       from    to  target type
          58    89    92   Class java/lang/Throwable

  public final de.sciss.proc.impl.MutableRunnerImpl$progress$ progress();
    Code:
       0: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #138                // Field OFFSET$0:J
       7: invokevirtual #257                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_1
      16: invokevirtual #261                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #262                // long 3l
      24: lcmp
      25: ifne          36
      28: aload_0
      29: getfield      #284                // Field progress$lzy1:Lde/sciss/proc/impl/MutableRunnerImpl$progress$;
      32: areturn
      33: nop
      34: nop
      35: athrow
      36: lload_3
      37: lconst_0
      38: lcmp
      39: ifne          116
      42: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      45: aload_0
      46: getstatic     #138                // Field OFFSET$0:J
      49: lload_1
      50: iconst_1
      51: iconst_1
      52: invokevirtual #269                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      55: ifeq          113
      58: new           #35                 // class de/sciss/proc/impl/MutableRunnerImpl$progress$
      61: dup
      62: aload_0
      63: invokespecial #285                // Method de/sciss/proc/impl/MutableRunnerImpl$progress$."<init>":(Lde/sciss/proc/impl/MutableRunnerImpl;)V
      66: astore        5
      68: aload_0
      69: aload         5
      71: putfield      #284                // Field progress$lzy1:Lde/sciss/proc/impl/MutableRunnerImpl$progress$;
      74: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      77: aload_0
      78: getstatic     #138                // Field OFFSET$0:J
      81: iconst_3
      82: iconst_1
      83: invokevirtual #276                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      86: aload         5
      88: areturn
      89: nop
      90: nop
      91: athrow
      92: astore        6
      94: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      97: aload_0
      98: getstatic     #138                // Field OFFSET$0:J
     101: iconst_0
     102: iconst_1
     103: invokevirtual #276                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
     106: aload         6
     108: athrow
     109: nop
     110: nop
     111: athrow
     112: athrow
     113: goto          128
     116: getstatic     #131                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     119: aload_0
     120: getstatic     #138                // Field OFFSET$0:J
     123: lload_1
     124: iconst_1
     125: invokevirtual #280                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     128: goto          0
     131: nop
     132: athrow
    Exception table:
       from    to  target type
          58    89    92   Class java/lang/Throwable

  public void prepare(de.sciss.lucre.MapObjLike<T, java.lang.String, de.sciss.lucre.Form<T>>, T);
    Code:
       0: aload_0
       1: getfield      #83                 // Field de$sciss$proc$impl$MutableRunnerImpl$$ref:Lscala/concurrent/stm/Ref;
       4: getstatic     #183                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
       7: aload_2
       8: invokevirtual #187                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      11: invokeinterface #207,  2          // InterfaceMethod scala/concurrent/stm/Ref.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #111                // class scala/Option
      19: aload_1
      20: aload_2
      21: invokedynamic #297,  0            // InvokeDynamic #5:applyVoid:(Lde/sciss/lucre/MapObjLike;Lde/sciss/lucre/Txn;)Lscala/runtime/function/JProcedure1;
      26: invokevirtual #233                // Method scala/Option.foreach:(Lscala/Function1;)V
      29: return

  public void run(T);
    Code:
       0: aload_0
       1: getfield      #83                 // Field de$sciss$proc$impl$MutableRunnerImpl$$ref:Lscala/concurrent/stm/Ref;
       4: getstatic     #183                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
       7: aload_1
       8: invokevirtual #187                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      11: invokeinterface #207,  2          // InterfaceMethod scala/concurrent/stm/Ref.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #111                // class scala/Option
      19: aload_1
      20: invokedynamic #306,  0            // InvokeDynamic #6:applyVoid:(Lde/sciss/lucre/Txn;)Lscala/runtime/function/JProcedure1;
      25: invokevirtual #233                // Method scala/Option.foreach:(Lscala/Function1;)V
      28: return

  public void initControl(T);
    Code:
       0: return

  public de.sciss.proc.Runner$State state(T);
    Code:
       0: aload_0
       1: getfield      #83                 // Field de$sciss$proc$impl$MutableRunnerImpl$$ref:Lscala/concurrent/stm/Ref;
       4: getstatic     #183                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
       7: aload_1
       8: invokevirtual #187                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      11: invokeinterface #207,  2          // InterfaceMethod scala/concurrent/stm/Ref.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #111                // class scala/Option
      19: aload_0
      20: aload_1
      21: invokedynamic #321,  0            // InvokeDynamic #7:apply:(Lde/sciss/proc/impl/MutableRunnerImpl;Lde/sciss/lucre/Txn;)Lscala/Function0;
      26: aload_1
      27: invokedynamic #331,  0            // InvokeDynamic #8:apply:(Lde/sciss/lucre/Txn;)Lscala/Function1;
      32: invokevirtual #335                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      35: checkcast     #23                 // class de/sciss/proc/Runner$State
      38: areturn

  public void stop(T);
    Code:
       0: aload_0
       1: getfield      #83                 // Field de$sciss$proc$impl$MutableRunnerImpl$$ref:Lscala/concurrent/stm/Ref;
       4: getstatic     #183                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
       7: aload_1
       8: invokevirtual #187                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      11: invokeinterface #207,  2          // InterfaceMethod scala/concurrent/stm/Ref.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #111                // class scala/Option
      19: aload_1
      20: invokedynamic #341,  0            // InvokeDynamic #9:applyVoid:(Lde/sciss/lucre/Txn;)Lscala/runtime/function/JProcedure1;
      25: invokevirtual #233                // Method scala/Option.foreach:(Lscala/Function1;)V
      28: return

  public void dispose(T);
    Code:
       0: aload_0
       1: getfield      #117                // Field refObs:Lscala/concurrent/stm/Ref;
       4: getstatic     #347                // Field scala/None$.MODULE$:Lscala/None$;
       7: getstatic     #183                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
      10: aload_1
      11: invokevirtual #187                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      14: invokeinterface #193,  3          // InterfaceMethod scala/concurrent/stm/Ref.swap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #111                // class scala/Option
      22: aload_1
      23: invokedynamic #352,  0            // InvokeDynamic #10:applyVoid:(Lde/sciss/lucre/Txn;)Lscala/runtime/function/JProcedure1;
      28: invokevirtual #233                // Method scala/Option.foreach:(Lscala/Function1;)V
      31: aload_0
      32: getfield      #83                 // Field de$sciss$proc$impl$MutableRunnerImpl$$ref:Lscala/concurrent/stm/Ref;
      35: getstatic     #347                // Field scala/None$.MODULE$:Lscala/None$;
      38: getstatic     #183                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
      41: aload_1
      42: invokevirtual #187                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      45: invokeinterface #193,  3          // InterfaceMethod scala/concurrent/stm/Ref.swap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #111                // class scala/Option
      53: aload_1
      54: invokedynamic #357,  0            // InvokeDynamic #11:applyVoid:(Lde/sciss/lucre/Txn;)Lscala/runtime/function/JProcedure1;
      59: invokevirtual #233                // Method scala/Option.foreach:(Lscala/Function1;)V
      62: return

  public de.sciss.proc.Runner$Messages messages();
    Code:
       0: aload_0
       1: invokevirtual #360                // Method messages:()Lde/sciss/proc/impl/MutableRunnerImpl$messages$;
       4: areturn

  public de.sciss.proc.Runner$Progress progress();
    Code:
       0: aload_0
       1: invokevirtual #363                // Method progress:()Lde/sciss/proc/impl/MutableRunnerImpl$progress$;
       4: areturn

  public void initControl(de.sciss.lucre.Exec);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #203                // class de/sciss/lucre/Txn
       5: invokevirtual #366                // Method initControl:(Lde/sciss/lucre/Txn;)V
       8: return

  public void dispose(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #203                // class de/sciss/lucre/Txn
       5: invokevirtual #369                // Method dispose:(Lde/sciss/lucre/Txn;)V
       8: return

  public de.sciss.lucre.Disposable react(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #203                // class de/sciss/lucre/Txn
       6: invokevirtual #372                // Method react:(Lscala/Function1;Lde/sciss/lucre/Txn;)Lde/sciss/lucre/Disposable;
       9: areturn

  private final de.sciss.proc.impl.MutableRunnerImpl$MutableRef $init$$$anonfun$1(de.sciss.lucre.Txn, de.sciss.proc.Runner);
    Code:
       0: new           #29                 // class de/sciss/proc/impl/MutableRunnerImpl$MutableRef
       3: dup
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokespecial #377                // Method de/sciss/proc/impl/MutableRunnerImpl$MutableRef."<init>":(Lde/sciss/proc/impl/MutableRunnerImpl;Lde/sciss/proc/Runner;Lde/sciss/lucre/Txn;)V
      10: areturn

  private static final void $init$$$anonfun$5$$anonfun$1(de.sciss.lucre.Txn, de.sciss.proc.impl.MutableRunnerImpl, de.sciss.proc.Runner$State);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokespecial #384                // Method setState:(Lde/sciss/proc/Runner$State;Lde/sciss/lucre/Txn;)V
       6: return

  public static final scala.Function1 de$sciss$proc$impl$MutableRunnerImpl$MutableRef$$_$$lessinit$greater$$anonfun$2(de.sciss.proc.impl.MutableRunnerImpl, de.sciss.lucre.Txn);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #394,  0            // InvokeDynamic #12:applyVoid:(Lde/sciss/lucre/Txn;Lde/sciss/proc/impl/MutableRunnerImpl;)Lscala/runtime/function/JProcedure1;
       7: areturn

  private static final void $init$$$anonfun$6$$anonfun$1(de.sciss.lucre.Txn, de.sciss.proc.impl.MutableRunnerImpl, scala.collection.immutable.List);
    Code:
       0: aload_1
       1: invokevirtual #360                // Method messages:()Lde/sciss/proc/impl/MutableRunnerImpl$messages$;
       4: aload_2
       5: aload_0
       6: invokevirtual #402                // Method de/sciss/proc/impl/MutableRunnerImpl$messages$.set:(Lscala/collection/immutable/List;Lde/sciss/lucre/Txn;)V
       9: return

  public static final scala.Function1 de$sciss$proc$impl$MutableRunnerImpl$MutableRef$$_$$lessinit$greater$$anonfun$3(de.sciss.proc.impl.MutableRunnerImpl, de.sciss.lucre.Txn);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #411,  0            // InvokeDynamic #13:applyVoid:(Lde/sciss/lucre/Txn;Lde/sciss/proc/impl/MutableRunnerImpl;)Lscala/runtime/function/JProcedure1;
       7: areturn

  private static final void $init$$$anonfun$7$$anonfun$1(de.sciss.lucre.Txn, de.sciss.proc.impl.MutableRunnerImpl, double);
    Code:
       0: aload_1
       1: invokevirtual #363                // Method progress:()Lde/sciss/proc/impl/MutableRunnerImpl$progress$;
       4: dload_2
       5: aload_0
       6: invokevirtual #418                // Method de/sciss/proc/impl/MutableRunnerImpl$progress$.set:(DLde/sciss/lucre/Txn;)V
       9: return

  public static final scala.Function1 de$sciss$proc$impl$MutableRunnerImpl$MutableRef$$_$$lessinit$greater$$anonfun$4(de.sciss.proc.impl.MutableRunnerImpl, de.sciss.lucre.Txn);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #430,  0            // InvokeDynamic #14:apply$mcVD$sp:(Lde/sciss/lucre/Txn;Lde/sciss/proc/impl/MutableRunnerImpl;)Lscala/runtime/java8/JFunction1$mcVD$sp;
       7: areturn

  private final de.sciss.proc.impl.MutableRunnerImpl$MutableRef $anonfun$1(de.sciss.lucre.Txn, de.sciss.proc.Runner);
    Code:
       0: new           #29                 // class de/sciss/proc/impl/MutableRunnerImpl$MutableRef
       3: dup
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokespecial #377                // Method de/sciss/proc/impl/MutableRunnerImpl$MutableRef."<init>":(Lde/sciss/proc/impl/MutableRunnerImpl;Lde/sciss/proc/Runner;Lde/sciss/lucre/Txn;)V
      10: areturn

  private static final void peer_$eq$$anonfun$1(de.sciss.lucre.Txn, de.sciss.proc.impl.MutableRunnerImpl$MutableRef);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #435                // Method de/sciss/proc/impl/MutableRunnerImpl$MutableRef.dispose:(Lde/sciss/lucre/Txn;)V
       5: return

  private static final void peer_$eq$$anonfun$2(de.sciss.lucre.Txn, de.sciss.proc.Runner);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #440,  2          // InterfaceMethod de/sciss/proc/Runner.dispose:(Ljava/lang/Object;)V
       7: return

  private final void peer_$eq$$anonfun$3(de.sciss.lucre.Txn, de.sciss.proc.Runner);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #444,  2          // InterfaceMethod de/sciss/proc/Runner.state:(Lde/sciss/lucre/Txn;)Lde/sciss/proc/Runner$State;
       8: aload_1
       9: invokespecial #384                // Method setState:(Lde/sciss/proc/Runner$State;Lde/sciss/lucre/Txn;)V
      12: aload_0
      13: invokevirtual #360                // Method messages:()Lde/sciss/proc/impl/MutableRunnerImpl$messages$;
      16: aload_2
      17: invokeinterface #446,  1          // InterfaceMethod de/sciss/proc/Runner.messages:()Lde/sciss/proc/Runner$Messages;
      22: aload_1
      23: invokeinterface #450,  2          // InterfaceMethod de/sciss/proc/Runner$Messages.current:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      28: aload_1
      29: invokevirtual #402                // Method de/sciss/proc/impl/MutableRunnerImpl$messages$.set:(Lscala/collection/immutable/List;Lde/sciss/lucre/Txn;)V
      32: aload_0
      33: invokevirtual #363                // Method progress:()Lde/sciss/proc/impl/MutableRunnerImpl$progress$;
      36: aload_2
      37: invokeinterface #452,  1          // InterfaceMethod de/sciss/proc/Runner.progress:()Lde/sciss/proc/Runner$Progress;
      42: aload_1
      43: invokeinterface #455,  2          // InterfaceMethod de/sciss/proc/Runner$Progress.current:(Ljava/lang/Object;)D
      48: aload_1
      49: invokevirtual #418                // Method de/sciss/proc/impl/MutableRunnerImpl$progress$.set:(DLde/sciss/lucre/Txn;)V
      52: return

  public static final scala.collection.immutable.List de$sciss$proc$impl$MutableRunnerImpl$messages$$$_$current$$anonfun$1(de.sciss.lucre.Txn, de.sciss.proc.Runner);
    Code:
       0: aload_1
       1: invokeinterface #446,  1          // InterfaceMethod de/sciss/proc/Runner.messages:()Lde/sciss/proc/Runner$Messages;
       6: aload_0
       7: invokeinterface #450,  2          // InterfaceMethod de/sciss/proc/Runner$Messages.current:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      12: areturn

  public static final double de$sciss$proc$impl$MutableRunnerImpl$progress$$$_$current$$anonfun$2(de.sciss.lucre.Txn, de.sciss.proc.Runner);
    Code:
       0: aload_1
       1: invokeinterface #452,  1          // InterfaceMethod de/sciss/proc/Runner.progress:()Lde/sciss/proc/Runner$Progress;
       6: aload_0
       7: invokeinterface #455,  2          // InterfaceMethod de/sciss/proc/Runner$Progress.current:(Ljava/lang/Object;)D
      12: dreturn

  private static final void prepare$$anonfun$1(de.sciss.lucre.MapObjLike, de.sciss.lucre.Txn, de.sciss.proc.Runner);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokeinterface #468,  3          // InterfaceMethod de/sciss/proc/Runner.prepare:(Lde/sciss/lucre/MapObjLike;Lde/sciss/lucre/Txn;)V
       8: return

  private static final void run$$anonfun$1(de.sciss.lucre.Txn, de.sciss.proc.Runner);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #472,  2          // InterfaceMethod de/sciss/proc/Runner.run:(Lde/sciss/lucre/Txn;)V
       7: return

  private final de.sciss.proc.Runner$State state$$anonfun$1(de.sciss.lucre.Txn);
    Code:
       0: aload_0
       1: getfield      #88                 // Field refState:Lscala/concurrent/stm/Ref;
       4: getstatic     #183                // Field de/sciss/lucre/Txn$.MODULE$:Lde/sciss/lucre/Txn$;
       7: aload_1
       8: invokevirtual #187                // Method de/sciss/lucre/Txn$.peer:(Lde/sciss/lucre/TxnLike;)Lscala/concurrent/stm/InTxn;
      11: invokeinterface #207,  2          // InterfaceMethod scala/concurrent/stm/Ref.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #23                 // class de/sciss/proc/Runner$State
      19: areturn

  private static final de.sciss.proc.Runner$State state$$anonfun$2(de.sciss.lucre.Txn, de.sciss.proc.Runner);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #444,  2          // InterfaceMethod de/sciss/proc/Runner.state:(Lde/sciss/lucre/Txn;)Lde/sciss/proc/Runner$State;
       7: areturn

  private static final void stop$$anonfun$1(de.sciss.lucre.Txn, de.sciss.proc.Runner);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #479,  2          // InterfaceMethod de/sciss/proc/Runner.stop:(Lde/sciss/lucre/Txn;)V
       7: return

  private static final void dispose$$anonfun$1(de.sciss.lucre.Txn, de.sciss.proc.impl.MutableRunnerImpl$MutableRef);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #435                // Method de/sciss/proc/impl/MutableRunnerImpl$MutableRef.dispose:(Lde/sciss/lucre/Txn;)V
       5: return

  private static final void dispose$$anonfun$2(de.sciss.lucre.Txn, de.sciss.proc.Runner);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #440,  2          // InterfaceMethod de/sciss/proc/Runner.dispose:(Ljava/lang/Object;)V
       7: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #495,  0            // InvokeDynamic #15:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
