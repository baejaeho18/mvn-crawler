Compiled from "BufferWrite.scala"
abstract class de.sciss.proc.impl.BufferWrite$Impl<T extends de.sciss.lucre.synth.Txn<T>, Next> implements de.sciss.processor.impl.ProcessorBase<scala.runtime.BoxedUnit, de.sciss.lucre.synth.Resource>, de.sciss.lucre.synth.Buffer$ProxyResource {
  private java.lang.Object de$sciss$model$impl$ModelImpl$$sync;

  private volatile scala.collection.immutable.Vector de$sciss$model$impl$ModelImpl$$listeners;

  private scala.concurrent.ExecutionContext de$sciss$processor$impl$ProcessorBase$$_context;

  private volatile boolean de$sciss$processor$impl$ProcessorBase$$_aborted;

  private volatile double de$sciss$processor$impl$ProcessorBase$$_progress;

  private volatile int de$sciss$processor$impl$ProcessorBase$$_lastProg;

  private de.sciss.processor.ProcessorLike child;

  private scala.concurrent.Promise promise;

  private int progressResolution;

  private final int blockSize;

  private final int numFrames;

  private final de.sciss.lucre.synth.Buffer buf;

  private final scala.concurrent.stm.Ref<java.lang.Object> offsetRef;

  public de.sciss.proc.impl.BufferWrite$Impl(int, int, de.sciss.lucre.synth.Buffer, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #53                 // Field blockSize:I
       5: aload_0
       6: iload_2
       7: putfield      #55                 // Field numFrames:I
      10: aload_0
      11: aload_3
      12: putfield      #57                 // Field buf:Lde/sciss/lucre/synth/Buffer;
      15: aload_0
      16: invokespecial #60                 // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #64                 // InterfaceMethod scala/concurrent/Future.$init$:(Lscala/concurrent/Future;)V
      23: aload_0
      24: invokestatic  #67                 // InterfaceMethod de/sciss/model/impl/ModelImpl.$init$:(Lde/sciss/model/impl/ModelImpl;)V
      27: aload_0
      28: invokestatic  #70                 // InterfaceMethod de/sciss/processor/impl/ProcessorBase.$init$:(Lde/sciss/processor/impl/ProcessorBase;)V
      31: aload_0
      32: getstatic     #76                 // Field scala/concurrent/stm/Ref$.MODULE$:Lscala/concurrent/stm/Ref$;
      35: iconst_0
      36: invokevirtual #80                 // Method scala/concurrent/stm/Ref$.apply:(I)Lscala/concurrent/stm/Ref;
      39: putfield      #82                 // Field offsetRef:Lscala/concurrent/stm/Ref;
      42: invokestatic  #87                 // Method scala/runtime/Statics.releaseFence:()V
      45: return

  public scala.concurrent.Future failed();
    Code:
       0: aload_0
       1: invokestatic  #96                 // InterfaceMethod scala/concurrent/Future.failed$:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       4: areturn

  public void foreach(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #104                // InterfaceMethod scala/concurrent/Future.foreach$:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
       6: return

  public scala.concurrent.Future transform(scala.Function1, scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #112                // InterfaceMethod scala/concurrent/Future.transform$:(Lscala/concurrent/Future;Lscala/Function1;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       7: areturn

  public scala.concurrent.Future map(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #118                // InterfaceMethod scala/concurrent/Future.map$:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future flatMap(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #122                // InterfaceMethod scala/concurrent/Future.flatMap$:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future flatten(scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #129                // InterfaceMethod scala/concurrent/Future.flatten$:(Lscala/concurrent/Future;Lscala/$less$colon$less;)Lscala/concurrent/Future;
       5: areturn

  public scala.concurrent.Future filter(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #135                // InterfaceMethod scala/concurrent/Future.filter$:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future withFilter(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #139                // InterfaceMethod scala/concurrent/Future.withFilter$:(Lscala/concurrent/Future;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future collect(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #146                // InterfaceMethod scala/concurrent/Future.collect$:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future recover(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #151                // InterfaceMethod scala/concurrent/Future.recover$:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future recoverWith(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #155                // InterfaceMethod scala/concurrent/Future.recoverWith$:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future zip(scala.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #161                // InterfaceMethod scala/concurrent/Future.zip$:(Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
       5: areturn

  public scala.concurrent.Future zipWith(scala.concurrent.Future, scala.Function2, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #168                // InterfaceMethod scala/concurrent/Future.zipWith$:(Lscala/concurrent/Future;Lscala/concurrent/Future;Lscala/Function2;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       7: areturn

  public scala.concurrent.Future fallbackTo(scala.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #173                // InterfaceMethod scala/concurrent/Future.fallbackTo$:(Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
       5: areturn

  public scala.concurrent.Future mapTo(scala.reflect.ClassTag);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #180                // InterfaceMethod scala/concurrent/Future.mapTo$:(Lscala/concurrent/Future;Lscala/reflect/ClassTag;)Lscala/concurrent/Future;
       5: areturn

  public scala.concurrent.Future andThen(scala.PartialFunction, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #185                // InterfaceMethod scala/concurrent/Future.andThen$:(Lscala/concurrent/Future;Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public java.lang.Object de$sciss$model$impl$ModelImpl$$sync();
    Code:
       0: aload_0
       1: getfield      #188                // Field de$sciss$model$impl$ModelImpl$$sync:Ljava/lang/Object;
       4: areturn

  public scala.collection.immutable.Vector de$sciss$model$impl$ModelImpl$$listeners();
    Code:
       0: aload_0
       1: getfield      #191                // Field de$sciss$model$impl$ModelImpl$$listeners:Lscala/collection/immutable/Vector;
       4: areturn

  public void de$sciss$model$impl$ModelImpl$$listeners_$eq(scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #191                // Field de$sciss$model$impl$ModelImpl$$listeners:Lscala/collection/immutable/Vector;
       5: return

  public void de$sciss$model$impl$ModelImpl$_setter_$de$sciss$model$impl$ModelImpl$$sync_$eq(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #188                // Field de$sciss$model$impl$ModelImpl$$sync:Ljava/lang/Object;
       5: return

  public void releaseListeners();
    Code:
       0: aload_0
       1: invokestatic  #201                // InterfaceMethod de/sciss/model/impl/ModelImpl.releaseListeners$:(Lde/sciss/model/impl/ModelImpl;)V
       4: return

  public void dispatch(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #207                // InterfaceMethod de/sciss/model/impl/ModelImpl.dispatch$:(Lde/sciss/model/impl/ModelImpl;Ljava/lang/Object;)V
       5: return

  public void startListening();
    Code:
       0: aload_0
       1: invokestatic  #211                // InterfaceMethod de/sciss/model/impl/ModelImpl.startListening$:(Lde/sciss/model/impl/ModelImpl;)V
       4: return

  public void stopListening();
    Code:
       0: aload_0
       1: invokestatic  #215                // InterfaceMethod de/sciss/model/impl/ModelImpl.stopListening$:(Lde/sciss/model/impl/ModelImpl;)V
       4: return

  public scala.PartialFunction addListener(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #221                // InterfaceMethod de/sciss/model/impl/ModelImpl.addListener$:(Lde/sciss/model/impl/ModelImpl;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public void removeListener(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #227                // InterfaceMethod de/sciss/model/impl/ModelImpl.removeListener$:(Lde/sciss/model/impl/ModelImpl;Lscala/PartialFunction;)V
       5: return

  public scala.Option value();
    Code:
       0: aload_0
       1: invokestatic  #233                // InterfaceMethod de/sciss/processor/impl/FutureProxy.value$:(Lde/sciss/processor/impl/FutureProxy;)Lscala/Option;
       4: areturn

  public boolean isCompleted();
    Code:
       0: aload_0
       1: invokestatic  #239                // InterfaceMethod de/sciss/processor/impl/FutureProxy.isCompleted$:(Lde/sciss/processor/impl/FutureProxy;)Z
       4: ireturn

  public void onComplete(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #245                // InterfaceMethod de/sciss/processor/impl/FutureProxy.onComplete$:(Lde/sciss/processor/impl/FutureProxy;Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
       6: return

  public de.sciss.processor.impl.FutureProxy ready(scala.concurrent.duration.Duration, scala.concurrent.CanAwait);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #253                // InterfaceMethod de/sciss/processor/impl/FutureProxy.ready$:(Lde/sciss/processor/impl/FutureProxy;Lscala/concurrent/duration/Duration;Lscala/concurrent/CanAwait;)Lde/sciss/processor/impl/FutureProxy;
       6: areturn

  public java.lang.Object result(scala.concurrent.duration.Duration, scala.concurrent.CanAwait);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #261                // InterfaceMethod de/sciss/processor/impl/FutureProxy.result$:(Lde/sciss/processor/impl/FutureProxy;Lscala/concurrent/duration/Duration;Lscala/concurrent/CanAwait;)Ljava/lang/Object;
       6: areturn

  public scala.concurrent.Future transform(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #264                // InterfaceMethod de/sciss/processor/impl/FutureProxy.transform$:(Lde/sciss/processor/impl/FutureProxy;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future transformWith(scala.Function1, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #268                // InterfaceMethod de/sciss/processor/impl/FutureProxy.transformWith$:(Lde/sciss/processor/impl/FutureProxy;Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.ExecutionContext de$sciss$processor$impl$ProcessorBase$$_context();
    Code:
       0: aload_0
       1: getfield      #271                // Field de$sciss$processor$impl$ProcessorBase$$_context:Lscala/concurrent/ExecutionContext;
       4: areturn

  public boolean de$sciss$processor$impl$ProcessorBase$$_aborted();
    Code:
       0: aload_0
       1: getfield      #273                // Field de$sciss$processor$impl$ProcessorBase$$_aborted:Z
       4: ireturn

  public double de$sciss$processor$impl$ProcessorBase$$_progress();
    Code:
       0: aload_0
       1: getfield      #276                // Field de$sciss$processor$impl$ProcessorBase$$_progress:D
       4: dreturn

  public int de$sciss$processor$impl$ProcessorBase$$_lastProg();
    Code:
       0: aload_0
       1: getfield      #279                // Field de$sciss$processor$impl$ProcessorBase$$_lastProg:I
       4: ireturn

  public de.sciss.processor.ProcessorLike child();
    Code:
       0: aload_0
       1: getfield      #282                // Field child:Lde/sciss/processor/ProcessorLike;
       4: areturn

  public final scala.concurrent.Promise promise();
    Code:
       0: aload_0
       1: getfield      #285                // Field promise:Lscala/concurrent/Promise;
       4: areturn

  public int progressResolution();
    Code:
       0: aload_0
       1: getfield      #287                // Field progressResolution:I
       4: ireturn

  public void de$sciss$processor$impl$ProcessorBase$$_context_$eq(scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #271                // Field de$sciss$processor$impl$ProcessorBase$$_context:Lscala/concurrent/ExecutionContext;
       5: return

  public void de$sciss$processor$impl$ProcessorBase$$_aborted_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #273                // Field de$sciss$processor$impl$ProcessorBase$$_aborted:Z
       5: return

  public void de$sciss$processor$impl$ProcessorBase$$_progress_$eq(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #276                // Field de$sciss$processor$impl$ProcessorBase$$_progress:D
       5: return

  public void de$sciss$processor$impl$ProcessorBase$$_lastProg_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #279                // Field de$sciss$processor$impl$ProcessorBase$$_lastProg:I
       5: return

  public void child_$eq(de.sciss.processor.ProcessorLike);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #282                // Field child:Lde/sciss/processor/ProcessorLike;
       5: return

  public void de$sciss$processor$impl$ProcessorBase$_setter_$promise_$eq(scala.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #285                // Field promise:Lscala/concurrent/Promise;
       5: return

  public void de$sciss$processor$impl$ProcessorBase$_setter_$progressResolution_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #287                // Field progressResolution:I
       5: return

  public scala.concurrent.ExecutionContext executionContext();
    Code:
       0: aload_0
       1: invokestatic  #305                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.executionContext$:(Lde/sciss/processor/impl/ProcessorBase;)Lscala/concurrent/ExecutionContext;
       4: areturn

  public void start(scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #310                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.start$:(Lde/sciss/processor/impl/ProcessorBase;Lscala/concurrent/ExecutionContext;)V
       5: return

  public scala.concurrent.Future peerFuture();
    Code:
       0: aload_0
       1: invokestatic  #315                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.peerFuture$:(Lde/sciss/processor/impl/ProcessorBase;)Lscala/concurrent/Future;
       4: areturn

  public void notifyAborted();
    Code:
       0: aload_0
       1: invokestatic  #319                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.notifyAborted$:(Lde/sciss/processor/impl/ProcessorBase;)V
       4: return

  public void abort();
    Code:
       0: aload_0
       1: invokestatic  #323                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.abort$:(Lde/sciss/processor/impl/ProcessorBase;)V
       4: return

  public void checkAborted();
    Code:
       0: aload_0
       1: invokestatic  #327                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.checkAborted$:(Lde/sciss/processor/impl/ProcessorBase;)V
       4: return

  public boolean aborted();
    Code:
       0: aload_0
       1: invokestatic  #332                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.aborted$:(Lde/sciss/processor/impl/ProcessorBase;)Z
       4: ireturn

  public void progress_$eq(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #337                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.progress_$eq$:(Lde/sciss/processor/impl/ProcessorBase;D)V
       5: return

  public double progress();
    Code:
       0: aload_0
       1: invokestatic  #342                // InterfaceMethod de/sciss/processor/impl/ProcessorBase.progress$:(Lde/sciss/processor/impl/ProcessorBase;)D
       4: dreturn

  public boolean isOnline(de.sciss.lucre.synth.RT);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #349                // InterfaceMethod de/sciss/lucre/synth/Buffer$ProxyResource.isOnline$:(Lde/sciss/lucre/synth/Buffer$ProxyResource;Lde/sciss/lucre/synth/RT;)Z
       5: ireturn

  public int timeStamp(de.sciss.lucre.synth.RT);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #356                // InterfaceMethod de/sciss/lucre/synth/Buffer$ProxyResource.timeStamp$:(Lde/sciss/lucre/synth/Buffer$ProxyResource;Lde/sciss/lucre/synth/RT;)I
       5: ireturn

  public void timeStamp_$eq(int, de.sciss.lucre.synth.RT);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #362                // InterfaceMethod de/sciss/lucre/synth/Buffer$ProxyResource.timeStamp_$eq$:(Lde/sciss/lucre/synth/Buffer$ProxyResource;ILde/sciss/lucre/synth/RT;)V
       6: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #368                // InterfaceMethod de/sciss/lucre/synth/Buffer$ProxyResource.toString$:(Lde/sciss/lucre/synth/Buffer$ProxyResource;)Ljava/lang/String;
       4: areturn

  public de.sciss.lucre.synth.Server server();
    Code:
       0: aload_0
       1: invokestatic  #374                // InterfaceMethod de/sciss/lucre/synth/Buffer$ProxyResource.server$:(Lde/sciss/lucre/synth/Buffer$ProxyResource;)Lde/sciss/lucre/synth/Server;
       4: areturn

  public int blockSize();
    Code:
       0: aload_0
       1: getfield      #53                 // Field blockSize:I
       4: ireturn

  public de.sciss.lucre.synth.Buffer buf();
    Code:
       0: aload_0
       1: getfield      #57                 // Field buf:Lde/sciss/lucre/synth/Buffer;
       4: areturn

  public abstract Next prepareNext(int, int, double, de.sciss.lucre.synth.RT);

  public final scala.concurrent.Future<scala.runtime.BoxedUnit> awaitFut(scala.concurrent.Future<java.lang.Object>, double, scala.Function0<scala.concurrent.Future<scala.runtime.BoxedUnit>>);
    Code:
       0: aload_1
       1: invokeinterface #389,  1          // InterfaceMethod scala/concurrent/Future.isCompleted:()Z
       6: ifeq          45
       9: aload_0
      10: dload_2
      11: invokevirtual #391                // Method progress_$eq:(D)V
      14: aload_0
      15: invokevirtual #393                // Method progress:()D
      18: dconst_1
      19: dcmpl
      20: ifne          32
      23: getstatic     #398                // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      26: invokevirtual #401                // Method scala/concurrent/Future$.unit:()Lscala/concurrent/Future;
      29: goto          42
      32: aload         4
      34: invokeinterface #405,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      39: checkcast     #7                  // class scala/concurrent/Future
      42: goto          95
      45: getstatic     #410                // Field de/sciss/lucre/synth/Executor$.MODULE$:Lde/sciss/lucre/synth/Executor$;
      48: aload_1
      49: lconst_1
      50: getstatic     #416                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      53: invokevirtual #420                // Method de/sciss/lucre/synth/Executor$.timeOut:(Lscala/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lscala/concurrent/Future;
      56: new           #21                 // class de/sciss/proc/impl/BufferWrite$$anon$4
      59: dup
      60: invokespecial #421                // Method de/sciss/proc/impl/BufferWrite$$anon$4."<init>":()V
      63: aload_0
      64: invokevirtual #423                // Method executionContext:()Lscala/concurrent/ExecutionContext;
      67: invokeinterface #425,  3          // InterfaceMethod scala/concurrent/Future.recover:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      72: astore        5
      74: aload         5
      76: aload_0
      77: aload_1
      78: dload_2
      79: aload         4
      81: invokedynamic #446,  0            // InvokeDynamic #0:apply:(Lde/sciss/proc/impl/BufferWrite$Impl;Lscala/concurrent/Future;DLscala/Function0;)Lscala/Function1;
      86: aload_0
      87: invokevirtual #423                // Method executionContext:()Lscala/concurrent/ExecutionContext;
      90: invokeinterface #448,  3          // InterfaceMethod scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      95: areturn

  public scala.Option<Next> nextChunk();
    Code:
       0: getstatic     #457                // Field scala/concurrent/stm/TxnExecutor$.MODULE$:Lscala/concurrent/stm/TxnExecutor$;
       3: invokevirtual #461                // Method scala/concurrent/stm/TxnExecutor$.defaultAtomic:()Lscala/concurrent/stm/TxnExecutor;
       6: aload_0
       7: invokedynamic #470,  0            // InvokeDynamic #1:apply:(Lde/sciss/proc/impl/BufferWrite$Impl;)Lscala/Function1;
      12: getstatic     #475                // Field scala/concurrent/stm/MaybeTxn$.MODULE$:Lscala/concurrent/stm/MaybeTxn$;
      15: invokevirtual #479                // Method scala/concurrent/stm/MaybeTxn$.unknown:()Lscala/concurrent/stm/MaybeTxn;
      18: invokeinterface #484,  3          // InterfaceMethod scala/concurrent/stm/TxnExecutor.apply:(Lscala/Function1;Lscala/concurrent/stm/MaybeTxn;)Ljava/lang/Object;
      23: checkcast     #486                // class scala/Option
      26: areturn

  public void dispose(de.sciss.lucre.synth.RT);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #497,  0            // InvokeDynamic #2:apply$mcV$sp:(Lde/sciss/proc/impl/BufferWrite$Impl;)Lscala/runtime/java8/JFunction0$mcV$sp;
       7: invokeinterface #503,  2          // InterfaceMethod de/sciss/lucre/synth/RT.afterCommit:(Lscala/Function0;)V
      12: return

  public void dispose(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #499                // class de/sciss/lucre/synth/RT
       5: invokevirtual #505                // Method dispose:(Lde/sciss/lucre/synth/RT;)V
       8: return

  public scala.concurrent.Awaitable ready(scala.concurrent.duration.Duration, scala.concurrent.CanAwait);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #508                // Method ready:(Lscala/concurrent/duration/Duration;Lscala/concurrent/CanAwait;)Lde/sciss/processor/impl/FutureProxy;
       6: areturn

  private final scala.concurrent.Future awaitFut$$anonfun$1(scala.concurrent.Future, double, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #514                // Method checkAborted:()V
       4: aload_0
       5: aload_1
       6: dload_2
       7: aload         4
       9: invokevirtual #516                // Method awaitFut:(Lscala/concurrent/Future;DLscala/Function0;)Lscala/concurrent/Future;
      12: areturn

  private final scala.Option nextChunk$$anonfun$1(scala.concurrent.stm.InTxn);
    Code:
       0: aload_0
       1: getfield      #82                 // Field offsetRef:Lscala/concurrent/stm/Ref;
       4: aload_1
       5: invokeinterface #520,  2          // InterfaceMethod scala/concurrent/stm/Ref.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #526                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      13: istore_2
      14: getstatic     #531                // Field scala/math/package$.MODULE$:Lscala/math/package$;
      17: aload_0
      18: getfield      #55                 // Field numFrames:I
      21: iload_2
      22: isub
      23: aload_0
      24: invokevirtual #533                // Method blockSize:()I
      27: invokevirtual #537                // Method scala/math/package$.min:(II)I
      30: istore_3
      31: iload_2
      32: iload_3
      33: iadd
      34: istore        4
      36: iload_3
      37: iconst_0
      38: if_icmple     141
      41: aload_0
      42: getfield      #82                 // Field offsetRef:Lscala/concurrent/stm/Ref;
      45: iload         4
      47: invokestatic  #541                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      50: aload_1
      51: invokeinterface #544,  3          // InterfaceMethod scala/concurrent/stm/Ref.update:(Ljava/lang/Object;Ljava/lang/Object;)V
      56: getstatic     #549                // Field de/sciss/lucre/synth/RT$.MODULE$:Lde/sciss/lucre/synth/RT$;
      59: aload_1
      60: invokevirtual #553                // Method de/sciss/lucre/synth/RT$.wrap:(Lscala/concurrent/stm/InTxn;)Lde/sciss/lucre/synth/RT;
      63: astore        5
      65: aload_0
      66: invokevirtual #555                // Method buf:()Lde/sciss/lucre/synth/Buffer;
      69: aload         5
      71: invokeinterface #557,  2          // InterfaceMethod de/sciss/lucre/synth/Buffer.isOnline:(Lde/sciss/lucre/synth/RT;)Z
      76: ifeq          135
      79: iload         4
      81: aload_0
      82: getfield      #55                 // Field numFrames:I
      85: if_icmpne     92
      88: dconst_1
      89: goto          110
      92: getstatic     #531                // Field scala/math/package$.MODULE$:Lscala/math/package$;
      95: ldc2_w        #558                // double 0.9999d
      98: iload         4
     100: i2d
     101: aload_0
     102: getfield      #55                 // Field numFrames:I
     105: i2d
     106: ddiv
     107: invokevirtual #562                // Method scala/math/package$.min:(DD)D
     110: dstore        6
     112: aload_0
     113: iload_2
     114: iload_3
     115: dload         6
     117: aload         5
     119: invokevirtual #564                // Method prepareNext:(IIDLde/sciss/lucre/synth/RT;)Ljava/lang/Object;
     122: astore        8
     124: getstatic     #569                // Field scala/Some$.MODULE$:Lscala/Some$;
     127: aload         8
     129: invokevirtual #572                // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
     132: goto          138
     135: getstatic     #577                // Field scala/None$.MODULE$:Lscala/None$;
     138: goto          144
     141: getstatic     #577                // Field scala/None$.MODULE$:Lscala/None$;
     144: areturn

  private final void dispose$$anonfun$1();
    Code:
       0: aload_0
       1: invokevirtual #585                // Method abort:()V
       4: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #597,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
