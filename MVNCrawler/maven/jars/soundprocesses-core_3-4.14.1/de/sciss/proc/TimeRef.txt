Compiled from "TimeRef.scala"
public final class de.sciss.proc.TimeRef implements de.sciss.proc.TimeRef$Option,scala.Product,java.io.Serializable {
  private final de.sciss.span.Span$HasStart span;

  private final long offset;

  public static double SampleRate();
    Code:
       0: getstatic     #35                 // Field de/sciss/proc/TimeRef$.MODULE$:Lde/sciss/proc/TimeRef$;
       3: invokevirtual #37                 // Method de/sciss/proc/TimeRef$.SampleRate:()D
       6: dreturn

  public static de.sciss.proc.TimeRef apply(de.sciss.span.Span$HasStart, long);
    Code:
       0: getstatic     #35                 // Field de/sciss/proc/TimeRef$.MODULE$:Lde/sciss/proc/TimeRef$;
       3: aload_0
       4: lload_1
       5: invokevirtual #41                 // Method de/sciss/proc/TimeRef$.apply:(Lde/sciss/span/Span$HasStart;J)Lde/sciss/proc/TimeRef;
       8: areturn

  public static java.lang.String framesAndSecs(long);
    Code:
       0: getstatic     #35                 // Field de/sciss/proc/TimeRef$.MODULE$:Lde/sciss/proc/TimeRef$;
       3: lload_0
       4: invokevirtual #45                 // Method de/sciss/proc/TimeRef$.framesAndSecs:(J)Ljava/lang/String;
       7: areturn

  public static java.lang.String framesToSecs(long);
    Code:
       0: getstatic     #35                 // Field de/sciss/proc/TimeRef$.MODULE$:Lde/sciss/proc/TimeRef$;
       3: lload_0
       4: invokevirtual #48                 // Method de/sciss/proc/TimeRef$.framesToSecs:(J)Ljava/lang/String;
       7: areturn

  public static de.sciss.proc.TimeRef fromProduct(scala.Product);
    Code:
       0: getstatic     #35                 // Field de/sciss/proc/TimeRef$.MODULE$:Lde/sciss/proc/TimeRef$;
       3: aload_0
       4: invokevirtual #52                 // Method de/sciss/proc/TimeRef$.fromProduct:(Lscala/Product;)Lde/sciss/proc/TimeRef;
       7: areturn

  public static java.lang.String spanAndSecs(de.sciss.span.SpanLike);
    Code:
       0: getstatic     #35                 // Field de/sciss/proc/TimeRef$.MODULE$:Lde/sciss/proc/TimeRef$;
       3: aload_0
       4: invokevirtual #56                 // Method de/sciss/proc/TimeRef$.spanAndSecs:(Lde/sciss/span/SpanLike;)Ljava/lang/String;
       7: areturn

  public static java.lang.String spanToSecs(de.sciss.span.SpanLike);
    Code:
       0: getstatic     #35                 // Field de/sciss/proc/TimeRef$.MODULE$:Lde/sciss/proc/TimeRef$;
       3: aload_0
       4: invokevirtual #59                 // Method de/sciss/proc/TimeRef$.spanToSecs:(Lde/sciss/span/SpanLike;)Ljava/lang/String;
       7: areturn

  public static de.sciss.proc.TimeRef unapply(de.sciss.proc.TimeRef);
    Code:
       0: getstatic     #35                 // Field de/sciss/proc/TimeRef$.MODULE$:Lde/sciss/proc/TimeRef$;
       3: aload_0
       4: invokevirtual #63                 // Method de/sciss/proc/TimeRef$.unapply:(Lde/sciss/proc/TimeRef;)Lde/sciss/proc/TimeRef;
       7: areturn

  public static de.sciss.proc.TimeRef$Option undefined();
    Code:
       0: getstatic     #35                 // Field de/sciss/proc/TimeRef$.MODULE$:Lde/sciss/proc/TimeRef$;
       3: invokevirtual #67                 // Method de/sciss/proc/TimeRef$.undefined:()Lde/sciss/proc/TimeRef$Option;
       6: areturn

  public de.sciss.proc.TimeRef(de.sciss.span.Span$HasStart, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field span:Lde/sciss/span/Span$HasStart;
       5: aload_0
       6: lload_2
       7: putfield      #73                 // Field offset:J
      10: aload_0
      11: invokespecial #76                 // Method java/lang/Object."<init>":()V
      14: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #84                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #88                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public int hashCode();
    Code:
       0: ldc           #91                 // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #95                 // Method productPrefix:()Ljava/lang/String;
       8: invokevirtual #99                 // Method java/lang/String.hashCode:()I
      11: invokestatic  #105                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #108                // Method span:()Lde/sciss/span/Span$HasStart;
      20: invokestatic  #112                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #105                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #115                // Method offset:()J
      32: invokestatic  #119                // Method scala/runtime/Statics.longHash:(J)I
      35: invokestatic  #105                // Method scala/runtime/Statics.mix:(II)I
      38: istore_1
      39: iload_1
      40: iconst_2
      41: invokestatic  #122                // Method scala/runtime/Statics.finalizeHash:(II)I
      44: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     77
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class de/sciss/proc/TimeRef
      11: ifeq          70
      14: aload_2
      15: checkcast     #2                  // class de/sciss/proc/TimeRef
      18: astore_3
      19: aload_0
      20: invokevirtual #115                // Method offset:()J
      23: aload_3
      24: invokevirtual #115                // Method offset:()J
      27: lcmp
      28: ifne          66
      31: aload_0
      32: invokevirtual #108                // Method span:()Lde/sciss/span/Span$HasStart;
      35: aload_3
      36: invokevirtual #108                // Method span:()Lde/sciss/span/Span$HasStart;
      39: astore        4
      41: dup
      42: ifnonnull     54
      45: pop
      46: aload         4
      48: ifnull        62
      51: goto          66
      54: aload         4
      56: invokevirtual #127                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      59: ifeq          66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: goto          74
      70: iconst_0
      71: goto          74
      74: ifeq          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ireturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class de/sciss/proc/TimeRef
       4: ireturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #133                // String TimeRef
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     14
       7: aload_0
       8: invokevirtual #139                // Method _1:()Lde/sciss/span/Span$HasStart;
      11: goto          44
      14: iconst_1
      15: iload_2
      16: if_icmpne     29
      19: aload_0
      20: invokevirtual #142                // Method _2:()J
      23: invokestatic  #148                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      26: goto          44
      29: new           #150                // class java/lang/IndexOutOfBoundsException
      32: dup
      33: iload_1
      34: invokestatic  #154                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      37: invokevirtual #159                // Method java/lang/Integer.toString:()Ljava/lang/String;
      40: invokespecial #162                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: areturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     12
       7: ldc           #166                // String span
       9: goto          37
      12: iconst_1
      13: iload_2
      14: if_icmpne     22
      17: ldc           #167                // String offset
      19: goto          37
      22: new           #150                // class java/lang/IndexOutOfBoundsException
      25: dup
      26: iload_1
      27: invokestatic  #154                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      30: invokevirtual #159                // Method java/lang/Integer.toString:()Ljava/lang/String;
      33: invokespecial #162                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: areturn

  public de.sciss.span.Span$HasStart span();
    Code:
       0: aload_0
       1: getfield      #71                 // Field span:Lde/sciss/span/Span$HasStart;
       4: areturn

  public long offset();
    Code:
       0: aload_0
       1: getfield      #73                 // Field offset:J
       4: lreturn

  public long frame();
    Code:
       0: aload_0
       1: invokevirtual #115                // Method offset:()J
       4: aload_0
       5: invokevirtual #108                // Method span:()Lde/sciss/span/Span$HasStart;
       8: invokeinterface #171,  1          // InterfaceMethod de/sciss/span/Span$HasStart.start:()J
      13: ladd
      14: lreturn

  public boolean isDefined();
    Code:
       0: iconst_1
       1: ireturn

  public de.sciss.proc.TimeRef force();
    Code:
       0: aload_0
       1: areturn

  public de.sciss.proc.TimeRef shift(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifne          10
       6: aload_0
       7: goto          30
      10: aload_0
      11: invokevirtual #115                // Method offset:()J
      14: lload_1
      15: ladd
      16: lstore_3
      17: aload_0
      18: invokevirtual #181                // Method copy$default$1:()Lde/sciss/span/Span$HasStart;
      21: astore        5
      23: aload_0
      24: aload         5
      26: lload_3
      27: invokevirtual #184                // Method copy:(Lde/sciss/span/Span$HasStart;J)Lde/sciss/proc/TimeRef;
      30: areturn

  public de.sciss.proc.TimeRef updateOffset(long);
    Code:
       0: aload_0
       1: invokevirtual #115                // Method offset:()J
       4: lload_1
       5: lcmp
       6: ifne          13
       9: aload_0
      10: goto          22
      13: aload_0
      14: aload_0
      15: invokevirtual #181                // Method copy$default$1:()Lde/sciss/span/Span$HasStart;
      18: lload_1
      19: invokevirtual #184                // Method copy:(Lde/sciss/span/Span$HasStart;J)Lde/sciss/proc/TimeRef;
      22: areturn

  public de.sciss.proc.TimeRef$Option child(de.sciss.span.SpanLike);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #17                 // class de/sciss/span/Span$HasStart
       6: ifeq          36
       9: aload_2
      10: checkcast     #17                 // class de/sciss/span/Span$HasStart
      13: astore_3
      14: new           #2                  // class de/sciss/proc/TimeRef
      17: dup
      18: aload_3
      19: aload_0
      20: invokevirtual #115                // Method offset:()J
      23: aload_3
      24: invokeinterface #171,  1          // InterfaceMethod de/sciss/span/Span$HasStart.start:()J
      29: lsub
      30: invokespecial #190                // Method "<init>":(Lde/sciss/span/Span$HasStart;J)V
      33: goto          130
      36: aload_0
      37: invokevirtual #108                // Method span:()Lde/sciss/span/Span$HasStart;
      40: aload_0
      41: invokevirtual #108                // Method span:()Lde/sciss/span/Span$HasStart;
      44: invokeinterface #171,  1          // InterfaceMethod de/sciss/span/Span$HasStart.start:()J
      49: lneg
      50: invokeinterface #193,  3          // InterfaceMethod de/sciss/span/Span$HasStart.shift:(J)Lde/sciss/span/Span$HasStart;
      55: astore        4
      57: aload         4
      59: aload_1
      60: invokeinterface #197,  2          // InterfaceMethod de/sciss/span/Span$HasStart.intersect:(Lde/sciss/span/SpanLike;)Lde/sciss/span/Span$HasStartOrVoid;
      65: astore        5
      67: aload         5
      69: astore        6
      71: aload         6
      73: instanceof    #17                 // class de/sciss/span/Span$HasStart
      76: ifeq          121
      79: aload         6
      81: checkcast     #17                 // class de/sciss/span/Span$HasStart
      84: astore        7
      86: aload         7
      88: invokeinterface #171,  1          // InterfaceMethod de/sciss/span/Span$HasStart.start:()J
      93: lconst_0
      94: lcmp
      95: ifeq          105
      98: getstatic     #202                // Field scala/runtime/Scala3RunTime$.MODULE$:Lscala/runtime/Scala3RunTime$;
     101: invokevirtual #206                // Method scala/runtime/Scala3RunTime$.assertFailed:()Lscala/runtime/Nothing$;
     104: athrow
     105: new           #2                  // class de/sciss/proc/TimeRef
     108: dup
     109: aload         7
     111: aload_0
     112: invokevirtual #115                // Method offset:()J
     115: invokespecial #190                // Method "<init>":(Lde/sciss/span/Span$HasStart;J)V
     118: goto          127
     121: getstatic     #209                // Field de/sciss/proc/TimeRef$Undefined$.MODULE$:Lde/sciss/proc/TimeRef$Undefined$;
     124: goto          127
     127: goto          130
     130: checkcast     #6                  // class de/sciss/proc/TimeRef$Option
     133: areturn

  public boolean hasEnded();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method span:()Lde/sciss/span/Span$HasStart;
       4: aload_0
       5: invokevirtual #115                // Method offset:()J
       8: invokeinterface #220,  3          // InterfaceMethod de/sciss/span/Span$HasStart.compareStop:(J)I
      13: iconst_0
      14: if_icmpgt     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public java.lang.String toString();
    Code:
       0: new           #222                // class java/lang/StringBuilder
       3: dup
       4: ldc           #223                // int 26
       6: invokespecial #226                // Method java/lang/StringBuilder."<init>":(I)V
       9: ldc           #228                // String TimeRef(span =
      11: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: getstatic     #35                 // Field de/sciss/proc/TimeRef$.MODULE$:Lde/sciss/proc/TimeRef$;
      17: aload_0
      18: invokevirtual #108                // Method span:()Lde/sciss/span/Span$HasStart;
      21: invokevirtual #56                 // Method de/sciss/proc/TimeRef$.spanAndSecs:(Lde/sciss/span/SpanLike;)Ljava/lang/String;
      24: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #234                // String , frame =
      29: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: getstatic     #35                 // Field de/sciss/proc/TimeRef$.MODULE$:Lde/sciss/proc/TimeRef$;
      35: aload_0
      36: invokevirtual #236                // Method frame:()J
      39: invokevirtual #45                 // Method de/sciss/proc/TimeRef$.framesAndSecs:(J)Ljava/lang/String;
      42: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #238                // String )
      47: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: areturn

  public de.sciss.proc.TimeRef copy(de.sciss.span.Span$HasStart, long);
    Code:
       0: new           #2                  // class de/sciss/proc/TimeRef
       3: dup
       4: aload_1
       5: lload_2
       6: invokespecial #190                // Method "<init>":(Lde/sciss/span/Span$HasStart;J)V
       9: areturn

  public de.sciss.span.Span$HasStart copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method span:()Lde/sciss/span/Span$HasStart;
       4: areturn

  public long copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #115                // Method offset:()J
       4: lreturn

  public de.sciss.span.Span$HasStart _1();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method span:()Lde/sciss/span/Span$HasStart;
       4: areturn

  public long _2();
    Code:
       0: aload_0
       1: invokevirtual #115                // Method offset:()J
       4: lreturn

  public de.sciss.span.SpanLike span();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method span:()Lde/sciss/span/Span$HasStart;
       4: areturn
}
