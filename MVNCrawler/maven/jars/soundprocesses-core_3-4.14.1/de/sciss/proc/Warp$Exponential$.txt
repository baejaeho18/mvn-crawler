Compiled from "Warp.scala"
public final class de.sciss.proc.Warp$Exponential$ implements de.sciss.proc.Warp,scala.Product,java.io.Serializable,scala.deriving.Mirror$Singleton {
  public static final de.sciss.proc.Warp$Exponential$ MODULE$;

  public de.sciss.proc.Warp$Exponential$();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class de/sciss/proc/Warp$Exponential$
       3: dup
       4: invokespecial #26                 // Method "<init>":()V
       7: putstatic     #28                 // Field MODULE$:Lde/sciss/proc/Warp$Exponential$;
      10: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #34                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #38                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.deriving.Mirror$Singleton fromProduct(scala.Product);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #45                 // InterfaceMethod scala/deriving/Mirror$Singleton.fromProduct$:(Lscala/deriving/Mirror$Singleton;Lscala/Product;)Lscala/deriving/Mirror$Singleton;
       5: areturn

  private java.lang.Object writeReplace();
    Code:
       0: new           #50                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class de/sciss/proc/Warp$Exponential$
       6: invokespecial #53                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public int hashCode();
    Code:
       0: ldc           #56                 // int -97545947
       2: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #60                 // String Exponential
       2: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class de/sciss/proc/Warp$Exponential$
       4: ireturn

  public int productArity();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #60                 // String Exponential
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: new           #71                 // class java/lang/IndexOutOfBoundsException
       5: dup
       6: iload_1
       7: invokestatic  #77                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      10: invokevirtual #81                 // Method java/lang/Integer.toString:()Ljava/lang/String;
      13: invokespecial #84                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: athrow
      18: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: new           #71                 // class java/lang/IndexOutOfBoundsException
       5: dup
       6: iload_1
       7: invokestatic  #77                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      10: invokevirtual #81                 // Method java/lang/Integer.toString:()Ljava/lang/String;
      13: invokespecial #84                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: athrow
      18: athrow

  public final int id();
    Code:
       0: iconst_1
       1: ireturn

  public double map(de.sciss.proc.ParamSpec, double);
    Code:
       0: new           #96                 // class de/sciss/numbers/RichDouble
       3: dup
       4: getstatic     #101                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
       7: aload_1
       8: invokevirtual #107                // Method de/sciss/proc/ParamSpec.ratio:()D
      11: invokevirtual #111                // Method de/sciss/synth/Import$.doubleNumberWrapper:(D)D
      14: invokespecial #114                // Method de/sciss/numbers/RichDouble."<init>":(D)V
      17: dload_2
      18: invokevirtual #117                // Method de/sciss/numbers/RichDouble.pow:(D)D
      21: aload_1
      22: invokevirtual #120                // Method de/sciss/proc/ParamSpec.lo:()D
      25: dmul
      26: dreturn

  public de.sciss.synth.GE map(de.sciss.proc.ParamSpec, de.sciss.synth.GE);
    Code:
       0: getstatic     #128                // Field de/sciss/synth/GEOps$.MODULE$:Lde/sciss/synth/GEOps$;
       3: getstatic     #101                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
       6: new           #130                // class de/sciss/synth/RichDouble
       9: dup
      10: getstatic     #101                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      13: aload_1
      14: invokevirtual #133                // Method de/sciss/proc/ParamSpec.hi:()D
      17: aload_1
      18: invokevirtual #120                // Method de/sciss/proc/ParamSpec.lo:()D
      21: ddiv
      22: invokevirtual #136                // Method de/sciss/synth/Import$.doubleGEWrapper:(D)D
      25: invokespecial #137                // Method de/sciss/synth/RichDouble."<init>":(D)V
      28: aload_2
      29: invokevirtual #140                // Method de/sciss/synth/RichDouble.pow:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      32: invokevirtual #143                // Method de/sciss/synth/Import$.geOps:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      35: getstatic     #148                // Field de/sciss/synth/GE$.MODULE$:Lde/sciss/synth/GE$;
      38: aload_1
      39: invokevirtual #120                // Method de/sciss/proc/ParamSpec.lo:()D
      42: invokevirtual #152                // Method de/sciss/synth/GE$.const:(D)Lde/sciss/synth/ugen/Constant;
      45: invokevirtual #156                // Method de/sciss/synth/GEOps$.$times$extension:(Lde/sciss/synth/GE;Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      48: areturn

  public double inverseMap(de.sciss.proc.ParamSpec, double);
    Code:
       0: getstatic     #163                // Field de/sciss/numbers/RichDouble$.MODULE$:Lde/sciss/numbers/RichDouble$;
       3: getstatic     #101                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
       6: dload_2
       7: aload_1
       8: invokevirtual #120                // Method de/sciss/proc/ParamSpec.lo:()D
      11: ddiv
      12: invokevirtual #111                // Method de/sciss/synth/Import$.doubleNumberWrapper:(D)D
      15: invokevirtual #166                // Method de/sciss/numbers/RichDouble$.log$extension:(D)D
      18: getstatic     #163                // Field de/sciss/numbers/RichDouble$.MODULE$:Lde/sciss/numbers/RichDouble$;
      21: getstatic     #101                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      24: aload_1
      25: invokevirtual #107                // Method de/sciss/proc/ParamSpec.ratio:()D
      28: invokevirtual #111                // Method de/sciss/synth/Import$.doubleNumberWrapper:(D)D
      31: invokevirtual #166                // Method de/sciss/numbers/RichDouble$.log$extension:(D)D
      34: ddiv
      35: dreturn

  public de.sciss.synth.GE inverseMap(de.sciss.proc.ParamSpec, de.sciss.synth.GE);
    Code:
       0: getstatic     #128                // Field de/sciss/synth/GEOps$.MODULE$:Lde/sciss/synth/GEOps$;
       3: getstatic     #101                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
       6: getstatic     #128                // Field de/sciss/synth/GEOps$.MODULE$:Lde/sciss/synth/GEOps$;
       9: getstatic     #101                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      12: getstatic     #128                // Field de/sciss/synth/GEOps$.MODULE$:Lde/sciss/synth/GEOps$;
      15: getstatic     #101                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      18: aload_2
      19: invokevirtual #143                // Method de/sciss/synth/Import$.geOps:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      22: getstatic     #148                // Field de/sciss/synth/GE$.MODULE$:Lde/sciss/synth/GE$;
      25: aload_1
      26: invokevirtual #120                // Method de/sciss/proc/ParamSpec.lo:()D
      29: invokevirtual #152                // Method de/sciss/synth/GE$.const:(D)Lde/sciss/synth/ugen/Constant;
      32: invokevirtual #169                // Method de/sciss/synth/GEOps$.$div$extension:(Lde/sciss/synth/GE;Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      35: invokevirtual #143                // Method de/sciss/synth/Import$.geOps:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      38: invokevirtual #171                // Method de/sciss/synth/GEOps$.log$extension:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      41: invokevirtual #143                // Method de/sciss/synth/Import$.geOps:(Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      44: getstatic     #148                // Field de/sciss/synth/GE$.MODULE$:Lde/sciss/synth/GE$;
      47: getstatic     #163                // Field de/sciss/numbers/RichDouble$.MODULE$:Lde/sciss/numbers/RichDouble$;
      50: getstatic     #101                // Field de/sciss/synth/Import$.MODULE$:Lde/sciss/synth/Import$;
      53: aload_1
      54: invokevirtual #107                // Method de/sciss/proc/ParamSpec.ratio:()D
      57: invokevirtual #111                // Method de/sciss/synth/Import$.doubleNumberWrapper:(D)D
      60: invokevirtual #166                // Method de/sciss/numbers/RichDouble$.log$extension:(D)D
      63: invokevirtual #152                // Method de/sciss/synth/GE$.const:(D)Lde/sciss/synth/ugen/Constant;
      66: invokevirtual #169                // Method de/sciss/synth/GEOps$.$div$extension:(Lde/sciss/synth/GE;Lde/sciss/synth/GE;)Lde/sciss/synth/GE;
      69: areturn

  public void write(de.sciss.serial.DataOutput);
    Code:
       0: aload_1
       1: iconst_1
       2: invokeinterface #180,  2          // InterfaceMethod de/sciss/serial/DataOutput.writeShort:(I)V
       7: return

  public java.lang.Object fromProduct(scala.Product);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #184                // Method fromProduct:(Lscala/Product;)Lscala/deriving/Mirror$Singleton;
       5: areturn
}
