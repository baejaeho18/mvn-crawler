Compiled from "Transport.scala"
public interface de.sciss.proc.Transport<T extends de.sciss.lucre.Txn<T>> extends de.sciss.lucre.Disposable<T>, de.sciss.lucre.Observable<T, de.sciss.proc.Transport$Update<T>> {
  public static <T extends de.sciss.lucre.synth.Txn<T>> de.sciss.proc.Transport<T> apply(de.sciss.proc.Universe<T>, de.sciss.lucre.MapObjLike<T, java.lang.String, de.sciss.lucre.Form<T>>, T);
    Code:
       0: getstatic     #73                 // Field de/sciss/proc/Transport$.MODULE$:Lde/sciss/proc/Transport$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #75                 // Method de/sciss/proc/Transport$.apply:(Lde/sciss/proc/Universe;Lde/sciss/lucre/MapObjLike;Lde/sciss/lucre/synth/Txn;)Lde/sciss/proc/Transport;
       9: areturn

  public static <T extends de.sciss.lucre.synth.Txn<T>> de.sciss.lucre.MapObjLike<T, java.lang.String, de.sciss.lucre.Form<T>> apply$default$2();
    Code:
       0: getstatic     #73                 // Field de/sciss/proc/Transport$.MODULE$:Lde/sciss/proc/Transport$;
       3: invokevirtual #80                 // Method de/sciss/proc/Transport$.apply$default$2:()Lde/sciss/lucre/MapObjLike;
       6: areturn

  public abstract void play(T);

  public abstract void stop(T);

  public abstract void seek(long, T);

  public abstract long position(T);

  public abstract boolean isPlaying(T);

  public abstract scala.collection.immutable.Set<de.sciss.proc.AuralObj<T>> views(T);

  public abstract scala.Option<de.sciss.proc.AuralObj<T>> getView(de.sciss.lucre.Obj<T>, T);

  public abstract scala.Option<de.sciss.proc.AuralObj<T>> getViewById(de.sciss.lucre.Ident<T>, T);

  public abstract void addObject(de.sciss.lucre.Obj<T>, T);

  public abstract void removeObject(de.sciss.lucre.Obj<T>, T);

  public abstract scala.Option<de.sciss.proc.AuralContext<T>> contextOption(T);

  public abstract de.sciss.proc.Universe<T> universe();

  public abstract de.sciss.proc.Scheduler<T> scheduler();
}
