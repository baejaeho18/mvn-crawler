Compiled from "Runner.scala"
public interface de.sciss.proc.Runner<T extends de.sciss.lucre.Txn<T>> extends de.sciss.proc.ViewBase<T>, de.sciss.lucre.expr.IControl<T> {
  public static final long OFFSET$_m_0;

  public static <T extends de.sciss.lucre.Txn<T>> de.sciss.proc.Runner RunnerOps(de.sciss.proc.Runner<T>);
    Code:
       0: getstatic     #94                 // Field de/sciss/proc/Runner$.MODULE$:Lde/sciss/proc/Runner$;
       3: aload_0
       4: invokevirtual #96                 // Method de/sciss/proc/Runner$.RunnerOps:(Lde/sciss/proc/Runner;)Lde/sciss/proc/Runner;
       7: areturn

  public static void addFactory(de.sciss.proc.Runner$Factory);
    Code:
       0: getstatic     #94                 // Field de/sciss/proc/Runner$.MODULE$:Lde/sciss/proc/Runner$;
       3: aload_0
       4: invokevirtual #100                // Method de/sciss/proc/Runner$.addFactory:(Lde/sciss/proc/Runner$Factory;)V
       7: return

  public static <T extends de.sciss.lucre.Txn<T>> de.sciss.proc.Runner<T> apply(de.sciss.lucre.Obj<T>, T, de.sciss.proc.Universe<T>);
    Code:
       0: getstatic     #94                 // Field de/sciss/proc/Runner$.MODULE$:Lde/sciss/proc/Runner$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #105                // Method de/sciss/proc/Runner$.apply:(Lde/sciss/lucre/Obj;Lde/sciss/lucre/Txn;Lde/sciss/proc/Universe;)Lde/sciss/proc/Runner;
       9: areturn

  public static <T extends de.sciss.lucre.Txn<T>> de.sciss.lucre.MapObjLike<T, java.lang.String, de.sciss.lucre.Form<T>> emptyAttr();
    Code:
       0: getstatic     #94                 // Field de/sciss/proc/Runner$.MODULE$:Lde/sciss/proc/Runner$;
       3: invokevirtual #110                // Method de/sciss/proc/Runner$.emptyAttr:()Lde/sciss/lucre/MapObjLike;
       6: areturn

  public static scala.collection.Iterable<de.sciss.proc.Runner$Factory> factories();
    Code:
       0: getstatic     #94                 // Field de/sciss/proc/Runner$.MODULE$:Lde/sciss/proc/Runner$;
       3: invokevirtual #115                // Method de/sciss/proc/Runner$.factories:()Lscala/collection/Iterable;
       6: areturn

  public static <T extends de.sciss.lucre.Txn<T>> scala.Option<de.sciss.proc.Runner<T>> get(de.sciss.lucre.Obj<T>, T, de.sciss.proc.Universe<T>);
    Code:
       0: getstatic     #94                 // Field de/sciss/proc/Runner$.MODULE$:Lde/sciss/proc/Runner$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #120                // Method de/sciss/proc/Runner$.get:(Lde/sciss/lucre/Obj;Lde/sciss/lucre/Txn;Lde/sciss/proc/Universe;)Lscala/Option;
       9: areturn

  public static scala.Option<de.sciss.proc.Runner$Factory> getFactory(de.sciss.lucre.Obj$Type);
    Code:
       0: getstatic     #94                 // Field de/sciss/proc/Runner$.MODULE$:Lde/sciss/proc/Runner$;
       3: aload_0
       4: invokevirtual #125                // Method de/sciss/proc/Runner$.getFactory:(Lde/sciss/lucre/Obj$Type;)Lscala/Option;
       7: areturn

  private static {};
    Code:
       0: getstatic     #132                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #90                 // class de/sciss/proc/Runner$
       5: ldc           #134                // String 0bitmap$2
       7: invokevirtual #138                // Method scala/runtime/LazyVals$.getOffset:(Ljava/lang/Class;Ljava/lang/String;)J
      10: putstatic     #140                // Field OFFSET$_m_0:J
      13: return

  public abstract de.sciss.proc.Runner$Messages<T> messages();

  public abstract de.sciss.proc.Runner$Progress<T> progress();

  public abstract de.sciss.proc.Universe<T> universe();

  public abstract void prepare(de.sciss.lucre.MapObjLike<T, java.lang.String, de.sciss.lucre.Form<T>>, T);

  public static de.sciss.lucre.MapObjLike prepare$default$1$(de.sciss.proc.Runner);
    Code:
       0: aload_0
       1: invokespecial #160                // InterfaceMethod prepare$default$1:()Lde/sciss/lucre/MapObjLike;
       4: areturn

  public default de.sciss.lucre.MapObjLike<T, java.lang.String, de.sciss.lucre.Form<T>> prepare$default$1();
    Code:
       0: getstatic     #94                 // Field de/sciss/proc/Runner$.MODULE$:Lde/sciss/proc/Runner$;
       3: invokevirtual #110                // Method de/sciss/proc/Runner$.emptyAttr:()Lde/sciss/lucre/MapObjLike;
       6: areturn

  public abstract void run(T);
}
