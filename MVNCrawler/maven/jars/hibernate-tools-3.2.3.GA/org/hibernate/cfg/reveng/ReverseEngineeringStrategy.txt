Compiled from "ReverseEngineeringStrategy.java"
public interface org.hibernate.cfg.reveng.ReverseEngineeringStrategy {
  public abstract void setSettings(org.hibernate.cfg.reveng.ReverseEngineeringSettings);

  public abstract void configure(org.hibernate.cfg.reveng.ReverseEngineeringRuntimeInfo);

  public abstract void close();

  public abstract java.lang.String tableToClassName(org.hibernate.cfg.reveng.TableIdentifier);

  public abstract java.lang.String columnToPropertyName(org.hibernate.cfg.reveng.TableIdentifier, java.lang.String);

  public abstract boolean excludeTable(org.hibernate.cfg.reveng.TableIdentifier);

  public abstract boolean excludeColumn(org.hibernate.cfg.reveng.TableIdentifier, java.lang.String);

  public abstract java.lang.String columnToHibernateTypeName(org.hibernate.cfg.reveng.TableIdentifier, java.lang.String, int, int, int, int, boolean, boolean);

  public abstract java.util.List getForeignKeys(org.hibernate.cfg.reveng.TableIdentifier);

  public abstract java.lang.String getTableIdentifierStrategyName(org.hibernate.cfg.reveng.TableIdentifier);

  public abstract java.util.Properties getTableIdentifierProperties(org.hibernate.cfg.reveng.TableIdentifier);

  public abstract java.util.List getPrimaryKeyColumnNames(org.hibernate.cfg.reveng.TableIdentifier);

  public abstract java.lang.String classNameToCompositeIdName(java.lang.String);

  public abstract java.lang.String getOptimisticLockColumnName(org.hibernate.cfg.reveng.TableIdentifier);

  public abstract boolean useColumnForOptimisticLock(org.hibernate.cfg.reveng.TableIdentifier, java.lang.String);

  public abstract java.util.List getSchemaSelections();

  public abstract java.lang.String tableToIdentifierPropertyName(org.hibernate.cfg.reveng.TableIdentifier);

  public abstract java.lang.String tableToCompositeIdName(org.hibernate.cfg.reveng.TableIdentifier);

  public abstract java.util.Map tableToMetaAttributes(org.hibernate.cfg.reveng.TableIdentifier);

  public abstract java.util.Map columnToMetaAttributes(org.hibernate.cfg.reveng.TableIdentifier, java.lang.String);

  public abstract boolean excludeForeignKeyAsCollection(java.lang.String, org.hibernate.cfg.reveng.TableIdentifier, java.util.List, org.hibernate.cfg.reveng.TableIdentifier, java.util.List);

  public abstract boolean excludeForeignKeyAsManytoOne(java.lang.String, org.hibernate.cfg.reveng.TableIdentifier, java.util.List, org.hibernate.cfg.reveng.TableIdentifier, java.util.List);

  public abstract boolean isForeignKeyCollectionInverse(java.lang.String, org.hibernate.cfg.reveng.TableIdentifier, java.util.List, org.hibernate.cfg.reveng.TableIdentifier, java.util.List);

  public abstract boolean isForeignKeyCollectionLazy(java.lang.String, org.hibernate.cfg.reveng.TableIdentifier, java.util.List, org.hibernate.cfg.reveng.TableIdentifier, java.util.List);

  public abstract java.lang.String foreignKeyToCollectionName(java.lang.String, org.hibernate.cfg.reveng.TableIdentifier, java.util.List, org.hibernate.cfg.reveng.TableIdentifier, java.util.List, boolean);

  public abstract java.lang.String foreignKeyToEntityName(java.lang.String, org.hibernate.cfg.reveng.TableIdentifier, java.util.List, org.hibernate.cfg.reveng.TableIdentifier, java.util.List, boolean);

  public abstract boolean isManyToManyTable(org.hibernate.mapping.Table);

  public abstract java.lang.String foreignKeyToManyToManyName(org.hibernate.mapping.ForeignKey, org.hibernate.cfg.reveng.TableIdentifier, org.hibernate.mapping.ForeignKey, boolean);
}
