Compiled from "SQLTypeMapping.java"
public class org.hibernate.cfg.reveng.SQLTypeMapping implements java.lang.Comparable {
  public static final int UNKNOWN_LENGTH;

  public static final int UNKNOWN_PRECISION;

  public static final int UNKNOWN_SCALE;

  public static final java.lang.Boolean UNKNOWN_NULLABLE;

  private final int jdbcType;

  private int length;

  private int precision;

  private int scale;

  private java.lang.Boolean nullable;

  private java.lang.String hibernateType;

  public org.hibernate.cfg.reveng.SQLTypeMapping(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // int 2147483647
       7: putfield      #3                  // Field length:I
      10: aload_0
      11: ldc           #2                  // int 2147483647
      13: putfield      #4                  // Field precision:I
      16: aload_0
      17: ldc           #2                  // int 2147483647
      19: putfield      #5                  // Field scale:I
      22: aload_0
      23: iload_1
      24: putfield      #6                  // Field jdbcType:I
      27: return

  public org.hibernate.cfg.reveng.SQLTypeMapping(int, int, int, int, java.lang.Boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // int 2147483647
       7: putfield      #3                  // Field length:I
      10: aload_0
      11: ldc           #2                  // int 2147483647
      13: putfield      #4                  // Field precision:I
      16: aload_0
      17: ldc           #2                  // int 2147483647
      19: putfield      #5                  // Field scale:I
      22: aload_0
      23: iload_1
      24: putfield      #6                  // Field jdbcType:I
      27: aload_0
      28: iload_2
      29: putfield      #3                  // Field length:I
      32: aload_0
      33: iload_3
      34: putfield      #4                  // Field precision:I
      37: aload_0
      38: iload         4
      40: putfield      #5                  // Field scale:I
      43: aload_0
      44: aload         5
      46: putfield      #7                  // Field nullable:Ljava/lang/Boolean;
      49: return

  public void setLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field length:I
       5: return

  public void setHibernateType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field hibernateType:Ljava/lang/String;
       5: return

  public void setNullable(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field nullable:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getNullable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field nullable:Ljava/lang/Boolean;
       4: areturn

  public int getJDBCType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field jdbcType:I
       4: ireturn

  public java.lang.String getHibernateType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field hibernateType:Ljava/lang/String;
       4: areturn

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #3                  // Field length:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #9                  // class java/lang/StringBuffer
       3: dup
       4: invokespecial #10                 // Method java/lang/StringBuffer."<init>":()V
       7: aload_0
       8: invokevirtual #11                 // Method getJDBCType:()I
      11: invokevirtual #12                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      14: ldc           #13                 // String  l:
      16: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: aload_0
      20: invokevirtual #15                 // Method getLength:()I
      23: invokevirtual #12                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      26: ldc           #16                 // String  p:
      28: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      31: aload_0
      32: invokevirtual #17                 // Method getPrecision:()I
      35: invokevirtual #12                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      38: ldc           #18                 // String  s:
      40: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: aload_0
      44: invokevirtual #19                 // Method getScale:()I
      47: invokevirtual #12                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      50: ldc           #20                 // String  n:
      52: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      55: aload_0
      56: invokevirtual #21                 // Method getNullable:()Ljava/lang/Boolean;
      59: invokevirtual #22                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      62: ldc           #23                 // String  ht:
      64: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      67: aload_0
      68: invokevirtual #24                 // Method getHibernateType:()Ljava/lang/String;
      71: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      74: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      77: areturn

  public int getPrecision();
    Code:
       0: aload_0
       1: getfield      #4                  // Field precision:I
       4: ireturn

  public void setPrecision(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field precision:I
       5: return

  public int getScale();
    Code:
       0: aload_0
       1: getfield      #5                  // Field scale:I
       4: ireturn

  public void setScale(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field scale:I
       5: return

  public boolean match(int, int, int, int, boolean);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field jdbcType:I
       5: if_icmpne     87
       8: iload_2
       9: aload_0
      10: getfield      #3                  // Field length:I
      13: if_icmpeq     25
      16: aload_0
      17: getfield      #3                  // Field length:I
      20: ldc           #2                  // int 2147483647
      22: if_icmpne     87
      25: iload_3
      26: aload_0
      27: getfield      #4                  // Field precision:I
      30: if_icmpeq     42
      33: aload_0
      34: getfield      #4                  // Field precision:I
      37: ldc           #2                  // int 2147483647
      39: if_icmpne     87
      42: iload         4
      44: aload_0
      45: getfield      #5                  // Field scale:I
      48: if_icmpeq     60
      51: aload_0
      52: getfield      #5                  // Field scale:I
      55: ldc           #2                  // int 2147483647
      57: if_icmpne     87
      60: aload_0
      61: getfield      #7                  // Field nullable:Ljava/lang/Boolean;
      64: getstatic     #26                 // Field UNKNOWN_NULLABLE:Ljava/lang/Boolean;
      67: if_acmpeq     85
      70: aload_0
      71: getfield      #7                  // Field nullable:Ljava/lang/Boolean;
      74: iload         5
      76: invokestatic  #27                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      79: invokevirtual #28                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      82: ifeq          87
      85: iconst_1
      86: ireturn
      87: iconst_0
      88: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_1
       7: checkcast     #29                 // class org/hibernate/cfg/reveng/SQLTypeMapping
      10: astore_2
      11: aload_0
      12: getfield      #6                  // Field jdbcType:I
      15: aload_2
      16: getfield      #6                  // Field jdbcType:I
      19: if_icmpne     107
      22: aload_0
      23: getfield      #3                  // Field length:I
      26: aload_2
      27: getfield      #3                  // Field length:I
      30: if_icmpne     94
      33: aload_0
      34: getfield      #4                  // Field precision:I
      37: aload_2
      38: getfield      #4                  // Field precision:I
      41: if_icmpne     81
      44: aload_0
      45: getfield      #5                  // Field scale:I
      48: aload_2
      49: getfield      #5                  // Field scale:I
      52: if_icmpne     68
      55: aload_0
      56: aload_0
      57: getfield      #7                  // Field nullable:Ljava/lang/Boolean;
      60: aload_2
      61: getfield      #7                  // Field nullable:Ljava/lang/Boolean;
      64: invokespecial #30                 // Method compare:(Ljava/lang/Boolean;Ljava/lang/Boolean;)I
      67: ireturn
      68: aload_0
      69: aload_0
      70: getfield      #5                  // Field scale:I
      73: aload_2
      74: getfield      #5                  // Field scale:I
      77: invokespecial #31                 // Method compare:(II)I
      80: ireturn
      81: aload_0
      82: aload_0
      83: getfield      #4                  // Field precision:I
      86: aload_2
      87: getfield      #4                  // Field precision:I
      90: invokespecial #31                 // Method compare:(II)I
      93: ireturn
      94: aload_0
      95: aload_0
      96: getfield      #3                  // Field length:I
      99: aload_2
     100: getfield      #3                  // Field length:I
     103: invokespecial #31                 // Method compare:(II)I
     106: ireturn
     107: aload_0
     108: aload_0
     109: getfield      #6                  // Field jdbcType:I
     112: aload_2
     113: getfield      #6                  // Field jdbcType:I
     116: invokespecial #31                 // Method compare:(II)I
     119: ireturn

  private int compare(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpne     7
       5: iconst_0
       6: ireturn
       7: iload_1
       8: iload_2
       9: if_icmple     14
      12: iconst_1
      13: ireturn
      14: iload_1
      15: iload_2
      16: if_icmpge     21
      19: iconst_m1
      20: ireturn
      21: new           #32                 // class java/lang/IllegalStateException
      24: dup
      25: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":()V
      28: athrow

  private int compare(java.lang.Boolean, java.lang.Boolean);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_1
       8: getstatic     #26                 // Field UNKNOWN_NULLABLE:Ljava/lang/Boolean;
      11: if_acmpne     16
      14: iconst_1
      15: ireturn
      16: aload_2
      17: getstatic     #26                 // Field UNKNOWN_NULLABLE:Ljava/lang/Boolean;
      20: if_acmpne     25
      23: iconst_m1
      24: ireturn
      25: aload_1
      26: aload_2
      27: invokevirtual #28                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      30: ifeq          35
      33: iconst_0
      34: ireturn
      35: aload_1
      36: getstatic     #34                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      39: invokevirtual #28                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      42: ifeq          47
      45: iconst_1
      46: ireturn
      47: iconst_m1
      48: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method compareTo:(Ljava/lang/Object;)I
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field jdbcType:I
       4: aload_0
       5: getfield      #3                  // Field length:I
       8: iadd
       9: aload_0
      10: getfield      #4                  // Field precision:I
      13: iadd
      14: aload_0
      15: getfield      #5                  // Field scale:I
      18: iadd
      19: aload_0
      20: getfield      #7                  // Field nullable:Ljava/lang/Boolean;
      23: getstatic     #26                 // Field UNKNOWN_NULLABLE:Ljava/lang/Boolean;
      26: if_acmpne     33
      29: iconst_1
      30: goto          40
      33: aload_0
      34: getfield      #7                  // Field nullable:Ljava/lang/Boolean;
      37: invokevirtual #36                 // Method java/lang/Boolean.hashCode:()I
      40: iadd
      41: bipush        17
      43: irem
      44: ireturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #26                 // Field UNKNOWN_NULLABLE:Ljava/lang/Boolean;
       4: return
}
