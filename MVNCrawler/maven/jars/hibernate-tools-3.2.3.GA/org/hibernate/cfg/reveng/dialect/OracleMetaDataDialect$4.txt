Compiled from "OracleMetaDataDialect.java"
class org.hibernate.cfg.reveng.dialect.OracleMetaDataDialect$4 extends org.hibernate.cfg.reveng.dialect.ResultSetIterator {
  java.util.Map element;

  private final java.lang.String val$catalog;

  private final java.lang.String val$schema;

  private final java.lang.String val$table;

  private final org.hibernate.cfg.reveng.dialect.OracleMetaDataDialect this$0;

  org.hibernate.cfg.reveng.dialect.OracleMetaDataDialect$4(org.hibernate.cfg.reveng.dialect.OracleMetaDataDialect, java.sql.Statement, java.sql.ResultSet, org.hibernate.exception.SQLExceptionConverter, java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/hibernate/cfg/reveng/dialect/OracleMetaDataDialect;
       5: aload_0
       6: aload         5
       8: putfield      #2                  // Field val$catalog:Ljava/lang/String;
      11: aload_0
      12: aload         6
      14: putfield      #3                  // Field val$schema:Ljava/lang/String;
      17: aload_0
      18: aload         7
      20: putfield      #4                  // Field val$table:Ljava/lang/String;
      23: aload_0
      24: aload_2
      25: aload_3
      26: aload         4
      28: invokespecial #5                  // Method org/hibernate/cfg/reveng/dialect/ResultSetIterator."<init>":(Ljava/sql/Statement;Ljava/sql/ResultSet;Lorg/hibernate/exception/SQLExceptionConverter;)V
      31: aload_0
      32: new           #6                  // class java/util/HashMap
      35: dup
      36: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      39: putfield      #8                  // Field element:Ljava/util/Map;
      42: return

  protected java.lang.Object convertRow(java.sql.ResultSet) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field element:Ljava/util/Map;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: getfield      #8                  // Field element:Ljava/util/Map;
      13: ldc           #10                 // String TABLE_NAME
      15: aload_1
      16: iconst_1
      17: invokeinterface #11,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      22: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: aload_0
      29: getfield      #8                  // Field element:Ljava/util/Map;
      32: ldc           #13                 // String COLUMN_NAME
      34: aload_1
      35: iconst_2
      36: invokeinterface #11,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      41: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_0
      48: getfield      #8                  // Field element:Ljava/util/Map;
      51: ldc           #14                 // String KEY_SEQ
      53: new           #15                 // class java/lang/Short
      56: dup
      57: aload_1
      58: iconst_3
      59: invokeinterface #16,  2           // InterfaceMethod java/sql/ResultSet.getShort:(I)S
      64: invokespecial #17                 // Method java/lang/Short."<init>":(S)V
      67: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: aload_0
      74: getfield      #8                  // Field element:Ljava/util/Map;
      77: ldc           #18                 // String PK_NAME
      79: aload_1
      80: iconst_4
      81: invokeinterface #11,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      86: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      91: pop
      92: aload_0
      93: getfield      #8                  // Field element:Ljava/util/Map;
      96: ldc           #19                 // String TABLE_SCHEM
      98: aload_1
      99: iconst_5
     100: invokeinterface #11,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
     105: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     110: pop
     111: aload_0
     112: getfield      #8                  // Field element:Ljava/util/Map;
     115: ldc           #20                 // String TABLE_CAT
     117: aconst_null
     118: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     123: pop
     124: aload_0
     125: getfield      #8                  // Field element:Ljava/util/Map;
     128: areturn

  protected java.lang.Throwable handleSQLException(java.sql.SQLException);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getSQLExceptionConverter:()Lorg/hibernate/exception/SQLExceptionConverter;
       4: aload_1
       5: new           #22                 // class java/lang/StringBuffer
       8: dup
       9: invokespecial #23                 // Method java/lang/StringBuffer."<init>":()V
      12: ldc           #24                 // String Error while reading primary key meta data for
      14: invokevirtual #25                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      17: aload_0
      18: getfield      #2                  // Field val$catalog:Ljava/lang/String;
      21: aload_0
      22: getfield      #3                  // Field val$schema:Ljava/lang/String;
      25: aload_0
      26: getfield      #4                  // Field val$table:Ljava/lang/String;
      29: invokestatic  #26                 // Method org/hibernate/mapping/Table.qualify:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      32: invokevirtual #25                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: invokevirtual #27                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      38: aconst_null
      39: invokeinterface #28,  4           // InterfaceMethod org/hibernate/exception/SQLExceptionConverter.convert:(Ljava/sql/SQLException;Ljava/lang/String;Ljava/lang/String;)Lorg/hibernate/JDBCException;
      44: athrow
}
