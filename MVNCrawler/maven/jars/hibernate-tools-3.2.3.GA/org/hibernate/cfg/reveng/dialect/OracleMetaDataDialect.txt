Compiled from "OracleMetaDataDialect.java"
public class org.hibernate.cfg.reveng.dialect.OracleMetaDataDialect extends org.hibernate.cfg.reveng.dialect.AbstractMetaDataDialect {
  private static final java.lang.String SQL_TABLE_BASE;

  private static final java.lang.String SQL_TABLE_VIEW;

  private static final java.lang.String SQL_TABLE_NONE;

  private static final java.lang.String SQL_TABLE_SCHEMA;

  private static final java.lang.String SQL_TABLE_TABLE;

  private static final java.lang.String SQL_TABLE_SCHEMA_AND_TABLE;

  private java.sql.PreparedStatement prepTableNone;

  private java.sql.PreparedStatement prepTableSchema;

  private java.sql.PreparedStatement prepTableTable;

  private java.sql.PreparedStatement prepTableSchemaAndTable;

  private static final java.lang.String SQL_INDEX_BASE;

  private static final java.lang.String SQL_INDEX_ORDER;

  private static final java.lang.String SQL_INDEX_NONE;

  private static final java.lang.String SQL_INDEX_SCHEMA;

  private static final java.lang.String SQL_INDEX_TABLE;

  private static final java.lang.String SQL_INDEX_SCHEMA_AND_TABLE;

  private java.sql.PreparedStatement prepIndexNone;

  private java.sql.PreparedStatement prepIndexSchema;

  private java.sql.PreparedStatement prepIndexTable;

  private java.sql.PreparedStatement prepIndexSchemaAndTable;

  private static final java.lang.String SQL_COLUMN_BASE;

  private static final java.lang.String SQL_COLUMN_ORDER;

  private static final java.lang.String SQL_COLUMN_NONE;

  private static final java.lang.String SQL_COLUMN_SCHEMA;

  private static final java.lang.String SQL_COLUMN_TABLE;

  private static final java.lang.String SQL_COLUMN_COLUMN;

  private static final java.lang.String SQL_COLUMN_SCHEMA_AND_TABLE;

  private static final java.lang.String SQL_COLUMN_SCHEMA_AND_COLUMN;

  private static final java.lang.String SQL_COLUMN_TABLE_AND_COLUMN;

  private static final java.lang.String SQL_COLUMN_SCHEMA_AND_TABLE_AND_COLUMN;

  private java.sql.PreparedStatement prepColumnNone;

  private java.sql.PreparedStatement prepColumnSchema;

  private java.sql.PreparedStatement prepColumnTable;

  private java.sql.PreparedStatement prepColumnColumn;

  private java.sql.PreparedStatement prepColumnSchemaAndTable;

  private java.sql.PreparedStatement prepColumnSchemaAndColumn;

  private java.sql.PreparedStatement prepColumnTableAndColumn;

  private java.sql.PreparedStatement prepColumnSchemaAndTableAndColumn;

  private static final java.lang.String SQL_PK_BASE;

  private static final java.lang.String SQL_PK_ORDER;

  private static final java.lang.String SQL_PK_NONE;

  private static final java.lang.String SQL_PK_SCHEMA;

  private static final java.lang.String SQL_PK_TABLE;

  private static final java.lang.String SQL_PK_SCHEMA_AND_TABLE;

  private java.sql.PreparedStatement prepPkNone;

  private java.sql.PreparedStatement prepPkSchema;

  private java.sql.PreparedStatement prepPkTable;

  private java.sql.PreparedStatement prepPkSchemaAndTable;

  private static final java.lang.String SQL_FK_BASE;

  private static final java.lang.String SQL_FK_ORDER;

  private static final java.lang.String SQL_FK_NONE;

  private static final java.lang.String SQL_FK_SCHEMA;

  private static final java.lang.String SQL_FK_TABLE;

  private static final java.lang.String SQL_FK_SCHEMA_AND_TABLE;

  private java.sql.PreparedStatement prepFkNone;

  private java.sql.PreparedStatement prepFkSchema;

  private java.sql.PreparedStatement prepFkTable;

  private java.sql.PreparedStatement prepFkSchemaAndTable;

  public org.hibernate.cfg.reveng.dialect.OracleMetaDataDialect();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/cfg/reveng/dialect/AbstractMetaDataDialect."<init>":()V
       4: return

  public java.util.Iterator getTables(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
       4: new           #3                  // class java/lang/StringBuffer
       7: dup
       8: invokespecial #4                  // Method java/lang/StringBuffer."<init>":()V
      11: ldc           #5                  // String getTables(
      13: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: aload_1
      17: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      20: ldc           #7                  // String .
      22: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      25: aload_2
      26: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: ldc           #7                  // String .
      31: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: aload_3
      35: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      38: ldc           #8                  // String )
      40: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: invokevirtual #9                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      46: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      51: aload_0
      52: aload_2
      53: aload_3
      54: invokespecial #11                 // Method getTableResultSet:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
      57: astore        4
      59: new           #12                 // class org/hibernate/cfg/reveng/dialect/OracleMetaDataDialect$1
      62: dup
      63: aload_0
      64: aconst_null
      65: aload         4
      67: aload_0
      68: invokevirtual #13                 // Method getSQLExceptionConverter:()Lorg/hibernate/exception/SQLExceptionConverter;
      71: aload_1
      72: aload_2
      73: invokespecial #14                 // Method org/hibernate/cfg/reveng/dialect/OracleMetaDataDialect$1."<init>":(Lorg/hibernate/cfg/reveng/dialect/OracleMetaDataDialect;Ljava/sql/Statement;Ljava/sql/ResultSet;Lorg/hibernate/exception/SQLExceptionConverter;Ljava/lang/String;Ljava/lang/String;)V
      76: areturn
      77: astore        4
      79: aload_0
      80: aload_1
      81: aload_2
      82: invokevirtual #16                 // Method getDatabaseStructure:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      85: astore        5
      87: aload_0
      88: invokevirtual #13                 // Method getSQLExceptionConverter:()Lorg/hibernate/exception/SQLExceptionConverter;
      91: aload         4
      93: new           #3                  // class java/lang/StringBuffer
      96: dup
      97: invokespecial #4                  // Method java/lang/StringBuffer."<init>":()V
     100: ldc           #17                 // String Could not get list of tables from database. Probably a JDBC driver problem.
     102: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     105: aload         5
     107: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     110: invokevirtual #9                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     113: aconst_null
     114: invokeinterface #18,  4           // InterfaceMethod org/hibernate/exception/SQLExceptionConverter.convert:(Ljava/sql/SQLException;Ljava/lang/String;Ljava/lang/String;)Lorg/hibernate/JDBCException;
     119: athrow
    Exception table:
       from    to  target type
           0    76    77   Class java/sql/SQLException

  public java.util.Iterator getIndexInfo(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
       4: new           #3                  // class java/lang/StringBuffer
       7: dup
       8: invokespecial #4                  // Method java/lang/StringBuffer."<init>":()V
      11: ldc           #19                 // String getIndexInfo(
      13: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: aload_1
      17: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      20: ldc           #7                  // String .
      22: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      25: aload_2
      26: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: ldc           #7                  // String .
      31: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: aload_3
      35: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      38: ldc           #8                  // String )
      40: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: invokevirtual #9                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      46: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      51: aload_0
      52: aload_2
      53: aload_3
      54: invokespecial #20                 // Method getIndexInfoResultSet:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
      57: astore        4
      59: new           #21                 // class org/hibernate/cfg/reveng/dialect/OracleMetaDataDialect$2
      62: dup
      63: aload_0
      64: aconst_null
      65: aload         4
      67: aload_0
      68: invokevirtual #13                 // Method getSQLExceptionConverter:()Lorg/hibernate/exception/SQLExceptionConverter;
      71: aload_1
      72: aload_2
      73: aload_3
      74: invokespecial #22                 // Method org/hibernate/cfg/reveng/dialect/OracleMetaDataDialect$2."<init>":(Lorg/hibernate/cfg/reveng/dialect/OracleMetaDataDialect;Ljava/sql/Statement;Ljava/sql/ResultSet;Lorg/hibernate/exception/SQLExceptionConverter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      77: areturn
      78: astore        4
      80: aload_0
      81: invokevirtual #13                 // Method getSQLExceptionConverter:()Lorg/hibernate/exception/SQLExceptionConverter;
      84: aload         4
      86: new           #3                  // class java/lang/StringBuffer
      89: dup
      90: invokespecial #4                  // Method java/lang/StringBuffer."<init>":()V
      93: ldc           #23                 // String Exception while getting index info for
      95: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      98: aload_1
      99: aload_2
     100: aload_3
     101: invokestatic  #24                 // Method org/hibernate/mapping/Table.qualify:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     104: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     107: invokevirtual #9                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     110: aconst_null
     111: invokeinterface #18,  4           // InterfaceMethod org/hibernate/exception/SQLExceptionConverter.convert:(Ljava/sql/SQLException;Ljava/lang/String;Ljava/lang/String;)Lorg/hibernate/JDBCException;
     116: athrow
    Exception table:
       from    to  target type
           0    77    78   Class java/sql/SQLException

  public java.util.Iterator getColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
       4: new           #3                  // class java/lang/StringBuffer
       7: dup
       8: invokespecial #4                  // Method java/lang/StringBuffer."<init>":()V
      11: ldc           #25                 // String getColumns(
      13: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: aload_1
      17: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      20: ldc           #7                  // String .
      22: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      25: aload_2
      26: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: ldc           #7                  // String .
      31: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: aload_3
      35: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      38: ldc           #7                  // String .
      40: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: aload         4
      45: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: ldc           #8                  // String )
      50: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      53: invokevirtual #9                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      56: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      61: aload_0
      62: aload_2
      63: aload_3
      64: aload         4
      66: invokespecial #26                 // Method getColumnsResultSet:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
      69: astore        5
      71: new           #27                 // class org/hibernate/cfg/reveng/dialect/OracleMetaDataDialect$3
      74: dup
      75: aload_0
      76: aconst_null
      77: aload         5
      79: aload_0
      80: invokevirtual #13                 // Method getSQLExceptionConverter:()Lorg/hibernate/exception/SQLExceptionConverter;
      83: aload_1
      84: aload_2
      85: aload_3
      86: invokespecial #28                 // Method org/hibernate/cfg/reveng/dialect/OracleMetaDataDialect$3."<init>":(Lorg/hibernate/cfg/reveng/dialect/OracleMetaDataDialect;Ljava/sql/Statement;Ljava/sql/ResultSet;Lorg/hibernate/exception/SQLExceptionConverter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      89: areturn
      90: astore        5
      92: aload_0
      93: invokevirtual #13                 // Method getSQLExceptionConverter:()Lorg/hibernate/exception/SQLExceptionConverter;
      96: aload         5
      98: new           #3                  // class java/lang/StringBuffer
     101: dup
     102: invokespecial #4                  // Method java/lang/StringBuffer."<init>":()V
     105: ldc           #29                 // String Error while reading column meta data for
     107: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     110: aload_1
     111: aload_2
     112: aload_3
     113: invokestatic  #24                 // Method org/hibernate/mapping/Table.qualify:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     116: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     119: invokevirtual #9                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     122: aconst_null
     123: invokeinterface #18,  4           // InterfaceMethod org/hibernate/exception/SQLExceptionConverter.convert:(Ljava/sql/SQLException;Ljava/lang/String;Ljava/lang/String;)Lorg/hibernate/JDBCException;
     128: athrow
    Exception table:
       from    to  target type
           0    89    90   Class java/sql/SQLException

  public java.util.Iterator getPrimaryKeys(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
       4: new           #3                  // class java/lang/StringBuffer
       7: dup
       8: invokespecial #4                  // Method java/lang/StringBuffer."<init>":()V
      11: ldc           #30                 // String getPrimaryKeys(
      13: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: aload_1
      17: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      20: ldc           #7                  // String .
      22: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      25: aload_2
      26: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: ldc           #7                  // String .
      31: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: aload_3
      35: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      38: ldc           #8                  // String )
      40: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: invokevirtual #9                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      46: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      51: aload_0
      52: aload_2
      53: aload_3
      54: invokespecial #31                 // Method getPrimaryKeysResultSet:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
      57: astore        4
      59: new           #32                 // class org/hibernate/cfg/reveng/dialect/OracleMetaDataDialect$4
      62: dup
      63: aload_0
      64: aconst_null
      65: aload         4
      67: aload_0
      68: invokevirtual #13                 // Method getSQLExceptionConverter:()Lorg/hibernate/exception/SQLExceptionConverter;
      71: aload_1
      72: aload_2
      73: aload_3
      74: invokespecial #33                 // Method org/hibernate/cfg/reveng/dialect/OracleMetaDataDialect$4."<init>":(Lorg/hibernate/cfg/reveng/dialect/OracleMetaDataDialect;Ljava/sql/Statement;Ljava/sql/ResultSet;Lorg/hibernate/exception/SQLExceptionConverter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      77: areturn
      78: astore        4
      80: aload_0
      81: invokevirtual #13                 // Method getSQLExceptionConverter:()Lorg/hibernate/exception/SQLExceptionConverter;
      84: aload         4
      86: new           #3                  // class java/lang/StringBuffer
      89: dup
      90: invokespecial #4                  // Method java/lang/StringBuffer."<init>":()V
      93: ldc           #34                 // String Error while reading primary key meta data for
      95: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      98: aload_1
      99: aload_2
     100: aload_3
     101: invokestatic  #24                 // Method org/hibernate/mapping/Table.qualify:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     104: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     107: invokevirtual #9                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     110: aconst_null
     111: invokeinterface #18,  4           // InterfaceMethod org/hibernate/exception/SQLExceptionConverter.convert:(Ljava/sql/SQLException;Ljava/lang/String;Ljava/lang/String;)Lorg/hibernate/JDBCException;
     116: athrow
    Exception table:
       from    to  target type
           0    77    78   Class java/sql/SQLException

  public java.util.Iterator getExportedKeys(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
       4: new           #3                  // class java/lang/StringBuffer
       7: dup
       8: invokespecial #4                  // Method java/lang/StringBuffer."<init>":()V
      11: ldc           #35                 // String getExportedKeys(
      13: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: aload_1
      17: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      20: ldc           #7                  // String .
      22: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      25: aload_2
      26: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: ldc           #7                  // String .
      31: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: aload_3
      35: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      38: ldc           #8                  // String )
      40: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: invokevirtual #9                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      46: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      51: aload_0
      52: aload_2
      53: aload_3
      54: invokespecial #36                 // Method getExportedKeysResultSet:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
      57: astore        4
      59: new           #37                 // class org/hibernate/cfg/reveng/dialect/OracleMetaDataDialect$5
      62: dup
      63: aload_0
      64: aconst_null
      65: aload         4
      67: aload_0
      68: invokevirtual #13                 // Method getSQLExceptionConverter:()Lorg/hibernate/exception/SQLExceptionConverter;
      71: aload_1
      72: aload_2
      73: aload_3
      74: invokespecial #38                 // Method org/hibernate/cfg/reveng/dialect/OracleMetaDataDialect$5."<init>":(Lorg/hibernate/cfg/reveng/dialect/OracleMetaDataDialect;Ljava/sql/Statement;Ljava/sql/ResultSet;Lorg/hibernate/exception/SQLExceptionConverter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      77: areturn
      78: astore        4
      80: aload_0
      81: invokevirtual #13                 // Method getSQLExceptionConverter:()Lorg/hibernate/exception/SQLExceptionConverter;
      84: aload         4
      86: new           #3                  // class java/lang/StringBuffer
      89: dup
      90: invokespecial #4                  // Method java/lang/StringBuffer."<init>":()V
      93: ldc           #39                 // String Error while reading exported keys meta data for
      95: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      98: aload_1
      99: aload_2
     100: aload_3
     101: invokestatic  #24                 // Method org/hibernate/mapping/Table.qualify:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     104: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     107: invokevirtual #9                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     110: aconst_null
     111: invokeinterface #18,  4           // InterfaceMethod org/hibernate/exception/SQLExceptionConverter.convert:(Ljava/sql/SQLException;Ljava/lang/String;Ljava/lang/String;)Lorg/hibernate/JDBCException;
     116: athrow
    Exception table:
       from    to  target type
           0    77    78   Class java/sql/SQLException

  public void close();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #40                 // Field prepTableNone:Ljava/sql/PreparedStatement;
       6: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
       9: putfield      #40                 // Field prepTableNone:Ljava/sql/PreparedStatement;
      12: aload_0
      13: aload_0
      14: aload_0
      15: getfield      #42                 // Field prepTableSchema:Ljava/sql/PreparedStatement;
      18: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
      21: putfield      #42                 // Field prepTableSchema:Ljava/sql/PreparedStatement;
      24: aload_0
      25: aload_0
      26: aload_0
      27: getfield      #43                 // Field prepTableTable:Ljava/sql/PreparedStatement;
      30: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
      33: putfield      #43                 // Field prepTableTable:Ljava/sql/PreparedStatement;
      36: aload_0
      37: aload_0
      38: aload_0
      39: getfield      #44                 // Field prepTableSchemaAndTable:Ljava/sql/PreparedStatement;
      42: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
      45: putfield      #44                 // Field prepTableSchemaAndTable:Ljava/sql/PreparedStatement;
      48: aload_0
      49: aload_0
      50: aload_0
      51: getfield      #45                 // Field prepIndexNone:Ljava/sql/PreparedStatement;
      54: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
      57: putfield      #45                 // Field prepIndexNone:Ljava/sql/PreparedStatement;
      60: aload_0
      61: aload_0
      62: aload_0
      63: getfield      #46                 // Field prepIndexSchema:Ljava/sql/PreparedStatement;
      66: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
      69: putfield      #46                 // Field prepIndexSchema:Ljava/sql/PreparedStatement;
      72: aload_0
      73: aload_0
      74: aload_0
      75: getfield      #47                 // Field prepIndexTable:Ljava/sql/PreparedStatement;
      78: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
      81: putfield      #47                 // Field prepIndexTable:Ljava/sql/PreparedStatement;
      84: aload_0
      85: aload_0
      86: aload_0
      87: getfield      #48                 // Field prepIndexSchemaAndTable:Ljava/sql/PreparedStatement;
      90: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
      93: putfield      #48                 // Field prepIndexSchemaAndTable:Ljava/sql/PreparedStatement;
      96: aload_0
      97: aload_0
      98: aload_0
      99: getfield      #49                 // Field prepColumnNone:Ljava/sql/PreparedStatement;
     102: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     105: putfield      #49                 // Field prepColumnNone:Ljava/sql/PreparedStatement;
     108: aload_0
     109: aload_0
     110: aload_0
     111: getfield      #50                 // Field prepColumnSchema:Ljava/sql/PreparedStatement;
     114: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     117: putfield      #50                 // Field prepColumnSchema:Ljava/sql/PreparedStatement;
     120: aload_0
     121: aload_0
     122: aload_0
     123: getfield      #51                 // Field prepColumnTable:Ljava/sql/PreparedStatement;
     126: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     129: putfield      #51                 // Field prepColumnTable:Ljava/sql/PreparedStatement;
     132: aload_0
     133: aload_0
     134: aload_0
     135: getfield      #52                 // Field prepColumnColumn:Ljava/sql/PreparedStatement;
     138: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     141: putfield      #52                 // Field prepColumnColumn:Ljava/sql/PreparedStatement;
     144: aload_0
     145: aload_0
     146: aload_0
     147: getfield      #53                 // Field prepColumnSchemaAndTable:Ljava/sql/PreparedStatement;
     150: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     153: putfield      #53                 // Field prepColumnSchemaAndTable:Ljava/sql/PreparedStatement;
     156: aload_0
     157: aload_0
     158: aload_0
     159: getfield      #54                 // Field prepColumnSchemaAndColumn:Ljava/sql/PreparedStatement;
     162: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     165: putfield      #54                 // Field prepColumnSchemaAndColumn:Ljava/sql/PreparedStatement;
     168: aload_0
     169: aload_0
     170: aload_0
     171: getfield      #55                 // Field prepColumnTableAndColumn:Ljava/sql/PreparedStatement;
     174: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     177: putfield      #55                 // Field prepColumnTableAndColumn:Ljava/sql/PreparedStatement;
     180: aload_0
     181: aload_0
     182: aload_0
     183: getfield      #56                 // Field prepColumnSchemaAndTableAndColumn:Ljava/sql/PreparedStatement;
     186: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     189: putfield      #56                 // Field prepColumnSchemaAndTableAndColumn:Ljava/sql/PreparedStatement;
     192: aload_0
     193: aload_0
     194: aload_0
     195: getfield      #57                 // Field prepPkNone:Ljava/sql/PreparedStatement;
     198: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     201: putfield      #57                 // Field prepPkNone:Ljava/sql/PreparedStatement;
     204: aload_0
     205: aload_0
     206: aload_0
     207: getfield      #58                 // Field prepPkSchema:Ljava/sql/PreparedStatement;
     210: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     213: putfield      #58                 // Field prepPkSchema:Ljava/sql/PreparedStatement;
     216: aload_0
     217: aload_0
     218: aload_0
     219: getfield      #59                 // Field prepPkTable:Ljava/sql/PreparedStatement;
     222: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     225: putfield      #59                 // Field prepPkTable:Ljava/sql/PreparedStatement;
     228: aload_0
     229: aload_0
     230: aload_0
     231: getfield      #60                 // Field prepPkSchemaAndTable:Ljava/sql/PreparedStatement;
     234: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     237: putfield      #60                 // Field prepPkSchemaAndTable:Ljava/sql/PreparedStatement;
     240: aload_0
     241: aload_0
     242: aload_0
     243: getfield      #61                 // Field prepFkNone:Ljava/sql/PreparedStatement;
     246: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     249: putfield      #61                 // Field prepFkNone:Ljava/sql/PreparedStatement;
     252: aload_0
     253: aload_0
     254: aload_0
     255: getfield      #62                 // Field prepFkSchema:Ljava/sql/PreparedStatement;
     258: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     261: putfield      #62                 // Field prepFkSchema:Ljava/sql/PreparedStatement;
     264: aload_0
     265: aload_0
     266: aload_0
     267: getfield      #63                 // Field prepFkTable:Ljava/sql/PreparedStatement;
     270: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     273: putfield      #63                 // Field prepFkTable:Ljava/sql/PreparedStatement;
     276: aload_0
     277: aload_0
     278: aload_0
     279: getfield      #64                 // Field prepFkSchemaAndTable:Ljava/sql/PreparedStatement;
     282: invokespecial #41                 // Method close:(Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
     285: putfield      #64                 // Field prepFkSchemaAndTable:Ljava/sql/PreparedStatement;
     288: aload_0
     289: invokespecial #65                 // Method org/hibernate/cfg/reveng/dialect/AbstractMetaDataDialect.close:()V
     292: goto          302
     295: astore_1
     296: aload_0
     297: invokespecial #65                 // Method org/hibernate/cfg/reveng/dialect/AbstractMetaDataDialect.close:()V
     300: aload_1
     301: athrow
     302: return
    Exception table:
       from    to  target type
           0   288   295   any
         295   296   295   any

  private java.sql.PreparedStatement close(java.sql.PreparedStatement);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: invokeinterface #66,  1           // InterfaceMethod java/sql/PreparedStatement.close:()V
      12: goto          30
      15: astore_2
      16: aload_0
      17: invokevirtual #13                 // Method getSQLExceptionConverter:()Lorg/hibernate/exception/SQLExceptionConverter;
      20: aload_2
      21: ldc           #67                 // String Problem while closing prepared statement
      23: aconst_null
      24: invokeinterface #18,  4           // InterfaceMethod org/hibernate/exception/SQLExceptionConverter.convert:(Ljava/sql/SQLException;Ljava/lang/String;Ljava/lang/String;)Lorg/hibernate/JDBCException;
      29: athrow
      30: aconst_null
      31: areturn
    Exception table:
       from    to  target type
           6    12    15   Class java/sql/SQLException

  private java.sql.ResultSet getPrimaryKeysResultSet(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field prepPkNone:Ljava/sql/PreparedStatement;
       4: ifnonnull     82
       7: aload_0
       8: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
      11: ldc           #68                 // String Preparing primary key queries...
      13: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      18: aload_0
      19: invokevirtual #69                 // Method getConnection:()Ljava/sql/Connection;
      22: astore_3
      23: aload_0
      24: aload_3
      25: ldc           #70                 // String select c.table_name, c.column_name, c.position,  c.constraint_name, c.owner from all_cons_columns c left join all_constraints k on (k.owner = c.owner AND k.table_name = c.table_name AND k.constraint_name = c.constraint_name) where  k.constraint_type = \'P\'  order by c.table_name, c.constraint_name, c.position desc
      27: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      32: putfield      #57                 // Field prepPkNone:Ljava/sql/PreparedStatement;
      35: aload_0
      36: aload_3
      37: ldc           #72                 // String select c.table_name, c.column_name, c.position,  c.constraint_name, c.owner from all_cons_columns c left join all_constraints k on (k.owner = c.owner AND k.table_name = c.table_name AND k.constraint_name = c.constraint_name) where  k.constraint_type = \'P\'  and c.owner = ?  order by c.table_name, c.constraint_name, c.position desc
      39: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      44: putfield      #58                 // Field prepPkSchema:Ljava/sql/PreparedStatement;
      47: aload_0
      48: aload_3
      49: ldc           #73                 // String select c.table_name, c.column_name, c.position,  c.constraint_name, c.owner from all_cons_columns c left join all_constraints k on (k.owner = c.owner AND k.table_name = c.table_name AND k.constraint_name = c.constraint_name) where  k.constraint_type = \'P\'  and c.table_name = ?  order by c.table_name, c.constraint_name, c.position desc
      51: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      56: putfield      #59                 // Field prepPkTable:Ljava/sql/PreparedStatement;
      59: aload_0
      60: aload_3
      61: ldc           #74                 // String select c.table_name, c.column_name, c.position,  c.constraint_name, c.owner from all_cons_columns c left join all_constraints k on (k.owner = c.owner AND k.table_name = c.table_name AND k.constraint_name = c.constraint_name) where  k.constraint_type = \'P\'  and c.owner = ? and c.table_name = ?  order by c.table_name, c.constraint_name, c.position desc
      63: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      68: putfield      #60                 // Field prepPkSchemaAndTable:Ljava/sql/PreparedStatement;
      71: aload_0
      72: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
      75: ldc           #75                 // String   primary key queries prepared!
      77: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      82: aload_1
      83: ifnonnull     103
      86: aload_2
      87: ifnonnull     103
      90: aload_0
      91: getfield      #57                 // Field prepPkNone:Ljava/sql/PreparedStatement;
      94: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
      99: astore_3
     100: goto          191
     103: aload_1
     104: ifnull        170
     107: aload_2
     108: ifnonnull     135
     111: aload_0
     112: getfield      #58                 // Field prepPkSchema:Ljava/sql/PreparedStatement;
     115: iconst_1
     116: aload_1
     117: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     122: aload_0
     123: getfield      #58                 // Field prepPkSchema:Ljava/sql/PreparedStatement;
     126: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     131: astore_3
     132: goto          191
     135: aload_0
     136: getfield      #60                 // Field prepPkSchemaAndTable:Ljava/sql/PreparedStatement;
     139: iconst_1
     140: aload_1
     141: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     146: aload_0
     147: getfield      #60                 // Field prepPkSchemaAndTable:Ljava/sql/PreparedStatement;
     150: iconst_2
     151: aload_2
     152: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     157: aload_0
     158: getfield      #60                 // Field prepPkSchemaAndTable:Ljava/sql/PreparedStatement;
     161: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     166: astore_3
     167: goto          191
     170: aload_0
     171: getfield      #59                 // Field prepPkTable:Ljava/sql/PreparedStatement;
     174: iconst_1
     175: aload_2
     176: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     181: aload_0
     182: getfield      #59                 // Field prepPkTable:Ljava/sql/PreparedStatement;
     185: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     190: astore_3
     191: aload_3
     192: areturn

  private java.sql.ResultSet getIndexInfoResultSet(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field prepIndexNone:Ljava/sql/PreparedStatement;
       4: ifnonnull     82
       7: aload_0
       8: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
      11: ldc           #78                 // String Preparing index queries...
      13: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      18: aload_0
      19: invokevirtual #69                 // Method getConnection:()Ljava/sql/Connection;
      22: astore_3
      23: aload_0
      24: aload_3
      25: ldc           #79                 // String select a.column_name, decode(b.uniqueness,\'UNIQUE\',\'false\',\'true\'), a.index_owner, a.index_name, a.table_name from all_ind_columns a left join all_indexes b on (a.table_name = b.table_name  AND a.table_owner = b.table_owner  AND a.index_name  = b.index_name)  order by a.table_name, a.column_position
      27: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      32: putfield      #45                 // Field prepIndexNone:Ljava/sql/PreparedStatement;
      35: aload_0
      36: aload_3
      37: ldc           #80                 // String select a.column_name, decode(b.uniqueness,\'UNIQUE\',\'false\',\'true\'), a.index_owner, a.index_name, a.table_name from all_ind_columns a left join all_indexes b on (a.table_name = b.table_name  AND a.table_owner = b.table_owner  AND a.index_name  = b.index_name) where a.table_owner = ?  order by a.table_name, a.column_position
      39: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      44: putfield      #46                 // Field prepIndexSchema:Ljava/sql/PreparedStatement;
      47: aload_0
      48: aload_3
      49: ldc           #81                 // String select a.column_name, decode(b.uniqueness,\'UNIQUE\',\'false\',\'true\'), a.index_owner, a.index_name, a.table_name from all_ind_columns a left join all_indexes b on (a.table_name = b.table_name  AND a.table_owner = b.table_owner  AND a.index_name  = b.index_name) where a.table_name = ?  order by a.table_name, a.column_position
      51: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      56: putfield      #47                 // Field prepIndexTable:Ljava/sql/PreparedStatement;
      59: aload_0
      60: aload_3
      61: ldc           #82                 // String select a.column_name, decode(b.uniqueness,\'UNIQUE\',\'false\',\'true\'), a.index_owner, a.index_name, a.table_name from all_ind_columns a left join all_indexes b on (a.table_name = b.table_name  AND a.table_owner = b.table_owner  AND a.index_name  = b.index_name) where a.table_owner = ? and a.table_name = ?  order by a.table_name, a.column_position
      63: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      68: putfield      #48                 // Field prepIndexSchemaAndTable:Ljava/sql/PreparedStatement;
      71: aload_0
      72: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
      75: ldc           #83                 // String   ...index queries prepared!
      77: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      82: aload_1
      83: ifnonnull     103
      86: aload_2
      87: ifnonnull     103
      90: aload_0
      91: getfield      #45                 // Field prepIndexNone:Ljava/sql/PreparedStatement;
      94: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
      99: astore_3
     100: goto          191
     103: aload_1
     104: ifnull        170
     107: aload_2
     108: ifnonnull     135
     111: aload_0
     112: getfield      #46                 // Field prepIndexSchema:Ljava/sql/PreparedStatement;
     115: iconst_1
     116: aload_1
     117: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     122: aload_0
     123: getfield      #46                 // Field prepIndexSchema:Ljava/sql/PreparedStatement;
     126: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     131: astore_3
     132: goto          191
     135: aload_0
     136: getfield      #48                 // Field prepIndexSchemaAndTable:Ljava/sql/PreparedStatement;
     139: iconst_1
     140: aload_1
     141: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     146: aload_0
     147: getfield      #48                 // Field prepIndexSchemaAndTable:Ljava/sql/PreparedStatement;
     150: iconst_2
     151: aload_2
     152: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     157: aload_0
     158: getfield      #48                 // Field prepIndexSchemaAndTable:Ljava/sql/PreparedStatement;
     161: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     166: astore_3
     167: goto          191
     170: aload_0
     171: getfield      #47                 // Field prepIndexTable:Ljava/sql/PreparedStatement;
     174: iconst_1
     175: aload_2
     176: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     181: aload_0
     182: getfield      #47                 // Field prepIndexTable:Ljava/sql/PreparedStatement;
     185: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     190: astore_3
     191: aload_3
     192: areturn

  private java.sql.ResultSet getExportedKeysResultSet(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #61                 // Field prepFkNone:Ljava/sql/PreparedStatement;
       4: ifnonnull     82
       7: aload_0
       8: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
      11: ldc           #84                 // String Preparing foreign key queries...
      13: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      18: aload_0
      19: invokevirtual #69                 // Method getConnection:()Ljava/sql/Connection;
      22: astore_3
      23: aload_0
      24: aload_3
      25: ldc           #85                 // String select p.table_name, p.owner, f.owner, f.table_name, fc.column_name, pc.column_name, f.constraint_name, fc.position from all_constraints p left join all_cons_columns pc on (pc.owner = p.owner and pc.constraint_name = p.constraint_name and pc.table_name = p.table_name) left join all_constraints f on (p.owner = f.r_owner and p.constraint_name = f.r_constraint_name) left join all_cons_columns fc on (fc.owner = f.owner and fc.constraint_name = f.constraint_name and fc.table_name = f.table_name and fc.position = pc.position) where f.constraint_type = \'R\' AND  p.constraint_type = \'P\'  order by f.table_name, f.constraint_name, fc.position
      27: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      32: putfield      #61                 // Field prepFkNone:Ljava/sql/PreparedStatement;
      35: aload_0
      36: aload_3
      37: ldc           #86                 // String select p.table_name, p.owner, f.owner, f.table_name, fc.column_name, pc.column_name, f.constraint_name, fc.position from all_constraints p left join all_cons_columns pc on (pc.owner = p.owner and pc.constraint_name = p.constraint_name and pc.table_name = p.table_name) left join all_constraints f on (p.owner = f.r_owner and p.constraint_name = f.r_constraint_name) left join all_cons_columns fc on (fc.owner = f.owner and fc.constraint_name = f.constraint_name and fc.table_name = f.table_name and fc.position = pc.position) where f.constraint_type = \'R\' AND  p.constraint_type = \'P\'  and p.owner = ?  order by f.table_name, f.constraint_name, fc.position
      39: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      44: putfield      #62                 // Field prepFkSchema:Ljava/sql/PreparedStatement;
      47: aload_0
      48: aload_3
      49: ldc           #87                 // String select p.table_name, p.owner, f.owner, f.table_name, fc.column_name, pc.column_name, f.constraint_name, fc.position from all_constraints p left join all_cons_columns pc on (pc.owner = p.owner and pc.constraint_name = p.constraint_name and pc.table_name = p.table_name) left join all_constraints f on (p.owner = f.r_owner and p.constraint_name = f.r_constraint_name) left join all_cons_columns fc on (fc.owner = f.owner and fc.constraint_name = f.constraint_name and fc.table_name = f.table_name and fc.position = pc.position) where f.constraint_type = \'R\' AND  p.constraint_type = \'P\'  and p.table_name = ?  order by f.table_name, f.constraint_name, fc.position
      51: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      56: putfield      #63                 // Field prepFkTable:Ljava/sql/PreparedStatement;
      59: aload_0
      60: aload_3
      61: ldc           #88                 // String select p.table_name, p.owner, f.owner, f.table_name, fc.column_name, pc.column_name, f.constraint_name, fc.position from all_constraints p left join all_cons_columns pc on (pc.owner = p.owner and pc.constraint_name = p.constraint_name and pc.table_name = p.table_name) left join all_constraints f on (p.owner = f.r_owner and p.constraint_name = f.r_constraint_name) left join all_cons_columns fc on (fc.owner = f.owner and fc.constraint_name = f.constraint_name and fc.table_name = f.table_name and fc.position = pc.position) where f.constraint_type = \'R\' AND  p.constraint_type = \'P\'  and p.owner = ? and p.table_name = ?  order by f.table_name, f.constraint_name, fc.position
      63: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      68: putfield      #64                 // Field prepFkSchemaAndTable:Ljava/sql/PreparedStatement;
      71: aload_0
      72: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
      75: ldc           #89                 // String   foreign key queries prepared!
      77: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      82: aload_1
      83: ifnonnull     103
      86: aload_2
      87: ifnonnull     103
      90: aload_0
      91: getfield      #61                 // Field prepFkNone:Ljava/sql/PreparedStatement;
      94: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
      99: astore_3
     100: goto          191
     103: aload_1
     104: ifnull        170
     107: aload_2
     108: ifnonnull     135
     111: aload_0
     112: getfield      #62                 // Field prepFkSchema:Ljava/sql/PreparedStatement;
     115: iconst_1
     116: aload_1
     117: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     122: aload_0
     123: getfield      #62                 // Field prepFkSchema:Ljava/sql/PreparedStatement;
     126: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     131: astore_3
     132: goto          191
     135: aload_0
     136: getfield      #64                 // Field prepFkSchemaAndTable:Ljava/sql/PreparedStatement;
     139: iconst_1
     140: aload_1
     141: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     146: aload_0
     147: getfield      #64                 // Field prepFkSchemaAndTable:Ljava/sql/PreparedStatement;
     150: iconst_2
     151: aload_2
     152: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     157: aload_0
     158: getfield      #64                 // Field prepFkSchemaAndTable:Ljava/sql/PreparedStatement;
     161: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     166: astore_3
     167: goto          191
     170: aload_0
     171: getfield      #63                 // Field prepFkTable:Ljava/sql/PreparedStatement;
     174: iconst_1
     175: aload_2
     176: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     181: aload_0
     182: getfield      #63                 // Field prepFkTable:Ljava/sql/PreparedStatement;
     185: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     190: astore_3
     191: aload_3
     192: areturn

  private java.sql.ResultSet getColumnsResultSet(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #49                 // Field prepColumnNone:Ljava/sql/PreparedStatement;
       4: ifnonnull     139
       7: aload_0
       8: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
      11: ldc           #90                 // String Preparing column queries...
      13: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      18: aload_0
      19: invokevirtual #69                 // Method getConnection:()Ljava/sql/Connection;
      22: astore        4
      24: aload_0
      25: aload         4
      27: ldc           #91                 // String select a.column_name as COLUMN_NAME, a.owner as TABLE_SCHEM, decode(a.nullable,\'N\',0,1) as NULLABLE, decode(a.data_type, \'FLOAT\',decode(a.data_precision,null, a.data_length, a.data_precision), \'NUMBER\', decode(a.data_precision,null, a.data_length, a.data_precision), a.data_length) as COLUMN_SIZE, decode(a.data_type,\'CHAR\',1, \'DATE\',91, \'FLOAT\',6, \'LONG\',-1, \'NUMBER\',2, \'VARCHAR2\',12, \'BFILE\',-13, \'BLOB\',2004, \'CLOB\',2005, \'MLSLABEL\',1111, \'NCHAR\',1, \'NCLOB\',2005, \'NVARCHAR2\',12, \'RAW\',-3, \'ROWID\',1111, \'UROWID\',1111, \'LONG RAW\', -4, \'TIMESTAMP\', 93, \'XMLTYPE\',2005, 1111) as DATA_TYPE, a.table_name as TABLE_NAME, a.data_type as TYPE_NAME, decode(a.data_scale, null, 0 ,a.data_scale) as DECIMAL_DIGITS, b.comments from all_tab_columns a left join all_col_comments b on (a.owner=b.owner and a.table_name=b.table_name and a.column_name=b.column_name)  order by column_id
      29: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      34: putfield      #49                 // Field prepColumnNone:Ljava/sql/PreparedStatement;
      37: aload_0
      38: aload         4
      40: ldc           #92                 // String select a.column_name as COLUMN_NAME, a.owner as TABLE_SCHEM, decode(a.nullable,\'N\',0,1) as NULLABLE, decode(a.data_type, \'FLOAT\',decode(a.data_precision,null, a.data_length, a.data_precision), \'NUMBER\', decode(a.data_precision,null, a.data_length, a.data_precision), a.data_length) as COLUMN_SIZE, decode(a.data_type,\'CHAR\',1, \'DATE\',91, \'FLOAT\',6, \'LONG\',-1, \'NUMBER\',2, \'VARCHAR2\',12, \'BFILE\',-13, \'BLOB\',2004, \'CLOB\',2005, \'MLSLABEL\',1111, \'NCHAR\',1, \'NCLOB\',2005, \'NVARCHAR2\',12, \'RAW\',-3, \'ROWID\',1111, \'UROWID\',1111, \'LONG RAW\', -4, \'TIMESTAMP\', 93, \'XMLTYPE\',2005, 1111) as DATA_TYPE, a.table_name as TABLE_NAME, a.data_type as TYPE_NAME, decode(a.data_scale, null, 0 ,a.data_scale) as DECIMAL_DIGITS, b.comments from all_tab_columns a left join all_col_comments b on (a.owner=b.owner and a.table_name=b.table_name and a.column_name=b.column_name) where a.owner = ?  order by column_id
      42: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      47: putfield      #50                 // Field prepColumnSchema:Ljava/sql/PreparedStatement;
      50: aload_0
      51: aload         4
      53: ldc           #93                 // String select a.column_name as COLUMN_NAME, a.owner as TABLE_SCHEM, decode(a.nullable,\'N\',0,1) as NULLABLE, decode(a.data_type, \'FLOAT\',decode(a.data_precision,null, a.data_length, a.data_precision), \'NUMBER\', decode(a.data_precision,null, a.data_length, a.data_precision), a.data_length) as COLUMN_SIZE, decode(a.data_type,\'CHAR\',1, \'DATE\',91, \'FLOAT\',6, \'LONG\',-1, \'NUMBER\',2, \'VARCHAR2\',12, \'BFILE\',-13, \'BLOB\',2004, \'CLOB\',2005, \'MLSLABEL\',1111, \'NCHAR\',1, \'NCLOB\',2005, \'NVARCHAR2\',12, \'RAW\',-3, \'ROWID\',1111, \'UROWID\',1111, \'LONG RAW\', -4, \'TIMESTAMP\', 93, \'XMLTYPE\',2005, 1111) as DATA_TYPE, a.table_name as TABLE_NAME, a.data_type as TYPE_NAME, decode(a.data_scale, null, 0 ,a.data_scale) as DECIMAL_DIGITS, b.comments from all_tab_columns a left join all_col_comments b on (a.owner=b.owner and a.table_name=b.table_name and a.column_name=b.column_name) where a.table_name = ?  order by column_id
      55: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      60: putfield      #51                 // Field prepColumnTable:Ljava/sql/PreparedStatement;
      63: aload_0
      64: aload         4
      66: ldc           #94                 // String select a.column_name as COLUMN_NAME, a.owner as TABLE_SCHEM, decode(a.nullable,\'N\',0,1) as NULLABLE, decode(a.data_type, \'FLOAT\',decode(a.data_precision,null, a.data_length, a.data_precision), \'NUMBER\', decode(a.data_precision,null, a.data_length, a.data_precision), a.data_length) as COLUMN_SIZE, decode(a.data_type,\'CHAR\',1, \'DATE\',91, \'FLOAT\',6, \'LONG\',-1, \'NUMBER\',2, \'VARCHAR2\',12, \'BFILE\',-13, \'BLOB\',2004, \'CLOB\',2005, \'MLSLABEL\',1111, \'NCHAR\',1, \'NCLOB\',2005, \'NVARCHAR2\',12, \'RAW\',-3, \'ROWID\',1111, \'UROWID\',1111, \'LONG RAW\', -4, \'TIMESTAMP\', 93, \'XMLTYPE\',2005, 1111) as DATA_TYPE, a.table_name as TABLE_NAME, a.data_type as TYPE_NAME, decode(a.data_scale, null, 0 ,a.data_scale) as DECIMAL_DIGITS, b.comments from all_tab_columns a left join all_col_comments b on (a.owner=b.owner and a.table_name=b.table_name and a.column_name=b.column_name) where a.column_name = ?  order by column_id
      68: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      73: putfield      #52                 // Field prepColumnColumn:Ljava/sql/PreparedStatement;
      76: aload_0
      77: aload         4
      79: ldc           #95                 // String select a.column_name as COLUMN_NAME, a.owner as TABLE_SCHEM, decode(a.nullable,\'N\',0,1) as NULLABLE, decode(a.data_type, \'FLOAT\',decode(a.data_precision,null, a.data_length, a.data_precision), \'NUMBER\', decode(a.data_precision,null, a.data_length, a.data_precision), a.data_length) as COLUMN_SIZE, decode(a.data_type,\'CHAR\',1, \'DATE\',91, \'FLOAT\',6, \'LONG\',-1, \'NUMBER\',2, \'VARCHAR2\',12, \'BFILE\',-13, \'BLOB\',2004, \'CLOB\',2005, \'MLSLABEL\',1111, \'NCHAR\',1, \'NCLOB\',2005, \'NVARCHAR2\',12, \'RAW\',-3, \'ROWID\',1111, \'UROWID\',1111, \'LONG RAW\', -4, \'TIMESTAMP\', 93, \'XMLTYPE\',2005, 1111) as DATA_TYPE, a.table_name as TABLE_NAME, a.data_type as TYPE_NAME, decode(a.data_scale, null, 0 ,a.data_scale) as DECIMAL_DIGITS, b.comments from all_tab_columns a left join all_col_comments b on (a.owner=b.owner and a.table_name=b.table_name and a.column_name=b.column_name) where a.owner = ? and a.table_name = ?  order by column_id
      81: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      86: putfield      #53                 // Field prepColumnSchemaAndTable:Ljava/sql/PreparedStatement;
      89: aload_0
      90: aload         4
      92: ldc           #96                 // String select a.column_name as COLUMN_NAME, a.owner as TABLE_SCHEM, decode(a.nullable,\'N\',0,1) as NULLABLE, decode(a.data_type, \'FLOAT\',decode(a.data_precision,null, a.data_length, a.data_precision), \'NUMBER\', decode(a.data_precision,null, a.data_length, a.data_precision), a.data_length) as COLUMN_SIZE, decode(a.data_type,\'CHAR\',1, \'DATE\',91, \'FLOAT\',6, \'LONG\',-1, \'NUMBER\',2, \'VARCHAR2\',12, \'BFILE\',-13, \'BLOB\',2004, \'CLOB\',2005, \'MLSLABEL\',1111, \'NCHAR\',1, \'NCLOB\',2005, \'NVARCHAR2\',12, \'RAW\',-3, \'ROWID\',1111, \'UROWID\',1111, \'LONG RAW\', -4, \'TIMESTAMP\', 93, \'XMLTYPE\',2005, 1111) as DATA_TYPE, a.table_name as TABLE_NAME, a.data_type as TYPE_NAME, decode(a.data_scale, null, 0 ,a.data_scale) as DECIMAL_DIGITS, b.comments from all_tab_columns a left join all_col_comments b on (a.owner=b.owner and a.table_name=b.table_name and a.column_name=b.column_name) where a.owner = ? and a.column_name = ?  order by column_id
      94: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      99: putfield      #54                 // Field prepColumnSchemaAndColumn:Ljava/sql/PreparedStatement;
     102: aload_0
     103: aload         4
     105: ldc           #97                 // String select a.column_name as COLUMN_NAME, a.owner as TABLE_SCHEM, decode(a.nullable,\'N\',0,1) as NULLABLE, decode(a.data_type, \'FLOAT\',decode(a.data_precision,null, a.data_length, a.data_precision), \'NUMBER\', decode(a.data_precision,null, a.data_length, a.data_precision), a.data_length) as COLUMN_SIZE, decode(a.data_type,\'CHAR\',1, \'DATE\',91, \'FLOAT\',6, \'LONG\',-1, \'NUMBER\',2, \'VARCHAR2\',12, \'BFILE\',-13, \'BLOB\',2004, \'CLOB\',2005, \'MLSLABEL\',1111, \'NCHAR\',1, \'NCLOB\',2005, \'NVARCHAR2\',12, \'RAW\',-3, \'ROWID\',1111, \'UROWID\',1111, \'LONG RAW\', -4, \'TIMESTAMP\', 93, \'XMLTYPE\',2005, 1111) as DATA_TYPE, a.table_name as TABLE_NAME, a.data_type as TYPE_NAME, decode(a.data_scale, null, 0 ,a.data_scale) as DECIMAL_DIGITS, b.comments from all_tab_columns a left join all_col_comments b on (a.owner=b.owner and a.table_name=b.table_name and a.column_name=b.column_name) where a.table_name = ? and a.column_name = ?  order by column_id
     107: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
     112: putfield      #55                 // Field prepColumnTableAndColumn:Ljava/sql/PreparedStatement;
     115: aload_0
     116: aload         4
     118: ldc           #98                 // String select a.column_name as COLUMN_NAME, a.owner as TABLE_SCHEM, decode(a.nullable,\'N\',0,1) as NULLABLE, decode(a.data_type, \'FLOAT\',decode(a.data_precision,null, a.data_length, a.data_precision), \'NUMBER\', decode(a.data_precision,null, a.data_length, a.data_precision), a.data_length) as COLUMN_SIZE, decode(a.data_type,\'CHAR\',1, \'DATE\',91, \'FLOAT\',6, \'LONG\',-1, \'NUMBER\',2, \'VARCHAR2\',12, \'BFILE\',-13, \'BLOB\',2004, \'CLOB\',2005, \'MLSLABEL\',1111, \'NCHAR\',1, \'NCLOB\',2005, \'NVARCHAR2\',12, \'RAW\',-3, \'ROWID\',1111, \'UROWID\',1111, \'LONG RAW\', -4, \'TIMESTAMP\', 93, \'XMLTYPE\',2005, 1111) as DATA_TYPE, a.table_name as TABLE_NAME, a.data_type as TYPE_NAME, decode(a.data_scale, null, 0 ,a.data_scale) as DECIMAL_DIGITS, b.comments from all_tab_columns a left join all_col_comments b on (a.owner=b.owner and a.table_name=b.table_name and a.column_name=b.column_name) where a.owner = ? and a.table_name = ? and a.column_name = ?  order by column_id
     120: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
     125: putfield      #56                 // Field prepColumnSchemaAndTableAndColumn:Ljava/sql/PreparedStatement;
     128: aload_0
     129: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
     132: ldc           #99                 // String   ...column queries prepared!
     134: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     139: aload_1
     140: ifnonnull     165
     143: aload_2
     144: ifnonnull     165
     147: aload_3
     148: ifnonnull     165
     151: aload_0
     152: getfield      #49                 // Field prepColumnNone:Ljava/sql/PreparedStatement;
     155: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     160: astore        4
     162: goto          416
     165: aload_1
     166: ifnull        325
     169: aload_2
     170: ifnonnull     238
     173: aload_3
     174: ifnonnull     202
     177: aload_0
     178: getfield      #50                 // Field prepColumnSchema:Ljava/sql/PreparedStatement;
     181: iconst_1
     182: aload_1
     183: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     188: aload_0
     189: getfield      #50                 // Field prepColumnSchema:Ljava/sql/PreparedStatement;
     192: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     197: astore        4
     199: goto          416
     202: aload_0
     203: getfield      #54                 // Field prepColumnSchemaAndColumn:Ljava/sql/PreparedStatement;
     206: iconst_1
     207: aload_1
     208: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     213: aload_0
     214: getfield      #54                 // Field prepColumnSchemaAndColumn:Ljava/sql/PreparedStatement;
     217: iconst_2
     218: aload_3
     219: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     224: aload_0
     225: getfield      #54                 // Field prepColumnSchemaAndColumn:Ljava/sql/PreparedStatement;
     228: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     233: astore        4
     235: goto          416
     238: aload_3
     239: ifnonnull     278
     242: aload_0
     243: getfield      #53                 // Field prepColumnSchemaAndTable:Ljava/sql/PreparedStatement;
     246: iconst_1
     247: aload_1
     248: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     253: aload_0
     254: getfield      #53                 // Field prepColumnSchemaAndTable:Ljava/sql/PreparedStatement;
     257: iconst_2
     258: aload_2
     259: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     264: aload_0
     265: getfield      #53                 // Field prepColumnSchemaAndTable:Ljava/sql/PreparedStatement;
     268: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     273: astore        4
     275: goto          416
     278: aload_0
     279: getfield      #56                 // Field prepColumnSchemaAndTableAndColumn:Ljava/sql/PreparedStatement;
     282: iconst_1
     283: aload_1
     284: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     289: aload_0
     290: getfield      #56                 // Field prepColumnSchemaAndTableAndColumn:Ljava/sql/PreparedStatement;
     293: iconst_2
     294: aload_2
     295: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     300: aload_0
     301: getfield      #56                 // Field prepColumnSchemaAndTableAndColumn:Ljava/sql/PreparedStatement;
     304: iconst_3
     305: aload_3
     306: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     311: aload_0
     312: getfield      #56                 // Field prepColumnSchemaAndTableAndColumn:Ljava/sql/PreparedStatement;
     315: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     320: astore        4
     322: goto          416
     325: aload_2
     326: ifnonnull     354
     329: aload_0
     330: getfield      #52                 // Field prepColumnColumn:Ljava/sql/PreparedStatement;
     333: iconst_1
     334: aload_3
     335: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     340: aload_0
     341: getfield      #52                 // Field prepColumnColumn:Ljava/sql/PreparedStatement;
     344: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     349: astore        4
     351: goto          416
     354: aload_3
     355: ifnonnull     383
     358: aload_0
     359: getfield      #51                 // Field prepColumnTable:Ljava/sql/PreparedStatement;
     362: iconst_1
     363: aload_2
     364: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     369: aload_0
     370: getfield      #51                 // Field prepColumnTable:Ljava/sql/PreparedStatement;
     373: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     378: astore        4
     380: goto          416
     383: aload_0
     384: getfield      #55                 // Field prepColumnTableAndColumn:Ljava/sql/PreparedStatement;
     387: iconst_1
     388: aload_2
     389: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     394: aload_0
     395: getfield      #55                 // Field prepColumnTableAndColumn:Ljava/sql/PreparedStatement;
     398: iconst_2
     399: aload_3
     400: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     405: aload_0
     406: getfield      #55                 // Field prepColumnTableAndColumn:Ljava/sql/PreparedStatement;
     409: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     414: astore        4
     416: aload         4
     418: areturn

  private java.sql.ResultSet getTableResultSet(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #40                 // Field prepTableNone:Ljava/sql/PreparedStatement;
       4: ifnonnull     87
       7: aload_0
       8: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
      11: ldc           #100                // String Preparing table queries...
      13: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      18: aload_0
      19: invokevirtual #69                 // Method getConnection:()Ljava/sql/Connection;
      22: astore        4
      24: aload_0
      25: aload         4
      27: ldc           #101                // String select  a.table_name, a.owner, b.comments, \'TABLE\' from all_tables a left join all_tab_comments b on (a.owner=b.owner and a.table_name=b.table_name)  union all select view_name, owner, NULL, \'VIEW\' from all_views
      29: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      34: putfield      #40                 // Field prepTableNone:Ljava/sql/PreparedStatement;
      37: aload_0
      38: aload         4
      40: ldc           #102                // String select  a.table_name, a.owner, b.comments, \'TABLE\' from all_tables a left join all_tab_comments b on (a.owner=b.owner and a.table_name=b.table_name) where a.owner = ?  union all select view_name, owner, NULL, \'VIEW\' from all_views  where owner = ?
      42: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      47: putfield      #42                 // Field prepTableSchema:Ljava/sql/PreparedStatement;
      50: aload_0
      51: aload         4
      53: ldc           #103                // String select  a.table_name, a.owner, b.comments, \'TABLE\' from all_tables a left join all_tab_comments b on (a.owner=b.owner and a.table_name=b.table_name) where a.table_name = ? union all select view_name, owner, NULL, \'VIEW\' from all_views where view_name = ?
      55: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      60: putfield      #43                 // Field prepTableTable:Ljava/sql/PreparedStatement;
      63: aload_0
      64: aload         4
      66: ldc           #104                // String select  a.table_name, a.owner, b.comments, \'TABLE\' from all_tables a left join all_tab_comments b on (a.owner=b.owner and a.table_name=b.table_name) where a.owner = ? and a.table_name = ? union all select view_name, owner, NULL, \'VIEW\' from all_views where owner = ? and view_name = ?
      68: invokeinterface #71,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      73: putfield      #44                 // Field prepTableSchemaAndTable:Ljava/sql/PreparedStatement;
      76: aload_0
      77: getfield      #2                  // Field log:Lorg/apache/commons/logging/Log;
      80: ldc           #105                // String   ...table queries prepared!
      82: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      87: aload_1
      88: ifnonnull     108
      91: aload_2
      92: ifnonnull     108
      95: aload_0
      96: getfield      #40                 // Field prepTableNone:Ljava/sql/PreparedStatement;
      99: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     104: astore_3
     105: goto          240
     108: aload_1
     109: ifnull        208
     112: aload_2
     113: ifnonnull     151
     116: aload_0
     117: getfield      #42                 // Field prepTableSchema:Ljava/sql/PreparedStatement;
     120: iconst_1
     121: aload_1
     122: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     127: aload_0
     128: getfield      #42                 // Field prepTableSchema:Ljava/sql/PreparedStatement;
     131: iconst_2
     132: aload_1
     133: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     138: aload_0
     139: getfield      #42                 // Field prepTableSchema:Ljava/sql/PreparedStatement;
     142: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     147: astore_3
     148: goto          240
     151: aload_0
     152: getfield      #44                 // Field prepTableSchemaAndTable:Ljava/sql/PreparedStatement;
     155: iconst_1
     156: aload_1
     157: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     162: aload_0
     163: getfield      #44                 // Field prepTableSchemaAndTable:Ljava/sql/PreparedStatement;
     166: iconst_2
     167: aload_2
     168: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     173: aload_0
     174: getfield      #44                 // Field prepTableSchemaAndTable:Ljava/sql/PreparedStatement;
     177: iconst_3
     178: aload_1
     179: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     184: aload_0
     185: getfield      #44                 // Field prepTableSchemaAndTable:Ljava/sql/PreparedStatement;
     188: iconst_4
     189: aload_2
     190: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     195: aload_0
     196: getfield      #44                 // Field prepTableSchemaAndTable:Ljava/sql/PreparedStatement;
     199: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     204: astore_3
     205: goto          240
     208: aload_0
     209: getfield      #43                 // Field prepTableTable:Ljava/sql/PreparedStatement;
     212: iconst_1
     213: aload_2
     214: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     219: aload_0
     220: getfield      #43                 // Field prepTableTable:Ljava/sql/PreparedStatement;
     223: iconst_2
     224: aload_2
     225: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     230: aload_0
     231: getfield      #43                 // Field prepTableTable:Ljava/sql/PreparedStatement;
     234: invokeinterface #76,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     239: astore_3
     240: aload_3
     241: areturn
}
