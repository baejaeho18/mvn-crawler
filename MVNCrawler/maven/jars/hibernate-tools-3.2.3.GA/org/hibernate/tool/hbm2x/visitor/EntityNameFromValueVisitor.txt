Compiled from "EntityNameFromValueVisitor.java"
public class org.hibernate.tool.hbm2x.visitor.EntityNameFromValueVisitor extends org.hibernate.tool.hbm2x.visitor.DefaultValueVisitor {
  public org.hibernate.tool.hbm2x.visitor.EntityNameFromValueVisitor();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method org/hibernate/tool/hbm2x/visitor/DefaultValueVisitor."<init>":(Z)V
       5: return

  public org.hibernate.tool.hbm2x.visitor.EntityNameFromValueVisitor(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method org/hibernate/tool/hbm2x/visitor/DefaultValueVisitor."<init>":(Z)V
       5: return

  public java.lang.Object accept(org.hibernate.mapping.OneToOne);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method acceptToOne:(Lorg/hibernate/mapping/ToOne;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object accept(org.hibernate.mapping.ManyToOne);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method acceptToOne:(Lorg/hibernate/mapping/ToOne;)Ljava/lang/Object;
       5: areturn

  private java.lang.Object acceptToOne(org.hibernate.mapping.ToOne);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method org/hibernate/mapping/ToOne.getReferencedEntityName:()Ljava/lang/String;
       4: areturn

  public java.lang.Object accept(org.hibernate.mapping.OneToMany);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method org/hibernate/mapping/OneToMany.getAssociatedClass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #5                  // Method org/hibernate/mapping/PersistentClass.getEntityName:()Ljava/lang/String;
       7: areturn

  public java.lang.Object acceptCollection(org.hibernate.mapping.Collection);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method org/hibernate/mapping/Collection.getElement:()Lorg/hibernate/mapping/Value;
       4: aload_0
       5: invokeinterface #7,  2            // InterfaceMethod org/hibernate/mapping/Value.accept:(Lorg/hibernate/mapping/ValueVisitor;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object accept(org.hibernate.mapping.Bag);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method acceptCollection:(Lorg/hibernate/mapping/Collection;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object accept(org.hibernate.mapping.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method acceptCollection:(Lorg/hibernate/mapping/Collection;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object accept(org.hibernate.mapping.IdentifierBag);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method acceptCollection:(Lorg/hibernate/mapping/Collection;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object accept(org.hibernate.mapping.Set);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method acceptCollection:(Lorg/hibernate/mapping/Collection;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object accept(org.hibernate.mapping.Map);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method acceptCollection:(Lorg/hibernate/mapping/Collection;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object accept(org.hibernate.mapping.Array);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method acceptCollection:(Lorg/hibernate/mapping/Collection;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object accept(org.hibernate.mapping.PrimitiveArray);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method acceptCollection:(Lorg/hibernate/mapping/Collection;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object accept(org.hibernate.mapping.SimpleValue);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object accept(org.hibernate.mapping.Component);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method org/hibernate/mapping/Component.isDynamic:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_1
      10: invokevirtual #10                 // Method org/hibernate/mapping/Component.getComponentClassName:()Ljava/lang/String;
      13: areturn
}
