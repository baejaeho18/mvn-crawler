Compiled from "HBMTagForValueVisitor.java"
public class org.hibernate.tool.hbm2x.visitor.HBMTagForValueVisitor extends org.hibernate.tool.hbm2x.visitor.DefaultValueVisitor {
  public static final org.hibernate.tool.hbm2x.visitor.HBMTagForValueVisitor INSTANCE;

  protected org.hibernate.tool.hbm2x.visitor.HBMTagForValueVisitor();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method org/hibernate/tool/hbm2x/visitor/DefaultValueVisitor."<init>":(Z)V
       5: return

  public java.lang.Object accept(org.hibernate.mapping.Bag);
    Code:
       0: ldc           #2                  // String bag
       2: areturn

  public java.lang.Object accept(org.hibernate.mapping.IdentifierBag);
    Code:
       0: ldc           #3                  // String idbag
       2: areturn

  public java.lang.Object accept(org.hibernate.mapping.List);
    Code:
       0: ldc           #4                  // String list
       2: areturn

  public java.lang.Object accept(org.hibernate.mapping.Map);
    Code:
       0: ldc           #5                  // String map
       2: areturn

  public java.lang.Object accept(org.hibernate.mapping.OneToMany);
    Code:
       0: ldc           #6                  // String one-to-many
       2: areturn

  public java.lang.Object accept(org.hibernate.mapping.Set);
    Code:
       0: ldc           #7                  // String set
       2: areturn

  public java.lang.Object accept(org.hibernate.mapping.Any);
    Code:
       0: ldc           #8                  // String any
       2: areturn

  public java.lang.Object accept(org.hibernate.mapping.SimpleValue);
    Code:
       0: ldc           #9                  // String property
       2: areturn

  public java.lang.Object accept(org.hibernate.mapping.PrimitiveArray);
    Code:
       0: ldc           #10                 // String primitive-array
       2: areturn

  public java.lang.Object accept(org.hibernate.mapping.Array);
    Code:
       0: ldc           #11                 // String array
       2: areturn

  public java.lang.Object accept(org.hibernate.mapping.DependantValue);
    Code:
       0: new           #12                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #13                 // class java/lang/StringBuffer
       7: dup
       8: invokespecial #14                 // Method java/lang/StringBuffer."<init>":()V
      11: ldc           #15                 // String No tag for
      13: invokevirtual #16                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: aload_1
      17: invokevirtual #17                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      20: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      23: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow

  public java.lang.Object accept(org.hibernate.mapping.Component);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method org/hibernate/mapping/Component.isDynamic:()Z
       4: ifeq          12
       7: ldc           #21                 // String dynamic-component
       9: goto          14
      12: ldc           #22                 // String component
      14: areturn

  public java.lang.Object accept(org.hibernate.mapping.ManyToOne);
    Code:
       0: ldc           #23                 // String many-to-one
       2: areturn

  public java.lang.Object accept(org.hibernate.mapping.OneToOne);
    Code:
       0: ldc           #24                 // String one-to-one
       2: areturn

  static {};
    Code:
       0: new           #25                 // class org/hibernate/tool/hbm2x/visitor/HBMTagForValueVisitor
       3: dup
       4: invokespecial #26                 // Method "<init>":()V
       7: putstatic     #27                 // Field INSTANCE:Lorg/hibernate/tool/hbm2x/visitor/HBMTagForValueVisitor;
      10: return
}
