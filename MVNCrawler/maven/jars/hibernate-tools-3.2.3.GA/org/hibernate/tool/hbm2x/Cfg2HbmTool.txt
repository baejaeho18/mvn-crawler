Compiled from "Cfg2HbmTool.java"
public class org.hibernate.tool.hbm2x.Cfg2HbmTool {
  static java.lang.Class class$org$hibernate$persister$entity$SingleTableEntityPersister;

  static java.lang.Class class$org$hibernate$persister$entity$JoinedSubclassEntityPersister;

  static java.lang.Class class$org$hibernate$persister$entity$UnionSubclassEntityPersister;

  public org.hibernate.tool.hbm2x.Cfg2HbmTool();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String getTag(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_1
       1: getstatic     #7                  // Field org/hibernate/tool/hbm2x/visitor/HBMTagForPersistentClassVisitor.INSTANCE:Lorg/hibernate/mapping/PersistentClassVisitor;
       4: invokevirtual #8                  // Method org/hibernate/mapping/PersistentClass.accept:(Lorg/hibernate/mapping/PersistentClassVisitor;)Ljava/lang/Object;
       7: checkcast     #9                  // class java/lang/String
      10: areturn

  public java.lang.String getTag(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/hibernate/mapping/Property.getPersistentClass:()Lorg/hibernate/mapping/PersistentClass;
       4: astore_2
       5: aload_2
       6: ifnull        52
       9: aload_2
      10: invokevirtual #11                 // Method org/hibernate/mapping/PersistentClass.getVersion:()Lorg/hibernate/mapping/Property;
      13: aload_1
      14: if_acmpne     52
      17: aload_1
      18: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
      21: checkcast     #13                 // class org/hibernate/mapping/SimpleValue
      24: invokevirtual #14                 // Method org/hibernate/mapping/SimpleValue.getTypeName:()Ljava/lang/String;
      27: astore_3
      28: ldc           #15                 // String timestamp
      30: aload_3
      31: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifne          46
      37: ldc           #17                 // String dbtimestamp
      39: aload_3
      40: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      43: ifeq          49
      46: ldc           #15                 // String timestamp
      48: areturn
      49: ldc           #18                 // String version
      51: areturn
      52: aload_1
      53: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
      56: getstatic     #19                 // Field org/hibernate/tool/hbm2x/visitor/HBMTagForValueVisitor.INSTANCE:Lorg/hibernate/tool/hbm2x/visitor/HBMTagForValueVisitor;
      59: invokeinterface #20,  2           // InterfaceMethod org/hibernate/mapping/Value.accept:(Lorg/hibernate/mapping/ValueVisitor;)Ljava/lang/Object;
      64: checkcast     #9                  // class java/lang/String
      67: areturn

  public boolean isUnsavedValue(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       4: checkcast     #13                 // class org/hibernate/mapping/SimpleValue
       7: astore_2
       8: aload_2
       9: invokevirtual #21                 // Method org/hibernate/mapping/SimpleValue.getNullValue:()Ljava/lang/String;
      12: ifnull        27
      15: ldc           #22                 // String undefined
      17: aload_2
      18: invokevirtual #21                 // Method org/hibernate/mapping/SimpleValue.getNullValue:()Ljava/lang/String;
      21: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          31
      27: iconst_0
      28: goto          32
      31: iconst_1
      32: ireturn

  public java.lang.String getUnsavedValue(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       4: checkcast     #13                 // class org/hibernate/mapping/SimpleValue
       7: invokevirtual #21                 // Method org/hibernate/mapping/SimpleValue.getNullValue:()Ljava/lang/String;
      10: areturn

  public boolean isIdentifierGeneratorProperties(org.hibernate.mapping.Property);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method getIdentifierGeneratorProperties:(Lorg/hibernate/mapping/Property;)Ljava/util/Properties;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: iconst_0
      11: goto          15
      14: iconst_1
      15: ireturn

  public java.util.Properties getIdentifierGeneratorProperties(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       4: checkcast     #13                 // class org/hibernate/mapping/SimpleValue
       7: invokevirtual #24                 // Method org/hibernate/mapping/SimpleValue.getIdentifierGeneratorProperties:()Ljava/util/Properties;
      10: areturn

  public java.util.Set getFilteredIdentifierGeneratorKeySet(org.hibernate.mapping.Property);
    Code:
       0: new           #25                 // class java/util/HashSet
       3: dup
       4: invokespecial #26                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: invokevirtual #23                 // Method getIdentifierGeneratorProperties:(Lorg/hibernate/mapping/Property;)Ljava/util/Properties;
      13: astore_3
      14: aload_3
      15: invokevirtual #27                 // Method java/util/Properties.keySet:()Ljava/util/Set;
      18: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          69
      35: aload         4
      37: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #9                  // class java/lang/String
      45: astore        5
      47: aload         5
      49: ldc           #31                 // String target_
      51: invokevirtual #32                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      54: ifne          66
      57: aload_2
      58: aload         5
      60: invokeinterface #33,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      65: pop
      66: goto          25
      69: aload_2
      70: areturn

  public boolean isOneToMany(org.hibernate.mapping.Property);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       5: invokevirtual #34                 // Method isOneToMany:(Lorg/hibernate/mapping/Value;)Z
       8: ireturn

  public boolean isManyToMany(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       4: astore_2
       5: aload_2
       6: instanceof    #35                 // class org/hibernate/mapping/Collection
       9: ifeq          24
      12: aload_2
      13: checkcast     #35                 // class org/hibernate/mapping/Collection
      16: invokevirtual #36                 // Method org/hibernate/mapping/Collection.isOneToMany:()Z
      19: ifne          24
      22: iconst_1
      23: ireturn
      24: iconst_0
      25: ireturn

  public boolean isOneToMany(org.hibernate.mapping.Value);
    Code:
       0: aload_1
       1: instanceof    #35                 // class org/hibernate/mapping/Collection
       4: ifeq          15
       7: aload_1
       8: checkcast     #35                 // class org/hibernate/mapping/Collection
      11: invokevirtual #36                 // Method org/hibernate/mapping/Collection.isOneToMany:()Z
      14: ireturn
      15: aload_1
      16: instanceof    #37                 // class org/hibernate/mapping/OneToMany
      19: ifeq          24
      22: iconst_1
      23: ireturn
      24: iconst_0
      25: ireturn

  public boolean isCollection(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       4: ifnull        21
       7: aload_1
       8: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
      11: instanceof    #35                 // class org/hibernate/mapping/Collection
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean isOneToManyCollection(org.hibernate.mapping.Property);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method isCollection:(Lorg/hibernate/mapping/Property;)Z
       5: ifeq          25
       8: aload_1
       9: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
      12: checkcast     #35                 // class org/hibernate/mapping/Collection
      15: invokevirtual #36                 // Method org/hibernate/mapping/Collection.isOneToMany:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean isSimpleValue(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       4: ifnull        21
       7: aload_1
       8: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
      11: instanceof    #13                 // class org/hibernate/mapping/SimpleValue
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean isManyToOne(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       4: ifnull        21
       7: aload_1
       8: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
      11: instanceof    #39                 // class org/hibernate/mapping/ManyToOne
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean isTemporalValue(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       4: instanceof    #13                 // class org/hibernate/mapping/SimpleValue
       7: ifeq          81
      10: aload_1
      11: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
      14: checkcast     #13                 // class org/hibernate/mapping/SimpleValue
      17: invokevirtual #14                 // Method org/hibernate/mapping/SimpleValue.getTypeName:()Ljava/lang/String;
      20: astore_2
      21: ldc           #40                 // String date
      23: aload_2
      24: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifne          39
      30: ldc           #41                 // String java.sql.Date
      32: aload_2
      33: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: ldc           #15                 // String timestamp
      43: aload_2
      44: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          59
      50: ldc           #42                 // String java.sql.Timestamp
      52: aload_2
      53: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifeq          61
      59: iconst_1
      60: ireturn
      61: ldc           #43                 // String time
      63: aload_2
      64: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifne          79
      70: ldc           #44                 // String java.sql.Time
      72: aload_2
      73: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      76: ifeq          81
      79: iconst_1
      80: ireturn
      81: iconst_0
      82: ireturn

  public boolean isNamedQueries(org.hibernate.cfg.Configuration);
    Code:
       0: aload_1
       1: invokevirtual #45                 // Method org/hibernate/cfg/Configuration.getNamedQueries:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: ifnull        18
       9: aload_2
      10: invokeinterface #46,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      15: ifeq          22
      18: iconst_0
      19: goto          23
      22: iconst_1
      23: ireturn

  public boolean isNamedSQLQueries(org.hibernate.cfg.Configuration);
    Code:
       0: aload_1
       1: invokevirtual #47                 // Method org/hibernate/cfg/Configuration.getNamedSQLQueries:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: ifnull        18
       9: aload_2
      10: invokeinterface #46,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      15: ifeq          22
      18: iconst_0
      19: goto          23
      22: iconst_1
      23: ireturn

  public java.lang.String getNamedSQLReturnTag(org.hibernate.engine.query.sql.NativeSQLQueryReturn);
    Code:
       0: ldc           #48                 // String return
       2: astore_2
       3: aload_0
       4: aload_1
       5: invokevirtual #49                 // Method isNamedSQLReturnRole:(Lorg/hibernate/engine/query/sql/NativeSQLQueryReturn;)Z
       8: ifeq          17
      11: ldc           #50                 // String return-join
      13: astore_2
      14: goto          28
      17: aload_0
      18: aload_1
      19: invokevirtual #51                 // Method isNamedSQLReturnCollection:(Lorg/hibernate/engine/query/sql/NativeSQLQueryReturn;)Z
      22: ifeq          28
      25: ldc           #52                 // String load-collection
      27: astore_2
      28: aload_2
      29: areturn

  public java.lang.String getNamedSQLReturnProperty(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn);
    Code:
       0: new           #53                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuffer."<init>":()V
       7: aload_1
       8: invokevirtual #55                 // Method org/hibernate/engine/query/sql/NativeSQLQueryJoinReturn.getOwnerAlias:()Ljava/lang/String;
      11: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: ldc           #57                 // String .
      16: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: aload_1
      20: invokevirtual #58                 // Method org/hibernate/engine/query/sql/NativeSQLQueryJoinReturn.getOwnerProperty:()Ljava/lang/String;
      23: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: invokevirtual #59                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      29: areturn

  public java.lang.String getNamedSQLReturnRole(org.hibernate.engine.query.sql.NativeSQLQueryCollectionReturn);
    Code:
       0: new           #53                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuffer."<init>":()V
       7: aload_1
       8: invokevirtual #60                 // Method org/hibernate/engine/query/sql/NativeSQLQueryCollectionReturn.getOwnerEntityName:()Ljava/lang/String;
      11: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: ldc           #57                 // String .
      16: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: aload_1
      20: invokevirtual #61                 // Method org/hibernate/engine/query/sql/NativeSQLQueryCollectionReturn.getOwnerProperty:()Ljava/lang/String;
      23: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: invokevirtual #59                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      29: areturn

  public boolean isNamedSQLReturnRoot(org.hibernate.engine.query.sql.NativeSQLQueryReturn);
    Code:
       0: aload_1
       1: instanceof    #62                 // class org/hibernate/engine/query/sql/NativeSQLQueryRootReturn
       4: ireturn

  public boolean isNamedSQLReturnCollection(org.hibernate.engine.query.sql.NativeSQLQueryReturn);
    Code:
       0: aload_1
       1: instanceof    #63                 // class org/hibernate/engine/query/sql/NativeSQLQueryCollectionReturn
       4: ireturn

  public boolean isNamedSQLReturnRole(org.hibernate.engine.query.sql.NativeSQLQueryReturn);
    Code:
       0: aload_1
       1: instanceof    #64                 // class org/hibernate/engine/query/sql/NativeSQLQueryJoinReturn
       4: ireturn

  public boolean isFilterDefinitions(org.hibernate.cfg.Configuration);
    Code:
       0: aload_1
       1: invokevirtual #65                 // Method org/hibernate/cfg/Configuration.getFilterDefinitions:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: ifnull        18
       9: aload_2
      10: invokeinterface #46,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      15: ifeq          22
      18: iconst_0
      19: goto          23
      22: iconst_1
      23: ireturn

  public boolean isClassLevelOptimisticLockMode(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_1
       1: invokevirtual #66                 // Method org/hibernate/mapping/PersistentClass.getOptimisticLockMode:()I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getClassLevelOptimisticLockMode(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_1
       1: invokevirtual #66                 // Method org/hibernate/mapping/PersistentClass.getOptimisticLockMode:()I
       4: istore_2
       5: iload_2
       6: iconst_1
       7: if_icmpne     13
      10: ldc           #67                 // String dirty
      12: areturn
      13: iload_2
      14: iconst_2
      15: if_icmpne     21
      18: ldc           #68                 // String all
      20: areturn
      21: iload_2
      22: iconst_m1
      23: if_icmpne     29
      26: ldc           #69                 // String none
      28: areturn
      29: ldc           #18                 // String version
      31: areturn

  public boolean hasFetchMode(org.hibernate.mapping.Property);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #70                 // Method getFetchMode:(Lorg/hibernate/mapping/Property;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnull        19
      10: ldc           #71                 // String default
      12: aload_2
      13: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          21
      19: iconst_0
      20: ireturn
      21: iconst_1
      22: ireturn

  public java.lang.String getFetchMode(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       4: invokeinterface #72,  1           // InterfaceMethod org/hibernate/mapping/Value.getFetchMode:()Lorg/hibernate/FetchMode;
       9: astore_2
      10: aload_2
      11: invokevirtual #73                 // Method org/hibernate/FetchMode.toString:()Ljava/lang/String;
      14: invokevirtual #74                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      17: areturn

  public org.hibernate.mapping.Formula getFormulaForProperty(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       4: invokeinterface #75,  1           // InterfaceMethod org/hibernate/mapping/Value.getColumnIterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          41
      19: aload_2
      20: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: astore_3
      26: aload_3
      27: instanceof    #76                 // class org/hibernate/mapping/Formula
      30: ifeq          38
      33: aload_3
      34: checkcast     #76                 // class org/hibernate/mapping/Formula
      37: areturn
      38: goto          10
      41: aconst_null
      42: areturn

  public java.lang.String columnAttributes(org.hibernate.mapping.Column);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #77                 // Method columnAttributes:(Lorg/hibernate/mapping/Column;Z)Ljava/lang/String;
       6: areturn

  public java.lang.String columnAttributes(org.hibernate.mapping.Column, boolean);
    Code:
       0: new           #53                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_3
       8: aload_1
       9: invokevirtual #78                 // Method org/hibernate/mapping/Column.getPrecision:()I
      12: bipush        19
      14: if_icmpeq     36
      17: aload_3
      18: ldc           #79                 // String precision=\"
      20: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: aload_1
      24: invokevirtual #78                 // Method org/hibernate/mapping/Column.getPrecision:()I
      27: invokevirtual #80                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      30: ldc           #81                 // String \"
      32: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: pop
      36: aload_1
      37: invokevirtual #82                 // Method org/hibernate/mapping/Column.getScale:()I
      40: iconst_2
      41: if_icmpeq     66
      44: aload_3
      45: ldc           #83                 // String scale=\"
      47: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      50: aload_1
      51: invokevirtual #82                 // Method org/hibernate/mapping/Column.getScale:()I
      54: invokevirtual #80                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      57: ldc           #81                 // String \"
      59: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      62: pop
      63: goto          95
      66: aload_1
      67: invokevirtual #84                 // Method org/hibernate/mapping/Column.getLength:()I
      70: sipush        255
      73: if_icmpeq     95
      76: aload_3
      77: ldc           #85                 // String length=\"
      79: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      82: aload_1
      83: invokevirtual #84                 // Method org/hibernate/mapping/Column.getLength:()I
      86: invokevirtual #80                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      89: ldc           #81                 // String \"
      91: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      94: pop
      95: iload_2
      96: ifne          127
      99: aload_1
     100: invokevirtual #86                 // Method org/hibernate/mapping/Column.isNullable:()Z
     103: ifne          113
     106: aload_3
     107: ldc           #87                 // String not-null=\"true\"
     109: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     112: pop
     113: aload_1
     114: invokevirtual #88                 // Method org/hibernate/mapping/Column.isUnique:()Z
     117: ifeq          127
     120: aload_3
     121: ldc           #89                 // String unique=\"true\"
     123: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     126: pop
     127: aload_1
     128: invokevirtual #90                 // Method org/hibernate/mapping/Column.getSqlType:()Ljava/lang/String;
     131: ifnull        157
     134: aload_3
     135: ldc           #91                 // String sql-type=\"
     137: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     140: pop
     141: aload_3
     142: aload_1
     143: invokevirtual #90                 // Method org/hibernate/mapping/Column.getSqlType:()Ljava/lang/String;
     146: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     149: pop
     150: aload_3
     151: ldc           #81                 // String \"
     153: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     156: pop
     157: aload_3
     158: invokevirtual #59                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     161: areturn

  public java.lang.String getClassName(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_1
       1: invokevirtual #92                 // Method org/hibernate/mapping/PersistentClass.hasPojoRepresentation:()Z
       4: ifeq          12
       7: aload_1
       8: invokevirtual #93                 // Method org/hibernate/mapping/PersistentClass.getClassName:()Ljava/lang/String;
      11: areturn
      12: new           #94                 // class org/hibernate/tool/hbm2x/ExporterException
      15: dup
      16: new           #53                 // class java/lang/StringBuffer
      19: dup
      20: invokespecial #54                 // Method java/lang/StringBuffer."<init>":()V
      23: aload_1
      24: invokevirtual #95                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      27: ldc           #96                 // String  does not have a pojo rep.
      29: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      32: invokevirtual #59                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      35: invokespecial #97                 // Method org/hibernate/tool/hbm2x/ExporterException."<init>":(Ljava/lang/String;)V
      38: athrow

  public java.lang.String getClassName(org.hibernate.mapping.OneToMany);
    Code:
       0: aload_1
       1: invokevirtual #98                 // Method org/hibernate/mapping/OneToMany.getAssociatedClass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #93                 // Method org/hibernate/mapping/PersistentClass.getClassName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getProxyInterfaceName(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_1
       1: invokevirtual #92                 // Method org/hibernate/mapping/PersistentClass.hasPojoRepresentation:()Z
       4: ifeq          12
       7: aload_1
       8: invokevirtual #93                 // Method org/hibernate/mapping/PersistentClass.getClassName:()Ljava/lang/String;
      11: areturn
      12: new           #94                 // class org/hibernate/tool/hbm2x/ExporterException
      15: dup
      16: new           #53                 // class java/lang/StringBuffer
      19: dup
      20: invokespecial #54                 // Method java/lang/StringBuffer."<init>":()V
      23: aload_1
      24: invokevirtual #95                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      27: ldc           #96                 // String  does not have a pojo rep.
      29: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      32: invokevirtual #59                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      35: invokespecial #97                 // Method org/hibernate/tool/hbm2x/ExporterException."<init>":(Ljava/lang/String;)V
      38: athrow

  public boolean isImportData(org.hibernate.cfg.Configuration);
    Code:
       0: aload_1
       1: invokevirtual #99                 // Method org/hibernate/cfg/Configuration.getImports:()Ljava/util/Map;
       4: invokeinterface #46,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean needsDiscriminator(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_1
       1: instanceof    #100                // class org/hibernate/mapping/Subclass
       4: ifeq          25
       7: aload_1
       8: instanceof    #101                // class org/hibernate/mapping/UnionSubclass
      11: ifne          25
      14: aload_1
      15: instanceof    #102                // class org/hibernate/mapping/JoinedSubclass
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean needsTable(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_1
       1: instanceof    #100                // class org/hibernate/mapping/Subclass
       4: ifeq          14
       7: aload_1
       8: instanceof    #103                // class org/hibernate/mapping/SingleTableSubclass
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isSubclass(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_1
       1: instanceof    #100                // class org/hibernate/mapping/Subclass
       4: ireturn

  public boolean isJoinedSubclass(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_1
       1: instanceof    #102                // class org/hibernate/mapping/JoinedSubclass
       4: ireturn

  public boolean hasCustomEntityPersister(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_1
       1: invokevirtual #104                // Method org/hibernate/mapping/PersistentClass.getEntityPersisterClass:()Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_2
      12: invokevirtual #105                // Method java/lang/Class.getName:()Ljava/lang/String;
      15: astore_3
      16: aload_1
      17: new           #106                // class org/hibernate/tool/hbm2x/Cfg2HbmTool$HasEntityPersisterVisitor
      20: dup
      21: aload_0
      22: aload_3
      23: aconst_null
      24: invokespecial #107                // Method org/hibernate/tool/hbm2x/Cfg2HbmTool$HasEntityPersisterVisitor."<init>":(Lorg/hibernate/tool/hbm2x/Cfg2HbmTool;Ljava/lang/String;Lorg/hibernate/tool/hbm2x/Cfg2HbmTool$1;)V
      27: invokevirtual #8                  // Method org/hibernate/mapping/PersistentClass.accept:(Lorg/hibernate/mapping/PersistentClassVisitor;)Ljava/lang/Object;
      30: checkcast     #108                // class java/lang/Boolean
      33: astore        4
      35: aload         4
      37: invokevirtual #109                // Method java/lang/Boolean.booleanValue:()Z
      40: ireturn

  public java.lang.String getHibernateTypeName(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       4: new           #110                // class org/hibernate/tool/hbm2x/visitor/EntityNameFromValueVisitor
       7: dup
       8: invokespecial #111                // Method org/hibernate/tool/hbm2x/visitor/EntityNameFromValueVisitor."<init>":()V
      11: invokeinterface #20,  2           // InterfaceMethod org/hibernate/mapping/Value.accept:(Lorg/hibernate/mapping/ValueVisitor;)Ljava/lang/Object;
      16: checkcast     #9                  // class java/lang/String
      19: areturn

  public java.lang.String getSafeHibernateTypeName(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/hibernate/mapping/Property.getValue:()Lorg/hibernate/mapping/Value;
       4: new           #110                // class org/hibernate/tool/hbm2x/visitor/EntityNameFromValueVisitor
       7: dup
       8: iconst_0
       9: invokespecial #112                // Method org/hibernate/tool/hbm2x/visitor/EntityNameFromValueVisitor."<init>":(Z)V
      12: invokeinterface #20,  2           // InterfaceMethod org/hibernate/mapping/Value.accept:(Lorg/hibernate/mapping/ValueVisitor;)Ljava/lang/Object;
      17: checkcast     #9                  // class java/lang/String
      20: areturn

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: invokespecial #4                  // Method java/lang/NoClassDefFoundError."<init>":()V
      13: aload_1
      14: invokevirtual #5                  // Method java/lang/NoClassDefFoundError.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException
}
