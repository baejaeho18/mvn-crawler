Compiled from "EntityBodyReceived.java"
public class org.wso2.transport.http.netty.contractimpl.listener.states.http2.EntityBodyReceived implements org.wso2.transport.http.netty.contractimpl.listener.states.http2.ListenerState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext http2MessageStateContext;

  public org.wso2.transport.http.netty.contractimpl.listener.states.http2.EntityBodyReceived(org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       9: return

  public void readInboundRequestHeaders(org.wso2.transport.http.netty.message.Http2HeadersFrame);
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #4                  // String readInboundRequestHeaders is not a dependant action of this state
       5: invokeinterface #5,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void readInboundRequestBody(org.wso2.transport.http.netty.contractimpl.listener.http2.Http2SourceHandler, org.wso2.transport.http.netty.message.Http2DataFrame);
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #6                  // String readInboundRequestBody is not a dependant action of this state
       5: invokeinterface #5,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void writeOutboundResponseHeaders(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent, int);
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #7                  // String writeOutboundResponseHeaders is not a dependant action of this state
       5: invokeinterface #5,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void writeOutboundResponseBody(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       4: new           #8                  // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/SendingHeaders
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      13: invokespecial #9                  // Method org/wso2/transport/http/netty/contractimpl/listener/states/http2/SendingHeaders."<init>":(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      16: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;)V
      19: aload_0
      20: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      23: invokevirtual #11                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getListenerState:()Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;
      26: aload_1
      27: aload_2
      28: aload_3
      29: iload         4
      31: invokeinterface #12,  5           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState.writeOutboundResponseHeaders:(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lio/netty/handler/codec/http/HttpContent;I)V
      36: return

  public void writeOutboundPromise(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.message.Http2PushPromise) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #13                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getChannelHandlerContext:()Lio/netty/channel/ChannelHandlerContext;
       5: aload_1
       6: invokevirtual #14                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getConnection:()Lio/netty/handler/codec/http2/Http2Connection;
       9: aload_1
      10: invokevirtual #15                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getEncoder:()Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      13: aload_1
      14: invokevirtual #16                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getInboundRequestMsg:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      17: aload_1
      18: invokevirtual #16                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getInboundRequestMsg:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      21: invokevirtual #17                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttpOutboundRespStatusFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      24: aload_1
      25: invokevirtual #18                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getOriginalStreamId:()I
      28: invokestatic  #19                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.writeHttp2Promise:(Lorg/wso2/transport/http/netty/message/Http2PushPromise;Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Connection;Lio/netty/handler/codec/http2/Http2ConnectionEncoder;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;I)V
      31: return

  static {};
    Code:
       0: ldc           #20                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/EntityBodyReceived
       2: invokestatic  #21                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
