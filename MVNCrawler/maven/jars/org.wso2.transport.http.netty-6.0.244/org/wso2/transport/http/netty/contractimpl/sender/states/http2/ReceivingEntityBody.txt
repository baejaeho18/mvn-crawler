Compiled from "ReceivingEntityBody.java"
public class org.wso2.transport.http.netty.contractimpl.sender.states.http2.ReceivingEntityBody implements org.wso2.transport.http.netty.contractimpl.sender.states.http2.SenderState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler http2TargetHandler;

  private final org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel http2ClientChannel;

  private final org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler$Http2RequestWriter http2RequestWriter;

  org.wso2.transport.http.netty.contractimpl.sender.states.http2.ReceivingEntityBody(org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler, org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler$Http2RequestWriter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      14: aload_0
      15: aload_1
      16: invokevirtual #4                  // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler.getHttp2ClientChannel:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      19: putfield      #5                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      22: return

  public void writeOutboundRequestHeaders(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent);
    Code:
       0: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #7                  // String writeOutboundRequestHeaders is not a dependant action of this state
       5: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void writeOutboundRequestBody(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
       4: ifnull        41
       7: aload_3
       8: new           #9                  // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/SendingEntityBody
      11: dup
      12: aload_0
      13: getfield      #2                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      16: aload_0
      17: getfield      #3                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      20: invokespecial #10                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/SendingEntityBody."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
      23: invokevirtual #11                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
      26: aload_3
      27: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getSenderState:()Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;
      30: aload_1
      31: aload_2
      32: aload_3
      33: invokeinterface #13,  4           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState.writeOutboundRequestBody:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpContent;Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      38: goto          45
      41: aload_2
      42: invokestatic  #14                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.releaseContent:(Lio/netty/handler/codec/http/HttpContent;)V
      45: return

  public void readInboundResponseHeaders(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.message.Http2HeadersFrame, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, boolean, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload         5
       2: new           #15                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/ReceivingHeaders
       5: dup
       6: aload_0
       7: getfield      #2                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      10: aload_0
      11: getfield      #3                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      14: invokespecial #16                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/ReceivingHeaders."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
      17: invokevirtual #11                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
      20: aload         5
      22: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getSenderState:()Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;
      25: aload_1
      26: aload_2
      27: aload_3
      28: iload         4
      30: aload         5
      32: invokeinterface #17,  6           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState.readInboundResponseHeaders:(Lio/netty/channel/ChannelHandlerContext;Lorg/wso2/transport/http/netty/message/Http2HeadersFrame;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;ZLorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      37: return

  public void readInboundResponseBody(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.message.Http2DataFrame, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, boolean, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: iload         4
       5: aload         5
       7: invokespecial #18                 // Method onDataRead:(Lorg/wso2/transport/http/netty/message/Http2DataFrame;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;ZLorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      10: return

  public void readInboundPromise(org.wso2.transport.http.netty.message.Http2PushPromise, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder);
    Code:
       0: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #19                 // String readInboundPromise is not a dependant action of this state
       5: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  private void onDataRead(org.wso2.transport.http.netty.message.Http2DataFrame, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, boolean, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method org/wso2/transport/http/netty/message/Http2DataFrame.getStreamId:()I
       4: istore        5
       6: aload_1
       7: invokevirtual #21                 // Method org/wso2/transport/http/netty/message/Http2DataFrame.getData:()Lio/netty/buffer/ByteBuf;
      10: astore        6
      12: aload_1
      13: invokevirtual #22                 // Method org/wso2/transport/http/netty/message/Http2DataFrame.isEndOfStream:()Z
      16: istore        7
      18: iload_3
      19: ifeq          36
      22: aload_0
      23: aload_2
      24: iload         5
      26: iload         7
      28: aload         6
      30: invokespecial #23                 // Method onServerPushDataRead:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;IZLio/netty/buffer/ByteBuf;)V
      33: goto          47
      36: aload_0
      37: aload_2
      38: iload         5
      40: iload         7
      42: aload         6
      44: invokespecial #24                 // Method onResponseDataRead:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;IZLio/netty/buffer/ByteBuf;)V
      47: iload         7
      49: ifeq          72
      52: aload         4
      54: new           #25                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/EntityBodyReceived
      57: dup
      58: aload_0
      59: getfield      #2                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      62: aload_0
      63: getfield      #3                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      66: invokespecial #26                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/EntityBodyReceived."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
      69: invokevirtual #11                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
      72: return

  private void onServerPushDataRead(org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, int, boolean, io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #27                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getPushResponse:(I)Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;
       5: astore        5
       7: iload_3
       8: ifeq          39
      11: aload         5
      13: new           #28                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      16: dup
      17: aload         4
      19: invokevirtual #29                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
      22: invokespecial #30                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
      25: invokevirtual #31                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      28: aload_0
      29: getfield      #5                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      32: iload_2
      33: invokevirtual #32                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.removePromisedMessage:(I)V
      36: goto          56
      39: aload         5
      41: new           #33                 // class io/netty/handler/codec/http/DefaultHttpContent
      44: dup
      45: aload         4
      47: invokevirtual #29                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
      50: invokespecial #34                 // Method io/netty/handler/codec/http/DefaultHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
      53: invokevirtual #31                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      56: return

  private void onResponseDataRead(org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, int, boolean, io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponse:()Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;
       4: astore        5
       6: iload_3
       7: ifeq          38
      10: aload         5
      12: new           #28                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      15: dup
      16: aload         4
      18: invokevirtual #29                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
      21: invokespecial #30                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
      24: invokevirtual #31                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      27: aload_0
      28: getfield      #5                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      31: iload_2
      32: invokevirtual #36                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.removeInFlightMessage:(I)V
      35: goto          55
      38: aload         5
      40: new           #33                 // class io/netty/handler/codec/http/DefaultHttpContent
      43: dup
      44: aload         4
      46: invokevirtual #29                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
      49: invokespecial #34                 // Method io/netty/handler/codec/http/DefaultHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
      52: invokevirtual #31                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      55: return

  static {};
    Code:
       0: ldc           #37                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/ReceivingEntityBody
       2: invokestatic  #38                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
