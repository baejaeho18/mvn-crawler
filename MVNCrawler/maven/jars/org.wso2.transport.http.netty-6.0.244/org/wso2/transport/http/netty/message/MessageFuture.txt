Compiled from "MessageFuture.java"
public class org.wso2.transport.http.netty.message.MessageFuture {
  private static final org.slf4j.Logger LOG;

  private org.wso2.transport.http.netty.message.MessageListener messageListener;

  private final org.wso2.transport.http.netty.message.HttpCarbonMessage httpCarbonMessage;

  public org.wso2.transport.http.netty.message.MessageFuture(org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       9: return

  public void setMessageListener(org.wso2.transport.http.netty.message.MessageListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: putfield      #3                  // Field messageListener:Lorg/wso2/transport/http/netty/message/MessageListener;
      12: aload_0
      13: getfield      #2                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      16: invokevirtual #4                  // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.isEmpty:()Z
      19: ifne          55
      22: aload_0
      23: getfield      #2                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      26: invokevirtual #5                  // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttpContent:()Lio/netty/handler/codec/http/HttpContent;
      29: astore_3
      30: aload_0
      31: aload_3
      32: invokevirtual #6                  // Method notifyMessageListener:(Lio/netty/handler/codec/http/HttpContent;)V
      35: aload_3
      36: instanceof    #7                  // class io/netty/handler/codec/http/LastHttpContent
      39: ifeq          52
      42: aload_0
      43: getfield      #2                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      46: invokevirtual #8                  // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.removeMessageFuture:()V
      49: aload_2
      50: monitorexit
      51: return
      52: goto          12
      55: aload_0
      56: getfield      #2                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      59: invokevirtual #9                  // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.isPassthrough:()Z
      62: ifeq          72
      65: aload_0
      66: getfield      #2                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      69: invokevirtual #10                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.removeInboundContentListener:()V
      72: aload_2
      73: monitorexit
      74: goto          84
      77: astore        4
      79: aload_2
      80: monitorexit
      81: aload         4
      83: athrow
      84: return
    Exception table:
       from    to  target type
           7    51    77   any
          52    74    77   any
          77    81    77   any

  void notifyMessageListener(io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: getfield      #3                  // Field messageListener:Lorg/wso2/transport/http/netty/message/MessageListener;
       4: ifnull        20
       7: aload_0
       8: getfield      #3                  // Field messageListener:Lorg/wso2/transport/http/netty/message/MessageListener;
      11: aload_1
      12: invokeinterface #11,  2           // InterfaceMethod org/wso2/transport/http/netty/message/MessageListener.onMessage:(Lio/netty/handler/codec/http/HttpContent;)V
      17: goto          30
      20: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      23: ldc           #13                 // String The message chunk will be lost because the MessageListener is not set.
      25: invokeinterface #14,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      30: return

  public boolean isMessageListenerSet();
    Code:
       0: aload_0
       1: getfield      #3                  // Field messageListener:Lorg/wso2/transport/http/netty/message/MessageListener;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public synchronized io.netty.handler.codec.http.HttpContent sync();
    Code:
       0: aload_0
       1: getfield      #2                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       4: invokevirtual #15                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getBlockingEntityCollector:()Lorg/wso2/transport/http/netty/message/EntityCollector;
       7: invokeinterface #16,  1           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.getHttpContent:()Lio/netty/handler/codec/http/HttpContent;
      12: areturn

  static {};
    Code:
       0: ldc           #17                 // class org/wso2/transport/http/netty/message/MessageFuture
       2: invokestatic  #18                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
