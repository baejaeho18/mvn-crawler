Compiled from "ReceivingHeaders.java"
public class org.wso2.transport.http.netty.contractimpl.sender.states.http2.ReceivingHeaders implements org.wso2.transport.http.netty.contractimpl.sender.states.http2.SenderState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler http2TargetHandler;

  private final org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel http2ClientChannel;

  private final org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler$Http2RequestWriter http2RequestWriter;

  public org.wso2.transport.http.netty.contractimpl.sender.states.http2.ReceivingHeaders(org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler, org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler$Http2RequestWriter);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      14: aload_0
      15: aload_1
      16: invokevirtual #5                  // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler.getHttp2ClientChannel:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      19: putfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      22: return

  public void writeOutboundRequestHeaders(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent);
    Code:
       0: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #8                  // String writeOutboundRequestHeaders is not a dependant action of this state
       5: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void writeOutboundRequestBody(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
       4: ifnull        41
       7: aload_3
       8: new           #10                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/SendingEntityBody
      11: dup
      12: aload_0
      13: getfield      #3                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      16: aload_0
      17: getfield      #4                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      20: invokespecial #11                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/SendingEntityBody."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
      23: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
      26: aload_3
      27: invokevirtual #13                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getSenderState:()Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;
      30: aload_1
      31: aload_2
      32: aload_3
      33: invokeinterface #14,  4           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState.writeOutboundRequestBody:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpContent;Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      38: goto          45
      41: aload_2
      42: invokestatic  #15                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.releaseContent:(Lio/netty/handler/codec/http/HttpContent;)V
      45: return

  public void readInboundResponseHeaders(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.message.Http2HeadersFrame, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, boolean, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: aload         5
       8: invokespecial #16                 // Method onHeadersRead:(Lio/netty/channel/ChannelHandlerContext;Lorg/wso2/transport/http/netty/message/Http2HeadersFrame;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;ZLorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      11: return

  public void readInboundResponseBody(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.message.Http2DataFrame, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, boolean, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #17                 // String readInboundResponseBody is not a dependant action of this state
       5: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void readInboundPromise(org.wso2.transport.http.netty.message.Http2PushPromise, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder);
    Code:
       0: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #18                 // String readInboundPromise is not a dependant action of this state
       5: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  private void onHeadersRead(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.message.Http2HeadersFrame, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, boolean, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload_2
       1: invokevirtual #19                 // Method org/wso2/transport/http/netty/message/Http2HeadersFrame.getStreamId:()I
       4: istore        6
       6: aload_2
       7: invokevirtual #20                 // Method org/wso2/transport/http/netty/message/Http2HeadersFrame.getHeaders:()Lio/netty/handler/codec/http2/Http2Headers;
      10: astore        7
      12: aload_2
      13: invokevirtual #21                 // Method org/wso2/transport/http/netty/message/Http2HeadersFrame.isEndOfStream:()Z
      16: istore        8
      18: iload         4
      20: ifeq          40
      23: aload_0
      24: aload_1
      25: aload_3
      26: iload         6
      28: iload         8
      30: aload         7
      32: aload         5
      34: invokespecial #22                 // Method onServerPushHeadersRead:(Lio/netty/channel/ChannelHandlerContext;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;IZLio/netty/handler/codec/http2/Http2Headers;Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      37: goto          54
      40: aload_0
      41: aload_1
      42: aload_3
      43: iload         6
      45: iload         8
      47: aload         7
      49: aload         5
      51: invokespecial #23                 // Method onResponseHeadersRead:(Lio/netty/channel/ChannelHandlerContext;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;IZLio/netty/handler/codec/http2/Http2Headers;Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      54: return

  private void onServerPushHeadersRead(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, int, boolean, io.netty.handler.codec.http2.Http2Headers, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: iload         4
       2: ifeq          103
       5: aload_2
       6: iload_3
       7: invokevirtual #24                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getPushResponse:(I)Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;
      10: astore        7
      12: aload         7
      14: ifnull        30
      17: aload_0
      18: iload_3
      19: aload         5
      21: aload_2
      22: aload         7
      24: invokespecial #25                 // Method onTrailersRead:(ILio/netty/handler/codec/http2/Http2Headers;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      27: goto          72
      30: aload         5
      32: ldc           #26                 // String :method
      34: invokeinterface #27,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.contains:(Ljava/lang/Object;)Z
      39: ifeq          72
      42: aload_0
      43: aload_1
      44: iload_3
      45: aload         5
      47: aload_2
      48: invokespecial #28                 // Method setupResponseCarbonMessage:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Headers;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;
      51: astore        7
      53: aload         7
      55: new           #29                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      58: dup
      59: invokespecial #30                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
      62: invokevirtual #31                 // Method org/wso2/transport/http/netty/message/HttpCarbonResponse.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      65: aload_2
      66: iload_3
      67: aload         7
      69: invokevirtual #32                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.addPushResponse:(ILorg/wso2/transport/http/netty/message/HttpCarbonResponse;)V
      72: aload_0
      73: getfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      76: iload_3
      77: invokevirtual #33                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.removePromisedMessage:(I)V
      80: aload         6
      82: new           #34                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/EntityBodyReceived
      85: dup
      86: aload_0
      87: getfield      #3                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      90: aload_0
      91: getfield      #4                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      94: invokespecial #35                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/EntityBodyReceived."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
      97: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
     100: goto          141
     103: aload_0
     104: aload_1
     105: iload_3
     106: aload         5
     108: aload_2
     109: invokespecial #28                 // Method setupResponseCarbonMessage:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Headers;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;
     112: astore        7
     114: aload_2
     115: iload_3
     116: aload         7
     118: invokevirtual #32                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.addPushResponse:(ILorg/wso2/transport/http/netty/message/HttpCarbonResponse;)V
     121: aload         6
     123: new           #36                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/ReceivingEntityBody
     126: dup
     127: aload_0
     128: getfield      #3                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
     131: aload_0
     132: getfield      #4                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
     135: invokespecial #37                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/ReceivingEntityBody."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
     138: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
     141: return

  private void onResponseHeadersRead(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, int, boolean, io.netty.handler.codec.http2.Http2Headers, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: iload         4
       2: ifeq          101
       5: aload_2
       6: invokevirtual #38                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponse:()Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;
       9: astore        7
      11: aload         7
      13: ifnull        29
      16: aload_0
      17: iload_3
      18: aload         5
      20: aload_2
      21: aload         7
      23: invokespecial #25                 // Method onTrailersRead:(ILio/netty/handler/codec/http2/Http2Headers;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      26: goto          70
      29: aload         5
      31: ldc           #26                 // String :method
      33: invokeinterface #27,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.contains:(Ljava/lang/Object;)Z
      38: ifeq          70
      41: aload_0
      42: aload_1
      43: iload_3
      44: aload         5
      46: aload_2
      47: invokespecial #28                 // Method setupResponseCarbonMessage:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Headers;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;
      50: astore        7
      52: aload         7
      54: new           #29                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      57: dup
      58: invokespecial #30                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
      61: invokevirtual #31                 // Method org/wso2/transport/http/netty/message/HttpCarbonResponse.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      64: aload_2
      65: aload         7
      67: invokevirtual #39                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.setResponse:(Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;)V
      70: aload_0
      71: getfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      74: iload_3
      75: invokevirtual #40                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.removeInFlightMessage:(I)V
      78: aload         6
      80: new           #34                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/EntityBodyReceived
      83: dup
      84: aload_0
      85: getfield      #3                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      88: aload_0
      89: getfield      #4                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      92: invokespecial #35                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/EntityBodyReceived."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
      95: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
      98: goto          138
     101: aload_0
     102: aload_1
     103: iload_3
     104: aload         5
     106: aload_2
     107: invokespecial #28                 // Method setupResponseCarbonMessage:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Headers;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;
     110: astore        7
     112: aload_2
     113: aload         7
     115: invokevirtual #39                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.setResponse:(Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;)V
     118: aload         6
     120: new           #36                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/ReceivingEntityBody
     123: dup
     124: aload_0
     125: getfield      #3                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
     128: aload_0
     129: getfield      #4                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
     132: invokespecial #37                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/ReceivingEntityBody."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
     135: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
     138: return

  private void onTrailersRead(int, io.netty.handler.codec.http2.Http2Headers, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: new           #41                 // class io/netty/handler/codec/http/HttpVersion
       3: dup
       4: ldc           #42                 // String HTTP/2.0
       6: iconst_1
       7: invokespecial #43                 // Method io/netty/handler/codec/http/HttpVersion."<init>":(Ljava/lang/String;Z)V
      10: astore        5
      12: new           #29                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      15: dup
      16: invokespecial #30                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
      19: astore        6
      21: aload         6
      23: invokeinterface #44,  1           // InterfaceMethod io/netty/handler/codec/http/LastHttpContent.trailingHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
      28: astore        7
      30: iload_1
      31: aload_2
      32: aload         7
      34: aload         5
      36: iconst_1
      37: iconst_0
      38: invokestatic  #45                 // Method io/netty/handler/codec/http2/HttpConversionUtil.addHttp2ToHttpHeaders:(ILio/netty/handler/codec/http2/Http2Headers;Lio/netty/handler/codec/http/HttpHeaders;Lio/netty/handler/codec/http/HttpVersion;ZZ)V
      41: goto          66
      44: astore        8
      46: aload_3
      47: invokevirtual #47                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponseFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      50: new           #48                 // class java/lang/Exception
      53: dup
      54: ldc           #49                 // String Error while setting http headers
      56: aload         8
      58: invokespecial #50                 // Method java/lang/Exception."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      61: invokeinterface #51,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      66: aload         4
      68: aload         6
      70: invokevirtual #52                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      73: return
    Exception table:
       from    to  target type
          30    41    44   Class io/netty/handler/codec/http2/Http2Exception

  private org.wso2.transport.http.netty.message.HttpCarbonResponse setupResponseCarbonMessage(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder);
    Code:
       0: aload_3
       1: invokeinterface #53,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.status:()Ljava/lang/CharSequence;
       6: astore        5
       8: aload         5
      10: invokestatic  #54                 // Method io/netty/handler/codec/http2/HttpConversionUtil.parseStatus:(Ljava/lang/CharSequence;)Lio/netty/handler/codec/http/HttpResponseStatus;
      13: astore        6
      15: goto          25
      18: astore        7
      20: getstatic     #55                 // Field io/netty/handler/codec/http/HttpResponseStatus.BAD_GATEWAY:Lio/netty/handler/codec/http/HttpResponseStatus;
      23: astore        6
      25: new           #41                 // class io/netty/handler/codec/http/HttpVersion
      28: dup
      29: ldc           #42                 // String HTTP/2.0
      31: iconst_1
      32: invokespecial #43                 // Method io/netty/handler/codec/http/HttpVersion."<init>":(Ljava/lang/String;Z)V
      35: astore        7
      37: new           #56                 // class io/netty/handler/codec/http/DefaultHttpResponse
      40: dup
      41: aload         7
      43: aload         6
      45: invokespecial #57                 // Method io/netty/handler/codec/http/DefaultHttpResponse."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpResponseStatus;)V
      48: astore        8
      50: iload_2
      51: aload_3
      52: aload         8
      54: invokeinterface #58,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      59: aload         7
      61: iconst_0
      62: iconst_0
      63: invokestatic  #45                 // Method io/netty/handler/codec/http2/HttpConversionUtil.addHttp2ToHttpHeaders:(ILio/netty/handler/codec/http2/Http2Headers;Lio/netty/handler/codec/http/HttpHeaders;Lio/netty/handler/codec/http/HttpVersion;ZZ)V
      66: goto          92
      69: astore        9
      71: aload         4
      73: invokevirtual #47                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponseFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      76: new           #48                 // class java/lang/Exception
      79: dup
      80: ldc           #49                 // String Error while setting http headers
      82: aload         9
      84: invokespecial #50                 // Method java/lang/Exception."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      87: invokeinterface #51,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      92: new           #59                 // class org/wso2/transport/http/netty/message/HttpCarbonResponse
      95: dup
      96: aload         8
      98: new           #60                 // class org/wso2/transport/http/netty/message/DefaultListener
     101: dup
     102: aload_1
     103: invokespecial #61                 // Method org/wso2/transport/http/netty/message/DefaultListener."<init>":(Lio/netty/channel/ChannelHandlerContext;)V
     106: invokespecial #62                 // Method org/wso2/transport/http/netty/message/HttpCarbonResponse."<init>":(Lio/netty/handler/codec/http/HttpResponse;Lorg/wso2/transport/http/netty/message/Listener;)V
     109: astore        9
     111: aload         9
     113: ldc           #63                 // String POOLED_BYTE_BUFFER_FACTORY
     115: new           #64                 // class org/wso2/transport/http/netty/message/PooledDataStreamerFactory
     118: dup
     119: aload_1
     120: invokeinterface #65,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
     125: invokespecial #66                 // Method org/wso2/transport/http/netty/message/PooledDataStreamerFactory."<init>":(Lio/netty/buffer/ByteBufAllocator;)V
     128: invokevirtual #67                 // Method org/wso2/transport/http/netty/message/HttpCarbonResponse.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     131: aload         9
     133: ldc           #68                 // String DIRECTION
     135: ldc           #69                 // String DIRECTION_RESPONSE
     137: invokevirtual #67                 // Method org/wso2/transport/http/netty/message/HttpCarbonResponse.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     140: aload         9
     142: ldc           #70                 // String HTTP_STATUS_CODE
     144: aload         8
     146: invokeinterface #71,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.status:()Lio/netty/handler/codec/http/HttpResponseStatus;
     151: invokevirtual #72                 // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
     154: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     157: invokevirtual #67                 // Method org/wso2/transport/http/netty/message/HttpCarbonResponse.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     160: aload         9
     162: ldc           #74                 // String executor.workerpool
     164: aload         4
     166: invokevirtual #75                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getRequest:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
     169: ldc           #74                 // String executor.workerpool
     171: invokevirtual #76                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
     174: invokevirtual #67                 // Method org/wso2/transport/http/netty/message/HttpCarbonResponse.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     177: aload         9
     179: areturn
    Exception table:
       from    to  target type
           8    15    18   Class io/netty/handler/codec/http2/Http2Exception
          50    66    69   Class io/netty/handler/codec/http2/Http2Exception

  static {};
    Code:
       0: ldc           #77                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/ReceivingHeaders
       2: invokestatic  #78                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
