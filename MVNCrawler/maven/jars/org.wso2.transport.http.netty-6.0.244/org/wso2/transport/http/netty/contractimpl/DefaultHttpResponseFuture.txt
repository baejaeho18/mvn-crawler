Compiled from "DefaultHttpResponseFuture.java"
public class org.wso2.transport.http.netty.contractimpl.DefaultHttpResponseFuture implements org.wso2.transport.http.netty.contract.HttpResponseFuture {
  private org.wso2.transport.http.netty.contract.HttpConnectorListener httpConnectorListener;

  private org.wso2.transport.http.netty.contract.HttpClientConnectorListener responseHandleListener;

  private org.wso2.transport.http.netty.contract.HttpClientConnectorListener promiseAvailabilityListener;

  private org.wso2.transport.http.netty.contract.HttpConnectorListener pushPromiseListener;

  private java.util.concurrent.ConcurrentHashMap<java.lang.Integer, org.wso2.transport.http.netty.contract.HttpConnectorListener> pushResponseListeners;

  private java.util.concurrent.ConcurrentHashMap<java.lang.Integer, java.lang.Throwable> pushResponseListenerErrors;

  private org.wso2.transport.http.netty.message.HttpCarbonMessage httpCarbonMessage;

  private org.wso2.transport.http.netty.message.ResponseHandle responseHandle;

  private org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder outboundMsgHolder;

  private java.lang.Throwable throwable;

  private java.lang.Throwable responseHandleError;

  private java.lang.Throwable returnError;

  private java.util.concurrent.Semaphore executionWaitSem;

  private java.util.concurrent.locks.Lock responseLock;

  private java.util.concurrent.locks.Lock responseHandleLock;

  private java.util.concurrent.locks.Lock promiseAvailabilityLock;

  private java.util.concurrent.locks.Lock promiseLock;

  private java.util.concurrent.locks.Lock pushResponseLock;

  public org.wso2.transport.http.netty.contractimpl.DefaultHttpResponseFuture(org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      12: putfield      #4                  // Field responseLock:Ljava/util/concurrent/locks/Lock;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/locks/ReentrantLock
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      23: putfield      #5                  // Field responseHandleLock:Ljava/util/concurrent/locks/Lock;
      26: aload_0
      27: new           #2                  // class java/util/concurrent/locks/ReentrantLock
      30: dup
      31: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      34: putfield      #6                  // Field promiseAvailabilityLock:Ljava/util/concurrent/locks/Lock;
      37: aload_0
      38: new           #2                  // class java/util/concurrent/locks/ReentrantLock
      41: dup
      42: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      45: putfield      #7                  // Field promiseLock:Ljava/util/concurrent/locks/Lock;
      48: aload_0
      49: new           #2                  // class java/util/concurrent/locks/ReentrantLock
      52: dup
      53: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      56: putfield      #8                  // Field pushResponseLock:Ljava/util/concurrent/locks/Lock;
      59: aload_0
      60: aload_1
      61: putfield      #9                  // Field outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      64: aload_0
      65: new           #10                 // class java/util/concurrent/ConcurrentHashMap
      68: dup
      69: invokespecial #11                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      72: putfield      #12                 // Field pushResponseListeners:Ljava/util/concurrent/ConcurrentHashMap;
      75: aload_0
      76: new           #10                 // class java/util/concurrent/ConcurrentHashMap
      79: dup
      80: invokespecial #11                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      83: putfield      #13                 // Field pushResponseListenerErrors:Ljava/util/concurrent/ConcurrentHashMap;
      86: return

  public org.wso2.transport.http.netty.contractimpl.DefaultHttpResponseFuture();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #14                 // Method "<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)V
       5: return

  public void setHttpConnectorListener(org.wso2.transport.http.netty.contract.HttpConnectorListener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field responseLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: aload_1
      11: putfield      #16                 // Field httpConnectorListener:Lorg/wso2/transport/http/netty/contract/HttpConnectorListener;
      14: aload_0
      15: getfield      #17                 // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      18: ifnull        34
      21: aload_0
      22: aload_0
      23: getfield      #17                 // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      26: invokevirtual #18                 // Method notifyHttpListener:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      29: aload_0
      30: aconst_null
      31: putfield      #17                 // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      34: aload_0
      35: getfield      #19                 // Field throwable:Ljava/lang/Throwable;
      38: ifnull        54
      41: aload_0
      42: aload_0
      43: getfield      #19                 // Field throwable:Ljava/lang/Throwable;
      46: invokevirtual #20                 // Method notifyHttpListener:(Ljava/lang/Throwable;)V
      49: aload_0
      50: aconst_null
      51: putfield      #19                 // Field throwable:Ljava/lang/Throwable;
      54: aload_0
      55: getfield      #4                  // Field responseLock:Ljava/util/concurrent/locks/Lock;
      58: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      63: goto          78
      66: astore_2
      67: aload_0
      68: getfield      #4                  // Field responseLock:Ljava/util/concurrent/locks/Lock;
      71: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      76: aload_2
      77: athrow
      78: return
    Exception table:
       from    to  target type
           9    54    66   any

  public void removeHttpListener();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #16                 // Field httpConnectorListener:Lorg/wso2/transport/http/netty/contract/HttpConnectorListener;
       5: return

  public void notifyHttpListener(org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: aload_0
       1: getfield      #4                  // Field responseLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: aload_1
      11: putfield      #17                 // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      14: aload_0
      15: getfield      #22                 // Field executionWaitSem:Ljava/util/concurrent/Semaphore;
      18: ifnull        28
      21: aload_0
      22: getfield      #22                 // Field executionWaitSem:Ljava/util/concurrent/Semaphore;
      25: invokevirtual #23                 // Method java/util/concurrent/Semaphore.release:()V
      28: aload_0
      29: getfield      #16                 // Field httpConnectorListener:Lorg/wso2/transport/http/netty/contract/HttpConnectorListener;
      32: ifnull        51
      35: aload_0
      36: getfield      #16                 // Field httpConnectorListener:Lorg/wso2/transport/http/netty/contract/HttpConnectorListener;
      39: astore_2
      40: aload_0
      41: invokevirtual #24                 // Method removeHttpListener:()V
      44: aload_2
      45: aload_1
      46: invokeinterface #25,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpConnectorListener.onMessage:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      51: aload_0
      52: getfield      #4                  // Field responseLock:Ljava/util/concurrent/locks/Lock;
      55: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      60: goto          75
      63: astore_3
      64: aload_0
      65: getfield      #4                  // Field responseLock:Ljava/util/concurrent/locks/Lock;
      68: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      73: aload_3
      74: athrow
      75: return
    Exception table:
       from    to  target type
           9    51    63   any

  public void notifyHttpListener(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field responseLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: aload_1
      11: putfield      #19                 // Field throwable:Ljava/lang/Throwable;
      14: aload_0
      15: aload_1
      16: putfield      #26                 // Field returnError:Ljava/lang/Throwable;
      19: aload_0
      20: getfield      #22                 // Field executionWaitSem:Ljava/util/concurrent/Semaphore;
      23: ifnull        33
      26: aload_0
      27: getfield      #22                 // Field executionWaitSem:Ljava/util/concurrent/Semaphore;
      30: invokevirtual #23                 // Method java/util/concurrent/Semaphore.release:()V
      33: aload_0
      34: getfield      #16                 // Field httpConnectorListener:Lorg/wso2/transport/http/netty/contract/HttpConnectorListener;
      37: ifnull        56
      40: aload_0
      41: getfield      #16                 // Field httpConnectorListener:Lorg/wso2/transport/http/netty/contract/HttpConnectorListener;
      44: astore_2
      45: aload_0
      46: invokevirtual #24                 // Method removeHttpListener:()V
      49: aload_2
      50: aload_1
      51: invokeinterface #27,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpConnectorListener.onError:(Ljava/lang/Throwable;)V
      56: aload_0
      57: getfield      #4                  // Field responseLock:Ljava/util/concurrent/locks/Lock;
      60: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      65: goto          80
      68: astore_3
      69: aload_0
      70: getfield      #4                  // Field responseLock:Ljava/util/concurrent/locks/Lock;
      73: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      78: aload_3
      79: athrow
      80: return
    Exception table:
       from    to  target type
           9    56    68   any

  public org.wso2.transport.http.netty.contract.HttpResponseFuture sync() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: new           #28                 // class java/util/concurrent/Semaphore
       4: dup
       5: iconst_0
       6: invokespecial #29                 // Method java/util/concurrent/Semaphore."<init>":(I)V
       9: putfield      #22                 // Field executionWaitSem:Ljava/util/concurrent/Semaphore;
      12: aload_0
      13: getfield      #17                 // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      16: ifnonnull     40
      19: aload_0
      20: getfield      #19                 // Field throwable:Ljava/lang/Throwable;
      23: ifnonnull     40
      26: aload_0
      27: getfield      #26                 // Field returnError:Ljava/lang/Throwable;
      30: ifnonnull     40
      33: aload_0
      34: getfield      #22                 // Field executionWaitSem:Ljava/util/concurrent/Semaphore;
      37: invokevirtual #30                 // Method java/util/concurrent/Semaphore.acquire:()V
      40: aload_0
      41: getfield      #17                 // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      44: ifnull        57
      47: aload_0
      48: aconst_null
      49: putfield      #26                 // Field returnError:Ljava/lang/Throwable;
      52: aload_0
      53: aconst_null
      54: putfield      #17                 // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      57: aload_0
      58: getfield      #19                 // Field throwable:Ljava/lang/Throwable;
      61: ifnull        77
      64: aload_0
      65: aload_0
      66: getfield      #19                 // Field throwable:Ljava/lang/Throwable;
      69: putfield      #26                 // Field returnError:Ljava/lang/Throwable;
      72: aload_0
      73: aconst_null
      74: putfield      #19                 // Field throwable:Ljava/lang/Throwable;
      77: aload_0
      78: areturn

  public org.wso2.transport.http.netty.contractimpl.DefaultOperationStatus getStatus();
    Code:
       0: aload_0
       1: getfield      #26                 // Field returnError:Ljava/lang/Throwable;
       4: ifnull        21
       7: new           #31                 // class org/wso2/transport/http/netty/contractimpl/DefaultOperationStatus
      10: dup
      11: aload_0
      12: getfield      #26                 // Field returnError:Ljava/lang/Throwable;
      15: invokespecial #32                 // Method org/wso2/transport/http/netty/contractimpl/DefaultOperationStatus."<init>":(Ljava/lang/Throwable;)V
      18: goto          29
      21: new           #31                 // class org/wso2/transport/http/netty/contractimpl/DefaultOperationStatus
      24: dup
      25: aconst_null
      26: invokespecial #32                 // Method org/wso2/transport/http/netty/contractimpl/DefaultOperationStatus."<init>":(Ljava/lang/Throwable;)V
      29: areturn

  public void resetStatus();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #26                 // Field returnError:Ljava/lang/Throwable;
       5: return

  public void setResponseHandleListener(org.wso2.transport.http.netty.contract.HttpClientConnectorListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field responseHandleLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: aload_1
      11: putfield      #33                 // Field responseHandleListener:Lorg/wso2/transport/http/netty/contract/HttpClientConnectorListener;
      14: aload_0
      15: getfield      #34                 // Field responseHandle:Lorg/wso2/transport/http/netty/message/ResponseHandle;
      18: ifnull        34
      21: aload_0
      22: aload_0
      23: getfield      #34                 // Field responseHandle:Lorg/wso2/transport/http/netty/message/ResponseHandle;
      26: invokevirtual #35                 // Method notifyResponseHandle:(Lorg/wso2/transport/http/netty/message/ResponseHandle;)V
      29: aload_0
      30: aconst_null
      31: putfield      #34                 // Field responseHandle:Lorg/wso2/transport/http/netty/message/ResponseHandle;
      34: aload_0
      35: getfield      #36                 // Field responseHandleError:Ljava/lang/Throwable;
      38: ifnull        54
      41: aload_0
      42: aload_0
      43: getfield      #36                 // Field responseHandleError:Ljava/lang/Throwable;
      46: invokevirtual #20                 // Method notifyHttpListener:(Ljava/lang/Throwable;)V
      49: aload_0
      50: aconst_null
      51: putfield      #36                 // Field responseHandleError:Ljava/lang/Throwable;
      54: aload_0
      55: getfield      #5                  // Field responseHandleLock:Ljava/util/concurrent/locks/Lock;
      58: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      63: goto          78
      66: astore_2
      67: aload_0
      68: getfield      #5                  // Field responseHandleLock:Ljava/util/concurrent/locks/Lock;
      71: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      76: aload_2
      77: athrow
      78: return
    Exception table:
       from    to  target type
           9    54    66   any

  public void removeResponseHandleListener();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #33                 // Field responseHandleListener:Lorg/wso2/transport/http/netty/contract/HttpClientConnectorListener;
       5: return

  public void notifyResponseHandle(org.wso2.transport.http.netty.message.ResponseHandle);
    Code:
       0: aload_0
       1: getfield      #5                  // Field responseHandleLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: aload_1
      11: putfield      #34                 // Field responseHandle:Lorg/wso2/transport/http/netty/message/ResponseHandle;
      14: aload_0
      15: getfield      #33                 // Field responseHandleListener:Lorg/wso2/transport/http/netty/contract/HttpClientConnectorListener;
      18: ifnull        42
      21: aload_0
      22: getfield      #33                 // Field responseHandleListener:Lorg/wso2/transport/http/netty/contract/HttpClientConnectorListener;
      25: astore_2
      26: aload_0
      27: invokevirtual #37                 // Method removeResponseHandleListener:()V
      30: aload_0
      31: aconst_null
      32: putfield      #34                 // Field responseHandle:Lorg/wso2/transport/http/netty/message/ResponseHandle;
      35: aload_2
      36: aload_1
      37: invokeinterface #38,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpClientConnectorListener.onResponseHandle:(Lorg/wso2/transport/http/netty/message/ResponseHandle;)V
      42: aload_0
      43: getfield      #5                  // Field responseHandleLock:Ljava/util/concurrent/locks/Lock;
      46: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      51: goto          66
      54: astore_3
      55: aload_0
      56: getfield      #5                  // Field responseHandleLock:Ljava/util/concurrent/locks/Lock;
      59: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      64: aload_3
      65: athrow
      66: return
    Exception table:
       from    to  target type
           9    42    54   any

  public void notifyResponseHandle(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field responseHandleLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: aload_1
      11: putfield      #36                 // Field responseHandleError:Ljava/lang/Throwable;
      14: aload_0
      15: getfield      #33                 // Field responseHandleListener:Lorg/wso2/transport/http/netty/contract/HttpClientConnectorListener;
      18: ifnull        42
      21: aload_0
      22: getfield      #33                 // Field responseHandleListener:Lorg/wso2/transport/http/netty/contract/HttpClientConnectorListener;
      25: astore_2
      26: aload_0
      27: invokevirtual #37                 // Method removeResponseHandleListener:()V
      30: aload_0
      31: aconst_null
      32: putfield      #36                 // Field responseHandleError:Ljava/lang/Throwable;
      35: aload_2
      36: aload_1
      37: invokeinterface #27,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpConnectorListener.onError:(Ljava/lang/Throwable;)V
      42: aload_0
      43: getfield      #5                  // Field responseHandleLock:Ljava/util/concurrent/locks/Lock;
      46: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      51: goto          66
      54: astore_3
      55: aload_0
      56: getfield      #5                  // Field responseHandleLock:Ljava/util/concurrent/locks/Lock;
      59: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      64: aload_3
      65: athrow
      66: return
    Exception table:
       from    to  target type
           9    42    54   any

  public void setPromiseAvailabilityListener(org.wso2.transport.http.netty.contract.HttpClientConnectorListener);
    Code:
       0: aload_0
       1: getfield      #6                  // Field promiseAvailabilityLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: aload_1
      11: putfield      #39                 // Field promiseAvailabilityListener:Lorg/wso2/transport/http/netty/contract/HttpClientConnectorListener;
      14: aload_0
      15: invokevirtual #40                 // Method notifyPromiseAvailability:()V
      18: aload_0
      19: getfield      #6                  // Field promiseAvailabilityLock:Ljava/util/concurrent/locks/Lock;
      22: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      27: goto          42
      30: astore_2
      31: aload_0
      32: getfield      #6                  // Field promiseAvailabilityLock:Ljava/util/concurrent/locks/Lock;
      35: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      40: aload_2
      41: athrow
      42: return
    Exception table:
       from    to  target type
           9    18    30   any

  public void removePromiseAvailabilityListener();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #39                 // Field promiseAvailabilityListener:Lorg/wso2/transport/http/netty/contract/HttpClientConnectorListener;
       5: return

  public void notifyPromiseAvailability();
    Code:
       0: aload_0
       1: getfield      #6                  // Field promiseAvailabilityLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #39                 // Field promiseAvailabilityListener:Lorg/wso2/transport/http/netty/contract/HttpClientConnectorListener;
      13: ifnull        66
      16: aload_0
      17: getfield      #39                 // Field promiseAvailabilityListener:Lorg/wso2/transport/http/netty/contract/HttpClientConnectorListener;
      20: astore_1
      21: aload_0
      22: getfield      #9                  // Field outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      25: invokevirtual #41                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.hasPromise:()Z
      28: ifeq          45
      31: aload_0
      32: invokevirtual #42                 // Method removePromiseAvailabilityListener:()V
      35: aload_1
      36: iconst_1
      37: invokeinterface #43,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpClientConnectorListener.onPushPromiseAvailability:(Z)V
      42: goto          66
      45: aload_0
      46: getfield      #9                  // Field outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      49: invokevirtual #44                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.isAllPromisesReceived:()Z
      52: ifeq          66
      55: aload_0
      56: invokevirtual #42                 // Method removePromiseAvailabilityListener:()V
      59: aload_1
      60: iconst_0
      61: invokeinterface #43,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpClientConnectorListener.onPushPromiseAvailability:(Z)V
      66: aload_0
      67: getfield      #6                  // Field promiseAvailabilityLock:Ljava/util/concurrent/locks/Lock;
      70: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      75: goto          90
      78: astore_2
      79: aload_0
      80: getfield      #6                  // Field promiseAvailabilityLock:Ljava/util/concurrent/locks/Lock;
      83: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      88: aload_2
      89: athrow
      90: return
    Exception table:
       from    to  target type
           9    66    78   any

  public void setPushPromiseListener(org.wso2.transport.http.netty.contract.HttpConnectorListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field promiseLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: aload_1
      11: putfield      #45                 // Field pushPromiseListener:Lorg/wso2/transport/http/netty/contract/HttpConnectorListener;
      14: aload_0
      15: getfield      #9                  // Field outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      18: invokevirtual #41                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.hasPromise:()Z
      21: ifeq          28
      24: aload_0
      25: invokevirtual #46                 // Method notifyPushPromise:()V
      28: aload_0
      29: getfield      #7                  // Field promiseLock:Ljava/util/concurrent/locks/Lock;
      32: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      37: goto          52
      40: astore_2
      41: aload_0
      42: getfield      #7                  // Field promiseLock:Ljava/util/concurrent/locks/Lock;
      45: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: aload_2
      51: athrow
      52: return
    Exception table:
       from    to  target type
           9    28    40   any

  public void removePushPromiseListener();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #45                 // Field pushPromiseListener:Lorg/wso2/transport/http/netty/contract/HttpConnectorListener;
       5: return

  public void notifyPushPromise();
    Code:
       0: aload_0
       1: getfield      #7                  // Field promiseLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #45                 // Field pushPromiseListener:Lorg/wso2/transport/http/netty/contract/HttpConnectorListener;
      13: ifnull        38
      16: aload_0
      17: getfield      #45                 // Field pushPromiseListener:Lorg/wso2/transport/http/netty/contract/HttpConnectorListener;
      20: astore_1
      21: aload_0
      22: invokevirtual #47                 // Method removePushPromiseListener:()V
      25: aload_1
      26: aload_0
      27: getfield      #9                  // Field outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      30: invokevirtual #48                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getNextPromise:()Lorg/wso2/transport/http/netty/message/Http2PushPromise;
      33: invokeinterface #49,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpConnectorListener.onPushPromise:(Lorg/wso2/transport/http/netty/message/Http2PushPromise;)V
      38: aload_0
      39: getfield      #7                  // Field promiseLock:Ljava/util/concurrent/locks/Lock;
      42: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      47: goto          62
      50: astore_2
      51: aload_0
      52: getfield      #7                  // Field promiseLock:Ljava/util/concurrent/locks/Lock;
      55: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      60: aload_2
      61: athrow
      62: return
    Exception table:
       from    to  target type
           9    38    50   any

  public void setPushResponseListener(org.wso2.transport.http.netty.contract.HttpConnectorListener, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field pushResponseLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #12                 // Field pushResponseListeners:Ljava/util/concurrent/ConcurrentHashMap;
      13: iload_2
      14: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: aload_1
      18: invokevirtual #51                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: getfield      #9                  // Field outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      26: iload_2
      27: invokevirtual #52                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getPushResponse:(I)Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;
      30: astore_3
      31: aload_3
      32: ifnull        41
      35: aload_0
      36: iload_2
      37: aload_3
      38: invokevirtual #53                 // Method notifyPushResponse:(ILorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      41: aload_0
      42: getfield      #13                 // Field pushResponseListenerErrors:Ljava/util/concurrent/ConcurrentHashMap;
      45: iload_2
      46: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: invokevirtual #54                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      52: ifnull        74
      55: aload_0
      56: iload_2
      57: aload_0
      58: getfield      #13                 // Field pushResponseListenerErrors:Ljava/util/concurrent/ConcurrentHashMap;
      61: iload_2
      62: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: invokevirtual #54                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #55                 // class java/lang/Throwable
      71: invokevirtual #56                 // Method notifyPushResponse:(ILjava/lang/Throwable;)V
      74: aload_0
      75: getfield      #8                  // Field pushResponseLock:Ljava/util/concurrent/locks/Lock;
      78: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      83: goto          100
      86: astore        4
      88: aload_0
      89: getfield      #8                  // Field pushResponseLock:Ljava/util/concurrent/locks/Lock;
      92: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      97: aload         4
      99: athrow
     100: return
    Exception table:
       from    to  target type
           9    74    86   any
          86    88    86   any

  public void removePushResponseListener(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field pushResponseListeners:Ljava/util/concurrent/ConcurrentHashMap;
       4: iload_1
       5: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void notifyPushResponse(int, org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: aload_0
       1: getfield      #8                  // Field pushResponseLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #12                 // Field pushResponseListeners:Ljava/util/concurrent/ConcurrentHashMap;
      13: iload_1
      14: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: invokevirtual #54                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #58                 // class org/wso2/transport/http/netty/contract/HttpConnectorListener
      23: astore_3
      24: aload_3
      25: ifnull        48
      28: aload_0
      29: getfield      #12                 // Field pushResponseListeners:Ljava/util/concurrent/ConcurrentHashMap;
      32: iload_1
      33: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_3
      41: iload_1
      42: aload_2
      43: invokeinterface #59,  3           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpConnectorListener.onPushResponse:(ILorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      48: aload_0
      49: getfield      #8                  // Field pushResponseLock:Ljava/util/concurrent/locks/Lock;
      52: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      57: goto          74
      60: astore        4
      62: aload_0
      63: getfield      #8                  // Field pushResponseLock:Ljava/util/concurrent/locks/Lock;
      66: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      71: aload         4
      73: athrow
      74: return
    Exception table:
       from    to  target type
           9    48    60   any
          60    62    60   any

  public void notifyPushResponse(int, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field pushResponseLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #13                 // Field pushResponseListenerErrors:Ljava/util/concurrent/ConcurrentHashMap;
      13: iload_1
      14: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: aload_2
      18: invokevirtual #51                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: getfield      #12                 // Field pushResponseListeners:Ljava/util/concurrent/ConcurrentHashMap;
      26: iload_1
      27: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: invokevirtual #54                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #58                 // class org/wso2/transport/http/netty/contract/HttpConnectorListener
      36: astore_3
      37: aload_3
      38: ifnull        72
      41: aload_0
      42: getfield      #12                 // Field pushResponseListeners:Ljava/util/concurrent/ConcurrentHashMap;
      45: iload_1
      46: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: aload_0
      54: getfield      #13                 // Field pushResponseListenerErrors:Ljava/util/concurrent/ConcurrentHashMap;
      57: iload_1
      58: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: invokevirtual #57                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload_3
      66: aload_2
      67: invokeinterface #27,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpConnectorListener.onError:(Ljava/lang/Throwable;)V
      72: aload_0
      73: getfield      #8                  // Field pushResponseLock:Ljava/util/concurrent/locks/Lock;
      76: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      81: goto          98
      84: astore        4
      86: aload_0
      87: getfield      #8                  // Field pushResponseLock:Ljava/util/concurrent/locks/Lock;
      90: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      95: aload         4
      97: athrow
      98: return
    Exception table:
       from    to  target type
           9    72    84   any
          84    86    84   any

  public org.wso2.transport.http.netty.contract.OperationStatus getStatus();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method getStatus:()Lorg/wso2/transport/http/netty/contractimpl/DefaultOperationStatus;
       4: areturn
}
