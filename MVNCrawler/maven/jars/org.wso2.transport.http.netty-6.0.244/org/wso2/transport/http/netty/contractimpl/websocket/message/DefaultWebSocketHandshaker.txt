Compiled from "DefaultWebSocketHandshaker.java"
public class org.wso2.transport.http.netty.contractimpl.websocket.message.DefaultWebSocketHandshaker implements org.wso2.transport.http.netty.contract.websocket.WebSocketHandshaker {
  private final io.netty.channel.ChannelHandlerContext ctx;

  private final io.netty.handler.codec.http.FullHttpRequest httpRequest;

  private final org.wso2.transport.http.netty.contract.ServerConnectorFuture connectorFuture;

  private final java.lang.String target;

  private final boolean secureConnection;

  private final boolean serverMessage;

  private boolean cancelled;

  private boolean handshakeStarted;

  private org.wso2.transport.http.netty.message.HttpCarbonRequest request;

  public org.wso2.transport.http.netty.contractimpl.websocket.message.DefaultWebSocketHandshaker(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.contract.ServerConnectorFuture, io.netty.handler.codec.http.FullHttpRequest, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field cancelled:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field handshakeStarted:Z
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      24: aload_0
      25: aload_1
      26: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      31: invokeinterface #7,  1            // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      36: ldc           #9                  // String ssl
      38: invokeinterface #10,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/String;)Lio/netty/channel/ChannelHandler;
      43: ifnull        50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: putfield      #11                 // Field secureConnection:Z
      54: aload_0
      55: aload_3
      56: putfield      #12                 // Field httpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
      59: aload_0
      60: aload         4
      62: putfield      #13                 // Field target:Ljava/lang/String;
      65: aload_0
      66: iload         5
      68: putfield      #14                 // Field serverMessage:Z
      71: return

  public java.lang.String getTarget();
    Code:
       0: aload_0
       1: getfield      #13                 // Field target:Ljava/lang/String;
       4: areturn

  public org.wso2.transport.http.netty.contract.websocket.ServerHandshakeFuture handshake();
    Code:
       0: new           #15                 // class io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #12                 // Field httpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
       9: invokespecial #16                 // Method getWebSocketURL:(Lio/netty/handler/codec/http/HttpRequest;)Ljava/lang/String;
      12: aconst_null
      13: iconst_1
      14: invokespecial #17                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
      17: astore_1
      18: aload_1
      19: aload_0
      20: getfield      #12                 // Field httpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
      23: invokevirtual #18                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory.newHandshaker:(Lio/netty/handler/codec/http/HttpRequest;)Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;
      26: astore_2
      27: aload_0
      28: aload_2
      29: iconst_0
      30: aconst_null
      31: invokespecial #19                 // Method handleHandshake:(Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;ILio/netty/handler/codec/http/HttpHeaders;)Lorg/wso2/transport/http/netty/contract/websocket/ServerHandshakeFuture;
      34: areturn

  public org.wso2.transport.http.netty.contract.websocket.ServerHandshakeFuture handshake(java.lang.String[], boolean);
    Code:
       0: new           #15                 // class io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #12                 // Field httpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
       9: invokespecial #16                 // Method getWebSocketURL:(Lio/netty/handler/codec/http/HttpRequest;)Ljava/lang/String;
      12: aload_0
      13: aload_1
      14: invokespecial #20                 // Method getSubProtocolsCSV:([Ljava/lang/String;)Ljava/lang/String;
      17: iload_2
      18: invokespecial #17                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
      21: astore_3
      22: aload_3
      23: aload_0
      24: getfield      #12                 // Field httpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
      27: invokevirtual #18                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory.newHandshaker:(Lio/netty/handler/codec/http/HttpRequest;)Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;
      30: astore        4
      32: aload_0
      33: aload         4
      35: iconst_0
      36: aconst_null
      37: invokespecial #19                 // Method handleHandshake:(Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;ILio/netty/handler/codec/http/HttpHeaders;)Lorg/wso2/transport/http/netty/contract/websocket/ServerHandshakeFuture;
      40: areturn

  public org.wso2.transport.http.netty.contract.websocket.ServerHandshakeFuture handshake(java.lang.String[], boolean, int);
    Code:
       0: new           #15                 // class io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #12                 // Field httpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
       9: invokespecial #16                 // Method getWebSocketURL:(Lio/netty/handler/codec/http/HttpRequest;)Ljava/lang/String;
      12: aload_0
      13: aload_1
      14: invokespecial #20                 // Method getSubProtocolsCSV:([Ljava/lang/String;)Ljava/lang/String;
      17: iload_2
      18: invokespecial #17                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
      21: astore        4
      23: aload         4
      25: aload_0
      26: getfield      #12                 // Field httpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
      29: invokevirtual #18                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory.newHandshaker:(Lio/netty/handler/codec/http/HttpRequest;)Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;
      32: astore        5
      34: aload_0
      35: aload         5
      37: iload_3
      38: aconst_null
      39: invokespecial #19                 // Method handleHandshake:(Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;ILio/netty/handler/codec/http/HttpHeaders;)Lorg/wso2/transport/http/netty/contract/websocket/ServerHandshakeFuture;
      42: areturn

  public org.wso2.transport.http.netty.contract.websocket.ServerHandshakeFuture handshake(java.lang.String[], boolean, int, io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: new           #15                 // class io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #12                 // Field httpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
       9: invokespecial #16                 // Method getWebSocketURL:(Lio/netty/handler/codec/http/HttpRequest;)Ljava/lang/String;
      12: aload_0
      13: aload_1
      14: invokespecial #20                 // Method getSubProtocolsCSV:([Ljava/lang/String;)Ljava/lang/String;
      17: iload_2
      18: invokespecial #17                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
      21: astore        5
      23: aload         5
      25: aload_0
      26: getfield      #12                 // Field httpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
      29: invokevirtual #18                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory.newHandshaker:(Lio/netty/handler/codec/http/HttpRequest;)Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;
      32: astore        6
      34: aload_0
      35: aload         6
      37: iload_3
      38: aload         4
      40: invokespecial #19                 // Method handleHandshake:(Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;ILio/netty/handler/codec/http/HttpHeaders;)Lorg/wso2/transport/http/netty/contract/websocket/ServerHandshakeFuture;
      43: areturn

  public org.wso2.transport.http.netty.contract.websocket.ServerHandshakeFuture handshake(java.lang.String[], boolean, int, io.netty.handler.codec.http.HttpHeaders, int);
    Code:
       0: new           #15                 // class io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #12                 // Field httpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
       9: invokespecial #16                 // Method getWebSocketURL:(Lio/netty/handler/codec/http/HttpRequest;)Ljava/lang/String;
      12: aload_0
      13: aload_1
      14: invokespecial #20                 // Method getSubProtocolsCSV:([Ljava/lang/String;)Ljava/lang/String;
      17: iload_2
      18: iload         5
      20: invokespecial #21                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory."<init>":(Ljava/lang/String;Ljava/lang/String;ZI)V
      23: astore        6
      25: aload         6
      27: aload_0
      28: getfield      #12                 // Field httpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
      31: invokevirtual #18                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory.newHandshaker:(Lio/netty/handler/codec/http/HttpRequest;)Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;
      34: astore        7
      36: aload_0
      37: aload         7
      39: iload_3
      40: aload         4
      42: invokespecial #19                 // Method handleHandshake:(Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;ILio/netty/handler/codec/http/HttpHeaders;)Lorg/wso2/transport/http/netty/contract/websocket/ServerHandshakeFuture;
      45: areturn

  public io.netty.channel.ChannelFuture cancelHandshake(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cancelled:Z
       4: ifeq          17
       7: new           #22                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #23                 // String Cannot cancel the handshake: handshake already cancelled
      13: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field handshakeStarted:Z
      21: ifeq          34
      24: new           #22                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #25                 // String Cannot cancel the handshake: handshake already started
      30: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: iload_1
      35: sipush        400
      38: if_icmplt     52
      41: iload_1
      42: sipush        600
      45: if_icmpge     52
      48: iload_1
      49: goto          55
      52: sipush        400
      55: istore_3
      56: aload_2
      57: ifnull        102
      60: aload_2
      61: getstatic     #26                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      64: invokevirtual #27                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      67: invokestatic  #28                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
      70: astore        5
      72: aload_0
      73: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      76: new           #29                 // class io/netty/handler/codec/http/DefaultFullHttpResponse
      79: dup
      80: getstatic     #30                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_1:Lio/netty/handler/codec/http/HttpVersion;
      83: iload_3
      84: invokestatic  #31                 // Method io/netty/handler/codec/http/HttpResponseStatus.valueOf:(I)Lio/netty/handler/codec/http/HttpResponseStatus;
      87: aload         5
      89: invokespecial #32                 // Method io/netty/handler/codec/http/DefaultFullHttpResponse."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpResponseStatus;Lio/netty/buffer/ByteBuf;)V
      92: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      97: astore        4
      99: goto          127
     102: aload_0
     103: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
     106: new           #29                 // class io/netty/handler/codec/http/DefaultFullHttpResponse
     109: dup
     110: getstatic     #30                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_1:Lio/netty/handler/codec/http/HttpVersion;
     113: iload_3
     114: invokestatic  #31                 // Method io/netty/handler/codec/http/HttpResponseStatus.valueOf:(I)Lio/netty/handler/codec/http/HttpResponseStatus;
     117: invokespecial #34                 // Method io/netty/handler/codec/http/DefaultFullHttpResponse."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpResponseStatus;)V
     120: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     125: astore        4
     127: aload         4
     129: aload_0
     130: invokedynamic #35,  0             // InvokeDynamic #0:operationComplete:(Lorg/wso2/transport/http/netty/contractimpl/websocket/message/DefaultWebSocketHandshaker;)Lio/netty/channel/ChannelFutureListener;
     135: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     140: pop
     141: aload         4
     143: astore        5
     145: aload_0
     146: iconst_1
     147: putfield      #2                  // Field cancelled:Z
     150: aload         5
     152: areturn
     153: astore        6
     155: aload_0
     156: iconst_1
     157: putfield      #2                  // Field cancelled:Z
     160: aload         6
     162: athrow
    Exception table:
       from    to  target type
          34   145   153   any
         153   155   153   any

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cancelled:Z
       4: ireturn

  public boolean isHandshakeStarted();
    Code:
       0: aload_0
       1: getfield      #3                  // Field handshakeStarted:Z
       4: ireturn

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #11                 // Field secureConnection:Z
       4: ireturn

  public boolean isServerMessage();
    Code:
       0: aload_0
       1: getfield      #14                 // Field serverMessage:Z
       4: ireturn

  public org.wso2.transport.http.netty.contract.websocket.WebSocketConnection getWebSocketConnection();
    Code:
       0: new           #22                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #37                 // String Cannot get WebSocket connection without handshake completion
       6: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getChannelId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokestatic  #38                 // Method org/wso2/transport/http/netty/contractimpl/websocket/WebSocketUtil.getChannelId:(Lio/netty/channel/ChannelHandlerContext;)Ljava/lang/String;
       7: areturn

  private org.wso2.transport.http.netty.contract.websocket.ServerHandshakeFuture handleHandshake(io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker, int, io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_1
       1: ifnonnull     17
       4: aload_0
       5: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       8: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      13: invokestatic  #39                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory.sendUnsupportedVersionResponse:(Lio/netty/channel/Channel;)Lio/netty/channel/ChannelFuture;
      16: pop
      17: new           #40                 // class org/wso2/transport/http/netty/contractimpl/websocket/DefaultServerHandshakeFuture
      20: dup
      21: invokespecial #41                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultServerHandshakeFuture."<init>":()V
      24: astore        4
      26: aload_0
      27: getfield      #2                  // Field cancelled:Z
      30: ifeq          54
      33: new           #42                 // class java/lang/IllegalAccessException
      36: dup
      37: ldc           #43                 // String Handshake is already cancelled.
      39: invokespecial #44                 // Method java/lang/IllegalAccessException."<init>":(Ljava/lang/String;)V
      42: astore        5
      44: aload         4
      46: aload         5
      48: invokevirtual #45                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultServerHandshakeFuture.notifyError:(Ljava/lang/Throwable;)V
      51: aload         4
      53: areturn
      54: aload_1
      55: aload_0
      56: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      59: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      64: aload_0
      65: getfield      #12                 // Field httpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
      68: aload_3
      69: aload_0
      70: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      73: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      78: invokeinterface #46,  1           // InterfaceMethod io/netty/channel/Channel.newPromise:()Lio/netty/channel/ChannelPromise;
      83: invokevirtual #47                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.handshake:(Lio/netty/channel/Channel;Lio/netty/handler/codec/http/FullHttpRequest;Lio/netty/handler/codec/http/HttpHeaders;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      86: astore        5
      88: aload         5
      90: aload_0
      91: aload_1
      92: iload_2
      93: aload         4
      95: invokedynamic #48,  0             // InvokeDynamic #1:operationComplete:(Lorg/wso2/transport/http/netty/contractimpl/websocket/message/DefaultWebSocketHandshaker;Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;ILorg/wso2/transport/http/netty/contractimpl/websocket/DefaultServerHandshakeFuture;)Lio/netty/util/concurrent/GenericFutureListener;
     100: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     105: pop
     106: aload_0
     107: iconst_1
     108: putfield      #3                  // Field handshakeStarted:Z
     111: aload         4
     113: areturn

  private void configureFrameHandlingPipeline(int, org.wso2.transport.http.netty.contractimpl.websocket.WebSocketInboundFrameHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #49,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
       9: astore_3
      10: aload_3
      11: ldc           #50                 // String websocket-server-handshake-handler
      13: invokeinterface #51,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Ljava/lang/String;)Lio/netty/channel/ChannelHandler;
      18: pop
      19: iload_1
      20: ifle          51
      23: aload_3
      24: ldc           #52                 // String idleStateHandler
      26: ldc           #52                 // String idleStateHandler
      28: new           #53                 // class io/netty/handler/timeout/IdleStateHandler
      31: dup
      32: lconst_0
      33: lconst_0
      34: iload_1
      35: i2l
      36: getstatic     #54                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      39: invokespecial #55                 // Method io/netty/handler/timeout/IdleStateHandler."<init>":(JJJLjava/util/concurrent/TimeUnit;)V
      42: invokeinterface #56,  4           // InterfaceMethod io/netty/channel/ChannelPipeline.replace:(Ljava/lang/String;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelHandler;
      47: pop
      48: goto          60
      51: aload_3
      52: ldc           #52                 // String idleStateHandler
      54: invokeinterface #51,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Ljava/lang/String;)Lio/netty/channel/ChannelHandler;
      59: pop
      60: aload_3
      61: ldc           #57                 // String WEBSOCKET_FRAME_HANDLER
      63: aload_2
      64: invokeinterface #58,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      69: pop
      70: aload_2
      71: invokevirtual #59                 // Method org/wso2/transport/http/netty/contractimpl/websocket/WebSocketInboundFrameHandler.getWebSocketConnection:()Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection;
      74: invokevirtual #60                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection.stopReadingFrames:()V
      77: aload_3
      78: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
      83: pop
      84: return

  private java.lang.String getWebSocketURL(io.netty.handler.codec.http.HttpRequest);
    Code:
       0: ldc           #62                 // String ws
       2: astore_2
       3: aload_0
       4: getfield      #11                 // Field secureConnection:Z
       7: ifeq          13
      10: ldc           #63                 // String wss
      12: astore_2
      13: new           #64                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      20: aload_2
      21: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #67                 // String ://
      26: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokeinterface #68,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      35: ldc           #69                 // String Host
      37: invokevirtual #70                 // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/String;)Ljava/lang/String;
      40: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokeinterface #71,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.uri:()Ljava/lang/String;
      49: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: areturn

  private java.lang.String getSubProtocolsCSV(java.lang.String[]);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          11
       9: aconst_null
      10: areturn
      11: ldc           #73                 // String
      13: astore_2
      14: aload_1
      15: astore_3
      16: aload_3
      17: arraylength
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: if_icmpge     67
      30: aload_3
      31: iload         5
      33: aaload
      34: astore        6
      36: aload_2
      37: new           #64                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      44: aload         6
      46: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #74                 // String ,
      51: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokevirtual #75                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      60: astore_2
      61: iinc          5, 1
      64: goto          23
      67: aload_2
      68: iconst_0
      69: aload_2
      70: invokevirtual #76                 // Method java/lang/String.length:()I
      73: iconst_1
      74: isub
      75: invokevirtual #77                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      78: astore_2
      79: aload_2
      80: areturn

  public org.wso2.transport.http.netty.message.HttpCarbonRequest getHttpCarbonRequest();
    Code:
       0: aload_0
       1: getfield      #78                 // Field request:Lorg/wso2/transport/http/netty/message/HttpCarbonRequest;
       4: areturn

  public void setHttpCarbonRequest(org.wso2.transport.http.netty.message.HttpCarbonRequest);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #78                 // Field request:Lorg/wso2/transport/http/netty/message/HttpCarbonRequest;
       5: return

  private void lambda$handleHandshake$41(io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker, int, org.wso2.transport.http.netty.contractimpl.websocket.DefaultServerHandshakeFuture, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload         4
       2: invokeinterface #79,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       7: ifeq          72
      10: aload         4
      12: invokeinterface #80,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      17: ifnonnull     72
      20: new           #81                 // class org/wso2/transport/http/netty/contractimpl/websocket/WebSocketInboundFrameHandler
      23: dup
      24: iconst_1
      25: aload_0
      26: getfield      #11                 // Field secureConnection:Z
      29: aload_0
      30: getfield      #13                 // Field target:Ljava/lang/String;
      33: aload_1
      34: invokevirtual #82                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.selectedSubprotocol:()Ljava/lang/String;
      37: aload_0
      38: getfield      #5                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      41: new           #83                 // class org/wso2/transport/http/netty/contractimpl/listener/MessageQueueHandler
      44: dup
      45: invokespecial #84                 // Method org/wso2/transport/http/netty/contractimpl/listener/MessageQueueHandler."<init>":()V
      48: invokespecial #85                 // Method org/wso2/transport/http/netty/contractimpl/websocket/WebSocketInboundFrameHandler."<init>":(ZZLjava/lang/String;Ljava/lang/String;Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;Lorg/wso2/transport/http/netty/contractimpl/listener/MessageQueueHandler;)V
      51: astore        5
      53: aload_0
      54: iload_2
      55: aload         5
      57: invokespecial #86                 // Method configureFrameHandlingPipeline:(ILorg/wso2/transport/http/netty/contractimpl/websocket/WebSocketInboundFrameHandler;)V
      60: aload_3
      61: aload         5
      63: invokevirtual #59                 // Method org/wso2/transport/http/netty/contractimpl/websocket/WebSocketInboundFrameHandler.getWebSocketConnection:()Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection;
      66: invokevirtual #87                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultServerHandshakeFuture.notifySuccess:(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnection;)V
      69: goto          83
      72: aload_3
      73: aload         4
      75: invokeinterface #80,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      80: invokevirtual #45                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultServerHandshakeFuture.notifyError:(Ljava/lang/Throwable;)V
      83: return

  private void lambda$cancelHandshake$40(io.netty.channel.ChannelFuture) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #88,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
       9: pop
      10: return
}
