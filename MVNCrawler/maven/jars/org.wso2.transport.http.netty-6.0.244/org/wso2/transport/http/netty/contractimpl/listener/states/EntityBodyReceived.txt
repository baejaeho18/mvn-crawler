Compiled from "EntityBodyReceived.java"
public class org.wso2.transport.http.netty.contractimpl.listener.states.EntityBodyReceived implements org.wso2.transport.http.netty.contractimpl.listener.states.ListenerState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext messageStateContext;

  private final org.wso2.transport.http.netty.contractimpl.listener.SourceHandler sourceHandler;

  private final float httpVersion;

  org.wso2.transport.http.netty.contractimpl.listener.states.EntityBodyReceived(org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext, org.wso2.transport.http.netty.contractimpl.listener.SourceHandler, float);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field sourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      14: aload_0
      15: fload_3
      16: putfield      #6                  // Field httpVersion:F
      19: return

  public void readInboundRequestHeaders(org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpRequest);
    Code:
       0: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #8                  // String readInboundRequestHeaders is not a dependant action of this state
       5: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void readInboundRequestBody(java.lang.Object) throws org.wso2.transport.http.netty.contract.ServerConnectorException;
    Code:
       0: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #10                 // String readInboundRequestBody is not a dependant action of this state
       5: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void writeOutboundResponseHeaders(org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent);
    Code:
       0: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #11                 // String writeOutboundResponseHeaders is not a dependant action of this state
       5: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void writeOutboundResponseBody(org.wso2.transport.http.netty.contractimpl.HttpOutboundRespListener, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: getfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
       4: new           #12                 // class org/wso2/transport/http/netty/contractimpl/listener/states/SendingHeaders
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      13: invokespecial #13                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/SendingHeaders."<init>":(Lorg/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener;Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;)V
      16: invokevirtual #14                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/ListenerState;)V
      19: aload_0
      20: getfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      23: invokevirtual #15                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.getListenerState:()Lorg/wso2/transport/http/netty/contractimpl/listener/states/ListenerState;
      26: aload_2
      27: aload_3
      28: invokeinterface #16,  3           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/listener/states/ListenerState.writeOutboundResponseHeaders:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lio/netty/handler/codec/http/HttpContent;)V
      33: return

  public void handleAbruptChannelClosure(org.wso2.transport.http.netty.contract.ServerConnectorFuture);
    Code:
       0: aload_1
       1: new           #17                 // class org/wso2/transport/http/netty/contract/ServerConnectorException
       4: dup
       5: ldc           #18                 // String Remote client closed the connection before initiating outbound response
       7: invokespecial #19                 // Method org/wso2/transport/http/netty/contract/ServerConnectorException."<init>":(Ljava/lang/String;)V
      10: invokeinterface #20,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/ServerConnectorFuture.notifyErrorListener:(Ljava/lang/Throwable;)V
      15: goto          30
      18: astore_2
      19: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
      22: ldc           #21                 // String Error while notifying error state to server-connector listener
      24: aload_2
      25: invokeinterface #22,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: return
    Exception table:
       from    to  target type
           0    15    18   Class org/wso2/transport/http/netty/contract/ServerConnectorException

  public io.netty.channel.ChannelFuture handleIdleTimeoutConnectionClosure(org.wso2.transport.http.netty.contract.ServerConnectorFuture, io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: new           #17                 // class org/wso2/transport/http/netty/contract/ServerConnectorException
       4: dup
       5: ldc           #23                 // String Idle timeout triggered before initiating outbound response
       7: invokespecial #19                 // Method org/wso2/transport/http/netty/contract/ServerConnectorException."<init>":(Ljava/lang/String;)V
      10: invokeinterface #20,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/ServerConnectorFuture.notifyErrorListener:(Ljava/lang/Throwable;)V
      15: goto          30
      18: astore_3
      19: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
      22: ldc           #21                 // String Error while notifying error state to server-connector listener
      24: aload_3
      25: invokeinterface #22,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: ldc           #24                 // String Server time out
      32: astore_3
      33: aload_2
      34: getstatic     #25                 // Field io/netty/handler/codec/http/HttpResponseStatus.INTERNAL_SERVER_ERROR:Lio/netty/handler/codec/http/HttpResponseStatus;
      37: aload_3
      38: getstatic     #26                 // Field io/netty/util/CharsetUtil.UTF_8:Ljava/nio/charset/Charset;
      41: invokestatic  #27                 // Method io/netty/buffer/Unpooled.copiedBuffer:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lio/netty/buffer/ByteBuf;
      44: aload_3
      45: invokevirtual #28                 // Method java/lang/String.length:()I
      48: aload_0
      49: getfield      #6                  // Field httpVersion:F
      52: aload_0
      53: getfield      #5                  // Field sourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      56: invokevirtual #29                 // Method org/wso2/transport/http/netty/contractimpl/listener/SourceHandler.getServerName:()Ljava/lang/String;
      59: invokestatic  #30                 // Method org/wso2/transport/http/netty/contractimpl/common/states/StateUtil.sendRequestTimeoutResponse:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpResponseStatus;Lio/netty/buffer/ByteBuf;IFLjava/lang/String;)Lio/netty/channel/ChannelFuture;
      62: astore        4
      64: aload         4
      66: aload_2
      67: invokedynamic #31,  0             // InvokeDynamic #0:operationComplete:(Lio/netty/channel/ChannelHandlerContext;)Lio/netty/channel/ChannelFutureListener;
      72: invokeinterface #32,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      77: pop
      78: aload         4
      80: areturn
    Exception table:
       from    to  target type
           0    15    18   Class org/wso2/transport/http/netty/contract/ServerConnectorException

  private static void lambda$handleIdleTimeoutConnectionClosure$60(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelFuture) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
       6: astore_2
       7: aload_2
       8: ifnull        25
      11: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #34                 // String Failed to send: {}
      16: aload_2
      17: invokevirtual #35                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      20: invokeinterface #36,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: invokeinterface #37,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      31: pop
      32: return

  static {};
    Code:
       0: ldc           #38                 // class org/wso2/transport/http/netty/contractimpl/listener/states/EntityBodyReceived
       2: invokestatic  #39                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
