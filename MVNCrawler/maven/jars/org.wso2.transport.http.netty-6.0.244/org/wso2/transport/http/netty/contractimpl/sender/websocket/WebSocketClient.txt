Compiled from "WebSocketClient.java"
public class org.wso2.transport.http.netty.contractimpl.sender.websocket.WebSocketClient {
  private static final org.slf4j.Logger LOG;

  private org.wso2.transport.http.netty.contractimpl.sender.websocket.WebSocketClientHandshakeHandler clientHandshakeHandler;

  private final java.lang.String url;

  private final java.lang.String subProtocols;

  private final int idleTimeout;

  private final io.netty.handler.codec.http.HttpHeaders headers;

  private final io.netty.channel.EventLoopGroup wsClientEventLoopGroup;

  private final boolean autoRead;

  private final org.wso2.transport.http.netty.contract.websocket.WebSocketClientConnectorConfig connectorConfig;

  public org.wso2.transport.http.netty.contractimpl.sender.websocket.WebSocketClient(io.netty.channel.EventLoopGroup, org.wso2.transport.http.netty.contract.websocket.WebSocketClientConnectorConfig);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: invokevirtual #3                  // Method org/wso2/transport/http/netty/contract/websocket/WebSocketClientConnectorConfig.getRemoteAddress:()Ljava/lang/String;
       9: putfield      #4                  // Field url:Ljava/lang/String;
      12: aload_0
      13: aload_2
      14: invokevirtual #5                  // Method org/wso2/transport/http/netty/contract/websocket/WebSocketClientConnectorConfig.getSubProtocolsAsCSV:()Ljava/lang/String;
      17: putfield      #6                  // Field subProtocols:Ljava/lang/String;
      20: aload_0
      21: aload_2
      22: invokevirtual #7                  // Method org/wso2/transport/http/netty/contract/websocket/WebSocketClientConnectorConfig.getIdleTimeoutInMillis:()I
      25: putfield      #8                  // Field idleTimeout:I
      28: aload_0
      29: aload_2
      30: invokevirtual #9                  // Method org/wso2/transport/http/netty/contract/websocket/WebSocketClientConnectorConfig.getHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
      33: putfield      #10                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      36: aload_0
      37: aload_1
      38: putfield      #11                 // Field wsClientEventLoopGroup:Lio/netty/channel/EventLoopGroup;
      41: aload_0
      42: aload_2
      43: invokevirtual #12                 // Method org/wso2/transport/http/netty/contract/websocket/WebSocketClientConnectorConfig.isAutoRead:()Z
      46: putfield      #13                 // Field autoRead:Z
      49: aload_0
      50: aload_2
      51: putfield      #14                 // Field connectorConfig:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketClientConnectorConfig;
      54: return

  public org.wso2.transport.http.netty.contract.websocket.ClientHandshakeFuture handshake();
    Code:
       0: new           #15                 // class org/wso2/transport/http/netty/contractimpl/websocket/DefaultClientHandshakeFuture
       3: dup
       4: invokespecial #16                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultClientHandshakeFuture."<init>":()V
       7: astore_1
       8: new           #17                 // class java/net/URI
      11: dup
      12: aload_0
      13: getfield      #4                  // Field url:Ljava/lang/String;
      16: invokespecial #18                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      19: astore_2
      20: aload_2
      21: invokevirtual #19                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      24: astore_3
      25: ldc           #21                 // String ws
      27: aload_3
      28: invokevirtual #22                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      31: ifne          67
      34: ldc           #23                 // String wss
      36: aload_3
      37: invokevirtual #22                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      40: ifne          67
      43: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      46: ldc           #25                 // String Only WS(S) is supported.
      48: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      53: new           #27                 // class java/net/URISyntaxException
      56: dup
      57: aload_0
      58: getfield      #4                  // Field url:Ljava/lang/String;
      61: ldc           #28                 // String WebSocket client supports only WS(S) scheme
      63: invokespecial #29                 // Method java/net/URISyntaxException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      66: athrow
      67: aload_2
      68: invokevirtual #30                 // Method java/net/URI.getHost:()Ljava/lang/String;
      71: ifnonnull     79
      74: ldc           #31                 // String 127.0.0.1
      76: goto          83
      79: aload_2
      80: invokevirtual #30                 // Method java/net/URI.getHost:()Ljava/lang/String;
      83: astore        4
      85: aload_0
      86: aload_2
      87: invokespecial #32                 // Method getPort:(Ljava/net/URI;)I
      90: istore        5
      92: ldc           #23                 // String wss
      94: aload_3
      95: invokevirtual #22                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      98: istore        6
     100: aload_2
     101: getstatic     #33                 // Field io/netty/handler/codec/http/websocketx/WebSocketVersion.V13:Lio/netty/handler/codec/http/websocketx/WebSocketVersion;
     104: aload_0
     105: getfield      #6                  // Field subProtocols:Ljava/lang/String;
     108: iconst_1
     109: aload_0
     110: getfield      #10                 // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
     113: invokestatic  #34                 // Method io/netty/handler/codec/http/websocketx/WebSocketClientHandshakerFactory.newHandshaker:(Ljava/net/URI;Lio/netty/handler/codec/http/websocketx/WebSocketVersion;Ljava/lang/String;ZLio/netty/handler/codec/http/HttpHeaders;)Lio/netty/handler/codec/http/websocketx/WebSocketClientHandshaker;
     116: astore        7
     118: new           #35                 // class org/wso2/transport/http/netty/contractimpl/listener/MessageQueueHandler
     121: dup
     122: invokespecial #36                 // Method org/wso2/transport/http/netty/contractimpl/listener/MessageQueueHandler."<init>":()V
     125: astore        8
     127: aload_0
     128: new           #37                 // class org/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClientHandshakeHandler
     131: dup
     132: aload         7
     134: aload_1
     135: aload         8
     137: iload         6
     139: aload_0
     140: getfield      #13                 // Field autoRead:Z
     143: aload_0
     144: getfield      #4                  // Field url:Ljava/lang/String;
     147: aload_1
     148: invokespecial #38                 // Method org/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClientHandshakeHandler."<init>":(Lio/netty/handler/codec/http/websocketx/WebSocketClientHandshaker;Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultClientHandshakeFuture;Lorg/wso2/transport/http/netty/contractimpl/listener/MessageQueueHandler;ZZLjava/lang/String;Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;)V
     151: putfield      #39                 // Field clientHandshakeHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClientHandshakeHandler;
     154: aload_0
     155: aload         4
     157: iload         5
     159: aload_1
     160: invokespecial #40                 // Method initClientBootstrap:(Ljava/lang/String;ILorg/wso2/transport/http/netty/contractimpl/websocket/DefaultClientHandshakeFuture;)Lio/netty/bootstrap/Bootstrap;
     163: astore        9
     165: aload         9
     167: aload_2
     168: invokevirtual #30                 // Method java/net/URI.getHost:()Ljava/lang/String;
     171: iload         5
     173: invokevirtual #41                 // Method io/netty/bootstrap/Bootstrap.connect:(Ljava/lang/String;I)Lio/netty/channel/ChannelFuture;
     176: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/ChannelFuture.sync:()Lio/netty/channel/ChannelFuture;
     181: pop
     182: goto          192
     185: astore_2
     186: aload_0
     187: aload_1
     188: aload_2
     189: invokespecial #44                 // Method handleHandshakeError:(Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultClientHandshakeFuture;Ljava/lang/Throwable;)V
     192: aload_1
     193: areturn
    Exception table:
       from    to  target type
           8   182   185   Class java/lang/Exception

  private void handleHandshakeError(org.wso2.transport.http.netty.contractimpl.websocket.DefaultClientHandshakeFuture, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #39                 // Field clientHandshakeHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClientHandshakeHandler;
       4: ifnull        22
       7: aload_1
       8: aload_2
       9: aload_0
      10: getfield      #39                 // Field clientHandshakeHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClientHandshakeHandler;
      13: invokevirtual #45                 // Method org/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClientHandshakeHandler.getHttpCarbonResponse:()Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;
      16: invokevirtual #46                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultClientHandshakeFuture.notifyError:(Ljava/lang/Throwable;Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;)V
      19: goto          28
      22: aload_1
      23: aload_2
      24: aconst_null
      25: invokevirtual #46                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultClientHandshakeFuture.notifyError:(Ljava/lang/Throwable;Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;)V
      28: return

  private io.netty.bootstrap.Bootstrap initClientBootstrap(java.lang.String, int, org.wso2.transport.http.netty.contractimpl.websocket.DefaultClientHandshakeFuture);
    Code:
       0: new           #47                 // class io/netty/bootstrap/Bootstrap
       3: dup
       4: invokespecial #48                 // Method io/netty/bootstrap/Bootstrap."<init>":()V
       7: astore        4
       9: aload_0
      10: getfield      #14                 // Field connectorConfig:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketClientConnectorConfig;
      13: invokevirtual #49                 // Method org/wso2/transport/http/netty/contract/websocket/WebSocketClientConnectorConfig.getClientSSLConfig:()Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      16: astore        5
      18: aload         4
      20: aload_0
      21: getfield      #11                 // Field wsClientEventLoopGroup:Lio/netty/channel/EventLoopGroup;
      24: invokevirtual #50                 // Method io/netty/bootstrap/Bootstrap.group:(Lio/netty/channel/EventLoopGroup;)Lio/netty/bootstrap/AbstractBootstrap;
      27: checkcast     #47                 // class io/netty/bootstrap/Bootstrap
      30: ldc           #51                 // class io/netty/channel/socket/nio/NioSocketChannel
      32: invokevirtual #52                 // Method io/netty/bootstrap/Bootstrap.channel:(Ljava/lang/Class;)Lio/netty/bootstrap/AbstractBootstrap;
      35: checkcast     #47                 // class io/netty/bootstrap/Bootstrap
      38: new           #53                 // class org/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient$1
      41: dup
      42: aload_0
      43: aload         5
      45: aload_1
      46: iload_2
      47: aload_3
      48: invokespecial #54                 // Method org/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient$1."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient;Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;Ljava/lang/String;ILorg/wso2/transport/http/netty/contractimpl/websocket/DefaultClientHandshakeFuture;)V
      51: invokevirtual #55                 // Method io/netty/bootstrap/Bootstrap.handler:(Lio/netty/channel/ChannelHandler;)Lio/netty/bootstrap/AbstractBootstrap;
      54: pop
      55: aload         4
      57: areturn

  private void configureHandshakePipeline(io.netty.channel.ChannelPipeline);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #56                 // class io/netty/channel/ChannelHandler
       5: dup
       6: iconst_0
       7: new           #57                 // class io/netty/handler/codec/http/HttpClientCodec
      10: dup
      11: invokespecial #58                 // Method io/netty/handler/codec/http/HttpClientCodec."<init>":()V
      14: aastore
      15: invokeinterface #59,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      20: pop
      21: aload_1
      22: iconst_1
      23: anewarray     #56                 // class io/netty/channel/ChannelHandler
      26: dup
      27: iconst_0
      28: new           #60                 // class io/netty/handler/codec/http/HttpObjectAggregator
      31: dup
      32: sipush        8192
      35: invokespecial #61                 // Method io/netty/handler/codec/http/HttpObjectAggregator."<init>":(I)V
      38: aastore
      39: invokeinterface #59,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      44: pop
      45: aload_1
      46: iconst_1
      47: anewarray     #56                 // class io/netty/channel/ChannelHandler
      50: dup
      51: iconst_0
      52: getstatic     #62                 // Field io/netty/handler/codec/http/websocketx/extensions/compression/WebSocketClientCompressionHandler.INSTANCE:Lio/netty/handler/codec/http/websocketx/extensions/compression/WebSocketClientCompressionHandler;
      55: aastore
      56: invokeinterface #59,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      61: pop
      62: aload_0
      63: getfield      #8                  // Field idleTimeout:I
      66: ifle          100
      69: aload_1
      70: iconst_1
      71: anewarray     #56                 // class io/netty/channel/ChannelHandler
      74: dup
      75: iconst_0
      76: new           #63                 // class io/netty/handler/timeout/IdleStateHandler
      79: dup
      80: lconst_0
      81: lconst_0
      82: aload_0
      83: getfield      #8                  // Field idleTimeout:I
      86: i2l
      87: getstatic     #64                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      90: invokespecial #65                 // Method io/netty/handler/timeout/IdleStateHandler."<init>":(JJJLjava/util/concurrent/TimeUnit;)V
      93: aastore
      94: invokeinterface #59,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      99: pop
     100: aload_1
     101: ldc           #66                 // String websocket-client-handshake-handler
     103: aload_0
     104: getfield      #39                 // Field clientHandshakeHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClientHandshakeHandler;
     107: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     112: pop
     113: return

  private int getPort(java.net.URI);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: invokevirtual #68                 // Method java/net/URI.getPort:()I
       9: iconst_m1
      10: if_icmpne     113
      13: aload_2
      14: astore_3
      15: iconst_m1
      16: istore        4
      18: aload_3
      19: invokevirtual #69                 // Method java/lang/String.hashCode:()I
      22: lookupswitch  { // 2
                  3804: 48
                118039: 63
               default: 75
          }
      48: aload_3
      49: ldc           #21                 // String ws
      51: invokevirtual #70                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      54: ifeq          75
      57: iconst_0
      58: istore        4
      60: goto          75
      63: aload_3
      64: ldc           #23                 // String wss
      66: invokevirtual #70                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      69: ifeq          75
      72: iconst_1
      73: istore        4
      75: iload         4
      77: lookupswitch  { // 2
                     0: 104
                     1: 107
               default: 111
          }
     104: bipush        80
     106: ireturn
     107: sipush        443
     110: ireturn
     111: iconst_m1
     112: ireturn
     113: aload_1
     114: invokevirtual #68                 // Method java/net/URI.getPort:()I
     117: ireturn

  static void access$100(org.wso2.transport.http.netty.contractimpl.sender.websocket.WebSocketClient, io.netty.channel.ChannelPipeline);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method configureHandshakePipeline:(Lio/netty/channel/ChannelPipeline;)V
       5: return

  static {};
    Code:
       0: ldc           #71                 // class org/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient
       2: invokestatic  #72                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
