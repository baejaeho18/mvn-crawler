Compiled from "StateUtil.java"
public class org.wso2.transport.http.netty.contractimpl.common.states.StateUtil {
  private static final org.slf4j.Logger LOG;

  public static final java.lang.String ILLEGAL_STATE_ERROR;

  public static final java.lang.String CONNECTOR_NOTIFYING_ERROR;

  private org.wso2.transport.http.netty.contractimpl.common.states.StateUtil();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean checkChunkingCompatibility(java.lang.String, org.wso2.transport.http.netty.contract.config.ChunkConfig);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method org/wso2/transport/http/netty/contractimpl/common/Util.isVersionCompatibleForChunking:(Ljava/lang/String;)Z
       4: ifne          15
       7: aload_1
       8: aload_0
       9: invokestatic  #4                  // Method org/wso2/transport/http/netty/contractimpl/common/Util.shouldEnforceChunkingforHttpOneZero:(Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;Ljava/lang/String;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public static void notifyIfHeaderWriteFailure(org.wso2.transport.http.netty.contract.HttpResponseFuture, io.netty.channel.ChannelFuture, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokedynamic #5,  0              // InvokeDynamic #0:operationComplete:(Ljava/lang/String;Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;)Lio/netty/util/concurrent/GenericFutureListener;
       8: invokeinterface #6,  2            // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      13: pop
      14: return

  public static void writeRequestHeaders(org.wso2.transport.http.netty.message.HttpCarbonMessage, org.wso2.transport.http.netty.contract.HttpResponseFuture, java.lang.String, org.wso2.transport.http.netty.contractimpl.sender.channel.TargetChannel);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #7                  // Method setHttpVersionProperty:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Ljava/lang/String;)V
       5: aload_0
       6: invokestatic  #8                  // Method org/wso2/transport/http/netty/contractimpl/common/Util.createHttpRequest:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)Lio/netty/handler/codec/http/HttpRequest;
       9: astore        4
      11: aload_3
      12: iconst_1
      13: invokevirtual #9                  // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.setRequestHeaderWritten:(Z)V
      16: aload_3
      17: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
      20: aload         4
      22: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/Channel.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      27: astore        5
      29: aload_1
      30: aload         5
      32: ldc           #12                 // String Connection between client and remote host is closed
      34: invokestatic  #13                 // Method notifyIfHeaderWriteFailure:(Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;Lio/netty/channel/ChannelFuture;Ljava/lang/String;)V
      37: return

  private static void setHttpVersionProperty(org.wso2.transport.http.netty.message.HttpCarbonMessage, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
       4: invokevirtual #15                 // Method java/lang/Float.floatValue:()F
       7: fconst_2
       8: fcmpl
       9: ifne          26
      12: aload_0
      13: ldc           #16                 // String HTTP_VERSION
      15: ldc           #17                 // float 1.1f
      17: invokestatic  #18                 // Method java/lang/String.valueOf:(F)Ljava/lang/String;
      20: invokevirtual #19                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      23: goto          33
      26: aload_0
      27: ldc           #16                 // String HTTP_VERSION
      29: aload_1
      30: invokevirtual #19                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      33: return

  public static io.netty.channel.ChannelFuture sendRequestTimeoutResponse(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpResponseStatus, io.netty.buffer.ByteBuf, int, float, java.lang.String);
    Code:
       0: fload         4
       2: fconst_1
       3: fcmpl
       4: ifne          24
       7: new           #20                 // class io/netty/handler/codec/http/DefaultFullHttpResponse
      10: dup
      11: getstatic     #21                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_0:Lio/netty/handler/codec/http/HttpVersion;
      14: aload_1
      15: aload_2
      16: invokespecial #22                 // Method io/netty/handler/codec/http/DefaultFullHttpResponse."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpResponseStatus;Lio/netty/buffer/ByteBuf;)V
      19: astore        6
      21: goto          38
      24: new           #20                 // class io/netty/handler/codec/http/DefaultFullHttpResponse
      27: dup
      28: getstatic     #23                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_1:Lio/netty/handler/codec/http/HttpVersion;
      31: aload_1
      32: aload_2
      33: invokespecial #22                 // Method io/netty/handler/codec/http/DefaultFullHttpResponse."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpResponseStatus;Lio/netty/buffer/ByteBuf;)V
      36: astore        6
      38: aload         6
      40: invokeinterface #24,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      45: getstatic     #25                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_LENGTH:Lio/netty/util/AsciiString;
      48: iload_3
      49: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: invokevirtual #27                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      55: pop
      56: iload_3
      57: ifeq          76
      60: aload         6
      62: invokeinterface #24,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      67: getstatic     #28                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_TYPE:Lio/netty/util/AsciiString;
      70: ldc           #29                 // String text/plain
      72: invokevirtual #27                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      75: pop
      76: aload         6
      78: invokeinterface #24,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      83: getstatic     #30                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONNECTION:Lio/netty/util/AsciiString;
      86: invokevirtual #31                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
      89: ldc           #32                 // String close
      91: invokevirtual #33                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      94: pop
      95: aload         6
      97: invokeinterface #24,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
     102: getstatic     #34                 // Field io/netty/handler/codec/http/HttpHeaderNames.SERVER:Lio/netty/util/AsciiString;
     105: invokevirtual #31                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
     108: aload         5
     110: invokevirtual #33                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
     113: pop
     114: aload_0
     115: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     120: aload         6
     122: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     127: areturn

  public static void handleIncompleteInboundMessage(org.wso2.transport.http.netty.message.HttpCarbonMessage, java.lang.String);
    Code:
       0: new           #37                 // class io/netty/handler/codec/http/DefaultLastHttpContent
       3: dup
       4: invokespecial #38                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
       7: astore_2
       8: aload_2
       9: new           #39                 // class io/netty/handler/codec/DecoderException
      12: dup
      13: aload_1
      14: invokespecial #40                 // Method io/netty/handler/codec/DecoderException."<init>":(Ljava/lang/String;)V
      17: invokestatic  #41                 // Method io/netty/handler/codec/DecoderResult.failure:(Ljava/lang/Throwable;)Lio/netty/handler/codec/DecoderResult;
      20: invokeinterface #42,  2           // InterfaceMethod io/netty/handler/codec/http/LastHttpContent.setDecoderResult:(Lio/netty/handler/codec/DecoderResult;)V
      25: aload_0
      26: aload_2
      27: invokevirtual #43                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      30: getstatic     #44                 // Field LOG:Lorg/slf4j/Logger;
      33: aload_1
      34: invokeinterface #45,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      39: return

  public static void respondToIncompleteRequest(io.netty.channel.Channel, org.wso2.transport.http.netty.contractimpl.HttpOutboundRespListener, org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #46,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
       6: iconst_0
       7: invokeinterface #47,  2           // InterfaceMethod io/netty/channel/ChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
      12: pop
      13: aload_1
      14: invokevirtual #48                 // Method org/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener.getInboundRequestMsg:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      17: invokevirtual #49                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getIoException:()Ljava/io/IOException;
      20: ifnonnull     32
      23: aload_1
      24: invokevirtual #48                 // Method org/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener.getInboundRequestMsg:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      27: aload         5
      29: invokestatic  #50                 // Method handleIncompleteInboundMessage:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Ljava/lang/String;)V
      32: aload_1
      33: getstatic     #51                 // Field org/wso2/transport/http/netty/contract/config/KeepAliveConfig.NEVER:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      36: invokevirtual #52                 // Method org/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener.setKeepAliveConfig:(Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;)V
      39: aload_2
      40: new           #53                 // class org/wso2/transport/http/netty/contractimpl/listener/states/SendingHeaders
      43: dup
      44: aload_1
      45: aload_2
      46: invokespecial #54                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/SendingHeaders."<init>":(Lorg/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener;Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;)V
      49: invokevirtual #55                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/ListenerState;)V
      52: aload_2
      53: invokevirtual #56                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.getListenerState:()Lorg/wso2/transport/http/netty/contractimpl/listener/states/ListenerState;
      56: aload_3
      57: aload         4
      59: invokeinterface #57,  3           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/listener/states/ListenerState.writeOutboundResponseHeaders:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lio/netty/handler/codec/http/HttpContent;)V
      64: return

  private static void lambda$notifyIfHeaderWriteFailure$38(java.lang.String, org.wso2.transport.http.netty.contract.HttpResponseFuture, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokeinterface #58,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
       6: astore_3
       7: aload_3
       8: ifnull        34
      11: aload_3
      12: instanceof    #59                 // class java/nio/channels/ClosedChannelException
      15: ifeq          27
      18: new           #60                 // class java/io/IOException
      21: dup
      22: aload_0
      23: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_1
      28: aload_3
      29: invokeinterface #62,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      34: return

  static {};
    Code:
       0: ldc           #63                 // class org/wso2/transport/http/netty/contractimpl/common/states/StateUtil
       2: invokestatic  #64                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #44                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
