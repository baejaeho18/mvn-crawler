Compiled from "ListenerConfiguration.java"
public class org.wso2.transport.http.netty.contract.config.ListenerConfiguration extends org.wso2.transport.http.netty.contract.config.SslConfiguration {
  public static final java.lang.String DEFAULT_KEY;

  private java.lang.String id;

  private java.lang.String host;

  private int port;

  private org.wso2.transport.http.netty.contract.config.ChunkConfig chunkingConfig;

  private org.wso2.transport.http.netty.contract.config.KeepAliveConfig keepAliveConfig;

  private boolean bindOnStartup;

  private java.lang.String version;

  private long socketIdleTimeout;

  private java.lang.String messageProcessorId;

  private boolean httpTraceLogEnabled;

  private boolean httpAccessLogEnabled;

  private java.lang.String serverHeader;

  private java.util.List<org.wso2.transport.http.netty.contract.config.Parameter> parameters;

  private org.wso2.transport.http.netty.contract.config.RequestSizeValidationConfig requestSizeValidationConfig;

  private boolean pipeliningEnabled;

  private long pipeliningLimit;

  public static org.wso2.transport.http.netty.contract.config.ListenerConfiguration getDefault();
    Code:
       0: new           #1                  // class org/wso2/transport/http/netty/contract/config/ListenerConfiguration
       3: dup
       4: ldc           #2                  // String default
       6: ldc           #3                  // String 0.0.0.0
       8: sipush        8080
      11: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;I)V
      14: astore_0
      15: aload_0
      16: areturn

  public org.wso2.transport.http.netty.contract.config.ListenerConfiguration();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/wso2/transport/http/netty/contract/config/SslConfiguration."<init>":()V
       4: aload_0
       5: ldc           #2                  // String default
       7: putfield      #6                  // Field id:Ljava/lang/String;
      10: aload_0
      11: ldc           #3                  // String 0.0.0.0
      13: putfield      #7                  // Field host:Ljava/lang/String;
      16: aload_0
      17: sipush        9090
      20: putfield      #8                  // Field port:I
      23: aload_0
      24: getstatic     #9                  // Field org/wso2/transport/http/netty/contract/config/ChunkConfig.AUTO:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
      27: putfield      #10                 // Field chunkingConfig:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
      30: aload_0
      31: getstatic     #11                 // Field org/wso2/transport/http/netty/contract/config/KeepAliveConfig.AUTO:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      34: putfield      #12                 // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      37: aload_0
      38: iconst_0
      39: putfield      #13                 // Field bindOnStartup:Z
      42: aload_0
      43: ldc           #14                 // String 1.1
      45: putfield      #15                 // Field version:Ljava/lang/String;
      48: aload_0
      49: ldc           #16                 // String wso2-http-transport
      51: putfield      #17                 // Field serverHeader:Ljava/lang/String;
      54: aload_0
      55: aload_0
      56: invokespecial #18                 // Method getDefaultParameters:()Ljava/util/List;
      59: putfield      #19                 // Field parameters:Ljava/util/List;
      62: aload_0
      63: new           #20                 // class org/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig
      66: dup
      67: invokespecial #21                 // Method org/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig."<init>":()V
      70: putfield      #22                 // Field requestSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
      73: return

  public org.wso2.transport.http.netty.contract.config.ListenerConfiguration(java.lang.String, java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/wso2/transport/http/netty/contract/config/SslConfiguration."<init>":()V
       4: aload_0
       5: ldc           #2                  // String default
       7: putfield      #6                  // Field id:Ljava/lang/String;
      10: aload_0
      11: ldc           #3                  // String 0.0.0.0
      13: putfield      #7                  // Field host:Ljava/lang/String;
      16: aload_0
      17: sipush        9090
      20: putfield      #8                  // Field port:I
      23: aload_0
      24: getstatic     #9                  // Field org/wso2/transport/http/netty/contract/config/ChunkConfig.AUTO:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
      27: putfield      #10                 // Field chunkingConfig:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
      30: aload_0
      31: getstatic     #11                 // Field org/wso2/transport/http/netty/contract/config/KeepAliveConfig.AUTO:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      34: putfield      #12                 // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      37: aload_0
      38: iconst_0
      39: putfield      #13                 // Field bindOnStartup:Z
      42: aload_0
      43: ldc           #14                 // String 1.1
      45: putfield      #15                 // Field version:Ljava/lang/String;
      48: aload_0
      49: ldc           #16                 // String wso2-http-transport
      51: putfield      #17                 // Field serverHeader:Ljava/lang/String;
      54: aload_0
      55: aload_0
      56: invokespecial #18                 // Method getDefaultParameters:()Ljava/util/List;
      59: putfield      #19                 // Field parameters:Ljava/util/List;
      62: aload_0
      63: new           #20                 // class org/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig
      66: dup
      67: invokespecial #21                 // Method org/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig."<init>":()V
      70: putfield      #22                 // Field requestSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
      73: aload_0
      74: aload_1
      75: putfield      #6                  // Field id:Ljava/lang/String;
      78: aload_0
      79: aload_2
      80: putfield      #7                  // Field host:Ljava/lang/String;
      83: aload_0
      84: iload_3
      85: putfield      #8                  // Field port:I
      88: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #7                  // Field host:Ljava/lang/String;
       4: areturn

  public void setHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field host:Ljava/lang/String;
       5: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field id:Ljava/lang/String;
       4: areturn

  public void setId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field id:Ljava/lang/String;
       5: return

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #8                  // Field port:I
       4: ireturn

  public void setPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field port:I
       5: return

  public boolean isBindOnStartup();
    Code:
       0: aload_0
       1: getfield      #13                 // Field bindOnStartup:Z
       4: ireturn

  public void setBindOnStartup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field bindOnStartup:Z
       5: return

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #15                 // Field version:Ljava/lang/String;
       4: areturn

  public void setVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field version:Ljava/lang/String;
       5: return

  public java.util.List<org.wso2.transport.http.netty.contract.config.Parameter> getParameters();
    Code:
       0: aload_0
       1: getfield      #19                 // Field parameters:Ljava/util/List;
       4: areturn

  private java.util.List<org.wso2.transport.http.netty.contract.config.Parameter> getDefaultParameters();
    Code:
       0: new           #23                 // class java/util/ArrayList
       3: dup
       4: invokespecial #24                 // Method java/util/ArrayList."<init>":()V
       7: areturn

  public long getSocketIdleTimeout();
    Code:
       0: aload_0
       1: getfield      #25                 // Field socketIdleTimeout:J
       4: lreturn

  public java.lang.String getMessageProcessorId();
    Code:
       0: aload_0
       1: getfield      #26                 // Field messageProcessorId:Ljava/lang/String;
       4: areturn

  public void setMessageProcessorId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field messageProcessorId:Ljava/lang/String;
       5: return

  public void setSocketIdleTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: putfield      #25                 // Field socketIdleTimeout:J
       6: return

  public boolean isHttpTraceLogEnabled();
    Code:
       0: aload_0
       1: getfield      #27                 // Field httpTraceLogEnabled:Z
       4: ireturn

  public void setHttpTraceLogEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field httpTraceLogEnabled:Z
       5: return

  public boolean isHttpAccessLogEnabled();
    Code:
       0: aload_0
       1: getfield      #28                 // Field httpAccessLogEnabled:Z
       4: ireturn

  public void setHttpAccessLogEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field httpAccessLogEnabled:Z
       5: return

  public org.wso2.transport.http.netty.contract.config.RequestSizeValidationConfig getRequestSizeValidationConfig();
    Code:
       0: aload_0
       1: getfield      #22                 // Field requestSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
       4: areturn

  public void setRequestSizeValidationConfig(org.wso2.transport.http.netty.contract.config.RequestSizeValidationConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field requestSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
       5: return

  public org.wso2.transport.http.netty.contract.config.ChunkConfig getChunkConfig();
    Code:
       0: aload_0
       1: getfield      #10                 // Field chunkingConfig:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
       4: areturn

  public void setChunkConfig(org.wso2.transport.http.netty.contract.config.ChunkConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field chunkingConfig:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
       5: return

  public org.wso2.transport.http.netty.contract.config.KeepAliveConfig getKeepAliveConfig();
    Code:
       0: aload_0
       1: getfield      #12                 // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
       4: areturn

  public void setKeepAliveConfig(org.wso2.transport.http.netty.contract.config.KeepAliveConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
       5: return

  public java.lang.String getServerHeader();
    Code:
       0: aload_0
       1: getfield      #17                 // Field serverHeader:Ljava/lang/String;
       4: areturn

  public void setServerHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field serverHeader:Ljava/lang/String;
       5: return

  public boolean isPipeliningEnabled();
    Code:
       0: aload_0
       1: getfield      #29                 // Field pipeliningEnabled:Z
       4: ireturn

  public void setPipeliningEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field pipeliningEnabled:Z
       5: return

  public long getPipeliningLimit();
    Code:
       0: aload_0
       1: getfield      #30                 // Field pipeliningLimit:J
       4: lreturn

  public void setPipeliningLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #30                 // Field pipeliningLimit:J
       5: return
}
