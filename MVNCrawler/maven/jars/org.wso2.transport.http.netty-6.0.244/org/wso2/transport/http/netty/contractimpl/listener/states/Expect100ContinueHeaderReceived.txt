Compiled from "Expect100ContinueHeaderReceived.java"
public class org.wso2.transport.http.netty.contractimpl.listener.states.Expect100ContinueHeaderReceived implements org.wso2.transport.http.netty.contractimpl.listener.states.ListenerState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext messageStateContext;

  private final org.wso2.transport.http.netty.contractimpl.listener.SourceHandler sourceHandler;

  private final org.wso2.transport.http.netty.message.HttpCarbonMessage inboundRequestMsg;

  private final float httpVersion;

  org.wso2.transport.http.netty.contractimpl.listener.states.Expect100ContinueHeaderReceived(org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext, org.wso2.transport.http.netty.contractimpl.listener.SourceHandler, org.wso2.transport.http.netty.message.HttpCarbonMessage, float);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field sourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      14: aload_0
      15: aload_3
      16: putfield      #6                  // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      19: aload_0
      20: fload         4
      22: putfield      #7                  // Field httpVersion:F
      25: return

  public void readInboundRequestHeaders(org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpRequest);
    Code:
       0: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #9                  // String readInboundRequestHeaders {}
       5: ldc           #10                 // String is not a dependant action of this state
       7: invokeinterface #11,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void readInboundRequestBody(java.lang.Object) throws org.wso2.transport.http.netty.contract.ServerConnectorException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
       4: new           #12                 // class org/wso2/transport/http/netty/contractimpl/listener/states/ReceivingEntityBody
       7: dup
       8: aload_0
       9: getfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      12: aload_0
      13: getfield      #6                  // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      16: aload_0
      17: getfield      #5                  // Field sourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      20: aload_0
      21: getfield      #7                  // Field httpVersion:F
      24: invokespecial #13                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/ReceivingEntityBody."<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;F)V
      27: invokevirtual #14                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/ListenerState;)V
      30: aload_0
      31: getfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      34: invokevirtual #15                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.getListenerState:()Lorg/wso2/transport/http/netty/contractimpl/listener/states/ListenerState;
      37: aload_1
      38: invokeinterface #16,  2           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/listener/states/ListenerState.readInboundRequestBody:(Ljava/lang/Object;)V
      43: return

  public void writeOutboundResponseHeaders(org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent);
    Code:
       0: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #17                 // String writeOutboundResponseHeaders {}
       5: ldc           #10                 // String is not a dependant action of this state
       7: invokeinterface #11,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void writeOutboundResponseBody(org.wso2.transport.http.netty.contractimpl.HttpOutboundRespListener, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: getfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
       4: new           #18                 // class org/wso2/transport/http/netty/contractimpl/listener/states/Response100ContinueSent
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #5                  // Field sourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      13: aload_0
      14: getfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      17: invokespecial #19                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/Response100ContinueSent."<init>":(Lorg/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener;Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;)V
      20: invokevirtual #14                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/ListenerState;)V
      23: aload_0
      24: getfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      27: invokevirtual #15                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.getListenerState:()Lorg/wso2/transport/http/netty/contractimpl/listener/states/ListenerState;
      30: aload_1
      31: aload_2
      32: aload_3
      33: invokeinterface #20,  4           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/listener/states/ListenerState.writeOutboundResponseBody:(Lorg/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lio/netty/handler/codec/http/HttpContent;)V
      38: return

  public void handleAbruptChannelClosure(org.wso2.transport.http.netty.contract.ServerConnectorFuture);
    Code:
       0: aload_1
       1: new           #21                 // class org/wso2/transport/http/netty/contract/ServerConnectorException
       4: dup
       5: ldc           #22                 // String Remote client closed the connection before initiating 100 continue response
       7: invokespecial #23                 // Method org/wso2/transport/http/netty/contract/ServerConnectorException."<init>":(Ljava/lang/String;)V
      10: invokeinterface #24,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/ServerConnectorFuture.notifyErrorListener:(Ljava/lang/Throwable;)V
      15: goto          30
      18: astore_2
      19: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      22: ldc           #25                 // String Error while notifying error state to server-connector listener
      24: aload_2
      25: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: return
    Exception table:
       from    to  target type
           0    15    18   Class org/wso2/transport/http/netty/contract/ServerConnectorException

  public io.netty.channel.ChannelFuture handleIdleTimeoutConnectionClosure(org.wso2.transport.http.netty.contract.ServerConnectorFuture, io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: new           #21                 // class org/wso2/transport/http/netty/contract/ServerConnectorException
       4: dup
       5: ldc           #27                 // String Idle timeout triggered before initiating 100 continue response
       7: invokespecial #23                 // Method org/wso2/transport/http/netty/contract/ServerConnectorException."<init>":(Ljava/lang/String;)V
      10: invokeinterface #24,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/ServerConnectorFuture.notifyErrorListener:(Ljava/lang/Throwable;)V
      15: goto          30
      18: astore_3
      19: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      22: ldc           #25                 // String Error while notifying error state to server-connector listener
      24: aload_3
      25: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: ldc           #28                 // String Server time out
      32: astore_3
      33: aload_0
      34: aload_2
      35: getstatic     #29                 // Field io/netty/handler/codec/http/HttpResponseStatus.INTERNAL_SERVER_ERROR:Lio/netty/handler/codec/http/HttpResponseStatus;
      38: aload_3
      39: getstatic     #30                 // Field io/netty/util/CharsetUtil.UTF_8:Ljava/nio/charset/Charset;
      42: invokestatic  #31                 // Method io/netty/buffer/Unpooled.copiedBuffer:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lio/netty/buffer/ByteBuf;
      45: aload_3
      46: invokevirtual #32                 // Method java/lang/String.length:()I
      49: invokespecial #33                 // Method sendRequestTimeoutResponse:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpResponseStatus;Lio/netty/buffer/ByteBuf;I)Lio/netty/channel/ChannelFuture;
      52: astore        4
      54: aload         4
      56: aload_2
      57: invokedynamic #34,  0             // InvokeDynamic #0:operationComplete:(Lio/netty/channel/ChannelHandlerContext;)Lio/netty/channel/ChannelFutureListener;
      62: invokeinterface #35,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      67: pop
      68: aload         4
      70: areturn
    Exception table:
       from    to  target type
           0    15    18   Class org/wso2/transport/http/netty/contract/ServerConnectorException

  private io.netty.channel.ChannelFuture sendRequestTimeoutResponse(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpResponseStatus, io.netty.buffer.ByteBuf, int);
    Code:
       0: new           #36                 // class io/netty/handler/codec/http/DefaultFullHttpResponse
       3: dup
       4: getstatic     #37                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_1:Lio/netty/handler/codec/http/HttpVersion;
       7: aload_2
       8: aload_3
       9: invokespecial #38                 // Method io/netty/handler/codec/http/DefaultFullHttpResponse."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpResponseStatus;Lio/netty/buffer/ByteBuf;)V
      12: astore        5
      14: aload         5
      16: invokeinterface #39,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      21: getstatic     #40                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_LENGTH:Lio/netty/util/AsciiString;
      24: iload         4
      26: invokestatic  #41                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: invokevirtual #42                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      32: pop
      33: aload         5
      35: invokeinterface #39,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      40: getstatic     #43                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_TYPE:Lio/netty/util/AsciiString;
      43: ldc           #44                 // String text/plain
      45: invokevirtual #42                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      48: pop
      49: aload         5
      51: invokeinterface #39,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      56: getstatic     #45                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONNECTION:Lio/netty/util/AsciiString;
      59: invokevirtual #46                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
      62: ldc           #47                 // String close
      64: invokevirtual #48                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      67: pop
      68: aload         5
      70: invokeinterface #39,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      75: getstatic     #49                 // Field io/netty/handler/codec/http/HttpHeaderNames.SERVER:Lio/netty/util/AsciiString;
      78: invokevirtual #46                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
      81: aload_0
      82: getfield      #5                  // Field sourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      85: invokevirtual #50                 // Method org/wso2/transport/http/netty/contractimpl/listener/SourceHandler.getServerName:()Ljava/lang/String;
      88: invokevirtual #48                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      91: pop
      92: aload_1
      93: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      98: aload         5
     100: invokeinterface #52,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     105: areturn

  private static void lambda$handleIdleTimeoutConnectionClosure$58(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelFuture) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #53,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
       6: astore_2
       7: aload_2
       8: ifnull        25
      11: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #54                 // String Failed to send: {}
      16: aload_2
      17: invokevirtual #55                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      20: invokeinterface #11,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: invokeinterface #56,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      31: pop
      32: return

  static {};
    Code:
       0: ldc           #57                 // class org/wso2/transport/http/netty/contractimpl/listener/states/Expect100ContinueHeaderReceived
       2: invokestatic  #58                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
