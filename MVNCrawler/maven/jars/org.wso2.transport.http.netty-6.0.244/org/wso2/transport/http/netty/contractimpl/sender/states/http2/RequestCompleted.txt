Compiled from "RequestCompleted.java"
public class org.wso2.transport.http.netty.contractimpl.sender.states.http2.RequestCompleted implements org.wso2.transport.http.netty.contractimpl.sender.states.http2.SenderState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler http2TargetHandler;

  private final org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel http2ClientChannel;

  private final org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler$Http2RequestWriter http2RequestWriter;

  public org.wso2.transport.http.netty.contractimpl.sender.states.http2.RequestCompleted(org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler, org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler$Http2RequestWriter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      14: aload_0
      15: aload_1
      16: invokevirtual #4                  // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler.getHttp2ClientChannel:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      19: putfield      #5                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      22: return

  public void writeOutboundRequestHeaders(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent);
    Code:
       0: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #7                  // String writeOutboundRequestHeaders is not a dependant action of this state
       5: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void writeOutboundRequestBody(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #9                  // String writeOutboundRequestBody is not a dependant action of this state
       5: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void readInboundResponseHeaders(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.message.Http2HeadersFrame, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, boolean, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload         5
       2: new           #10                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/ReceivingHeaders
       5: dup
       6: aload_0
       7: getfield      #3                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      10: aload_0
      11: getfield      #2                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      14: invokespecial #11                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/ReceivingHeaders."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
      17: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
      20: aload         5
      22: invokevirtual #13                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getSenderState:()Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;
      25: aload_1
      26: aload_2
      27: aload_3
      28: iload         4
      30: aload         5
      32: invokeinterface #14,  6           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState.readInboundResponseHeaders:(Lio/netty/channel/ChannelHandlerContext;Lorg/wso2/transport/http/netty/message/Http2HeadersFrame;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;ZLorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      37: return

  public void readInboundResponseBody(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.message.Http2DataFrame, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, boolean, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #15                 // String readInboundResponseBody is not a dependant action of this state
       5: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void readInboundPromise(org.wso2.transport.http.netty.message.Http2PushPromise, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
       5: aload_2
       6: invokestatic  #16                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.onPushPromiseRead:(Lorg/wso2/transport/http/netty/message/Http2PushPromise;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)V
       9: return

  static {};
    Code:
       0: ldc           #17                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/RequestCompleted
       2: invokestatic  #18                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
