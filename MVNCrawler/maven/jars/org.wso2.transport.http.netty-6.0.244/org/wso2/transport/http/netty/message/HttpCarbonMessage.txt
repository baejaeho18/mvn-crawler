Compiled from "HttpCarbonMessage.java"
public class org.wso2.transport.http.netty.message.HttpCarbonMessage {
  protected io.netty.handler.codec.http.HttpMessage httpMessage;

  private org.wso2.transport.http.netty.message.EntityCollector blockingEntityCollector;

  private java.util.Map<java.lang.String, java.lang.Object> properties;

  private org.wso2.transport.http.netty.message.MessageFuture messageFuture;

  private final org.wso2.transport.http.netty.contract.ServerConnectorFuture httpOutboundRespFuture;

  private final org.wso2.transport.http.netty.contractimpl.DefaultHttpResponseFuture httpOutboundRespStatusFuture;

  private final org.wso2.transport.http.netty.message.Observable contentObservable;

  private java.io.IOException ioException;

  private org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext httpMessageStateContext;

  private org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext http2MessageStateContext;

  private long sequenceId;

  private io.netty.channel.ChannelHandlerContext sourceContext;

  private io.netty.channel.ChannelHandlerContext targetContext;

  private org.wso2.transport.http.netty.message.HttpPipeliningFuture pipeliningFuture;

  private boolean keepAlive;

  private boolean pipeliningEnabled;

  private boolean passthrough;

  public org.wso2.transport.http.netty.message.HttpCarbonMessage(io.netty.handler.codec.http.HttpMessage, org.wso2.transport.http.netty.message.Listener);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field properties:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class org/wso2/transport/http/netty/contractimpl/HttpWsServerConnectorFuture
      19: dup
      20: invokespecial #6                  // Method org/wso2/transport/http/netty/contractimpl/HttpWsServerConnectorFuture."<init>":()V
      23: putfield      #7                  // Field httpOutboundRespFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      26: aload_0
      27: new           #8                  // class org/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture
      30: dup
      31: invokespecial #9                  // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture."<init>":()V
      34: putfield      #10                 // Field httpOutboundRespStatusFuture:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture;
      37: aload_0
      38: new           #11                 // class org/wso2/transport/http/netty/message/DefaultObservable
      41: dup
      42: invokespecial #12                 // Method org/wso2/transport/http/netty/message/DefaultObservable."<init>":()V
      45: putfield      #13                 // Field contentObservable:Lorg/wso2/transport/http/netty/message/Observable;
      48: aload_0
      49: iconst_0
      50: putfield      #14                 // Field passthrough:Z
      53: aload_0
      54: aload_1
      55: putfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
      58: aload_0
      59: new           #16                 // class org/wso2/transport/http/netty/message/BlockingEntityCollector
      62: dup
      63: ldc           #18                 // int 300000
      65: invokespecial #19                 // Method org/wso2/transport/http/netty/message/BlockingEntityCollector."<init>":(I)V
      68: invokespecial #20                 // Method setBlockingEntityCollector:(Lorg/wso2/transport/http/netty/message/BlockingEntityCollector;)V
      71: aload_0
      72: getfield      #13                 // Field contentObservable:Lorg/wso2/transport/http/netty/message/Observable;
      75: aload_2
      76: invokeinterface #21,  2           // InterfaceMethod org/wso2/transport/http/netty/message/Observable.setListener:(Lorg/wso2/transport/http/netty/message/Listener;)V
      81: return

  public org.wso2.transport.http.netty.message.HttpCarbonMessage(io.netty.handler.codec.http.HttpMessage, int, org.wso2.transport.http.netty.message.Listener);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field properties:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class org/wso2/transport/http/netty/contractimpl/HttpWsServerConnectorFuture
      19: dup
      20: invokespecial #6                  // Method org/wso2/transport/http/netty/contractimpl/HttpWsServerConnectorFuture."<init>":()V
      23: putfield      #7                  // Field httpOutboundRespFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      26: aload_0
      27: new           #8                  // class org/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture
      30: dup
      31: invokespecial #9                  // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture."<init>":()V
      34: putfield      #10                 // Field httpOutboundRespStatusFuture:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture;
      37: aload_0
      38: new           #11                 // class org/wso2/transport/http/netty/message/DefaultObservable
      41: dup
      42: invokespecial #12                 // Method org/wso2/transport/http/netty/message/DefaultObservable."<init>":()V
      45: putfield      #13                 // Field contentObservable:Lorg/wso2/transport/http/netty/message/Observable;
      48: aload_0
      49: iconst_0
      50: putfield      #14                 // Field passthrough:Z
      53: aload_0
      54: aload_1
      55: putfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
      58: aload_0
      59: new           #16                 // class org/wso2/transport/http/netty/message/BlockingEntityCollector
      62: dup
      63: iload_2
      64: invokespecial #19                 // Method org/wso2/transport/http/netty/message/BlockingEntityCollector."<init>":(I)V
      67: invokespecial #20                 // Method setBlockingEntityCollector:(Lorg/wso2/transport/http/netty/message/BlockingEntityCollector;)V
      70: aload_0
      71: getfield      #13                 // Field contentObservable:Lorg/wso2/transport/http/netty/message/Observable;
      74: aload_3
      75: invokeinterface #21,  2           // InterfaceMethod org/wso2/transport/http/netty/message/Observable.setListener:(Lorg/wso2/transport/http/netty/message/Listener;)V
      80: return

  public org.wso2.transport.http.netty.message.HttpCarbonMessage(io.netty.handler.codec.http.HttpMessage);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field properties:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class org/wso2/transport/http/netty/contractimpl/HttpWsServerConnectorFuture
      19: dup
      20: invokespecial #6                  // Method org/wso2/transport/http/netty/contractimpl/HttpWsServerConnectorFuture."<init>":()V
      23: putfield      #7                  // Field httpOutboundRespFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      26: aload_0
      27: new           #8                  // class org/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture
      30: dup
      31: invokespecial #9                  // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture."<init>":()V
      34: putfield      #10                 // Field httpOutboundRespStatusFuture:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture;
      37: aload_0
      38: new           #11                 // class org/wso2/transport/http/netty/message/DefaultObservable
      41: dup
      42: invokespecial #12                 // Method org/wso2/transport/http/netty/message/DefaultObservable."<init>":()V
      45: putfield      #13                 // Field contentObservable:Lorg/wso2/transport/http/netty/message/Observable;
      48: aload_0
      49: iconst_0
      50: putfield      #14                 // Field passthrough:Z
      53: aload_0
      54: aload_1
      55: putfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
      58: aload_0
      59: new           #16                 // class org/wso2/transport/http/netty/message/BlockingEntityCollector
      62: dup
      63: ldc           #18                 // int 300000
      65: invokespecial #19                 // Method org/wso2/transport/http/netty/message/BlockingEntityCollector."<init>":(I)V
      68: invokespecial #20                 // Method setBlockingEntityCollector:(Lorg/wso2/transport/http/netty/message/BlockingEntityCollector;)V
      71: return

  public synchronized void addHttpContent(io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: getfield      #13                 // Field contentObservable:Lorg/wso2/transport/http/netty/message/Observable;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod org/wso2/transport/http/netty/message/Observable.notifyAddListener:(Lio/netty/handler/codec/http/HttpContent;)V
      10: aload_0
      11: getfield      #23                 // Field messageFuture:Lorg/wso2/transport/http/netty/message/MessageFuture;
      14: ifnull        132
      17: aload_0
      18: getfield      #24                 // Field ioException:Ljava/io/IOException;
      21: ifnull        72
      24: aload_0
      25: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
      28: new           #26                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      31: dup
      32: invokespecial #27                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
      35: invokeinterface #28,  2           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      40: aload_0
      41: getfield      #23                 // Field messageFuture:Lorg/wso2/transport/http/netty/message/MessageFuture;
      44: aload_0
      45: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
      48: invokeinterface #29,  1           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.getHttpContent:()Lio/netty/handler/codec/http/HttpContent;
      53: invokevirtual #30                 // Method org/wso2/transport/http/netty/message/MessageFuture.notifyMessageListener:(Lio/netty/handler/codec/http/HttpContent;)V
      56: aload_0
      57: invokevirtual #31                 // Method removeMessageFuture:()V
      60: new           #32                 // class java/lang/RuntimeException
      63: dup
      64: aload_0
      65: invokevirtual #33                 // Method getIoException:()Ljava/io/IOException;
      68: invokespecial #34                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      71: athrow
      72: aload_0
      73: getfield      #13                 // Field contentObservable:Lorg/wso2/transport/http/netty/message/Observable;
      76: aload_1
      77: invokeinterface #35,  2           // InterfaceMethod org/wso2/transport/http/netty/message/Observable.notifyGetListener:(Lio/netty/handler/codec/http/HttpContent;)V
      82: aload_0
      83: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
      86: aload_1
      87: invokeinterface #28,  2           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      92: aload_0
      93: getfield      #23                 // Field messageFuture:Lorg/wso2/transport/http/netty/message/MessageFuture;
      96: invokevirtual #36                 // Method org/wso2/transport/http/netty/message/MessageFuture.isMessageListenerSet:()Z
      99: ifeq          118
     102: aload_0
     103: getfield      #23                 // Field messageFuture:Lorg/wso2/transport/http/netty/message/MessageFuture;
     106: aload_0
     107: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
     110: invokeinterface #29,  1           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.getHttpContent:()Lio/netty/handler/codec/http/HttpContent;
     115: invokevirtual #30                 // Method org/wso2/transport/http/netty/message/MessageFuture.notifyMessageListener:(Lio/netty/handler/codec/http/HttpContent;)V
     118: aload_1
     119: instanceof    #37                 // class io/netty/handler/codec/http/LastHttpContent
     122: ifeq          177
     125: aload_0
     126: invokevirtual #31                 // Method removeMessageFuture:()V
     129: goto          177
     132: aload_0
     133: getfield      #24                 // Field ioException:Ljava/io/IOException;
     136: ifnull        167
     139: aload_0
     140: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
     143: new           #26                 // class io/netty/handler/codec/http/DefaultLastHttpContent
     146: dup
     147: invokespecial #27                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
     150: invokeinterface #28,  2           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
     155: new           #32                 // class java/lang/RuntimeException
     158: dup
     159: aload_0
     160: invokevirtual #33                 // Method getIoException:()Ljava/io/IOException;
     163: invokespecial #34                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     166: athrow
     167: aload_0
     168: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
     171: aload_1
     172: invokeinterface #28,  2           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
     177: return

  public io.netty.handler.codec.http.HttpContent getHttpContent();
    Code:
       0: aload_0
       1: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
       4: invokeinterface #29,  1           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.getHttpContent:()Lio/netty/handler/codec/http/HttpContent;
       9: astore_1
      10: aload_0
      11: getfield      #13                 // Field contentObservable:Lorg/wso2/transport/http/netty/message/Observable;
      14: aload_1
      15: invokeinterface #35,  2           // InterfaceMethod org/wso2/transport/http/netty/message/Observable.notifyGetListener:(Lio/netty/handler/codec/http/HttpContent;)V
      20: aload_1
      21: areturn

  public synchronized org.wso2.transport.http.netty.message.MessageFuture getHttpContentAsync();
    Code:
       0: aload_0
       1: new           #38                 // class org/wso2/transport/http/netty/message/MessageFuture
       4: dup
       5: aload_0
       6: invokespecial #39                 // Method org/wso2/transport/http/netty/message/MessageFuture."<init>":(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
       9: putfield      #23                 // Field messageFuture:Lorg/wso2/transport/http/netty/message/MessageFuture;
      12: aload_0
      13: getfield      #23                 // Field messageFuture:Lorg/wso2/transport/http/netty/message/MessageFuture;
      16: areturn

  public io.netty.buffer.ByteBuf getMessageBody();
    Code:
       0: aload_0
       1: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
       4: invokeinterface #40,  1           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.getMessageBody:()Lio/netty/buffer/ByteBuf;
       9: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
       4: invokeinterface #41,  1           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.isEmpty:()Z
       9: ireturn

  public long countMessageLengthTill(long);
    Code:
       0: aload_0
       1: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
       4: lload_1
       5: invokeinterface #42,  3           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.countMessageLengthTill:(J)J
      10: lreturn

  public long getFullMessageLength();
    Code:
       0: aload_0
       1: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
       4: invokeinterface #43,  1           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.getFullMessageLength:()J
       9: lreturn

  public void addMessageBody(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
       4: aload_1
       5: invokeinterface #44,  2           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.addMessageBody:(Ljava/nio/ByteBuffer;)V
      10: return

  public void completeMessage();
    Code:
       0: aload_0
       1: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
       4: invokeinterface #45,  1           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.completeMessage:()V
       9: return

  public io.netty.handler.codec.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
       4: invokeinterface #46,  1           // InterfaceMethod io/netty/handler/codec/http/HttpMessage.headers:()Lio/netty/handler/codec/http/HttpHeaders;
       9: areturn

  public java.lang.String getHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
       4: invokeinterface #46,  1           // InterfaceMethod io/netty/handler/codec/http/HttpMessage.headers:()Lio/netty/handler/codec/http/HttpHeaders;
       9: aload_1
      10: invokevirtual #47                 // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  public void setHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
       4: invokeinterface #46,  1           // InterfaceMethod io/netty/handler/codec/http/HttpMessage.headers:()Lio/netty/handler/codec/http/HttpHeaders;
       9: aload_1
      10: aload_2
      11: invokevirtual #48                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      14: pop
      15: return

  public void setHeader(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
       4: invokeinterface #46,  1           // InterfaceMethod io/netty/handler/codec/http/HttpMessage.headers:()Lio/netty/handler/codec/http/HttpHeaders;
       9: aload_1
      10: aload_2
      11: invokevirtual #48                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      14: pop
      15: return

  public void setHeaders(io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
       4: invokeinterface #46,  1           // InterfaceMethod io/netty/handler/codec/http/HttpMessage.headers:()Lio/netty/handler/codec/http/HttpHeaders;
       9: aload_1
      10: invokevirtual #49                 // Method io/netty/handler/codec/http/HttpHeaders.setAll:(Lio/netty/handler/codec/http/HttpHeaders;)Lio/netty/handler/codec/http/HttpHeaders;
      13: pop
      14: return

  public void removeHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
       4: invokeinterface #46,  1           // InterfaceMethod io/netty/handler/codec/http/HttpMessage.headers:()Lio/netty/handler/codec/http/HttpHeaders;
       9: aload_1
      10: invokevirtual #50                 // Method io/netty/handler/codec/http/HttpHeaders.remove:(Ljava/lang/String;)Lio/netty/handler/codec/http/HttpHeaders;
      13: pop
      14: return

  public java.lang.Object getProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field properties:Ljava/util/Map;
       4: ifnull        18
       7: aload_0
       8: getfield      #4                  // Field properties:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn
      18: aconst_null
      19: areturn

  public synchronized void removeMessageFuture();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #23                 // Field messageFuture:Lorg/wso2/transport/http/netty/message/MessageFuture;
       5: aload_0
       6: iconst_0
       7: putfield      #14                 // Field passthrough:Z
      10: return

  public java.util.Map<java.lang.String, java.lang.Object> getProperties();
    Code:
       0: aload_0
       1: getfield      #4                  // Field properties:Ljava/util/Map;
       4: areturn

  public void setProperty(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #52,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void removeProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #53,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  private void setBlockingEntityCollector(org.wso2.transport.http.netty.message.BlockingEntityCollector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
       5: return

  public org.wso2.transport.http.netty.contract.ServerConnectorFuture getHttpResponseFuture();
    Code:
       0: aload_0
       1: getfield      #7                  // Field httpOutboundRespFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
       4: areturn

  public org.wso2.transport.http.netty.contract.HttpResponseFuture getHttpOutboundRespStatusFuture();
    Code:
       0: aload_0
       1: getfield      #10                 // Field httpOutboundRespStatusFuture:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture;
       4: areturn

  public org.wso2.transport.http.netty.contract.HttpResponseFuture respond(org.wso2.transport.http.netty.message.HttpCarbonMessage) throws org.wso2.transport.http.netty.contract.ServerConnectorException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field httpOutboundRespFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
       4: aload_1
       5: invokeinterface #54,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/ServerConnectorFuture.notifyHttpListener:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      10: aload_0
      11: getfield      #10                 // Field httpOutboundRespStatusFuture:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture;
      14: areturn

  public org.wso2.transport.http.netty.contract.HttpResponseFuture pushResponse(org.wso2.transport.http.netty.message.HttpCarbonMessage, org.wso2.transport.http.netty.message.Http2PushPromise) throws org.wso2.transport.http.netty.contract.ServerConnectorException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field httpOutboundRespFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
       4: aload_1
       5: aload_2
       6: invokeinterface #55,  3           // InterfaceMethod org/wso2/transport/http/netty/contract/ServerConnectorFuture.notifyHttpListener:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lorg/wso2/transport/http/netty/message/Http2PushPromise;)V
      11: aload_0
      12: getfield      #10                 // Field httpOutboundRespStatusFuture:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture;
      15: areturn

  public org.wso2.transport.http.netty.contract.HttpResponseFuture pushPromise(org.wso2.transport.http.netty.message.Http2PushPromise) throws org.wso2.transport.http.netty.contract.ServerConnectorException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field httpOutboundRespFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
       4: aload_1
       5: invokeinterface #56,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/ServerConnectorFuture.notifyHttpListener:(Lorg/wso2/transport/http/netty/message/Http2PushPromise;)V
      10: aload_0
      11: getfield      #10                 // Field httpOutboundRespStatusFuture:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture;
      14: areturn

  public org.wso2.transport.http.netty.message.HttpCarbonMessage cloneCarbonMessageWithOutData();
    Code:
       0: aload_0
       1: invokespecial #57                 // Method getNewHttpCarbonMessage:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       4: astore_1
       5: aload_0
       6: invokevirtual #58                 // Method getProperties:()Ljava/util/Map;
       9: astore_2
      10: aload_2
      11: aload_1
      12: dup
      13: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: pop
      17: invokedynamic #60,  0             // InvokeDynamic #0:accept:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)Ljava/util/function/BiConsumer;
      22: invokeinterface #61,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      27: aload_1
      28: areturn

  private org.wso2.transport.http.netty.message.HttpCarbonMessage getNewHttpCarbonMessage();
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
       4: instanceof    #62                 // class io/netty/handler/codec/http/HttpRequest
       7: ifeq          134
      10: aload_0
      11: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
      14: checkcast     #62                 // class io/netty/handler/codec/http/HttpRequest
      17: astore_3
      18: new           #63                 // class io/netty/handler/codec/http/DefaultHttpRequest
      21: dup
      22: aload_0
      23: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
      26: invokeinterface #64,  1           // InterfaceMethod io/netty/handler/codec/http/HttpMessage.protocolVersion:()Lio/netty/handler/codec/http/HttpVersion;
      31: aload_0
      32: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
      35: checkcast     #62                 // class io/netty/handler/codec/http/HttpRequest
      38: invokeinterface #65,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.method:()Lio/netty/handler/codec/http/HttpMethod;
      43: aload_3
      44: invokeinterface #66,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.uri:()Ljava/lang/String;
      49: invokespecial #67                 // Method io/netty/handler/codec/http/DefaultHttpRequest."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpMethod;Ljava/lang/String;)V
      52: astore_1
      53: new           #68                 // class io/netty/handler/codec/http/DefaultHttpHeaders
      56: dup
      57: invokespecial #69                 // Method io/netty/handler/codec/http/DefaultHttpHeaders."<init>":()V
      60: astore_2
      61: aload_0
      62: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
      65: invokeinterface #46,  1           // InterfaceMethod io/netty/handler/codec/http/HttpMessage.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      70: invokevirtual #70                 // Method io/netty/handler/codec/http/HttpHeaders.entries:()Ljava/util/List;
      73: astore        4
      75: aload         4
      77: invokeinterface #71,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      82: astore        5
      84: aload         5
      86: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          131
      94: aload         5
      96: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #74                 // class java/util/Map$Entry
     104: astore        6
     106: aload_2
     107: aload         6
     109: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     114: checkcast     #76                 // class java/lang/String
     117: aload         6
     119: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     124: invokevirtual #78                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
     127: pop
     128: goto          84
     131: goto          243
     134: aload_0
     135: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
     138: checkcast     #79                 // class io/netty/handler/codec/http/HttpResponse
     141: astore_3
     142: new           #80                 // class io/netty/handler/codec/http/DefaultFullHttpResponse
     145: dup
     146: aload_0
     147: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
     150: invokeinterface #64,  1           // InterfaceMethod io/netty/handler/codec/http/HttpMessage.protocolVersion:()Lio/netty/handler/codec/http/HttpVersion;
     155: aload_3
     156: invokeinterface #81,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.status:()Lio/netty/handler/codec/http/HttpResponseStatus;
     161: invokespecial #82                 // Method io/netty/handler/codec/http/DefaultFullHttpResponse."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpResponseStatus;)V
     164: astore_1
     165: new           #68                 // class io/netty/handler/codec/http/DefaultHttpHeaders
     168: dup
     169: invokespecial #69                 // Method io/netty/handler/codec/http/DefaultHttpHeaders."<init>":()V
     172: astore_2
     173: aload_0
     174: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
     177: invokeinterface #46,  1           // InterfaceMethod io/netty/handler/codec/http/HttpMessage.headers:()Lio/netty/handler/codec/http/HttpHeaders;
     182: invokevirtual #70                 // Method io/netty/handler/codec/http/HttpHeaders.entries:()Ljava/util/List;
     185: astore        4
     187: aload         4
     189: invokeinterface #71,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     194: astore        5
     196: aload         5
     198: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     203: ifeq          243
     206: aload         5
     208: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     213: checkcast     #74                 // class java/util/Map$Entry
     216: astore        6
     218: aload_2
     219: aload         6
     221: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     226: checkcast     #76                 // class java/lang/String
     229: aload         6
     231: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     236: invokevirtual #78                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
     239: pop
     240: goto          196
     243: new           #83                 // class org/wso2/transport/http/netty/message/HttpCarbonMessage
     246: dup
     247: aload_1
     248: invokespecial #84                 // Method "<init>":(Lio/netty/handler/codec/http/HttpMessage;)V
     251: astore_3
     252: aload_3
     253: invokevirtual #85                 // Method getHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
     256: aload_2
     257: invokevirtual #86                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Lio/netty/handler/codec/http/HttpHeaders;)Lio/netty/handler/codec/http/HttpHeaders;
     260: pop
     261: aload_3
     262: areturn

  public void waitAndReleaseAllEntities();
    Code:
       0: aload_0
       1: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
       4: invokeinterface #87,  1           // InterfaceMethod org/wso2/transport/http/netty/message/EntityCollector.waitAndReleaseAllEntities:()V
       9: return

  public org.wso2.transport.http.netty.message.EntityCollector getBlockingEntityCollector();
    Code:
       0: aload_0
       1: getfield      #25                 // Field blockingEntityCollector:Lorg/wso2/transport/http/netty/message/EntityCollector;
       4: areturn

  public io.netty.handler.codec.http.HttpRequest getNettyHttpRequest();
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
       4: checkcast     #62                 // class io/netty/handler/codec/http/HttpRequest
       7: areturn

  public io.netty.handler.codec.http.HttpResponse getNettyHttpResponse();
    Code:
       0: aload_0
       1: getfield      #15                 // Field httpMessage:Lio/netty/handler/codec/http/HttpMessage;
       4: checkcast     #79                 // class io/netty/handler/codec/http/HttpResponse
       7: areturn

  public synchronized java.io.IOException getIoException();
    Code:
       0: aload_0
       1: getfield      #24                 // Field ioException:Ljava/io/IOException;
       4: areturn

  public synchronized void setIoException(java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field ioException:Ljava/io/IOException;
       5: return

  public org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext getMessageStateContext();
    Code:
       0: aload_0
       1: getfield      #88                 // Field httpMessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
       4: areturn

  public void setMessageStateContext(org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #88                 // Field httpMessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
       5: return

  public org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext getHttp2MessageStateContext();
    Code:
       0: aload_0
       1: getfield      #89                 // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       4: areturn

  public void setHttp2MessageStateContext(org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       5: return

  public long getSequenceId();
    Code:
       0: aload_0
       1: getfield      #90                 // Field sequenceId:J
       4: lreturn

  public void setSequenceId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #90                 // Field sequenceId:J
       5: return

  public io.netty.channel.ChannelHandlerContext getSourceContext();
    Code:
       0: aload_0
       1: getfield      #91                 // Field sourceContext:Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public void setSourceContext(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #91                 // Field sourceContext:Lio/netty/channel/ChannelHandlerContext;
       5: return

  public boolean isKeepAlive();
    Code:
       0: aload_0
       1: getfield      #92                 // Field keepAlive:Z
       4: ireturn

  public void setKeepAlive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #92                 // Field keepAlive:Z
       5: return

  public boolean isPipeliningEnabled();
    Code:
       0: aload_0
       1: getfield      #93                 // Field pipeliningEnabled:Z
       4: ireturn

  public void setPipeliningEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #93                 // Field pipeliningEnabled:Z
       5: return

  public org.wso2.transport.http.netty.message.HttpPipeliningFuture getPipeliningFuture();
    Code:
       0: aload_0
       1: getfield      #94                 // Field pipeliningFuture:Lorg/wso2/transport/http/netty/message/HttpPipeliningFuture;
       4: areturn

  public void setPipeliningFuture(org.wso2.transport.http.netty.message.HttpPipeliningFuture);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #94                 // Field pipeliningFuture:Lorg/wso2/transport/http/netty/message/HttpPipeliningFuture;
       5: return

  public void removeInboundContentListener();
    Code:
       0: aload_0
       1: getfield      #13                 // Field contentObservable:Lorg/wso2/transport/http/netty/message/Observable;
       4: invokeinterface #95,  1           // InterfaceMethod org/wso2/transport/http/netty/message/Observable.removeListener:()V
       9: return

  public boolean isPassthrough();
    Code:
       0: aload_0
       1: getfield      #14                 // Field passthrough:Z
       4: ireturn

  public void setPassthrough(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field passthrough:Z
       5: return

  public void setTargetContext(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #96                 // Field targetContext:Lio/netty/channel/ChannelHandlerContext;
       5: return

  public io.netty.channel.ChannelHandlerContext getTargetContext();
    Code:
       0: aload_0
       1: getfield      #96                 // Field targetContext:Lio/netty/channel/ChannelHandlerContext;
       4: areturn
}
