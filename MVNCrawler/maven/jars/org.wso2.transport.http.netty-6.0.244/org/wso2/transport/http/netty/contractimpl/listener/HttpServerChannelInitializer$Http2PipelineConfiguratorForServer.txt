Compiled from "HttpServerChannelInitializer.java"
class org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer$Http2PipelineConfiguratorForServer extends io.netty.handler.ssl.ApplicationProtocolNegotiationHandler {
  private org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer channelInitializer;

  final org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer this$0;

  org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer$Http2PipelineConfiguratorForServer(org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer, org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
       5: aload_0
       6: ldc           #3                  // String http/1.1
       8: invokespecial #4                  // Method io/netty/handler/ssl/ApplicationProtocolNegotiationHandler."<init>":(Ljava/lang/String;)V
      11: aload_0
      12: aload_2
      13: putfield      #5                  // Field channelInitializer:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
      16: return

  protected void configurePipeline(io.netty.channel.ChannelHandlerContext, java.lang.String);
    Code:
       0: ldc           #6                  // String h2
       2: aload_2
       3: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          61
       9: aload_1
      10: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      15: ldc           #10                 // String Http2SourceConnectionHandler
      17: new           #11                 // class org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceConnectionHandlerBuilder
      20: dup
      21: aload_0
      22: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
      25: invokestatic  #12                 // Method org/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer.access$000:(Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;)Ljava/lang/String;
      28: aload_0
      29: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
      32: invokestatic  #13                 // Method org/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer.access$100:(Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;)Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      35: aload_0
      36: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
      39: invokestatic  #14                 // Method org/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer.access$200:(Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;)Ljava/lang/String;
      42: aload_0
      43: getfield      #5                  // Field channelInitializer:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
      46: invokespecial #15                 // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceConnectionHandlerBuilder."<init>":(Ljava/lang/String;Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;Ljava/lang/String;Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;)V
      49: invokevirtual #16                 // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceConnectionHandlerBuilder.build:()Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceConnectionHandler;
      52: invokeinterface #17,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      57: pop
      58: goto          127
      61: ldc           #3                  // String http/1.1
      63: aload_2
      64: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifeq          100
      70: aload_0
      71: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
      74: aload_1
      75: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      80: ldc           #18                 // String http
      82: invokevirtual #19                 // Method org/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer.configureHttpPipeline:(Lio/netty/channel/ChannelPipeline;Ljava/lang/String;)V
      85: aload_1
      86: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      91: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
      96: pop
      97: goto          127
     100: new           #21                 // class java/lang/IllegalStateException
     103: dup
     104: new           #22                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     111: ldc           #24                 // String unknown protocol:
     113: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload_2
     117: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        36
       4: aload_1
       5: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      10: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      15: ifeq          36
      18: aload_1
      19: getstatic     #30                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      22: invokeinterface #31,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      27: getstatic     #32                 // Field io/netty/channel/ChannelFutureListener.CLOSE:Lio/netty/channel/ChannelFutureListener;
      30: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      35: pop
      36: return
}
