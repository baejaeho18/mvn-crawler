Compiled from "ConnectionManager.java"
public class org.wso2.transport.http.netty.contractimpl.sender.channel.pool.ConnectionManager {
  private static final org.slf4j.Logger LOG;

  private io.netty.channel.EventLoopGroup clientEventGroup;

  private org.wso2.transport.http.netty.contractimpl.sender.channel.pool.PoolConfiguration poolConfiguration;

  private org.wso2.transport.http.netty.contractimpl.sender.channel.pool.ConnectionManager$PoolManagementPolicy poolManagementPolicy;

  private org.wso2.transport.http.netty.contractimpl.sender.channel.BootstrapConfiguration bootstrapConfig;

  private final java.util.Map<java.lang.String, org.apache.commons.pool.impl.GenericObjectPool> connGlobalPool;

  private org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ConnectionManager http2ConnectionManager;

  public org.wso2.transport.http.netty.contractimpl.sender.channel.pool.ConnectionManager(org.wso2.transport.http.netty.contract.config.SenderConfiguration, org.wso2.transport.http.netty.contractimpl.sender.channel.BootstrapConfiguration, io.netty.channel.EventLoopGroup);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getPoolConfiguration:()Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
       9: putfield      #3                  // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
      12: aload_0
      13: getfield      #3                  // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
      16: invokevirtual #4                  // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration.getNumberOfPools:()I
      19: iconst_1
      20: if_icmpne     30
      23: aload_0
      24: getstatic     #5                  // Field org/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager$PoolManagementPolicy.LOCK_DEFAULT_POOLING:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager$PoolManagementPolicy;
      27: putfield      #6                  // Field poolManagementPolicy:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager$PoolManagementPolicy;
      30: aload_0
      31: new           #7                  // class java/util/concurrent/ConcurrentHashMap
      34: dup
      35: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      38: putfield      #9                  // Field connGlobalPool:Ljava/util/Map;
      41: aload_0
      42: aload_3
      43: putfield      #10                 // Field clientEventGroup:Lio/netty/channel/EventLoopGroup;
      46: aload_0
      47: aload_2
      48: putfield      #11                 // Field bootstrapConfig:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration;
      51: aload_0
      52: new           #12                 // class org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager
      55: dup
      56: aload_1
      57: invokespecial #13                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager."<init>":(Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;)V
      60: putfield      #14                 // Field http2ConnectionManager:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager;
      63: return

  private org.apache.commons.pool.impl.GenericObjectPool createPoolForRoute(org.wso2.transport.http.netty.contractimpl.sender.channel.pool.PoolableTargetChannelFactory);
    Code:
       0: new           #15                 // class org/apache/commons/pool/impl/GenericObjectPool
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #16                 // Method instantiateAndConfigureConfig:()Lorg/apache/commons/pool/impl/GenericObjectPool$Config;
       9: invokespecial #17                 // Method org/apache/commons/pool/impl/GenericObjectPool."<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;Lorg/apache/commons/pool/impl/GenericObjectPool$Config;)V
      12: areturn

  private org.apache.commons.pool.impl.GenericObjectPool createPoolForRoutePerSrcHndlr(org.apache.commons.pool.impl.GenericObjectPool);
    Code:
       0: new           #15                 // class org/apache/commons/pool/impl/GenericObjectPool
       3: dup
       4: new           #18                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolableTargetChannelFactoryPerSrcHndlr
       7: dup
       8: aload_1
       9: invokespecial #19                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolableTargetChannelFactoryPerSrcHndlr."<init>":(Lorg/apache/commons/pool/impl/GenericObjectPool;)V
      12: aload_0
      13: invokespecial #16                 // Method instantiateAndConfigureConfig:()Lorg/apache/commons/pool/impl/GenericObjectPool$Config;
      16: invokespecial #17                 // Method org/apache/commons/pool/impl/GenericObjectPool."<init>":(Lorg/apache/commons/pool/PoolableObjectFactory;Lorg/apache/commons/pool/impl/GenericObjectPool$Config;)V
      19: areturn

  public org.wso2.transport.http.netty.contractimpl.sender.channel.TargetChannel borrowTargetChannel(org.wso2.transport.http.netty.contractimpl.common.HttpRoute, org.wso2.transport.http.netty.contractimpl.listener.SourceHandler, org.wso2.transport.http.netty.contract.config.SenderConfiguration) throws java.lang.Exception;
    Code:
       0: aload_2
       1: ifnull        267
       4: aload_2
       5: invokevirtual #20                 // Method org/wso2/transport/http/netty/contractimpl/listener/SourceHandler.getInboundChannelContext:()Lio/netty/channel/ChannelHandlerContext;
       8: astore        6
      10: aload         6
      12: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      17: invokeinterface #22,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      22: astore        5
      24: aload         6
      26: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      31: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: astore        7
      36: aload_0
      37: getfield      #6                  // Field poolManagementPolicy:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager$PoolManagementPolicy;
      40: getstatic     #5                  // Field org/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager$PoolManagementPolicy.LOCK_DEFAULT_POOLING:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager$PoolManagementPolicy;
      43: if_acmpne     118
      46: aload_2
      47: invokevirtual #24                 // Method org/wso2/transport/http/netty/contractimpl/listener/SourceHandler.getTargetChannelPool:()Ljava/util/Map;
      50: astore        8
      52: aload         8
      54: aload_1
      55: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
      58: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #15                 // class org/apache/commons/pool/impl/GenericObjectPool
      66: astore        4
      68: aload         4
      70: ifnonnull     115
      73: new           #27                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolableTargetChannelFactory
      76: dup
      77: aload         5
      79: aload         7
      81: aload_1
      82: aload_3
      83: aload_0
      84: getfield      #11                 // Field bootstrapConfig:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration;
      87: aload_0
      88: invokespecial #28                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolableTargetChannelFactory."<init>":(Lio/netty/channel/EventLoopGroup;Ljava/lang/Class;Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;Lorg/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration;Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;)V
      91: astore        9
      93: aload_0
      94: aload         9
      96: invokespecial #29                 // Method createPoolForRoute:(Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolableTargetChannelFactory;)Lorg/apache/commons/pool/impl/GenericObjectPool;
      99: astore        4
     101: aload         8
     103: aload_1
     104: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
     107: aload         4
     109: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     114: pop
     115: goto          264
     118: aload_2
     119: invokevirtual #24                 // Method org/wso2/transport/http/netty/contractimpl/listener/SourceHandler.getTargetChannelPool:()Ljava/util/Map;
     122: astore        8
     124: aload         8
     126: aload_1
     127: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
     130: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     135: checkcast     #15                 // class org/apache/commons/pool/impl/GenericObjectPool
     138: astore        4
     140: aload         4
     142: ifnonnull     264
     145: aload_0
     146: dup
     147: astore        9
     149: monitorenter
     150: aload_0
     151: getfield      #9                  // Field connGlobalPool:Ljava/util/Map;
     154: aload_1
     155: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
     158: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     163: ifne          210
     166: new           #27                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolableTargetChannelFactory
     169: dup
     170: aload         5
     172: aload         7
     174: aload_1
     175: aload_3
     176: aload_0
     177: getfield      #11                 // Field bootstrapConfig:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration;
     180: aload_0
     181: invokespecial #28                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolableTargetChannelFactory."<init>":(Lio/netty/channel/EventLoopGroup;Ljava/lang/Class;Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;Lorg/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration;Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;)V
     184: astore        10
     186: aload_0
     187: aload         10
     189: invokespecial #29                 // Method createPoolForRoute:(Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolableTargetChannelFactory;)Lorg/apache/commons/pool/impl/GenericObjectPool;
     192: astore        4
     194: aload_0
     195: getfield      #9                  // Field connGlobalPool:Ljava/util/Map;
     198: aload_1
     199: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
     202: aload         4
     204: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     209: pop
     210: aload_0
     211: getfield      #9                  // Field connGlobalPool:Ljava/util/Map;
     214: aload_1
     215: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
     218: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     223: checkcast     #15                 // class org/apache/commons/pool/impl/GenericObjectPool
     226: astore        4
     228: aload_0
     229: aload         4
     231: invokespecial #32                 // Method createPoolForRoutePerSrcHndlr:(Lorg/apache/commons/pool/impl/GenericObjectPool;)Lorg/apache/commons/pool/impl/GenericObjectPool;
     234: astore        4
     236: aload         9
     238: monitorexit
     239: goto          250
     242: astore        11
     244: aload         9
     246: monitorexit
     247: aload         11
     249: athrow
     250: aload         8
     252: aload_1
     253: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
     256: aload         4
     258: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     263: pop
     264: goto          374
     267: ldc           #33                 // class io/netty/channel/socket/nio/NioSocketChannel
     269: astore        5
     271: aload_0
     272: getfield      #10                 // Field clientEventGroup:Lio/netty/channel/EventLoopGroup;
     275: astore        6
     277: aload_0
     278: dup
     279: astore        7
     281: monitorenter
     282: aload_0
     283: getfield      #9                  // Field connGlobalPool:Ljava/util/Map;
     286: aload_1
     287: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
     290: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     295: ifne          342
     298: new           #27                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolableTargetChannelFactory
     301: dup
     302: aload         6
     304: aload         5
     306: aload_1
     307: aload_3
     308: aload_0
     309: getfield      #11                 // Field bootstrapConfig:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration;
     312: aload_0
     313: invokespecial #28                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolableTargetChannelFactory."<init>":(Lio/netty/channel/EventLoopGroup;Ljava/lang/Class;Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;Lorg/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration;Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;)V
     316: astore        8
     318: aload_0
     319: aload         8
     321: invokespecial #29                 // Method createPoolForRoute:(Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolableTargetChannelFactory;)Lorg/apache/commons/pool/impl/GenericObjectPool;
     324: astore        4
     326: aload_0
     327: getfield      #9                  // Field connGlobalPool:Ljava/util/Map;
     330: aload_1
     331: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
     334: aload         4
     336: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     341: pop
     342: aload_0
     343: getfield      #9                  // Field connGlobalPool:Ljava/util/Map;
     346: aload_1
     347: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
     350: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     355: checkcast     #15                 // class org/apache/commons/pool/impl/GenericObjectPool
     358: astore        4
     360: aload         7
     362: monitorexit
     363: goto          374
     366: astore        12
     368: aload         7
     370: monitorexit
     371: aload         12
     373: athrow
     374: aload         4
     376: invokevirtual #34                 // Method org/apache/commons/pool/impl/GenericObjectPool.borrowObject:()Ljava/lang/Object;
     379: checkcast     #35                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel
     382: astore        5
     384: aload         5
     386: aload_2
     387: invokevirtual #36                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.setCorrelatedSource:(Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;)V
     390: aload         5
     392: aload_0
     393: invokevirtual #37                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.setConnectionManager:(Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;)V
     396: aload         5
     398: areturn
    Exception table:
       from    to  target type
         150   239   242   any
         242   247   242   any
         282   363   366   any
         366   371   366   any

  public void returnChannel(org.wso2.transport.http.netty.contractimpl.sender.channel.TargetChannel) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getCorrelatedSource:()Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
       4: ifnull        39
       7: aload_1
       8: invokevirtual #38                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getCorrelatedSource:()Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      11: invokevirtual #24                 // Method org/wso2/transport/http/netty/contractimpl/listener/SourceHandler.getTargetChannelPool:()Ljava/util/Map;
      14: astore_2
      15: aload_0
      16: aload_1
      17: aload_2
      18: aload_1
      19: invokevirtual #39                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getHttpRoute:()Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
      22: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
      25: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #15                 // class org/apache/commons/pool/impl/GenericObjectPool
      33: invokespecial #40                 // Method releaseChannelToPool:(Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;Lorg/apache/commons/pool/impl/GenericObjectPool;)V
      36: goto          63
      39: aload_0
      40: aload_1
      41: aload_0
      42: getfield      #9                  // Field connGlobalPool:Ljava/util/Map;
      45: aload_1
      46: invokevirtual #39                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getHttpRoute:()Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
      49: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
      52: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      57: checkcast     #15                 // class org/apache/commons/pool/impl/GenericObjectPool
      60: invokespecial #40                 // Method releaseChannelToPool:(Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;Lorg/apache/commons/pool/impl/GenericObjectPool;)V
      63: return

  private void releaseChannelToPool(org.wso2.transport.http.netty.contractimpl.sender.channel.TargetChannel, org.apache.commons.pool.impl.GenericObjectPool) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
       4: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
       9: invokeinterface #43,  1           // InterfaceMethod io/netty/channel/ChannelId.asShortText:()Ljava/lang/String;
      14: astore_3
      15: aload_1
      16: invokevirtual #41                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
      19: invokeinterface #44,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      24: ifeq          61
      27: aload_2
      28: ifnull        61
      31: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
      34: invokeinterface #46,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      39: ifeq          53
      42: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
      45: ldc           #47                 // String Returning connection {} to the pool
      47: aload_3
      48: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      53: aload_2
      54: aload_1
      55: invokevirtual #49                 // Method org/apache/commons/pool/impl/GenericObjectPool.returnObject:(Ljava/lang/Object;)V
      58: goto          72
      61: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
      64: ldc           #50                 // String Channel {} is inactive hence not returning to connection pool
      66: aload_3
      67: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      72: goto          87
      75: astore_3
      76: new           #51                 // class java/lang/Exception
      79: dup
      80: ldc           #52                 // String Couldn\'t return channel to pool
      82: aload_3
      83: invokespecial #53                 // Method java/lang/Exception."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      86: athrow
      87: return
    Exception table:
       from    to  target type
           0    72    75   Class java/lang/Exception

  public void invalidateTargetChannel(org.wso2.transport.http.netty.contractimpl.sender.channel.TargetChannel) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getCorrelatedSource:()Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
       4: ifnull        97
       7: aload_1
       8: invokevirtual #38                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getCorrelatedSource:()Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      11: invokevirtual #24                 // Method org/wso2/transport/http/netty/contractimpl/listener/SourceHandler.getTargetChannelPool:()Ljava/util/Map;
      14: astore_2
      15: aload_1
      16: invokevirtual #39                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getHttpRoute:()Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
      19: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
      22: astore_3
      23: aload_2
      24: aload_3
      25: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: ifnull        82
      33: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
      36: invokeinterface #46,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      41: ifeq          68
      44: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
      47: ldc           #54                 // String Invalidating connection {} to the pool
      49: aload_1
      50: invokevirtual #41                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
      53: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      58: invokeinterface #43,  1           // InterfaceMethod io/netty/channel/ChannelId.asShortText:()Ljava/lang/String;
      63: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      68: aload_2
      69: aload_3
      70: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      75: checkcast     #15                 // class org/apache/commons/pool/impl/GenericObjectPool
      78: aload_1
      79: invokevirtual #55                 // Method org/apache/commons/pool/impl/GenericObjectPool.invalidateObject:(Ljava/lang/Object;)V
      82: goto          97
      85: astore_3
      86: new           #51                 // class java/lang/Exception
      89: dup
      90: ldc           #56                 // String Cannot invalidate channel from pool
      92: aload_3
      93: invokespecial #53                 // Method java/lang/Exception."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      96: athrow
      97: return
    Exception table:
       from    to  target type
          15    82    85   Class java/lang/Exception

  private org.apache.commons.pool.impl.GenericObjectPool$Config instantiateAndConfigureConfig();
    Code:
       0: new           #57                 // class org/apache/commons/pool/impl/GenericObjectPool$Config
       3: dup
       4: invokespecial #58                 // Method org/apache/commons/pool/impl/GenericObjectPool$Config."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
      13: invokevirtual #59                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration.getMaxActivePerPool:()I
      16: putfield      #60                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.maxActive:I
      19: aload_1
      20: aload_0
      21: getfield      #3                  // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
      24: invokevirtual #61                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration.getMaxIdlePerPool:()I
      27: putfield      #62                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.maxIdle:I
      30: aload_1
      31: aload_0
      32: getfield      #3                  // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
      35: invokevirtual #63                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration.getMinIdlePerPool:()I
      38: putfield      #64                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.minIdle:I
      41: aload_1
      42: aload_0
      43: getfield      #3                  // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
      46: invokevirtual #65                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration.isTestOnBorrow:()Z
      49: putfield      #66                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.testOnBorrow:Z
      52: aload_1
      53: aload_0
      54: getfield      #3                  // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
      57: invokevirtual #67                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration.isTestWhileIdle:()Z
      60: putfield      #68                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.testWhileIdle:Z
      63: aload_1
      64: aload_0
      65: getfield      #3                  // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
      68: invokevirtual #69                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration.getTimeBetweenEvictionRuns:()J
      71: putfield      #70                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.timeBetweenEvictionRunsMillis:J
      74: aload_1
      75: aload_0
      76: getfield      #3                  // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
      79: invokevirtual #71                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration.getMinEvictableIdleTime:()J
      82: putfield      #72                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.minEvictableIdleTimeMillis:J
      85: aload_1
      86: aload_0
      87: getfield      #3                  // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
      90: invokevirtual #73                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration.getExhaustedAction:()B
      93: putfield      #74                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.whenExhaustedAction:B
      96: aload_1
      97: aload_0
      98: getfield      #3                  // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
     101: invokevirtual #75                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration.getMaxWaitTime:()J
     104: putfield      #76                 // Field org/apache/commons/pool/impl/GenericObjectPool$Config.maxWait:J
     107: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
     110: invokeinterface #46,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     115: ifeq          129
     118: getstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
     121: ldc           #77                 // String Creating a pool with {}
     123: aload_1
     124: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     129: aload_1
     130: areturn

  public org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ConnectionManager getHttp2ConnectionManager();
    Code:
       0: aload_0
       1: getfield      #14                 // Field http2ConnectionManager:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager;
       4: areturn

  static {};
    Code:
       0: ldc           #78                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager
       2: invokestatic  #79                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #45                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
