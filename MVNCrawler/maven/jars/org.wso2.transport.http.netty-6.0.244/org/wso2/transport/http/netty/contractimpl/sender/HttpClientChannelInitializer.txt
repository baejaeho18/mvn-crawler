Compiled from "HttpClientChannelInitializer.java"
public class org.wso2.transport.http.netty.contractimpl.sender.HttpClientChannelInitializer extends io.netty.channel.ChannelInitializer<io.netty.channel.socket.SocketChannel> {
  private org.wso2.transport.http.netty.contractimpl.sender.TargetHandler targetHandler;

  private boolean httpTraceLogEnabled;

  private org.wso2.transport.http.netty.contract.config.KeepAliveConfig keepAliveConfig;

  private org.wso2.transport.http.netty.contract.config.ProxyServerConfiguration proxyServerConfiguration;

  private org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ConnectionManager http2ConnectionManager;

  private boolean http2;

  private io.netty.handler.codec.http2.Http2ConnectionHandler http2ConnectionHandler;

  private org.wso2.transport.http.netty.contractimpl.sender.http2.ClientFrameListener clientFrameListener;

  private org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler http2TargetHandler;

  private io.netty.handler.codec.http2.Http2Connection connection;

  private org.wso2.transport.http.netty.contractimpl.common.ssl.SSLConfig sslConfig;

  private org.wso2.transport.http.netty.contractimpl.common.HttpRoute httpRoute;

  private org.wso2.transport.http.netty.contract.config.SenderConfiguration senderConfiguration;

  private org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityFuture connectionAvailabilityFuture;

  private org.wso2.transport.http.netty.contractimpl.common.ssl.SSLHandlerFactory sslHandlerFactory;

  public org.wso2.transport.http.netty.contractimpl.sender.HttpClientChannelInitializer(org.wso2.transport.http.netty.contract.config.SenderConfiguration, org.wso2.transport.http.netty.contractimpl.common.HttpRoute, org.wso2.transport.http.netty.contractimpl.sender.channel.pool.ConnectionManager, org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityFuture);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/netty/channel/ChannelInitializer."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field http2:Z
       9: aload_0
      10: aload_1
      11: invokevirtual #4                  // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.isHttpTraceLogEnabled:()Z
      14: putfield      #5                  // Field httpTraceLogEnabled:Z
      17: aload_0
      18: aload_1
      19: invokevirtual #6                  // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getKeepAliveConfig:()Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      22: putfield      #7                  // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      25: aload_0
      26: aload_1
      27: invokevirtual #8                  // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getProxyServerConfiguration:()Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      30: putfield      #9                  // Field proxyServerConfiguration:Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      33: aload_0
      34: aload_3
      35: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager.getHttp2ConnectionManager:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager;
      38: putfield      #11                 // Field http2ConnectionManager:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager;
      41: aload_0
      42: aload_1
      43: putfield      #12                 // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
      46: aload_0
      47: aload_2
      48: putfield      #13                 // Field httpRoute:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
      51: aload_0
      52: aload_1
      53: invokevirtual #14                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getClientSSLConfig:()Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      56: putfield      #15                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      59: aload_0
      60: aload         4
      62: putfield      #16                 // Field connectionAvailabilityFuture:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture;
      65: aload_1
      66: invokevirtual #17                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getHttpVersion:()Ljava/lang/String;
      69: astore        5
      71: aload         5
      73: invokestatic  #18                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
      76: invokevirtual #19                 // Method java/lang/Float.floatValue:()F
      79: fconst_2
      80: fcmpl
      81: ifne          89
      84: aload_0
      85: iconst_1
      86: putfield      #3                  // Field http2:Z
      89: aload_0
      90: new           #21                 // class io/netty/handler/codec/http2/DefaultHttp2Connection
      93: dup
      94: iconst_0
      95: invokespecial #22                 // Method io/netty/handler/codec/http2/DefaultHttp2Connection."<init>":(Z)V
      98: putfield      #23                 // Field connection:Lio/netty/handler/codec/http2/Http2Connection;
     101: aload_0
     102: new           #24                 // class org/wso2/transport/http/netty/contractimpl/sender/http2/ClientFrameListener
     105: dup
     106: invokespecial #25                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/ClientFrameListener."<init>":()V
     109: putfield      #26                 // Field clientFrameListener:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/ClientFrameListener;
     112: new           #27                 // class io/netty/handler/codec/http2/DelegatingDecompressorFrameListener
     115: dup
     116: aload_0
     117: getfield      #23                 // Field connection:Lio/netty/handler/codec/http2/Http2Connection;
     120: aload_0
     121: getfield      #26                 // Field clientFrameListener:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/ClientFrameListener;
     124: invokespecial #28                 // Method io/netty/handler/codec/http2/DelegatingDecompressorFrameListener."<init>":(Lio/netty/handler/codec/http2/Http2Connection;Lio/netty/handler/codec/http2/Http2FrameListener;)V
     127: astore        6
     129: new           #29                 // class io/netty/handler/codec/http2/Http2ConnectionHandlerBuilder
     132: dup
     133: invokespecial #30                 // Method io/netty/handler/codec/http2/Http2ConnectionHandlerBuilder."<init>":()V
     136: astore        7
     138: aload_0
     139: getfield      #5                  // Field httpTraceLogEnabled:Z
     142: ifeq          163
     145: aload         7
     147: new           #31                 // class org/wso2/transport/http/netty/contractimpl/common/FrameLogger
     150: dup
     151: getstatic     #32                 // Field io/netty/handler/logging/LogLevel.TRACE:Lio/netty/handler/logging/LogLevel;
     154: ldc           #33                 // String http.tracelog.upstream
     156: invokespecial #34                 // Method org/wso2/transport/http/netty/contractimpl/common/FrameLogger."<init>":(Lio/netty/handler/logging/LogLevel;Ljava/lang/String;)V
     159: invokevirtual #35                 // Method io/netty/handler/codec/http2/Http2ConnectionHandlerBuilder.frameLogger:(Lio/netty/handler/codec/http2/Http2FrameLogger;)Lio/netty/handler/codec/http2/Http2ConnectionHandlerBuilder;
     162: pop
     163: aload_0
     164: aload         7
     166: aload_0
     167: getfield      #23                 // Field connection:Lio/netty/handler/codec/http2/Http2Connection;
     170: invokevirtual #36                 // Method io/netty/handler/codec/http2/Http2ConnectionHandlerBuilder.connection:(Lio/netty/handler/codec/http2/Http2Connection;)Lio/netty/handler/codec/http2/Http2ConnectionHandlerBuilder;
     173: aload         6
     175: invokevirtual #37                 // Method io/netty/handler/codec/http2/Http2ConnectionHandlerBuilder.frameListener:(Lio/netty/handler/codec/http2/Http2FrameListener;)Lio/netty/handler/codec/http2/Http2ConnectionHandlerBuilder;
     178: invokevirtual #38                 // Method io/netty/handler/codec/http2/Http2ConnectionHandlerBuilder.build:()Lio/netty/handler/codec/http2/Http2ConnectionHandler;
     181: putfield      #39                 // Field http2ConnectionHandler:Lio/netty/handler/codec/http2/Http2ConnectionHandler;
     184: aload_0
     185: new           #40                 // class org/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler
     188: dup
     189: aload_0
     190: getfield      #23                 // Field connection:Lio/netty/handler/codec/http2/Http2Connection;
     193: aload_0
     194: getfield      #39                 // Field http2ConnectionHandler:Lio/netty/handler/codec/http2/Http2ConnectionHandler;
     197: invokevirtual #41                 // Method io/netty/handler/codec/http2/Http2ConnectionHandler.encoder:()Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
     200: invokespecial #42                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler."<init>":(Lio/netty/handler/codec/http2/Http2Connection;Lio/netty/handler/codec/http2/Http2ConnectionEncoder;)V
     203: putfield      #43                 // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
     206: aload_0
     207: getfield      #15                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
     210: ifnull        228
     213: aload_0
     214: new           #44                 // class org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory
     217: dup
     218: aload_0
     219: getfield      #15                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
     222: invokespecial #45                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory."<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;)V
     225: putfield      #46                 // Field sslHandlerFactory:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;
     228: return

  protected void initChannel(io.netty.channel.socket.SocketChannel) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #47,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
       6: astore_2
       7: aload_0
       8: aload_2
       9: invokespecial #48                 // Method configureProxyServer:(Lio/netty/channel/ChannelPipeline;)V
      12: new           #49                 // class io/netty/handler/codec/http/HttpClientCodec
      15: dup
      16: invokespecial #50                 // Method io/netty/handler/codec/http/HttpClientCodec."<init>":()V
      19: astore_3
      20: aload_0
      21: new           #51                 // class org/wso2/transport/http/netty/contractimpl/sender/TargetHandler
      24: dup
      25: invokespecial #52                 // Method org/wso2/transport/http/netty/contractimpl/sender/TargetHandler."<init>":()V
      28: putfield      #53                 // Field targetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;
      31: aload_0
      32: getfield      #53                 // Field targetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;
      35: aload_0
      36: getfield      #43                 // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      39: invokevirtual #54                 // Method org/wso2/transport/http/netty/contractimpl/sender/TargetHandler.setHttp2TargetHandler:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;)V
      42: aload_0
      43: getfield      #53                 // Field targetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;
      46: aload_0
      47: invokevirtual #55                 // Method getKeepAliveConfig:()Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      50: invokevirtual #56                 // Method org/wso2/transport/http/netty/contractimpl/sender/TargetHandler.setKeepAliveConfig:(Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;)V
      53: aload_0
      54: getfield      #3                  // Field http2:Z
      57: ifeq          111
      60: aload_0
      61: getfield      #15                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      64: ifnull        80
      67: aload_0
      68: aload_1
      69: aload_2
      70: aload_0
      71: getfield      #15                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      74: invokespecial #57                 // Method configureSslForHttp2:(Lio/netty/channel/socket/SocketChannel;Lio/netty/channel/ChannelPipeline;Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;)V
      77: goto          185
      80: aload_0
      81: getfield      #12                 // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
      84: invokevirtual #58                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.isForceHttp2:()Z
      87: ifeq          98
      90: aload_0
      91: aload_2
      92: invokespecial #1                  // Method configureHttp2Pipeline:(Lio/netty/channel/ChannelPipeline;)V
      95: goto          185
      98: aload_0
      99: aload_2
     100: aload_3
     101: aload_0
     102: getfield      #53                 // Field targetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;
     105: invokespecial #59                 // Method configureHttp2UpgradePipeline:(Lio/netty/channel/ChannelPipeline;Lio/netty/handler/codec/http/HttpClientCodec;Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;)V
     108: goto          185
     111: aload_0
     112: getfield      #15                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
     115: ifnull        176
     118: aload_0
     119: getfield      #16                 // Field connectionAvailabilityFuture:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture;
     122: iconst_1
     123: invokevirtual #60                 // Method org/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture.setSSLEnabled:(Z)V
     126: aload_1
     127: aload_0
     128: getfield      #13                 // Field httpRoute:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
     131: invokevirtual #61                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.getHost:()Ljava/lang/String;
     134: aload_0
     135: getfield      #13                 // Field httpRoute:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
     138: invokevirtual #62                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.getPort:()I
     141: aload_0
     142: getfield      #15                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
     145: invokestatic  #63                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.configureHttpPipelineForSSL:(Lio/netty/channel/socket/SocketChannel;Ljava/lang/String;ILorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;)V
     148: aload_2
     149: ldc           #64                 // String sslHandshakeCompletionHandler
     151: new           #65                 // class org/wso2/transport/http/netty/contractimpl/sender/SslHandshakeCompletionHandlerForClient
     154: dup
     155: aload_0
     156: getfield      #16                 // Field connectionAvailabilityFuture:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture;
     159: aload_0
     160: aload_0
     161: getfield      #53                 // Field targetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;
     164: invokespecial #66                 // Method org/wso2/transport/http/netty/contractimpl/sender/SslHandshakeCompletionHandlerForClient."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture;Lorg/wso2/transport/http/netty/contractimpl/sender/HttpClientChannelInitializer;Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;)V
     167: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     172: pop
     173: goto          185
     176: aload_0
     177: aload_2
     178: aload_0
     179: getfield      #53                 // Field targetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;
     182: invokevirtual #68                 // Method configureHttpPipeline:(Lio/netty/channel/ChannelPipeline;Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;)V
     185: return

  private void configureProxyServer(io.netty.channel.ChannelPipeline);
    Code:
       0: aload_0
       1: getfield      #9                  // Field proxyServerConfiguration:Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
       4: ifnull        97
       7: aload_0
       8: getfield      #15                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      11: ifnull        97
      14: aload_0
      15: getfield      #9                  // Field proxyServerConfiguration:Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      18: invokevirtual #69                 // Method org/wso2/transport/http/netty/contract/config/ProxyServerConfiguration.getProxyUsername:()Ljava/lang/String;
      21: ifnull        74
      24: aload_0
      25: getfield      #9                  // Field proxyServerConfiguration:Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      28: invokevirtual #70                 // Method org/wso2/transport/http/netty/contract/config/ProxyServerConfiguration.getProxyPassword:()Ljava/lang/String;
      31: ifnull        74
      34: aload_1
      35: ldc           #71                 // String proxyServerHandler
      37: new           #72                 // class io/netty/handler/proxy/HttpProxyHandler
      40: dup
      41: aload_0
      42: getfield      #9                  // Field proxyServerConfiguration:Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      45: invokevirtual #73                 // Method org/wso2/transport/http/netty/contract/config/ProxyServerConfiguration.getInetSocketAddress:()Ljava/net/InetSocketAddress;
      48: aload_0
      49: getfield      #9                  // Field proxyServerConfiguration:Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      52: invokevirtual #69                 // Method org/wso2/transport/http/netty/contract/config/ProxyServerConfiguration.getProxyUsername:()Ljava/lang/String;
      55: aload_0
      56: getfield      #9                  // Field proxyServerConfiguration:Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      59: invokevirtual #70                 // Method org/wso2/transport/http/netty/contract/config/ProxyServerConfiguration.getProxyPassword:()Ljava/lang/String;
      62: invokespecial #74                 // Method io/netty/handler/proxy/HttpProxyHandler."<init>":(Ljava/net/SocketAddress;Ljava/lang/String;Ljava/lang/String;)V
      65: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      70: pop
      71: goto          97
      74: aload_1
      75: ldc           #71                 // String proxyServerHandler
      77: new           #72                 // class io/netty/handler/proxy/HttpProxyHandler
      80: dup
      81: aload_0
      82: getfield      #9                  // Field proxyServerConfiguration:Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      85: invokevirtual #73                 // Method org/wso2/transport/http/netty/contract/config/ProxyServerConfiguration.getInetSocketAddress:()Ljava/net/InetSocketAddress;
      88: invokespecial #75                 // Method io/netty/handler/proxy/HttpProxyHandler."<init>":(Ljava/net/SocketAddress;)V
      91: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      96: pop
      97: return

  private void configureSslForHttp2(io.netty.channel.socket.SocketChannel, io.netty.channel.ChannelPipeline, org.wso2.transport.http.netty.contractimpl.common.ssl.SSLConfig) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field connectionAvailabilityFuture:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture;
       4: iconst_1
       5: invokevirtual #60                 // Method org/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture.setSSLEnabled:(Z)V
       8: aload_3
       9: invokevirtual #76                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig.isOcspStaplingEnabled:()Z
      12: ifeq          111
      15: aload_0
      16: getfield      #46                 // Field sslHandlerFactory:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;
      19: aload_3
      20: invokevirtual #76                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig.isOcspStaplingEnabled:()Z
      23: invokevirtual #77                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory.createHttp2TLSContextForClient:(Z)Lio/netty/handler/ssl/SslContext;
      26: checkcast     #78                 // class io/netty/handler/ssl/ReferenceCountedOpenSslContext
      29: astore        4
      31: aload         4
      33: ifnull        108
      36: aload         4
      38: aload_1
      39: invokeinterface #79,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.alloc:()Lio/netty/buffer/ByteBufAllocator;
      44: invokevirtual #80                 // Method io/netty/handler/ssl/ReferenceCountedOpenSslContext.newHandler:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/handler/ssl/SslHandler;
      47: astore        5
      49: aload         5
      51: invokevirtual #81                 // Method io/netty/handler/ssl/SslHandler.engine:()Ljavax/net/ssl/SSLEngine;
      54: checkcast     #82                 // class io/netty/handler/ssl/ReferenceCountedOpenSslEngine
      57: astore        6
      59: aload_1
      60: invokeinterface #47,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      65: iconst_1
      66: anewarray     #83                 // class io/netty/channel/ChannelHandler
      69: dup
      70: iconst_0
      71: aload         5
      73: aastore
      74: invokeinterface #84,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      79: pop
      80: aload_1
      81: invokeinterface #47,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      86: iconst_1
      87: anewarray     #83                 // class io/netty/channel/ChannelHandler
      90: dup
      91: iconst_0
      92: new           #85                 // class org/wso2/transport/http/netty/contractimpl/sender/OCSPStaplingHandler
      95: dup
      96: aload         6
      98: invokespecial #86                 // Method org/wso2/transport/http/netty/contractimpl/sender/OCSPStaplingHandler."<init>":(Lio/netty/handler/ssl/ReferenceCountedOpenSslEngine;)V
     101: aastore
     102: invokeinterface #84,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     107: pop
     108: goto          250
     111: aload_0
     112: getfield      #46                 // Field sslHandlerFactory:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;
     115: invokevirtual #87                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory.createSSLContextFromKeystores:()Ljavax/net/ssl/SSLContext;
     118: pop
     119: aload_0
     120: getfield      #46                 // Field sslHandlerFactory:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;
     123: iconst_0
     124: invokevirtual #77                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory.createHttp2TLSContextForClient:(Z)Lio/netty/handler/ssl/SslContext;
     127: astore        4
     129: aload         4
     131: aload_1
     132: invokeinterface #79,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.alloc:()Lio/netty/buffer/ByteBufAllocator;
     137: aload_0
     138: getfield      #13                 // Field httpRoute:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
     141: invokevirtual #61                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.getHost:()Ljava/lang/String;
     144: aload_0
     145: getfield      #13                 // Field httpRoute:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
     148: invokevirtual #62                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.getPort:()I
     151: invokevirtual #88                 // Method io/netty/handler/ssl/SslContext.newHandler:(Lio/netty/buffer/ByteBufAllocator;Ljava/lang/String;I)Lio/netty/handler/ssl/SslHandler;
     154: astore        5
     156: aload         5
     158: invokevirtual #81                 // Method io/netty/handler/ssl/SslHandler.engine:()Ljavax/net/ssl/SSLEngine;
     161: astore        6
     163: aload_0
     164: getfield      #46                 // Field sslHandlerFactory:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;
     167: aload         6
     169: aload_0
     170: getfield      #13                 // Field httpRoute:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
     173: invokevirtual #61                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.getHost:()Ljava/lang/String;
     176: invokevirtual #89                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory.setSNIServerNames:(Ljavax/net/ssl/SSLEngine;Ljava/lang/String;)V
     179: aload_3
     180: invokevirtual #90                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig.isHostNameVerificationEnabled:()Z
     183: ifeq          191
     186: aload         6
     188: invokestatic  #91                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.setHostNameVerfication:(Ljavax/net/ssl/SSLEngine;)V
     191: aload_2
     192: iconst_1
     193: anewarray     #83                 // class io/netty/channel/ChannelHandler
     196: dup
     197: iconst_0
     198: new           #92                 // class io/netty/handler/ssl/SslHandler
     201: dup
     202: aload         6
     204: invokespecial #93                 // Method io/netty/handler/ssl/SslHandler."<init>":(Ljavax/net/ssl/SSLEngine;)V
     207: aastore
     208: invokeinterface #84,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     213: pop
     214: aload_3
     215: invokevirtual #94                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig.isValidateCertEnabled:()Z
     218: ifeq          250
     221: aload_2
     222: ldc           #95                 // String certificateValidation
     224: new           #96                 // class org/wso2/transport/http/netty/contractimpl/sender/CertificateValidationHandler
     227: dup
     228: aload         5
     230: invokevirtual #81                 // Method io/netty/handler/ssl/SslHandler.engine:()Ljavax/net/ssl/SSLEngine;
     233: aload_3
     234: invokevirtual #97                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig.getCacheValidityPeriod:()I
     237: aload_3
     238: invokevirtual #98                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig.getCacheSize:()I
     241: invokespecial #99                 // Method org/wso2/transport/http/netty/contractimpl/sender/CertificateValidationHandler."<init>":(Ljavax/net/ssl/SSLEngine;II)V
     244: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     249: pop
     250: aload_2
     251: iconst_1
     252: anewarray     #83                 // class io/netty/channel/ChannelHandler
     255: dup
     256: iconst_0
     257: new           #100                // class org/wso2/transport/http/netty/contractimpl/sender/HttpClientChannelInitializer$Http2PipelineConfiguratorForClient
     260: dup
     261: aload_0
     262: aload_0
     263: getfield      #53                 // Field targetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;
     266: aload_0
     267: getfield      #16                 // Field connectionAvailabilityFuture:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture;
     270: invokespecial #101                // Method org/wso2/transport/http/netty/contractimpl/sender/HttpClientChannelInitializer$Http2PipelineConfiguratorForClient."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/HttpClientChannelInitializer;Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture;)V
     273: aastore
     274: invokeinterface #84,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     279: pop
     280: return

  public org.wso2.transport.http.netty.contractimpl.sender.TargetHandler getTargetHandler();
    Code:
       0: aload_0
       1: getfield      #53                 // Field targetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;
       4: areturn

  public org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ConnectionManager getHttp2ConnectionManager();
    Code:
       0: aload_0
       1: getfield      #11                 // Field http2ConnectionManager:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager;
       4: areturn

  private void configureHttp2UpgradePipeline(io.netty.channel.ChannelPipeline, io.netty.handler.codec.http.HttpClientCodec, org.wso2.transport.http.netty.contractimpl.sender.TargetHandler);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #83                 // class io/netty/channel/ChannelHandler
       5: dup
       6: iconst_0
       7: aload_2
       8: aastore
       9: invokeinterface #84,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      14: pop
      15: aload_0
      16: aload_1
      17: invokespecial #102                // Method addCommonHandlers:(Lio/netty/channel/ChannelPipeline;)V
      20: new           #103                // class io/netty/handler/codec/http2/Http2ClientUpgradeCodec
      23: dup
      24: aload_0
      25: getfield      #39                 // Field http2ConnectionHandler:Lio/netty/handler/codec/http2/Http2ConnectionHandler;
      28: invokespecial #104                // Method io/netty/handler/codec/http2/Http2ClientUpgradeCodec."<init>":(Lio/netty/handler/codec/http2/Http2ConnectionHandler;)V
      31: astore        4
      33: new           #105                // class io/netty/handler/codec/http/HttpClientUpgradeHandler
      36: dup
      37: aload_2
      38: aload         4
      40: ldc           #107                // int 2147483647
      42: invokespecial #108                // Method io/netty/handler/codec/http/HttpClientUpgradeHandler."<init>":(Lio/netty/handler/codec/http/HttpClientUpgradeHandler$SourceCodec;Lio/netty/handler/codec/http/HttpClientUpgradeHandler$UpgradeCodec;I)V
      45: astore        5
      47: aload_1
      48: ldc           #109                // String Http2UpgradeHandler
      50: aload         5
      52: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      57: pop
      58: aload_1
      59: ldc           #110                // String targetHandler
      61: aload_3
      62: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      67: pop
      68: return

  private void configureHttp2Pipeline(io.netty.channel.ChannelPipeline);
    Code:
       0: aload_1
       1: ldc           #111                // String connectionHandler
       3: aload_0
       4: getfield      #39                 // Field http2ConnectionHandler:Lio/netty/handler/codec/http2/Http2ConnectionHandler;
       7: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      12: pop
      13: aload_1
      14: ldc           #112                // String http2TargetHandler
      16: aload_0
      17: getfield      #43                 // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      20: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      25: pop
      26: aload_1
      27: ldc           #113                // String deCompressor
      29: new           #114                // class io/netty/handler/codec/http/HttpContentDecompressor
      32: dup
      33: invokespecial #115                // Method io/netty/handler/codec/http/HttpContentDecompressor."<init>":()V
      36: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      41: pop
      42: return

  public void configureHttpPipeline(io.netty.channel.ChannelPipeline, org.wso2.transport.http.netty.contractimpl.sender.TargetHandler);
    Code:
       0: aload_1
       1: ldc           #116                // String codec
       3: new           #49                 // class io/netty/handler/codec/http/HttpClientCodec
       6: dup
       7: invokespecial #50                 // Method io/netty/handler/codec/http/HttpClientCodec."<init>":()V
      10: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      15: pop
      16: aload_0
      17: aload_1
      18: invokespecial #102                // Method addCommonHandlers:(Lio/netty/channel/ChannelPipeline;)V
      21: aload_1
      22: ldc           #117                // String BackPressureHandler
      24: new           #118                // class org/wso2/transport/http/netty/contractimpl/common/BackPressureHandler
      27: dup
      28: invokespecial #119                // Method org/wso2/transport/http/netty/contractimpl/common/BackPressureHandler."<init>":()V
      31: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      36: pop
      37: aload_1
      38: ldc           #110                // String targetHandler
      40: aload_2
      41: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      46: pop
      47: return

  private void addCommonHandlers(io.netty.channel.ChannelPipeline);
    Code:
       0: aload_1
       1: ldc           #113                // String deCompressor
       3: new           #114                // class io/netty/handler/codec/http/HttpContentDecompressor
       6: dup
       7: invokespecial #115                // Method io/netty/handler/codec/http/HttpContentDecompressor."<init>":()V
      10: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      15: pop
      16: aload_0
      17: getfield      #5                  // Field httpTraceLogEnabled:Z
      20: ifeq          41
      23: aload_1
      24: ldc           #120                // String http-trace-logger
      26: new           #121                // class org/wso2/transport/http/netty/contractimpl/listener/HttpTraceLoggingHandler
      29: dup
      30: ldc           #33                 // String http.tracelog.upstream
      32: invokespecial #122                // Method org/wso2/transport/http/netty/contractimpl/listener/HttpTraceLoggingHandler."<init>":(Ljava/lang/String;)V
      35: invokeinterface #67,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      40: pop
      41: return

  public io.netty.handler.codec.http2.Http2Connection getConnection();
    Code:
       0: aload_0
       1: getfield      #23                 // Field connection:Lio/netty/handler/codec/http2/Http2Connection;
       4: areturn

  public org.wso2.transport.http.netty.contract.config.KeepAliveConfig getKeepAliveConfig();
    Code:
       0: aload_0
       1: getfield      #7                  // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
       4: areturn

  public void setHttp2ClientChannel(org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel);
    Code:
       0: aload_0
       1: getfield      #43                 // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
       4: aload_1
       5: invokevirtual #123                // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler.setHttp2ClientChannel:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;)V
       8: aload_0
       9: getfield      #26                 // Field clientFrameListener:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/ClientFrameListener;
      12: aload_1
      13: invokevirtual #124                // Method org/wso2/transport/http/netty/contractimpl/sender/http2/ClientFrameListener.setHttp2ClientChannel:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;)V
      16: return

  protected void initChannel(io.netty.channel.Channel) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #125                // class io/netty/channel/socket/SocketChannel
       5: invokevirtual #126                // Method initChannel:(Lio/netty/channel/socket/SocketChannel;)V
       8: return

  static void access$000(org.wso2.transport.http.netty.contractimpl.sender.HttpClientChannelInitializer, io.netty.channel.ChannelPipeline);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method configureHttp2Pipeline:(Lio/netty/channel/ChannelPipeline;)V
       5: return
}
