Compiled from "CRLCache.java"
class org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.crl.CRLCache$CRLCacheValue implements org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.cache.ManageableCacheValue {
  private java.lang.String crlUrl;

  private java.security.cert.X509CRL crl;

  private long timeStamp;

  final org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.crl.CRLCache this$0;

  public org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.crl.CRLCache$CRLCacheValue(org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.crl.CRLCache, java.lang.String, java.security.cert.X509CRL);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/crl/CRLCache;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #3                  // Method java/lang/System.currentTimeMillis:()J
      13: putfield      #4                  // Field timeStamp:J
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field crlUrl:Ljava/lang/String;
      21: aload_0
      22: aload_3
      23: putfield      #6                  // Field crl:Ljava/security/cert/X509CRL;
      26: return

  public java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #5                  // Field crlUrl:Ljava/lang/String;
       4: areturn

  public java.security.cert.X509CRL getValue();
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method java/lang/System.currentTimeMillis:()J
       4: putfield      #4                  // Field timeStamp:J
       7: aload_0
       8: getfield      #6                  // Field crl:Ljava/security/cert/X509CRL;
      11: areturn

  public boolean isValid();
    Code:
       0: new           #7                  // class java/util/Date
       3: dup
       4: invokespecial #8                  // Method java/util/Date."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field crl:Ljava/security/cert/X509CRL;
      12: invokevirtual #9                  // Method java/security/cert/X509CRL.getNextUpdate:()Ljava/util/Date;
      15: astore_2
      16: aload_2
      17: ifnull        32
      20: aload_2
      21: aload_1
      22: invokevirtual #10                 // Method java/util/Date.after:(Ljava/util/Date;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public long getTimeStamp();
    Code:
       0: aload_0
       1: getfield      #4                  // Field timeStamp:J
       4: lreturn

  public void removeThisCacheValue();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/crl/CRLCache;
       4: aload_0
       5: getfield      #5                  // Field crlUrl:Ljava/lang/String;
       8: invokevirtual #11                 // Method org/wso2/transport/http/netty/contractimpl/common/certificatevalidation/crl/CRLCache.removeCacheValue:(Ljava/lang/String;)V
      11: return

  public void updateCacheWithNewValue();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method replaceNewCacheValue:()V
       4: return

  private synchronized void replaceNewCacheValue();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isValid:()Z
       4: ifeq          8
       7: return
       8: invokestatic  #14                 // Method org/wso2/transport/http/netty/contractimpl/common/certificatevalidation/crl/CRLCache.access$000:()Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/crl/CRLVerifier;
      11: aload_0
      12: getfield      #5                  // Field crlUrl:Ljava/lang/String;
      15: invokevirtual #15                 // Method org/wso2/transport/http/netty/contractimpl/common/certificatevalidation/crl/CRLVerifier.downloadCRLFromWeb:(Ljava/lang/String;)Ljava/security/cert/X509CRL;
      18: astore_1
      19: aload_0
      20: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/crl/CRLCache;
      23: aload_0
      24: getfield      #5                  // Field crlUrl:Ljava/lang/String;
      27: aload_1
      28: invokevirtual #16                 // Method org/wso2/transport/http/netty/contractimpl/common/certificatevalidation/crl/CRLCache.setCacheValue:(Ljava/lang/String;Ljava/security/cert/X509CRL;)V
      31: goto          61
      34: astore_1
      35: invokestatic  #18                 // Method org/wso2/transport/http/netty/contractimpl/common/certificatevalidation/crl/CRLCache.access$100:()Lorg/slf4j/Logger;
      38: invokeinterface #19,  1           // InterfaceMethod org/slf4j/Logger.isInfoEnabled:()Z
      43: ifeq          57
      46: invokestatic  #18                 // Method org/wso2/transport/http/netty/contractimpl/common/certificatevalidation/crl/CRLCache.access$100:()Lorg/slf4j/Logger;
      49: ldc           #20                 // String Cannot replace old CacheValue with new CacheValue. So remove
      51: aload_1
      52: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: aload_0
      58: invokevirtual #22                 // Method removeThisCacheValue:()V
      61: return
    Exception table:
       from    to  target type
           8    31    34   Class java/lang/Exception
}
