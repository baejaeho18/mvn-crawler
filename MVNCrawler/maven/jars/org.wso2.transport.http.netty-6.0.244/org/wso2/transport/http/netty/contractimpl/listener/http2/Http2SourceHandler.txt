Compiled from "Http2SourceHandler.java"
public final class org.wso2.transport.http.netty.contractimpl.listener.http2.Http2SourceHandler extends io.netty.channel.ChannelInboundHandlerAdapter {
  private java.util.Map<java.lang.Integer, org.wso2.transport.http.netty.message.HttpCarbonMessage> streamIdRequestMap;

  private io.netty.channel.ChannelHandlerContext ctx;

  private org.wso2.transport.http.netty.contract.ServerConnectorFuture serverConnectorFuture;

  private org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer serverChannelInitializer;

  private io.netty.handler.codec.http2.Http2ConnectionEncoder encoder;

  private io.netty.handler.codec.http2.Http2Connection conn;

  private java.lang.String interfaceId;

  private java.lang.String serverName;

  private java.lang.String remoteAddress;

  org.wso2.transport.http.netty.contractimpl.listener.http2.Http2SourceHandler(org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer, io.netty.handler.codec.http2.Http2ConnectionEncoder, java.lang.String, io.netty.handler.codec.http2.Http2Connection, org.wso2.transport.http.netty.contract.ServerConnectorFuture, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.newConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
       8: putfield      #3                  // Field streamIdRequestMap:Ljava/util/Map;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field serverChannelInitializer:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      21: aload_0
      22: aload_3
      23: putfield      #6                  // Field interfaceId:Ljava/lang/String;
      26: aload_0
      27: aload         5
      29: putfield      #7                  // Field serverConnectorFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      32: aload_0
      33: aload         4
      35: putfield      #8                  // Field conn:Lio/netty/handler/codec/http2/Http2Connection;
      38: aload_0
      39: aload         6
      41: putfield      #9                  // Field serverName:Ljava/lang/String;
      44: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method io/netty/channel/ChannelInboundHandlerAdapter.handlerAdded:(Lio/netty/channel/ChannelHandlerContext;)V
       5: aload_0
       6: aload_1
       7: putfield      #11                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: aload_1
      11: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      16: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
      21: astore_2
      22: aload_2
      23: instanceof    #14                 // class java/net/InetSocketAddress
      26: ifeq          67
      29: aload_0
      30: aload_2
      31: checkcast     #14                 // class java/net/InetSocketAddress
      34: invokevirtual #15                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      37: invokevirtual #16                 // Method java/net/InetAddress.toString:()Ljava/lang/String;
      40: putfield      #17                 // Field remoteAddress:Ljava/lang/String;
      43: aload_0
      44: getfield      #17                 // Field remoteAddress:Ljava/lang/String;
      47: ldc           #18                 // String /
      49: invokevirtual #19                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      52: ifeq          67
      55: aload_0
      56: aload_0
      57: getfield      #17                 // Field remoteAddress:Ljava/lang/String;
      60: iconst_1
      61: invokevirtual #20                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      64: putfield      #17                 // Field remoteAddress:Ljava/lang/String;
      67: return

  public void userEventTriggered(io.netty.channel.ChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #21                 // class io/netty/handler/codec/http/HttpServerUpgradeHandler$UpgradeEvent
       4: ifeq          89
       7: aload_2
       8: checkcast     #21                 // class io/netty/handler/codec/http/HttpServerUpgradeHandler$UpgradeEvent
      11: invokevirtual #22                 // Method io/netty/handler/codec/http/HttpServerUpgradeHandler$UpgradeEvent.upgradeRequest:()Lio/netty/handler/codec/http/FullHttpRequest;
      14: astore_3
      15: new           #23                 // class io/netty/handler/codec/http/DefaultHttpRequest
      18: dup
      19: new           #24                 // class io/netty/handler/codec/http/HttpVersion
      22: dup
      23: ldc           #26                 // String HTTP/2.0
      25: iconst_1
      26: invokespecial #27                 // Method io/netty/handler/codec/http/HttpVersion."<init>":(Ljava/lang/String;Z)V
      29: aload_3
      30: invokeinterface #28,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.method:()Lio/netty/handler/codec/http/HttpMethod;
      35: aload_3
      36: invokeinterface #29,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.uri:()Ljava/lang/String;
      41: aload_3
      42: invokeinterface #30,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      47: invokespecial #31                 // Method io/netty/handler/codec/http/DefaultHttpRequest."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpMethod;Ljava/lang/String;Lio/netty/handler/codec/http/HttpHeaders;)V
      50: astore        4
      52: aload         4
      54: aload_1
      55: aload_0
      56: getfield      #6                  // Field interfaceId:Ljava/lang/String;
      59: invokestatic  #32                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.setupCarbonRequest:(Lio/netty/handler/codec/http/HttpRequest;Lio/netty/channel/ChannelHandlerContext;Ljava/lang/String;)Lorg/wso2/transport/http/netty/message/HttpCarbonRequest;
      62: astore        5
      64: aload         5
      66: new           #33                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      69: dup
      70: aload_3
      71: invokeinterface #34,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.content:()Lio/netty/buffer/ByteBuf;
      76: invokespecial #35                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
      79: invokevirtual #36                 // Method org/wso2/transport/http/netty/message/HttpCarbonRequest.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      82: aload_0
      83: aload         5
      85: iconst_1
      86: invokestatic  #37                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.notifyRequestListener:(Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;I)V
      89: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #38                 // class org/wso2/transport/http/netty/message/Http2HeadersFrame
       4: ifeq          50
       7: aload_2
       8: checkcast     #38                 // class org/wso2/transport/http/netty/message/Http2HeadersFrame
      11: astore_3
      12: new           #39                 // class org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext
      15: dup
      16: invokespecial #40                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext."<init>":()V
      19: astore        4
      21: aload         4
      23: new           #41                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/ReceivingHeaders
      26: dup
      27: aload_0
      28: aload         4
      30: invokespecial #42                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/http2/ReceivingHeaders."<init>":(Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      33: invokevirtual #43                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;)V
      36: aload         4
      38: invokevirtual #44                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getListenerState:()Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;
      41: aload_3
      42: invokeinterface #45,  2           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState.readInboundRequestHeaders:(Lorg/wso2/transport/http/netty/message/Http2HeadersFrame;)V
      47: goto          129
      50: aload_2
      51: instanceof    #46                 // class org/wso2/transport/http/netty/message/Http2DataFrame
      54: ifeq          121
      57: aload_2
      58: checkcast     #46                 // class org/wso2/transport/http/netty/message/Http2DataFrame
      61: astore_3
      62: aload_3
      63: invokevirtual #47                 // Method org/wso2/transport/http/netty/message/Http2DataFrame.getStreamId:()I
      66: istore        4
      68: aload_0
      69: getfield      #3                  // Field streamIdRequestMap:Ljava/util/Map;
      72: iload         4
      74: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      77: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      82: checkcast     #50                 // class org/wso2/transport/http/netty/message/HttpCarbonMessage
      85: astore        5
      87: aload         5
      89: ifnonnull     103
      92: aload_3
      93: invokevirtual #51                 // Method org/wso2/transport/http/netty/message/Http2DataFrame.getData:()Lio/netty/buffer/ByteBuf;
      96: invokevirtual #52                 // Method io/netty/buffer/ByteBuf.release:()Z
      99: pop
     100: goto          118
     103: aload         5
     105: invokevirtual #53                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttp2MessageStateContext:()Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
     108: invokevirtual #44                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getListenerState:()Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;
     111: aload_0
     112: aload_3
     113: invokeinterface #54,  3           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState.readInboundRequestBody:(Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;Lorg/wso2/transport/http/netty/message/Http2DataFrame;)V
     118: goto          129
     121: aload_1
     122: aload_2
     123: invokeinterface #55,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     128: pop
     129: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #56                 // Method destroy:()V
       4: aload_1
       5: invokeinterface #57,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
      10: pop
      11: return

  public void channelUnregistered(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #56                 // Method destroy:()V
       4: aload_1
       5: invokeinterface #58,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelUnregistered:()Lio/netty/channel/ChannelHandlerContext;
      10: pop
      11: return

  private void destroy();
    Code:
       0: aload_0
       1: getfield      #3                  // Field streamIdRequestMap:Ljava/util/Map;
       4: invokeinterface #59,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public java.util.Map<java.lang.Integer, org.wso2.transport.http.netty.message.HttpCarbonMessage> getStreamIdRequestMap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field streamIdRequestMap:Ljava/util/Map;
       4: areturn

  public io.netty.channel.ChannelHandlerContext getChannelHandlerContext();
    Code:
       0: aload_0
       1: getfield      #11                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public org.wso2.transport.http.netty.contract.ServerConnectorFuture getServerConnectorFuture();
    Code:
       0: aload_0
       1: getfield      #7                  // Field serverConnectorFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
       4: areturn

  public org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer getServerChannelInitializer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field serverChannelInitializer:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
       4: areturn

  public io.netty.handler.codec.http2.Http2ConnectionEncoder getEncoder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
       4: areturn

  public io.netty.handler.codec.http2.Http2Connection getConnection();
    Code:
       0: aload_0
       1: getfield      #8                  // Field conn:Lio/netty/handler/codec/http2/Http2Connection;
       4: areturn

  public java.lang.String getInterfaceId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field interfaceId:Ljava/lang/String;
       4: areturn

  public java.lang.String getServerName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field serverName:Ljava/lang/String;
       4: areturn

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #17                 // Field remoteAddress:Ljava/lang/String;
       4: areturn
}
