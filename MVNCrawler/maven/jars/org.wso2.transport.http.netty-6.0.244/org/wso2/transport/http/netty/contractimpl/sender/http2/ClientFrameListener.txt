Compiled from "ClientFrameListener.java"
public class org.wso2.transport.http.netty.contractimpl.sender.http2.ClientFrameListener extends io.netty.handler.codec.http2.Http2EventAdapter {
  private static final org.slf4j.Logger LOG;

  private org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel http2ClientChannel;

  public org.wso2.transport.http.netty.contractimpl.sender.http2.ClientFrameListener();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/handler/codec/http2/Http2EventAdapter."<init>":()V
       4: return

  public int onDataRead(io.netty.channel.ChannelHandlerContext, int, io.netty.buffer.ByteBuf, int, boolean);
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #3,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          47
      11: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #4                  // String Reading data on channel: {} with stream id: {}, isEndOfStream: {}
      16: iconst_3
      17: anewarray     #5                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      26: aastore
      27: dup
      28: iconst_1
      29: iload_2
      30: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: aastore
      34: dup
      35: iconst_2
      36: iload         5
      38: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: aastore
      42: invokeinterface #9,  3            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      47: aload_0
      48: getfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      51: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getDataEventListeners:()Ljava/util/List;
      54: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      59: astore        6
      61: aload         6
      63: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          109
      71: aload         6
      73: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #14                 // class org/wso2/transport/http/netty/contractimpl/sender/http2/Http2DataEventListener
      81: astore        7
      83: aload         7
      85: aload_1
      86: iload_2
      87: aload_3
      88: iload         5
      90: invokeinterface #15,  5           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/http2/Http2DataEventListener.onDataRead:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/buffer/ByteBuf;Z)Z
      95: ifne          106
      98: aload_3
      99: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     102: iload         4
     104: iadd
     105: ireturn
     106: goto          61
     109: new           #17                 // class org/wso2/transport/http/netty/message/Http2DataFrame
     112: dup
     113: iload_2
     114: aload_3
     115: iload         5
     117: invokespecial #18                 // Method org/wso2/transport/http/netty/message/Http2DataFrame."<init>":(ILio/netty/buffer/ByteBuf;Z)V
     120: astore        6
     122: aload_1
     123: aload         6
     125: invokeinterface #19,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     130: pop
     131: aload_3
     132: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     135: iload         4
     137: iadd
     138: ireturn

  public void onHeadersRead(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, short, boolean, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         7
       6: iload         8
       8: invokevirtual #20                 // Method onHeadersRead:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Headers;IZ)V
      11: return

  public void onHeadersRead(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, boolean);
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #3,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          47
      11: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #21                 // String Reading Http2 headers on channel: {} with stream id: {}, isEndOfStream: {}
      16: iconst_3
      17: anewarray     #5                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      26: aastore
      27: dup
      28: iconst_1
      29: iload_2
      30: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: aastore
      34: dup
      35: iconst_2
      36: iload         5
      38: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: aastore
      42: invokeinterface #9,  3            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      47: aload_0
      48: getfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      51: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getDataEventListeners:()Ljava/util/List;
      54: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      59: astore        6
      61: aload         6
      63: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          102
      71: aload         6
      73: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #14                 // class org/wso2/transport/http/netty/contractimpl/sender/http2/Http2DataEventListener
      81: astore        7
      83: aload         7
      85: aload_1
      86: iload_2
      87: aload_3
      88: iload         5
      90: invokeinterface #22,  5           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/http2/Http2DataEventListener.onHeadersRead:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Headers;Z)Z
      95: ifne          99
      98: return
      99: goto          61
     102: new           #23                 // class org/wso2/transport/http/netty/message/Http2HeadersFrame
     105: dup
     106: iload_2
     107: aload_3
     108: iload         5
     110: invokespecial #24                 // Method org/wso2/transport/http/netty/message/Http2HeadersFrame."<init>":(ILio/netty/handler/codec/http2/Http2Headers;Z)V
     113: astore        6
     115: aload_1
     116: aload         6
     118: invokeinterface #19,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     123: pop
     124: return

  public void onSettingsRead(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Settings) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #25                 // String Http2FrameListenAdapter.onSettingRead()
       5: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      10: aload_1
      11: aload_2
      12: invokeinterface #19,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      17: pop
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokespecial #27                 // Method io/netty/handler/codec/http2/Http2EventAdapter.onSettingsRead:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Settings;)V
      24: return

  public void onRstStreamRead(io.netty.channel.ChannelHandlerContext, int, long);
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #28                 // String RST received on channel: {} for streamId: {} errorCode: {}
       5: iconst_3
       6: anewarray     #5                  // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_0
      12: getfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      15: aastore
      16: dup
      17: iconst_1
      18: iload_2
      19: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: dup
      24: iconst_2
      25: lload_3
      26: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: aastore
      30: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      35: new           #31                 // class org/wso2/transport/http/netty/message/Http2Reset
      38: dup
      39: iload_2
      40: lload_3
      41: invokestatic  #32                 // Method io/netty/handler/codec/http2/Http2Error.valueOf:(J)Lio/netty/handler/codec/http2/Http2Error;
      44: invokespecial #33                 // Method org/wso2/transport/http/netty/message/Http2Reset."<init>":(ILio/netty/handler/codec/http2/Http2Error;)V
      47: astore        5
      49: aload_1
      50: aload         5
      52: invokeinterface #19,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      57: pop
      58: return

  public void onPushPromiseRead(io.netty.channel.ChannelHandlerContext, int, int, io.netty.handler.codec.http2.Http2Headers, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #3,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          46
      11: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #34                 // String Received a push promise on channel: {} over stream id: {}, promisedStreamId: {}
      16: iconst_3
      17: anewarray     #5                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      26: aastore
      27: dup
      28: iconst_1
      29: iload_2
      30: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: aastore
      34: dup
      35: iconst_2
      36: iload_3
      37: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: aastore
      41: invokeinterface #9,  3            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      46: aload_0
      47: getfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      50: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getDataEventListeners:()Ljava/util/List;
      53: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      58: astore        6
      60: aload         6
      62: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      67: ifeq          101
      70: aload         6
      72: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      77: checkcast     #14                 // class org/wso2/transport/http/netty/contractimpl/sender/http2/Http2DataEventListener
      80: astore        7
      82: aload         7
      84: aload_1
      85: iload_2
      86: aload         4
      88: iconst_0
      89: invokeinterface #35,  5           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/http2/Http2DataEventListener.onPushPromiseRead:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Headers;Z)Z
      94: ifne          98
      97: return
      98: goto          60
     101: new           #36                 // class org/wso2/transport/http/netty/message/Http2PushPromise
     104: dup
     105: aload         4
     107: iload_2
     108: invokestatic  #37                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.createHttpRequestFromHttp2Headers:(Lio/netty/handler/codec/http2/Http2Headers;I)Lio/netty/handler/codec/http/HttpRequest;
     111: invokespecial #38                 // Method org/wso2/transport/http/netty/message/Http2PushPromise."<init>":(Lio/netty/handler/codec/http/HttpRequest;)V
     114: astore        6
     116: aload         6
     118: iload_3
     119: invokevirtual #39                 // Method org/wso2/transport/http/netty/message/Http2PushPromise.setPromisedStreamId:(I)V
     122: aload         6
     124: iload_2
     125: invokevirtual #40                 // Method org/wso2/transport/http/netty/message/Http2PushPromise.setStreamId:(I)V
     128: aload_0
     129: getfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
     132: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getDataEventListeners:()Ljava/util/List;
     135: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     140: astore        7
     142: aload         7
     144: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     149: ifeq          180
     152: aload         7
     154: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     159: checkcast     #14                 // class org/wso2/transport/http/netty/contractimpl/sender/http2/Http2DataEventListener
     162: astore        8
     164: aload         8
     166: aload_1
     167: iload_3
     168: invokeinterface #41,  3           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/http2/Http2DataEventListener.onStreamInit:(Lio/netty/channel/ChannelHandlerContext;I)Z
     173: ifne          177
     176: return
     177: goto          142
     180: aload_1
     181: aload         6
     183: invokeinterface #19,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     188: pop
     189: return

  public void onGoAwaySent(int, long, io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: getfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
       4: invokevirtual #42                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.destroy:()V
       7: return

  public void onGoAwayReceived(int, long, io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: getfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
       4: invokevirtual #42                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.destroy:()V
       7: return

  public void setHttp2ClientChannel(org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field http2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
       5: return

  static {};
    Code:
       0: ldc           #43                 // class org/wso2/transport/http/netty/contractimpl/sender/http2/ClientFrameListener
       2: invokestatic  #44                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
