Compiled from "DefaultHttpClientConnector.java"
class org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector$1 implements org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityListener {
  final org.wso2.transport.http.netty.contractimpl.common.HttpRoute val$route;

  final org.wso2.transport.http.netty.contractimpl.listener.SourceHandler val$srcHandler;

  final org.wso2.transport.http.netty.message.HttpCarbonMessage val$httpOutboundRequest;

  final org.wso2.transport.http.netty.contractimpl.sender.channel.TargetChannel val$targetChannel;

  final org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel val$freshHttp2ClientChannel;

  final org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder val$outboundMsgHolder;

  final org.wso2.transport.http.netty.contract.HttpResponseFuture val$httpResponseFuture;

  final org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector this$0;

  org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector$1(org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector, org.wso2.transport.http.netty.contractimpl.common.HttpRoute, org.wso2.transport.http.netty.contractimpl.listener.SourceHandler, org.wso2.transport.http.netty.message.HttpCarbonMessage, org.wso2.transport.http.netty.contractimpl.sender.channel.TargetChannel, org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, org.wso2.transport.http.netty.contract.HttpResponseFuture);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$route:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$srcHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$freshHttp2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      33: aload_0
      34: aload         7
      36: putfield      #7                  // Field val$outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      39: aload_0
      40: aload         8
      42: putfield      #8                  // Field val$httpResponseFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      45: aload_0
      46: invokespecial #9                  // Method java/lang/Object."<init>":()V
      49: return

  public void onSuccess(java.lang.String, io.netty.channel.ChannelFuture);
    Code:
       0: invokestatic  #10                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector.access$000:()Lorg/slf4j/Logger;
       3: invokeinterface #11,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          65
      11: invokestatic  #10                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector.access$000:()Lorg/slf4j/Logger;
      14: ldc           #12                 // String Created the connection to address: {}
      16: new           #13                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_0
      24: getfield      #2                  // Field val$route:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
      27: invokevirtual #15                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.toString:()Ljava/lang/String;
      30: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #17                 // String
      35: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #18                 // String Original Channel ID is :
      40: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_2
      44: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      49: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      54: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      65: aload_0
      66: getfield      #3                  // Field val$srcHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      69: ifnull        104
      72: aload_2
      73: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      78: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/Channel.deregister:()Lio/netty/channel/ChannelFuture;
      83: aload_0
      84: aload_0
      85: getfield      #3                  // Field val$srcHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      88: aload_2
      89: aload_1
      90: invokedynamic #25,  0             // InvokeDynamic #0:operationComplete:(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector$1;Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;Lio/netty/channel/ChannelFuture;Ljava/lang/String;)Lio/netty/util/concurrent/GenericFutureListener;
      95: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     100: pop
     101: goto          110
     104: aload_0
     105: aload_1
     106: aload_2
     107: invokespecial #27                 // Method startExecutingOutboundRequest:(Ljava/lang/String;Lio/netty/channel/ChannelFuture;)V
     110: return

  private void startExecutingOutboundRequest(java.lang.String, io.netty.channel.ChannelFuture);
    Code:
       0: aload_1
       1: ldc           #29                 // String h2c
       3: invokevirtual #30                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifne          18
       9: aload_1
      10: ldc           #31                 // String h2
      12: invokevirtual #30                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      15: ifeq          25
      18: aload_0
      19: invokespecial #32                 // Method prepareTargetChannelForHttp2:()V
      22: goto          76
      25: aload_0
      26: aload_2
      27: invokespecial #33                 // Method prepareTargetChannelForHttp:(Lio/netty/channel/ChannelFuture;)V
      30: aload_1
      31: ldc           #34                 // String http
      33: invokevirtual #30                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      36: ifeq          65
      39: aload_0
      40: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;
      43: invokestatic  #35                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector.access$100:(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;)Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
      46: invokevirtual #36                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getProxyServerConfiguration:()Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      49: ifnull        65
      52: aload_0
      53: getfield      #4                  // Field val$httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      56: ldc           #37                 // String IS_PROXY_ENABLED
      58: iconst_1
      59: invokestatic  #38                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      62: invokevirtual #39                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      65: aload_0
      66: getfield      #5                  // Field val$targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
      69: aload_0
      70: getfield      #4                  // Field val$httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      73: invokevirtual #40                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.writeContent:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      76: return

  private void prepareTargetChannelForHttp2();
    Code:
       0: aload_0
       1: getfield      #6                  // Field val$freshHttp2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;
       8: invokestatic  #41                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector.access$200:(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;)I
      11: invokevirtual #42                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.setSocketIdleTimeout:(I)V
      14: aload_0
      15: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;
      18: invokestatic  #43                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector.access$300:(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;)Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;
      21: invokevirtual #44                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager.getHttp2ConnectionManager:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager;
      24: aload_0
      25: getfield      #2                  // Field val$route:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
      28: aload_0
      29: getfield      #6                  // Field val$freshHttp2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      32: invokevirtual #45                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager.addHttp2ClientChannel:(Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;)V
      35: aload_0
      36: getfield      #6                  // Field val$freshHttp2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      39: ldc           #46                 // String idleStateHandler
      41: new           #47                 // class org/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler
      44: dup
      45: aload_0
      46: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;
      49: invokestatic  #41                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector.access$200:(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;)I
      52: i2l
      53: aload_0
      54: getfield      #6                  // Field val$freshHttp2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      57: invokespecial #48                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler."<init>":(JLorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;)V
      60: invokevirtual #49                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.addDataEventListener:(Ljava/lang/String;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2DataEventListener;)V
      63: aload_0
      64: getfield      #6                  // Field val$freshHttp2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      67: invokevirtual #50                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getChannel:()Lio/netty/channel/Channel;
      70: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      75: aload_0
      76: getfield      #6                  // Field val$freshHttp2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      79: aload_0
      80: getfield      #7                  // Field val$outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      83: invokedynamic #52,  0             // InvokeDynamic #1:run:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)Ljava/lang/Runnable;
      88: invokeinterface #53,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      93: aload_0
      94: getfield      #8                  // Field val$httpResponseFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      97: new           #54                 // class org/wso2/transport/http/netty/message/ResponseHandle
     100: dup
     101: aload_0
     102: getfield      #7                  // Field val$outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
     105: invokespecial #55                 // Method org/wso2/transport/http/netty/message/ResponseHandle."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)V
     108: invokeinterface #56,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyResponseHandle:(Lorg/wso2/transport/http/netty/message/ResponseHandle;)V
     113: return

  private void prepareTargetChannelForHttp(io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: getfield      #6                  // Field val$freshHttp2ClientChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
       4: iconst_1
       5: aload_0
       6: getfield      #7                  // Field val$outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
       9: invokevirtual #58                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.putInFlightMessage:(ILorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)V
      12: aload_0
      13: getfield      #8                  // Field val$httpResponseFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      16: new           #54                 // class org/wso2/transport/http/netty/message/ResponseHandle
      19: dup
      20: aload_0
      21: getfield      #7                  // Field val$outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      24: invokespecial #55                 // Method org/wso2/transport/http/netty/message/ResponseHandle."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)V
      27: invokeinterface #56,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyResponseHandle:(Lorg/wso2/transport/http/netty/message/ResponseHandle;)V
      32: aload_0
      33: getfield      #5                  // Field val$targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
      36: aload_1
      37: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      42: invokevirtual #59                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.setChannel:(Lio/netty/channel/Channel;)Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
      45: pop
      46: aload_0
      47: getfield      #5                  // Field val$targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
      50: aload_0
      51: getfield      #4                  // Field val$httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      54: aload_0
      55: getfield      #8                  // Field val$httpResponseFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      58: invokevirtual #60                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.configTargetHandler:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;)V
      61: aload_0
      62: getfield      #5                  // Field val$targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
      65: aload_0
      66: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;
      69: invokestatic  #41                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector.access$200:(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;)I
      72: invokevirtual #61                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.setEndPointTimeout:(I)V
      75: aload_0
      76: getfield      #5                  // Field val$targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
      79: invokevirtual #62                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.setCorrelationIdForLogging:()V
      82: aload_0
      83: getfield      #5                  // Field val$targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
      86: aload_0
      87: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;
      90: invokestatic  #63                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector.access$400:(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;)Ljava/lang/String;
      93: invokevirtual #64                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.setHttpVersion:(Ljava/lang/String;)V
      96: aload_0
      97: getfield      #5                  // Field val$targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
     100: aload_0
     101: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;
     104: invokestatic  #65                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector.access$500:(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;)Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
     107: invokevirtual #66                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.setChunkConfig:(Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;)V
     110: aload_0
     111: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;
     114: aload_0
     115: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;
     118: invokestatic  #67                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector.access$600:(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;)Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
     121: aload_0
     122: getfield      #4                  // Field val$httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
     125: invokestatic  #68                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector.access$700:(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
     128: aload_0
     129: getfield      #5                  // Field val$targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
     132: aload_0
     133: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;
     136: invokestatic  #69                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector.access$800:(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;)Lorg/wso2/transport/http/netty/contract/config/ForwardedExtensionConfig;
     139: aload_0
     140: getfield      #4                  // Field val$httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
     143: invokevirtual #70                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.setForwardedExtension:(Lorg/wso2/transport/http/netty/contract/config/ForwardedExtensionConfig;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
     146: return

  public void onFailure(org.wso2.transport.http.netty.contract.ClientConnectorException);
    Code:
       0: aload_0
       1: getfield      #8                  // Field val$httpResponseFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
       4: aload_1
       5: invokeinterface #71,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      10: return

  private static void lambda$prepareTargetChannelForHttp2$12(org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getChannel:()Lio/netty/channel/Channel;
       4: aload_1
       5: invokeinterface #72,  2           // InterfaceMethod io/netty/channel/Channel.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      10: pop
      11: return

  private void lambda$onSuccess$11(org.wso2.transport.http.netty.contractimpl.listener.SourceHandler, io.netty.channel.ChannelFuture, java.lang.String, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #73                 // Method org/wso2/transport/http/netty/contractimpl/listener/SourceHandler.getEventLoop:()Lio/netty/channel/EventLoop;
       4: aload_2
       5: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      10: invokeinterface #74,  2           // InterfaceMethod io/netty/channel/EventLoop.register:(Lio/netty/channel/Channel;)Lio/netty/channel/ChannelFuture;
      15: aload_0
      16: aload_3
      17: aload_2
      18: invokedynamic #75,  0             // InvokeDynamic #2:operationComplete:(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector$1;Ljava/lang/String;Lio/netty/channel/ChannelFuture;)Lio/netty/util/concurrent/GenericFutureListener;
      23: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      28: pop
      29: return

  private void lambda$null$10(java.lang.String, io.netty.channel.ChannelFuture, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #27                 // Method startExecutingOutboundRequest:(Ljava/lang/String;Lio/netty/channel/ChannelFuture;)V
       6: return
}
