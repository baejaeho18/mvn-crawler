Compiled from "DefaultHttpClientConnector.java"
public class org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector implements org.wso2.transport.http.netty.contract.HttpClientConnector {
  private static final org.slf4j.Logger LOG;

  private org.wso2.transport.http.netty.contractimpl.sender.channel.pool.ConnectionManager connectionManager;

  private org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ConnectionManager http2ConnectionManager;

  private org.wso2.transport.http.netty.contract.config.SenderConfiguration senderConfiguration;

  private org.wso2.transport.http.netty.contractimpl.common.ssl.SSLConfig sslConfig;

  private int socketIdleTimeout;

  private java.lang.String httpVersion;

  private org.wso2.transport.http.netty.contract.config.ChunkConfig chunkConfig;

  private org.wso2.transport.http.netty.contract.config.KeepAliveConfig keepAliveConfig;

  private boolean isHttp2;

  private org.wso2.transport.http.netty.contract.config.ForwardedExtensionConfig forwardedExtensionConfig;

  public org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector(org.wso2.transport.http.netty.contractimpl.sender.channel.pool.ConnectionManager, org.wso2.transport.http.netty.contract.config.SenderConfiguration);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field connectionManager:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;
       9: aload_0
      10: aload_1
      11: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager.getHttp2ConnectionManager:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager;
      14: putfield      #13                 // Field http2ConnectionManager:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager;
      17: aload_0
      18: aload_2
      19: putfield      #9                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
      22: aload_0
      23: aload_2
      24: invokespecial #14                 // Method initTargetChannelProperties:(Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;)V
      27: aload_2
      28: invokevirtual #15                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getHttpVersion:()Ljava/lang/String;
      31: invokestatic  #16                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
      34: invokevirtual #17                 // Method java/lang/Float.floatValue:()F
      37: fconst_2
      38: fcmpl
      39: ifne          47
      42: aload_0
      43: iconst_1
      44: putfield      #18                 // Field isHttp2:Z
      47: return

  public org.wso2.transport.http.netty.contract.HttpResponseFuture connect();
    Code:
       0: aconst_null
       1: areturn

  public org.wso2.transport.http.netty.contract.HttpResponseFuture getResponse(org.wso2.transport.http.netty.message.ResponseHandle);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method org/wso2/transport/http/netty/message/ResponseHandle.getOutboundMsgHolder:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
       4: invokevirtual #20                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponseFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
       7: areturn

  public org.wso2.transport.http.netty.contract.HttpResponseFuture getNextPushPromise(org.wso2.transport.http.netty.message.ResponseHandle);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method org/wso2/transport/http/netty/message/ResponseHandle.getOutboundMsgHolder:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
       4: invokevirtual #20                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponseFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
       7: areturn

  public org.wso2.transport.http.netty.contract.HttpResponseFuture hasPushPromise(org.wso2.transport.http.netty.message.ResponseHandle);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method org/wso2/transport/http/netty/message/ResponseHandle.getOutboundMsgHolder:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
       4: invokevirtual #20                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponseFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
       7: areturn

  public void rejectPushResponse(org.wso2.transport.http.netty.message.Http2PushPromise);
    Code:
       0: new           #21                 // class org/wso2/transport/http/netty/message/Http2Reset
       3: dup
       4: aload_1
       5: invokevirtual #22                 // Method org/wso2/transport/http/netty/message/Http2PushPromise.getPromisedStreamId:()I
       8: invokespecial #23                 // Method org/wso2/transport/http/netty/message/Http2Reset."<init>":(I)V
      11: astore_2
      12: aload_1
      13: invokevirtual #24                 // Method org/wso2/transport/http/netty/message/Http2PushPromise.getOutboundMsgHolder:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      16: astore_3
      17: aload_1
      18: invokevirtual #25                 // Method org/wso2/transport/http/netty/message/Http2PushPromise.reject:()V
      21: aload_3
      22: invokevirtual #26                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getHttp2ClientChannel:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      25: invokevirtual #27                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getChannel:()Lio/netty/channel/Channel;
      28: aload_2
      29: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/Channel.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      34: pop
      35: return

  public org.wso2.transport.http.netty.contract.HttpResponseFuture getPushResponse(org.wso2.transport.http.netty.message.Http2PushPromise);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method org/wso2/transport/http/netty/message/Http2PushPromise.getOutboundMsgHolder:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
       4: astore_2
       5: aload_1
       6: invokevirtual #29                 // Method org/wso2/transport/http/netty/message/Http2PushPromise.isRejected:()Z
       9: ifeq          40
      12: aload_2
      13: invokevirtual #20                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponseFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      16: aload_1
      17: invokevirtual #22                 // Method org/wso2/transport/http/netty/message/Http2PushPromise.getPromisedStreamId:()I
      20: new           #30                 // class org/wso2/transport/http/netty/contract/ClientConnectorException
      23: dup
      24: ldc           #31                 // String Cannot fetch a response for an rejected promise
      26: getstatic     #32                 // Field io/netty/handler/codec/http/HttpResponseStatus.BAD_REQUEST:Lio/netty/handler/codec/http/HttpResponseStatus;
      29: invokevirtual #33                 // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
      32: invokespecial #34                 // Method org/wso2/transport/http/netty/contract/ClientConnectorException."<init>":(Ljava/lang/String;I)V
      35: invokeinterface #35,  3           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyPushResponse:(ILjava/lang/Throwable;)V
      40: aload_2
      41: invokevirtual #20                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponseFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      44: areturn

  public boolean close();
    Code:
       0: iconst_0
       1: ireturn

  public org.wso2.transport.http.netty.contract.HttpResponseFuture send(org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: new           #36                 // class org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder
       3: dup
       4: aload_1
       5: invokespecial #37                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder."<init>":(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: aload_1
      12: invokevirtual #38                 // Method send:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      15: areturn

  public org.wso2.transport.http.netty.contract.HttpResponseFuture send(org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: aload_2
       1: ldc           #39                 // String SRC_HANDLER
       3: invokevirtual #40                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #41                 // class org/wso2/transport/http/netty/contractimpl/listener/SourceHandler
       9: astore        4
      11: aload         4
      13: ifnonnull     37
      16: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
      19: invokeinterface #42,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      24: ifeq          37
      27: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
      30: ldc           #43                 // String SRC_HANDLER property not found in the message. Message is not originated from the HTTP Server connector
      32: invokeinterface #44,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      37: aload_0
      38: aload_2
      39: invokespecial #45                 // Method getTargetRoute:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
      42: astore        5
      44: aload_0
      45: getfield      #18                 // Field isHttp2:Z
      48: ifeq          117
      51: aload_0
      52: getfield      #13                 // Field http2ConnectionManager:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager;
      55: aload         5
      57: invokevirtual #46                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ConnectionManager.borrowChannel:(Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;)Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      60: astore        6
      62: aload         6
      64: ifnull        117
      67: aload_1
      68: aload         6
      70: invokevirtual #47                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.setHttp2ClientChannel:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;)V
      73: aload         6
      75: invokevirtual #27                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getChannel:()Lio/netty/channel/Channel;
      78: invokeinterface #48,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      83: aload         6
      85: aload_1
      86: invokedynamic #49,  0             // InvokeDynamic #0:run:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)Ljava/lang/Runnable;
      91: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      96: aload_1
      97: invokevirtual #20                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponseFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
     100: astore_3
     101: aload_3
     102: new           #51                 // class org/wso2/transport/http/netty/message/ResponseHandle
     105: dup
     106: aload_1
     107: invokespecial #52                 // Method org/wso2/transport/http/netty/message/ResponseHandle."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)V
     110: invokeinterface #53,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyResponseHandle:(Lorg/wso2/transport/http/netty/message/ResponseHandle;)V
     115: aload_3
     116: areturn
     117: aload_0
     118: getfield      #7                  // Field connectionManager:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;
     121: aload         5
     123: aload         4
     125: aload_0
     126: getfield      #9                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
     129: invokevirtual #54                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager.borrowTargetChannel:(Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;)Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
     132: astore        6
     134: aload         6
     136: invokevirtual #55                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getHttp2ClientChannel:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
     139: astore        7
     141: aload_1
     142: aload         7
     144: invokevirtual #47                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.setHttp2ClientChannel:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;)V
     147: aload_1
     148: invokevirtual #20                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponseFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
     151: astore_3
     152: aload         6
     154: invokevirtual #56                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getConnenctionReadyFuture:()Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture;
     157: new           #57                 // class org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector$1
     160: dup
     161: aload_0
     162: aload         5
     164: aload         4
     166: aload_2
     167: aload         6
     169: aload         7
     171: aload_1
     172: aload_3
     173: invokespecial #58                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector$1."<init>":(Lorg/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector;Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;)V
     176: invokevirtual #59                 // Method org/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture.setListener:(Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityListener;)V
     179: goto          224
     182: astore        5
     184: ldc           #61                 // String Timeout waiting for idle object
     186: aload         5
     188: invokevirtual #62                 // Method java/util/NoSuchElementException.getMessage:()Ljava/lang/String;
     191: invokevirtual #63                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     194: ifeq          208
     197: new           #60                 // class java/util/NoSuchElementException
     200: dup
     201: ldc           #64                 // String Could not obtain a connection within maximum wait time
     203: invokespecial #65                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
     206: astore        5
     208: aload_0
     209: aload         5
     211: invokespecial #66                 // Method notifyListenerAndGetErrorResponseFuture:(Ljava/lang/Exception;)Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
     214: areturn
     215: astore        5
     217: aload_0
     218: aload         5
     220: invokespecial #66                 // Method notifyListenerAndGetErrorResponseFuture:(Ljava/lang/Exception;)Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
     223: areturn
     224: aload_3
     225: areturn
    Exception table:
       from    to  target type
          37   116   182   Class java/util/NoSuchElementException
         117   179   182   Class java/util/NoSuchElementException
          37   116   215   Class java/lang/Exception
         117   179   215   Class java/lang/Exception

  private org.wso2.transport.http.netty.contract.HttpResponseFuture notifyListenerAndGetErrorResponseFuture(java.lang.Exception);
    Code:
       0: new           #68                 // class org/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture
       3: dup
       4: invokespecial #69                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpResponseFuture."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokeinterface #70,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      15: aload_2
      16: areturn

  private org.wso2.transport.http.netty.contractimpl.common.HttpRoute getTargetRoute(org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #71                 // Method fetchHost:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: aload_1
       8: invokespecial #72                 // Method fetchPort:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)I
      11: istore_3
      12: new           #73                 // class org/wso2/transport/http/netty/contractimpl/common/HttpRoute
      15: dup
      16: aload_2
      17: iload_3
      18: invokespecial #74                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute."<init>":(Ljava/lang/String;I)V
      21: areturn

  private int fetchPort(org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: aload_1
       1: ldc           #75                 // String port
       3: invokevirtual #40                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_3
       7: aload_3
       8: instanceof    #76                 // class java/lang/Integer
      11: ifeq          25
      14: aload_3
      15: checkcast     #76                 // class java/lang/Integer
      18: invokevirtual #77                 // Method java/lang/Integer.intValue:()I
      21: istore_2
      22: goto          65
      25: aload_0
      26: getfield      #78                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      29: ifnull        38
      32: sipush        443
      35: goto          40
      38: bipush        80
      40: istore_2
      41: aload_1
      42: ldc           #75                 // String port
      44: iload_2
      45: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: invokevirtual #80                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      51: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
      54: ldc           #81                 // String Cannot find property PORT of type integer, hence using {}
      56: iload_2
      57: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: invokeinterface #82,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      65: iload_2
      66: ireturn

  private java.lang.String fetchHost(org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: aload_1
       1: ldc           #83                 // String host
       3: invokevirtual #40                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_3
       7: aload_3
       8: instanceof    #84                 // class java/lang/String
      11: ifeq          22
      14: aload_3
      15: checkcast     #84                 // class java/lang/String
      18: astore_2
      19: goto          43
      22: ldc           #85                 // String localhost
      24: astore_2
      25: aload_1
      26: ldc           #83                 // String host
      28: ldc           #85                 // String localhost
      30: invokevirtual #80                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      33: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
      36: ldc           #86                 // String Cannot find property HOST of type string, hence using localhost as the host
      38: invokeinterface #44,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      43: aload_2
      44: areturn

  private void initTargetChannelProperties(org.wso2.transport.http.netty.contract.config.SenderConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getHttpVersion:()Ljava/lang/String;
       5: putfield      #6                  // Field httpVersion:Ljava/lang/String;
       8: aload_0
       9: aload_1
      10: invokevirtual #87                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getChunkingConfig:()Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
      13: putfield      #5                  // Field chunkConfig:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
      16: aload_0
      17: aload_1
      18: ldc           #88                 // int 300000
      20: invokevirtual #89                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getSocketIdleTimeout:(I)I
      23: putfield      #8                  // Field socketIdleTimeout:I
      26: aload_0
      27: aload_1
      28: invokevirtual #90                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getClientSSLConfig:()Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      31: putfield      #78                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      34: aload_0
      35: aload_1
      36: invokevirtual #91                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getKeepAliveConfig:()Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      39: putfield      #4                  // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      42: aload_0
      43: aload_1
      44: invokevirtual #92                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getForwardedExtensionConfig:()Lorg/wso2/transport/http/netty/contract/config/ForwardedExtensionConfig;
      47: putfield      #2                  // Field forwardedExtensionConfig:Lorg/wso2/transport/http/netty/contract/config/ForwardedExtensionConfig;
      50: return

  private void handleOutboundConnectionHeader(org.wso2.transport.http.netty.contract.config.KeepAliveConfig, org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: getstatic     #93                 // Field org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector$2.$SwitchMap$org$wso2$transport$http$netty$contract$config$KeepAliveConfig:[I
       3: aload_1
       4: invokevirtual #94                 // Method org/wso2/transport/http/netty/contract/config/KeepAliveConfig.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 82
                     3: 97
               default: 112
          }
      36: aload_0
      37: getfield      #6                  // Field httpVersion:Ljava/lang/String;
      40: invokestatic  #16                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
      43: invokevirtual #17                 // Method java/lang/Float.floatValue:()F
      46: ldc           #95                 // float 1.1f
      48: fcmpl
      49: iflt          67
      52: aload_2
      53: getstatic     #96                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONNECTION:Lio/netty/util/AsciiString;
      56: invokevirtual #97                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
      59: ldc           #98                 // String keep-alive
      61: invokevirtual #99                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      64: goto          112
      67: aload_2
      68: getstatic     #96                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONNECTION:Lio/netty/util/AsciiString;
      71: invokevirtual #97                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
      74: ldc           #100                // String close
      76: invokevirtual #99                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      79: goto          112
      82: aload_2
      83: getstatic     #96                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONNECTION:Lio/netty/util/AsciiString;
      86: invokevirtual #97                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
      89: ldc           #98                 // String keep-alive
      91: invokevirtual #99                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      94: goto          112
      97: aload_2
      98: getstatic     #96                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONNECTION:Lio/netty/util/AsciiString;
     101: invokevirtual #97                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
     104: ldc           #100                // String close
     106: invokevirtual #99                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
     109: goto          112
     112: aload_0
     113: getfield      #9                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
     116: invokevirtual #101                // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getScheme:()Ljava/lang/String;
     119: ldc           #102                // String http
     121: invokevirtual #63                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     124: ifeq          168
     127: aload_0
     128: getfield      #9                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
     131: invokevirtual #103                // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getProxyServerConfiguration:()Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
     134: ifnull        168
     137: aload_0
     138: getfield      #9                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
     141: invokevirtual #103                // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getProxyServerConfiguration:()Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
     144: invokevirtual #104                // Method org/wso2/transport/http/netty/contract/config/ProxyServerConfiguration.getProxyUsername:()Ljava/lang/String;
     147: ifnull        168
     150: aload_0
     151: getfield      #9                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
     154: invokevirtual #103                // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getProxyServerConfiguration:()Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
     157: invokevirtual #105                // Method org/wso2/transport/http/netty/contract/config/ProxyServerConfiguration.getProxyPassword:()Ljava/lang/String;
     160: ifnull        168
     163: aload_0
     164: aload_2
     165: invokespecial #106                // Method setProxyAuthorizationHeader:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
     168: return

  private void setProxyAuthorizationHeader(org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: new           #107                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #108                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #9                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
      11: invokevirtual #103                // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getProxyServerConfiguration:()Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      14: invokevirtual #104                // Method org/wso2/transport/http/netty/contract/config/ProxyServerConfiguration.getProxyUsername:()Ljava/lang/String;
      17: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #110                // String :
      22: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #9                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
      29: invokevirtual #103                // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getProxyServerConfiguration:()Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      32: invokevirtual #105                // Method org/wso2/transport/http/netty/contract/config/ProxyServerConfiguration.getProxyPassword:()Ljava/lang/String;
      35: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: getstatic     #112                // Field io/netty/util/CharsetUtil.UTF_8:Ljava/nio/charset/Charset;
      44: invokestatic  #113                // Method io/netty/buffer/Unpooled.copiedBuffer:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lio/netty/buffer/ByteBuf;
      47: astore_2
      48: aload_2
      49: iconst_0
      50: invokestatic  #114                // Method io/netty/handler/codec/base64/Base64.encode:(Lio/netty/buffer/ByteBuf;Z)Lio/netty/buffer/ByteBuf;
      53: astore_3
      54: new           #115                // class io/netty/util/AsciiString
      57: dup
      58: new           #107                // class java/lang/StringBuilder
      61: dup
      62: invokespecial #108                // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #116                // String Basic
      67: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_3
      71: getstatic     #117                // Field io/netty/util/CharsetUtil.US_ASCII:Ljava/nio/charset/Charset;
      74: invokevirtual #118                // Method io/netty/buffer/ByteBuf.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;
      77: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #119                // Method io/netty/util/AsciiString."<init>":(Ljava/lang/CharSequence;)V
      86: astore        4
      88: aload_1
      89: getstatic     #120                // Field io/netty/handler/codec/http/HttpHeaderNames.PROXY_AUTHORIZATION:Lio/netty/util/AsciiString;
      92: invokevirtual #97                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
      95: aload         4
      97: invokevirtual #121                // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
     100: aload_2
     101: invokevirtual #122                // Method io/netty/buffer/ByteBuf.release:()Z
     104: pop
     105: aload_3
     106: invokevirtual #122                // Method io/netty/buffer/ByteBuf.release:()Z
     109: pop
     110: return

  private static void lambda$send$9(org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getChannel:()Lio/netty/channel/Channel;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/Channel.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      10: pop
      11: return

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static org.wso2.transport.http.netty.contract.config.SenderConfiguration access$100(org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector);
    Code:
       0: aload_0
       1: getfield      #9                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
       4: areturn

  static int access$200(org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector);
    Code:
       0: aload_0
       1: getfield      #8                  // Field socketIdleTimeout:I
       4: ireturn

  static org.wso2.transport.http.netty.contractimpl.sender.channel.pool.ConnectionManager access$300(org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector);
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectionManager:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;
       4: areturn

  static java.lang.String access$400(org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector);
    Code:
       0: aload_0
       1: getfield      #6                  // Field httpVersion:Ljava/lang/String;
       4: areturn

  static org.wso2.transport.http.netty.contract.config.ChunkConfig access$500(org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector);
    Code:
       0: aload_0
       1: getfield      #5                  // Field chunkConfig:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
       4: areturn

  static org.wso2.transport.http.netty.contract.config.KeepAliveConfig access$600(org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector);
    Code:
       0: aload_0
       1: getfield      #4                  // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
       4: areturn

  static void access$700(org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector, org.wso2.transport.http.netty.contract.config.KeepAliveConfig, org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method handleOutboundConnectionHeader:(Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
       6: return

  static org.wso2.transport.http.netty.contract.config.ForwardedExtensionConfig access$800(org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector);
    Code:
       0: aload_0
       1: getfield      #2                  // Field forwardedExtensionConfig:Lorg/wso2/transport/http/netty/contract/config/ForwardedExtensionConfig;
       4: areturn

  static {};
    Code:
       0: ldc           #123                // class org/wso2/transport/http/netty/contract/HttpClientConnector
       2: invokestatic  #124                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
