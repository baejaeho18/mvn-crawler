Compiled from "TimeoutHandler.java"
class org.wso2.transport.http.netty.contractimpl.sender.http2.TimeoutHandler$IdleTimeoutTask implements java.lang.Runnable {
  private io.netty.channel.ChannelHandlerContext ctx;

  private org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder msgHolder;

  private int streamId;

  final org.wso2.transport.http.netty.contractimpl.sender.http2.TimeoutHandler this$0;

  org.wso2.transport.http.netty.contractimpl.sender.http2.TimeoutHandler$IdleTimeoutTask(org.wso2.transport.http.netty.contractimpl.sender.http2.TimeoutHandler, io.netty.channel.ChannelHandlerContext, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field streamId:I
      19: aload_0
      20: aload_1
      21: invokestatic  #5                  // Method org/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler.access$000:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler;)Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      24: iload_3
      25: invokevirtual #6                  // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getInFlightMessage:(I)Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      28: putfield      #7                  // Field msgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      31: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler;
       4: invokestatic  #8                  // Method org/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler.access$100:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler;)J
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler;
      11: invokestatic  #9                  // Method org/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler.access$200:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler;)J
      14: aload_0
      15: getfield      #7                  // Field msgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      18: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getLastReadWriteTime:()J
      21: lsub
      22: lsub
      23: lstore_1
      24: lload_1
      25: lconst_0
      26: lcmp
      27: ifgt          143
      30: aload_0
      31: aload_0
      32: getfield      #4                  // Field streamId:I
      35: aload_0
      36: getfield      #3                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      39: invokespecial #11                 // Method closeStream:(ILio/netty/channel/ChannelHandlerContext;)V
      42: aload_0
      43: getfield      #7                  // Field msgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      46: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponse:()Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;
      49: ifnull        59
      52: aload_0
      53: invokespecial #13                 // Method handleIncompleteInboundResponse:()V
      56: goto          126
      59: aload_0
      60: getfield      #7                  // Field msgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      63: invokevirtual #14                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.isRequestWritten:()Z
      66: ifeq          99
      69: aload_0
      70: getfield      #7                  // Field msgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      73: invokevirtual #15                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponseFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      76: new           #16                 // class org/wso2/transport/http/netty/contract/EndpointTimeOutException
      79: dup
      80: ldc           #18                 // String Idle timeout triggered before initiating inbound response
      82: getstatic     #19                 // Field io/netty/handler/codec/http/HttpResponseStatus.GATEWAY_TIMEOUT:Lio/netty/handler/codec/http/HttpResponseStatus;
      85: invokevirtual #20                 // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
      88: invokespecial #21                 // Method org/wso2/transport/http/netty/contract/EndpointTimeOutException."<init>":(Ljava/lang/String;I)V
      91: invokeinterface #22,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      96: goto          126
      99: aload_0
     100: getfield      #7                  // Field msgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
     103: invokevirtual #15                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponseFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
     106: new           #16                 // class org/wso2/transport/http/netty/contract/EndpointTimeOutException
     109: dup
     110: ldc           #23                 // String Idle timeout triggered before initiating outbound response
     112: getstatic     #19                 // Field io/netty/handler/codec/http/HttpResponseStatus.GATEWAY_TIMEOUT:Lio/netty/handler/codec/http/HttpResponseStatus;
     115: invokevirtual #20                 // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
     118: invokespecial #21                 // Method org/wso2/transport/http/netty/contract/EndpointTimeOutException."<init>":(Ljava/lang/String;I)V
     121: invokeinterface #22,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
     126: aload_0
     127: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler;
     130: invokestatic  #5                  // Method org/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler.access$000:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler;)Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
     133: aload_0
     134: getfield      #4                  // Field streamId:I
     137: invokevirtual #24                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.removeInFlightMessage:(I)V
     140: goto          176
     143: aload_0
     144: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler;
     147: invokestatic  #25                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler.access$400:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler;)Ljava/util/Map;
     150: aload_0
     151: getfield      #4                  // Field streamId:I
     154: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     157: aload_0
     158: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler;
     161: aload_0
     162: getfield      #3                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
     165: aload_0
     166: lload_1
     167: invokestatic  #27                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler.access$300:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler;Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Runnable;J)Ljava/util/concurrent/ScheduledFuture;
     170: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     175: pop
     176: return

  private void handleIncompleteInboundResponse();
    Code:
       0: new           #29                 // class io/netty/handler/codec/http/DefaultLastHttpContent
       3: dup
       4: invokespecial #30                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #31                 // class io/netty/handler/codec/DecoderException
      12: dup
      13: ldc           #32                 // String Idle timeout triggered while reading inbound response entity body
      15: invokespecial #33                 // Method io/netty/handler/codec/DecoderException."<init>":(Ljava/lang/String;)V
      18: invokestatic  #34                 // Method io/netty/handler/codec/DecoderResult.failure:(Ljava/lang/Throwable;)Lio/netty/handler/codec/DecoderResult;
      21: invokeinterface #35,  2           // InterfaceMethod io/netty/handler/codec/http/LastHttpContent.setDecoderResult:(Lio/netty/handler/codec/DecoderResult;)V
      26: aload_0
      27: getfield      #7                  // Field msgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      30: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponse:()Lorg/wso2/transport/http/netty/message/HttpCarbonResponse;
      33: aload_1
      34: invokevirtual #36                 // Method org/wso2/transport/http/netty/message/HttpCarbonResponse.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      37: invokestatic  #37                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/TimeoutHandler.access$500:()Lorg/slf4j/Logger;
      40: ldc           #32                 // String Idle timeout triggered while reading inbound response entity body
      42: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      47: return

  private void closeStream(int, io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_2
       1: invokeinterface #39,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
       6: ldc           #40                 // String http2TargetHandler
       8: invokeinterface #41,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/String;)Lio/netty/channel/ChannelHandler;
      13: checkcast     #42                 // class org/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler
      16: astore_3
      17: aload_3
      18: aload_2
      19: iload_1
      20: getstatic     #43                 // Field io/netty/handler/codec/http2/Http2Error.STREAM_CLOSED:Lio/netty/handler/codec/http2/Http2Error;
      23: invokevirtual #44                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler.resetStream:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Error;)V
      26: return
}
