Compiled from "Http2SourceConnectionHandler.java"
public class org.wso2.transport.http.netty.contractimpl.listener.http2.Http2SourceConnectionHandler extends io.netty.handler.codec.http2.Http2ConnectionHandler {
  private static final org.slf4j.Logger LOG;

  private io.netty.handler.codec.http2.Http2FrameListener http2FrameListener;

  private io.netty.handler.codec.http2.Http2ConnectionEncoder encoder;

  private java.lang.String interfaceId;

  private org.wso2.transport.http.netty.contract.ServerConnectorFuture serverConnectorFuture;

  private java.lang.String serverName;

  private org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer serverChannelInitializer;

  org.wso2.transport.http.netty.contractimpl.listener.http2.Http2SourceConnectionHandler(org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer, io.netty.handler.codec.http2.Http2ConnectionDecoder, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2Settings, java.lang.String, org.wso2.transport.http.netty.contract.ServerConnectorFuture, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokespecial #1                  // Method io/netty/handler/codec/http2/Http2ConnectionHandler."<init>":(Lio/netty/handler/codec/http2/Http2ConnectionDecoder;Lio/netty/handler/codec/http2/Http2ConnectionEncoder;Lio/netty/handler/codec/http2/Http2Settings;)V
       8: aload_0
       9: aload_1
      10: putfield      #2                  // Field serverChannelInitializer:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
      13: aload_0
      14: aload_3
      15: putfield      #3                  // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      18: aload_0
      19: aload         5
      21: putfield      #4                  // Field interfaceId:Ljava/lang/String;
      24: aload_0
      25: aload         6
      27: putfield      #5                  // Field serverConnectorFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      30: aload_0
      31: aload         7
      33: putfield      #6                  // Field serverName:Ljava/lang/String;
      36: aload_0
      37: new           #7                  // class org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceConnectionHandler$ServerFrameListener
      40: dup
      41: aconst_null
      42: invokespecial #8                  // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceConnectionHandler$ServerFrameListener."<init>":(Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceConnectionHandler$1;)V
      45: putfield      #9                  // Field http2FrameListener:Lio/netty/handler/codec/http2/Http2FrameListener;
      48: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method io/netty/handler/codec/http2/Http2ConnectionHandler.handlerAdded:(Lio/netty/channel/ChannelHandlerContext;)V
       5: aload_1
       6: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      11: iconst_4
      12: anewarray     #12                 // class java/lang/String
      15: dup
      16: iconst_0
      17: ldc           #14                 // String Http2ToHttpFallbackHandler
      19: aastore
      20: dup
      21: iconst_1
      22: ldc           #15                 // String compressor
      24: aastore
      25: dup
      26: iconst_2
      27: ldc           #16                 // String http-trace-logger
      29: aastore
      30: dup
      31: iconst_3
      32: ldc           #17                 // String http-access-logger
      34: aastore
      35: invokestatic  #18                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.safelyRemoveHandlers:(Lio/netty/channel/ChannelPipeline;[Ljava/lang/String;)V
      38: new           #19                 // class org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler
      41: dup
      42: aload_0
      43: getfield      #2                  // Field serverChannelInitializer:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
      46: aload_0
      47: getfield      #3                  // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      50: aload_0
      51: getfield      #4                  // Field interfaceId:Ljava/lang/String;
      54: aload_0
      55: invokevirtual #20                 // Method connection:()Lio/netty/handler/codec/http2/Http2Connection;
      58: aload_0
      59: getfield      #5                  // Field serverConnectorFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      62: aload_0
      63: getfield      #6                  // Field serverName:Ljava/lang/String;
      66: invokespecial #21                 // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler."<init>":(Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;Lio/netty/handler/codec/http2/Http2ConnectionEncoder;Ljava/lang/String;Lio/netty/handler/codec/http2/Http2Connection;Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;Ljava/lang/String;)V
      69: astore_2
      70: aload_1
      71: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      76: ldc           #22                 // String Http2SourceHandler
      78: aload_2
      79: invokeinterface #23,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      84: pop
      85: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        36
       4: aload_1
       5: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      10: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      15: ifeq          36
      18: aload_1
      19: getstatic     #26                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      22: invokeinterface #27,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      27: getstatic     #28                 // Field io/netty/channel/ChannelFutureListener.CLOSE:Lio/netty/channel/ChannelFutureListener;
      30: invokeinterface #29,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      35: pop
      36: return

  public void onError(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_2
       1: invokestatic  #30                 // Method io/netty/handler/codec/http2/Http2CodecUtil.getEmbeddedHttp2Exception:(Ljava/lang/Throwable;)Lio/netty/handler/codec/http2/Http2Exception;
       4: astore_3
       5: aload_3
       6: instanceof    #31                 // class io/netty/handler/codec/http2/Http2Exception$ClosedStreamCreationException
       9: ifeq          31
      12: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      15: ldc           #33                 // String Stream creation failed, {}, {}
      17: ldc           #34                 // String Promised stream is already rejected or stream is no longer valid
      19: aload_3
      20: invokevirtual #35                 // Method io/netty/handler/codec/http2/Http2Exception.getMessage:()Ljava/lang/String;
      23: invokeinterface #36,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      28: goto          37
      31: aload_0
      32: aload_1
      33: aload_2
      34: invokespecial #37                 // Method io/netty/handler/codec/http2/Http2ConnectionHandler.onError:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      37: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
       6: pop
       7: invokestatic  #39                 // Method org/wso2/transport/http/netty/internal/HttpTransportContextHolder.getInstance:()Lorg/wso2/transport/http/netty/internal/HttpTransportContextHolder;
      10: invokevirtual #40                 // Method org/wso2/transport/http/netty/internal/HttpTransportContextHolder.getHandlerExecutor:()Lorg/wso2/transport/http/netty/internal/HandlerExecutor;
      13: ifnull        32
      16: invokestatic  #39                 // Method org/wso2/transport/http/netty/internal/HttpTransportContextHolder.getInstance:()Lorg/wso2/transport/http/netty/internal/HttpTransportContextHolder;
      19: invokevirtual #40                 // Method org/wso2/transport/http/netty/internal/HttpTransportContextHolder.getHandlerExecutor:()Lorg/wso2/transport/http/netty/internal/HandlerExecutor;
      22: aload_1
      23: invokevirtual #41                 // Method java/lang/Object.hashCode:()I
      26: invokestatic  #42                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      29: invokevirtual #43                 // Method org/wso2/transport/http/netty/internal/HandlerExecutor.executeAtSourceConnectionTermination:(Ljava/lang/String;)V
      32: aload_1
      33: invokeinterface #44,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
      38: pop
      39: return

  io.netty.handler.codec.http2.Http2FrameListener getHttp2FrameListener();
    Code:
       0: aload_0
       1: getfield      #9                  // Field http2FrameListener:Lio/netty/handler/codec/http2/Http2FrameListener;
       4: areturn

  static {};
    Code:
       0: ldc           #45                 // class org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceConnectionHandler
       2: invokestatic  #46                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
