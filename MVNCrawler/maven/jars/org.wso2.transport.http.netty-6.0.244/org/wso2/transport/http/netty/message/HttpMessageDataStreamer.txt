Compiled from "HttpMessageDataStreamer.java"
public class org.wso2.transport.http.netty.message.HttpMessageDataStreamer {
  private static final org.slf4j.Logger LOG;

  private org.wso2.transport.http.netty.message.HttpCarbonMessage httpCarbonMessage;

  private static final int CONTENT_BUFFER_SIZE;

  private io.netty.buffer.ByteBufAllocator pooledByteBufAllocator;

  private org.wso2.transport.http.netty.message.HttpMessageDataStreamer$ByteBufferInputStream byteBufferInputStream;

  private org.wso2.transport.http.netty.message.HttpMessageDataStreamer$ByteBufferOutputStream byteBufferOutputStream;

  public org.wso2.transport.http.netty.message.HttpMessageDataStreamer(org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       9: return

  public org.wso2.transport.http.netty.message.HttpMessageDataStreamer(org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       9: aload_0
      10: aload_2
      11: putfield      #1                  // Field pooledByteBufAllocator:Lio/netty/buffer/ByteBufAllocator;
      14: return

  public java.io.OutputStream getOutputStream();
    Code:
       0: aload_0
       1: getfield      #2                  // Field byteBufferOutputStream:Lorg/wso2/transport/http/netty/message/HttpMessageDataStreamer$ByteBufferOutputStream;
       4: ifnonnull     19
       7: aload_0
       8: new           #6                  // class org/wso2/transport/http/netty/message/HttpMessageDataStreamer$ByteBufferOutputStream
      11: dup
      12: aload_0
      13: invokespecial #7                  // Method org/wso2/transport/http/netty/message/HttpMessageDataStreamer$ByteBufferOutputStream."<init>":(Lorg/wso2/transport/http/netty/message/HttpMessageDataStreamer;)V
      16: putfield      #2                  // Field byteBufferOutputStream:Lorg/wso2/transport/http/netty/message/HttpMessageDataStreamer$ByteBufferOutputStream;
      19: aload_0
      20: getfield      #2                  // Field byteBufferOutputStream:Lorg/wso2/transport/http/netty/message/HttpMessageDataStreamer$ByteBufferOutputStream;
      23: areturn

  private java.io.InputStream createInputStreamIfNull();
    Code:
       0: aload_0
       1: getfield      #8                  // Field byteBufferInputStream:Lorg/wso2/transport/http/netty/message/HttpMessageDataStreamer$ByteBufferInputStream;
       4: ifnonnull     19
       7: aload_0
       8: new           #9                  // class org/wso2/transport/http/netty/message/HttpMessageDataStreamer$ByteBufferInputStream
      11: dup
      12: aload_0
      13: invokespecial #10                 // Method org/wso2/transport/http/netty/message/HttpMessageDataStreamer$ByteBufferInputStream."<init>":(Lorg/wso2/transport/http/netty/message/HttpMessageDataStreamer;)V
      16: putfield      #8                  // Field byteBufferInputStream:Lorg/wso2/transport/http/netty/message/HttpMessageDataStreamer$ByteBufferInputStream;
      19: aload_0
      20: getfield      #8                  // Field byteBufferInputStream:Lorg/wso2/transport/http/netty/message/HttpMessageDataStreamer$ByteBufferInputStream;
      23: areturn

  public java.io.InputStream getInputStream();
    Code:
       0: aload_0
       1: getfield      #4                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       4: getstatic     #11                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_ENCODING:Lio/netty/util/AsciiString;
       7: invokevirtual #12                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
      10: invokevirtual #13                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      13: astore_1
      14: aload_1
      15: ifnull        125
      18: aload_0
      19: getfield      #4                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      22: getstatic     #11                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_ENCODING:Lio/netty/util/AsciiString;
      25: invokevirtual #12                 // Method io/netty/util/AsciiString.toString:()Ljava/lang/String;
      28: invokevirtual #14                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.removeHeader:(Ljava/lang/String;)V
      31: aload_1
      32: ldc           #16                 // String gzip
      34: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      37: ifeq          52
      40: new           #18                 // class java/util/zip/GZIPInputStream
      43: dup
      44: aload_0
      45: invokespecial #19                 // Method createInputStreamIfNull:()Ljava/io/InputStream;
      48: invokespecial #20                 // Method java/util/zip/GZIPInputStream."<init>":(Ljava/io/InputStream;)V
      51: areturn
      52: aload_1
      53: ldc           #21                 // String deflate
      55: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      58: ifeq          73
      61: new           #22                 // class java/util/zip/InflaterInputStream
      64: dup
      65: aload_0
      66: invokespecial #19                 // Method createInputStreamIfNull:()Ljava/io/InputStream;
      69: invokespecial #23                 // Method java/util/zip/InflaterInputStream."<init>":(Ljava/io/InputStream;)V
      72: areturn
      73: aload_1
      74: ldc           #24                 // String identity
      76: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      79: ifne          93
      82: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      85: ldc           #25                 // String Unknown Content-Encoding: {}
      87: aload_1
      88: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      93: goto          125
      96: astore_2
      97: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     100: new           #28                 // class java/lang/StringBuilder
     103: dup
     104: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     107: ldc           #30                 // String Error while creating inputStream for content-encoding:
     109: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_1
     113: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: aload_2
     120: invokeinterface #33,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     125: aload_0
     126: invokespecial #19                 // Method createInputStreamIfNull:()Ljava/io/InputStream;
     129: areturn
    Exception table:
       from    to  target type
          31    51    96   Class java/io/IOException
          52    72    96   Class java/io/IOException
          73    93    96   Class java/io/IOException

  static org.wso2.transport.http.netty.message.HttpCarbonMessage access$000(org.wso2.transport.http.netty.message.HttpMessageDataStreamer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field httpCarbonMessage:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       4: areturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static org.wso2.transport.http.netty.message.HttpMessageDataStreamer$ByteBufferOutputStream access$202(org.wso2.transport.http.netty.message.HttpMessageDataStreamer, org.wso2.transport.http.netty.message.HttpMessageDataStreamer$ByteBufferOutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field byteBufferOutputStream:Lorg/wso2/transport/http/netty/message/HttpMessageDataStreamer$ByteBufferOutputStream;
       6: areturn

  static io.netty.buffer.ByteBufAllocator access$300(org.wso2.transport.http.netty.message.HttpMessageDataStreamer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pooledByteBufAllocator:Lio/netty/buffer/ByteBufAllocator;
       4: areturn

  static {};
    Code:
       0: ldc           #34                 // class org/wso2/transport/http/netty/message/HttpMessageDataStreamer
       2: invokestatic  #35                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
