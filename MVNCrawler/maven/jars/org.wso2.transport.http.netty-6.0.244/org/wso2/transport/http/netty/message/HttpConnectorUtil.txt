Compiled from "HttpConnectorUtil.java"
public class org.wso2.transport.http.netty.message.HttpConnectorUtil {
  public static org.wso2.transport.http.netty.contract.config.SenderConfiguration getSenderConfiguration(org.wso2.transport.http.netty.contract.config.TransportsConfiguration, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method org/wso2/transport/http/netty/contract/config/TransportsConfiguration.getSenderConfigurations:()Ljava/util/Set;
       4: invokeinterface #2,  1            // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #3,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      14: invokedynamic #4,  0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      19: invokestatic  #5                  // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      22: invokeinterface #6,  2            // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      27: checkcast     #7                  // class java/util/Map
      30: astore_2
      31: ldc           #9                  // String https
      33: aload_1
      34: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          54
      40: aload_2
      41: ldc           #9                  // String https
      43: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #12                 // class org/wso2/transport/http/netty/contract/config/SenderConfiguration
      51: goto          65
      54: aload_2
      55: ldc           #13                 // String http
      57: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #12                 // class org/wso2/transport/http/netty/contract/config/SenderConfiguration
      65: areturn

  public static java.util.Map<java.lang.String, java.lang.Object> getTransportProperties(org.wso2.transport.http.netty.contract.config.TransportsConfiguration);
    Code:
       0: new           #14                 // class java/util/HashMap
       3: dup
       4: invokespecial #15                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #16                 // Method org/wso2/transport/http/netty/contract/config/TransportsConfiguration.getTransportProperties:()Ljava/util/Set;
      12: astore_2
      13: aload_2
      14: ifnull        54
      17: aload_2
      18: invokeinterface #17,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      23: ifne          54
      26: aload_2
      27: invokeinterface #2,  1            // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      32: invokedynamic #18,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      37: invokedynamic #19,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      42: invokestatic  #5                  // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      45: invokeinterface #6,  2            // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      50: checkcast     #7                  // class java/util/Map
      53: astore_1
      54: aload_1
      55: areturn

  public static org.wso2.transport.http.netty.contract.config.ServerBootstrapConfiguration getServerBootstrapConfiguration(java.util.Set<org.wso2.transport.http.netty.contract.config.TransportProperty>);
    Code:
       0: new           #14                 // class java/util/HashMap
       3: dup
       4: invokespecial #15                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: ifnull        49
      12: aload_0
      13: invokeinterface #17,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      18: ifne          49
      21: aload_0
      22: invokeinterface #2,  1            // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      27: invokedynamic #18,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      32: invokedynamic #19,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      37: invokestatic  #5                  // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      40: invokeinterface #6,  2            // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      45: checkcast     #7                  // class java/util/Map
      48: astore_1
      49: new           #20                 // class org/wso2/transport/http/netty/contract/config/ServerBootstrapConfiguration
      52: dup
      53: aload_1
      54: invokespecial #21                 // Method org/wso2/transport/http/netty/contract/config/ServerBootstrapConfiguration."<init>":(Ljava/util/Map;)V
      57: areturn

  private org.wso2.transport.http.netty.message.HttpConnectorUtil();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: return

  private static org.wso2.transport.http.netty.contract.config.SenderConfiguration lambda$getSenderConfiguration$57(org.wso2.transport.http.netty.contract.config.SenderConfiguration);
    Code:
       0: aload_0
       1: areturn

  private static java.lang.String lambda$getSenderConfiguration$56(org.wso2.transport.http.netty.contract.config.SenderConfiguration);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getScheme:()Ljava/lang/String;
       4: invokestatic  #24                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
       7: invokevirtual #25                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      10: areturn
}
