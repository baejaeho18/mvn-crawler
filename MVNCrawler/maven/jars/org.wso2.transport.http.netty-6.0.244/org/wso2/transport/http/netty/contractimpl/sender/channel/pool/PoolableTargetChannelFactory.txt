Compiled from "PoolableTargetChannelFactory.java"
public class org.wso2.transport.http.netty.contractimpl.sender.channel.pool.PoolableTargetChannelFactory implements org.apache.commons.pool.PoolableObjectFactory {
  private static final org.slf4j.Logger LOG;

  private io.netty.channel.EventLoopGroup eventLoopGroup;

  private java.lang.Class eventLoopClass;

  private org.wso2.transport.http.netty.contractimpl.common.HttpRoute httpRoute;

  private org.wso2.transport.http.netty.contract.config.SenderConfiguration senderConfiguration;

  private org.wso2.transport.http.netty.contractimpl.sender.channel.BootstrapConfiguration bootstrapConfiguration;

  private org.wso2.transport.http.netty.contractimpl.sender.channel.pool.ConnectionManager connectionManager;

  org.wso2.transport.http.netty.contractimpl.sender.channel.pool.PoolableTargetChannelFactory(io.netty.channel.EventLoopGroup, java.lang.Class, org.wso2.transport.http.netty.contractimpl.common.HttpRoute, org.wso2.transport.http.netty.contract.config.SenderConfiguration, org.wso2.transport.http.netty.contractimpl.sender.channel.BootstrapConfiguration, org.wso2.transport.http.netty.contractimpl.sender.channel.pool.ConnectionManager);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field eventLoopClass:Ljava/lang/Class;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field httpRoute:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
      19: aload_0
      20: aload         4
      22: putfield      #6                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
      25: aload_0
      26: aload         5
      28: putfield      #7                  // Field bootstrapConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration;
      31: aload_0
      32: aload         6
      34: putfield      #8                  // Field connectionManager:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;
      37: return

  public java.lang.Object makeObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
       5: aload_0
       6: getfield      #4                  // Field eventLoopClass:Ljava/lang/Class;
       9: aload_0
      10: getfield      #7                  // Field bootstrapConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration;
      13: invokespecial #9                  // Method instantiateAndConfigBootStrap:(Lio/netty/channel/EventLoopGroup;Ljava/lang/Class;Lorg/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration;)Lio/netty/bootstrap/Bootstrap;
      16: astore_1
      17: new           #10                 // class org/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture
      20: dup
      21: invokespecial #11                 // Method org/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture."<init>":()V
      24: astore_2
      25: aload_0
      26: aload_0
      27: getfield      #6                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
      30: aload_1
      31: aload_0
      32: getfield      #5                  // Field httpRoute:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
      35: aload_0
      36: getfield      #8                  // Field connectionManager:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;
      39: aload_2
      40: invokespecial #12                 // Method instantiateAndConfigClientInitializer:(Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;Lio/netty/bootstrap/Bootstrap;Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture;)Lorg/wso2/transport/http/netty/contractimpl/sender/HttpClientChannelInitializer;
      43: astore_3
      44: aload_1
      45: aload_3
      46: invokevirtual #13                 // Method io/netty/bootstrap/Bootstrap.handler:(Lio/netty/channel/ChannelHandler;)Lio/netty/bootstrap/AbstractBootstrap;
      49: pop
      50: aload_0
      51: getfield      #6                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
      54: invokevirtual #14                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getProxyServerConfiguration:()Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      57: ifnull        111
      60: aload_0
      61: getfield      #6                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
      64: invokevirtual #15                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getScheme:()Ljava/lang/String;
      67: ldc           #16                 // String http
      69: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      72: ifeq          111
      75: aload_1
      76: new           #18                 // class java/net/InetSocketAddress
      79: dup
      80: aload_0
      81: getfield      #6                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
      84: invokevirtual #14                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getProxyServerConfiguration:()Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      87: invokevirtual #19                 // Method org/wso2/transport/http/netty/contract/config/ProxyServerConfiguration.getProxyHost:()Ljava/lang/String;
      90: aload_0
      91: getfield      #6                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
      94: invokevirtual #14                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.getProxyServerConfiguration:()Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
      97: invokevirtual #20                 // Method org/wso2/transport/http/netty/contract/config/ProxyServerConfiguration.getProxyPort:()I
     100: invokespecial #21                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     103: invokevirtual #22                 // Method io/netty/bootstrap/Bootstrap.connect:(Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
     106: astore        4
     108: goto          138
     111: aload_1
     112: new           #18                 // class java/net/InetSocketAddress
     115: dup
     116: aload_0
     117: getfield      #5                  // Field httpRoute:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
     120: invokevirtual #23                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.getHost:()Ljava/lang/String;
     123: aload_0
     124: getfield      #5                  // Field httpRoute:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
     127: invokevirtual #24                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.getPort:()I
     130: invokespecial #21                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     133: invokevirtual #22                 // Method io/netty/bootstrap/Bootstrap.connect:(Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
     136: astore        4
     138: aload_2
     139: aload         4
     141: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture.setSocketAvailabilityFuture:(Lio/netty/channel/ChannelFuture;)V
     144: aload_2
     145: aload_0
     146: getfield      #6                  // Field senderConfiguration:Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;
     149: invokevirtual #26                 // Method org/wso2/transport/http/netty/contract/config/SenderConfiguration.isForceHttp2:()Z
     152: invokevirtual #27                 // Method org/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture.setForceHttp2:(Z)V
     155: new           #28                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel
     158: dup
     159: aload_3
     160: aload         4
     162: aload_0
     163: getfield      #5                  // Field httpRoute:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
     166: aload_2
     167: invokespecial #29                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/HttpClientChannelInitializer;Lio/netty/channel/ChannelFuture;Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture;)V
     170: astore        5
     172: aload_3
     173: aload         5
     175: invokevirtual #30                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getHttp2ClientChannel:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
     178: invokevirtual #31                 // Method org/wso2/transport/http/netty/contractimpl/sender/HttpClientChannelInitializer.setHttp2ClientChannel:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;)V
     181: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
     184: ldc           #33                 // String Created channel: {}
     186: aload_0
     187: getfield      #5                  // Field httpRoute:Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;
     190: invokeinterface #34,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     195: aload         5
     197: areturn

  public void destroyObject(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: checkcast     #28                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel
       4: astore_2
       5: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       8: invokeinterface #35,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      13: ifeq          35
      16: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      19: ldc           #36                 // String Destroying channel: {}
      21: aload_2
      22: invokevirtual #37                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
      25: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      30: invokeinterface #34,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      35: aload_2
      36: invokevirtual #37                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
      39: invokeinterface #39,  1           // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
      44: ifeq          57
      47: aload_2
      48: invokevirtual #37                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
      51: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      56: pop
      57: return

  public boolean validateObject(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #28                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel
       4: astore_2
       5: aload_2
       6: invokevirtual #37                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
       9: ifnull        47
      12: aload_2
      13: invokevirtual #37                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
      16: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      21: istore_3
      22: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      25: ldc           #42                 // String Validating channel: {} -> {}
      27: aload_2
      28: invokevirtual #37                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
      31: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      36: iload_3
      37: invokestatic  #43                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      40: invokeinterface #44,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      45: iload_3
      46: ireturn
      47: iconst_1
      48: ireturn

  public void activateObject(java.lang.Object) throws java.lang.Exception;
    Code:
       0: return

  public void passivateObject(java.lang.Object) throws java.lang.Exception;
    Code:
       0: return

  private io.netty.bootstrap.Bootstrap instantiateAndConfigBootStrap(io.netty.channel.EventLoopGroup, java.lang.Class, org.wso2.transport.http.netty.contractimpl.sender.channel.BootstrapConfiguration);
    Code:
       0: new           #45                 // class io/netty/bootstrap/Bootstrap
       3: dup
       4: invokespecial #46                 // Method io/netty/bootstrap/Bootstrap."<init>":()V
       7: astore        4
       9: aload         4
      11: aload_2
      12: invokevirtual #47                 // Method io/netty/bootstrap/Bootstrap.channel:(Ljava/lang/Class;)Lio/netty/bootstrap/AbstractBootstrap;
      15: pop
      16: aload         4
      18: aload_1
      19: invokevirtual #48                 // Method io/netty/bootstrap/Bootstrap.group:(Lio/netty/channel/EventLoopGroup;)Lio/netty/bootstrap/AbstractBootstrap;
      22: pop
      23: aload         4
      25: getstatic     #49                 // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
      28: aload_3
      29: invokevirtual #50                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration.isKeepAlive:()Z
      32: invokestatic  #43                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      35: invokevirtual #51                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
      38: pop
      39: aload         4
      41: getstatic     #52                 // Field io/netty/channel/ChannelOption.TCP_NODELAY:Lio/netty/channel/ChannelOption;
      44: aload_3
      45: invokevirtual #53                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration.isTcpNoDelay:()Z
      48: invokestatic  #43                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: invokevirtual #51                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
      54: pop
      55: aload         4
      57: getstatic     #54                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      60: aload_3
      61: invokevirtual #55                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration.isSocketReuse:()Z
      64: invokestatic  #43                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      67: invokevirtual #51                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
      70: pop
      71: aload         4
      73: getstatic     #56                 // Field io/netty/channel/ChannelOption.CONNECT_TIMEOUT_MILLIS:Lio/netty/channel/ChannelOption;
      76: aload_3
      77: invokevirtual #57                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration.getConnectTimeOut:()I
      80: invokestatic  #58                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      83: invokevirtual #51                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
      86: pop
      87: aload         4
      89: areturn

  private org.wso2.transport.http.netty.contractimpl.sender.HttpClientChannelInitializer instantiateAndConfigClientInitializer(org.wso2.transport.http.netty.contract.config.SenderConfiguration, io.netty.bootstrap.Bootstrap, org.wso2.transport.http.netty.contractimpl.common.HttpRoute, org.wso2.transport.http.netty.contractimpl.sender.channel.pool.ConnectionManager, org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityFuture);
    Code:
       0: new           #59                 // class org/wso2/transport/http/netty/contractimpl/sender/HttpClientChannelInitializer
       3: dup
       4: aload_1
       5: aload_3
       6: aload         4
       8: aload         5
      10: invokespecial #60                 // Method org/wso2/transport/http/netty/contractimpl/sender/HttpClientChannelInitializer."<init>":(Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;Lorg/wso2/transport/http/netty/contractimpl/common/HttpRoute;Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture;)V
      13: astore        6
      15: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      18: invokeinterface #35,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      23: ifeq          61
      26: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      29: ldc           #61                 // String Created new TCP client bootstrap connecting to {}:{} with options: {}
      31: iconst_3
      32: anewarray     #62                 // class java/lang/Object
      35: dup
      36: iconst_0
      37: aload_3
      38: invokevirtual #23                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.getHost:()Ljava/lang/String;
      41: aastore
      42: dup
      43: iconst_1
      44: aload_3
      45: invokevirtual #24                 // Method org/wso2/transport/http/netty/contractimpl/common/HttpRoute.getPort:()I
      48: invokestatic  #58                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: aastore
      52: dup
      53: iconst_2
      54: aload_2
      55: aastore
      56: invokeinterface #63,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      61: aload         6
      63: areturn

  static {};
    Code:
       0: ldc           #64                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolableTargetChannelFactory
       2: invokestatic  #65                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
