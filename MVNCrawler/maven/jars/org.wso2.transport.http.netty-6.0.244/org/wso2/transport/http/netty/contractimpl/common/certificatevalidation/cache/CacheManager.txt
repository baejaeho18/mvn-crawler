Compiled from "CacheManager.java"
public class org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.cache.CacheManager {
  private static final boolean DO_NOT_INTERRUPT_IF_RUNNING;

  private java.util.concurrent.ScheduledExecutorService scheduler;

  private java.util.concurrent.ScheduledFuture scheduledFuture;

  private org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.cache.ManageableCache cache;

  private int cacheMaxSize;

  private int delay;

  private org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.cache.CacheManager$CacheManagingTask cacheManagingTask;

  private static final org.slf4j.Logger LOG;

  public org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.cache.CacheManager(org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.cache.ManageableCache, int, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #5                  // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
       9: iconst_1
      10: istore        4
      12: aload_0
      13: iload         4
      15: invokestatic  #6                  // Method java/util/concurrent/Executors.newScheduledThreadPool:(I)Ljava/util/concurrent/ScheduledExecutorService;
      18: putfield      #7                  // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
      21: aload_0
      22: aload_1
      23: putfield      #2                  // Field cache:Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/ManageableCache;
      26: aload_0
      27: iload_2
      28: putfield      #1                  // Field cacheMaxSize:I
      31: aload_0
      32: new           #8                  // class org/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/CacheManager$CacheManagingTask
      35: dup
      36: aload_0
      37: aconst_null
      38: invokespecial #9                  // Method org/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/CacheManager$CacheManagingTask."<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/CacheManager;Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/CacheManager$1;)V
      41: putfield      #10                 // Field cacheManagingTask:Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/CacheManager$CacheManagingTask;
      44: aload_0
      45: iload_3
      46: putfield      #11                 // Field delay:I
      49: aload_0
      50: invokespecial #12                 // Method start:()Z
      53: pop
      54: return

  private boolean start();
    Code:
       0: aload_0
       1: getfield      #5                  // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
       4: ifnull        19
       7: aload_0
       8: getfield      #5                  // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      11: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/ScheduledFuture.isCancelled:()Z
      16: ifeq          82
      19: aload_0
      20: aload_0
      21: getfield      #7                  // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
      24: aload_0
      25: getfield      #10                 // Field cacheManagingTask:Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/CacheManager$CacheManagingTask;
      28: aload_0
      29: getfield      #11                 // Field delay:I
      32: i2l
      33: aload_0
      34: getfield      #11                 // Field delay:I
      37: i2l
      38: getstatic     #14                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      41: invokeinterface #15,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      46: putfield      #5                  // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      49: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      52: invokeinterface #16,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      57: ifeq          80
      60: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      63: ldc           #17                 // String {} Cache Manager Started.
      65: aload_0
      66: getfield      #2                  // Field cache:Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/ManageableCache;
      69: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      72: invokevirtual #19                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      75: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      80: iconst_1
      81: ireturn
      82: iconst_0
      83: ireturn

  public boolean wakeUpNow();
    Code:
       0: aload_0
       1: getfield      #5                  // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
       4: ifnull        89
       7: aload_0
       8: getfield      #5                  // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      11: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/ScheduledFuture.isCancelled:()Z
      16: ifne          30
      19: aload_0
      20: getfield      #5                  // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      23: iconst_0
      24: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      29: pop
      30: aload_0
      31: aload_0
      32: getfield      #7                  // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
      35: aload_0
      36: getfield      #10                 // Field cacheManagingTask:Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/CacheManager$CacheManagingTask;
      39: lconst_0
      40: aload_0
      41: getfield      #11                 // Field delay:I
      44: i2l
      45: getstatic     #14                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      48: invokeinterface #15,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      53: putfield      #5                  // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      56: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      59: invokeinterface #16,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      64: ifeq          87
      67: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      70: ldc           #23                 // String {} Cache Manager woke up.
      72: aload_0
      73: getfield      #2                  // Field cache:Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/ManageableCache;
      76: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      79: invokevirtual #19                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      82: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      87: iconst_1
      88: ireturn
      89: iconst_0
      90: ireturn

  public boolean changeDelay(int);
    Code:
       0: iconst_1
       1: istore_2
       2: sipush        1440
       5: istore_3
       6: iload_1
       7: iload_2
       8: if_icmplt     16
      11: iload_1
      12: iload_3
      13: if_icmple     57
      16: new           #25                 // class java/lang/IllegalArgumentException
      19: dup
      20: new           #26                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #28                 // String Delay time should should be between
      29: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_2
      33: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #31                 // String  and
      38: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: iload_3
      42: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: ldc           #32                 // String  minutes
      47: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: iload_1
      59: putfield      #11                 // Field delay:I
      62: aload_0
      63: invokevirtual #35                 // Method wakeUpNow:()Z
      66: ireturn

  public int getDelay();
    Code:
       0: aload_0
       1: getfield      #11                 // Field delay:I
       4: ireturn

  public boolean stop();
    Code:
       0: aload_0
       1: getfield      #5                  // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
       4: ifnull        63
       7: aload_0
       8: getfield      #5                  // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      11: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/ScheduledFuture.isCancelled:()Z
      16: ifne          63
      19: aload_0
      20: getfield      #5                  // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      23: iconst_0
      24: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      29: pop
      30: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      33: invokeinterface #16,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      38: ifeq          61
      41: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      44: ldc           #36                 // String {} Cache Manager stopped.
      46: aload_0
      47: getfield      #2                  // Field cache:Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/ManageableCache;
      50: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      53: invokevirtual #19                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      56: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      61: iconst_1
      62: ireturn
      63: iconst_0
      64: ireturn

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #5                  // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/ScheduledFuture.isCancelled:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.cache.ManageableCache access$200(org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.cache.CacheManager);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/ManageableCache;
       4: areturn

  static int access$300(org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.cache.CacheManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field cacheMaxSize:I
       4: ireturn

  static {};
    Code:
       0: ldc           #21                 // class org/wso2/transport/http/netty/contractimpl/common/certificatevalidation/cache/CacheManager
       2: invokestatic  #37                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
