Compiled from "SenderConfiguration.java"
public class org.wso2.transport.http.netty.contract.config.SenderConfiguration extends org.wso2.transport.http.netty.contract.config.SslConfiguration {
  private static final java.lang.String DEFAULT_KEY;

  private java.lang.String id;

  private int socketIdleTimeout;

  private boolean httpTraceLogEnabled;

  private org.wso2.transport.http.netty.contract.config.ChunkConfig chunkingConfig;

  private org.wso2.transport.http.netty.contract.config.KeepAliveConfig keepAliveConfig;

  private boolean forceHttp2;

  private java.lang.String httpVersion;

  private org.wso2.transport.http.netty.contract.config.ProxyServerConfiguration proxyServerConfiguration;

  private org.wso2.transport.http.netty.contractimpl.sender.channel.pool.PoolConfiguration poolConfiguration;

  private org.wso2.transport.http.netty.contract.config.ForwardedExtensionConfig forwardedExtensionConfig;

  public static org.wso2.transport.http.netty.contract.config.SenderConfiguration getDefault();
    Code:
       0: new           #1                  // class org/wso2/transport/http/netty/contract/config/SenderConfiguration
       3: dup
       4: ldc           #2                  // String netty
       6: invokespecial #3                  // Method "<init>":(Ljava/lang/String;)V
       9: astore_0
      10: aload_0
      11: areturn

  public org.wso2.transport.http.netty.contract.config.SenderConfiguration();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/wso2/transport/http/netty/contract/config/SslConfiguration."<init>":()V
       4: aload_0
       5: ldc           #2                  // String netty
       7: putfield      #5                  // Field id:Ljava/lang/String;
      10: aload_0
      11: ldc           #6                  // int 60000
      13: putfield      #7                  // Field socketIdleTimeout:I
      16: aload_0
      17: getstatic     #8                  // Field org/wso2/transport/http/netty/contract/config/ChunkConfig.AUTO:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
      20: putfield      #9                  // Field chunkingConfig:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
      23: aload_0
      24: getstatic     #10                 // Field org/wso2/transport/http/netty/contract/config/KeepAliveConfig.AUTO:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      27: putfield      #11                 // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      30: aload_0
      31: iconst_0
      32: putfield      #12                 // Field forceHttp2:Z
      35: aload_0
      36: ldc           #13                 // String 1.1
      38: putfield      #14                 // Field httpVersion:Ljava/lang/String;
      41: aload_0
      42: new           #15                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration
      45: dup
      46: invokespecial #16                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration."<init>":()V
      49: putfield      #17                 // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
      52: return

  public org.wso2.transport.http.netty.contract.config.SenderConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/wso2/transport/http/netty/contract/config/SslConfiguration."<init>":()V
       4: aload_0
       5: ldc           #2                  // String netty
       7: putfield      #5                  // Field id:Ljava/lang/String;
      10: aload_0
      11: ldc           #6                  // int 60000
      13: putfield      #7                  // Field socketIdleTimeout:I
      16: aload_0
      17: getstatic     #8                  // Field org/wso2/transport/http/netty/contract/config/ChunkConfig.AUTO:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
      20: putfield      #9                  // Field chunkingConfig:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
      23: aload_0
      24: getstatic     #10                 // Field org/wso2/transport/http/netty/contract/config/KeepAliveConfig.AUTO:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      27: putfield      #11                 // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
      30: aload_0
      31: iconst_0
      32: putfield      #12                 // Field forceHttp2:Z
      35: aload_0
      36: ldc           #13                 // String 1.1
      38: putfield      #14                 // Field httpVersion:Ljava/lang/String;
      41: aload_0
      42: aload_1
      43: putfield      #5                  // Field id:Ljava/lang/String;
      46: aload_0
      47: new           #15                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration
      50: dup
      51: invokespecial #16                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration."<init>":()V
      54: putfield      #17                 // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
      57: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field id:Ljava/lang/String;
       4: areturn

  public void setId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field id:Ljava/lang/String;
       5: return

  public int getSocketIdleTimeout(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field socketIdleTimeout:I
       4: ifne          9
       7: iload_1
       8: ireturn
       9: aload_0
      10: getfield      #7                  // Field socketIdleTimeout:I
      13: ireturn

  public void setSocketIdleTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field socketIdleTimeout:I
       5: return

  public boolean isHttpTraceLogEnabled();
    Code:
       0: aload_0
       1: getfield      #18                 // Field httpTraceLogEnabled:Z
       4: ireturn

  public void setHttpTraceLogEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field httpTraceLogEnabled:Z
       5: return

  public org.wso2.transport.http.netty.contract.config.ChunkConfig getChunkingConfig();
    Code:
       0: aload_0
       1: getfield      #9                  // Field chunkingConfig:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
       4: areturn

  public void setChunkingConfig(org.wso2.transport.http.netty.contract.config.ChunkConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field chunkingConfig:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
       5: return

  public org.wso2.transport.http.netty.contract.config.KeepAliveConfig getKeepAliveConfig();
    Code:
       0: aload_0
       1: getfield      #11                 // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
       4: areturn

  public void setKeepAliveConfig(org.wso2.transport.http.netty.contract.config.KeepAliveConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
       5: return

  public void setProxyServerConfiguration(org.wso2.transport.http.netty.contract.config.ProxyServerConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field proxyServerConfiguration:Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
       5: return

  public org.wso2.transport.http.netty.contract.config.ProxyServerConfiguration getProxyServerConfiguration();
    Code:
       0: aload_0
       1: getfield      #19                 // Field proxyServerConfiguration:Lorg/wso2/transport/http/netty/contract/config/ProxyServerConfiguration;
       4: areturn

  public java.lang.String getHttpVersion();
    Code:
       0: aload_0
       1: getfield      #14                 // Field httpVersion:Ljava/lang/String;
       4: areturn

  public void setHttpVersion(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/String.isEmpty:()Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: putfield      #14                 // Field httpVersion:Ljava/lang/String;
      12: return

  public boolean isForceHttp2();
    Code:
       0: aload_0
       1: getfield      #12                 // Field forceHttp2:Z
       4: ireturn

  public void setForceHttp2(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field forceHttp2:Z
       5: return

  public org.wso2.transport.http.netty.contractimpl.sender.channel.pool.PoolConfiguration getPoolConfiguration();
    Code:
       0: aload_0
       1: getfield      #17                 // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
       4: areturn

  public void setPoolConfiguration(org.wso2.transport.http.netty.contractimpl.sender.channel.pool.PoolConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field poolConfiguration:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/PoolConfiguration;
       5: return

  public org.wso2.transport.http.netty.contract.config.ForwardedExtensionConfig getForwardedExtensionConfig();
    Code:
       0: aload_0
       1: getfield      #21                 // Field forwardedExtensionConfig:Lorg/wso2/transport/http/netty/contract/config/ForwardedExtensionConfig;
       4: areturn

  public void setForwardedExtensionConfig(org.wso2.transport.http.netty.contract.config.ForwardedExtensionConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field forwardedExtensionConfig:Lorg/wso2/transport/http/netty/contract/config/ForwardedExtensionConfig;
       5: return
}
