Compiled from "SendingEntityBody.java"
public class org.wso2.transport.http.netty.contractimpl.listener.states.SendingEntityBody implements org.wso2.transport.http.netty.contractimpl.listener.states.ListenerState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.internal.HandlerExecutor handlerExecutor;

  private final org.wso2.transport.http.netty.contract.HttpResponseFuture outboundRespStatusFuture;

  private final org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext messageStateContext;

  private boolean headersWritten;

  private long contentLength;

  private boolean headRequest;

  private java.util.List<io.netty.handler.codec.http.HttpContent> contentList;

  private org.wso2.transport.http.netty.message.HttpCarbonMessage inboundRequestMsg;

  private io.netty.channel.ChannelHandlerContext sourceContext;

  private org.wso2.transport.http.netty.contractimpl.listener.SourceHandler sourceHandler;

  org.wso2.transport.http.netty.contractimpl.listener.states.SendingEntityBody(org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext, org.wso2.transport.http.netty.contract.HttpResponseFuture, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #4                  // Field contentLength:J
       9: aload_0
      10: new           #5                  // class java/util/ArrayList
      13: dup
      14: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #7                  // Field contentList:Ljava/util/List;
      20: aload_0
      21: aload_1
      22: putfield      #8                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      25: aload_0
      26: aload_2
      27: putfield      #9                  // Field outboundRespStatusFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      30: aload_0
      31: iload_3
      32: putfield      #10                 // Field headersWritten:Z
      35: aload_0
      36: invokestatic  #11                 // Method org/wso2/transport/http/netty/internal/HttpTransportContextHolder.getInstance:()Lorg/wso2/transport/http/netty/internal/HttpTransportContextHolder;
      39: invokevirtual #12                 // Method org/wso2/transport/http/netty/internal/HttpTransportContextHolder.getHandlerExecutor:()Lorg/wso2/transport/http/netty/internal/HandlerExecutor;
      42: putfield      #13                 // Field handlerExecutor:Lorg/wso2/transport/http/netty/internal/HandlerExecutor;
      45: return

  public void readInboundRequestHeaders(org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpRequest);
    Code:
       0: getstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #15                 // String readInboundRequestHeaders {}
       5: ldc           #16                 // String is not a dependant action of this state
       7: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void readInboundRequestBody(java.lang.Object) throws org.wso2.transport.http.netty.contract.ServerConnectorException;
    Code:
       0: getstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #18                 // String readInboundRequestBody {}
       5: ldc           #16                 // String is not a dependant action of this state
       7: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void writeOutboundResponseHeaders(org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent);
    Code:
       0: getstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #19                 // String writeOutboundResponseHeaders {}
       5: ldc           #16                 // String is not a dependant action of this state
       7: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void writeOutboundResponseBody(org.wso2.transport.http.netty.contractimpl.HttpOutboundRespListener, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method org/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener.getRequestDataHolder:()Lorg/wso2/transport/http/netty/contractimpl/listener/RequestDataHolder;
       5: invokevirtual #21                 // Method org/wso2/transport/http/netty/contractimpl/listener/RequestDataHolder.getHttpMethod:()Ljava/lang/String;
       8: ldc           #22                 // String HEAD
      10: invokevirtual #23                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      13: putfield      #24                 // Field headRequest:Z
      16: aload_0
      17: aload_1
      18: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener.getInboundRequestMsg:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      21: putfield      #26                 // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      24: aload_0
      25: aload_1
      26: invokevirtual #27                 // Method org/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener.getSourceContext:()Lio/netty/channel/ChannelHandlerContext;
      29: putfield      #28                 // Field sourceContext:Lio/netty/channel/ChannelHandlerContext;
      32: aload_0
      33: aload_1
      34: invokevirtual #29                 // Method org/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener.getSourceHandler:()Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      37: putfield      #30                 // Field sourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      40: aload_3
      41: instanceof    #31                 // class io/netty/handler/codec/http/LastHttpContent
      44: ifeq          147
      47: aload_0
      48: getfield      #10                 // Field headersWritten:Z
      51: ifeq          64
      54: aload_0
      55: aload_3
      56: invokespecial #32                 // Method checkHeadRequestAndWriteOutboundResponseBody:(Lio/netty/handler/codec/http/HttpContent;)Lio/netty/channel/ChannelFuture;
      59: astore        4
      61: goto          103
      64: aload_0
      65: dup
      66: getfield      #4                  // Field contentLength:J
      69: aload_3
      70: invokeinterface #33,  1           // InterfaceMethod io/netty/handler/codec/http/HttpContent.content:()Lio/netty/buffer/ByteBuf;
      75: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      78: i2l
      79: ladd
      80: putfield      #4                  // Field contentLength:J
      83: aload_2
      84: aload_0
      85: getfield      #4                  // Field contentLength:J
      88: invokestatic  #35                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.setupContentLengthRequest:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;J)V
      91: aload_0
      92: aload_1
      93: aload_2
      94: aload_3
      95: checkcast     #31                 // class io/netty/handler/codec/http/LastHttpContent
      98: invokespecial #36                 // Method writeOutboundResponseHeaderAndBody:(Lorg/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lio/netty/handler/codec/http/LastHttpContent;)Lio/netty/channel/ChannelFuture;
     101: astore        4
     103: aload_1
     104: invokevirtual #37                 // Method org/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener.isKeepAlive:()Z
     107: ifne          124
     110: aload         4
     112: getstatic     #38                 // Field io/netty/channel/ChannelFutureListener.CLOSE:Lio/netty/channel/ChannelFutureListener;
     115: invokeinterface #39,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     120: pop
     121: goto          129
     124: aload_0
     125: aload_2
     126: invokespecial #40                 // Method triggerPipeliningLogic:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
     129: aload_0
     130: getfield      #13                 // Field handlerExecutor:Lorg/wso2/transport/http/netty/internal/HandlerExecutor;
     133: ifnull        213
     136: aload_0
     137: getfield      #13                 // Field handlerExecutor:Lorg/wso2/transport/http/netty/internal/HandlerExecutor;
     140: aload_2
     141: invokevirtual #41                 // Method org/wso2/transport/http/netty/internal/HandlerExecutor.executeAtSourceResponseSending:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
     144: goto          213
     147: aload_0
     148: getfield      #10                 // Field headersWritten:Z
     151: ifeq          183
     154: aload_0
     155: getfield      #24                 // Field headRequest:Z
     158: ifeq          169
     161: aload_3
     162: invokeinterface #42,  1           // InterfaceMethod io/netty/handler/codec/http/HttpContent.release:()Z
     167: pop
     168: return
     169: aload_1
     170: invokevirtual #27                 // Method org/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener.getSourceContext:()Lio/netty/channel/ChannelHandlerContext;
     173: aload_3
     174: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     179: pop
     180: goto          213
     183: aload_0
     184: getfield      #7                  // Field contentList:Ljava/util/List;
     187: aload_3
     188: invokeinterface #44,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     193: pop
     194: aload_0
     195: dup
     196: getfield      #4                  // Field contentLength:J
     199: aload_3
     200: invokeinterface #33,  1           // InterfaceMethod io/netty/handler/codec/http/HttpContent.content:()Lio/netty/buffer/ByteBuf;
     205: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     208: i2l
     209: ladd
     210: putfield      #4                  // Field contentLength:J
     213: return

  public void handleAbruptChannelClosure(org.wso2.transport.http.netty.contract.ServerConnectorFuture);
    Code:
       0: getstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #45                 // String Remote client closed the connection while writing outbound response entity body
       5: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      10: return

  public io.netty.channel.ChannelFuture handleIdleTimeoutConnectionClosure(org.wso2.transport.http.netty.contract.ServerConnectorFuture, io.netty.channel.ChannelHandlerContext);
    Code:
       0: getstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #47                 // String Idle timeout triggered while writing outbound response entity body
       5: invokeinterface #46,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      10: aconst_null
      11: areturn

  private io.netty.channel.ChannelFuture checkHeadRequestAndWriteOutboundResponseBody(io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: getfield      #24                 // Field headRequest:Z
       4: ifeq          29
       7: aload_1
       8: invokeinterface #42,  1           // InterfaceMethod io/netty/handler/codec/http/HttpContent.release:()Z
      13: pop
      14: aload_0
      15: new           #48                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      18: dup
      19: invokespecial #49                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
      22: invokespecial #50                 // Method writeOutboundResponseBody:(Lio/netty/handler/codec/http/HttpContent;)Lio/netty/channel/ChannelFuture;
      25: astore_2
      26: goto          35
      29: aload_0
      30: aload_1
      31: invokespecial #50                 // Method writeOutboundResponseBody:(Lio/netty/handler/codec/http/HttpContent;)Lio/netty/channel/ChannelFuture;
      34: astore_2
      35: aload_2
      36: areturn

  private io.netty.channel.ChannelFuture writeOutboundResponseHeaderAndBody(org.wso2.transport.http.netty.contractimpl.HttpOutboundRespListener, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.LastHttpContent);
    Code:
       0: invokestatic  #51                 // Method io/netty/buffer/Unpooled.compositeBuffer:()Lio/netty/buffer/CompositeByteBuf;
       3: astore        4
       5: aload_0
       6: getfield      #7                  // Field contentList:Ljava/util/List;
       9: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore        5
      16: aload         5
      18: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          55
      26: aload         5
      28: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #55                 // class io/netty/handler/codec/http/HttpContent
      36: astore        6
      38: aload         4
      40: iconst_1
      41: aload         6
      43: invokeinterface #33,  1           // InterfaceMethod io/netty/handler/codec/http/HttpContent.content:()Lio/netty/buffer/ByteBuf;
      48: invokevirtual #56                 // Method io/netty/buffer/CompositeByteBuf.addComponent:(ZLio/netty/buffer/ByteBuf;)Lio/netty/buffer/CompositeByteBuf;
      51: pop
      52: goto          16
      55: aload         4
      57: iconst_1
      58: aload_3
      59: invokeinterface #57,  1           // InterfaceMethod io/netty/handler/codec/http/LastHttpContent.content:()Lio/netty/buffer/ByteBuf;
      64: invokevirtual #56                 // Method io/netty/buffer/CompositeByteBuf.addComponent:(ZLio/netty/buffer/ByteBuf;)Lio/netty/buffer/CompositeByteBuf;
      67: pop
      68: aload_0
      69: getfield      #24                 // Field headRequest:Z
      72: ifeq          103
      75: aload         4
      77: invokevirtual #58                 // Method io/netty/buffer/CompositeByteBuf.release:()Z
      80: pop
      81: invokestatic  #51                 // Method io/netty/buffer/Unpooled.compositeBuffer:()Lio/netty/buffer/CompositeByteBuf;
      84: astore        4
      86: aload         4
      88: iconst_1
      89: new           #48                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      92: dup
      93: invokespecial #49                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
      96: invokevirtual #59                 // Method io/netty/handler/codec/http/DefaultLastHttpContent.content:()Lio/netty/buffer/ByteBuf;
      99: invokevirtual #56                 // Method io/netty/buffer/CompositeByteBuf.addComponent:(ZLio/netty/buffer/ByteBuf;)Lio/netty/buffer/CompositeByteBuf;
     102: pop
     103: aload_2
     104: aload_1
     105: invokevirtual #20                 // Method org/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener.getRequestDataHolder:()Lorg/wso2/transport/http/netty/contractimpl/listener/RequestDataHolder;
     108: invokevirtual #60                 // Method org/wso2/transport/http/netty/contractimpl/listener/RequestDataHolder.getHttpVersion:()Ljava/lang/String;
     111: aload_1
     112: invokevirtual #61                 // Method org/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener.getServerName:()Ljava/lang/String;
     115: aload_1
     116: invokevirtual #37                 // Method org/wso2/transport/http/netty/contractimpl/HttpOutboundRespListener.isKeepAlive:()Z
     119: aload         4
     121: invokestatic  #62                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.createFullHttpResponse:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Ljava/lang/String;Ljava/lang/String;ZLio/netty/buffer/ByteBuf;)Lio/netty/handler/codec/http/HttpResponse;
     124: astore        5
     126: aload_0
     127: getfield      #28                 // Field sourceContext:Lio/netty/channel/ChannelHandlerContext;
     130: aload         5
     132: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     137: astore        6
     139: aload_0
     140: aload_0
     141: getfield      #26                 // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
     144: aload_0
     145: getfield      #9                  // Field outboundRespStatusFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
     148: aload         6
     150: invokespecial #63                 // Method checkForResponseWriteStatus:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;Lio/netty/channel/ChannelFuture;)V
     153: aload         6
     155: areturn

  private io.netty.channel.ChannelFuture writeOutboundResponseBody(io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sourceContext:Lio/netty/channel/ChannelHandlerContext;
       4: aload_1
       5: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      10: astore_2
      11: aload_0
      12: aload_0
      13: getfield      #26                 // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      16: aload_0
      17: getfield      #9                  // Field outboundRespStatusFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      20: aload_2
      21: invokespecial #63                 // Method checkForResponseWriteStatus:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;Lio/netty/channel/ChannelFuture;)V
      24: aload_2
      25: areturn

  private void checkForResponseWriteStatus(org.wso2.transport.http.netty.message.HttpCarbonMessage, org.wso2.transport.http.netty.contract.HttpResponseFuture, io.netty.channel.ChannelFuture);
    Code:
       0: aload_3
       1: aload_0
       2: aload_2
       3: aload_1
       4: invokedynamic #64,  0             // InvokeDynamic #0:operationComplete:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/SendingEntityBody;Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)Lio/netty/util/concurrent/GenericFutureListener;
       9: invokeinterface #39,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      14: pop
      15: return

  private void triggerPipeliningLogic(org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: aload_0
       1: getfield      #26                 // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       4: ldc           #65                 // String HTTP_VERSION
       6: invokevirtual #66                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #67                 // class java/lang/String
      12: astore_2
      13: aload_1
      14: invokevirtual #68                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.isPipeliningEnabled:()Z
      17: ifeq          289
      20: ldc           #69                 // String 1.1
      22: aload_2
      23: invokevirtual #23                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      26: ifeq          289
      29: aload_0
      30: getfield      #28                 // Field sourceContext:Lio/netty/channel/ChannelHandlerContext;
      33: invokeinterface #70,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      38: getstatic     #71                 // Field org/wso2/transport/http/netty/contract/Constants.RESPONSE_QUEUE:Lio/netty/util/AttributeKey;
      41: invokeinterface #72,  2           // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      46: invokeinterface #73,  1           // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
      51: checkcast     #74                 // class java/util/Queue
      54: dup
      55: astore        4
      57: monitorenter
      58: aload_0
      59: getfield      #28                 // Field sourceContext:Lio/netty/channel/ChannelHandlerContext;
      62: invokeinterface #70,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      67: getstatic     #71                 // Field org/wso2/transport/http/netty/contract/Constants.RESPONSE_QUEUE:Lio/netty/util/AttributeKey;
      70: invokeinterface #72,  2           // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      75: invokeinterface #73,  1           // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
      80: checkcast     #74                 // class java/util/Queue
      83: astore_3
      84: aload_0
      85: getfield      #28                 // Field sourceContext:Lio/netty/channel/ChannelHandlerContext;
      88: invokeinterface #70,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      93: getstatic     #75                 // Field org/wso2/transport/http/netty/contract/Constants.NEXT_SEQUENCE_NUMBER:Lio/netty/util/AttributeKey;
      96: invokeinterface #72,  2           // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
     101: invokeinterface #73,  1           // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
     106: checkcast     #76                 // class java/lang/Long
     109: astore        5
     111: aload         5
     113: astore        6
     115: aload         5
     117: invokevirtual #77                 // Method java/lang/Long.longValue:()J
     120: lconst_1
     121: ladd
     122: invokestatic  #78                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     125: dup
     126: astore        5
     128: astore        7
     130: aload         6
     132: pop
     133: aload_0
     134: getfield      #28                 // Field sourceContext:Lio/netty/channel/ChannelHandlerContext;
     137: invokeinterface #70,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     142: getstatic     #75                 // Field org/wso2/transport/http/netty/contract/Constants.NEXT_SEQUENCE_NUMBER:Lio/netty/util/AttributeKey;
     145: invokeinterface #72,  2           // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
     150: aload         5
     152: invokeinterface #79,  2           // InterfaceMethod io/netty/util/Attribute.set:(Ljava/lang/Object;)V
     157: getstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
     160: invokeinterface #80,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     165: ifeq          197
     168: getstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
     171: ldc           #81                 // String Current sequence id of the response : {}
     173: aload_1
     174: invokevirtual #82                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getSequenceId:()J
     177: invokestatic  #78                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     180: invokeinterface #83,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     185: getstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
     188: ldc           #84                 // String Updated next sequence id to : {}
     190: aload         5
     192: invokeinterface #83,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     197: aload         4
     199: monitorexit
     200: goto          211
     203: astore        8
     205: aload         4
     207: monitorexit
     208: aload         8
     210: athrow
     211: aload_3
     212: invokeinterface #85,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
     217: ifne          289
     220: getstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
     223: invokeinterface #80,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     228: ifeq          241
     231: getstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
     234: ldc           #86                 // String Pipelining logic is triggered from transport
     236: invokeinterface #87,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     241: aload_1
     242: invokevirtual #88                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getPipeliningFuture:()Lorg/wso2/transport/http/netty/message/HttpPipeliningFuture;
     245: ifnull        289
     248: aload_0
     249: getfield      #28                 // Field sourceContext:Lio/netty/channel/ChannelHandlerContext;
     252: invokeinterface #70,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     257: getstatic     #89                 // Field org/wso2/transport/http/netty/contract/Constants.PIPELINING_EXECUTOR:Lio/netty/util/AttributeKey;
     260: invokeinterface #72,  2           // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
     265: invokeinterface #73,  1           // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
     270: checkcast     #90                 // class io/netty/util/concurrent/EventExecutorGroup
     273: astore        4
     275: aload         4
     277: aload_0
     278: aload_1
     279: invokedynamic #91,  0             // InvokeDynamic #1:run:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/SendingEntityBody;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)Ljava/lang/Runnable;
     284: invokeinterface #92,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutorGroup.execute:(Ljava/lang/Runnable;)V
     289: return
    Exception table:
       from    to  target type
          58   200   203   any
         203   208   203   any

  private void resetOutboundListenerState();
    Code:
       0: aload_0
       1: getfield      #7                  // Field contentList:Ljava/util/List;
       4: invokeinterface #93,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: lconst_0
      11: putfield      #4                  // Field contentLength:J
      14: aload_0
      15: iconst_0
      16: putfield      #10                 // Field headersWritten:Z
      19: return

  private void lambda$triggerPipeliningLogic$54(org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: aload_1
       1: invokevirtual #88                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getPipeliningFuture:()Lorg/wso2/transport/http/netty/message/HttpPipeliningFuture;
       4: aload_0
       5: getfield      #28                 // Field sourceContext:Lio/netty/channel/ChannelHandlerContext;
       8: invokevirtual #94                 // Method org/wso2/transport/http/netty/message/HttpPipeliningFuture.notifyPipeliningListener:(Lio/netty/channel/ChannelHandlerContext;)V
      11: return

  private void lambda$checkForResponseWriteStatus$53(org.wso2.transport.http.netty.contract.HttpResponseFuture, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_3
       1: invokeinterface #95,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
       6: astore        4
       8: aload         4
      10: ifnull        43
      13: aload         4
      15: instanceof    #96                 // class java/nio/channels/ClosedChannelException
      18: ifeq          32
      21: new           #97                 // class java/io/IOException
      24: dup
      25: ldc           #98                 // String Connection between remote client and host is closed
      27: invokespecial #99                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      30: astore        4
      32: aload_1
      33: aload         4
      35: invokeinterface #100,  2          // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      40: goto          50
      43: aload_1
      44: aload_2
      45: invokeinterface #101,  2          // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      50: aload_0
      51: getfield      #8                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      54: new           #102                // class org/wso2/transport/http/netty/contractimpl/listener/states/ResponseCompleted
      57: dup
      58: aload_0
      59: getfield      #30                 // Field sourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;
      62: aload_0
      63: getfield      #8                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      66: aload_2
      67: invokespecial #103                // Method org/wso2/transport/http/netty/contractimpl/listener/states/ResponseCompleted."<init>":(Lorg/wso2/transport/http/netty/contractimpl/listener/SourceHandler;Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      70: invokevirtual #104                // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/ListenerState;)V
      73: aload_0
      74: invokespecial #105                // Method resetOutboundListenerState:()V
      77: return

  static {};
    Code:
       0: ldc           #106                // class org/wso2/transport/http/netty/contractimpl/listener/states/SendingEntityBody
       2: invokestatic  #107                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
