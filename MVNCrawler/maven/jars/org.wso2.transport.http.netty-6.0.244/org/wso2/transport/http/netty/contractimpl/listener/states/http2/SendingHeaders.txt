Compiled from "SendingHeaders.java"
public class org.wso2.transport.http.netty.contractimpl.listener.states.http2.SendingHeaders implements org.wso2.transport.http.netty.contractimpl.listener.states.http2.ListenerState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext http2MessageStateContext;

  private final io.netty.channel.ChannelHandlerContext ctx;

  private final io.netty.handler.codec.http2.Http2Connection conn;

  private final io.netty.handler.codec.http2.Http2ConnectionEncoder encoder;

  private final org.wso2.transport.http.netty.contract.HttpResponseFuture outboundRespStatusFuture;

  private final org.wso2.transport.http.netty.message.HttpCarbonMessage inboundRequestMsg;

  private final int originalStreamId;

  private final java.lang.String serverName;

  public org.wso2.transport.http.netty.contractimpl.listener.states.http2.SendingHeaders(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #3                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       9: aload_0
      10: aload_1
      11: invokevirtual #4                  // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getChannelHandlerContext:()Lio/netty/channel/ChannelHandlerContext;
      14: putfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      17: aload_0
      18: aload_1
      19: invokevirtual #6                  // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getConnection:()Lio/netty/handler/codec/http2/Http2Connection;
      22: putfield      #7                  // Field conn:Lio/netty/handler/codec/http2/Http2Connection;
      25: aload_0
      26: aload_1
      27: invokevirtual #8                  // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getEncoder:()Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      30: putfield      #9                  // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      33: aload_0
      34: aload_1
      35: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getOutboundRespStatusFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      38: putfield      #11                 // Field outboundRespStatusFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      41: aload_0
      42: aload_1
      43: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getInboundRequestMsg:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      46: putfield      #13                 // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      49: aload_0
      50: aload_1
      51: invokevirtual #14                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getServerName:()Ljava/lang/String;
      54: putfield      #15                 // Field serverName:Ljava/lang/String;
      57: aload_0
      58: aload_1
      59: invokevirtual #16                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getOriginalStreamId:()I
      62: putfield      #17                 // Field originalStreamId:I
      65: return

  public void readInboundRequestHeaders(org.wso2.transport.http.netty.message.Http2HeadersFrame);
    Code:
       0: getstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #19                 // String readInboundRequestHeaders is not a dependant action of this state
       5: invokeinterface #20,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void readInboundRequestBody(org.wso2.transport.http.netty.contractimpl.listener.http2.Http2SourceHandler, org.wso2.transport.http.netty.message.Http2DataFrame) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       4: new           #21                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/ReceivingEntityBody
       7: dup
       8: aload_0
       9: getfield      #3                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      12: getstatic     #22                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      15: invokevirtual #23                 // Method java/lang/Boolean.booleanValue:()Z
      18: invokespecial #24                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/http2/ReceivingEntityBody."<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;Z)V
      21: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;)V
      24: aload_0
      25: getfield      #3                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      28: invokevirtual #26                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getListenerState:()Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;
      31: aload_1
      32: aload_2
      33: invokeinterface #27,  3           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState.readInboundRequestBody:(Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;Lorg/wso2/transport/http/netty/message/Http2DataFrame;)V
      38: return

  public void writeOutboundResponseHeaders(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: aload_2
       2: iload         4
       4: invokespecial #28                 // Method writeHeaders:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;I)V
       7: aload_0
       8: getfield      #3                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      11: new           #29                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/SendingEntityBody
      14: dup
      15: aload_1
      16: aload_0
      17: getfield      #3                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      20: invokespecial #30                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/http2/SendingEntityBody."<init>":(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      23: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;)V
      26: aload_0
      27: getfield      #3                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      30: invokevirtual #26                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getListenerState:()Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;
      33: aload_1
      34: aload_2
      35: aload_3
      36: iload         4
      38: invokeinterface #31,  5           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState.writeOutboundResponseBody:(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lio/netty/handler/codec/http/HttpContent;I)V
      43: return

  public void writeOutboundResponseBody(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokevirtual #32                 // Method writeOutboundResponseHeaders:(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lio/netty/handler/codec/http/HttpContent;I)V
       9: return

  public void writeOutboundPromise(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.message.Http2PushPromise) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: getstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #33                 // String writeOutboundPromise is not a dependant action of this state
       5: invokeinterface #20,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: new           #34                 // class io/netty/handler/codec/http2/Http2Exception
      13: dup
      14: getstatic     #35                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      17: ldc           #36                 // String WriteOutboundPromise is not a dependant action of SendingHeaders state
      19: invokespecial #37                 // Method io/netty/handler/codec/http2/Http2Exception."<init>":(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;)V
      22: athrow

  private void writeHeaders(org.wso2.transport.http.netty.message.HttpCarbonMessage, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
       4: getstatic     #39                 // Field io/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames.SCHEME:Lio/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames;
       7: invokevirtual #40                 // Method io/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames.text:()Lio/netty/util/AsciiString;
      10: ldc           #41                 // String http
      12: invokevirtual #42                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      15: pop
      16: aload_1
      17: ldc           #43                 // String 2.0
      19: aload_0
      20: getfield      #15                 // Field serverName:Ljava/lang/String;
      23: iconst_1
      24: invokestatic  #44                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.createHttpResponse:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Ljava/lang/String;Ljava/lang/String;Z)Lio/netty/handler/codec/http/HttpResponse;
      27: astore_3
      28: aload_3
      29: iconst_1
      30: invokestatic  #45                 // Method io/netty/handler/codec/http2/HttpConversionUtil.toHttp2Headers:(Lio/netty/handler/codec/http/HttpMessage;Z)Lio/netty/handler/codec/http2/Http2Headers;
      33: astore        4
      35: aload_0
      36: getfield      #17                 // Field originalStreamId:I
      39: iload_2
      40: aload_0
      41: getfield      #7                  // Field conn:Lio/netty/handler/codec/http2/Http2Connection;
      44: aload_0
      45: getfield      #13                 // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      48: invokestatic  #46                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.validatePromisedStreamState:(IILio/netty/handler/codec/http2/Http2Connection;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      51: aload_0
      52: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      55: aload_0
      56: getfield      #9                  // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      59: aload_0
      60: getfield      #11                 // Field outboundRespStatusFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      63: iload_2
      64: aload         4
      66: iconst_0
      67: invokestatic  #47                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.writeHttp2Headers:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2ConnectionEncoder;Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;ILio/netty/handler/codec/http2/Http2Headers;Z)V
      70: return

  static {};
    Code:
       0: ldc           #48                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/SendingHeaders
       2: invokestatic  #49                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
