Compiled from "Http2OutboundRespListener.java"
public class org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener implements org.wso2.transport.http.netty.contract.HttpConnectorListener {
  private static final org.slf4j.Logger LOG;

  private org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext http2MessageStateContext;

  private org.wso2.transport.http.netty.message.HttpCarbonMessage inboundRequestMsg;

  private io.netty.channel.ChannelHandlerContext ctx;

  private io.netty.handler.codec.http2.Http2ConnectionEncoder encoder;

  private int originalStreamId;

  private io.netty.handler.codec.http2.Http2Connection conn;

  private java.lang.String serverName;

  private org.wso2.transport.http.netty.contract.HttpResponseFuture outboundRespStatusFuture;

  private org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer serverChannelInitializer;

  private java.util.Calendar inboundRequestArrivalTime;

  private java.lang.String remoteAddress;

  public org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener(org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Connection, io.netty.handler.codec.http2.Http2ConnectionEncoder, int, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #4                  // String -
       7: putfield      #5                  // Field remoteAddress:Ljava/lang/String;
      10: aload_0
      11: aload_1
      12: putfield      #6                  // Field serverChannelInitializer:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
      15: aload_0
      16: aload_2
      17: putfield      #7                  // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      20: aload_0
      21: aload_3
      22: putfield      #8                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      25: aload_0
      26: aload         4
      28: putfield      #9                  // Field conn:Lio/netty/handler/codec/http2/Http2Connection;
      31: aload_0
      32: aload         5
      34: putfield      #10                 // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      37: aload_0
      38: iload         6
      40: putfield      #11                 // Field originalStreamId:I
      43: aload_0
      44: aload         7
      46: putfield      #12                 // Field serverName:Ljava/lang/String;
      49: aload         8
      51: ifnull        60
      54: aload_0
      55: aload         8
      57: putfield      #5                  // Field remoteAddress:Ljava/lang/String;
      60: aload_0
      61: aload_2
      62: invokevirtual #13                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttpOutboundRespStatusFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      65: putfield      #14                 // Field outboundRespStatusFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      68: aload_0
      69: invokestatic  #15                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      72: putfield      #16                 // Field inboundRequestArrivalTime:Ljava/util/Calendar;
      75: aload_0
      76: aload_2
      77: invokevirtual #17                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttp2MessageStateContext:()Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      80: putfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      83: return

  public void onMessage(org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #11                 // Field originalStreamId:I
       6: invokespecial #18                 // Method writeMessage:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;I)V
       9: return

  public void onError(java.lang.Throwable);
    Code:
       0: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #20                 // String Couldn\'t send the outbound response
       5: aload_1
       6: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      11: return

  public void onPushPromise(org.wso2.transport.http.netty.message.Http2PushPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method writePromise:(Lorg/wso2/transport/http/netty/message/Http2PushPromise;)V
       5: return

  public void onPushResponse(int, org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #9                  // Field conn:Lio/netty/handler/codec/http2/Http2Connection;
       5: invokestatic  #23                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.isValidStreamId:(ILio/netty/handler/codec/http2/Http2Connection;)Z
       8: ifeq          20
      11: aload_0
      12: aload_2
      13: iload_1
      14: invokespecial #18                 // Method writeMessage:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;I)V
      17: goto          41
      20: aload_0
      21: getfield      #7                  // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      24: invokevirtual #13                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttpOutboundRespStatusFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      27: new           #24                 // class org/wso2/transport/http/netty/contract/ServerConnectorException
      30: dup
      31: ldc           #25                 // String Promised stream is already rejected or stream is no longer valid
      33: invokespecial #26                 // Method org/wso2/transport/http/netty/contract/ServerConnectorException."<init>":(Ljava/lang/String;)V
      36: invokeinterface #27,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      41: return

  private void writePromise(org.wso2.transport.http.netty.message.Http2PushPromise);
    Code:
       0: aload_0
       1: getfield      #8                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       9: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      14: aload_0
      15: aload_1
      16: invokedynamic #30,  0             // InvokeDynamic #0:run:(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/message/Http2PushPromise;)Ljava/lang/Runnable;
      21: invokeinterface #31,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      26: return

  private void writeMessage(org.wso2.transport.http.netty.message.HttpCarbonMessage, int);
    Code:
       0: new           #32                 // class org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener$ResponseWriter
       3: dup
       4: aload_0
       5: iload_2
       6: invokespecial #33                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener$ResponseWriter."<init>":(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;I)V
       9: astore_3
      10: aload_0
      11: getfield      #8                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      14: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      19: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      24: aload_0
      25: aload_1
      26: aload_3
      27: invokedynamic #34,  0             // InvokeDynamic #1:run:(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener$ResponseWriter;)Ljava/lang/Runnable;
      32: invokeinterface #31,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      37: return

  public io.netty.channel.ChannelHandlerContext getChannelHandlerContext();
    Code:
       0: aload_0
       1: getfield      #8                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.handler.codec.http2.Http2ConnectionEncoder getEncoder();
    Code:
       0: aload_0
       1: getfield      #10                 // Field encoder:Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
       4: areturn

  public org.wso2.transport.http.netty.contract.HttpResponseFuture getOutboundRespStatusFuture();
    Code:
       0: aload_0
       1: getfield      #14                 // Field outboundRespStatusFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
       4: areturn

  public org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer getServerChannelInitializer();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverChannelInitializer:Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
       4: areturn

  public org.wso2.transport.http.netty.message.HttpCarbonMessage getInboundRequestMsg();
    Code:
       0: aload_0
       1: getfield      #7                  // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       4: areturn

  public io.netty.handler.codec.http2.Http2Connection getConnection();
    Code:
       0: aload_0
       1: getfield      #9                  // Field conn:Lio/netty/handler/codec/http2/Http2Connection;
       4: areturn

  public java.util.Calendar getInboundRequestArrivalTime();
    Code:
       0: aload_0
       1: getfield      #16                 // Field inboundRequestArrivalTime:Ljava/util/Calendar;
       4: areturn

  public int getOriginalStreamId();
    Code:
       0: aload_0
       1: getfield      #11                 // Field originalStreamId:I
       4: ireturn

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field remoteAddress:Ljava/lang/String;
       4: areturn

  public java.lang.String getServerName();
    Code:
       0: aload_0
       1: getfield      #12                 // Field serverName:Ljava/lang/String;
       4: areturn

  private void lambda$writeMessage$37(org.wso2.transport.http.netty.message.HttpCarbonMessage, org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener$ResponseWriter);
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttpContentAsync:()Lorg/wso2/transport/http/netty/message/MessageFuture;
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokedynamic #36,  0             // InvokeDynamic #2:onMessage:(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener$ResponseWriter;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)Lorg/wso2/transport/http/netty/message/MessageListener;
      12: invokevirtual #37                 // Method org/wso2/transport/http/netty/message/MessageFuture.setMessageListener:(Lorg/wso2/transport/http/netty/message/MessageListener;)V
      15: return

  private void lambda$null$36(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener$ResponseWriter, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: getfield      #8                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       9: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokedynamic #38,  0             // InvokeDynamic #3:run:(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener$ResponseWriter;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lio/netty/handler/codec/http/HttpContent;)Ljava/lang/Runnable;
      23: invokeinterface #31,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      28: return

  private void lambda$null$35(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener$ResponseWriter, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokestatic  #39                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener$ResponseWriter.access$100:(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener$ResponseWriter;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lio/netty/handler/codec/http/HttpContent;)V
       6: goto          58
       9: astore        4
      11: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      14: new           #41                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #43                 // String Failed to send the outbound response :
      23: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload         4
      28: invokevirtual #45                 // Method io/netty/handler/codec/http2/Http2Exception.getMessage:()Ljava/lang/String;
      31: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: aload         4
      39: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: aload_0
      45: getfield      #7                  // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      48: invokevirtual #13                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttpOutboundRespStatusFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      51: aload         4
      53: invokeinterface #27,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      58: return
    Exception table:
       from    to  target type
           0     6     9   Class io/netty/handler/codec/http2/Http2Exception

  private void lambda$writePromise$34(org.wso2.transport.http.netty.message.Http2PushPromise);
    Code:
       0: aload_0
       1: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       4: ifnonnull     36
       7: aload_0
       8: new           #47                 // class org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext
      11: dup
      12: invokespecial #48                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext."<init>":()V
      15: putfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      18: aload_0
      19: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      22: new           #49                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/EntityBodyReceived
      25: dup
      26: aload_0
      27: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      30: invokespecial #50                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/http2/EntityBodyReceived."<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      33: invokevirtual #51                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;)V
      36: aload_0
      37: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      40: invokevirtual #52                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getListenerState:()Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;
      43: aload_0
      44: aload_1
      45: invokeinterface #53,  3           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState.writeOutboundPromise:(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/message/Http2PushPromise;)V
      50: goto          98
      53: astore_2
      54: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      57: new           #41                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #54                 // String Failed to send push promise :
      66: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_2
      70: invokevirtual #45                 // Method io/netty/handler/codec/http2/Http2Exception.getMessage:()Ljava/lang/String;
      73: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: aload_2
      80: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      85: aload_0
      86: getfield      #7                  // Field inboundRequestMsg:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      89: invokevirtual #13                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttpOutboundRespStatusFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      92: aload_2
      93: invokeinterface #27,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      98: return
    Exception table:
       from    to  target type
           0    50    53   Class io/netty/handler/codec/http2/Http2Exception

  static org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext access$000(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       4: areturn

  static org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext access$002(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       6: areturn

  static {};
    Code:
       0: ldc           #55                 // class org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener
       2: invokestatic  #56                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
