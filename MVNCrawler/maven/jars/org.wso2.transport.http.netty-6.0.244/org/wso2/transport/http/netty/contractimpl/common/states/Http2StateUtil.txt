Compiled from "Http2StateUtil.java"
public class org.wso2.transport.http.netty.contractimpl.common.states.Http2StateUtil {
  private static final org.slf4j.Logger LOG;

  public org.wso2.transport.http.netty.contractimpl.common.states.Http2StateUtil();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static void notifyRequestListener(org.wso2.transport.http.netty.contractimpl.listener.http2.Http2SourceHandler, org.wso2.transport.http.netty.message.HttpCarbonMessage, int);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getServerConnectorFuture:()Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
       4: ifnull        79
       7: aload_1
       8: invokevirtual #4                  // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttpResponseFuture:()Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      11: astore_3
      12: aload_3
      13: new           #5                  // class org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener
      16: dup
      17: aload_0
      18: invokevirtual #6                  // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getServerChannelInitializer:()Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;
      21: aload_1
      22: aload_0
      23: invokevirtual #7                  // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getChannelHandlerContext:()Lio/netty/channel/ChannelHandlerContext;
      26: aload_0
      27: invokevirtual #8                  // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getConnection:()Lio/netty/handler/codec/http2/Http2Connection;
      30: aload_0
      31: invokevirtual #9                  // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getEncoder:()Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      34: iload_2
      35: aload_0
      36: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getServerName:()Ljava/lang/String;
      39: aload_0
      40: invokevirtual #11                 // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getRemoteAddress:()Ljava/lang/String;
      43: invokespecial #12                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener."<init>":(Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Connection;Lio/netty/handler/codec/http2/Http2ConnectionEncoder;ILjava/lang/String;Ljava/lang/String;)V
      46: invokeinterface #13,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/ServerConnectorFuture.setHttpConnectorListener:(Lorg/wso2/transport/http/netty/contract/HttpConnectorListener;)V
      51: aload_0
      52: invokevirtual #3                  // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getServerConnectorFuture:()Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      55: aload_1
      56: invokeinterface #14,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/ServerConnectorFuture.notifyHttpListener:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      61: goto          89
      64: astore_3
      65: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      68: ldc           #17                 // String Error while notifying listeners
      70: aload_3
      71: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      76: goto          89
      79: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      82: ldc           #19                 // String Cannot find registered listener to forward the message
      84: invokeinterface #20,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      89: return
    Exception table:
       from    to  target type
           7    61    64   Class java/lang/Exception

  public static org.wso2.transport.http.netty.message.HttpCarbonRequest setupCarbonRequest(io.netty.handler.codec.http.HttpRequest, io.netty.channel.ChannelHandlerContext, java.lang.String);
    Code:
       0: new           #21                 // class org/wso2/transport/http/netty/message/HttpCarbonRequest
       3: dup
       4: aload_0
       5: new           #22                 // class org/wso2/transport/http/netty/message/DefaultListener
       8: dup
       9: aload_1
      10: invokespecial #23                 // Method org/wso2/transport/http/netty/message/DefaultListener."<init>":(Lio/netty/channel/ChannelHandlerContext;)V
      13: invokespecial #24                 // Method org/wso2/transport/http/netty/message/HttpCarbonRequest."<init>":(Lio/netty/handler/codec/http/HttpRequest;Lorg/wso2/transport/http/netty/message/Listener;)V
      16: astore_3
      17: aload_3
      18: ldc           #25                 // String POOLED_BYTE_BUFFER_FACTORY
      20: new           #26                 // class org/wso2/transport/http/netty/message/PooledDataStreamerFactory
      23: dup
      24: aload_1
      25: invokeinterface #27,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
      30: invokespecial #28                 // Method org/wso2/transport/http/netty/message/PooledDataStreamerFactory."<init>":(Lio/netty/buffer/ByteBufAllocator;)V
      33: invokevirtual #29                 // Method org/wso2/transport/http/netty/message/HttpCarbonRequest.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      36: aload_3
      37: ldc           #30                 // String CHNL_HNDLR_CTX
      39: aload_1
      40: invokevirtual #29                 // Method org/wso2/transport/http/netty/message/HttpCarbonRequest.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      43: aload_0
      44: invokeinterface #31,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.protocolVersion:()Lio/netty/handler/codec/http/HttpVersion;
      49: astore        4
      51: aload_3
      52: ldc           #32                 // String HTTP_VERSION
      54: new           #33                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      61: aload         4
      63: invokevirtual #35                 // Method io/netty/handler/codec/http/HttpVersion.majorVersion:()I
      66: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: ldc           #37                 // String .
      71: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload         4
      76: invokevirtual #39                 // Method io/netty/handler/codec/http/HttpVersion.minorVersion:()I
      79: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokevirtual #29                 // Method org/wso2/transport/http/netty/message/HttpCarbonRequest.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      88: aload_3
      89: ldc           #41                 // String HTTP_METHOD
      91: aload_0
      92: invokeinterface #42,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.method:()Lio/netty/handler/codec/http/HttpMethod;
      97: invokevirtual #43                 // Method io/netty/handler/codec/http/HttpMethod.name:()Ljava/lang/String;
     100: invokevirtual #29                 // Method org/wso2/transport/http/netty/message/HttpCarbonRequest.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     103: aconst_null
     104: astore        5
     106: aload_1
     107: invokeinterface #44,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     112: invokeinterface #45,  1           // InterfaceMethod io/netty/channel/Channel.localAddress:()Ljava/net/SocketAddress;
     117: instanceof    #46                 // class java/net/InetSocketAddress
     120: ifeq          139
     123: aload_1
     124: invokeinterface #44,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     129: invokeinterface #45,  1           // InterfaceMethod io/netty/channel/Channel.localAddress:()Ljava/net/SocketAddress;
     134: checkcast     #46                 // class java/net/InetSocketAddress
     137: astore        5
     139: aload_3
     140: ldc           #47                 // String LOCAL_ADDRESS
     142: aload         5
     144: invokevirtual #29                 // Method org/wso2/transport/http/netty/message/HttpCarbonRequest.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     147: aload_3
     148: ldc           #48                 // String LISTENER_PORT
     150: aload         5
     152: ifnull        166
     155: aload         5
     157: invokevirtual #49                 // Method java/net/InetSocketAddress.getPort:()I
     160: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     163: goto          167
     166: aconst_null
     167: invokevirtual #29                 // Method org/wso2/transport/http/netty/message/HttpCarbonRequest.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     170: aload_3
     171: ldc           #51                 // String listener.interface.id
     173: aload_2
     174: invokevirtual #29                 // Method org/wso2/transport/http/netty/message/HttpCarbonRequest.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     177: aload_3
     178: ldc           #52                 // String PROTOCOL
     180: ldc           #53                 // String http
     182: invokevirtual #29                 // Method org/wso2/transport/http/netty/message/HttpCarbonRequest.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     185: aload_0
     186: invokeinterface #54,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.uri:()Ljava/lang/String;
     191: astore        6
     193: aload_3
     194: ldc           #55                 // String REQUEST_URL
     196: aload         6
     198: invokevirtual #29                 // Method org/wso2/transport/http/netty/message/HttpCarbonRequest.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     201: aload_3
     202: ldc           #56                 // String TO
     204: aload         6
     206: invokevirtual #29                 // Method org/wso2/transport/http/netty/message/HttpCarbonRequest.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     209: aload_3
     210: areturn

  public static void writeHttp2Headers(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2ConnectionEncoder, org.wso2.transport.http.netty.contract.HttpResponseFuture, int, io.netty.handler.codec.http2.Http2Headers, boolean) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: aload_0
       2: iload_3
       3: aload         4
       5: iconst_0
       6: iload         5
       8: aload_0
       9: invokeinterface #57,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      14: invokeinterface #58,  7           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.writeHeaders:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Headers;IZLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      19: astore        6
      21: aload_1
      22: invokeinterface #59,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.flowController:()Lio/netty/handler/codec/http2/Http2RemoteFlowController;
      27: invokeinterface #60,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController.writePendingBytes:()V
      32: aload_0
      33: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      38: pop
      39: aload_2
      40: aload         6
      42: invokestatic  #62                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.addResponseWriteFailureListener:(Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;Lio/netty/channel/ChannelFuture;)V
      45: return

  public static void writeHttp2Promise(org.wso2.transport.http.netty.message.Http2PushPromise, io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Connection, io.netty.handler.codec.http2.Http2ConnectionEncoder, org.wso2.transport.http.netty.message.HttpCarbonMessage, org.wso2.transport.http.netty.contract.HttpResponseFuture, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_2
       1: invokestatic  #63                 // Method getNextStreamId:(Lio/netty/handler/codec/http2/Http2Connection;)I
       4: istore        7
       6: aload_0
       7: iload         7
       9: invokevirtual #64                 // Method org/wso2/transport/http/netty/message/Http2PushPromise.setPromisedStreamId:(I)V
      12: aload_0
      13: iload         6
      15: invokevirtual #65                 // Method org/wso2/transport/http/netty/message/Http2PushPromise.setStreamId:(I)V
      18: aload_0
      19: invokevirtual #66                 // Method org/wso2/transport/http/netty/message/Http2PushPromise.getHttpRequest:()Lio/netty/handler/codec/http/HttpRequest;
      22: astore        8
      24: aload         8
      26: invokeinterface #67,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      31: getstatic     #68                 // Field io/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames.SCHEME:Lio/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames;
      34: invokevirtual #69                 // Method io/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames.text:()Lio/netty/util/AsciiString;
      37: ldc           #53                 // String http
      39: invokevirtual #70                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      42: pop
      43: aload         8
      45: iconst_1
      46: invokestatic  #71                 // Method io/netty/handler/codec/http2/HttpConversionUtil.toHttp2Headers:(Lio/netty/handler/codec/http/HttpMessage;Z)Lio/netty/handler/codec/http2/Http2Headers;
      49: astore        9
      51: aload_3
      52: aload_1
      53: iload         6
      55: iload         7
      57: aload         9
      59: iconst_0
      60: aload_1
      61: invokeinterface #57,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      66: invokeinterface #72,  7           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.writePushPromise:(Lio/netty/channel/ChannelHandlerContext;IILio/netty/handler/codec/http2/Http2Headers;ILio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      71: astore        10
      73: aload_3
      74: invokeinterface #59,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.flowController:()Lio/netty/handler/codec/http2/Http2RemoteFlowController;
      79: invokeinterface #60,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController.writePendingBytes:()V
      84: aload_1
      85: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      90: pop
      91: aload         4
      93: aload         5
      95: aload         10
      97: invokestatic  #73                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.checkForResponseWriteStatus:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;Lio/netty/channel/ChannelFuture;)V
     100: return

  public static void validatePromisedStreamState(int, int, io.netty.handler.codec.http2.Http2Connection, org.wso2.transport.http.netty.message.HttpCarbonMessage) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_1
       1: iload_0
       2: if_icmpne     6
       5: return
       6: iload_1
       7: aload_2
       8: invokestatic  #74                 // Method isValidStreamId:(ILio/netty/handler/codec/http2/Http2Connection;)Z
      11: ifne          45
      14: aload_3
      15: invokevirtual #75                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttpOutboundRespStatusFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      18: new           #76                 // class org/wso2/transport/http/netty/contract/ServerConnectorException
      21: dup
      22: ldc           #77                 // String Promised stream is already rejected or stream is no longer valid
      24: invokespecial #78                 // Method org/wso2/transport/http/netty/contract/ServerConnectorException."<init>":(Ljava/lang/String;)V
      27: invokeinterface #79,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      32: new           #80                 // class io/netty/handler/codec/http2/Http2Exception
      35: dup
      36: getstatic     #81                 // Field io/netty/handler/codec/http2/Http2Error.REFUSED_STREAM:Lio/netty/handler/codec/http2/Http2Error;
      39: ldc           #77                 // String Promised stream is already rejected or stream is no longer valid
      41: invokespecial #82                 // Method io/netty/handler/codec/http2/Http2Exception."<init>":(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;)V
      44: athrow
      45: return

  public static boolean isValidStreamId(int, io.netty.handler.codec.http2.Http2Connection);
    Code:
       0: aload_1
       1: iload_0
       2: invokeinterface #83,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.stream:(I)Lio/netty/handler/codec/http2/Http2Stream;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static void releaseDataFrame(org.wso2.transport.http.netty.contractimpl.listener.http2.Http2SourceHandler, org.wso2.transport.http.netty.message.Http2DataFrame);
    Code:
       0: aload_1
       1: invokevirtual #84                 // Method org/wso2/transport/http/netty/message/Http2DataFrame.getStreamId:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #85                 // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getStreamIdRequestMap:()Ljava/util/Map;
       9: iload_2
      10: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokeinterface #86,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #87                 // class org/wso2/transport/http/netty/message/HttpCarbonMessage
      21: astore_3
      22: aload_3
      23: ifnull        51
      26: aload_3
      27: new           #88                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      30: dup
      31: invokespecial #89                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
      34: invokevirtual #90                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      37: aload_0
      38: invokevirtual #85                 // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getStreamIdRequestMap:()Ljava/util/Map;
      41: iload_2
      42: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: invokeinterface #91,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_1
      52: invokevirtual #92                 // Method org/wso2/transport/http/netty/message/Http2DataFrame.getData:()Lio/netty/buffer/ByteBuf;
      55: invokevirtual #93                 // Method io/netty/buffer/ByteBuf.release:()Z
      58: pop
      59: return

  public static void sendRstFrame(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2ConnectionEncoder, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: aload_0
       2: iload_2
       3: getstatic     #94                 // Field io/netty/handler/codec/http2/Http2Error.NO_ERROR:Lio/netty/handler/codec/http2/Http2Error;
       6: invokevirtual #95                 // Method io/netty/handler/codec/http2/Http2Error.code:()J
       9: aload_0
      10: invokeinterface #57,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      15: invokeinterface #96,  6           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.writeRstStream:(Lio/netty/channel/ChannelHandlerContext;IJLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      20: pop
      21: aload_1
      22: invokeinterface #59,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.flowController:()Lio/netty/handler/codec/http2/Http2RemoteFlowController;
      27: invokeinterface #60,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController.writePendingBytes:()V
      32: aload_0
      33: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      38: pop
      39: return

  public static void writeHttp2Headers(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel, io.netty.handler.codec.http2.Http2ConnectionEncoder, int, io.netty.handler.codec.http.HttpHeaders, io.netty.handler.codec.http2.Http2Headers, boolean) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload         5
       2: getstatic     #97                 // Field io/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames.STREAM_DEPENDENCY_ID:Lio/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames;
       5: invokevirtual #69                 // Method io/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames.text:()Lio/netty/util/AsciiString;
       8: iconst_0
       9: invokevirtual #98                 // Method io/netty/handler/codec/http/HttpHeaders.getInt:(Ljava/lang/CharSequence;I)I
      12: istore        8
      14: aload         5
      16: getstatic     #99                 // Field io/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames.STREAM_WEIGHT:Lio/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames;
      19: invokevirtual #69                 // Method io/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames.text:()Lio/netty/util/AsciiString;
      22: bipush        16
      24: invokevirtual #101                // Method io/netty/handler/codec/http/HttpHeaders.getShort:(Ljava/lang/CharSequence;S)S
      27: istore        9
      29: aload_2
      30: invokevirtual #102                // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getDataEventListeners:()Ljava/util/List;
      33: invokeinterface #103,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      38: astore        10
      40: aload         10
      42: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          83
      50: aload         10
      52: invokeinterface #105,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #106                // class org/wso2/transport/http/netty/contractimpl/sender/http2/Http2DataEventListener
      60: astore        11
      62: aload         11
      64: aload_0
      65: iload         4
      67: aload         6
      69: iload         7
      71: invokeinterface #107,  5          // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/http2/Http2DataEventListener.onHeadersWrite:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Headers;Z)Z
      76: ifne          80
      79: return
      80: goto          40
      83: aload_3
      84: aload_0
      85: iload         4
      87: aload         6
      89: iload         8
      91: iload         9
      93: iconst_0
      94: iconst_0
      95: iload         7
      97: aload_0
      98: invokeinterface #57,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
     103: invokeinterface #108,  10         // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.writeHeaders:(Lio/netty/channel/ChannelHandlerContext;ILio/netty/handler/codec/http2/Http2Headers;ISZIZLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     108: pop
     109: aload_3
     110: invokeinterface #59,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2ConnectionEncoder.flowController:()Lio/netty/handler/codec/http2/Http2RemoteFlowController;
     115: invokeinterface #60,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController.writePendingBytes:()V
     120: aload_0
     121: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
     126: pop
     127: iload         7
     129: ifeq          137
     132: aload_1
     133: iconst_1
     134: invokevirtual #109                // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.setRequestWritten:(Z)V
     137: return

  public static int initiateStream(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Connection, org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: invokestatic  #63                 // Method getNextStreamId:(Lio/netty/handler/codec/http2/Http2Connection;)I
       4: istore        4
       6: aload_1
       7: iload         4
       9: invokestatic  #110                // Method createStream:(Lio/netty/handler/codec/http2/Http2Connection;I)V
      12: aload_2
      13: iload         4
      15: aload_3
      16: invokevirtual #111                // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.putInFlightMessage:(ILorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)V
      19: aload_2
      20: invokevirtual #102                // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getDataEventListeners:()Ljava/util/List;
      23: aload_0
      24: iload         4
      26: invokedynamic #112,  0            // InvokeDynamic #0:accept:(Lio/netty/channel/ChannelHandlerContext;I)Ljava/util/function/Consumer;
      31: invokeinterface #113,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      36: iload         4
      38: ireturn

  private static synchronized int getNextStreamId(io.netty.handler.codec.http2.Http2Connection);
    Code:
       0: aload_0
       1: invokeinterface #114,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.local:()Lio/netty/handler/codec/http2/Http2Connection$Endpoint;
       6: invokeinterface #115,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Connection$Endpoint.incrementAndGetNextStreamId:()I
      11: ireturn

  private static synchronized void createStream(io.netty.handler.codec.http2.Http2Connection, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokeinterface #114,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.local:()Lio/netty/handler/codec/http2/Http2Connection$Endpoint;
       6: iload_1
       7: iconst_0
       8: invokeinterface #116,  3          // InterfaceMethod io/netty/handler/codec/http2/Http2Connection$Endpoint.createStream:(IZ)Lio/netty/handler/codec/http2/Http2Stream;
      13: pop
      14: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      17: invokeinterface #117,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      22: ifeq          39
      25: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      28: ldc           #118                // String Stream created streamId: {}
      30: iload_1
      31: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: invokeinterface #119,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      39: return

  public static void onPushPromiseRead(org.wso2.transport.http.netty.message.Http2PushPromise, org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder);
    Code:
       0: aload_0
       1: invokevirtual #120                // Method org/wso2/transport/http/netty/message/Http2PushPromise.getStreamId:()I
       4: istore_3
       5: aload_0
       6: invokevirtual #121                // Method org/wso2/transport/http/netty/message/Http2PushPromise.getPromisedStreamId:()I
       9: istore        4
      11: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      14: invokeinterface #117,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      19: ifeq          55
      22: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      25: ldc           #122                // String Received a push promise on channel: {} over stream id: {}, promisedStreamId: {}
      27: iconst_3
      28: anewarray     #123                // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_1
      34: aastore
      35: dup
      36: iconst_1
      37: iload_3
      38: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: aastore
      42: dup
      43: iconst_2
      44: iload         4
      46: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: aastore
      50: invokeinterface #124,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      55: aload_2
      56: ifnonnull     75
      59: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      62: ldc           #125                // String Push promise received in channel: {} over invalid stream id : {}
      64: aload_1
      65: iload_3
      66: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: invokeinterface #126,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      74: return
      75: aload_1
      76: iload         4
      78: aload_2
      79: invokevirtual #127                // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.putPromisedMessage:(ILorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)V
      82: aload_0
      83: aload_2
      84: invokevirtual #128                // Method org/wso2/transport/http/netty/message/Http2PushPromise.setOutboundMsgHolder:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;)V
      87: aload_2
      88: aload_0
      89: invokevirtual #129                // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.addPromise:(Lorg/wso2/transport/http/netty/message/Http2PushPromise;)V
      92: return

  public static void releaseContent(io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: invokeinterface #130,  1          // InterfaceMethod io/netty/handler/codec/http/HttpContent.release:()Z
       6: pop
       7: return

  private static void lambda$initiateStream$33(io.netty.channel.ChannelHandlerContext, int, org.wso2.transport.http.netty.contractimpl.sender.http2.Http2DataEventListener);
    Code:
       0: aload_2
       1: aload_0
       2: iload_1
       3: invokeinterface #131,  3          // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/http2/Http2DataEventListener.onStreamInit:(Lio/netty/channel/ChannelHandlerContext;I)Z
       8: pop
       9: return

  static {};
    Code:
       0: ldc           #132                // class org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil
       2: invokestatic  #133                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
