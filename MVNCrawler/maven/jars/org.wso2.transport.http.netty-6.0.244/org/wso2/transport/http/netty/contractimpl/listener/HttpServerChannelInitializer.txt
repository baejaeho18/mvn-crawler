Compiled from "HttpServerChannelInitializer.java"
public class org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer extends io.netty.channel.ChannelInitializer<io.netty.channel.socket.SocketChannel> {
  private static final org.slf4j.Logger LOG;

  private long socketIdleTimeout;

  private boolean httpTraceLogEnabled;

  private boolean httpAccessLogEnabled;

  private org.wso2.transport.http.netty.contract.config.ChunkConfig chunkConfig;

  private org.wso2.transport.http.netty.contract.config.KeepAliveConfig keepAliveConfig;

  private java.lang.String interfaceId;

  private java.lang.String serverName;

  private org.wso2.transport.http.netty.contractimpl.common.ssl.SSLConfig sslConfig;

  private org.wso2.transport.http.netty.contractimpl.common.ssl.SSLHandlerFactory sslHandlerFactory;

  private javax.net.ssl.SSLContext keystoreSslContext;

  private io.netty.handler.ssl.SslContext certAndKeySslContext;

  private org.wso2.transport.http.netty.contract.ServerConnectorFuture serverConnectorFuture;

  private org.wso2.transport.http.netty.contract.config.RequestSizeValidationConfig reqSizeValidationConfig;

  private boolean http2Enabled;

  private boolean validateCertEnabled;

  private int cacheDelay;

  private int cacheSize;

  private io.netty.channel.group.ChannelGroup allChannels;

  private boolean ocspStaplingEnabled;

  private boolean pipeliningEnabled;

  private long pipeliningLimit;

  private io.netty.util.concurrent.EventExecutorGroup pipeliningGroup;

  public org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method io/netty/channel/ChannelInitializer."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field http2Enabled:Z
       9: aload_0
      10: iconst_0
      11: putfield      #7                  // Field ocspStaplingEnabled:Z
      14: return

  public void initChannel(io.netty.channel.socket.SocketChannel) throws java.lang.Exception;
    Code:
       0: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #9,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          21
      11: getstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #10                 // String Initializing source channel pipeline
      16: invokeinterface #11,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      21: aload_1
      22: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      27: astore_2
      28: aload_0
      29: getfield      #6                  // Field http2Enabled:Z
      32: ifeq          189
      35: aload_0
      36: getfield      #13                 // Field sslHandlerFactory:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;
      39: ifnull        181
      42: aload_0
      43: getfield      #13                 // Field sslHandlerFactory:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;
      46: aload_0
      47: getfield      #7                  // Field ocspStaplingEnabled:Z
      50: invokevirtual #14                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory.createHttp2TLSContextForServer:(Z)Lio/netty/handler/ssl/SslContext;
      53: astore_3
      54: aload_0
      55: getfield      #7                  // Field ocspStaplingEnabled:Z
      58: ifeq          142
      61: aload_0
      62: invokespecial #15                 // Method getOcspResponse:()Lorg/bouncycastle/cert/ocsp/OCSPResp;
      65: astore        4
      67: aload_3
      68: checkcast     #16                 // class io/netty/handler/ssl/ReferenceCountedOpenSslContext
      71: astore        5
      73: aload         5
      75: aload_1
      76: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.alloc:()Lio/netty/buffer/ByteBufAllocator;
      81: invokevirtual #18                 // Method io/netty/handler/ssl/ReferenceCountedOpenSslContext.newHandler:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/handler/ssl/SslHandler;
      84: astore        6
      86: aload         6
      88: invokevirtual #19                 // Method io/netty/handler/ssl/SslHandler.engine:()Ljavax/net/ssl/SSLEngine;
      91: checkcast     #20                 // class io/netty/handler/ssl/ReferenceCountedOpenSslEngine
      94: astore        7
      96: aload         7
      98: aload         4
     100: invokevirtual #21                 // Method org/bouncycastle/cert/ocsp/OCSPResp.getEncoded:()[B
     103: invokevirtual #22                 // Method io/netty/handler/ssl/ReferenceCountedOpenSslEngine.setOcspResponse:([B)V
     106: aload_1
     107: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
     112: iconst_2
     113: anewarray     #23                 // class io/netty/channel/ChannelHandler
     116: dup
     117: iconst_0
     118: aload         6
     120: aastore
     121: dup
     122: iconst_1
     123: new           #24                 // class org/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer$Http2PipelineConfiguratorForServer
     126: dup
     127: aload_0
     128: aload_0
     129: invokespecial #25                 // Method org/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer$Http2PipelineConfiguratorForServer."<init>":(Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;)V
     132: aastore
     133: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     138: pop
     139: goto          178
     142: aload_2
     143: iconst_2
     144: anewarray     #23                 // class io/netty/channel/ChannelHandler
     147: dup
     148: iconst_0
     149: aload_3
     150: aload_1
     151: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.alloc:()Lio/netty/buffer/ByteBufAllocator;
     156: invokevirtual #27                 // Method io/netty/handler/ssl/SslContext.newHandler:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/handler/ssl/SslHandler;
     159: aastore
     160: dup
     161: iconst_1
     162: new           #24                 // class org/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer$Http2PipelineConfiguratorForServer
     165: dup
     166: aload_0
     167: aload_0
     168: invokespecial #25                 // Method org/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer$Http2PipelineConfiguratorForServer."<init>":(Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;)V
     171: aastore
     172: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     177: pop
     178: goto          212
     181: aload_0
     182: aload_2
     183: invokespecial #28                 // Method configureH2cPipeline:(Lio/netty/channel/ChannelPipeline;)V
     186: goto          212
     189: aload_0
     190: getfield      #13                 // Field sslHandlerFactory:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;
     193: ifnull        205
     196: aload_0
     197: aload_2
     198: aload_1
     199: invokespecial #29                 // Method configureSslForHttp:(Lio/netty/channel/ChannelPipeline;Lio/netty/channel/socket/SocketChannel;)V
     202: goto          212
     205: aload_0
     206: aload_2
     207: ldc           #30                 // String http
     209: invokevirtual #31                 // Method configureHttpPipeline:(Lio/netty/channel/ChannelPipeline;Ljava/lang/String;)V
     212: return

  private org.bouncycastle.cert.ocsp.OCSPResp getOcspResponse() throws java.io.IOException, java.security.KeyStoreException, org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.CertificateVerificationException, java.security.cert.CertificateException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
       4: aload_0
       5: getfield      #33                 // Field cacheSize:I
       8: aload_0
       9: getfield      #34                 // Field cacheDelay:I
      12: invokestatic  #35                 // Method org/wso2/transport/http/netty/contractimpl/listener/OCSPResponseBuilder.generateOcspResponse:(Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;II)Lorg/bouncycastle/cert/ocsp/OCSPResp;
      15: astore_1
      16: invokestatic  #36                 // Method io/netty/handler/ssl/OpenSsl.isAvailable:()Z
      19: ifne          32
      22: new           #37                 // class java/lang/IllegalStateException
      25: dup
      26: ldc           #38                 // String OpenSSL is not available!
      28: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: invokestatic  #40                 // Method io/netty/handler/ssl/OpenSsl.isOcspSupported:()Z
      35: ifne          48
      38: new           #37                 // class java/lang/IllegalStateException
      41: dup
      42: ldc           #41                 // String OCSP is not supported!
      44: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_1
      49: areturn

  private void configureSslForHttp(io.netty.channel.ChannelPipeline, io.netty.channel.socket.SocketChannel) throws org.wso2.transport.http.netty.contractimpl.common.certificatevalidation.CertificateVerificationException, java.security.KeyStoreException, java.io.IOException, java.security.cert.CertificateException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field ocspStaplingEnabled:Z
       4: ifeq          81
       7: aload_0
       8: invokespecial #15                 // Method getOcspResponse:()Lorg/bouncycastle/cert/ocsp/OCSPResp;
      11: astore_3
      12: aload_0
      13: getfield      #13                 // Field sslHandlerFactory:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;
      16: aload_0
      17: getfield      #7                  // Field ocspStaplingEnabled:Z
      20: invokevirtual #42                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory.getServerReferenceCountedOpenSslContext:(Z)Lio/netty/handler/ssl/ReferenceCountedOpenSslContext;
      23: astore        4
      25: aload         4
      27: aload_2
      28: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.alloc:()Lio/netty/buffer/ByteBufAllocator;
      33: invokevirtual #18                 // Method io/netty/handler/ssl/ReferenceCountedOpenSslContext.newHandler:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/handler/ssl/SslHandler;
      36: astore        5
      38: aload         5
      40: invokevirtual #19                 // Method io/netty/handler/ssl/SslHandler.engine:()Ljavax/net/ssl/SSLEngine;
      43: checkcast     #20                 // class io/netty/handler/ssl/ReferenceCountedOpenSslEngine
      46: astore        6
      48: aload         6
      50: aload_3
      51: invokevirtual #21                 // Method org/bouncycastle/cert/ocsp/OCSPResp.getEncoded:()[B
      54: invokevirtual #22                 // Method io/netty/handler/ssl/ReferenceCountedOpenSslEngine.setOcspResponse:([B)V
      57: aload_2
      58: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      63: iconst_1
      64: anewarray     #23                 // class io/netty/channel/ChannelHandler
      67: dup
      68: iconst_0
      69: aload         5
      71: aastore
      72: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      77: pop
      78: goto          185
      81: aload_0
      82: getfield      #32                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      85: invokevirtual #43                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig.getServerKeyFile:()Ljava/io/File;
      88: ifnull        124
      91: aload_0
      92: getfield      #44                 // Field certAndKeySslContext:Lio/netty/handler/ssl/SslContext;
      95: aload_2
      96: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.alloc:()Lio/netty/buffer/ByteBufAllocator;
     101: invokevirtual #27                 // Method io/netty/handler/ssl/SslContext.newHandler:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/handler/ssl/SslHandler;
     104: astore        4
     106: aload         4
     108: invokevirtual #19                 // Method io/netty/handler/ssl/SslHandler.engine:()Ljavax/net/ssl/SSLEngine;
     111: astore_3
     112: aload_0
     113: getfield      #13                 // Field sslHandlerFactory:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;
     116: aload_3
     117: invokevirtual #45                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory.addCommonConfigs:(Ljavax/net/ssl/SSLEngine;)Ljavax/net/ssl/SSLEngine;
     120: pop
     121: goto          136
     124: aload_0
     125: getfield      #13                 // Field sslHandlerFactory:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;
     128: aload_0
     129: getfield      #46                 // Field keystoreSslContext:Ljavax/net/ssl/SSLContext;
     132: invokevirtual #47                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory.buildServerSSLEngine:(Ljavax/net/ssl/SSLContext;)Ljavax/net/ssl/SSLEngine;
     135: astore_3
     136: aload_1
     137: ldc           #48                 // String ssl
     139: new           #49                 // class io/netty/handler/ssl/SslHandler
     142: dup
     143: aload_3
     144: invokespecial #50                 // Method io/netty/handler/ssl/SslHandler."<init>":(Ljavax/net/ssl/SSLEngine;)V
     147: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     152: pop
     153: aload_0
     154: getfield      #52                 // Field validateCertEnabled:Z
     157: ifeq          185
     160: aload_1
     161: ldc           #53                 // String certificateValidation
     163: new           #54                 // class org/wso2/transport/http/netty/contractimpl/sender/CertificateValidationHandler
     166: dup
     167: aload_3
     168: aload_0
     169: getfield      #34                 // Field cacheDelay:I
     172: aload_0
     173: getfield      #33                 // Field cacheSize:I
     176: invokespecial #55                 // Method org/wso2/transport/http/netty/contractimpl/sender/CertificateValidationHandler."<init>":(Ljavax/net/ssl/SSLEngine;II)V
     179: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     184: pop
     185: aload_1
     186: ldc           #56                 // String sslHandshakeCompletionHandler
     188: new           #57                 // class org/wso2/transport/http/netty/contractimpl/listener/SslHandshakeCompletionHandlerForServer
     191: dup
     192: aload_0
     193: aload_1
     194: invokespecial #58                 // Method org/wso2/transport/http/netty/contractimpl/listener/SslHandshakeCompletionHandlerForServer."<init>":(Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;Lio/netty/channel/ChannelPipeline;)V
     197: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     202: pop
     203: return

  public void configureHttpPipeline(io.netty.channel.ChannelPipeline, java.lang.String);
    Code:
       0: aload_2
       1: ldc           #30                 // String http
       3: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          144
       9: aload_1
      10: ldc           #60                 // String encoder
      12: new           #61                 // class io/netty/handler/codec/http/HttpResponseEncoder
      15: dup
      16: invokespecial #62                 // Method io/netty/handler/codec/http/HttpResponseEncoder."<init>":()V
      19: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      24: pop
      25: aload_1
      26: ldc           #63                 // String decoder
      28: new           #64                 // class io/netty/handler/codec/http/HttpRequestDecoder
      31: dup
      32: aload_0
      33: getfield      #65                 // Field reqSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
      36: invokevirtual #66                 // Method org/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig.getMaxUriLength:()I
      39: aload_0
      40: getfield      #65                 // Field reqSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
      43: invokevirtual #67                 // Method org/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig.getMaxHeaderSize:()I
      46: aload_0
      47: getfield      #65                 // Field reqSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
      50: invokevirtual #68                 // Method org/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig.getMaxChunkSize:()I
      53: invokespecial #69                 // Method io/netty/handler/codec/http/HttpRequestDecoder."<init>":(III)V
      56: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      61: pop
      62: aload_1
      63: ldc           #70                 // String compressor
      65: new           #71                 // class org/wso2/transport/http/netty/contractimpl/listener/CustomHttpContentCompressor
      68: dup
      69: invokespecial #72                 // Method org/wso2/transport/http/netty/contractimpl/listener/CustomHttpContentCompressor."<init>":()V
      72: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      77: pop
      78: aload_1
      79: ldc           #73                 // String chunkWriter
      81: new           #74                 // class io/netty/handler/stream/ChunkedWriteHandler
      84: dup
      85: invokespecial #75                 // Method io/netty/handler/stream/ChunkedWriteHandler."<init>":()V
      88: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      93: pop
      94: aload_0
      95: getfield      #76                 // Field httpTraceLogEnabled:Z
      98: ifeq          119
     101: aload_1
     102: ldc           #77                 // String http-trace-logger
     104: new           #78                 // class org/wso2/transport/http/netty/contractimpl/listener/HttpTraceLoggingHandler
     107: dup
     108: ldc           #79                 // String http.tracelog.downstream
     110: invokespecial #80                 // Method org/wso2/transport/http/netty/contractimpl/listener/HttpTraceLoggingHandler."<init>":(Ljava/lang/String;)V
     113: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     118: pop
     119: aload_0
     120: getfield      #81                 // Field httpAccessLogEnabled:Z
     123: ifeq          144
     126: aload_1
     127: ldc           #82                 // String http-access-logger
     129: new           #83                 // class org/wso2/transport/http/netty/contractimpl/listener/HttpAccessLoggingHandler
     132: dup
     133: ldc           #84                 // String http.accesslog
     135: invokespecial #85                 // Method org/wso2/transport/http/netty/contractimpl/listener/HttpAccessLoggingHandler."<init>":(Ljava/lang/String;)V
     138: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     143: pop
     144: aload_1
     145: ldc           #86                 // String uriLengthValidator
     147: new           #87                 // class org/wso2/transport/http/netty/contractimpl/listener/UriAndHeaderLengthValidator
     150: dup
     151: aload_0
     152: getfield      #2                  // Field serverName:Ljava/lang/String;
     155: invokespecial #88                 // Method org/wso2/transport/http/netty/contractimpl/listener/UriAndHeaderLengthValidator."<init>":(Ljava/lang/String;)V
     158: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     163: pop
     164: aload_0
     165: getfield      #65                 // Field reqSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
     168: invokevirtual #89                 // Method org/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig.getMaxEntityBodySize:()J
     171: ldc2_w        #90                 // long -1l
     174: lcmp
     175: ifle          205
     178: aload_1
     179: ldc           #92                 // String maxEntityBodyValidator
     181: new           #93                 // class org/wso2/transport/http/netty/contractimpl/listener/MaxEntityBodyValidator
     184: dup
     185: aload_0
     186: getfield      #2                  // Field serverName:Ljava/lang/String;
     189: aload_0
     190: getfield      #65                 // Field reqSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
     193: invokevirtual #89                 // Method org/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig.getMaxEntityBodySize:()J
     196: invokespecial #94                 // Method org/wso2/transport/http/netty/contractimpl/listener/MaxEntityBodyValidator."<init>":(Ljava/lang/String;J)V
     199: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     204: pop
     205: aload_1
     206: ldc           #95                 // String websocket-server-handshake-handler
     208: new           #96                 // class org/wso2/transport/http/netty/contractimpl/listener/WebSocketServerHandshakeHandler
     211: dup
     212: aload_0
     213: getfield      #3                  // Field serverConnectorFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
     216: aload_0
     217: getfield      #4                  // Field interfaceId:Ljava/lang/String;
     220: invokespecial #97                 // Method org/wso2/transport/http/netty/contractimpl/listener/WebSocketServerHandshakeHandler."<init>":(Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;Ljava/lang/String;)V
     223: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     228: pop
     229: aload_1
     230: ldc           #98                 // String BackPressureHandler
     232: new           #99                 // class org/wso2/transport/http/netty/contractimpl/common/BackPressureHandler
     235: dup
     236: invokespecial #100                // Method org/wso2/transport/http/netty/contractimpl/common/BackPressureHandler."<init>":()V
     239: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     244: pop
     245: aload_1
     246: ldc           #101                // String SourceHandler
     248: new           #102                // class org/wso2/transport/http/netty/contractimpl/listener/SourceHandler
     251: dup
     252: aload_0
     253: getfield      #3                  // Field serverConnectorFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
     256: aload_0
     257: getfield      #4                  // Field interfaceId:Ljava/lang/String;
     260: aload_0
     261: getfield      #103                // Field chunkConfig:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
     264: aload_0
     265: getfield      #104                // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
     268: aload_0
     269: getfield      #2                  // Field serverName:Ljava/lang/String;
     272: aload_0
     273: getfield      #105                // Field allChannels:Lio/netty/channel/group/ChannelGroup;
     276: aload_0
     277: getfield      #106                // Field pipeliningEnabled:Z
     280: aload_0
     281: getfield      #107                // Field pipeliningLimit:J
     284: aload_0
     285: getfield      #108                // Field pipeliningGroup:Lio/netty/util/concurrent/EventExecutorGroup;
     288: invokespecial #109                // Method org/wso2/transport/http/netty/contractimpl/listener/SourceHandler."<init>":(Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;Ljava/lang/String;Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;Ljava/lang/String;Lio/netty/channel/group/ChannelGroup;ZJLio/netty/util/concurrent/EventExecutorGroup;)V
     291: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     296: pop
     297: aload_0
     298: getfield      #110                // Field socketIdleTimeout:J
     301: lconst_0
     302: lcmp
     303: iflt          333
     306: aload_1
     307: ldc           #101                // String SourceHandler
     309: ldc           #111                // String idleStateHandler
     311: new           #112                // class io/netty/handler/timeout/IdleStateHandler
     314: dup
     315: lconst_0
     316: lconst_0
     317: aload_0
     318: getfield      #110                // Field socketIdleTimeout:J
     321: getstatic     #113                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     324: invokespecial #114                // Method io/netty/handler/timeout/IdleStateHandler."<init>":(JJJLjava/util/concurrent/TimeUnit;)V
     327: invokeinterface #115,  4          // InterfaceMethod io/netty/channel/ChannelPipeline.addBefore:(Ljava/lang/String;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     332: pop
     333: return

  private void configureH2cPipeline(io.netty.channel.ChannelPipeline);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #23                 // class io/netty/channel/ChannelHandler
       5: dup
       6: iconst_0
       7: new           #116                // class org/wso2/transport/http/netty/contractimpl/listener/http2/Http2WithPriorKnowledgeHandler
      10: dup
      11: aload_0
      12: getfield      #4                  // Field interfaceId:Ljava/lang/String;
      15: aload_0
      16: getfield      #2                  // Field serverName:Ljava/lang/String;
      19: aload_0
      20: getfield      #3                  // Field serverConnectorFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      23: aload_0
      24: invokespecial #117                // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2WithPriorKnowledgeHandler."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;)V
      27: aastore
      28: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      33: pop
      34: new           #118                // class io/netty/handler/codec/http/HttpServerCodec
      37: dup
      38: aload_0
      39: getfield      #65                 // Field reqSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
      42: invokevirtual #66                 // Method org/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig.getMaxUriLength:()I
      45: aload_0
      46: getfield      #65                 // Field reqSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
      49: invokevirtual #67                 // Method org/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig.getMaxHeaderSize:()I
      52: aload_0
      53: getfield      #65                 // Field reqSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
      56: invokevirtual #68                 // Method org/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig.getMaxChunkSize:()I
      59: invokespecial #119                // Method io/netty/handler/codec/http/HttpServerCodec."<init>":(III)V
      62: astore_2
      63: aload_0
      64: invokedynamic #120,  0            // InvokeDynamic #0:newUpgradeCodec:(Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;)Lio/netty/handler/codec/http/HttpServerUpgradeHandler$UpgradeCodecFactory;
      69: astore_3
      70: aload_1
      71: ldc           #121                // String ServerCodec
      73: aload_2
      74: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      79: pop
      80: aload_1
      81: ldc           #70                 // String compressor
      83: new           #71                 // class org/wso2/transport/http/netty/contractimpl/listener/CustomHttpContentCompressor
      86: dup
      87: invokespecial #72                 // Method org/wso2/transport/http/netty/contractimpl/listener/CustomHttpContentCompressor."<init>":()V
      90: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      95: pop
      96: aload_0
      97: getfield      #76                 // Field httpTraceLogEnabled:Z
     100: ifeq          121
     103: aload_1
     104: ldc           #77                 // String http-trace-logger
     106: new           #78                 // class org/wso2/transport/http/netty/contractimpl/listener/HttpTraceLoggingHandler
     109: dup
     110: ldc           #79                 // String http.tracelog.downstream
     112: invokespecial #80                 // Method org/wso2/transport/http/netty/contractimpl/listener/HttpTraceLoggingHandler."<init>":(Ljava/lang/String;)V
     115: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     120: pop
     121: aload_0
     122: getfield      #81                 // Field httpAccessLogEnabled:Z
     125: ifeq          146
     128: aload_1
     129: ldc           #82                 // String http-access-logger
     131: new           #83                 // class org/wso2/transport/http/netty/contractimpl/listener/HttpAccessLoggingHandler
     134: dup
     135: ldc           #84                 // String http.accesslog
     137: invokespecial #85                 // Method org/wso2/transport/http/netty/contractimpl/listener/HttpAccessLoggingHandler."<init>":(Ljava/lang/String;)V
     140: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     145: pop
     146: aload_1
     147: ldc           #122                // String Http2UpgradeHandler
     149: new           #123                // class io/netty/handler/codec/http/HttpServerUpgradeHandler
     152: dup
     153: aload_2
     154: aload_3
     155: ldc           #125                // int 2147483647
     157: invokespecial #126                // Method io/netty/handler/codec/http/HttpServerUpgradeHandler."<init>":(Lio/netty/handler/codec/http/HttpServerUpgradeHandler$SourceCodec;Lio/netty/handler/codec/http/HttpServerUpgradeHandler$UpgradeCodecFactory;I)V
     160: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     165: pop
     166: aload_1
     167: ldc           #127                // String Http2ToHttpFallbackHandler
     169: new           #128                // class org/wso2/transport/http/netty/contractimpl/listener/http2/Http2ToHttpFallbackHandler
     172: dup
     173: aload_0
     174: invokespecial #129                // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2ToHttpFallbackHandler."<init>":(Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;)V
     177: invokeinterface #51,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     182: pop
     183: return

  public void setServerConnectorFuture(org.wso2.transport.http.netty.contract.ServerConnectorFuture);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field serverConnectorFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
       5: return

  void setIdleTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #110                // Field socketIdleTimeout:J
       5: return

  void setHttpTraceLogEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #76                 // Field httpTraceLogEnabled:Z
       5: return

  void setHttpAccessLogEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #81                 // Field httpAccessLogEnabled:Z
       5: return

  public boolean isHttpTraceLogEnabled();
    Code:
       0: aload_0
       1: getfield      #76                 // Field httpTraceLogEnabled:Z
       4: ireturn

  public boolean isHttpAccessLogEnabled();
    Code:
       0: aload_0
       1: getfield      #81                 // Field httpAccessLogEnabled:Z
       4: ireturn

  void setInterfaceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field interfaceId:Ljava/lang/String;
       5: return

  void setSslConfig(org.wso2.transport.http.netty.contractimpl.common.ssl.SSLConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
       5: return

  void setSslHandlerFactory(org.wso2.transport.http.netty.contractimpl.common.ssl.SSLHandlerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field sslHandlerFactory:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;
       5: return

  void setKeystoreSslContext(javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field keystoreSslContext:Ljavax/net/ssl/SSLContext;
       5: return

  void setCertandKeySslContext(io.netty.handler.ssl.SslContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field certAndKeySslContext:Lio/netty/handler/ssl/SslContext;
       5: return

  void setReqSizeValidationConfig(org.wso2.transport.http.netty.contract.config.RequestSizeValidationConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field reqSizeValidationConfig:Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
       5: return

  public void setChunkingConfig(org.wso2.transport.http.netty.contract.config.ChunkConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #103                // Field chunkConfig:Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
       5: return

  void setKeepAliveConfig(org.wso2.transport.http.netty.contract.config.KeepAliveConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #104                // Field keepAliveConfig:Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
       5: return

  void setValidateCertEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #52                 // Field validateCertEnabled:Z
       5: return

  void setCacheDelay(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field cacheDelay:I
       5: return

  void setCacheSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field cacheSize:I
       5: return

  void setServerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field serverName:Ljava/lang/String;
       5: return

  void setOcspStaplingEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field ocspStaplingEnabled:Z
       5: return

  void setHttp2Enabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field http2Enabled:Z
       5: return

  void setPipeliningEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #106                // Field pipeliningEnabled:Z
       5: return

  public void setPipeliningLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #107                // Field pipeliningLimit:J
       5: return

  public void setPipeliningThreadGroup(io.netty.util.concurrent.EventExecutorGroup);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field pipeliningGroup:Lio/netty/util/concurrent/EventExecutorGroup;
       5: return

  void setAllChannels(io.netty.channel.group.ChannelGroup);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #105                // Field allChannels:Lio/netty/channel/group/ChannelGroup;
       5: return

  public void initChannel(io.netty.channel.Channel) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #130                // class io/netty/channel/socket/SocketChannel
       5: invokevirtual #131                // Method initChannel:(Lio/netty/channel/socket/SocketChannel;)V
       8: return

  private io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeCodec lambda$configureH2cPipeline$3(java.lang.CharSequence);
    Code:
       0: getstatic     #132                // Field io/netty/handler/codec/http2/Http2CodecUtil.HTTP_UPGRADE_PROTOCOL_NAME:Ljava/lang/CharSequence;
       3: aload_1
       4: invokestatic  #133                // Method io/netty/util/AsciiString.contentEquals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
       7: ifeq          43
      10: new           #134                // class io/netty/handler/codec/http2/Http2ServerUpgradeCodec
      13: dup
      14: ldc           #135                // String Http2SourceConnectionHandler
      16: new           #136                // class org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceConnectionHandlerBuilder
      19: dup
      20: aload_0
      21: getfield      #4                  // Field interfaceId:Ljava/lang/String;
      24: aload_0
      25: getfield      #3                  // Field serverConnectorFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
      28: aload_0
      29: getfield      #2                  // Field serverName:Ljava/lang/String;
      32: aload_0
      33: invokespecial #137                // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceConnectionHandlerBuilder."<init>":(Ljava/lang/String;Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;Ljava/lang/String;Lorg/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer;)V
      36: invokevirtual #138                // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceConnectionHandlerBuilder.build:()Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceConnectionHandler;
      39: invokespecial #139                // Method io/netty/handler/codec/http2/Http2ServerUpgradeCodec."<init>":(Ljava/lang/String;Lio/netty/handler/codec/http2/Http2ConnectionHandler;)V
      42: areturn
      43: aconst_null
      44: areturn

  static java.lang.String access$000(org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field interfaceId:Ljava/lang/String;
       4: areturn

  static org.wso2.transport.http.netty.contract.ServerConnectorFuture access$100(org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field serverConnectorFuture:Lorg/wso2/transport/http/netty/contract/ServerConnectorFuture;
       4: areturn

  static java.lang.String access$200(org.wso2.transport.http.netty.contractimpl.listener.HttpServerChannelInitializer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field serverName:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: ldc           #140                // class org/wso2/transport/http/netty/contractimpl/listener/HttpServerChannelInitializer
       2: invokestatic  #141                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #8                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
