Compiled from "Http2TargetHandler.java"
public class org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler$Http2RequestWriter {
  org.wso2.transport.http.netty.message.HttpCarbonMessage httpOutboundRequest;

  org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder outboundMsgHolder;

  org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext http2MessageStateContext;

  int streamId;

  final org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler this$0;

  org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler$Http2RequestWriter(org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      14: aload_0
      15: aload_2
      16: invokevirtual #4                  // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getRequest:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      19: putfield      #5                  // Field httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      22: aload_0
      23: aload_0
      24: getfield      #5                  // Field httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      27: invokevirtual #6                  // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttp2MessageStateContext:()Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      30: putfield      #7                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      33: aload_0
      34: getfield      #7                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      37: ifnonnull     62
      40: aload_0
      41: new           #8                  // class org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext
      44: dup
      45: invokespecial #9                  // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext."<init>":()V
      48: putfield      #7                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      51: aload_0
      52: getfield      #5                  // Field httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      55: aload_0
      56: getfield      #7                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      59: invokevirtual #10                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setHttp2MessageStateContext:(Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      62: return

  void writeContent(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #5                  // Field httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       4: invokevirtual #6                  // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttp2MessageStateContext:()Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       7: new           #11                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/SendingHeaders
      10: dup
      11: aload_0
      12: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      15: aload_0
      16: invokespecial #12                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/SendingHeaders."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
      19: invokevirtual #13                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
      22: aload_0
      23: getfield      #5                  // Field httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      26: invokevirtual #14                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttpContentAsync:()Lorg/wso2/transport/http/netty/message/MessageFuture;
      29: aload_0
      30: aload_1
      31: invokedynamic #15,  0             // InvokeDynamic #0:onMessage:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;Lio/netty/channel/ChannelHandlerContext;)Lorg/wso2/transport/http/netty/message/MessageListener;
      36: invokevirtual #16                 // Method org/wso2/transport/http/netty/message/MessageFuture.setMessageListener:(Lorg/wso2/transport/http/netty/message/MessageListener;)V
      39: return

  private void writeOutboundRequest(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       4: invokevirtual #17                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getSenderState:()Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;
       7: aload_1
       8: aload_2
       9: aload_0
      10: getfield      #7                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      13: invokeinterface #18,  4           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState.writeOutboundRequestBody:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpContent;Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      18: goto          71
      21: astore_3
      22: aload_0
      23: getfield      #5                  // Field httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      26: invokevirtual #6                  // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttp2MessageStateContext:()Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      29: new           #20                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/SendingEntityBody
      32: dup
      33: aload_0
      34: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      37: aload_0
      38: invokespecial #21                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/SendingEntityBody."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
      41: invokevirtual #13                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
      44: aload_0
      45: getfield      #5                  // Field httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      48: invokevirtual #6                  // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttp2MessageStateContext:()Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      51: invokevirtual #17                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getSenderState:()Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;
      54: aload_1
      55: new           #22                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      58: dup
      59: invokespecial #23                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
      62: aload_0
      63: getfield      #7                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      66: invokeinterface #18,  4           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState.writeOutboundRequestBody:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpContent;Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      71: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/RuntimeException

  public org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext getHttp2MessageStateContext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       4: areturn

  public org.wso2.transport.http.netty.message.HttpCarbonMessage getHttpOutboundRequest();
    Code:
       0: aload_0
       1: getfield      #5                  // Field httpOutboundRequest:Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       4: areturn

  public org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder getOutboundMsgHolder();
    Code:
       0: aload_0
       1: getfield      #3                  // Field outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
       4: areturn

  public int getStreamId();
    Code:
       0: aload_0
       1: getfield      #24                 // Field streamId:I
       4: ireturn

  public void setStreamId(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field streamId:I
       5: return

  private void lambda$writeContent$30(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
       4: invokestatic  #25                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler.access$000:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;)Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
       7: invokevirtual #26                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getChannel:()Lio/netty/channel/Channel;
      10: invokeinterface #27,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokedynamic #28,  0             // InvokeDynamic #1:run:(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpContent;)Ljava/lang/Runnable;
      23: invokeinterface #29,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      28: return

  private void lambda$null$29(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #30                 // Method writeOutboundRequest:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpContent;)V
       6: goto          54
       9: astore_3
      10: invokestatic  #32                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler.access$100:()Lorg/slf4j/Logger;
      13: new           #33                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #35                 // String Failed to send the request :
      22: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_3
      26: invokevirtual #37                 // Method io/netty/handler/codec/http2/Http2Exception.getMessage:()Ljava/lang/String;
      29: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: aload_3
      36: invokeinterface #39,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      41: aload_0
      42: getfield      #3                  // Field outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      45: invokevirtual #40                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getResponseFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      48: aload_3
      49: invokeinterface #41,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      54: return
    Exception table:
       from    to  target type
           0     6     9   Class io/netty/handler/codec/http2/Http2Exception
}
