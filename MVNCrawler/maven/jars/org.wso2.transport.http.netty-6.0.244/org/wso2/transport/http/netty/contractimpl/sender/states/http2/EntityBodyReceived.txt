Compiled from "EntityBodyReceived.java"
public class org.wso2.transport.http.netty.contractimpl.sender.states.http2.EntityBodyReceived implements org.wso2.transport.http.netty.contractimpl.sender.states.http2.SenderState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler http2TargetHandler;

  private org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler$Http2RequestWriter http2RequestWriter;

  private org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder outboundMsgHolder;

  org.wso2.transport.http.netty.contractimpl.sender.states.http2.EntityBodyReceived(org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler, org.wso2.transport.http.netty.contractimpl.sender.http2.Http2TargetHandler$Http2RequestWriter);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
       9: aload_2
      10: ifnull        26
      13: aload_0
      14: aload_2
      15: putfield      #4                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      18: aload_0
      19: aload_2
      20: invokevirtual #5                  // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter.getOutboundMsgHolder:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      23: putfield      #6                  // Field outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      26: return

  public void writeOutboundRequestHeaders(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent);
    Code:
       0: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #8                  // String writeOutboundRequestHeaders is not a dependant action of this state
       5: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void writeOutboundRequestBody(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
       4: ifnull        89
       7: aload_0
       8: getfield      #6                  // Field outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      11: ifnull        89
      14: aload_0
      15: getfield      #6                  // Field outboundMsgHolder:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;
      18: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder.getRequest:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      21: new           #11                 // class java/io/IOException
      24: dup
      25: ldc           #12                 // String Inbound response message already received
      27: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      30: invokevirtual #14                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setIoException:(Ljava/io/IOException;)V
      33: aload_3
      34: new           #15                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/SendingEntityBody
      37: dup
      38: aload_0
      39: getfield      #3                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      42: aload_0
      43: getfield      #4                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      46: invokespecial #16                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/SendingEntityBody."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
      49: invokevirtual #17                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
      52: aload_3
      53: invokevirtual #18                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getSenderState:()Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;
      56: aload_1
      57: new           #19                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      60: dup
      61: invokespecial #20                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
      64: aload_3
      65: invokeinterface #21,  4           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState.writeOutboundRequestBody:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpContent;Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      70: aload_3
      71: new           #22                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/EntityBodyReceived
      74: dup
      75: aload_0
      76: getfield      #3                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      79: aload_0
      80: getfield      #4                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      83: invokespecial #23                 // Method "<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
      86: invokevirtual #17                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
      89: aload_2
      90: invokestatic  #24                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.releaseContent:(Lio/netty/handler/codec/http/HttpContent;)V
      93: return

  public void readInboundResponseHeaders(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.message.Http2HeadersFrame, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, boolean, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload         5
       2: new           #25                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/ReceivingHeaders
       5: dup
       6: aload_0
       7: getfield      #3                  // Field http2TargetHandler:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;
      10: aload_0
      11: getfield      #4                  // Field http2RequestWriter:Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;
      14: invokespecial #26                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/http2/ReceivingHeaders."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2TargetHandler$Http2RequestWriter;)V
      17: invokevirtual #17                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;)V
      20: aload         5
      22: invokevirtual #18                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getSenderState:()Lorg/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState;
      25: aload_1
      26: aload_2
      27: aload_3
      28: iload         4
      30: aload         5
      32: invokeinterface #27,  6           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/states/http2/SenderState.readInboundResponseHeaders:(Lio/netty/channel/ChannelHandlerContext;Lorg/wso2/transport/http/netty/message/Http2HeadersFrame;Lorg/wso2/transport/http/netty/contractimpl/sender/http2/OutboundMsgHolder;ZLorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      37: return

  public void readInboundResponseBody(io.netty.channel.ChannelHandlerContext, org.wso2.transport.http.netty.message.Http2DataFrame, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder, boolean, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #28                 // String readInboundResponseBody is not a dependant action of this state
       5: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void readInboundPromise(org.wso2.transport.http.netty.message.Http2PushPromise, org.wso2.transport.http.netty.contractimpl.sender.http2.OutboundMsgHolder);
    Code:
       0: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #29                 // String readInboundPromise is not a dependant action of this state
       5: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  static {};
    Code:
       0: ldc           #22                 // class org/wso2/transport/http/netty/contractimpl/sender/states/http2/EntityBodyReceived
       2: invokestatic  #30                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
