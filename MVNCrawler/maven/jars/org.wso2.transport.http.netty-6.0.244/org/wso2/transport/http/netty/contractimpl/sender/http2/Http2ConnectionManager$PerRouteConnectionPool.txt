Compiled from "Http2ConnectionManager.java"
class org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ConnectionManager$PerRouteConnectionPool {
  private java.util.concurrent.BlockingQueue<org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel> http2ClientChannels;

  private int maxActiveStreams;

  org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ConnectionManager$PerRouteConnectionPool(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/LinkedBlockingQueue
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      12: putfield      #4                  // Field http2ClientChannels:Ljava/util/concurrent/BlockingQueue;
      15: aload_0
      16: iload_1
      17: putfield      #5                  // Field maxActiveStreams:I
      20: return

  org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel fetchTargetChannel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field http2ClientChannels:Ljava/util/concurrent/BlockingQueue;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/BlockingQueue.isEmpty:()Z
       9: ifne          111
      12: aload_0
      13: getfield      #4                  // Field http2ClientChannels:Ljava/util/concurrent/BlockingQueue;
      16: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/BlockingQueue.peek:()Ljava/lang/Object;
      21: checkcast     #8                  // class org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel
      24: astore_1
      25: aload_1
      26: invokevirtual #9                  // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.getChannel:()Lio/netty/channel/Channel;
      29: astore_2
      30: aload_2
      31: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      36: ifne          55
      39: aload_0
      40: getfield      #4                  // Field http2ClientChannels:Ljava/util/concurrent/BlockingQueue;
      43: aload_1
      44: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.remove:(Ljava/lang/Object;)Z
      49: pop
      50: aload_0
      51: invokevirtual #12                 // Method fetchTargetChannel:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
      54: areturn
      55: aload_1
      56: invokevirtual #13                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.incrementActiveStreamCount:()I
      59: istore_3
      60: iload_3
      61: aload_0
      62: getfield      #5                  // Field maxActiveStreams:I
      65: if_icmpge     70
      68: aload_1
      69: areturn
      70: iload_3
      71: aload_0
      72: getfield      #5                  // Field maxActiveStreams:I
      75: if_icmpne     95
      78: aload_1
      79: invokevirtual #14                 // Method org/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel.markAsExhausted:()V
      82: aload_0
      83: getfield      #4                  // Field http2ClientChannels:Ljava/util/concurrent/BlockingQueue;
      86: aload_1
      87: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.remove:(Ljava/lang/Object;)Z
      92: pop
      93: aload_1
      94: areturn
      95: aload_0
      96: getfield      #4                  // Field http2ClientChannels:Ljava/util/concurrent/BlockingQueue;
      99: aload_1
     100: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.remove:(Ljava/lang/Object;)Z
     105: pop
     106: aload_0
     107: invokevirtual #12                 // Method fetchTargetChannel:()Lorg/wso2/transport/http/netty/contractimpl/sender/http2/Http2ClientChannel;
     110: areturn
     111: aconst_null
     112: areturn

  void addChannel(org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field http2ClientChannels:Ljava/util/concurrent/BlockingQueue;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  void removeChannel(org.wso2.transport.http.netty.contractimpl.sender.http2.Http2ClientChannel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field http2ClientChannels:Ljava/util/concurrent/BlockingQueue;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return
}
