Compiled from "MessageQueueHandler.java"
public class org.wso2.transport.http.netty.contractimpl.listener.MessageQueueHandler extends io.netty.channel.ChannelInboundHandlerAdapter {
  private final java.util.Queue<java.lang.Object> messageQueue;

  private io.netty.channel.ChannelHandlerContext ctx;

  private boolean readNext;

  public org.wso2.transport.http.netty.contractimpl.listener.MessageQueueHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedList
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #4                  // Field messageQueue:Ljava/util/Queue;
      15: return

  public synchronized void handlerAdded(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: return

  public synchronized void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field readNext:Z
       4: ifeq          21
       7: aload_0
       8: iconst_0
       9: putfield      #6                  // Field readNext:Z
      12: aload_1
      13: aload_2
      14: invokeinterface #7,  2            // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      19: pop
      20: return
      21: aload_0
      22: getfield      #4                  // Field messageQueue:Ljava/util/Queue;
      25: aload_2
      26: invokeinterface #8,  2            // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      31: pop
      32: return

  public synchronized void readNextFrame();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: ifnonnull     17
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #10                 // String Cannot call readNextFrame() without an initialized ChannelHandlerContext
      13: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field messageQueue:Ljava/util/Queue;
      21: invokeinterface #12,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      26: ifeq          50
      29: aload_0
      30: iconst_1
      31: putfield      #6                  // Field readNext:Z
      34: aload_0
      35: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      38: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      43: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/Channel.read:()Lio/netty/channel/Channel;
      48: pop
      49: return
      50: aload_0
      51: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      54: aload_0
      55: getfield      #4                  // Field messageQueue:Ljava/util/Queue;
      58: invokeinterface #15,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      63: invokeinterface #7,  2            // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      68: pop
      69: return
}
