Compiled from "RequestCompleted.java"
public class org.wso2.transport.http.netty.contractimpl.sender.states.RequestCompleted implements org.wso2.transport.http.netty.contractimpl.sender.states.SenderState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext messageStateContext;

  org.wso2.transport.http.netty.contractimpl.sender.states.RequestCompleted(org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
       9: return

  public void writeOutboundRequestHeaders(org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent);
    Code:
       0: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #6                  // String writeOutboundRequestHeaders {}
       5: ldc           #7                  // String is not a dependant action of this state
       7: invokeinterface #8,  3            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void writeOutboundRequestEntity(org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent);
    Code:
       0: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #9                  // String writeOutboundRequestEntity {}
       5: ldc           #7                  // String is not a dependant action of this state
       7: invokeinterface #8,  3            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void readInboundResponseHeaders(org.wso2.transport.http.netty.contractimpl.sender.TargetHandler, io.netty.handler.codec.http.HttpResponse);
    Code:
       0: aload_0
       1: getfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
       4: new           #10                 // class org/wso2/transport/http/netty/contractimpl/sender/states/ReceivingHeaders
       7: dup
       8: aload_0
       9: getfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      12: invokespecial #11                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/ReceivingHeaders."<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;)V
      15: invokevirtual #12                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/SenderState;)V
      18: aload_0
      19: getfield      #4                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      22: invokevirtual #13                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.getSenderState:()Lorg/wso2/transport/http/netty/contractimpl/sender/states/SenderState;
      25: aload_1
      26: aload_2
      27: invokeinterface #14,  3           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/states/SenderState.readInboundResponseHeaders:(Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;Lio/netty/handler/codec/http/HttpResponse;)V
      32: return

  public void readInboundResponseEntityBody(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent, org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #15                 // String readInboundResponseEntityBody {}
       5: ldc           #7                  // String is not a dependant action of this state
       7: invokeinterface #8,  3            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void handleAbruptChannelClosure(org.wso2.transport.http.netty.contract.HttpResponseFuture);
    Code:
       0: aload_1
       1: new           #16                 // class org/wso2/transport/http/netty/contract/ServerConnectorException
       4: dup
       5: ldc           #17                 // String Remote host closed the connection before initiating inbound response
       7: invokespecial #18                 // Method org/wso2/transport/http/netty/contract/ServerConnectorException."<init>":(Ljava/lang/String;)V
      10: invokeinterface #19,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      15: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      18: ldc           #17                 // String Remote host closed the connection before initiating inbound response
      20: invokeinterface #20,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      25: return

  public void handleIdleTimeoutConnectionClosure(org.wso2.transport.http.netty.contract.HttpResponseFuture, java.lang.String);
    Code:
       0: aload_1
       1: new           #21                 // class org/wso2/transport/http/netty/contract/EndpointTimeOutException
       4: dup
       5: aload_2
       6: ldc           #22                 // String Idle timeout triggered before initiating inbound response
       8: getstatic     #23                 // Field io/netty/handler/codec/http/HttpResponseStatus.GATEWAY_TIMEOUT:Lio/netty/handler/codec/http/HttpResponseStatus;
      11: invokevirtual #24                 // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
      14: invokespecial #25                 // Method org/wso2/transport/http/netty/contract/EndpointTimeOutException."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
      17: invokeinterface #19,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      22: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      25: ldc           #26                 // String Error in HTTP client: {}
      27: ldc           #22                 // String Idle timeout triggered before initiating inbound response
      29: invokeinterface #27,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      34: return

  static {};
    Code:
       0: ldc           #28                 // class org/wso2/transport/http/netty/contractimpl/sender/states/RequestCompleted
       2: invokestatic  #29                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
