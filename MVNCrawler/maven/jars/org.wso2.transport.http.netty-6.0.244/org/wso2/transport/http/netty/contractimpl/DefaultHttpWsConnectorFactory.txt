Compiled from "DefaultHttpWsConnectorFactory.java"
public class org.wso2.transport.http.netty.contractimpl.DefaultHttpWsConnectorFactory implements org.wso2.transport.http.netty.contract.HttpWsConnectorFactory {
  private final io.netty.channel.EventLoopGroup bossGroup;

  private final io.netty.channel.EventLoopGroup workerGroup;

  private final io.netty.channel.EventLoopGroup clientGroup;

  private io.netty.util.concurrent.EventExecutorGroup pipeliningGroup;

  private final io.netty.channel.group.ChannelGroup allChannels;

  public org.wso2.transport.http.netty.contractimpl.DefaultHttpWsConnectorFactory();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class io/netty/channel/group/DefaultChannelGroup
       8: dup
       9: getstatic     #4                  // Field io/netty/util/concurrent/GlobalEventExecutor.INSTANCE:Lio/netty/util/concurrent/GlobalEventExecutor;
      12: invokespecial #5                  // Method io/netty/channel/group/DefaultChannelGroup."<init>":(Lio/netty/util/concurrent/EventExecutor;)V
      15: putfield      #6                  // Field allChannels:Lio/netty/channel/group/ChannelGroup;
      18: aload_0
      19: new           #7                  // class io/netty/channel/nio/NioEventLoopGroup
      22: dup
      23: invokestatic  #8                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      26: invokevirtual #9                  // Method java/lang/Runtime.availableProcessors:()I
      29: invokespecial #10                 // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(I)V
      32: putfield      #11                 // Field bossGroup:Lio/netty/channel/EventLoopGroup;
      35: aload_0
      36: new           #7                  // class io/netty/channel/nio/NioEventLoopGroup
      39: dup
      40: invokestatic  #8                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      43: invokevirtual #9                  // Method java/lang/Runtime.availableProcessors:()I
      46: iconst_2
      47: imul
      48: invokespecial #10                 // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(I)V
      51: putfield      #12                 // Field workerGroup:Lio/netty/channel/EventLoopGroup;
      54: aload_0
      55: new           #7                  // class io/netty/channel/nio/NioEventLoopGroup
      58: dup
      59: invokestatic  #8                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      62: invokevirtual #9                  // Method java/lang/Runtime.availableProcessors:()I
      65: iconst_2
      66: imul
      67: invokespecial #10                 // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(I)V
      70: putfield      #13                 // Field clientGroup:Lio/netty/channel/EventLoopGroup;
      73: return

  public org.wso2.transport.http.netty.contractimpl.DefaultHttpWsConnectorFactory(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class io/netty/channel/group/DefaultChannelGroup
       8: dup
       9: getstatic     #4                  // Field io/netty/util/concurrent/GlobalEventExecutor.INSTANCE:Lio/netty/util/concurrent/GlobalEventExecutor;
      12: invokespecial #5                  // Method io/netty/channel/group/DefaultChannelGroup."<init>":(Lio/netty/util/concurrent/EventExecutor;)V
      15: putfield      #6                  // Field allChannels:Lio/netty/channel/group/ChannelGroup;
      18: aload_0
      19: new           #7                  // class io/netty/channel/nio/NioEventLoopGroup
      22: dup
      23: iload_1
      24: invokespecial #10                 // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(I)V
      27: putfield      #11                 // Field bossGroup:Lio/netty/channel/EventLoopGroup;
      30: aload_0
      31: new           #7                  // class io/netty/channel/nio/NioEventLoopGroup
      34: dup
      35: iload_2
      36: invokespecial #10                 // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(I)V
      39: putfield      #12                 // Field workerGroup:Lio/netty/channel/EventLoopGroup;
      42: aload_0
      43: new           #7                  // class io/netty/channel/nio/NioEventLoopGroup
      46: dup
      47: iload_3
      48: invokespecial #10                 // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(I)V
      51: putfield      #13                 // Field clientGroup:Lio/netty/channel/EventLoopGroup;
      54: return

  public org.wso2.transport.http.netty.contract.ServerConnector createServerConnector(org.wso2.transport.http.netty.contract.config.ServerBootstrapConfiguration, org.wso2.transport.http.netty.contract.config.ListenerConfiguration);
    Code:
       0: new           #14                 // class org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap
       3: dup
       4: aload_0
       5: getfield      #6                  // Field allChannels:Lio/netty/channel/group/ChannelGroup;
       8: invokespecial #15                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap."<init>":(Lio/netty/channel/group/ChannelGroup;)V
      11: astore_3
      12: aload_3
      13: aload_1
      14: invokevirtual #16                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addSocketConfiguration:(Lorg/wso2/transport/http/netty/contract/config/ServerBootstrapConfiguration;)V
      17: aload_2
      18: invokevirtual #17                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.getListenerSSLConfig:()Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      21: astore        4
      23: aload_3
      24: aload         4
      26: invokevirtual #18                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addSecurity:(Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;)V
      29: aload         4
      31: ifnull        41
      34: aload_0
      35: aload_3
      36: aload         4
      38: invokespecial #19                 // Method setSslContext:(Lorg/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap;Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;)V
      41: aload_3
      42: aload_2
      43: invokevirtual #20                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.getSocketIdleTimeout:()J
      46: invokevirtual #21                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addIdleTimeout:(J)V
      49: fconst_2
      50: aload_2
      51: invokevirtual #22                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.getVersion:()Ljava/lang/String;
      54: invokestatic  #23                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
      57: invokevirtual #24                 // Method java/lang/Float.floatValue:()F
      60: fcmpl
      61: ifne          69
      64: aload_3
      65: iconst_1
      66: invokevirtual #25                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.setHttp2Enabled:(Z)V
      69: aload_3
      70: aload_2
      71: invokevirtual #26                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.isHttpTraceLogEnabled:()Z
      74: invokestatic  #27                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      77: invokevirtual #28                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addHttpTraceLogHandler:(Ljava/lang/Boolean;)V
      80: aload_3
      81: aload_2
      82: invokevirtual #29                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.isHttpAccessLogEnabled:()Z
      85: invokestatic  #27                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      88: invokevirtual #30                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addHttpAccessLogHandler:(Ljava/lang/Boolean;)V
      91: aload_3
      92: aload_0
      93: getfield      #11                 // Field bossGroup:Lio/netty/channel/EventLoopGroup;
      96: aload_0
      97: getfield      #12                 // Field workerGroup:Lio/netty/channel/EventLoopGroup;
     100: invokevirtual #31                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addThreadPools:(Lio/netty/channel/EventLoopGroup;Lio/netty/channel/EventLoopGroup;)V
     103: aload_3
     104: aload_2
     105: invokevirtual #32                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.getRequestSizeValidationConfig:()Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;
     108: invokevirtual #33                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addHeaderAndEntitySizeValidation:(Lorg/wso2/transport/http/netty/contract/config/RequestSizeValidationConfig;)V
     111: aload_3
     112: aload_2
     113: invokevirtual #34                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.getChunkConfig:()Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;
     116: invokevirtual #35                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addChunkingBehaviour:(Lorg/wso2/transport/http/netty/contract/config/ChunkConfig;)V
     119: aload_3
     120: aload_2
     121: invokevirtual #36                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.getKeepAliveConfig:()Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;
     124: invokevirtual #37                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addKeepAliveBehaviour:(Lorg/wso2/transport/http/netty/contract/config/KeepAliveConfig;)V
     127: aload_3
     128: aload_2
     129: invokevirtual #38                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.getServerHeader:()Ljava/lang/String;
     132: invokevirtual #39                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addServerHeader:(Ljava/lang/String;)V
     135: aload_3
     136: aload_2
     137: invokevirtual #40                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.isPipeliningEnabled:()Z
     140: invokevirtual #41                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.setPipeliningEnabled:(Z)V
     143: aload_3
     144: aload_2
     145: invokevirtual #42                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.getPipeliningLimit:()J
     148: invokevirtual #43                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.setPipeliningLimit:(J)V
     151: aload_2
     152: invokevirtual #40                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.isPipeliningEnabled:()Z
     155: ifeq          187
     158: aload_0
     159: new           #44                 // class io/netty/util/concurrent/DefaultEventExecutorGroup
     162: dup
     163: iconst_2
     164: new           #45                 // class io/netty/util/concurrent/DefaultThreadFactory
     167: dup
     168: ldc           #46                 // String pipelining-thread-pool
     170: invokespecial #47                 // Method io/netty/util/concurrent/DefaultThreadFactory."<init>":(Ljava/lang/String;)V
     173: invokespecial #48                 // Method io/netty/util/concurrent/DefaultEventExecutorGroup."<init>":(ILjava/util/concurrent/ThreadFactory;)V
     176: putfield      #49                 // Field pipeliningGroup:Lio/netty/util/concurrent/EventExecutorGroup;
     179: aload_3
     180: aload_0
     181: getfield      #49                 // Field pipeliningGroup:Lio/netty/util/concurrent/EventExecutorGroup;
     184: invokevirtual #50                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.setPipeliningThreadGroup:(Lio/netty/util/concurrent/EventExecutorGroup;)V
     187: aload_3
     188: aload_2
     189: invokevirtual #51                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.getHost:()Ljava/lang/String;
     192: aload_2
     193: invokevirtual #52                 // Method org/wso2/transport/http/netty/contract/config/ListenerConfiguration.getPort:()I
     196: invokevirtual #53                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.getServerConnector:(Ljava/lang/String;I)Lorg/wso2/transport/http/netty/contract/ServerConnector;
     199: areturn

  private void setSslContext(org.wso2.transport.http.netty.contractimpl.listener.ServerConnectorBootstrap, org.wso2.transport.http.netty.contractimpl.common.ssl.SSLConfig);
    Code:
       0: new           #54                 // class org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory
       3: dup
       4: aload_2
       5: invokespecial #55                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory."<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;)V
       8: astore_3
       9: aload_1
      10: aload_2
      11: invokevirtual #56                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig.isValidateCertEnabled:()Z
      14: invokestatic  #27                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: invokevirtual #57                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addcertificateRevocationVerifier:(Ljava/lang/Boolean;)V
      20: aload_1
      21: aload_2
      22: invokevirtual #58                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig.getCacheValidityPeriod:()I
      25: invokevirtual #59                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addCacheDelay:(I)V
      28: aload_1
      29: aload_2
      30: invokevirtual #60                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig.getCacheSize:()I
      33: invokevirtual #61                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addCacheSize:(I)V
      36: aload_1
      37: aload_2
      38: invokevirtual #62                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig.isOcspStaplingEnabled:()Z
      41: invokevirtual #63                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addOcspStapling:(Z)V
      44: aload_1
      45: aload_3
      46: invokevirtual #64                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addSslHandlerFactory:(Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory;)V
      49: aload_2
      50: invokevirtual #65                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig.getKeyStore:()Ljava/io/File;
      53: ifnull        67
      56: aload_1
      57: aload_3
      58: invokevirtual #66                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory.createSSLContextFromKeystores:()Ljavax/net/ssl/SSLContext;
      61: invokevirtual #67                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addKeystoreSslContext:(Ljavax/net/ssl/SSLContext;)V
      64: goto          75
      67: aload_1
      68: aload_3
      69: invokevirtual #68                 // Method org/wso2/transport/http/netty/contractimpl/common/ssl/SSLHandlerFactory.createHttpTLSContextForServer:()Lio/netty/handler/ssl/SslContext;
      72: invokevirtual #69                 // Method org/wso2/transport/http/netty/contractimpl/listener/ServerConnectorBootstrap.addCertAndKeySslContext:(Lio/netty/handler/ssl/SslContext;)V
      75: goto          90
      78: astore_3
      79: new           #71                 // class java/lang/RuntimeException
      82: dup
      83: ldc           #72                 // String Failed to create ssl context from given certs and key
      85: aload_3
      86: invokespecial #73                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      89: athrow
      90: return
    Exception table:
       from    to  target type
           0    75    78   Class javax/net/ssl/SSLException

  public org.wso2.transport.http.netty.contract.HttpClientConnector createHttpClientConnector(java.util.Map<java.lang.String, java.lang.Object>, org.wso2.transport.http.netty.contract.config.SenderConfiguration);
    Code:
       0: new           #74                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration
       3: dup
       4: aload_1
       5: invokespecial #75                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration."<init>":(Ljava/util/Map;)V
       8: astore_3
       9: new           #76                 // class org/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager
      12: dup
      13: aload_2
      14: aload_3
      15: aload_0
      16: getfield      #13                 // Field clientGroup:Lio/netty/channel/EventLoopGroup;
      19: invokespecial #77                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager."<init>":(Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;Lorg/wso2/transport/http/netty/contractimpl/sender/channel/BootstrapConfiguration;Lio/netty/channel/EventLoopGroup;)V
      22: astore        4
      24: new           #78                 // class org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector
      27: dup
      28: aload         4
      30: aload_2
      31: invokespecial #79                 // Method org/wso2/transport/http/netty/contractimpl/DefaultHttpClientConnector."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/channel/pool/ConnectionManager;Lorg/wso2/transport/http/netty/contract/config/SenderConfiguration;)V
      34: areturn

  public org.wso2.transport.http.netty.contract.websocket.WebSocketClientConnector createWsClientConnector(org.wso2.transport.http.netty.contract.websocket.WebSocketClientConnectorConfig);
    Code:
       0: new           #80                 // class org/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketClientConnector
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #13                 // Field clientGroup:Lio/netty/channel/EventLoopGroup;
       9: invokespecial #81                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketClientConnector."<init>":(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketClientConnectorConfig;Lio/netty/channel/EventLoopGroup;)V
      12: areturn

  public void shutdown() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field allChannels:Lio/netty/channel/group/ChannelGroup;
       4: invokeinterface #82,  1           // InterfaceMethod io/netty/channel/group/ChannelGroup.close:()Lio/netty/channel/group/ChannelGroupFuture;
       9: invokeinterface #83,  1           // InterfaceMethod io/netty/channel/group/ChannelGroupFuture.sync:()Lio/netty/channel/group/ChannelGroupFuture;
      14: pop
      15: aload_0
      16: getfield      #12                 // Field workerGroup:Lio/netty/channel/EventLoopGroup;
      19: invokeinterface #84,  1           // InterfaceMethod io/netty/channel/EventLoopGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
      24: invokeinterface #85,  1           // InterfaceMethod io/netty/util/concurrent/Future.sync:()Lio/netty/util/concurrent/Future;
      29: pop
      30: aload_0
      31: getfield      #11                 // Field bossGroup:Lio/netty/channel/EventLoopGroup;
      34: invokeinterface #84,  1           // InterfaceMethod io/netty/channel/EventLoopGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
      39: invokeinterface #85,  1           // InterfaceMethod io/netty/util/concurrent/Future.sync:()Lio/netty/util/concurrent/Future;
      44: pop
      45: aload_0
      46: getfield      #13                 // Field clientGroup:Lio/netty/channel/EventLoopGroup;
      49: invokeinterface #84,  1           // InterfaceMethod io/netty/channel/EventLoopGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
      54: invokeinterface #85,  1           // InterfaceMethod io/netty/util/concurrent/Future.sync:()Lio/netty/util/concurrent/Future;
      59: pop
      60: aload_0
      61: getfield      #49                 // Field pipeliningGroup:Lio/netty/util/concurrent/EventExecutorGroup;
      64: ifnull        82
      67: aload_0
      68: getfield      #49                 // Field pipeliningGroup:Lio/netty/util/concurrent/EventExecutorGroup;
      71: invokeinterface #86,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutorGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
      76: invokeinterface #85,  1           // InterfaceMethod io/netty/util/concurrent/Future.sync:()Lio/netty/util/concurrent/Future;
      81: pop
      82: return
}
