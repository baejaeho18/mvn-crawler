Compiled from "ReceivingHeaders.java"
public class org.wso2.transport.http.netty.contractimpl.listener.states.http2.ReceivingHeaders implements org.wso2.transport.http.netty.contractimpl.listener.states.http2.ListenerState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.contractimpl.listener.http2.Http2SourceHandler http2SourceHandler;

  private final org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext http2MessageStateContext;

  public org.wso2.transport.http.netty.contractimpl.listener.states.http2.ReceivingHeaders(org.wso2.transport.http.netty.contractimpl.listener.http2.Http2SourceHandler, org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field http2SourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      14: return

  public void readInboundRequestHeaders(org.wso2.transport.http.netty.message.Http2HeadersFrame) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/wso2/transport/http/netty/message/Http2HeadersFrame.getStreamId:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #6                  // Method org/wso2/transport/http/netty/message/Http2HeadersFrame.isEndOfStream:()Z
       9: ifeq          131
      12: aload_0
      13: getfield      #3                  // Field http2SourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;
      16: invokevirtual #7                  // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getStreamIdRequestMap:()Ljava/util/Map;
      19: iload_2
      20: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #10                 // class org/wso2/transport/http/netty/message/HttpCarbonMessage
      31: astore_3
      32: aload_3
      33: ifnull        66
      36: aload_0
      37: iload_2
      38: aload_1
      39: invokevirtual #11                 // Method org/wso2/transport/http/netty/message/Http2HeadersFrame.getHeaders:()Lio/netty/handler/codec/http2/Http2Headers;
      42: aload_3
      43: invokespecial #12                 // Method readTrailerHeaders:(ILio/netty/handler/codec/http2/Http2Headers;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
      46: aload_0
      47: getfield      #3                  // Field http2SourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;
      50: invokevirtual #7                  // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getStreamIdRequestMap:()Ljava/util/Map;
      53: iload_2
      54: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: goto          110
      66: aload_1
      67: invokevirtual #11                 // Method org/wso2/transport/http/netty/message/Http2HeadersFrame.getHeaders:()Lio/netty/handler/codec/http2/Http2Headers;
      70: ldc           #14                 // String :method
      72: invokeinterface #15,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.contains:(Ljava/lang/Object;)Z
      77: ifeq          110
      80: aload_0
      81: aload_1
      82: invokevirtual #11                 // Method org/wso2/transport/http/netty/message/Http2HeadersFrame.getHeaders:()Lio/netty/handler/codec/http2/Http2Headers;
      85: iload_2
      86: invokespecial #16                 // Method setupHttp2CarbonMsg:(Lio/netty/handler/codec/http2/Http2Headers;I)Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      89: astore_3
      90: aload_3
      91: new           #17                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      94: dup
      95: invokespecial #18                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
      98: invokevirtual #19                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
     101: aload_0
     102: getfield      #3                  // Field http2SourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;
     105: aload_3
     106: iload_2
     107: invokestatic  #20                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.notifyRequestListener:(Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;I)V
     110: aload_0
     111: getfield      #4                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
     114: new           #21                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/EntityBodyReceived
     117: dup
     118: aload_0
     119: getfield      #4                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
     122: invokespecial #22                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/http2/EntityBodyReceived."<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
     125: invokevirtual #23                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;)V
     128: goto          194
     131: aload_0
     132: aload_1
     133: invokevirtual #11                 // Method org/wso2/transport/http/netty/message/Http2HeadersFrame.getHeaders:()Lio/netty/handler/codec/http2/Http2Headers;
     136: iload_2
     137: invokespecial #16                 // Method setupHttp2CarbonMsg:(Lio/netty/handler/codec/http2/Http2Headers;I)Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
     140: astore_3
     141: aload_3
     142: aload_0
     143: getfield      #4                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
     146: invokevirtual #24                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setHttp2MessageStateContext:(Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
     149: aload_0
     150: getfield      #3                  // Field http2SourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;
     153: invokevirtual #7                  // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getStreamIdRequestMap:()Ljava/util/Map;
     156: iload_2
     157: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     160: aload_3
     161: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     166: pop
     167: aload_0
     168: getfield      #3                  // Field http2SourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;
     171: aload_3
     172: iload_2
     173: invokestatic  #20                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.notifyRequestListener:(Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;I)V
     176: aload_0
     177: getfield      #4                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
     180: new           #26                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/ReceivingEntityBody
     183: dup
     184: aload_0
     185: getfield      #4                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
     188: invokespecial #27                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/http2/ReceivingEntityBody."<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
     191: invokevirtual #23                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;)V
     194: return

  public void readInboundRequestBody(org.wso2.transport.http.netty.contractimpl.listener.http2.Http2SourceHandler, org.wso2.transport.http.netty.message.Http2DataFrame);
    Code:
       0: getstatic     #28                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #29                 // String readInboundRequestBody is not a dependant action of this state
       5: invokeinterface #30,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void writeOutboundResponseHeaders(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent, int);
    Code:
       0: getstatic     #28                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #31                 // String writeOutboundResponseHeaders is not a dependant action of this state
       5: invokeinterface #30,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void writeOutboundResponseBody(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent, int);
    Code:
       0: getstatic     #28                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #32                 // String writeOutboundResponseBody is not a dependant action of this state
       5: invokeinterface #30,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void writeOutboundPromise(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.message.Http2PushPromise);
    Code:
       0: getstatic     #28                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #33                 // String writeOutboundPromise is not a dependant action of this state
       5: invokeinterface #30,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  private void readTrailerHeaders(int, io.netty.handler.codec.http2.Http2Headers, org.wso2.transport.http.netty.message.HttpCarbonMessage) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: new           #34                 // class io/netty/handler/codec/http/HttpVersion
       3: dup
       4: ldc           #35                 // String HTTP/2.0
       6: iconst_1
       7: invokespecial #36                 // Method io/netty/handler/codec/http/HttpVersion."<init>":(Ljava/lang/String;Z)V
      10: astore        4
      12: new           #17                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      15: dup
      16: invokespecial #18                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":()V
      19: astore        5
      21: aload         5
      23: invokeinterface #37,  1           // InterfaceMethod io/netty/handler/codec/http/LastHttpContent.trailingHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
      28: astore        6
      30: iload_1
      31: aload_2
      32: aload         6
      34: aload         4
      36: iconst_1
      37: iconst_0
      38: invokestatic  #38                 // Method io/netty/handler/codec/http2/HttpConversionUtil.addHttp2ToHttpHeaders:(ILio/netty/handler/codec/http2/Http2Headers;Lio/netty/handler/codec/http/HttpHeaders;Lio/netty/handler/codec/http/HttpVersion;ZZ)V
      41: aload_3
      42: aload         5
      44: invokevirtual #19                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      47: return

  private org.wso2.transport.http.netty.message.HttpCarbonMessage setupHttp2CarbonMsg(io.netty.handler.codec.http2.Http2Headers, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: iload_2
       2: invokestatic  #39                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.createHttpRequestFromHttp2Headers:(Lio/netty/handler/codec/http2/Http2Headers;I)Lio/netty/handler/codec/http/HttpRequest;
       5: aload_0
       6: getfield      #3                  // Field http2SourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;
       9: invokevirtual #40                 // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getChannelHandlerContext:()Lio/netty/channel/ChannelHandlerContext;
      12: aload_0
      13: getfield      #3                  // Field http2SourceHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler;
      16: invokevirtual #41                 // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getInterfaceId:()Ljava/lang/String;
      19: invokestatic  #42                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.setupCarbonRequest:(Lio/netty/handler/codec/http/HttpRequest;Lio/netty/channel/ChannelHandlerContext;Ljava/lang/String;)Lorg/wso2/transport/http/netty/message/HttpCarbonRequest;
      22: areturn

  static {};
    Code:
       0: ldc           #43                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/ReceivingHeaders
       2: invokestatic  #44                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #28                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
