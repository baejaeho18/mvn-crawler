Compiled from "WebSocketServerHandshakeHandler.java"
class org.wso2.transport.http.netty.contractimpl.listener.WebSocketServerHandshakeHandler$1 extends io.netty.channel.SimpleChannelInboundHandler<io.netty.handler.codec.http.FullHttpRequest> {
  final org.wso2.transport.http.netty.contractimpl.listener.WebSocketServerHandshakeHandler this$0;

  org.wso2.transport.http.netty.contractimpl.listener.WebSocketServerHandshakeHandler$1(org.wso2.transport.http.netty.contractimpl.listener.WebSocketServerHandshakeHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/listener/WebSocketServerHandshakeHandler;
       5: aload_0
       6: invokespecial #2                  // Method io/netty/channel/SimpleChannelInboundHandler."<init>":()V
       9: return

  protected void channelRead0(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.FullHttpRequest) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #3,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
       6: aload_0
       7: invokeinterface #4,  2            // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      12: pop
      13: aload_0
      14: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/listener/WebSocketServerHandshakeHandler;
      17: aload_2
      18: aload_1
      19: invokestatic  #5                  // Method org/wso2/transport/http/netty/contractimpl/listener/WebSocketServerHandshakeHandler.access$000:(Lorg/wso2/transport/http/netty/contractimpl/listener/WebSocketServerHandshakeHandler;Lio/netty/handler/codec/http/FullHttpRequest;Lio/netty/channel/ChannelHandlerContext;)V
      22: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_1
       1: invokeinterface #3,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
       6: aload_0
       7: invokeinterface #4,  2            // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      12: pop
      13: aload_1
      14: aload_2
      15: invokeinterface #6,  2            // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      20: pop
      21: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
       6: pop
       7: return

  protected void channelRead0(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #8                  // class io/netty/handler/codec/http/FullHttpRequest
       6: invokevirtual #9                  // Method channelRead0:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/FullHttpRequest;)V
       9: return
}
