Compiled from "ReceivingEntityBody.java"
public class org.wso2.transport.http.netty.contractimpl.listener.states.http2.ReceivingEntityBody implements org.wso2.transport.http.netty.contractimpl.listener.states.http2.ListenerState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext http2MessageStateContext;

  private boolean headerSent;

  org.wso2.transport.http.netty.contractimpl.listener.states.http2.ReceivingEntityBody(org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
       9: return

  org.wso2.transport.http.netty.contractimpl.listener.states.http2.ReceivingEntityBody(org.wso2.transport.http.netty.contractimpl.common.states.Http2MessageStateContext, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method "<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
       5: aload_0
       6: iload_2
       7: putfield      #4                  // Field headerSent:Z
      10: return

  public void readInboundRequestHeaders(org.wso2.transport.http.netty.message.Http2HeadersFrame);
    Code:
       0: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #6                  // String readInboundRequestHeaders is not a dependant action of this state
       5: invokeinterface #7,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void readInboundRequestBody(org.wso2.transport.http.netty.contractimpl.listener.http2.Http2SourceHandler, org.wso2.transport.http.netty.message.Http2DataFrame);
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method org/wso2/transport/http/netty/message/Http2DataFrame.getStreamId:()I
       4: istore_3
       5: aload_2
       6: invokevirtual #9                  // Method org/wso2/transport/http/netty/message/Http2DataFrame.getData:()Lio/netty/buffer/ByteBuf;
       9: astore        4
      11: aload_1
      12: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getStreamIdRequestMap:()Ljava/util/Map;
      15: iload_3
      16: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #13                 // class org/wso2/transport/http/netty/message/HttpCarbonMessage
      27: astore        5
      29: aload         5
      31: ifnull        107
      34: aload_2
      35: invokevirtual #14                 // Method org/wso2/transport/http/netty/message/Http2DataFrame.isEndOfStream:()Z
      38: ifeq          90
      41: aload         5
      43: new           #15                 // class io/netty/handler/codec/http/DefaultLastHttpContent
      46: dup
      47: aload         4
      49: invokespecial #16                 // Method io/netty/handler/codec/http/DefaultLastHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
      52: invokevirtual #17                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
      55: aload_1
      56: invokevirtual #10                 // Method org/wso2/transport/http/netty/contractimpl/listener/http2/Http2SourceHandler.getStreamIdRequestMap:()Ljava/util/Map;
      59: iload_3
      60: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      63: invokeinterface #18,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: aload_0
      70: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      73: new           #19                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/EntityBodyReceived
      76: dup
      77: aload_0
      78: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      81: invokespecial #20                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/http2/EntityBodyReceived."<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      84: invokevirtual #21                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;)V
      87: goto          117
      90: aload         5
      92: new           #22                 // class io/netty/handler/codec/http/DefaultHttpContent
      95: dup
      96: aload         4
      98: invokespecial #23                 // Method io/netty/handler/codec/http/DefaultHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
     101: invokevirtual #17                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.addHttpContent:(Lio/netty/handler/codec/http/HttpContent;)V
     104: goto          117
     107: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     110: ldc           #24                 // String Inconsistent state detected : data has received before headers
     112: invokeinterface #7,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     117: return

  public void writeOutboundResponseHeaders(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent, int);
    Code:
       0: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #25                 // String writeOutboundResponseHeaders is not a dependant action of this state
       5: invokeinterface #7,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: return

  public void writeOutboundResponseBody(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field headerSent:Z
       4: ifeq          46
       7: aload_0
       8: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      11: new           #26                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/SendingEntityBody
      14: dup
      15: aload_1
      16: aload_0
      17: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      20: invokespecial #27                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/http2/SendingEntityBody."<init>":(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      23: invokevirtual #21                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;)V
      26: aload_0
      27: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      30: invokevirtual #28                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getListenerState:()Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;
      33: aload_1
      34: aload_2
      35: aload_3
      36: iload         4
      38: invokeinterface #29,  5           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState.writeOutboundResponseBody:(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lio/netty/handler/codec/http/HttpContent;I)V
      43: goto          82
      46: aload_0
      47: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      50: new           #30                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/SendingHeaders
      53: dup
      54: aload_1
      55: aload_0
      56: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      59: invokespecial #31                 // Method org/wso2/transport/http/netty/contractimpl/listener/states/http2/SendingHeaders."<init>":(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;)V
      62: invokevirtual #21                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.setListenerState:(Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;)V
      65: aload_0
      66: getfield      #2                  // Field http2MessageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext;
      69: invokevirtual #28                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2MessageStateContext.getListenerState:()Lorg/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState;
      72: aload_1
      73: aload_2
      74: aload_3
      75: iload         4
      77: invokeinterface #32,  5           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/listener/states/http2/ListenerState.writeOutboundResponseHeaders:(Lorg/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lio/netty/handler/codec/http/HttpContent;I)V
      82: return

  public void writeOutboundPromise(org.wso2.transport.http.netty.contractimpl.Http2OutboundRespListener, org.wso2.transport.http.netty.message.Http2PushPromise) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #33                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getChannelHandlerContext:()Lio/netty/channel/ChannelHandlerContext;
       5: aload_1
       6: invokevirtual #34                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getConnection:()Lio/netty/handler/codec/http2/Http2Connection;
       9: aload_1
      10: invokevirtual #35                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getEncoder:()Lio/netty/handler/codec/http2/Http2ConnectionEncoder;
      13: aload_1
      14: invokevirtual #36                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getInboundRequestMsg:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      17: aload_1
      18: invokevirtual #36                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getInboundRequestMsg:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
      21: invokevirtual #37                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.getHttpOutboundRespStatusFuture:()Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      24: aload_1
      25: invokevirtual #38                 // Method org/wso2/transport/http/netty/contractimpl/Http2OutboundRespListener.getOriginalStreamId:()I
      28: invokestatic  #39                 // Method org/wso2/transport/http/netty/contractimpl/common/states/Http2StateUtil.writeHttp2Promise:(Lorg/wso2/transport/http/netty/message/Http2PushPromise;Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2Connection;Lio/netty/handler/codec/http2/Http2ConnectionEncoder;Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;I)V
      31: return

  static {};
    Code:
       0: ldc           #40                 // class org/wso2/transport/http/netty/contractimpl/listener/states/http2/ReceivingEntityBody
       2: invokestatic  #41                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
