Compiled from "WebSocketClient.java"
class org.wso2.transport.http.netty.contractimpl.sender.websocket.WebSocketClient$1 extends io.netty.channel.ChannelInitializer<io.netty.channel.socket.SocketChannel> {
  final org.wso2.transport.http.netty.contractimpl.common.ssl.SSLConfig val$sslConfig;

  final java.lang.String val$host;

  final int val$port;

  final org.wso2.transport.http.netty.contractimpl.websocket.DefaultClientHandshakeFuture val$handshakeFuture;

  final org.wso2.transport.http.netty.contractimpl.sender.websocket.WebSocketClient this$0;

  org.wso2.transport.http.netty.contractimpl.sender.websocket.WebSocketClient$1(org.wso2.transport.http.netty.contractimpl.sender.websocket.WebSocketClient, org.wso2.transport.http.netty.contractimpl.common.ssl.SSLConfig, java.lang.String, int, org.wso2.transport.http.netty.contractimpl.websocket.DefaultClientHandshakeFuture);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$host:Ljava/lang/String;
      15: aload_0
      16: iload         4
      18: putfield      #4                  // Field val$port:I
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$handshakeFuture:Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultClientHandshakeFuture;
      27: aload_0
      28: invokespecial #6                  // Method io/netty/channel/ChannelInitializer."<init>":()V
      31: return

  protected void initChannel(io.netty.channel.socket.SocketChannel) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
       4: ifnull        56
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field val$host:Ljava/lang/String;
      12: aload_0
      13: getfield      #4                  // Field val$port:I
      16: aload_0
      17: getfield      #2                  // Field val$sslConfig:Lorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;
      20: invokestatic  #7                  // Method org/wso2/transport/http/netty/contractimpl/common/Util.configureHttpPipelineForSSL:(Lio/netty/channel/socket/SocketChannel;Ljava/lang/String;ILorg/wso2/transport/http/netty/contractimpl/common/ssl/SSLConfig;)V
      23: aload_1
      24: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/socket/SocketChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      29: ldc           #10                 // String sslHandshakeCompletionHandler
      31: new           #11                 // class org/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient$WebSocketClientSSLHandshakeCompletionHandler
      34: dup
      35: aload_0
      36: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient;
      39: aload_0
      40: getfield      #5                  // Field val$handshakeFuture:Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultClientHandshakeFuture;
      43: aconst_null
      44: invokespecial #12                 // Method org/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient$WebSocketClientSSLHandshakeCompletionHandler."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient;Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultClientHandshakeFuture;Lorg/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient$1;)V
      47: invokeinterface #13,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      52: pop
      53: goto          69
      56: aload_0
      57: getfield      #1                  // Field this$0:Lorg/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient;
      60: aload_1
      61: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/socket/SocketChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      66: invokestatic  #14                 // Method org/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient.access$100:(Lorg/wso2/transport/http/netty/contractimpl/sender/websocket/WebSocketClient;Lio/netty/channel/ChannelPipeline;)V
      69: return

  protected void initChannel(io.netty.channel.Channel) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class io/netty/channel/socket/SocketChannel
       5: invokevirtual #16                 // Method initChannel:(Lio/netty/channel/socket/SocketChannel;)V
       8: return
}
