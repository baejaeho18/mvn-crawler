Compiled from "WebSocketInboundFrameHandler.java"
public class org.wso2.transport.http.netty.contractimpl.websocket.WebSocketInboundFrameHandler extends io.netty.channel.ChannelInboundHandlerAdapter {
  private static final org.slf4j.Logger LOG;

  private final boolean isServer;

  private final boolean secureConnection;

  private final java.lang.String target;

  private final java.lang.String negotiatedSubProtocol;

  private final org.wso2.transport.http.netty.contract.websocket.WebSocketConnectorFuture connectorFuture;

  private final org.wso2.transport.http.netty.contractimpl.listener.MessageQueueHandler messageQueueHandler;

  private boolean caughtException;

  private boolean closeFrameReceived;

  private boolean closeInitialized;

  private org.wso2.transport.http.netty.contractimpl.websocket.DefaultWebSocketConnection webSocketConnection;

  private io.netty.channel.ChannelPromise closePromise;

  private org.wso2.transport.http.netty.contract.websocket.WebSocketFrameType continuationFrameType;

  public org.wso2.transport.http.netty.contractimpl.websocket.WebSocketInboundFrameHandler(boolean, boolean, java.lang.String, java.lang.String, org.wso2.transport.http.netty.contract.websocket.WebSocketConnectorFuture, org.wso2.transport.http.netty.contractimpl.listener.MessageQueueHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field isServer:Z
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field secureConnection:Z
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field target:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field negotiatedSubProtocol:Ljava/lang/String;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field messageQueueHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/MessageQueueHandler;
      37: aload_0
      38: iconst_0
      39: putfield      #8                  // Field closeInitialized:Z
      42: return

  public void setClosePromise(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field closePromise:Lio/netty/channel/ChannelPromise;
       5: return

  public org.wso2.transport.http.netty.contractimpl.websocket.DefaultWebSocketConnection getWebSocketConnection();
    Code:
       0: aload_0
       1: getfield      #10                 // Field webSocketConnection:Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection;
       4: areturn

  public boolean isCloseFrameReceived();
    Code:
       0: aload_0
       1: getfield      #11                 // Field closeFrameReceived:Z
       4: ireturn

  public void setCloseInitialized(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field closeInitialized:Z
       5: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: new           #12                 // class org/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection
       4: dup
       5: aload_1
       6: aload_0
       7: aload_0
       8: getfield      #7                  // Field messageQueueHandler:Lorg/wso2/transport/http/netty/contractimpl/listener/MessageQueueHandler;
      11: aload_0
      12: getfield      #3                  // Field secureConnection:Z
      15: aload_0
      16: getfield      #5                  // Field negotiatedSubProtocol:Ljava/lang/String;
      19: invokespecial #13                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection."<init>":(Lio/netty/channel/ChannelHandlerContext;Lorg/wso2/transport/http/netty/contractimpl/websocket/WebSocketInboundFrameHandler;Lorg/wso2/transport/http/netty/contractimpl/listener/MessageQueueHandler;ZLjava/lang/String;)V
      22: putfield      #10                 // Field webSocketConnection:Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection;
      25: return

  public void userEventTriggered(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws org.wso2.transport.http.netty.contract.websocket.WebSocketConnectorException;
    Code:
       0: aload_2
       1: instanceof    #14                 // class io/netty/handler/timeout/IdleStateEvent
       4: ifeq          11
       7: aload_0
       8: invokespecial #15                 // Method notifyIdleTimeout:()V
      11: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws org.wso2.transport.http.netty.contract.websocket.WebSocketConnectorException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field caughtException:Z
       4: ifne          65
       7: aload_0
       8: getfield      #10                 // Field webSocketConnection:Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection;
      11: ifnull        65
      14: aload_0
      15: getfield      #11                 // Field closeFrameReceived:Z
      18: ifne          65
      21: aload_0
      22: getfield      #9                  // Field closePromise:Lio/netty/channel/ChannelPromise;
      25: ifnonnull     65
      28: aload_0
      29: getfield      #8                  // Field closeInitialized:Z
      32: ifne          65
      35: new           #17                 // class org/wso2/transport/http/netty/contractimpl/websocket/message/DefaultWebSocketCloseMessage
      38: dup
      39: sipush        1006
      42: invokespecial #19                 // Method org/wso2/transport/http/netty/contractimpl/websocket/message/DefaultWebSocketCloseMessage."<init>":(I)V
      45: astore_2
      46: aload_0
      47: aload_2
      48: invokespecial #20                 // Method setupCommonProperties:(Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage;)V
      51: aload_0
      52: getfield      #6                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;
      55: aload_2
      56: checkcast     #21                 // class org/wso2/transport/http/netty/contract/websocket/WebSocketCloseMessage
      59: invokeinterface #22,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture.notifyWebSocketListener:(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketCloseMessage;)V
      64: return
      65: aload_0
      66: getfield      #9                  // Field closePromise:Lio/netty/channel/ChannelPromise;
      69: ifnull        101
      72: aload_0
      73: getfield      #11                 // Field closeFrameReceived:Z
      76: ifne          101
      79: ldc           #23                 // String Connection is closed by remote endpoint without echoing a close frame
      81: astore_2
      82: aload_1
      83: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      88: aload_0
      89: aload_2
      90: invokedynamic #25,  0             // InvokeDynamic #0:operationComplete:(Lorg/wso2/transport/http/netty/contractimpl/websocket/WebSocketInboundFrameHandler;Ljava/lang/String;)Lio/netty/util/concurrent/GenericFutureListener;
      95: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     100: pop
     101: aload_0
     102: getfield      #6                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;
     105: aload_0
     106: getfield      #10                 // Field webSocketConnection:Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection;
     109: invokeinterface #27,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture.notifyWebSocketListener:(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnection;)V
     114: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #28                 // class io/netty/handler/codec/http/websocketx/TextWebSocketFrame
       4: ifeq          42
       7: aload_2
       8: checkcast     #28                 // class io/netty/handler/codec/http/websocketx/TextWebSocketFrame
      11: astore_3
      12: aload_3
      13: invokevirtual #29                 // Method io/netty/handler/codec/http/websocketx/TextWebSocketFrame.isFinalFragment:()Z
      16: ifne          26
      19: aload_0
      20: getstatic     #30                 // Field org/wso2/transport/http/netty/contract/websocket/WebSocketFrameType.TEXT:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketFrameType;
      23: putfield      #31                 // Field continuationFrameType:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketFrameType;
      26: aload_0
      27: aload_3
      28: aload_3
      29: invokevirtual #32                 // Method io/netty/handler/codec/http/websocketx/TextWebSocketFrame.text:()Ljava/lang/String;
      32: aload_3
      33: invokevirtual #29                 // Method io/netty/handler/codec/http/websocketx/TextWebSocketFrame.isFinalFragment:()Z
      36: invokespecial #33                 // Method notifyTextMessage:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;Ljava/lang/String;Z)V
      39: goto          204
      42: aload_2
      43: instanceof    #34                 // class io/netty/handler/codec/http/websocketx/BinaryWebSocketFrame
      46: ifeq          84
      49: aload_2
      50: checkcast     #34                 // class io/netty/handler/codec/http/websocketx/BinaryWebSocketFrame
      53: astore_3
      54: aload_3
      55: invokevirtual #35                 // Method io/netty/handler/codec/http/websocketx/BinaryWebSocketFrame.isFinalFragment:()Z
      58: ifne          68
      61: aload_0
      62: getstatic     #36                 // Field org/wso2/transport/http/netty/contract/websocket/WebSocketFrameType.BINARY:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketFrameType;
      65: putfield      #31                 // Field continuationFrameType:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketFrameType;
      68: aload_0
      69: aload_3
      70: aload_3
      71: invokevirtual #37                 // Method io/netty/handler/codec/http/websocketx/BinaryWebSocketFrame.content:()Lio/netty/buffer/ByteBuf;
      74: aload_3
      75: invokevirtual #35                 // Method io/netty/handler/codec/http/websocketx/BinaryWebSocketFrame.isFinalFragment:()Z
      78: invokespecial #38                 // Method notifyBinaryMessage:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;Lio/netty/buffer/ByteBuf;Z)V
      81: goto          204
      84: aload_2
      85: instanceof    #39                 // class io/netty/handler/codec/http/websocketx/CloseWebSocketFrame
      88: ifeq          107
      91: aload_0
      92: iconst_1
      93: putfield      #11                 // Field closeFrameReceived:Z
      96: aload_0
      97: aload_2
      98: checkcast     #39                 // class io/netty/handler/codec/http/websocketx/CloseWebSocketFrame
     101: invokespecial #40                 // Method notifyCloseMessage:(Lio/netty/handler/codec/http/websocketx/CloseWebSocketFrame;)V
     104: goto          204
     107: aload_2
     108: instanceof    #41                 // class io/netty/handler/codec/http/websocketx/PingWebSocketFrame
     111: ifeq          125
     114: aload_0
     115: aload_2
     116: checkcast     #41                 // class io/netty/handler/codec/http/websocketx/PingWebSocketFrame
     119: invokespecial #42                 // Method notifyPingMessage:(Lio/netty/handler/codec/http/websocketx/PingWebSocketFrame;)V
     122: goto          204
     125: aload_2
     126: instanceof    #43                 // class io/netty/handler/codec/http/websocketx/PongWebSocketFrame
     129: ifeq          143
     132: aload_0
     133: aload_2
     134: checkcast     #43                 // class io/netty/handler/codec/http/websocketx/PongWebSocketFrame
     137: invokespecial #44                 // Method notifyPongMessage:(Lio/netty/handler/codec/http/websocketx/PongWebSocketFrame;)V
     140: goto          204
     143: aload_2
     144: instanceof    #45                 // class io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame
     147: ifeq          204
     150: aload_2
     151: checkcast     #45                 // class io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame
     154: astore_3
     155: aload_0
     156: getfield      #31                 // Field continuationFrameType:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketFrameType;
     159: getstatic     #30                 // Field org/wso2/transport/http/netty/contract/websocket/WebSocketFrameType.TEXT:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketFrameType;
     162: if_acmpne     181
     165: aload_0
     166: aload_3
     167: aload_3
     168: invokevirtual #46                 // Method io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame.text:()Ljava/lang/String;
     171: aload_3
     172: invokevirtual #47                 // Method io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame.isFinalFragment:()Z
     175: invokespecial #33                 // Method notifyTextMessage:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;Ljava/lang/String;Z)V
     178: goto          204
     181: aload_0
     182: getfield      #31                 // Field continuationFrameType:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketFrameType;
     185: getstatic     #36                 // Field org/wso2/transport/http/netty/contract/websocket/WebSocketFrameType.BINARY:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketFrameType;
     188: if_acmpne     204
     191: aload_0
     192: aload_3
     193: aload_3
     194: invokevirtual #48                 // Method io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame.content:()Lio/netty/buffer/ByteBuf;
     197: aload_3
     198: invokevirtual #47                 // Method io/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame.isFinalFragment:()Z
     201: invokespecial #38                 // Method notifyBinaryMessage:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;Lio/netty/buffer/ByteBuf;Z)V
     204: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws org.wso2.transport.http.netty.contract.websocket.WebSocketConnectorException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #16                 // Field caughtException:Z
       5: aload_2
       6: instanceof    #49                 // class io/netty/handler/codec/CorruptedFrameException
       9: ifne          52
      12: aload_1
      13: invokeinterface #50,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      18: new           #39                 // class io/netty/handler/codec/http/websocketx/CloseWebSocketFrame
      21: dup
      22: sipush        1011
      25: ldc           #51                 // String Encountered an unexpected condition
      27: invokespecial #52                 // Method io/netty/handler/codec/http/websocketx/CloseWebSocketFrame."<init>":(ILjava/lang/String;)V
      30: invokeinterface #53,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      35: astore_3
      36: aload_3
      37: aload_0
      38: aload_1
      39: aload_2
      40: invokedynamic #54,  0             // InvokeDynamic #1:operationComplete:(Lorg/wso2/transport/http/netty/contractimpl/websocket/WebSocketInboundFrameHandler;Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)Lio/netty/util/concurrent/GenericFutureListener;
      45: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      50: pop
      51: return
      52: aload_0
      53: getfield      #6                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;
      56: aload_0
      57: getfield      #10                 // Field webSocketConnection:Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection;
      60: aload_2
      61: invokeinterface #55,  3           // InterfaceMethod org/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture.notifyWebSocketListener:(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnection;Ljava/lang/Throwable;)V
      66: return

  private void notifyTextMessage(io.netty.handler.codec.http.websocketx.WebSocketFrame, java.lang.String, boolean) throws org.wso2.transport.http.netty.contract.websocket.WebSocketConnectorException;
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: invokestatic  #56                 // Method org/wso2/transport/http/netty/contractimpl/websocket/WebSocketUtil.getWebSocketMessage:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;Ljava/lang/String;Z)Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage;
       6: astore        4
       8: aload_0
       9: aload         4
      11: invokespecial #20                 // Method setupCommonProperties:(Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage;)V
      14: aload_0
      15: getfield      #6                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;
      18: aload         4
      20: checkcast     #57                 // class org/wso2/transport/http/netty/contract/websocket/WebSocketTextMessage
      23: invokeinterface #58,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture.notifyWebSocketListener:(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketTextMessage;)V
      28: return

  private void notifyBinaryMessage(io.netty.handler.codec.http.websocketx.WebSocketFrame, io.netty.buffer.ByteBuf, boolean) throws org.wso2.transport.http.netty.contract.websocket.WebSocketConnectorException;
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: invokestatic  #59                 // Method org/wso2/transport/http/netty/contractimpl/websocket/WebSocketUtil.getWebSocketMessage:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;Lio/netty/buffer/ByteBuf;Z)Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage;
       6: astore        4
       8: aload_0
       9: aload         4
      11: invokespecial #20                 // Method setupCommonProperties:(Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage;)V
      14: aload_0
      15: getfield      #6                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;
      18: aload         4
      20: checkcast     #60                 // class org/wso2/transport/http/netty/contract/websocket/WebSocketBinaryMessage
      23: invokeinterface #61,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture.notifyWebSocketListener:(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketBinaryMessage;)V
      28: return

  private void notifyCloseMessage(io.netty.handler.codec.http.websocketx.CloseWebSocketFrame) throws org.wso2.transport.http.netty.contract.websocket.WebSocketConnectorException;
    Code:
       0: aload_1
       1: invokevirtual #62                 // Method io/netty/handler/codec/http/websocketx/CloseWebSocketFrame.reasonText:()Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: invokevirtual #63                 // Method io/netty/handler/codec/http/websocketx/CloseWebSocketFrame.statusCode:()I
       9: istore_3
      10: iload_3
      11: iconst_m1
      12: if_icmpne     19
      15: sipush        1005
      18: istore_3
      19: aload_0
      20: getfield      #9                  // Field closePromise:Lio/netty/channel/ChannelPromise;
      23: ifnonnull     60
      26: new           #17                 // class org/wso2/transport/http/netty/contractimpl/websocket/message/DefaultWebSocketCloseMessage
      29: dup
      30: iload_3
      31: aload_2
      32: invokespecial #64                 // Method org/wso2/transport/http/netty/contractimpl/websocket/message/DefaultWebSocketCloseMessage."<init>":(ILjava/lang/String;)V
      35: astore        4
      37: aload_0
      38: aload         4
      40: invokespecial #20                 // Method setupCommonProperties:(Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage;)V
      43: aload_0
      44: getfield      #6                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;
      47: aload         4
      49: checkcast     #21                 // class org/wso2/transport/http/netty/contract/websocket/WebSocketCloseMessage
      52: invokeinterface #22,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture.notifyWebSocketListener:(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketCloseMessage;)V
      57: goto          132
      60: aload_0
      61: getfield      #10                 // Field webSocketConnection:Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection;
      64: invokevirtual #65                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection.getCloseInitiatedStatusCode:()I
      67: iload_3
      68: if_icmpeq     122
      71: ldc           #66                 // String Expected status code %d but found %d in echoed close frame from remote endpoint
      73: iconst_2
      74: anewarray     #67                 // class java/lang/Object
      77: dup
      78: iconst_0
      79: aload_0
      80: getfield      #10                 // Field webSocketConnection:Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection;
      83: invokevirtual #65                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection.getCloseInitiatedStatusCode:()I
      86: invokestatic  #68                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: aastore
      90: dup
      91: iconst_1
      92: iload_3
      93: invokestatic  #68                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      96: aastore
      97: invokestatic  #69                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     100: astore        4
     102: aload_0
     103: getfield      #9                  // Field closePromise:Lio/netty/channel/ChannelPromise;
     106: new           #70                 // class java/lang/IllegalStateException
     109: dup
     110: aload         4
     112: invokespecial #71                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     115: invokeinterface #72,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
     120: pop
     121: return
     122: aload_0
     123: getfield      #9                  // Field closePromise:Lio/netty/channel/ChannelPromise;
     126: invokeinterface #73,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
     131: pop
     132: aload_1
     133: invokevirtual #74                 // Method io/netty/handler/codec/http/websocketx/CloseWebSocketFrame.release:()Z
     136: pop
     137: return

  private void notifyPingMessage(io.netty.handler.codec.http.websocketx.PingWebSocketFrame) throws org.wso2.transport.http.netty.contract.websocket.WebSocketConnectorException;
    Code:
       0: aload_1
       1: getstatic     #75                 // Field org/wso2/transport/http/netty/contract/websocket/WebSocketControlSignal.PING:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketControlSignal;
       4: invokestatic  #76                 // Method org/wso2/transport/http/netty/contractimpl/websocket/WebSocketUtil.getWebSocketControlMessage:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;Lorg/wso2/transport/http/netty/contract/websocket/WebSocketControlSignal;)Lorg/wso2/transport/http/netty/contract/websocket/WebSocketControlMessage;
       7: astore_2
       8: aload_0
       9: aload_2
      10: checkcast     #77                 // class org/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage
      13: invokespecial #20                 // Method setupCommonProperties:(Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage;)V
      16: aload_0
      17: getfield      #6                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;
      20: aload_2
      21: invokeinterface #78,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture.notifyWebSocketListener:(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketControlMessage;)V
      26: return

  private void notifyPongMessage(io.netty.handler.codec.http.websocketx.PongWebSocketFrame) throws org.wso2.transport.http.netty.contract.websocket.WebSocketConnectorException;
    Code:
       0: aload_1
       1: getstatic     #79                 // Field org/wso2/transport/http/netty/contract/websocket/WebSocketControlSignal.PONG:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketControlSignal;
       4: invokestatic  #76                 // Method org/wso2/transport/http/netty/contractimpl/websocket/WebSocketUtil.getWebSocketControlMessage:(Lio/netty/handler/codec/http/websocketx/WebSocketFrame;Lorg/wso2/transport/http/netty/contract/websocket/WebSocketControlSignal;)Lorg/wso2/transport/http/netty/contract/websocket/WebSocketControlMessage;
       7: astore_2
       8: aload_0
       9: aload_2
      10: checkcast     #77                 // class org/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage
      13: invokespecial #20                 // Method setupCommonProperties:(Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage;)V
      16: aload_0
      17: getfield      #6                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;
      20: aload_2
      21: invokeinterface #78,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture.notifyWebSocketListener:(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketControlMessage;)V
      26: return

  private void notifyIdleTimeout() throws org.wso2.transport.http.netty.contract.websocket.WebSocketConnectorException;
    Code:
       0: new           #80                 // class org/wso2/transport/http/netty/contractimpl/websocket/message/DefaultWebSocketControlMessage
       3: dup
       4: getstatic     #81                 // Field org/wso2/transport/http/netty/contract/websocket/WebSocketControlSignal.IDLE_TIMEOUT:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketControlSignal;
       7: aconst_null
       8: invokespecial #82                 // Method org/wso2/transport/http/netty/contractimpl/websocket/message/DefaultWebSocketControlMessage."<init>":(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketControlSignal;Ljava/nio/ByteBuffer;)V
      11: astore_1
      12: aload_0
      13: aload_1
      14: invokespecial #20                 // Method setupCommonProperties:(Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage;)V
      17: aload_0
      18: getfield      #6                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;
      21: aload_1
      22: checkcast     #83                 // class org/wso2/transport/http/netty/contract/websocket/WebSocketControlMessage
      25: invokeinterface #84,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture.notifyWebSocketIdleTimeout:(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketControlMessage;)V
      30: return

  private void setupCommonProperties(org.wso2.transport.http.netty.contractimpl.websocket.DefaultWebSocketMessage);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field target:Ljava/lang/String;
       5: invokevirtual #85                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage.setTarget:(Ljava/lang/String;)V
       8: aload_1
       9: aload_0
      10: getfield      #10                 // Field webSocketConnection:Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection;
      13: invokevirtual #86                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage.setWebSocketConnection:(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnection;)V
      16: aload_1
      17: aload_0
      18: getfield      #2                  // Field isServer:Z
      21: invokevirtual #87                 // Method org/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketMessage.setIsServerMessage:(Z)V
      24: return

  private void lambda$exceptionCaught$44(io.netty.channel.ChannelHandlerContext, java.lang.Throwable, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
       6: aload_0
       7: aload_2
       8: invokedynamic #88,  0             // InvokeDynamic #2:operationComplete:(Lorg/wso2/transport/http/netty/contractimpl/websocket/WebSocketInboundFrameHandler;Ljava/lang/Throwable;)Lio/netty/util/concurrent/GenericFutureListener;
      13: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      18: pop
      19: return

  private void lambda$null$43(java.lang.Throwable, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field connectorFuture:Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture;
       4: aload_0
       5: getfield      #10                 // Field webSocketConnection:Lorg/wso2/transport/http/netty/contractimpl/websocket/DefaultWebSocketConnection;
       8: aload_1
       9: invokeinterface #55,  3           // InterfaceMethod org/wso2/transport/http/netty/contract/websocket/WebSocketConnectorFuture.notifyWebSocketListener:(Lorg/wso2/transport/http/netty/contract/websocket/WebSocketConnection;Ljava/lang/Throwable;)V
      14: return

  private void lambda$channelInactive$42(java.lang.String, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field closePromise:Lio/netty/channel/ChannelPromise;
       4: new           #70                 // class java/lang/IllegalStateException
       7: dup
       8: aload_1
       9: invokespecial #71                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      12: invokeinterface #72,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      17: pop
      18: return

  static {};
    Code:
       0: ldc           #89                 // class org/wso2/transport/http/netty/contractimpl/websocket/WebSocketInboundFrameHandler
       2: invokestatic  #90                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #91                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
