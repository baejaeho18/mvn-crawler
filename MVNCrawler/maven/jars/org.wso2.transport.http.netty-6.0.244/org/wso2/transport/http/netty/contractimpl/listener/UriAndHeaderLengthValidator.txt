Compiled from "UriAndHeaderLengthValidator.java"
public class org.wso2.transport.http.netty.contractimpl.listener.UriAndHeaderLengthValidator extends io.netty.channel.ChannelInboundHandlerAdapter {
  private static final org.slf4j.Logger LOG;

  private java.lang.String serverName;

  org.wso2.transport.http.netty.contractimpl.listener.UriAndHeaderLengthValidator(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field serverName:Ljava/lang/String;
       9: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #3                  // class io/netty/handler/codec/http/HttpRequest
       4: ifeq          143
       7: aload_1
       8: invokeinterface #4,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      13: invokeinterface #5,  1            // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      18: ifeq          149
      21: aload_2
      22: checkcast     #3                  // class io/netty/handler/codec/http/HttpRequest
      25: astore_3
      26: aload_3
      27: invokeinterface #6,  1            // InterfaceMethod io/netty/handler/codec/http/HttpRequest.decoderResult:()Lio/netty/handler/codec/DecoderResult;
      32: invokevirtual #7                  // Method io/netty/handler/codec/DecoderResult.cause:()Ljava/lang/Throwable;
      35: astore        4
      37: aload         4
      39: instanceof    #8                  // class io/netty/handler/codec/TooLongFrameException
      42: ifeq          134
      45: aload         4
      47: invokevirtual #9                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      50: ldc           #11                 // String HTTP header is larger than
      52: invokevirtual #12                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      55: ifeq          85
      58: aload_1
      59: getstatic     #13                 // Field io/netty/handler/codec/http/HttpResponseStatus.REQUEST_ENTITY_TOO_LARGE:Lio/netty/handler/codec/http/HttpResponseStatus;
      62: getstatic     #14                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_0:Lio/netty/handler/codec/http/HttpVersion;
      65: aload_0
      66: getfield      #2                  // Field serverName:Ljava/lang/String;
      69: invokestatic  #15                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.sendAndCloseNoEntityBodyResp:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpResponseStatus;Lio/netty/handler/codec/http/HttpVersion;Ljava/lang/String;)V
      72: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      75: ldc           #17                 // String Inbound request Entity exceeds the max entity size allowed for a request
      77: invokeinterface #18,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      82: goto          140
      85: aload         4
      87: invokevirtual #9                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      90: ldc           #19                 // String An HTTP line is larger than
      92: invokevirtual #12                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      95: ifeq          125
      98: aload_1
      99: getstatic     #20                 // Field io/netty/handler/codec/http/HttpResponseStatus.REQUEST_URI_TOO_LONG:Lio/netty/handler/codec/http/HttpResponseStatus;
     102: getstatic     #14                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_0:Lio/netty/handler/codec/http/HttpVersion;
     105: aload_0
     106: getfield      #2                  // Field serverName:Ljava/lang/String;
     109: invokestatic  #15                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.sendAndCloseNoEntityBodyResp:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpResponseStatus;Lio/netty/handler/codec/http/HttpVersion;Ljava/lang/String;)V
     112: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
     115: ldc           #21                 // String Inbound request URI length exceeds the max uri length allowed for a request
     117: invokeinterface #18,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     122: goto          140
     125: aload_0
     126: aload_1
     127: aload_2
     128: invokespecial #22                 // Method io/netty/channel/ChannelInboundHandlerAdapter.channelRead:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
     131: goto          140
     134: aload_0
     135: aload_1
     136: aload_2
     137: invokespecial #22                 // Method io/netty/channel/ChannelInboundHandlerAdapter.channelRead:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
     140: goto          149
     143: aload_0
     144: aload_1
     145: aload_2
     146: invokespecial #22                 // Method io/netty/channel/ChannelInboundHandlerAdapter.channelRead:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
     149: return

  static {};
    Code:
       0: ldc           #23                 // class org/wso2/transport/http/netty/contractimpl/listener/UriAndHeaderLengthValidator
       2: invokestatic  #24                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
