Compiled from "SendingEntityBody.java"
public class org.wso2.transport.http.netty.contractimpl.sender.states.SendingEntityBody implements org.wso2.transport.http.netty.contractimpl.sender.states.SenderState {
  private static final org.slf4j.Logger LOG;

  private final org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext messageStateContext;

  private final boolean headersWritten;

  private final org.wso2.transport.http.netty.internal.HandlerExecutor handlerExecutor;

  private final org.wso2.transport.http.netty.contractimpl.sender.channel.TargetChannel targetChannel;

  private final org.wso2.transport.http.netty.contract.HttpResponseFuture httpInboundResponseFuture;

  private final java.lang.String httpVersion;

  private long contentLength;

  private java.util.List<io.netty.handler.codec.http.HttpContent> contentList;

  org.wso2.transport.http.netty.contractimpl.sender.states.SendingEntityBody(org.wso2.transport.http.netty.contractimpl.common.states.MessageStateContext, org.wso2.transport.http.netty.contractimpl.sender.channel.TargetChannel, boolean, org.wso2.transport.http.netty.contract.HttpResponseFuture);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #4                  // Field contentLength:J
       9: aload_0
      10: new           #5                  // class java/util/ArrayList
      13: dup
      14: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #7                  // Field contentList:Ljava/util/List;
      20: aload_0
      21: aload_1
      22: putfield      #8                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      25: aload_0
      26: aload_2
      27: putfield      #9                  // Field targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
      30: aload_0
      31: iload_3
      32: putfield      #10                 // Field headersWritten:Z
      35: aload_0
      36: invokestatic  #11                 // Method org/wso2/transport/http/netty/internal/HttpTransportContextHolder.getInstance:()Lorg/wso2/transport/http/netty/internal/HttpTransportContextHolder;
      39: invokevirtual #12                 // Method org/wso2/transport/http/netty/internal/HttpTransportContextHolder.getHandlerExecutor:()Lorg/wso2/transport/http/netty/internal/HandlerExecutor;
      42: putfield      #13                 // Field handlerExecutor:Lorg/wso2/transport/http/netty/internal/HandlerExecutor;
      45: aload_0
      46: aload         4
      48: putfield      #14                 // Field httpInboundResponseFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      51: aload_0
      52: aload_2
      53: invokevirtual #15                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getHttpVersion:()Ljava/lang/String;
      56: putfield      #16                 // Field httpVersion:Ljava/lang/String;
      59: return

  public void writeOutboundRequestHeaders(org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent);
    Code:
       0: getstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #18                 // String writeOutboundRequestHeaders {}
       5: ldc           #19                 // String is not a dependant action of this state
       7: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void writeOutboundRequestEntity(org.wso2.transport.http.netty.message.HttpCarbonMessage, io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_2
       1: invokestatic  #21                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.isLastHttpContent:(Lio/netty/handler/codec/http/HttpContent;)Z
       4: ifeq          128
       7: aload_0
       8: getfield      #10                 // Field headersWritten:Z
      11: ifne          105
      14: aload_0
      15: dup
      16: getfield      #4                  // Field contentLength:J
      19: aload_2
      20: invokeinterface #22,  1           // InterfaceMethod io/netty/handler/codec/http/HttpContent.content:()Lio/netty/buffer/ByteBuf;
      25: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      28: i2l
      29: ladd
      30: putfield      #4                  // Field contentLength:J
      33: aload_1
      34: aload_0
      35: getfield      #4                  // Field contentLength:J
      38: invokestatic  #24                 // Method org/wso2/transport/http/netty/contractimpl/common/Util.setupContentLengthRequest:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;J)V
      41: aload_1
      42: aload_0
      43: getfield      #14                 // Field httpInboundResponseFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      46: aload_0
      47: getfield      #16                 // Field httpVersion:Ljava/lang/String;
      50: aload_0
      51: getfield      #9                  // Field targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
      54: invokestatic  #25                 // Method org/wso2/transport/http/netty/contractimpl/common/states/StateUtil.writeRequestHeaders:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;Ljava/lang/String;Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;)V
      57: aload_0
      58: getfield      #7                  // Field contentList:Ljava/util/List;
      61: invokeinterface #26,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      66: astore_3
      67: aload_3
      68: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          105
      76: aload_3
      77: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #29                 // class io/netty/handler/codec/http/HttpContent
      85: astore        4
      87: aload_0
      88: getfield      #9                  // Field targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
      91: invokevirtual #30                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
      94: aload         4
      96: invokeinterface #31,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     101: pop
     102: goto          67
     105: aload_0
     106: aload_2
     107: invokespecial #32                 // Method writeOutboundRequestBody:(Lio/netty/handler/codec/http/HttpContent;)V
     110: aload_0
     111: getfield      #13                 // Field handlerExecutor:Lorg/wso2/transport/http/netty/internal/HandlerExecutor;
     114: ifnull        182
     117: aload_0
     118: getfield      #13                 // Field handlerExecutor:Lorg/wso2/transport/http/netty/internal/HandlerExecutor;
     121: aload_1
     122: invokevirtual #33                 // Method org/wso2/transport/http/netty/internal/HandlerExecutor.executeAtTargetRequestSending:(Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;)V
     125: goto          182
     128: aload_0
     129: getfield      #10                 // Field headersWritten:Z
     132: ifeq          152
     135: aload_0
     136: getfield      #9                  // Field targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
     139: invokevirtual #30                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
     142: aload_2
     143: invokeinterface #31,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     148: pop
     149: goto          182
     152: aload_0
     153: getfield      #7                  // Field contentList:Ljava/util/List;
     156: aload_2
     157: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     162: pop
     163: aload_0
     164: dup
     165: getfield      #4                  // Field contentLength:J
     168: aload_2
     169: invokeinterface #22,  1           // InterfaceMethod io/netty/handler/codec/http/HttpContent.content:()Lio/netty/buffer/ByteBuf;
     174: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     177: i2l
     178: ladd
     179: putfield      #4                  // Field contentLength:J
     182: return

  public void readInboundResponseHeaders(org.wso2.transport.http.netty.contractimpl.sender.TargetHandler, io.netty.handler.codec.http.HttpResponse);
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method org/wso2/transport/http/netty/contractimpl/sender/TargetHandler.getOutboundRequestMsg:()Lorg/wso2/transport/http/netty/message/HttpCarbonMessage;
       4: new           #36                 // class java/io/IOException
       7: dup
       8: ldc           #37                 // String Inbound response message already received
      10: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      13: invokevirtual #39                 // Method org/wso2/transport/http/netty/message/HttpCarbonMessage.setIoException:(Ljava/io/IOException;)V
      16: aload_0
      17: getfield      #8                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      20: new           #40                 // class org/wso2/transport/http/netty/contractimpl/sender/states/ReceivingHeaders
      23: dup
      24: aload_0
      25: getfield      #8                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      28: invokespecial #41                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/ReceivingHeaders."<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;)V
      31: invokevirtual #42                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/SenderState;)V
      34: aload_0
      35: getfield      #8                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      38: invokevirtual #43                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.getSenderState:()Lorg/wso2/transport/http/netty/contractimpl/sender/states/SenderState;
      41: aload_1
      42: aload_2
      43: invokeinterface #44,  3           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/states/SenderState.readInboundResponseHeaders:(Lorg/wso2/transport/http/netty/contractimpl/sender/TargetHandler;Lio/netty/handler/codec/http/HttpResponse;)V
      48: return

  public void readInboundResponseEntityBody(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpContent, org.wso2.transport.http.netty.message.HttpCarbonMessage);
    Code:
       0: getstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #45                 // String readInboundResponseEntityBody {}
       5: ldc           #19                 // String is not a dependant action of this state
       7: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void handleAbruptChannelClosure(org.wso2.transport.http.netty.contract.HttpResponseFuture);
    Code:
       0: getstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #46                 // String Remote host closed the connection while writing outbound request entity body
       5: invokeinterface #47,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      10: return

  public void handleIdleTimeoutConnectionClosure(org.wso2.transport.http.netty.contract.HttpResponseFuture, java.lang.String);
    Code:
       0: getstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #48                 // String Error in HTTP client: {}
       5: ldc           #49                 // String Idle timeout triggered while writing outbound request entity body
       7: invokeinterface #50,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  private void writeOutboundRequestBody(io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: getfield      #9                  // Field targetChannel:Lorg/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel;
       4: invokevirtual #30                 // Method org/wso2/transport/http/netty/contractimpl/sender/channel/TargetChannel.getChannel:()Lio/netty/channel/Channel;
       7: aload_1
       8: invokeinterface #31,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokespecial #51                 // Method checkForRequestWriteStatus:(Lio/netty/channel/ChannelFuture;)V
      19: return

  private void checkForRequestWriteStatus(io.netty.channel.ChannelFuture);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #52,  0             // InvokeDynamic #0:operationComplete:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/SendingEntityBody;)Lio/netty/util/concurrent/GenericFutureListener;
       7: invokeinterface #53,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      12: pop
      13: return

  private void lambda$checkForRequestWriteStatus$39(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #54,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
       6: astore_2
       7: aload_2
       8: ifnull        41
      11: aload_2
      12: instanceof    #55                 // class java/nio/channels/ClosedChannelException
      15: ifeq          28
      18: new           #36                 // class java/io/IOException
      21: dup
      22: ldc           #56                 // String Connection between client and remote host is closed
      24: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      27: astore_2
      28: aload_0
      29: getfield      #14                 // Field httpInboundResponseFuture:Lorg/wso2/transport/http/netty/contract/HttpResponseFuture;
      32: aload_2
      33: invokeinterface #57,  2           // InterfaceMethod org/wso2/transport/http/netty/contract/HttpResponseFuture.notifyHttpListener:(Ljava/lang/Throwable;)V
      38: goto          59
      41: aload_0
      42: getfield      #8                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      45: new           #58                 // class org/wso2/transport/http/netty/contractimpl/sender/states/RequestCompleted
      48: dup
      49: aload_0
      50: getfield      #8                  // Field messageStateContext:Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;
      53: invokespecial #59                 // Method org/wso2/transport/http/netty/contractimpl/sender/states/RequestCompleted."<init>":(Lorg/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext;)V
      56: invokevirtual #42                 // Method org/wso2/transport/http/netty/contractimpl/common/states/MessageStateContext.setSenderState:(Lorg/wso2/transport/http/netty/contractimpl/sender/states/SenderState;)V
      59: return

  static {};
    Code:
       0: ldc           #60                 // class org/wso2/transport/http/netty/contractimpl/sender/states/SendingEntityBody
       2: invokestatic  #61                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #17                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
