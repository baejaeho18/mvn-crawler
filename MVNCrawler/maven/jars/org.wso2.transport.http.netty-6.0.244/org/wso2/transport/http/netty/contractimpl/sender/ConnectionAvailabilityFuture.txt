Compiled from "ConnectionAvailabilityFuture.java"
public class org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityFuture {
  private io.netty.channel.ChannelFuture socketAvailabilityFuture;

  private boolean isSSLEnabled;

  private org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityListener listener;

  private java.lang.String protocol;

  private boolean socketAvailable;

  private boolean isFailure;

  private java.lang.Throwable throwable;

  private boolean forceHttp2;

  public org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityFuture();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field isSSLEnabled:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field listener:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityListener;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field socketAvailable:Z
      19: aload_0
      20: iconst_0
      21: putfield      #1                  // Field forceHttp2:Z
      24: return

  public void setSocketAvailabilityFuture(io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field socketAvailabilityFuture:Lio/netty/channel/ChannelFuture;
       5: aload_1
       6: new           #7                  // class org/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture$1
       9: dup
      10: aload_0
      11: invokespecial #8                  // Method org/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture$1."<init>":(Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityFuture;)V
      14: invokeinterface #9,  2            // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      19: pop
      20: return

  void setSSLEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field isSSLEnabled:Z
       5: return

  public void setForceHttp2(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field forceHttp2:Z
       5: return

  void notifySuccess(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field protocol:Ljava/lang/String;
       5: aload_0
       6: getfield      #3                  // Field listener:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityListener;
       9: ifnull        80
      12: aload_0
      13: getfield      #1                  // Field forceHttp2:Z
      16: ifeq          66
      19: aload_1
      20: ldc           #12                 // String h2c
      22: invokevirtual #13                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      25: ifne          66
      28: aload_1
      29: ldc           #14                 // String h2
      31: invokevirtual #13                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      34: ifne          66
      37: new           #15                 // class org/wso2/transport/http/netty/contract/ClientConnectorException
      40: dup
      41: ldc           #16                 // String Protocol must be HTTP/2
      43: getstatic     #17                 // Field io/netty/handler/codec/http/HttpResponseStatus.HTTP_VERSION_NOT_SUPPORTED:Lio/netty/handler/codec/http/HttpResponseStatus;
      46: invokevirtual #18                 // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
      49: invokespecial #19                 // Method org/wso2/transport/http/netty/contract/ClientConnectorException."<init>":(Ljava/lang/String;I)V
      52: astore_2
      53: aload_0
      54: getfield      #3                  // Field listener:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityListener;
      57: aload_2
      58: invokeinterface #20,  2           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityListener.onFailure:(Lorg/wso2/transport/http/netty/contract/ClientConnectorException;)V
      63: goto          80
      66: aload_0
      67: getfield      #3                  // Field listener:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityListener;
      70: aload_1
      71: aload_0
      72: getfield      #6                  // Field socketAvailabilityFuture:Lio/netty/channel/ChannelFuture;
      75: invokeinterface #21,  3           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityListener.onSuccess:(Ljava/lang/String;Lio/netty/channel/ChannelFuture;)V
      80: return

  void notifyFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #22                 // Field isFailure:Z
       5: aload_0
       6: aload_1
       7: putfield      #23                 // Field throwable:Ljava/lang/Throwable;
      10: aload_0
      11: getfield      #3                  // Field listener:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityListener;
      14: ifnull        26
      17: aload_0
      18: aload_0
      19: getfield      #6                  // Field socketAvailabilityFuture:Lio/netty/channel/ChannelFuture;
      22: aload_1
      23: invokespecial #24                 // Method notifyErrorState:(Lio/netty/channel/ChannelFuture;Ljava/lang/Throwable;)V
      26: return

  public void setListener(org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field listener:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityListener;
       5: aload_0
       6: getfield      #10                 // Field protocol:Ljava/lang/String;
       9: ifnull        23
      12: aload_0
      13: aload_0
      14: getfield      #10                 // Field protocol:Ljava/lang/String;
      17: invokevirtual #25                 // Method notifySuccess:(Ljava/lang/String;)V
      20: goto          77
      23: aload_0
      24: getfield      #2                  // Field isSSLEnabled:Z
      27: ifne          62
      30: aload_0
      31: getfield      #4                  // Field socketAvailable:Z
      34: ifeq          62
      37: aload_0
      38: getfield      #1                  // Field forceHttp2:Z
      41: ifeq          53
      44: aload_0
      45: ldc           #12                 // String h2c
      47: invokevirtual #25                 // Method notifySuccess:(Ljava/lang/String;)V
      50: goto          77
      53: aload_0
      54: ldc           #26                 // String http
      56: invokevirtual #25                 // Method notifySuccess:(Ljava/lang/String;)V
      59: goto          77
      62: aload_0
      63: getfield      #22                 // Field isFailure:Z
      66: ifeq          77
      69: aload_0
      70: aload_0
      71: getfield      #23                 // Field throwable:Ljava/lang/Throwable;
      74: invokevirtual #27                 // Method notifyFailure:(Ljava/lang/Throwable;)V
      77: return

  private void notifyErrorState(io.netty.channel.ChannelFuture, java.lang.Throwable);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_1
       4: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
       9: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
      14: ifnull        33
      17: aload_1
      18: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      23: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
      28: invokevirtual #30                 // Method java/lang/Object.toString:()Ljava/lang/String;
      31: astore        4
      33: aload_1
      34: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      39: ifeq          88
      42: aload_1
      43: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isCancelled:()Z
      48: ifeq          88
      51: new           #15                 // class org/wso2/transport/http/netty/contract/ClientConnectorException
      54: dup
      55: new           #33                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #35                 // String Request cancelled:
      64: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload         4
      69: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: getstatic     #38                 // Field io/netty/handler/codec/http/HttpResponseStatus.BAD_GATEWAY:Lio/netty/handler/codec/http/HttpResponseStatus;
      78: invokevirtual #18                 // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
      81: invokespecial #19                 // Method org/wso2/transport/http/netty/contract/ClientConnectorException."<init>":(Ljava/lang/String;I)V
      84: astore_3
      85: goto          235
      88: aload_1
      89: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      94: ifne          161
      97: aload_1
      98: invokeinterface #39,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
     103: ifne          161
     106: aload_1
     107: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isCancelled:()Z
     112: ifne          161
     115: aload_1
     116: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
     121: ifnonnull     161
     124: new           #15                 // class org/wso2/transport/http/netty/contract/ClientConnectorException
     127: dup
     128: new           #33                 // class java/lang/StringBuilder
     131: dup
     132: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #41                 // String Connection timeout:
     137: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload         4
     142: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: getstatic     #38                 // Field io/netty/handler/codec/http/HttpResponseStatus.BAD_GATEWAY:Lio/netty/handler/codec/http/HttpResponseStatus;
     151: invokevirtual #18                 // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
     154: invokespecial #19                 // Method org/wso2/transport/http/netty/contract/ClientConnectorException."<init>":(Ljava/lang/String;I)V
     157: astore_3
     158: goto          235
     161: aload_2
     162: invokevirtual #42                 // Method java/lang/Throwable.toString:()Ljava/lang/String;
     165: ldc           #43                 // String javax.net.ssl
     167: invokevirtual #44                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     170: ifeq          212
     173: new           #15                 // class org/wso2/transport/http/netty/contract/ClientConnectorException
     176: dup
     177: new           #33                 // class java/lang/StringBuilder
     180: dup
     181: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     184: aload_2
     185: invokevirtual #45                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     188: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload         4
     193: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     199: getstatic     #38                 // Field io/netty/handler/codec/http/HttpResponseStatus.BAD_GATEWAY:Lio/netty/handler/codec/http/HttpResponseStatus;
     202: invokevirtual #18                 // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
     205: invokespecial #19                 // Method org/wso2/transport/http/netty/contract/ClientConnectorException."<init>":(Ljava/lang/String;I)V
     208: astore_3
     209: goto          235
     212: new           #15                 // class org/wso2/transport/http/netty/contract/ClientConnectorException
     215: dup
     216: aload_1
     217: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
     222: invokevirtual #45                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     225: getstatic     #38                 // Field io/netty/handler/codec/http/HttpResponseStatus.BAD_GATEWAY:Lio/netty/handler/codec/http/HttpResponseStatus;
     228: invokevirtual #18                 // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
     231: invokespecial #19                 // Method org/wso2/transport/http/netty/contract/ClientConnectorException."<init>":(Ljava/lang/String;I)V
     234: astore_3
     235: aload_1
     236: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
     241: ifnull        255
     244: aload_3
     245: aload_1
     246: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
     251: invokevirtual #46                 // Method org/wso2/transport/http/netty/contract/ClientConnectorException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     254: pop
     255: aload_0
     256: getfield      #3                  // Field listener:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityListener;
     259: aload_3
     260: invokeinterface #20,  2           // InterfaceMethod org/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityListener.onFailure:(Lorg/wso2/transport/http/netty/contract/ClientConnectorException;)V
     265: return

  static boolean access$002(org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityFuture, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #4                  // Field socketAvailable:Z
       6: ireturn

  static org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityListener access$100(org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityFuture);
    Code:
       0: aload_0
       1: getfield      #3                  // Field listener:Lorg/wso2/transport/http/netty/contractimpl/sender/ConnectionAvailabilityListener;
       4: areturn

  static boolean access$200(org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityFuture);
    Code:
       0: aload_0
       1: getfield      #2                  // Field isSSLEnabled:Z
       4: ireturn

  static boolean access$300(org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityFuture);
    Code:
       0: aload_0
       1: getfield      #1                  // Field forceHttp2:Z
       4: ireturn
}
