Compiled from "XRefDirectoryWrapper.java"
public class org.hpccsystems.ws.client.wrappers.XRefDirectoryWrapper {
  private static final java.lang.String DIRECTORY_TAG;

  private static final java.lang.String NUM_TAG;

  private static final java.lang.String NAME_TAG;

  private static final java.lang.String NEG_SKEW_TAG;

  private static final java.lang.String MAX_SIZE_TAG;

  private static final java.lang.String MAX_IP_TAG;

  private static final java.lang.String MIN_SIZE_TAG;

  private static final java.lang.String SIZE_TAG;

  private static final java.lang.String POS_SKEW_TAG;

  private static final java.lang.String MIN_IP_TAG;

  private int num;

  private java.lang.String name;

  private java.lang.String negativeskew;

  private long maxsize;

  private java.lang.String maxip;

  private long minsize;

  private long size;

  private java.lang.String positiveskew;

  private java.lang.String minip;

  public org.hpccsystems.ws.client.wrappers.XRefDirectoryWrapper(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field num:I
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field name:Ljava/lang/String;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field negativeskew:Ljava/lang/String;
      19: aload_0
      20: ldc2_w        #5                  // long -1l
      23: putfield      #7                  // Field maxsize:J
      26: aload_0
      27: aconst_null
      28: putfield      #8                  // Field maxip:Ljava/lang/String;
      31: aload_0
      32: ldc2_w        #5                  // long -1l
      35: putfield      #9                  // Field minsize:J
      38: aload_0
      39: ldc2_w        #5                  // long -1l
      42: putfield      #10                 // Field size:J
      45: aload_0
      46: aconst_null
      47: putfield      #11                 // Field positiveskew:Ljava/lang/String;
      50: aload_0
      51: aconst_null
      52: putfield      #12                 // Field minip:Ljava/lang/String;
      55: aload_1
      56: ifnull        135
      59: aload_1
      60: invokevirtual #13                 // Method java/lang/String.isEmpty:()Z
      63: ifne          135
      66: invokestatic  #14                 // Method javax/xml/parsers/DocumentBuilderFactory.newInstance:()Ljavax/xml/parsers/DocumentBuilderFactory;
      69: astore_2
      70: aload_2
      71: invokevirtual #15                 // Method javax/xml/parsers/DocumentBuilderFactory.newDocumentBuilder:()Ljavax/xml/parsers/DocumentBuilder;
      74: astore_3
      75: aload_3
      76: new           #16                 // class java/io/ByteArrayInputStream
      79: dup
      80: aload_1
      81: ldc           #17                 // String UTF-8
      83: invokevirtual #18                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      86: invokespecial #19                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      89: invokevirtual #20                 // Method javax/xml/parsers/DocumentBuilder.parse:(Ljava/io/InputStream;)Lorg/w3c/dom/Document;
      92: astore        4
      94: aload         4
      96: ldc           #22                 // String Directory
      98: invokeinterface #23,  2           // InterfaceMethod org/w3c/dom/Document.getElementsByTagName:(Ljava/lang/String;)Lorg/w3c/dom/NodeList;
     103: astore        5
     105: aload         5
     107: invokeinterface #24,  1           // InterfaceMethod org/w3c/dom/NodeList.getLength:()I
     112: ifle          127
     115: aload_0
     116: aload         5
     118: iconst_0
     119: invokeinterface #25,  2           // InterfaceMethod org/w3c/dom/NodeList.item:(I)Lorg/w3c/dom/Node;
     124: invokespecial #26                 // Method populateDirectory:(Lorg/w3c/dom/Node;)V
     127: goto          135
     130: astore_2
     131: aload_2
     132: invokevirtual #28                 // Method java/lang/Exception.printStackTrace:()V
     135: return
    Exception table:
       from    to  target type
          66   127   130   Class java/lang/Exception

  public org.hpccsystems.ws.client.wrappers.XRefDirectoryWrapper(org.w3c.dom.Node);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field num:I
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field name:Ljava/lang/String;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field negativeskew:Ljava/lang/String;
      19: aload_0
      20: ldc2_w        #5                  // long -1l
      23: putfield      #7                  // Field maxsize:J
      26: aload_0
      27: aconst_null
      28: putfield      #8                  // Field maxip:Ljava/lang/String;
      31: aload_0
      32: ldc2_w        #5                  // long -1l
      35: putfield      #9                  // Field minsize:J
      38: aload_0
      39: ldc2_w        #5                  // long -1l
      42: putfield      #10                 // Field size:J
      45: aload_0
      46: aconst_null
      47: putfield      #11                 // Field positiveskew:Ljava/lang/String;
      50: aload_0
      51: aconst_null
      52: putfield      #12                 // Field minip:Ljava/lang/String;
      55: aload_0
      56: aload_1
      57: invokespecial #26                 // Method populateDirectory:(Lorg/w3c/dom/Node;)V
      60: return

  private void populateDirectory(org.w3c.dom.Node);
    Code:
       0: aload_1
       1: ifnull        284
       4: aload_1
       5: invokeinterface #29,  1           // InterfaceMethod org/w3c/dom/Node.getChildNodes:()Lorg/w3c/dom/NodeList;
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_2
      15: invokeinterface #24,  1           // InterfaceMethod org/w3c/dom/NodeList.getLength:()I
      20: if_icmpge     284
      23: aload_2
      24: iload_3
      25: invokeinterface #25,  2           // InterfaceMethod org/w3c/dom/NodeList.item:(I)Lorg/w3c/dom/Node;
      30: astore        4
      32: aload         4
      34: invokeinterface #30,  1           // InterfaceMethod org/w3c/dom/Node.getNodeName:()Ljava/lang/String;
      39: astore        5
      41: aload         5
      43: ldc           #31                 // String Num
      45: invokevirtual #32                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      48: ifeq          71
      51: aload_0
      52: aload         4
      54: invokeinterface #33,  1           // InterfaceMethod org/w3c/dom/Node.getTextContent:()Ljava/lang/String;
      59: invokestatic  #34                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      62: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
      65: invokevirtual #36                 // Method setNum:(I)V
      68: goto          278
      71: aload         5
      73: ldc           #37                 // String Name
      75: invokevirtual #32                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      78: ifeq          95
      81: aload_0
      82: aload         4
      84: invokeinterface #33,  1           // InterfaceMethod org/w3c/dom/Node.getTextContent:()Ljava/lang/String;
      89: invokevirtual #38                 // Method setName:(Ljava/lang/String;)V
      92: goto          278
      95: aload         5
      97: ldc           #39                 // String NegativeSkew
      99: invokevirtual #32                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     102: ifeq          119
     105: aload_0
     106: aload         4
     108: invokeinterface #33,  1           // InterfaceMethod org/w3c/dom/Node.getTextContent:()Ljava/lang/String;
     113: invokevirtual #40                 // Method setNegativeskew:(Ljava/lang/String;)V
     116: goto          278
     119: aload         5
     121: ldc           #41                 // String MaxSize
     123: invokevirtual #32                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     126: ifeq          149
     129: aload_0
     130: aload         4
     132: invokeinterface #33,  1           // InterfaceMethod org/w3c/dom/Node.getTextContent:()Ljava/lang/String;
     137: invokestatic  #42                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
     140: invokevirtual #43                 // Method java/lang/Long.longValue:()J
     143: invokevirtual #44                 // Method setMaxsize:(J)V
     146: goto          278
     149: aload         5
     151: ldc           #45                 // String MaxIP
     153: invokevirtual #32                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     156: ifeq          173
     159: aload_0
     160: aload         4
     162: invokeinterface #33,  1           // InterfaceMethod org/w3c/dom/Node.getTextContent:()Ljava/lang/String;
     167: invokevirtual #46                 // Method setMaxip:(Ljava/lang/String;)V
     170: goto          278
     173: aload         5
     175: ldc           #47                 // String MinSize
     177: invokevirtual #32                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     180: ifeq          203
     183: aload_0
     184: aload         4
     186: invokeinterface #33,  1           // InterfaceMethod org/w3c/dom/Node.getTextContent:()Ljava/lang/String;
     191: invokestatic  #42                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
     194: invokevirtual #43                 // Method java/lang/Long.longValue:()J
     197: invokevirtual #48                 // Method setMinsize:(J)V
     200: goto          278
     203: aload         5
     205: ldc           #49                 // String Size
     207: invokevirtual #32                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     210: ifeq          233
     213: aload_0
     214: aload         4
     216: invokeinterface #33,  1           // InterfaceMethod org/w3c/dom/Node.getTextContent:()Ljava/lang/String;
     221: invokestatic  #42                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
     224: invokevirtual #43                 // Method java/lang/Long.longValue:()J
     227: invokevirtual #50                 // Method setSize:(J)V
     230: goto          278
     233: aload         5
     235: ldc           #51                 // String PositiveSkew
     237: invokevirtual #32                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     240: ifeq          257
     243: aload_0
     244: aload         4
     246: invokeinterface #33,  1           // InterfaceMethod org/w3c/dom/Node.getTextContent:()Ljava/lang/String;
     251: invokevirtual #52                 // Method setPositiveskew:(Ljava/lang/String;)V
     254: goto          278
     257: aload         5
     259: ldc           #53                 // String MinIP
     261: invokevirtual #32                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     264: ifeq          278
     267: aload_0
     268: aload         4
     270: invokeinterface #33,  1           // InterfaceMethod org/w3c/dom/Node.getTextContent:()Ljava/lang/String;
     275: invokevirtual #54                 // Method setMinip:(Ljava/lang/String;)V
     278: iinc          3, 1
     281: goto          13
     284: return

  public int getNum();
    Code:
       0: aload_0
       1: getfield      #2                  // Field num:I
       4: ireturn

  public void setNum(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field num:I
       5: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field name:Ljava/lang/String;
       5: return

  public java.lang.String getNegativeskew();
    Code:
       0: aload_0
       1: getfield      #4                  // Field negativeskew:Ljava/lang/String;
       4: areturn

  public void setNegativeskew(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field negativeskew:Ljava/lang/String;
       5: return

  public long getMaxsize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxsize:J
       4: lreturn

  public void setMaxsize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field maxsize:J
       5: return

  public java.lang.String getMaxip();
    Code:
       0: aload_0
       1: getfield      #8                  // Field maxip:Ljava/lang/String;
       4: areturn

  public void setMaxip(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field maxip:Ljava/lang/String;
       5: return

  public long getMinsize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field minsize:J
       4: lreturn

  public void setMinsize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #9                  // Field minsize:J
       5: return

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field size:J
       4: lreturn

  public void setSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field size:J
       5: return

  public java.lang.String getPositiveskew();
    Code:
       0: aload_0
       1: getfield      #11                 // Field positiveskew:Ljava/lang/String;
       4: areturn

  public void setPositiveskew(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field positiveskew:Ljava/lang/String;
       5: return

  public java.lang.String getMinip();
    Code:
       0: aload_0
       1: getfield      #12                 // Field minip:Ljava/lang/String;
       4: areturn

  public void setMinip(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field minip:Ljava/lang/String;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #55                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #57                 // String Num:
       9: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field num:I
      16: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #60                 // String  Name:
      21: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field name:Ljava/lang/String;
      28: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #61                 // String  NegativeSkew:  MaxSize:
      33: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #7                  // Field maxsize:J
      40: invokevirtual #62                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #63                 // String  MaxIP:
      45: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #8                  // Field maxip:Ljava/lang/String;
      52: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #64                 // String  MinSize:
      57: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #9                  // Field minsize:J
      64: invokevirtual #62                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      67: ldc           #65                 // String  Size:
      69: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #10                 // Field size:J
      76: invokevirtual #62                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      79: ldc           #66                 // String  PositiveSkew:
      81: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #11                 // Field positiveskew:Ljava/lang/String;
      88: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #67                 // String  MinIP:
      93: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #12                 // Field minip:Ljava/lang/String;
     100: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: areturn
}
