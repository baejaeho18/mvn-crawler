Compiled from "BinaryRecordReader.java"
class org.hpccsystems.dfs.client.CountingInputStream extends java.io.InputStream {
  long streamPos;

  long markPos;

  java.io.InputStream inputStream;

  org.hpccsystems.dfs.client.CountingInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field streamPos:J
       9: aload_0
      10: lconst_0
      11: putfield      #3                  // Field markPos:J
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field inputStream:Ljava/io/InputStream;
      19: aload_0
      20: aload_1
      21: putfield      #4                  // Field inputStream:Ljava/io/InputStream;
      24: return

  long getStreamPosition();
    Code:
       0: aload_0
       1: getfield      #2                  // Field streamPos:J
       4: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputStream:Ljava/io/InputStream;
       4: invokevirtual #5                  // Method java/io/InputStream.available:()I
       7: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputStream:Ljava/io/InputStream;
       4: invokevirtual #6                  // Method java/io/InputStream.close:()V
       7: return

  public void mark(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field streamPos:J
       5: putfield      #3                  // Field markPos:J
       8: aload_0
       9: getfield      #4                  // Field inputStream:Ljava/io/InputStream;
      12: iload_1
      13: invokevirtual #7                  // Method java/io/InputStream.mark:(I)V
      16: return

  public boolean markSupported();
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputStream:Ljava/io/InputStream;
       4: invokevirtual #8                  // Method java/io/InputStream.markSupported:()Z
       7: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputStream:Ljava/io/InputStream;
       4: invokevirtual #9                  // Method java/io/InputStream.read:()I
       7: istore_1
       8: iload_1
       9: iconst_m1
      10: if_icmple     23
      13: aload_0
      14: dup
      15: getfield      #2                  // Field streamPos:J
      18: lconst_1
      19: ladd
      20: putfield      #2                  // Field streamPos:J
      23: iload_1
      24: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputStream:Ljava/io/InputStream;
       4: aload_1
       5: invokevirtual #10                 // Method java/io/InputStream.read:([B)I
       8: istore_2
       9: iload_2
      10: ifle          24
      13: aload_0
      14: dup
      15: getfield      #2                  // Field streamPos:J
      18: iload_2
      19: i2l
      20: ladd
      21: putfield      #2                  // Field streamPos:J
      24: iload_2
      25: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputStream:Ljava/io/InputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #11                 // Method java/io/InputStream.read:([BII)I
      10: istore        4
      12: iload         4
      14: ifle          29
      17: aload_0
      18: dup
      19: getfield      #2                  // Field streamPos:J
      22: iload         4
      24: i2l
      25: ladd
      26: putfield      #2                  // Field streamPos:J
      29: iload         4
      31: ireturn

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field markPos:J
       5: putfield      #2                  // Field streamPos:J
       8: aload_0
       9: getfield      #4                  // Field inputStream:Ljava/io/InputStream;
      12: invokevirtual #12                 // Method java/io/InputStream.reset:()V
      15: return

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputStream:Ljava/io/InputStream;
       4: lload_1
       5: invokevirtual #13                 // Method java/io/InputStream.skip:(J)J
       8: lstore_3
       9: aload_0
      10: dup
      11: getfield      #2                  // Field streamPos:J
      14: lload_3
      15: ladd
      16: putfield      #2                  // Field streamPos:J
      19: lload_3
      20: lreturn
}
