Compiled from "GenericRowRecordAccessor.java"
public class org.hpccsystems.spark.GenericRowRecordAccessor implements org.hpccsystems.dfs.client.IRecordAccessor {
  private org.apache.spark.sql.catalyst.expressions.GenericRowWithSchema row;

  private org.hpccsystems.commons.ecl.FieldDef fieldDef;

  private org.hpccsystems.spark.GenericRowRecordAccessor[] childRecordAccessors;

  public org.hpccsystems.spark.GenericRowRecordAccessor(org.apache.spark.sql.types.StructType) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field row:Lorg/apache/spark/sql/catalyst/expressions/GenericRowWithSchema;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field childRecordAccessors:[Lorg/hpccsystems/spark/GenericRowRecordAccessor;
      19: aload_0
      20: aload_1
      21: invokestatic  #5                  // Method org/hpccsystems/spark/SparkSchemaTranslator.toHPCCRecordDef:(Lorg/apache/spark/sql/types/StructType;)Lorg/hpccsystems/commons/ecl/FieldDef;
      24: putfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
      27: goto          43
      30: astore_2
      31: new           #7                  // class java/lang/IllegalArgumentException
      34: dup
      35: aload_2
      36: invokevirtual #8                  // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      39: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: return
    Exception table:
       from    to  target type
          19    27    30   Class java/lang/Exception

  public org.hpccsystems.spark.GenericRowRecordAccessor(org.hpccsystems.commons.ecl.FieldDef);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field row:Lorg/apache/spark/sql/catalyst/expressions/GenericRowWithSchema;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field childRecordAccessors:[Lorg/hpccsystems/spark/GenericRowRecordAccessor;
      19: aload_0
      20: aload_1
      21: putfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
      24: aload_0
      25: aload_0
      26: getfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
      29: invokevirtual #10                 // Method org/hpccsystems/commons/ecl/FieldDef.getNumDefs:()I
      32: anewarray     #11                 // class org/hpccsystems/spark/GenericRowRecordAccessor
      35: putfield      #4                  // Field childRecordAccessors:[Lorg/hpccsystems/spark/GenericRowRecordAccessor;
      38: iconst_0
      39: istore_2
      40: iload_2
      41: aload_0
      42: getfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
      45: invokevirtual #10                 // Method org/hpccsystems/commons/ecl/FieldDef.getNumDefs:()I
      48: if_icmpge     157
      51: aload_0
      52: getfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
      55: iload_2
      56: invokevirtual #12                 // Method org/hpccsystems/commons/ecl/FieldDef.getDef:(I)Lorg/hpccsystems/commons/ecl/FieldDef;
      59: astore_3
      60: aload_3
      61: invokevirtual #13                 // Method org/hpccsystems/commons/ecl/FieldDef.getFieldType:()Lorg/hpccsystems/commons/ecl/FieldType;
      64: getstatic     #14                 // Field org/hpccsystems/commons/ecl/FieldType.RECORD:Lorg/hpccsystems/commons/ecl/FieldType;
      67: if_acmpeq     94
      70: aload_3
      71: invokevirtual #13                 // Method org/hpccsystems/commons/ecl/FieldDef.getFieldType:()Lorg/hpccsystems/commons/ecl/FieldType;
      74: getstatic     #15                 // Field org/hpccsystems/commons/ecl/FieldType.DATASET:Lorg/hpccsystems/commons/ecl/FieldType;
      77: if_acmpne     98
      80: aload_3
      81: iconst_0
      82: invokevirtual #12                 // Method org/hpccsystems/commons/ecl/FieldDef.getDef:(I)Lorg/hpccsystems/commons/ecl/FieldDef;
      85: invokevirtual #13                 // Method org/hpccsystems/commons/ecl/FieldDef.getFieldType:()Lorg/hpccsystems/commons/ecl/FieldType;
      88: getstatic     #14                 // Field org/hpccsystems/commons/ecl/FieldType.RECORD:Lorg/hpccsystems/commons/ecl/FieldType;
      91: if_acmpne     98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: istore        4
     101: iload         4
     103: ifeq          144
     106: aload_3
     107: astore        5
     109: aload_3
     110: invokevirtual #13                 // Method org/hpccsystems/commons/ecl/FieldDef.getFieldType:()Lorg/hpccsystems/commons/ecl/FieldType;
     113: getstatic     #15                 // Field org/hpccsystems/commons/ecl/FieldType.DATASET:Lorg/hpccsystems/commons/ecl/FieldType;
     116: if_acmpne     126
     119: aload_3
     120: iconst_0
     121: invokevirtual #12                 // Method org/hpccsystems/commons/ecl/FieldDef.getDef:(I)Lorg/hpccsystems/commons/ecl/FieldDef;
     124: astore        5
     126: aload_0
     127: getfield      #4                  // Field childRecordAccessors:[Lorg/hpccsystems/spark/GenericRowRecordAccessor;
     130: iload_2
     131: new           #11                 // class org/hpccsystems/spark/GenericRowRecordAccessor
     134: dup
     135: aload         5
     137: invokespecial #16                 // Method "<init>":(Lorg/hpccsystems/commons/ecl/FieldDef;)V
     140: aastore
     141: goto          151
     144: aload_0
     145: getfield      #4                  // Field childRecordAccessors:[Lorg/hpccsystems/spark/GenericRowRecordAccessor;
     148: iload_2
     149: aconst_null
     150: aastore
     151: iinc          2, 1
     154: goto          40
     157: return

  public org.hpccsystems.dfs.client.IRecordAccessor setRecord(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class org/apache/spark/sql/catalyst/expressions/GenericRowWithSchema
       5: putfield      #2                  // Field row:Lorg/apache/spark/sql/catalyst/expressions/GenericRowWithSchema;
       8: aload_0
       9: areturn

  public int getNumFields();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
       4: invokevirtual #10                 // Method org/hpccsystems/commons/ecl/FieldDef.getNumDefs:()I
       7: ireturn

  public java.lang.Object getFieldValue(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field row:Lorg/apache/spark/sql/catalyst/expressions/GenericRowWithSchema;
       4: iload_1
       5: invokevirtual #18                 // Method org/apache/spark/sql/catalyst/expressions/GenericRowWithSchema.get:(I)Ljava/lang/Object;
       8: areturn

  public org.hpccsystems.commons.ecl.FieldDef getFieldDefinition(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
       4: iload_1
       5: invokevirtual #12                 // Method org/hpccsystems/commons/ecl/FieldDef.getDef:(I)Lorg/hpccsystems/commons/ecl/FieldDef;
       8: areturn

  public org.hpccsystems.dfs.client.IRecordAccessor getChildRecordAccessor(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field childRecordAccessors:[Lorg/hpccsystems/spark/GenericRowRecordAccessor;
       4: iload_1
       5: aaload
       6: areturn
}
