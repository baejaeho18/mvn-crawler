Compiled from "GenericRowRecordBuilder.java"
public class org.hpccsystems.spark.GenericRowRecordBuilder implements org.hpccsystems.dfs.client.IRecordBuilder {
  private java.lang.Object[] fields;

  private org.hpccsystems.commons.ecl.FieldDef fieldDef;

  private org.apache.spark.sql.types.StructType schema;

  private org.hpccsystems.spark.GenericRowRecordBuilder[] childRecordBuilders;

  public org.hpccsystems.spark.GenericRowRecordBuilder(org.hpccsystems.commons.ecl.FieldDef) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field fields:[Ljava/lang/Object;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field schema:Lorg/apache/spark/sql/types/StructType;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field childRecordBuilders:[Lorg/hpccsystems/spark/GenericRowRecordBuilder;
      24: aload_0
      25: aload_1
      26: invokevirtual #6                  // Method setRecordDefinition:(Lorg/hpccsystems/commons/ecl/FieldDef;)V
      29: return

  public void setRecordDefinition(org.hpccsystems.commons.ecl.FieldDef) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
       5: aload_0
       6: aload_1
       7: invokestatic  #7                  // Method org/hpccsystems/spark/SparkSchemaTranslator.toSparkSchema:(Lorg/hpccsystems/commons/ecl/FieldDef;)Lorg/apache/spark/sql/types/StructType;
      10: putfield      #4                  // Field schema:Lorg/apache/spark/sql/types/StructType;
      13: goto          29
      16: astore_2
      17: new           #9                  // class java/lang/IllegalArgumentException
      20: dup
      21: aload_2
      22: invokevirtual #10                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      25: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_0
      31: getfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
      34: invokevirtual #12                 // Method org/hpccsystems/commons/ecl/FieldDef.getNumDefs:()I
      37: anewarray     #13                 // class org/hpccsystems/spark/GenericRowRecordBuilder
      40: putfield      #5                  // Field childRecordBuilders:[Lorg/hpccsystems/spark/GenericRowRecordBuilder;
      43: iconst_0
      44: istore_2
      45: iload_2
      46: aload_0
      47: getfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
      50: invokevirtual #12                 // Method org/hpccsystems/commons/ecl/FieldDef.getNumDefs:()I
      53: if_icmpge     162
      56: aload_0
      57: getfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
      60: iload_2
      61: invokevirtual #14                 // Method org/hpccsystems/commons/ecl/FieldDef.getDef:(I)Lorg/hpccsystems/commons/ecl/FieldDef;
      64: astore_3
      65: aload_3
      66: invokevirtual #15                 // Method org/hpccsystems/commons/ecl/FieldDef.getFieldType:()Lorg/hpccsystems/commons/ecl/FieldType;
      69: getstatic     #16                 // Field org/hpccsystems/commons/ecl/FieldType.RECORD:Lorg/hpccsystems/commons/ecl/FieldType;
      72: if_acmpeq     99
      75: aload_3
      76: invokevirtual #15                 // Method org/hpccsystems/commons/ecl/FieldDef.getFieldType:()Lorg/hpccsystems/commons/ecl/FieldType;
      79: getstatic     #17                 // Field org/hpccsystems/commons/ecl/FieldType.DATASET:Lorg/hpccsystems/commons/ecl/FieldType;
      82: if_acmpne     103
      85: aload_3
      86: iconst_0
      87: invokevirtual #14                 // Method org/hpccsystems/commons/ecl/FieldDef.getDef:(I)Lorg/hpccsystems/commons/ecl/FieldDef;
      90: invokevirtual #15                 // Method org/hpccsystems/commons/ecl/FieldDef.getFieldType:()Lorg/hpccsystems/commons/ecl/FieldType;
      93: getstatic     #16                 // Field org/hpccsystems/commons/ecl/FieldType.RECORD:Lorg/hpccsystems/commons/ecl/FieldType;
      96: if_acmpne     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: istore        4
     106: iload         4
     108: ifeq          149
     111: aload_3
     112: astore        5
     114: aload_3
     115: invokevirtual #15                 // Method org/hpccsystems/commons/ecl/FieldDef.getFieldType:()Lorg/hpccsystems/commons/ecl/FieldType;
     118: getstatic     #17                 // Field org/hpccsystems/commons/ecl/FieldType.DATASET:Lorg/hpccsystems/commons/ecl/FieldType;
     121: if_acmpne     131
     124: aload_3
     125: iconst_0
     126: invokevirtual #14                 // Method org/hpccsystems/commons/ecl/FieldDef.getDef:(I)Lorg/hpccsystems/commons/ecl/FieldDef;
     129: astore        5
     131: aload_0
     132: getfield      #5                  // Field childRecordBuilders:[Lorg/hpccsystems/spark/GenericRowRecordBuilder;
     135: iload_2
     136: new           #13                 // class org/hpccsystems/spark/GenericRowRecordBuilder
     139: dup
     140: aload         5
     142: invokespecial #18                 // Method "<init>":(Lorg/hpccsystems/commons/ecl/FieldDef;)V
     145: aastore
     146: goto          156
     149: aload_0
     150: getfield      #5                  // Field childRecordBuilders:[Lorg/hpccsystems/spark/GenericRowRecordBuilder;
     153: iload_2
     154: aconst_null
     155: aastore
     156: iinc          2, 1
     159: goto          45
     162: return
    Exception table:
       from    to  target type
           5    13    16   Class java/lang/Exception

  public org.hpccsystems.commons.ecl.FieldDef getRecordDefinition();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
       4: areturn

  public void startRecord() throws java.lang.InstantiationException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field fieldDef:Lorg/hpccsystems/commons/ecl/FieldDef;
       5: invokevirtual #12                 // Method org/hpccsystems/commons/ecl/FieldDef.getNumDefs:()I
       8: anewarray     #19                 // class java/lang/Object
      11: putfield      #2                  // Field fields:[Ljava/lang/Object;
      14: return

  public java.lang.Object finalizeRecord() throws java.lang.InstantiationException;
    Code:
       0: new           #20                 // class org/apache/spark/sql/catalyst/expressions/GenericRowWithSchema
       3: dup
       4: aload_0
       5: getfield      #2                  // Field fields:[Ljava/lang/Object;
       8: aload_0
       9: getfield      #4                  // Field schema:Lorg/apache/spark/sql/types/StructType;
      12: invokespecial #21                 // Method org/apache/spark/sql/catalyst/expressions/GenericRowWithSchema."<init>":([Ljava/lang/Object;Lorg/apache/spark/sql/types/StructType;)V
      15: astore_1
      16: aload_0
      17: aconst_null
      18: putfield      #2                  // Field fields:[Ljava/lang/Object;
      21: aload_1
      22: areturn

  public void setFieldValue(int, java.lang.Object) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field fields:[Ljava/lang/Object;
       4: iload_1
       5: aload_2
       6: aastore
       7: return

  public org.hpccsystems.dfs.client.IRecordBuilder getChildRecordBuilder(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field childRecordBuilders:[Lorg/hpccsystems/spark/GenericRowRecordBuilder;
       4: iload_1
       5: aaload
       6: areturn
}
