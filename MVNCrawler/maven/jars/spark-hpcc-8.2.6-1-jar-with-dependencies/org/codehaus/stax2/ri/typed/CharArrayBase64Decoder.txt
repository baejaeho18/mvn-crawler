Compiled from "CharArrayBase64Decoder.java"
public final class org.codehaus.stax2.ri.typed.CharArrayBase64Decoder extends org.codehaus.stax2.ri.typed.Base64DecoderBase {
  char[] _currSegment;

  int _currSegmentPtr;

  int _currSegmentEnd;

  final java.util.ArrayList _nextSegments;

  int _lastSegmentOffset;

  int _lastSegmentEnd;

  int _nextSegmentIndex;

  public org.codehaus.stax2.ri.typed.CharArrayBase64Decoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/stax2/ri/typed/Base64DecoderBase."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field _nextSegments:Ljava/util/ArrayList;
      15: return

  public void init(org.codehaus.stax2.typed.Base64Variant, boolean, char[], int, int, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
       5: iload_2
       6: ifeq          14
       9: aload_0
      10: iconst_0
      11: putfield      #6                  // Field _state:I
      14: aload_0
      15: getfield      #4                  // Field _nextSegments:Ljava/util/ArrayList;
      18: invokevirtual #7                  // Method java/util/ArrayList.clear:()V
      21: aload         6
      23: ifnull        36
      26: aload         6
      28: invokeinterface #8,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      33: ifeq          59
      36: aload_0
      37: aload_3
      38: putfield      #9                  // Field _currSegment:[C
      41: aload_0
      42: iload         4
      44: putfield      #10                 // Field _currSegmentPtr:I
      47: aload_0
      48: iload         4
      50: iload         5
      52: iadd
      53: putfield      #11                 // Field _currSegmentEnd:I
      56: goto          168
      59: aload_3
      60: ifnonnull     71
      63: new           #12                 // class java/lang/IllegalArgumentException
      66: dup
      67: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":()V
      70: athrow
      71: aload         6
      73: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      78: astore        7
      80: aload_0
      81: aload         7
      83: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      88: checkcast     #16                 // class "[C"
      91: checkcast     #16                 // class "[C"
      94: putfield      #9                  // Field _currSegment:[C
      97: aload_0
      98: iconst_0
      99: putfield      #10                 // Field _currSegmentPtr:I
     102: aload_0
     103: aload_0
     104: getfield      #9                  // Field _currSegment:[C
     107: arraylength
     108: putfield      #11                 // Field _currSegmentEnd:I
     111: aload         7
     113: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     118: ifeq          139
     121: aload_0
     122: getfield      #4                  // Field _nextSegments:Ljava/util/ArrayList;
     125: aload         7
     127: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     132: invokevirtual #18                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     135: pop
     136: goto          111
     139: aload_0
     140: iconst_0
     141: putfield      #19                 // Field _nextSegmentIndex:I
     144: aload_0
     145: getfield      #4                  // Field _nextSegments:Ljava/util/ArrayList;
     148: aload_3
     149: invokevirtual #18                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     152: pop
     153: aload_0
     154: iload         4
     156: putfield      #20                 // Field _lastSegmentOffset:I
     159: aload_0
     160: iload         4
     162: iload         5
     164: iadd
     165: putfield      #21                 // Field _lastSegmentEnd:I
     168: return

  public int decode(byte[], int, int) throws java.lang.IllegalArgumentException;
    Code:
       0: iload_2
       1: istore        4
       3: iload_2
       4: iload_3
       5: iadd
       6: istore        5
       8: aload_0
       9: getfield      #6                  // Field _state:I
      12: tableswitch   { // 0 to 7
                     0: 60
                     1: 136
                     2: 218
                     3: 316
                     4: 423
                     5: 451
                     6: 479
                     7: 513
               default: 621
          }
      60: aload_0
      61: getfield      #10                 // Field _currSegmentPtr:I
      64: aload_0
      65: getfield      #11                 // Field _currSegmentEnd:I
      68: if_icmplt     81
      71: aload_0
      72: invokespecial #22                 // Method nextSegment:()Z
      75: ifne          81
      78: goto          651
      81: aload_0
      82: getfield      #9                  // Field _currSegment:[C
      85: aload_0
      86: dup
      87: getfield      #10                 // Field _currSegmentPtr:I
      90: dup_x1
      91: iconst_1
      92: iadd
      93: putfield      #10                 // Field _currSegmentPtr:I
      96: caload
      97: istore        6
      99: iload         6
     101: bipush        32
     103: if_icmple     60
     106: aload_0
     107: getfield      #5                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
     110: iload         6
     112: invokevirtual #23                 // Method org/codehaus/stax2/typed/Base64Variant.decodeBase64Char:(C)I
     115: istore        7
     117: iload         7
     119: ifge          130
     122: aload_0
     123: iload         6
     125: iconst_0
     126: invokevirtual #24                 // Method reportInvalidChar:(CI)Ljava/lang/IllegalArgumentException;
     129: athrow
     130: aload_0
     131: iload         7
     133: putfield      #25                 // Field _decodedData:I
     136: aload_0
     137: getfield      #10                 // Field _currSegmentPtr:I
     140: aload_0
     141: getfield      #11                 // Field _currSegmentEnd:I
     144: if_icmplt     162
     147: aload_0
     148: invokespecial #22                 // Method nextSegment:()Z
     151: ifne          162
     154: aload_0
     155: iconst_1
     156: putfield      #6                  // Field _state:I
     159: goto          651
     162: aload_0
     163: getfield      #9                  // Field _currSegment:[C
     166: aload_0
     167: dup
     168: getfield      #10                 // Field _currSegmentPtr:I
     171: dup_x1
     172: iconst_1
     173: iadd
     174: putfield      #10                 // Field _currSegmentPtr:I
     177: caload
     178: istore        6
     180: aload_0
     181: getfield      #5                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
     184: iload         6
     186: invokevirtual #23                 // Method org/codehaus/stax2/typed/Base64Variant.decodeBase64Char:(C)I
     189: istore        7
     191: iload         7
     193: ifge          204
     196: aload_0
     197: iload         6
     199: iconst_1
     200: invokevirtual #24                 // Method reportInvalidChar:(CI)Ljava/lang/IllegalArgumentException;
     203: athrow
     204: aload_0
     205: aload_0
     206: getfield      #25                 // Field _decodedData:I
     209: bipush        6
     211: ishl
     212: iload         7
     214: ior
     215: putfield      #25                 // Field _decodedData:I
     218: aload_0
     219: getfield      #10                 // Field _currSegmentPtr:I
     222: aload_0
     223: getfield      #11                 // Field _currSegmentEnd:I
     226: if_icmplt     244
     229: aload_0
     230: invokespecial #22                 // Method nextSegment:()Z
     233: ifne          244
     236: aload_0
     237: iconst_2
     238: putfield      #6                  // Field _state:I
     241: goto          651
     244: aload_0
     245: getfield      #9                  // Field _currSegment:[C
     248: aload_0
     249: dup
     250: getfield      #10                 // Field _currSegmentPtr:I
     253: dup_x1
     254: iconst_1
     255: iadd
     256: putfield      #10                 // Field _currSegmentPtr:I
     259: caload
     260: istore        6
     262: aload_0
     263: getfield      #5                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
     266: iload         6
     268: invokevirtual #23                 // Method org/codehaus/stax2/typed/Base64Variant.decodeBase64Char:(C)I
     271: istore        7
     273: iload         7
     275: ifge          302
     278: iload         7
     280: bipush        -2
     282: if_icmpeq     293
     285: aload_0
     286: iload         6
     288: iconst_2
     289: invokevirtual #24                 // Method reportInvalidChar:(CI)Ljava/lang/IllegalArgumentException;
     292: athrow
     293: aload_0
     294: bipush        7
     296: putfield      #6                  // Field _state:I
     299: goto          8
     302: aload_0
     303: aload_0
     304: getfield      #25                 // Field _decodedData:I
     307: bipush        6
     309: ishl
     310: iload         7
     312: ior
     313: putfield      #25                 // Field _decodedData:I
     316: aload_0
     317: getfield      #10                 // Field _currSegmentPtr:I
     320: aload_0
     321: getfield      #11                 // Field _currSegmentEnd:I
     324: if_icmplt     342
     327: aload_0
     328: invokespecial #22                 // Method nextSegment:()Z
     331: ifne          342
     334: aload_0
     335: iconst_3
     336: putfield      #6                  // Field _state:I
     339: goto          651
     342: aload_0
     343: getfield      #9                  // Field _currSegment:[C
     346: aload_0
     347: dup
     348: getfield      #10                 // Field _currSegmentPtr:I
     351: dup_x1
     352: iconst_1
     353: iadd
     354: putfield      #10                 // Field _currSegmentPtr:I
     357: caload
     358: istore        6
     360: aload_0
     361: getfield      #5                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
     364: iload         6
     366: invokevirtual #23                 // Method org/codehaus/stax2/typed/Base64Variant.decodeBase64Char:(C)I
     369: istore        7
     371: iload         7
     373: ifge          409
     376: iload         7
     378: bipush        -2
     380: if_icmpeq     391
     383: aload_0
     384: iload         6
     386: iconst_3
     387: invokevirtual #24                 // Method reportInvalidChar:(CI)Ljava/lang/IllegalArgumentException;
     390: athrow
     391: aload_0
     392: dup
     393: getfield      #25                 // Field _decodedData:I
     396: iconst_2
     397: ishr
     398: putfield      #25                 // Field _decodedData:I
     401: aload_0
     402: iconst_5
     403: putfield      #6                  // Field _state:I
     406: goto          8
     409: aload_0
     410: aload_0
     411: getfield      #25                 // Field _decodedData:I
     414: bipush        6
     416: ishl
     417: iload         7
     419: ior
     420: putfield      #25                 // Field _decodedData:I
     423: iload_2
     424: iload         5
     426: if_icmplt     437
     429: aload_0
     430: iconst_4
     431: putfield      #6                  // Field _state:I
     434: goto          651
     437: aload_1
     438: iload_2
     439: iinc          2, 1
     442: aload_0
     443: getfield      #25                 // Field _decodedData:I
     446: bipush        16
     448: ishr
     449: i2b
     450: bastore
     451: iload_2
     452: iload         5
     454: if_icmplt     465
     457: aload_0
     458: iconst_5
     459: putfield      #6                  // Field _state:I
     462: goto          651
     465: aload_1
     466: iload_2
     467: iinc          2, 1
     470: aload_0
     471: getfield      #25                 // Field _decodedData:I
     474: bipush        8
     476: ishr
     477: i2b
     478: bastore
     479: iload_2
     480: iload         5
     482: if_icmplt     494
     485: aload_0
     486: bipush        6
     488: putfield      #6                  // Field _state:I
     491: goto          651
     494: aload_1
     495: iload_2
     496: iinc          2, 1
     499: aload_0
     500: getfield      #25                 // Field _decodedData:I
     503: i2b
     504: bastore
     505: aload_0
     506: iconst_0
     507: putfield      #6                  // Field _state:I
     510: goto          8
     513: aload_0
     514: getfield      #10                 // Field _currSegmentPtr:I
     517: aload_0
     518: getfield      #11                 // Field _currSegmentEnd:I
     521: if_icmplt     534
     524: aload_0
     525: invokespecial #22                 // Method nextSegment:()Z
     528: ifne          534
     531: goto          651
     534: aload_0
     535: getfield      #9                  // Field _currSegment:[C
     538: aload_0
     539: dup
     540: getfield      #10                 // Field _currSegmentPtr:I
     543: dup_x1
     544: iconst_1
     545: iadd
     546: putfield      #10                 // Field _currSegmentPtr:I
     549: caload
     550: istore        6
     552: aload_0
     553: getfield      #5                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
     556: iload         6
     558: invokevirtual #26                 // Method org/codehaus/stax2/typed/Base64Variant.usesPaddingChar:(C)Z
     561: ifne          602
     564: aload_0
     565: iload         6
     567: iconst_3
     568: new           #27                 // class java/lang/StringBuffer
     571: dup
     572: invokespecial #28                 // Method java/lang/StringBuffer."<init>":()V
     575: ldc           #29                 // String expected padding character \'
     577: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     580: aload_0
     581: getfield      #5                  // Field _variant:Lorg/codehaus/stax2/typed/Base64Variant;
     584: invokevirtual #31                 // Method org/codehaus/stax2/typed/Base64Variant.getPaddingChar:()C
     587: invokevirtual #32                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     590: ldc           #33                 // String \'
     592: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     595: invokevirtual #34                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     598: invokevirtual #35                 // Method reportInvalidChar:(CILjava/lang/String;)Ljava/lang/IllegalArgumentException;
     601: athrow
     602: aload_0
     603: bipush        6
     605: putfield      #6                  // Field _state:I
     608: aload_0
     609: dup
     610: getfield      #25                 // Field _decodedData:I
     613: iconst_4
     614: ishr
     615: putfield      #25                 // Field _decodedData:I
     618: goto          8
     621: new           #36                 // class java/lang/IllegalStateException
     624: dup
     625: new           #27                 // class java/lang/StringBuffer
     628: dup
     629: invokespecial #28                 // Method java/lang/StringBuffer."<init>":()V
     632: ldc           #37                 // String Illegal internal state
     634: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     637: aload_0
     638: getfield      #6                  // Field _state:I
     641: invokevirtual #38                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
     644: invokevirtual #34                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     647: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     650: athrow
     651: iload_2
     652: iload         4
     654: isub
     655: ireturn

  private boolean nextSegment();
    Code:
       0: aload_0
       1: getfield      #19                 // Field _nextSegmentIndex:I
       4: aload_0
       5: getfield      #4                  // Field _nextSegments:Ljava/util/ArrayList;
       8: invokevirtual #40                 // Method java/util/ArrayList.size:()I
      11: if_icmpge     91
      14: aload_0
      15: aload_0
      16: getfield      #4                  // Field _nextSegments:Ljava/util/ArrayList;
      19: aload_0
      20: dup
      21: getfield      #19                 // Field _nextSegmentIndex:I
      24: dup_x1
      25: iconst_1
      26: iadd
      27: putfield      #19                 // Field _nextSegmentIndex:I
      30: invokevirtual #41                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      33: checkcast     #16                 // class "[C"
      36: checkcast     #16                 // class "[C"
      39: putfield      #9                  // Field _currSegment:[C
      42: aload_0
      43: getfield      #19                 // Field _nextSegmentIndex:I
      46: aload_0
      47: getfield      #4                  // Field _nextSegments:Ljava/util/ArrayList;
      50: invokevirtual #40                 // Method java/util/ArrayList.size:()I
      53: if_icmpne     75
      56: aload_0
      57: aload_0
      58: getfield      #20                 // Field _lastSegmentOffset:I
      61: putfield      #10                 // Field _currSegmentPtr:I
      64: aload_0
      65: aload_0
      66: getfield      #21                 // Field _lastSegmentEnd:I
      69: putfield      #11                 // Field _currSegmentEnd:I
      72: goto          89
      75: aload_0
      76: iconst_0
      77: putfield      #10                 // Field _currSegmentPtr:I
      80: aload_0
      81: aload_0
      82: getfield      #9                  // Field _currSegment:[C
      85: arraylength
      86: putfield      #11                 // Field _currSegmentEnd:I
      89: iconst_1
      90: ireturn
      91: iconst_0
      92: ireturn
}
