Compiled from "JsonWriterImpl.java"
class org.glassfish.json.JsonWriterImpl implements javax.json.JsonWriter {
  private static final java.nio.charset.Charset UTF_8;

  private final org.glassfish.json.JsonGeneratorImpl generator;

  private boolean writeDone;

  private final org.glassfish.json.JsonWriterImpl$NoFlushOutputStream os;

  org.glassfish.json.JsonWriterImpl(java.io.Writer, org.glassfish.json.api.BufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokespecial #1                  // Method "<init>":(Ljava/io/Writer;ZLorg/glassfish/json/api/BufferPool;)V
       7: return

  org.glassfish.json.JsonWriterImpl(java.io.Writer, boolean, org.glassfish.json.api.BufferPool);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: ifeq          21
       9: new           #3                  // class org/glassfish/json/JsonPrettyGeneratorImpl
      12: dup
      13: aload_1
      14: aload_3
      15: invokespecial #4                  // Method org/glassfish/json/JsonPrettyGeneratorImpl."<init>":(Ljava/io/Writer;Lorg/glassfish/json/api/BufferPool;)V
      18: goto          30
      21: new           #5                  // class org/glassfish/json/JsonGeneratorImpl
      24: dup
      25: aload_1
      26: aload_3
      27: invokespecial #6                  // Method org/glassfish/json/JsonGeneratorImpl."<init>":(Ljava/io/Writer;Lorg/glassfish/json/api/BufferPool;)V
      30: putfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      33: aload_0
      34: aconst_null
      35: putfield      #8                  // Field os:Lorg/glassfish/json/JsonWriterImpl$NoFlushOutputStream;
      38: return

  org.glassfish.json.JsonWriterImpl(java.io.OutputStream, org.glassfish.json.api.BufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #9                  // Field UTF_8:Ljava/nio/charset/Charset;
       5: iconst_0
       6: aload_2
       7: invokespecial #10                 // Method "<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;ZLorg/glassfish/json/api/BufferPool;)V
      10: return

  org.glassfish.json.JsonWriterImpl(java.io.OutputStream, boolean, org.glassfish.json.api.BufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #9                  // Field UTF_8:Ljava/nio/charset/Charset;
       5: iload_2
       6: aload_3
       7: invokespecial #10                 // Method "<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;ZLorg/glassfish/json/api/BufferPool;)V
      10: return

  org.glassfish.json.JsonWriterImpl(java.io.OutputStream, java.nio.charset.Charset, boolean, org.glassfish.json.api.BufferPool);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #11                 // class org/glassfish/json/JsonWriterImpl$NoFlushOutputStream
       8: dup
       9: aload_1
      10: invokespecial #12                 // Method org/glassfish/json/JsonWriterImpl$NoFlushOutputStream."<init>":(Ljava/io/OutputStream;)V
      13: putfield      #8                  // Field os:Lorg/glassfish/json/JsonWriterImpl$NoFlushOutputStream;
      16: aload_0
      17: iload_3
      18: ifeq          38
      21: new           #3                  // class org/glassfish/json/JsonPrettyGeneratorImpl
      24: dup
      25: aload_0
      26: getfield      #8                  // Field os:Lorg/glassfish/json/JsonWriterImpl$NoFlushOutputStream;
      29: aload_2
      30: aload         4
      32: invokespecial #13                 // Method org/glassfish/json/JsonPrettyGeneratorImpl."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;Lorg/glassfish/json/api/BufferPool;)V
      35: goto          52
      38: new           #5                  // class org/glassfish/json/JsonGeneratorImpl
      41: dup
      42: aload_0
      43: getfield      #8                  // Field os:Lorg/glassfish/json/JsonWriterImpl$NoFlushOutputStream;
      46: aload_2
      47: aload         4
      49: invokespecial #14                 // Method org/glassfish/json/JsonGeneratorImpl."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;Lorg/glassfish/json/api/BufferPool;)V
      52: putfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      55: return

  public void writeArray(javax.json.JsonArray);
    Code:
       0: aload_0
       1: getfield      #15                 // Field writeDone:Z
       4: ifeq          18
       7: new           #16                 // class java/lang/IllegalStateException
      10: dup
      11: invokestatic  #17                 // Method org/glassfish/json/JsonMessages.WRITER_WRITE_ALREADY_CALLED:()Ljava/lang/String;
      14: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iconst_1
      20: putfield      #15                 // Field writeDone:Z
      23: aload_0
      24: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      27: invokevirtual #19                 // Method org/glassfish/json/JsonGeneratorImpl.writeStartArray:()Ljavax/json/stream/JsonGenerator;
      30: pop
      31: aload_1
      32: invokeinterface #20,  1           // InterfaceMethod javax/json/JsonArray.iterator:()Ljava/util/Iterator;
      37: astore_2
      38: aload_2
      39: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          69
      47: aload_2
      48: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #23                 // class javax/json/JsonValue
      56: astore_3
      57: aload_0
      58: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      61: aload_3
      62: invokevirtual #24                 // Method org/glassfish/json/JsonGeneratorImpl.write:(Ljavax/json/JsonValue;)Ljavax/json/stream/JsonGenerator;
      65: pop
      66: goto          38
      69: aload_0
      70: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      73: invokevirtual #25                 // Method org/glassfish/json/JsonGeneratorImpl.writeEnd:()Ljavax/json/stream/JsonGenerator;
      76: pop
      77: aload_0
      78: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      81: invokevirtual #26                 // Method org/glassfish/json/JsonGeneratorImpl.flushBuffer:()V
      84: aload_0
      85: getfield      #8                  // Field os:Lorg/glassfish/json/JsonWriterImpl$NoFlushOutputStream;
      88: ifnull        98
      91: aload_0
      92: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      95: invokevirtual #27                 // Method org/glassfish/json/JsonGeneratorImpl.flush:()V
      98: return

  public void writeObject(javax.json.JsonObject);
    Code:
       0: aload_0
       1: getfield      #15                 // Field writeDone:Z
       4: ifeq          18
       7: new           #16                 // class java/lang/IllegalStateException
      10: dup
      11: invokestatic  #17                 // Method org/glassfish/json/JsonMessages.WRITER_WRITE_ALREADY_CALLED:()Ljava/lang/String;
      14: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iconst_1
      20: putfield      #15                 // Field writeDone:Z
      23: aload_0
      24: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      27: invokevirtual #28                 // Method org/glassfish/json/JsonGeneratorImpl.writeStartObject:()Ljavax/json/stream/JsonGenerator;
      30: pop
      31: aload_1
      32: invokeinterface #29,  1           // InterfaceMethod javax/json/JsonObject.entrySet:()Ljava/util/Set;
      37: invokeinterface #30,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      42: astore_2
      43: aload_2
      44: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          91
      52: aload_2
      53: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #31                 // class java/util/Map$Entry
      61: astore_3
      62: aload_0
      63: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      66: aload_3
      67: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      72: checkcast     #33                 // class java/lang/String
      75: aload_3
      76: invokeinterface #34,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      81: checkcast     #23                 // class javax/json/JsonValue
      84: invokevirtual #35                 // Method org/glassfish/json/JsonGeneratorImpl.write:(Ljava/lang/String;Ljavax/json/JsonValue;)Ljavax/json/stream/JsonGenerator;
      87: pop
      88: goto          43
      91: aload_0
      92: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      95: invokevirtual #25                 // Method org/glassfish/json/JsonGeneratorImpl.writeEnd:()Ljavax/json/stream/JsonGenerator;
      98: pop
      99: aload_0
     100: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
     103: invokevirtual #26                 // Method org/glassfish/json/JsonGeneratorImpl.flushBuffer:()V
     106: aload_0
     107: getfield      #8                  // Field os:Lorg/glassfish/json/JsonWriterImpl$NoFlushOutputStream;
     110: ifnull        120
     113: aload_0
     114: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
     117: invokevirtual #27                 // Method org/glassfish/json/JsonGeneratorImpl.flush:()V
     120: return

  public void write(javax.json.JsonStructure);
    Code:
       0: aload_1
       1: instanceof    #36                 // class javax/json/JsonArray
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #36                 // class javax/json/JsonArray
      12: invokevirtual #37                 // Method writeArray:(Ljavax/json/JsonArray;)V
      15: goto          26
      18: aload_0
      19: aload_1
      20: checkcast     #38                 // class javax/json/JsonObject
      23: invokevirtual #39                 // Method writeObject:(Ljavax/json/JsonObject;)V
      26: return

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #15                 // Field writeDone:Z
       5: aload_0
       6: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
       9: invokevirtual #40                 // Method org/glassfish/json/JsonGeneratorImpl.close:()V
      12: return

  static {};
    Code:
       0: ldc           #41                 // String UTF-8
       2: invokestatic  #42                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #9                  // Field UTF_8:Ljava/nio/charset/Charset;
       8: return
}
