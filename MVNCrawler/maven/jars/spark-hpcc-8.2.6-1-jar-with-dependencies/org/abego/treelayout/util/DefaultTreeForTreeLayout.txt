Compiled from "DefaultTreeForTreeLayout.java"
public class org.abego.treelayout.util.DefaultTreeForTreeLayout<TreeNode> extends org.abego.treelayout.util.AbstractTreeForTreeLayout<TreeNode> {
  private java.util.List<TreeNode> emptyList;

  private java.util.Map<TreeNode, java.util.List<TreeNode>> childrenMap;

  private java.util.Map<TreeNode, TreeNode> parents;

  private java.util.List<TreeNode> getEmptyList();
    Code:
       0: aload_0
       1: getfield      #1                  // Field emptyList:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #2                  // class java/util/ArrayList
      11: dup
      12: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      15: putfield      #1                  // Field emptyList:Ljava/util/List;
      18: aload_0
      19: getfield      #1                  // Field emptyList:Ljava/util/List;
      22: areturn

  public org.abego.treelayout.util.DefaultTreeForTreeLayout(TreeNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/abego/treelayout/util/AbstractTreeForTreeLayout."<init>":(Ljava/lang/Object;)V
       5: aload_0
       6: new           #5                  // class java/util/HashMap
       9: dup
      10: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      13: putfield      #7                  // Field childrenMap:Ljava/util/Map;
      16: aload_0
      17: new           #5                  // class java/util/HashMap
      20: dup
      21: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      24: putfield      #8                  // Field parents:Ljava/util/Map;
      27: return

  public TreeNode getParent(TreeNode);
    Code:
       0: aload_0
       1: getfield      #8                  // Field parents:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.util.List<TreeNode> getChildrenList(TreeNode);
    Code:
       0: aload_0
       1: getfield      #7                  // Field childrenMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnonnull     25
      18: aload_0
      19: invokespecial #11                 // Method getEmptyList:()Ljava/util/List;
      22: goto          26
      25: aload_2
      26: areturn

  public boolean hasNode(TreeNode);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #12                 // Method getRoot:()Ljava/lang/Object;
       5: if_acmpeq     21
       8: aload_0
       9: getfield      #8                  // Field parents:Ljava/util/Map;
      12: aload_1
      13: invokeinterface #13,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public void addChild(TreeNode, TreeNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method hasNode:(Ljava/lang/Object;)Z
       5: ldc           #15                 // String parentNode is not in the tree
       7: invokestatic  #16                 // Method org/abego/treelayout/internal/util/Contract.checkArg:(ZLjava/lang/String;)V
      10: aload_0
      11: aload_2
      12: invokevirtual #14                 // Method hasNode:(Ljava/lang/Object;)Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ldc           #17                 // String node is already in the tree
      25: invokestatic  #16                 // Method org/abego/treelayout/internal/util/Contract.checkArg:(ZLjava/lang/String;)V
      28: aload_0
      29: getfield      #7                  // Field childrenMap:Ljava/util/Map;
      32: aload_1
      33: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #10                 // class java/util/List
      41: astore_3
      42: aload_3
      43: ifnonnull     66
      46: new           #2                  // class java/util/ArrayList
      49: dup
      50: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      53: astore_3
      54: aload_0
      55: getfield      #7                  // Field childrenMap:Ljava/util/Map;
      58: aload_1
      59: aload_3
      60: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: aload_3
      67: aload_2
      68: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: aload_0
      75: getfield      #8                  // Field parents:Ljava/util/Map;
      78: aload_2
      79: aload_1
      80: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: return

  public void addChildren(TreeNode, TreeNode...);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     35
      16: aload_3
      17: iload         5
      19: aaload
      20: astore        6
      22: aload_0
      23: aload_1
      24: aload         6
      26: invokevirtual #20                 // Method addChild:(Ljava/lang/Object;Ljava/lang/Object;)V
      29: iinc          5, 1
      32: goto          9
      35: return
}
