Compiled from "BlockAST.java"
public class org.antlr.v4.tool.ast.BlockAST extends org.antlr.v4.tool.ast.GrammarASTWithOptions implements org.antlr.v4.tool.ast.RuleElementAST {
  public static final java.util.Map<java.lang.String, java.lang.String> defaultBlockOptions;

  public static final java.util.Map<java.lang.String, java.lang.String> defaultLexerBlockOptions;

  public org.antlr.v4.tool.ast.BlockAST(org.antlr.v4.tool.ast.BlockAST);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/antlr/v4/tool/ast/GrammarASTWithOptions."<init>":(Lorg/antlr/v4/tool/ast/GrammarASTWithOptions;)V
       5: return

  public org.antlr.v4.tool.ast.BlockAST(org.antlr.runtime.Token);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/antlr/v4/tool/ast/GrammarASTWithOptions."<init>":(Lorg/antlr/runtime/Token;)V
       5: return

  public org.antlr.v4.tool.ast.BlockAST(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #3                  // Method org/antlr/v4/tool/ast/GrammarASTWithOptions."<init>":(I)V
       5: return

  public org.antlr.v4.tool.ast.BlockAST(int, org.antlr.runtime.Token);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #4                  // Method org/antlr/v4/tool/ast/GrammarASTWithOptions."<init>":(ILorg/antlr/runtime/Token;)V
       6: return

  public org.antlr.v4.tool.ast.BlockAST(int, org.antlr.runtime.Token, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #5                  // Method org/antlr/v4/tool/ast/GrammarASTWithOptions."<init>":(ILorg/antlr/runtime/Token;Ljava/lang/String;)V
       7: return

  public org.antlr.v4.tool.ast.BlockAST dupNode();
    Code:
       0: new           #6                  // class org/antlr/v4/tool/ast/BlockAST
       3: dup
       4: aload_0
       5: invokespecial #7                  // Method "<init>":(Lorg/antlr/v4/tool/ast/BlockAST;)V
       8: areturn

  public java.lang.Object visit(org.antlr.v4.tool.ast.GrammarASTVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #8,  2            // InterfaceMethod org/antlr/v4/tool/ast/GrammarASTVisitor.visit:(Lorg/antlr/v4/tool/ast/BlockAST;)Ljava/lang/Object;
       7: areturn

  public org.antlr.v4.tool.ast.GrammarASTWithOptions dupNode();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method dupNode:()Lorg/antlr/v4/tool/ast/BlockAST;
       4: areturn

  public org.antlr.v4.tool.ast.GrammarAST dupNode();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method dupNode:()Lorg/antlr/v4/tool/ast/BlockAST;
       4: areturn

  public org.antlr.runtime.tree.Tree dupNode();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method dupNode:()Lorg/antlr/v4/tool/ast/BlockAST;
       4: areturn

  static {};
    Code:
       0: new           #10                 // class java/util/HashMap
       3: dup
       4: invokespecial #11                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #12                 // Field defaultBlockOptions:Ljava/util/Map;
      10: new           #10                 // class java/util/HashMap
      13: dup
      14: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      17: putstatic     #13                 // Field defaultLexerBlockOptions:Ljava/util/Map;
      20: return
}
