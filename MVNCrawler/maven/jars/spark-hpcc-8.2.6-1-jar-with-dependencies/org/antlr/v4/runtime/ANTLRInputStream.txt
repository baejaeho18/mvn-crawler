Compiled from "ANTLRInputStream.java"
public class org.antlr.v4.runtime.ANTLRInputStream implements org.antlr.v4.runtime.CharStream {
  public static final int READ_BUFFER_SIZE;

  public static final int INITIAL_BUFFER_SIZE;

  protected char[] data;

  protected int n;

  protected int p;

  public java.lang.String name;

  static final boolean $assertionsDisabled;

  public org.antlr.v4.runtime.ANTLRInputStream();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field p:I
       9: return

  public org.antlr.v4.runtime.ANTLRInputStream(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field p:I
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method java/lang/String.toCharArray:()[C
      14: putfield      #4                  // Field data:[C
      17: aload_0
      18: aload_1
      19: invokevirtual #5                  // Method java/lang/String.length:()I
      22: putfield      #6                  // Field n:I
      25: return

  public org.antlr.v4.runtime.ANTLRInputStream(char[], int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field p:I
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field data:[C
      14: aload_0
      15: iload_2
      16: putfield      #6                  // Field n:I
      19: return

  public org.antlr.v4.runtime.ANTLRInputStream(java.io.Reader) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1024
       5: sipush        1024
       8: invokespecial #7                  // Method "<init>":(Ljava/io/Reader;II)V
      11: return

  public org.antlr.v4.runtime.ANTLRInputStream(java.io.Reader, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: sipush        1024
       6: invokespecial #7                  // Method "<init>":(Ljava/io/Reader;II)V
       9: return

  public org.antlr.v4.runtime.ANTLRInputStream(java.io.Reader, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field p:I
       9: aload_0
      10: aload_1
      11: iload_2
      12: iload_3
      13: invokevirtual #8                  // Method load:(Ljava/io/Reader;II)V
      16: return

  public org.antlr.v4.runtime.ANTLRInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #9                  // class java/io/InputStreamReader
       4: dup
       5: aload_1
       6: invokespecial #10                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
       9: sipush        1024
      12: invokespecial #11                 // Method "<init>":(Ljava/io/Reader;I)V
      15: return

  public org.antlr.v4.runtime.ANTLRInputStream(java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #9                  // class java/io/InputStreamReader
       4: dup
       5: aload_1
       6: invokespecial #10                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
       9: iload_2
      10: invokespecial #11                 // Method "<init>":(Ljava/io/Reader;I)V
      13: return

  public org.antlr.v4.runtime.ANTLRInputStream(java.io.InputStream, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #9                  // class java/io/InputStreamReader
       4: dup
       5: aload_1
       6: invokespecial #10                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
       9: iload_2
      10: iload_3
      11: invokespecial #7                  // Method "<init>":(Ljava/io/Reader;II)V
      14: return

  public void load(java.io.Reader, int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: iload_2
       6: ifgt          13
       9: sipush        1024
      12: istore_2
      13: iload_3
      14: ifgt          21
      17: sipush        1024
      20: istore_3
      21: aload_0
      22: iload_2
      23: newarray       char
      25: putfield      #4                  // Field data:[C
      28: iconst_0
      29: istore        4
      31: iconst_0
      32: istore        5
      34: iload         5
      36: iload_3
      37: iadd
      38: aload_0
      39: getfield      #4                  // Field data:[C
      42: arraylength
      43: if_icmple     64
      46: aload_0
      47: aload_0
      48: getfield      #4                  // Field data:[C
      51: aload_0
      52: getfield      #4                  // Field data:[C
      55: arraylength
      56: iconst_2
      57: imul
      58: invokestatic  #12                 // Method java/util/Arrays.copyOf:([CI)[C
      61: putfield      #4                  // Field data:[C
      64: aload_1
      65: aload_0
      66: getfield      #4                  // Field data:[C
      69: iload         5
      71: iload_3
      72: invokevirtual #13                 // Method java/io/Reader.read:([CII)I
      75: istore        4
      77: iload         5
      79: iload         4
      81: iadd
      82: istore        5
      84: iload         4
      86: iconst_m1
      87: if_icmpne     34
      90: aload_0
      91: iload         5
      93: iconst_1
      94: iadd
      95: putfield      #6                  // Field n:I
      98: aload_1
      99: invokevirtual #14                 // Method java/io/Reader.close:()V
     102: goto          114
     105: astore        6
     107: aload_1
     108: invokevirtual #14                 // Method java/io/Reader.close:()V
     111: aload         6
     113: athrow
     114: return
    Exception table:
       from    to  target type
          21    98   105   any
         105   107   105   any

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field p:I
       5: return

  public void consume();
    Code:
       0: aload_0
       1: getfield      #2                  // Field p:I
       4: aload_0
       5: getfield      #6                  // Field n:I
       8: if_icmplt     44
      11: getstatic     #15                 // Field $assertionsDisabled:Z
      14: ifne          34
      17: aload_0
      18: iconst_1
      19: invokevirtual #16                 // Method LA:(I)I
      22: iconst_m1
      23: if_icmpeq     34
      26: new           #17                 // class java/lang/AssertionError
      29: dup
      30: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      33: athrow
      34: new           #19                 // class java/lang/IllegalStateException
      37: dup
      38: ldc           #20                 // String cannot consume EOF
      40: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: getfield      #2                  // Field p:I
      48: aload_0
      49: getfield      #6                  // Field n:I
      52: if_icmpge     65
      55: aload_0
      56: dup
      57: getfield      #2                  // Field p:I
      60: iconst_1
      61: iadd
      62: putfield      #2                  // Field p:I
      65: return

  public int LA(int);
    Code:
       0: iload_1
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: iload_1
       7: ifge          26
      10: iinc          1, 1
      13: aload_0
      14: getfield      #2                  // Field p:I
      17: iload_1
      18: iadd
      19: iconst_1
      20: isub
      21: ifge          26
      24: iconst_m1
      25: ireturn
      26: aload_0
      27: getfield      #2                  // Field p:I
      30: iload_1
      31: iadd
      32: iconst_1
      33: isub
      34: aload_0
      35: getfield      #6                  // Field n:I
      38: if_icmplt     43
      41: iconst_m1
      42: ireturn
      43: aload_0
      44: getfield      #4                  // Field data:[C
      47: aload_0
      48: getfield      #2                  // Field p:I
      51: iload_1
      52: iadd
      53: iconst_1
      54: isub
      55: caload
      56: ireturn

  public int LT(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #16                 // Method LA:(I)I
       5: ireturn

  public int index();
    Code:
       0: aload_0
       1: getfield      #2                  // Field p:I
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field n:I
       4: ireturn

  public int mark();
    Code:
       0: iconst_m1
       1: ireturn

  public void release(int);
    Code:
       0: return

  public void seek(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field p:I
       5: if_icmpgt     14
       8: aload_0
       9: iload_1
      10: putfield      #2                  // Field p:I
      13: return
      14: iload_1
      15: aload_0
      16: getfield      #6                  // Field n:I
      19: invokestatic  #22                 // Method java/lang/Math.min:(II)I
      22: istore_1
      23: aload_0
      24: getfield      #2                  // Field p:I
      27: iload_1
      28: if_icmpge     38
      31: aload_0
      32: invokevirtual #23                 // Method consume:()V
      35: goto          23
      38: return

  public java.lang.String getText(org.antlr.v4.runtime.misc.Interval);
    Code:
       0: aload_1
       1: getfield      #24                 // Field org/antlr/v4/runtime/misc/Interval.a:I
       4: istore_2
       5: aload_1
       6: getfield      #25                 // Field org/antlr/v4/runtime/misc/Interval.b:I
       9: istore_3
      10: iload_3
      11: aload_0
      12: getfield      #6                  // Field n:I
      15: if_icmplt     25
      18: aload_0
      19: getfield      #6                  // Field n:I
      22: iconst_1
      23: isub
      24: istore_3
      25: iload_3
      26: iload_2
      27: isub
      28: iconst_1
      29: iadd
      30: istore        4
      32: iload_2
      33: aload_0
      34: getfield      #6                  // Field n:I
      37: if_icmplt     43
      40: ldc           #26                 // String
      42: areturn
      43: new           #27                 // class java/lang/String
      46: dup
      47: aload_0
      48: getfield      #4                  // Field data:[C
      51: iload_2
      52: iload         4
      54: invokespecial #28                 // Method java/lang/String."<init>":([CII)V
      57: areturn

  public java.lang.String getSourceName();
    Code:
       0: aload_0
       1: getfield      #29                 // Field name:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #29                 // Field name:Ljava/lang/String;
      11: invokevirtual #30                 // Method java/lang/String.isEmpty:()Z
      14: ifeq          20
      17: ldc           #31                 // String <unknown>
      19: areturn
      20: aload_0
      21: getfield      #29                 // Field name:Ljava/lang/String;
      24: areturn

  public java.lang.String toString();
    Code:
       0: new           #27                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #4                  // Field data:[C
       8: invokespecial #32                 // Method java/lang/String."<init>":([C)V
      11: areturn

  static {};
    Code:
       0: ldc_w         #33                 // class org/antlr/v4/runtime/ANTLRInputStream
       3: invokevirtual #34                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #15                 // Field $assertionsDisabled:Z
      17: return
}
