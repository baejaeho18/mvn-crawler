Compiled from "LexerNoViableAltException.java"
public class org.antlr.v4.runtime.LexerNoViableAltException extends org.antlr.v4.runtime.RecognitionException {
  private final int startIndex;

  private final org.antlr.v4.runtime.atn.ATNConfigSet deadEndConfigs;

  public org.antlr.v4.runtime.LexerNoViableAltException(org.antlr.v4.runtime.Lexer, org.antlr.v4.runtime.CharStream, int, org.antlr.v4.runtime.atn.ATNConfigSet);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #1                  // Method org/antlr/v4/runtime/RecognitionException."<init>":(Lorg/antlr/v4/runtime/Recognizer;Lorg/antlr/v4/runtime/IntStream;Lorg/antlr/v4/runtime/ParserRuleContext;)V
       7: aload_0
       8: iload_3
       9: putfield      #2                  // Field startIndex:I
      12: aload_0
      13: aload         4
      15: putfield      #3                  // Field deadEndConfigs:Lorg/antlr/v4/runtime/atn/ATNConfigSet;
      18: return

  public int getStartIndex();
    Code:
       0: aload_0
       1: getfield      #2                  // Field startIndex:I
       4: ireturn

  public org.antlr.v4.runtime.atn.ATNConfigSet getDeadEndConfigs();
    Code:
       0: aload_0
       1: getfield      #3                  // Field deadEndConfigs:Lorg/antlr/v4/runtime/atn/ATNConfigSet;
       4: areturn

  public org.antlr.v4.runtime.CharStream getInputStream();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/antlr/v4/runtime/RecognitionException.getInputStream:()Lorg/antlr/v4/runtime/IntStream;
       4: checkcast     #5                  // class org/antlr/v4/runtime/CharStream
       7: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #6                  // String
       2: astore_1
       3: aload_0
       4: getfield      #2                  // Field startIndex:I
       7: iflt          53
      10: aload_0
      11: getfield      #2                  // Field startIndex:I
      14: aload_0
      15: invokevirtual #7                  // Method getInputStream:()Lorg/antlr/v4/runtime/CharStream;
      18: invokeinterface #8,  1            // InterfaceMethod org/antlr/v4/runtime/CharStream.size:()I
      23: if_icmpge     53
      26: aload_0
      27: invokevirtual #7                  // Method getInputStream:()Lorg/antlr/v4/runtime/CharStream;
      30: aload_0
      31: getfield      #2                  // Field startIndex:I
      34: aload_0
      35: getfield      #2                  // Field startIndex:I
      38: invokestatic  #9                  // Method org/antlr/v4/runtime/misc/Interval.of:(II)Lorg/antlr/v4/runtime/misc/Interval;
      41: invokeinterface #10,  2           // InterfaceMethod org/antlr/v4/runtime/CharStream.getText:(Lorg/antlr/v4/runtime/misc/Interval;)Ljava/lang/String;
      46: astore_1
      47: aload_1
      48: iconst_0
      49: invokestatic  #11                 // Method org/antlr/v4/runtime/misc/Utils.escapeWhitespace:(Ljava/lang/String;Z)Ljava/lang/String;
      52: astore_1
      53: invokestatic  #12                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      56: ldc           #13                 // String %s(\'%s\')
      58: iconst_2
      59: anewarray     #14                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: ldc_w         #15                 // class org/antlr/v4/runtime/LexerNoViableAltException
      67: invokevirtual #16                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      70: aastore
      71: dup
      72: iconst_1
      73: aload_1
      74: aastore
      75: invokestatic  #17                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      78: areturn

  public org.antlr.v4.runtime.IntStream getInputStream();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getInputStream:()Lorg/antlr/v4/runtime/CharStream;
       4: areturn
}
