Compiled from "UnbufferedCharStream.java"
public class org.antlr.v4.runtime.UnbufferedCharStream implements org.antlr.v4.runtime.CharStream {
  protected int[] data;

  protected int n;

  protected int p;

  protected int numMarkers;

  protected int lastChar;

  protected int lastCharBufferStart;

  protected int currentCharIndex;

  protected java.io.Reader input;

  public java.lang.String name;

  public org.antlr.v4.runtime.UnbufferedCharStream();
    Code:
       0: aload_0
       1: sipush        256
       4: invokespecial #1                  // Method "<init>":(I)V
       7: return

  public org.antlr.v4.runtime.UnbufferedCharStream(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field p:I
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field numMarkers:I
      14: aload_0
      15: iconst_m1
      16: putfield      #5                  // Field lastChar:I
      19: aload_0
      20: iconst_0
      21: putfield      #6                  // Field currentCharIndex:I
      24: aload_0
      25: iconst_0
      26: putfield      #7                  // Field n:I
      29: aload_0
      30: iload_1
      31: newarray       int
      33: putfield      #8                  // Field data:[I
      36: return

  public org.antlr.v4.runtime.UnbufferedCharStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        256
       5: invokespecial #9                  // Method "<init>":(Ljava/io/InputStream;I)V
       8: return

  public org.antlr.v4.runtime.UnbufferedCharStream(java.io.Reader);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        256
       5: invokespecial #10                 // Method "<init>":(Ljava/io/Reader;I)V
       8: return

  public org.antlr.v4.runtime.UnbufferedCharStream(java.io.InputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: getstatic     #11                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       6: invokespecial #12                 // Method "<init>":(Ljava/io/InputStream;ILjava/nio/charset/Charset;)V
       9: return

  public org.antlr.v4.runtime.UnbufferedCharStream(java.io.InputStream, int, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #1                  // Method "<init>":(I)V
       5: aload_0
       6: new           #13                 // class java/io/InputStreamReader
       9: dup
      10: aload_1
      11: aload_3
      12: invokespecial #14                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      15: putfield      #15                 // Field input:Ljava/io/Reader;
      18: aload_0
      19: iconst_1
      20: invokevirtual #16                 // Method fill:(I)I
      23: pop
      24: return

  public org.antlr.v4.runtime.UnbufferedCharStream(java.io.Reader, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #1                  // Method "<init>":(I)V
       5: aload_0
       6: aload_1
       7: putfield      #15                 // Field input:Ljava/io/Reader;
      10: aload_0
      11: iconst_1
      12: invokevirtual #16                 // Method fill:(I)I
      15: pop
      16: return

  public void consume();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #17                 // Method LA:(I)I
       5: iconst_m1
       6: if_icmpne     19
       9: new           #18                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #19                 // String cannot consume EOF
      15: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_0
      21: getfield      #8                  // Field data:[I
      24: aload_0
      25: getfield      #3                  // Field p:I
      28: iaload
      29: putfield      #5                  // Field lastChar:I
      32: aload_0
      33: getfield      #3                  // Field p:I
      36: aload_0
      37: getfield      #7                  // Field n:I
      40: iconst_1
      41: isub
      42: if_icmpne     70
      45: aload_0
      46: getfield      #4                  // Field numMarkers:I
      49: ifne          70
      52: aload_0
      53: iconst_0
      54: putfield      #7                  // Field n:I
      57: aload_0
      58: iconst_m1
      59: putfield      #3                  // Field p:I
      62: aload_0
      63: aload_0
      64: getfield      #5                  // Field lastChar:I
      67: putfield      #21                 // Field lastCharBufferStart:I
      70: aload_0
      71: dup
      72: getfield      #3                  // Field p:I
      75: iconst_1
      76: iadd
      77: putfield      #3                  // Field p:I
      80: aload_0
      81: dup
      82: getfield      #6                  // Field currentCharIndex:I
      85: iconst_1
      86: iadd
      87: putfield      #6                  // Field currentCharIndex:I
      90: aload_0
      91: iconst_1
      92: invokevirtual #22                 // Method sync:(I)V
      95: return

  protected void sync(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field p:I
       4: iload_1
       5: iadd
       6: iconst_1
       7: isub
       8: aload_0
       9: getfield      #7                  // Field n:I
      12: isub
      13: iconst_1
      14: iadd
      15: istore_2
      16: iload_2
      17: ifle          26
      20: aload_0
      21: iload_2
      22: invokevirtual #16                 // Method fill:(I)I
      25: pop
      26: return

  protected int fill(int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     188
       7: aload_0
       8: getfield      #7                  // Field n:I
      11: ifle          31
      14: aload_0
      15: getfield      #8                  // Field data:[I
      18: aload_0
      19: getfield      #7                  // Field n:I
      22: iconst_1
      23: isub
      24: iaload
      25: iconst_m1
      26: if_icmpne     31
      29: iload_2
      30: ireturn
      31: aload_0
      32: invokevirtual #23                 // Method nextChar:()I
      35: istore_3
      36: iload_3
      37: ldc           #24                 // int 65535
      39: if_icmpgt     47
      42: iload_3
      43: iconst_m1
      44: if_icmpne     55
      47: aload_0
      48: iload_3
      49: invokevirtual #25                 // Method add:(I)V
      52: goto          169
      55: iload_3
      56: i2c
      57: istore        4
      59: iload         4
      61: invokestatic  #26                 // Method java/lang/Character.isLowSurrogate:(C)Z
      64: ifeq          77
      67: new           #27                 // class java/lang/RuntimeException
      70: dup
      71: ldc           #28                 // String Invalid UTF-16 (low surrogate with no preceding high surrogate)
      73: invokespecial #29                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: iload         4
      79: invokestatic  #30                 // Method java/lang/Character.isHighSurrogate:(C)Z
      82: ifeq          164
      85: aload_0
      86: invokevirtual #23                 // Method nextChar:()I
      89: istore        5
      91: iload         5
      93: ldc           #24                 // int 65535
      95: if_icmple     108
      98: new           #27                 // class java/lang/RuntimeException
     101: dup
     102: ldc           #31                 // String Invalid UTF-16 (high surrogate followed by code point > U+FFFF
     104: invokespecial #29                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: iload         5
     110: iconst_m1
     111: if_icmpne     124
     114: new           #27                 // class java/lang/RuntimeException
     117: dup
     118: ldc           #32                 // String Invalid UTF-16 (dangling high surrogate at end of file)
     120: invokespecial #29                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: iload         5
     126: i2c
     127: istore        6
     129: iload         6
     131: invokestatic  #26                 // Method java/lang/Character.isLowSurrogate:(C)Z
     134: ifeq          151
     137: aload_0
     138: iload         4
     140: iload         6
     142: invokestatic  #33                 // Method java/lang/Character.toCodePoint:(CC)I
     145: invokevirtual #25                 // Method add:(I)V
     148: goto          161
     151: new           #27                 // class java/lang/RuntimeException
     154: dup
     155: ldc           #34                 // String Invalid UTF-16 (dangling high surrogate
     157: invokespecial #29                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     160: athrow
     161: goto          169
     164: aload_0
     165: iload_3
     166: invokevirtual #25                 // Method add:(I)V
     169: goto          182
     172: astore_3
     173: new           #27                 // class java/lang/RuntimeException
     176: dup
     177: aload_3
     178: invokespecial #36                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     181: athrow
     182: iinc          2, 1
     185: goto          2
     188: iload_1
     189: ireturn
    Exception table:
       from    to  target type
          31   169   172   Class java/io/IOException

  protected int nextChar() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field input:Ljava/io/Reader;
       4: invokevirtual #37                 // Method java/io/Reader.read:()I
       7: ireturn

  protected void add(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field n:I
       4: aload_0
       5: getfield      #8                  // Field data:[I
       8: arraylength
       9: if_icmplt     30
      12: aload_0
      13: aload_0
      14: getfield      #8                  // Field data:[I
      17: aload_0
      18: getfield      #8                  // Field data:[I
      21: arraylength
      22: iconst_2
      23: imul
      24: invokestatic  #38                 // Method java/util/Arrays.copyOf:([II)[I
      27: putfield      #8                  // Field data:[I
      30: aload_0
      31: getfield      #8                  // Field data:[I
      34: aload_0
      35: dup
      36: getfield      #7                  // Field n:I
      39: dup_x1
      40: iconst_1
      41: iadd
      42: putfield      #7                  // Field n:I
      45: iload_1
      46: iastore
      47: return

  public int LA(int);
    Code:
       0: iload_1
       1: iconst_m1
       2: if_icmpne     10
       5: aload_0
       6: getfield      #5                  // Field lastChar:I
       9: ireturn
      10: aload_0
      11: iload_1
      12: invokevirtual #22                 // Method sync:(I)V
      15: aload_0
      16: getfield      #3                  // Field p:I
      19: iload_1
      20: iadd
      21: iconst_1
      22: isub
      23: istore_2
      24: iload_2
      25: ifge          36
      28: new           #39                 // class java/lang/IndexOutOfBoundsException
      31: dup
      32: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      35: athrow
      36: iload_2
      37: aload_0
      38: getfield      #7                  // Field n:I
      41: if_icmplt     46
      44: iconst_m1
      45: ireturn
      46: aload_0
      47: getfield      #8                  // Field data:[I
      50: iload_2
      51: iaload
      52: ireturn

  public int mark();
    Code:
       0: aload_0
       1: getfield      #4                  // Field numMarkers:I
       4: ifne          15
       7: aload_0
       8: aload_0
       9: getfield      #5                  // Field lastChar:I
      12: putfield      #21                 // Field lastCharBufferStart:I
      15: aload_0
      16: getfield      #4                  // Field numMarkers:I
      19: ineg
      20: iconst_1
      21: isub
      22: istore_1
      23: aload_0
      24: dup
      25: getfield      #4                  // Field numMarkers:I
      28: iconst_1
      29: iadd
      30: putfield      #4                  // Field numMarkers:I
      33: iload_1
      34: ireturn

  public void release(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field numMarkers:I
       4: ineg
       5: istore_2
       6: iload_1
       7: iload_2
       8: if_icmpeq     21
      11: new           #18                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #41                 // String release() called with an invalid marker.
      17: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: dup
      23: getfield      #4                  // Field numMarkers:I
      26: iconst_1
      27: isub
      28: putfield      #4                  // Field numMarkers:I
      31: aload_0
      32: getfield      #4                  // Field numMarkers:I
      35: ifne          96
      38: aload_0
      39: getfield      #3                  // Field p:I
      42: ifle          96
      45: aload_0
      46: getfield      #8                  // Field data:[I
      49: aload_0
      50: getfield      #3                  // Field p:I
      53: aload_0
      54: getfield      #8                  // Field data:[I
      57: iconst_0
      58: aload_0
      59: getfield      #7                  // Field n:I
      62: aload_0
      63: getfield      #3                  // Field p:I
      66: isub
      67: invokestatic  #42                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      70: aload_0
      71: aload_0
      72: getfield      #7                  // Field n:I
      75: aload_0
      76: getfield      #3                  // Field p:I
      79: isub
      80: putfield      #7                  // Field n:I
      83: aload_0
      84: iconst_0
      85: putfield      #3                  // Field p:I
      88: aload_0
      89: aload_0
      90: getfield      #5                  // Field lastChar:I
      93: putfield      #21                 // Field lastCharBufferStart:I
      96: return

  public int index();
    Code:
       0: aload_0
       1: getfield      #6                  // Field currentCharIndex:I
       4: ireturn

  public void seek(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field currentCharIndex:I
       5: if_icmpne     9
       8: return
       9: iload_1
      10: aload_0
      11: getfield      #6                  // Field currentCharIndex:I
      14: if_icmple     43
      17: aload_0
      18: iload_1
      19: aload_0
      20: getfield      #6                  // Field currentCharIndex:I
      23: isub
      24: invokevirtual #22                 // Method sync:(I)V
      27: iload_1
      28: aload_0
      29: invokevirtual #43                 // Method getBufferStartIndex:()I
      32: aload_0
      33: getfield      #7                  // Field n:I
      36: iadd
      37: iconst_1
      38: isub
      39: invokestatic  #44                 // Method java/lang/Math.min:(II)I
      42: istore_1
      43: iload_1
      44: aload_0
      45: invokevirtual #43                 // Method getBufferStartIndex:()I
      48: isub
      49: istore_2
      50: iload_2
      51: ifge          81
      54: new           #45                 // class java/lang/IllegalArgumentException
      57: dup
      58: new           #46                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #48                 // String cannot seek to negative index
      67: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: iload_1
      71: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      74: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: iload_2
      82: aload_0
      83: getfield      #7                  // Field n:I
      86: if_icmplt     145
      89: new           #53                 // class java/lang/UnsupportedOperationException
      92: dup
      93: new           #46                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #54                 // String seek to index outside buffer:
     102: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: iload_1
     106: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     109: ldc           #55                 // String  not in
     111: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: invokevirtual #43                 // Method getBufferStartIndex:()I
     118: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     121: ldc           #56                 // String ..
     123: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_0
     127: invokevirtual #43                 // Method getBufferStartIndex:()I
     130: aload_0
     131: getfield      #7                  // Field n:I
     134: iadd
     135: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     138: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokespecial #57                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     144: athrow
     145: aload_0
     146: iload_2
     147: putfield      #3                  // Field p:I
     150: aload_0
     151: iload_1
     152: putfield      #6                  // Field currentCharIndex:I
     155: aload_0
     156: getfield      #3                  // Field p:I
     159: ifne          173
     162: aload_0
     163: aload_0
     164: getfield      #21                 // Field lastCharBufferStart:I
     167: putfield      #5                  // Field lastChar:I
     170: goto          188
     173: aload_0
     174: aload_0
     175: getfield      #8                  // Field data:[I
     178: aload_0
     179: getfield      #3                  // Field p:I
     182: iconst_1
     183: isub
     184: iaload
     185: putfield      #5                  // Field lastChar:I
     188: return

  public int size();
    Code:
       0: new           #53                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #58                 // String Unbuffered stream cannot know its size
       6: invokespecial #57                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getSourceName();
    Code:
       0: aload_0
       1: getfield      #59                 // Field name:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #59                 // Field name:Ljava/lang/String;
      11: invokevirtual #60                 // Method java/lang/String.isEmpty:()Z
      14: ifeq          20
      17: ldc           #61                 // String <unknown>
      19: areturn
      20: aload_0
      21: getfield      #59                 // Field name:Ljava/lang/String;
      24: areturn

  public java.lang.String getText(org.antlr.v4.runtime.misc.Interval);
    Code:
       0: aload_1
       1: getfield      #62                 // Field org/antlr/v4/runtime/misc/Interval.a:I
       4: iflt          20
       7: aload_1
       8: getfield      #63                 // Field org/antlr/v4/runtime/misc/Interval.b:I
      11: aload_1
      12: getfield      #62                 // Field org/antlr/v4/runtime/misc/Interval.a:I
      15: iconst_1
      16: isub
      17: if_icmpge     30
      20: new           #45                 // class java/lang/IllegalArgumentException
      23: dup
      24: ldc           #64                 // String invalid interval
      26: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: invokevirtual #43                 // Method getBufferStartIndex:()I
      34: istore_2
      35: aload_0
      36: getfield      #7                  // Field n:I
      39: ifle          86
      42: aload_0
      43: getfield      #8                  // Field data:[I
      46: aload_0
      47: getfield      #7                  // Field n:I
      50: iconst_1
      51: isub
      52: iaload
      53: ldc           #24                 // int 65535
      55: if_icmpne     86
      58: aload_1
      59: getfield      #62                 // Field org/antlr/v4/runtime/misc/Interval.a:I
      62: aload_1
      63: invokevirtual #65                 // Method org/antlr/v4/runtime/misc/Interval.length:()I
      66: iadd
      67: iload_2
      68: aload_0
      69: getfield      #7                  // Field n:I
      72: iadd
      73: if_icmple     86
      76: new           #45                 // class java/lang/IllegalArgumentException
      79: dup
      80: ldc           #66                 // String the interval extends past the end of the stream
      82: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: aload_1
      87: getfield      #62                 // Field org/antlr/v4/runtime/misc/Interval.a:I
      90: iload_2
      91: if_icmplt     107
      94: aload_1
      95: getfield      #63                 // Field org/antlr/v4/runtime/misc/Interval.b:I
      98: iload_2
      99: aload_0
     100: getfield      #7                  // Field n:I
     103: iadd
     104: if_icmplt     159
     107: new           #53                 // class java/lang/UnsupportedOperationException
     110: dup
     111: new           #46                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #67                 // String interval
     120: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_1
     124: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     127: ldc           #69                 // String  outside buffer:
     129: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: iload_2
     133: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     136: ldc           #56                 // String ..
     138: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: iload_2
     142: aload_0
     143: getfield      #7                  // Field n:I
     146: iadd
     147: iconst_1
     148: isub
     149: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     152: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: invokespecial #57                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: aload_1
     160: getfield      #62                 // Field org/antlr/v4/runtime/misc/Interval.a:I
     163: iload_2
     164: isub
     165: istore_3
     166: new           #70                 // class java/lang/String
     169: dup
     170: aload_0
     171: getfield      #8                  // Field data:[I
     174: iload_3
     175: aload_1
     176: invokevirtual #65                 // Method org/antlr/v4/runtime/misc/Interval.length:()I
     179: invokespecial #71                 // Method java/lang/String."<init>":([III)V
     182: areturn

  protected final int getBufferStartIndex();
    Code:
       0: aload_0
       1: getfield      #6                  // Field currentCharIndex:I
       4: aload_0
       5: getfield      #3                  // Field p:I
       8: isub
       9: ireturn
}
