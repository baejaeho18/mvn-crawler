Compiled from "BlankOutputModelFactory.java"
public abstract class org.antlr.v4.codegen.BlankOutputModelFactory implements org.antlr.v4.codegen.OutputModelFactory {
  public org.antlr.v4.codegen.BlankOutputModelFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.antlr.v4.codegen.model.ParserFile parserFile(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public org.antlr.v4.codegen.model.Parser parser(org.antlr.v4.codegen.model.ParserFile);
    Code:
       0: aconst_null
       1: areturn

  public org.antlr.v4.codegen.model.RuleFunction rule(org.antlr.v4.tool.Rule);
    Code:
       0: aconst_null
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> rulePostamble(org.antlr.v4.codegen.model.RuleFunction, org.antlr.v4.tool.Rule);
    Code:
       0: aconst_null
       1: areturn

  public org.antlr.v4.codegen.model.LexerFile lexerFile(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public org.antlr.v4.codegen.model.Lexer lexer(org.antlr.v4.codegen.model.LexerFile);
    Code:
       0: aconst_null
       1: areturn

  public org.antlr.v4.codegen.model.CodeBlockForAlt alternative(org.antlr.v4.tool.Alternative, boolean);
    Code:
       0: aconst_null
       1: areturn

  public org.antlr.v4.codegen.model.CodeBlockForAlt finishAlternative(org.antlr.v4.codegen.model.CodeBlockForAlt, java.util.List<org.antlr.v4.codegen.model.SrcOp>);
    Code:
       0: aload_1
       1: areturn

  public org.antlr.v4.codegen.model.CodeBlockForAlt epsilon(org.antlr.v4.tool.Alternative, boolean);
    Code:
       0: aconst_null
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> ruleRef(org.antlr.v4.tool.ast.GrammarAST, org.antlr.v4.tool.ast.GrammarAST, org.antlr.v4.tool.ast.GrammarAST);
    Code:
       0: aconst_null
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> tokenRef(org.antlr.v4.tool.ast.GrammarAST, org.antlr.v4.tool.ast.GrammarAST, org.antlr.v4.tool.ast.GrammarAST);
    Code:
       0: aconst_null
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> stringRef(org.antlr.v4.tool.ast.GrammarAST, org.antlr.v4.tool.ast.GrammarAST);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #2                  // Method tokenRef:(Lorg/antlr/v4/tool/ast/GrammarAST;Lorg/antlr/v4/tool/ast/GrammarAST;Lorg/antlr/v4/tool/ast/GrammarAST;)Ljava/util/List;
       7: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> set(org.antlr.v4.tool.ast.GrammarAST, org.antlr.v4.tool.ast.GrammarAST, boolean);
    Code:
       0: aconst_null
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> wildcard(org.antlr.v4.tool.ast.GrammarAST, org.antlr.v4.tool.ast.GrammarAST);
    Code:
       0: aconst_null
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> action(org.antlr.v4.tool.ast.ActionAST);
    Code:
       0: aconst_null
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> sempred(org.antlr.v4.tool.ast.ActionAST);
    Code:
       0: aconst_null
       1: areturn

  public org.antlr.v4.codegen.model.Choice getChoiceBlock(org.antlr.v4.tool.ast.BlockAST, java.util.List<org.antlr.v4.codegen.model.CodeBlockForAlt>, org.antlr.v4.tool.ast.GrammarAST);
    Code:
       0: aconst_null
       1: areturn

  public org.antlr.v4.codegen.model.Choice getEBNFBlock(org.antlr.v4.tool.ast.GrammarAST, java.util.List<org.antlr.v4.codegen.model.CodeBlockForAlt>);
    Code:
       0: aconst_null
       1: areturn

  public org.antlr.v4.codegen.model.Choice getLL1ChoiceBlock(org.antlr.v4.tool.ast.BlockAST, java.util.List<org.antlr.v4.codegen.model.CodeBlockForAlt>);
    Code:
       0: aconst_null
       1: areturn

  public org.antlr.v4.codegen.model.Choice getComplexChoiceBlock(org.antlr.v4.tool.ast.BlockAST, java.util.List<org.antlr.v4.codegen.model.CodeBlockForAlt>);
    Code:
       0: aconst_null
       1: areturn

  public org.antlr.v4.codegen.model.Choice getLL1EBNFBlock(org.antlr.v4.tool.ast.GrammarAST, java.util.List<org.antlr.v4.codegen.model.CodeBlockForAlt>);
    Code:
       0: aconst_null
       1: areturn

  public org.antlr.v4.codegen.model.Choice getComplexEBNFBlock(org.antlr.v4.tool.ast.GrammarAST, java.util.List<org.antlr.v4.codegen.model.CodeBlockForAlt>);
    Code:
       0: aconst_null
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> getLL1Test(org.antlr.v4.runtime.misc.IntervalSet, org.antlr.v4.tool.ast.GrammarAST);
    Code:
       0: aconst_null
       1: areturn

  public boolean needsImplicitLabel(org.antlr.v4.tool.ast.GrammarAST, org.antlr.v4.codegen.model.LabeledOp);
    Code:
       0: iconst_0
       1: ireturn
}
