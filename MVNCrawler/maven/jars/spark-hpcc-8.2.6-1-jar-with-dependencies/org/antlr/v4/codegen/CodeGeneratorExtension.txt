Compiled from "CodeGeneratorExtension.java"
public class org.antlr.v4.codegen.CodeGeneratorExtension {
  public org.antlr.v4.codegen.OutputModelFactory factory;

  public org.antlr.v4.codegen.CodeGeneratorExtension(org.antlr.v4.codegen.OutputModelFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field factory:Lorg/antlr/v4/codegen/OutputModelFactory;
       9: return

  public org.antlr.v4.codegen.model.ParserFile parserFile(org.antlr.v4.codegen.model.ParserFile);
    Code:
       0: aload_1
       1: areturn

  public org.antlr.v4.codegen.model.Parser parser(org.antlr.v4.codegen.model.Parser);
    Code:
       0: aload_1
       1: areturn

  public org.antlr.v4.codegen.model.LexerFile lexerFile(org.antlr.v4.codegen.model.LexerFile);
    Code:
       0: aload_1
       1: areturn

  public org.antlr.v4.codegen.model.Lexer lexer(org.antlr.v4.codegen.model.Lexer);
    Code:
       0: aload_1
       1: areturn

  public org.antlr.v4.codegen.model.RuleFunction rule(org.antlr.v4.codegen.model.RuleFunction);
    Code:
       0: aload_1
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> rulePostamble(java.util.List<org.antlr.v4.codegen.model.SrcOp>);
    Code:
       0: aload_1
       1: areturn

  public org.antlr.v4.codegen.model.CodeBlockForAlt alternative(org.antlr.v4.codegen.model.CodeBlockForAlt, boolean);
    Code:
       0: aload_1
       1: areturn

  public org.antlr.v4.codegen.model.CodeBlockForAlt finishAlternative(org.antlr.v4.codegen.model.CodeBlockForAlt, boolean);
    Code:
       0: aload_1
       1: areturn

  public org.antlr.v4.codegen.model.CodeBlockForAlt epsilon(org.antlr.v4.codegen.model.CodeBlockForAlt);
    Code:
       0: aload_1
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> ruleRef(java.util.List<org.antlr.v4.codegen.model.SrcOp>);
    Code:
       0: aload_1
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> tokenRef(java.util.List<org.antlr.v4.codegen.model.SrcOp>);
    Code:
       0: aload_1
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> set(java.util.List<org.antlr.v4.codegen.model.SrcOp>);
    Code:
       0: aload_1
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> stringRef(java.util.List<org.antlr.v4.codegen.model.SrcOp>);
    Code:
       0: aload_1
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> wildcard(java.util.List<org.antlr.v4.codegen.model.SrcOp>);
    Code:
       0: aload_1
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> action(java.util.List<org.antlr.v4.codegen.model.SrcOp>);
    Code:
       0: aload_1
       1: areturn

  public java.util.List<org.antlr.v4.codegen.model.SrcOp> sempred(java.util.List<org.antlr.v4.codegen.model.SrcOp>);
    Code:
       0: aload_1
       1: areturn

  public org.antlr.v4.codegen.model.Choice getChoiceBlock(org.antlr.v4.codegen.model.Choice);
    Code:
       0: aload_1
       1: areturn

  public org.antlr.v4.codegen.model.Choice getEBNFBlock(org.antlr.v4.codegen.model.Choice);
    Code:
       0: aload_1
       1: areturn

  public boolean needsImplicitLabel(org.antlr.v4.tool.ast.GrammarAST, org.antlr.v4.codegen.model.LabeledOp);
    Code:
       0: iconst_0
       1: ireturn
}
