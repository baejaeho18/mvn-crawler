Compiled from "BaseTree.java"
public abstract class org.antlr.runtime.tree.BaseTree implements org.antlr.runtime.tree.Tree {
  protected java.util.List<java.lang.Object> children;

  public org.antlr.runtime.tree.BaseTree();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.antlr.runtime.tree.BaseTree(org.antlr.runtime.tree.Tree);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.antlr.runtime.tree.Tree getChild(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field children:Ljava/util/List;
       4: ifnull        20
       7: iload_1
       8: aload_0
       9: getfield      #2                  // Field children:Ljava/util/List;
      12: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      17: if_icmplt     22
      20: aconst_null
      21: areturn
      22: aload_0
      23: getfield      #2                  // Field children:Ljava/util/List;
      26: iload_1
      27: invokeinterface #4,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      32: checkcast     #5                  // class org/antlr/runtime/tree/Tree
      35: areturn

  public java.util.List<? extends java.lang.Object> getChildren();
    Code:
       0: aload_0
       1: getfield      #2                  // Field children:Ljava/util/List;
       4: areturn

  public org.antlr.runtime.tree.Tree getFirstChildWithType(int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #2                  // Field children:Ljava/util/List;
       6: ifnull        54
       9: iload_2
      10: aload_0
      11: getfield      #2                  // Field children:Ljava/util/List;
      14: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      19: if_icmpge     54
      22: aload_0
      23: getfield      #2                  // Field children:Ljava/util/List;
      26: iload_2
      27: invokeinterface #4,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      32: checkcast     #5                  // class org/antlr/runtime/tree/Tree
      35: astore_3
      36: aload_3
      37: invokeinterface #6,  1            // InterfaceMethod org/antlr/runtime/tree/Tree.getType:()I
      42: iload_1
      43: if_icmpne     48
      46: aload_3
      47: areturn
      48: iinc          2, 1
      51: goto          2
      54: aconst_null
      55: areturn

  public int getChildCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field children:Ljava/util/List;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field children:Ljava/util/List;
      13: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      18: ireturn

  public void addChild(org.antlr.runtime.tree.Tree);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: checkcast     #7                  // class org/antlr/runtime/tree/BaseTree
       9: astore_2
      10: aload_2
      11: invokevirtual #8                  // Method isNil:()Z
      14: ifeq          156
      17: aload_0
      18: getfield      #2                  // Field children:Ljava/util/List;
      21: ifnull        45
      24: aload_0
      25: getfield      #2                  // Field children:Ljava/util/List;
      28: aload_2
      29: getfield      #2                  // Field children:Ljava/util/List;
      32: if_acmpne     45
      35: new           #9                  // class java/lang/RuntimeException
      38: dup
      39: ldc           #10                 // String attempt to add child list to itself
      41: invokespecial #11                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_2
      46: getfield      #2                  // Field children:Ljava/util/List;
      49: ifnull        202
      52: aload_0
      53: getfield      #2                  // Field children:Ljava/util/List;
      56: ifnull        141
      59: aload_2
      60: getfield      #2                  // Field children:Ljava/util/List;
      63: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      68: istore_3
      69: iconst_0
      70: istore        4
      72: iload         4
      74: iload_3
      75: if_icmpge     138
      78: aload_2
      79: getfield      #2                  // Field children:Ljava/util/List;
      82: iload         4
      84: invokeinterface #4,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      89: checkcast     #5                  // class org/antlr/runtime/tree/Tree
      92: astore        5
      94: aload_0
      95: getfield      #2                  // Field children:Ljava/util/List;
      98: aload         5
     100: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     105: pop
     106: aload         5
     108: aload_0
     109: invokeinterface #13,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.setParent:(Lorg/antlr/runtime/tree/Tree;)V
     114: aload         5
     116: aload_0
     117: getfield      #2                  // Field children:Ljava/util/List;
     120: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
     125: iconst_1
     126: isub
     127: invokeinterface #14,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.setChildIndex:(I)V
     132: iinc          4, 1
     135: goto          72
     138: goto          202
     141: aload_0
     142: aload_2
     143: getfield      #2                  // Field children:Ljava/util/List;
     146: putfield      #2                  // Field children:Ljava/util/List;
     149: aload_0
     150: invokevirtual #15                 // Method freshenParentAndChildIndexes:()V
     153: goto          202
     156: aload_0
     157: getfield      #2                  // Field children:Ljava/util/List;
     160: ifnonnull     171
     163: aload_0
     164: aload_0
     165: invokevirtual #16                 // Method createChildrenList:()Ljava/util/List;
     168: putfield      #2                  // Field children:Ljava/util/List;
     171: aload_0
     172: getfield      #2                  // Field children:Ljava/util/List;
     175: aload_1
     176: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     181: pop
     182: aload_2
     183: aload_0
     184: invokevirtual #17                 // Method setParent:(Lorg/antlr/runtime/tree/Tree;)V
     187: aload_2
     188: aload_0
     189: getfield      #2                  // Field children:Ljava/util/List;
     192: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
     197: iconst_1
     198: isub
     199: invokevirtual #18                 // Method setChildIndex:(I)V
     202: return

  public void addChildren(java.util.List<? extends org.antlr.runtime.tree.Tree>);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
       9: if_icmpge     34
      12: aload_1
      13: iload_2
      14: invokeinterface #4,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      19: checkcast     #5                  // class org/antlr/runtime/tree/Tree
      22: astore_3
      23: aload_0
      24: aload_3
      25: invokevirtual #19                 // Method addChild:(Lorg/antlr/runtime/tree/Tree;)V
      28: iinc          2, 1
      31: goto          2
      34: return

  public void setChild(int, org.antlr.runtime.tree.Tree);
    Code:
       0: aload_2
       1: ifnonnull     5
       4: return
       5: aload_2
       6: invokeinterface #20,  1           // InterfaceMethod org/antlr/runtime/tree/Tree.isNil:()Z
      11: ifeq          24
      14: new           #21                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #22                 // String Can\'t set single child to a list
      20: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field children:Ljava/util/List;
      28: ifnonnull     39
      31: aload_0
      32: aload_0
      33: invokevirtual #16                 // Method createChildrenList:()Ljava/util/List;
      36: putfield      #2                  // Field children:Ljava/util/List;
      39: aload_0
      40: getfield      #2                  // Field children:Ljava/util/List;
      43: iload_1
      44: aload_2
      45: invokeinterface #24,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_2
      52: aload_0
      53: invokeinterface #13,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.setParent:(Lorg/antlr/runtime/tree/Tree;)V
      58: aload_2
      59: iload_1
      60: invokeinterface #14,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.setChildIndex:(I)V
      65: return

  public void insertChild(int, java.lang.Object);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: invokevirtual #25                 // Method getChildCount:()I
       9: if_icmple     39
      12: new           #26                 // class java/lang/IndexOutOfBoundsException
      15: dup
      16: new           #27                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      23: iload_1
      24: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      27: ldc           #30                 // String  out or range
      29: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #33                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #2                  // Field children:Ljava/util/List;
      43: ifnonnull     54
      46: aload_0
      47: aload_0
      48: invokevirtual #16                 // Method createChildrenList:()Ljava/util/List;
      51: putfield      #2                  // Field children:Ljava/util/List;
      54: aload_0
      55: getfield      #2                  // Field children:Ljava/util/List;
      58: iload_1
      59: aload_2
      60: invokeinterface #34,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      65: aload_0
      66: iload_1
      67: invokevirtual #35                 // Method freshenParentAndChildIndexes:(I)V
      70: return

  public java.lang.Object deleteChild(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field children:Ljava/util/List;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field children:Ljava/util/List;
      13: iload_1
      14: invokeinterface #36,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      19: checkcast     #5                  // class org/antlr/runtime/tree/Tree
      22: astore_2
      23: aload_0
      24: iload_1
      25: invokevirtual #35                 // Method freshenParentAndChildIndexes:(I)V
      28: aload_2
      29: areturn

  public void replaceChildren(int, int, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field children:Ljava/util/List;
       4: ifnonnull     17
       7: new           #21                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #37                 // String indexes invalid; no children in list
      13: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_2
      18: iload_1
      19: isub
      20: iconst_1
      21: iadd
      22: istore        4
      24: aload_3
      25: checkcast     #7                  // class org/antlr/runtime/tree/BaseTree
      28: astore        6
      30: aload         6
      32: invokevirtual #8                  // Method isNil:()Z
      35: ifeq          48
      38: aload         6
      40: getfield      #2                  // Field children:Ljava/util/List;
      43: astore        7
      45: goto          68
      48: new           #38                 // class java/util/ArrayList
      51: dup
      52: iconst_1
      53: invokespecial #39                 // Method java/util/ArrayList."<init>":(I)V
      56: astore        7
      58: aload         7
      60: aload         6
      62: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      67: pop
      68: aload         7
      70: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      75: istore        5
      77: aload         7
      79: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      84: istore        8
      86: iload         4
      88: iload         5
      90: isub
      91: istore        9
      93: iload         9
      95: ifne          163
      98: iconst_0
      99: istore        10
     101: iload_1
     102: istore        11
     104: iload         11
     106: iload_2
     107: if_icmpgt     160
     110: aload         7
     112: iload         10
     114: invokeinterface #4,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     119: checkcast     #7                  // class org/antlr/runtime/tree/BaseTree
     122: astore        12
     124: aload_0
     125: getfield      #2                  // Field children:Ljava/util/List;
     128: iload         11
     130: aload         12
     132: invokeinterface #24,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     137: pop
     138: aload         12
     140: aload_0
     141: invokevirtual #17                 // Method setParent:(Lorg/antlr/runtime/tree/Tree;)V
     144: aload         12
     146: iload         11
     148: invokevirtual #18                 // Method setChildIndex:(I)V
     151: iinc          10, 1
     154: iinc          11, 1
     157: goto          104
     160: goto          339
     163: iload         9
     165: ifle          249
     168: iconst_0
     169: istore        10
     171: iload         10
     173: iload         8
     175: if_icmpge     207
     178: aload_0
     179: getfield      #2                  // Field children:Ljava/util/List;
     182: iload_1
     183: iload         10
     185: iadd
     186: aload         7
     188: iload         10
     190: invokeinterface #4,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     195: invokeinterface #24,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     200: pop
     201: iinc          10, 1
     204: goto          171
     207: iload_1
     208: iload         8
     210: iadd
     211: istore        10
     213: iload         10
     215: istore        11
     217: iload         11
     219: iload_2
     220: if_icmpgt     241
     223: aload_0
     224: getfield      #2                  // Field children:Ljava/util/List;
     227: iload         10
     229: invokeinterface #36,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     234: pop
     235: iinc          11, 1
     238: goto          217
     241: aload_0
     242: iload_1
     243: invokevirtual #35                 // Method freshenParentAndChildIndexes:(I)V
     246: goto          339
     249: iconst_0
     250: istore        10
     252: iload         10
     254: iload         4
     256: if_icmpge     288
     259: aload_0
     260: getfield      #2                  // Field children:Ljava/util/List;
     263: iload_1
     264: iload         10
     266: iadd
     267: aload         7
     269: iload         10
     271: invokeinterface #4,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     276: invokeinterface #24,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     281: pop
     282: iinc          10, 1
     285: goto          252
     288: iload         5
     290: iload         4
     292: isub
     293: istore        10
     295: iload         4
     297: istore        11
     299: iload         11
     301: iload         5
     303: if_icmpge     334
     306: aload_0
     307: getfield      #2                  // Field children:Ljava/util/List;
     310: iload_1
     311: iload         11
     313: iadd
     314: aload         7
     316: iload         11
     318: invokeinterface #4,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     323: invokeinterface #34,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
     328: iinc          11, 1
     331: goto          299
     334: aload_0
     335: iload_1
     336: invokevirtual #35                 // Method freshenParentAndChildIndexes:(I)V
     339: return

  protected java.util.List<java.lang.Object> createChildrenList();
    Code:
       0: new           #38                 // class java/util/ArrayList
       3: dup
       4: invokespecial #40                 // Method java/util/ArrayList."<init>":()V
       7: areturn

  public boolean isNil();
    Code:
       0: iconst_0
       1: ireturn

  public void freshenParentAndChildIndexes();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #35                 // Method freshenParentAndChildIndexes:(I)V
       5: return

  public void freshenParentAndChildIndexes(int);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getChildCount:()I
       4: istore_2
       5: iload_1
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     41
      12: aload_0
      13: iload_3
      14: invokevirtual #41                 // Method getChild:(I)Lorg/antlr/runtime/tree/Tree;
      17: astore        4
      19: aload         4
      21: iload_3
      22: invokeinterface #14,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.setChildIndex:(I)V
      27: aload         4
      29: aload_0
      30: invokeinterface #13,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.setParent:(Lorg/antlr/runtime/tree/Tree;)V
      35: iinc          3, 1
      38: goto          7
      41: return

  public void freshenParentAndChildIndexesDeeply();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #42                 // Method freshenParentAndChildIndexesDeeply:(I)V
       5: return

  public void freshenParentAndChildIndexesDeeply(int);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getChildCount:()I
       4: istore_2
       5: iload_1
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     45
      12: aload_0
      13: iload_3
      14: invokevirtual #41                 // Method getChild:(I)Lorg/antlr/runtime/tree/Tree;
      17: checkcast     #7                  // class org/antlr/runtime/tree/BaseTree
      20: astore        4
      22: aload         4
      24: iload_3
      25: invokevirtual #18                 // Method setChildIndex:(I)V
      28: aload         4
      30: aload_0
      31: invokevirtual #17                 // Method setParent:(Lorg/antlr/runtime/tree/Tree;)V
      34: aload         4
      36: invokevirtual #43                 // Method freshenParentAndChildIndexesDeeply:()V
      39: iinc          3, 1
      42: goto          7
      45: return

  public void sanityCheckParentAndChildIndexes();
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_m1
       3: invokevirtual #44                 // Method sanityCheckParentAndChildIndexes:(Lorg/antlr/runtime/tree/Tree;I)V
       6: return

  public void sanityCheckParentAndChildIndexes(org.antlr.runtime.tree.Tree, int);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #45                 // Method getParent:()Lorg/antlr/runtime/tree/Tree;
       5: if_acmpeq     47
       8: new           #46                 // class java/lang/IllegalStateException
      11: dup
      12: new           #27                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #47                 // String parents don\'t match; expected
      21: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #49                 // String  found
      30: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #45                 // Method getParent:()Lorg/antlr/runtime/tree/Tree;
      37: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #50                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: iload_2
      48: aload_0
      49: invokevirtual #51                 // Method getChildIndex:()I
      52: if_icmpeq     94
      55: new           #46                 // class java/lang/IllegalStateException
      58: dup
      59: new           #27                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #52                 // String child indexes don\'t match; expected
      68: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: iload_2
      72: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      75: ldc           #49                 // String  found
      77: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: invokevirtual #51                 // Method getChildIndex:()I
      84: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      87: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #50                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_0
      95: invokevirtual #25                 // Method getChildCount:()I
      98: istore_3
      99: iconst_0
     100: istore        4
     102: iload         4
     104: iload_3
     105: if_icmpge     133
     108: aload_0
     109: iload         4
     111: invokevirtual #41                 // Method getChild:(I)Lorg/antlr/runtime/tree/Tree;
     114: checkcast     #53                 // class org/antlr/runtime/tree/CommonTree
     117: astore        5
     119: aload         5
     121: aload_0
     122: iload         4
     124: invokevirtual #54                 // Method org/antlr/runtime/tree/CommonTree.sanityCheckParentAndChildIndexes:(Lorg/antlr/runtime/tree/Tree;I)V
     127: iinc          4, 1
     130: goto          102
     133: return

  public int getChildIndex();
    Code:
       0: iconst_0
       1: ireturn

  public void setChildIndex(int);
    Code:
       0: return

  public org.antlr.runtime.tree.Tree getParent();
    Code:
       0: aconst_null
       1: areturn

  public void setParent(org.antlr.runtime.tree.Tree);
    Code:
       0: return

  public boolean hasAncestor(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #55                 // Method getAncestor:(I)Lorg/antlr/runtime/tree/Tree;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public org.antlr.runtime.tree.Tree getAncestor(int);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: invokeinterface #56,  1           // InterfaceMethod org/antlr/runtime/tree/Tree.getParent:()Lorg/antlr/runtime/tree/Tree;
       8: astore_2
       9: aload_2
      10: ifnull        35
      13: aload_2
      14: invokeinterface #6,  1            // InterfaceMethod org/antlr/runtime/tree/Tree.getType:()I
      19: iload_1
      20: if_icmpne     25
      23: aload_2
      24: areturn
      25: aload_2
      26: invokeinterface #56,  1           // InterfaceMethod org/antlr/runtime/tree/Tree.getParent:()Lorg/antlr/runtime/tree/Tree;
      31: astore_2
      32: goto          9
      35: aconst_null
      36: areturn

  public java.util.List<? extends org.antlr.runtime.tree.Tree> getAncestors();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method getParent:()Lorg/antlr/runtime/tree/Tree;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: new           #38                 // class java/util/ArrayList
      12: dup
      13: invokespecial #40                 // Method java/util/ArrayList."<init>":()V
      16: astore_1
      17: aload_0
      18: astore_2
      19: aload_2
      20: invokeinterface #56,  1           // InterfaceMethod org/antlr/runtime/tree/Tree.getParent:()Lorg/antlr/runtime/tree/Tree;
      25: astore_2
      26: aload_2
      27: ifnull        48
      30: aload_1
      31: iconst_0
      32: aload_2
      33: invokeinterface #34,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      38: aload_2
      39: invokeinterface #56,  1           // InterfaceMethod org/antlr/runtime/tree/Tree.getParent:()Lorg/antlr/runtime/tree/Tree;
      44: astore_2
      45: goto          26
      48: aload_1
      49: areturn

  public java.lang.String toStringTree();
    Code:
       0: aload_0
       1: getfield      #2                  // Field children:Ljava/util/List;
       4: ifnull        19
       7: aload_0
       8: getfield      #2                  // Field children:Ljava/util/List;
      11: invokeinterface #57,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          24
      19: aload_0
      20: invokevirtual #58                 // Method toString:()Ljava/lang/String;
      23: areturn
      24: new           #27                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      31: astore_1
      32: aload_0
      33: invokevirtual #8                  // Method isNil:()Z
      36: ifne          62
      39: aload_1
      40: ldc           #59                 // String (
      42: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: pop
      46: aload_1
      47: aload_0
      48: invokevirtual #58                 // Method toString:()Ljava/lang/String;
      51: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: pop
      55: aload_1
      56: bipush        32
      58: invokevirtual #60                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      61: pop
      62: iconst_0
      63: istore_2
      64: aload_0
      65: getfield      #2                  // Field children:Ljava/util/List;
      68: ifnull        126
      71: iload_2
      72: aload_0
      73: getfield      #2                  // Field children:Ljava/util/List;
      76: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I
      81: if_icmpge     126
      84: aload_0
      85: getfield      #2                  // Field children:Ljava/util/List;
      88: iload_2
      89: invokeinterface #4,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      94: checkcast     #5                  // class org/antlr/runtime/tree/Tree
      97: astore_3
      98: iload_2
      99: ifle          109
     102: aload_1
     103: bipush        32
     105: invokevirtual #60                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     108: pop
     109: aload_1
     110: aload_3
     111: invokeinterface #61,  1           // InterfaceMethod org/antlr/runtime/tree/Tree.toStringTree:()Ljava/lang/String;
     116: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: pop
     120: iinc          2, 1
     123: goto          64
     126: aload_0
     127: invokevirtual #8                  // Method isNil:()Z
     130: ifne          140
     133: aload_1
     134: ldc           #62                 // String )
     136: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: pop
     140: aload_1
     141: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: areturn

  public int getLine();
    Code:
       0: iconst_0
       1: ireturn

  public int getCharPositionInLine();
    Code:
       0: iconst_0
       1: ireturn

  public abstract java.lang.String toString();
}
