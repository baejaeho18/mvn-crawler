Compiled from "BaseTreeAdaptor.java"
public abstract class org.antlr.runtime.tree.BaseTreeAdaptor implements org.antlr.runtime.tree.TreeAdaptor {
  protected java.util.Map<java.lang.Object, java.lang.Integer> treeToUniqueIDMap;

  protected int uniqueNodeID;

  public org.antlr.runtime.tree.BaseTreeAdaptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field uniqueNodeID:I
       9: return

  public java.lang.Object nil();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #3                  // Method create:(Lorg/antlr/runtime/Token;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object errorNode(org.antlr.runtime.TokenStream, org.antlr.runtime.Token, org.antlr.runtime.Token, org.antlr.runtime.RecognitionException);
    Code:
       0: new           #4                  // class org/antlr/runtime/tree/CommonErrorNode
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #5                  // Method org/antlr/runtime/tree/CommonErrorNode."<init>":(Lorg/antlr/runtime/TokenStream;Lorg/antlr/runtime/Token;Lorg/antlr/runtime/Token;Lorg/antlr/runtime/RecognitionException;)V
      12: astore        5
      14: aload         5
      16: areturn

  public boolean isNil(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/antlr/runtime/tree/Tree
       4: invokeinterface #7,  1            // InterfaceMethod org/antlr/runtime/tree/Tree.isNil:()Z
       9: ireturn

  public java.lang.Object dupTree(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #8                  // Method dupTree:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object dupTree(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: invokevirtual #9                  // Method dupNode:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_3
      12: aload_0
      13: aload_3
      14: aload_0
      15: aload_1
      16: invokevirtual #10                 // Method getChildIndex:(Ljava/lang/Object;)I
      19: invokevirtual #11                 // Method setChildIndex:(Ljava/lang/Object;I)V
      22: aload_0
      23: aload_3
      24: aload_2
      25: invokevirtual #12                 // Method setParent:(Ljava/lang/Object;Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: invokevirtual #13                 // Method getChildCount:(Ljava/lang/Object;)I
      33: istore        4
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload         4
      42: if_icmpge     76
      45: aload_0
      46: aload_1
      47: iload         5
      49: invokevirtual #14                 // Method getChild:(Ljava/lang/Object;I)Ljava/lang/Object;
      52: astore        6
      54: aload_0
      55: aload         6
      57: aload_1
      58: invokevirtual #8                  // Method dupTree:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: astore        7
      63: aload_0
      64: aload_3
      65: aload         7
      67: invokevirtual #15                 // Method addChild:(Ljava/lang/Object;Ljava/lang/Object;)V
      70: iinc          5, 1
      73: goto          38
      76: aload_3
      77: areturn

  public void addChild(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        21
       4: aload_2
       5: ifnull        21
       8: aload_1
       9: checkcast     #6                  // class org/antlr/runtime/tree/Tree
      12: aload_2
      13: checkcast     #6                  // class org/antlr/runtime/tree/Tree
      16: invokeinterface #16,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.addChild:(Lorg/antlr/runtime/tree/Tree;)V
      21: return

  public java.lang.Object becomeRoot(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/antlr/runtime/tree/Tree
       4: astore_3
       5: aload_2
       6: checkcast     #6                  // class org/antlr/runtime/tree/Tree
       9: astore        4
      11: aload_2
      12: ifnonnull     17
      15: aload_1
      16: areturn
      17: aload_3
      18: invokeinterface #7,  1            // InterfaceMethod org/antlr/runtime/tree/Tree.isNil:()Z
      23: ifeq          67
      26: aload_3
      27: invokeinterface #17,  1           // InterfaceMethod org/antlr/runtime/tree/Tree.getChildCount:()I
      32: istore        5
      34: iload         5
      36: iconst_1
      37: if_icmpne     51
      40: aload_3
      41: iconst_0
      42: invokeinterface #18,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.getChild:(I)Lorg/antlr/runtime/tree/Tree;
      47: astore_3
      48: goto          67
      51: iload         5
      53: iconst_1
      54: if_icmple     67
      57: new           #19                 // class java/lang/RuntimeException
      60: dup
      61: ldc           #20                 // String more than one node as root (TODO: make exception hierarchy)
      63: invokespecial #21                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_3
      68: aload         4
      70: invokeinterface #16,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.addChild:(Lorg/antlr/runtime/tree/Tree;)V
      75: aload_3
      76: areturn

  public java.lang.Object rulePostProcessing(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/antlr/runtime/tree/Tree
       4: astore_2
       5: aload_2
       6: ifnull        64
       9: aload_2
      10: invokeinterface #7,  1            // InterfaceMethod org/antlr/runtime/tree/Tree.isNil:()Z
      15: ifeq          64
      18: aload_2
      19: invokeinterface #17,  1           // InterfaceMethod org/antlr/runtime/tree/Tree.getChildCount:()I
      24: ifne          32
      27: aconst_null
      28: astore_2
      29: goto          64
      32: aload_2
      33: invokeinterface #17,  1           // InterfaceMethod org/antlr/runtime/tree/Tree.getChildCount:()I
      38: iconst_1
      39: if_icmpne     64
      42: aload_2
      43: iconst_0
      44: invokeinterface #18,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.getChild:(I)Lorg/antlr/runtime/tree/Tree;
      49: astore_2
      50: aload_2
      51: aconst_null
      52: invokeinterface #22,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.setParent:(Lorg/antlr/runtime/tree/Tree;)V
      57: aload_2
      58: iconst_m1
      59: invokeinterface #23,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.setChildIndex:(I)V
      64: aload_2
      65: areturn

  public java.lang.Object becomeRoot(org.antlr.runtime.Token, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #3                  // Method create:(Lorg/antlr/runtime/Token;)Ljava/lang/Object;
       6: aload_2
       7: invokevirtual #24                 // Method becomeRoot:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object create(int, org.antlr.runtime.Token);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #25                 // Method createToken:(Lorg/antlr/runtime/Token;)Lorg/antlr/runtime/Token;
       5: astore_2
       6: aload_2
       7: iload_1
       8: invokeinterface #26,  2           // InterfaceMethod org/antlr/runtime/Token.setType:(I)V
      13: aload_0
      14: aload_2
      15: invokevirtual #3                  // Method create:(Lorg/antlr/runtime/Token;)Ljava/lang/Object;
      18: checkcast     #6                  // class org/antlr/runtime/tree/Tree
      21: astore_3
      22: aload_3
      23: areturn

  public java.lang.Object create(int, org.antlr.runtime.Token, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     11
       4: aload_0
       5: iload_1
       6: aload_3
       7: invokevirtual #27                 // Method create:(ILjava/lang/String;)Ljava/lang/Object;
      10: areturn
      11: aload_0
      12: aload_2
      13: invokevirtual #25                 // Method createToken:(Lorg/antlr/runtime/Token;)Lorg/antlr/runtime/Token;
      16: astore_2
      17: aload_2
      18: iload_1
      19: invokeinterface #26,  2           // InterfaceMethod org/antlr/runtime/Token.setType:(I)V
      24: aload_2
      25: aload_3
      26: invokeinterface #28,  2           // InterfaceMethod org/antlr/runtime/Token.setText:(Ljava/lang/String;)V
      31: aload_0
      32: aload_2
      33: invokevirtual #3                  // Method create:(Lorg/antlr/runtime/Token;)Ljava/lang/Object;
      36: checkcast     #6                  // class org/antlr/runtime/tree/Tree
      39: astore        4
      41: aload         4
      43: areturn

  public java.lang.Object create(int, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #29                 // Method createToken:(ILjava/lang/String;)Lorg/antlr/runtime/Token;
       6: astore_3
       7: aload_0
       8: aload_3
       9: invokevirtual #3                  // Method create:(Lorg/antlr/runtime/Token;)Ljava/lang/Object;
      12: checkcast     #6                  // class org/antlr/runtime/tree/Tree
      15: astore        4
      17: aload         4
      19: areturn

  public int getType(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/antlr/runtime/tree/Tree
       4: invokeinterface #30,  1           // InterfaceMethod org/antlr/runtime/tree/Tree.getType:()I
       9: ireturn

  public void setType(java.lang.Object, int);
    Code:
       0: new           #31                 // class java/lang/NoSuchMethodError
       3: dup
       4: ldc           #32                 // String don\'t know enough about Tree node
       6: invokespecial #33                 // Method java/lang/NoSuchMethodError."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getText(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/antlr/runtime/tree/Tree
       4: invokeinterface #34,  1           // InterfaceMethod org/antlr/runtime/tree/Tree.getText:()Ljava/lang/String;
       9: areturn

  public void setText(java.lang.Object, java.lang.String);
    Code:
       0: new           #31                 // class java/lang/NoSuchMethodError
       3: dup
       4: ldc           #32                 // String don\'t know enough about Tree node
       6: invokespecial #33                 // Method java/lang/NoSuchMethodError."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object getChild(java.lang.Object, int);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/antlr/runtime/tree/Tree
       4: iload_2
       5: invokeinterface #18,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.getChild:(I)Lorg/antlr/runtime/tree/Tree;
      10: areturn

  public void setChild(java.lang.Object, int, java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/antlr/runtime/tree/Tree
       4: iload_2
       5: aload_3
       6: checkcast     #6                  // class org/antlr/runtime/tree/Tree
       9: invokeinterface #35,  3           // InterfaceMethod org/antlr/runtime/tree/Tree.setChild:(ILorg/antlr/runtime/tree/Tree;)V
      14: return

  public java.lang.Object deleteChild(java.lang.Object, int);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/antlr/runtime/tree/Tree
       4: iload_2
       5: invokeinterface #36,  2           // InterfaceMethod org/antlr/runtime/tree/Tree.deleteChild:(I)Ljava/lang/Object;
      10: areturn

  public int getChildCount(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/antlr/runtime/tree/Tree
       4: invokeinterface #17,  1           // InterfaceMethod org/antlr/runtime/tree/Tree.getChildCount:()I
       9: ireturn

  public int getUniqueID(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #37                 // Field treeToUniqueIDMap:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #38                 // class java/util/HashMap
      11: dup
      12: invokespecial #39                 // Method java/util/HashMap."<init>":()V
      15: putfield      #37                 // Field treeToUniqueIDMap:Ljava/util/Map;
      18: aload_0
      19: getfield      #37                 // Field treeToUniqueIDMap:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #41                 // class java/lang/Integer
      31: astore_2
      32: aload_2
      33: ifnull        41
      36: aload_2
      37: invokevirtual #42                 // Method java/lang/Integer.intValue:()I
      40: ireturn
      41: aload_0
      42: getfield      #2                  // Field uniqueNodeID:I
      45: istore_3
      46: aload_0
      47: getfield      #37                 // Field treeToUniqueIDMap:Ljava/util/Map;
      50: aload_1
      51: iload_3
      52: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      55: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: aload_0
      62: dup
      63: getfield      #2                  // Field uniqueNodeID:I
      66: iconst_1
      67: iadd
      68: putfield      #2                  // Field uniqueNodeID:I
      71: iload_3
      72: ireturn

  public abstract org.antlr.runtime.Token createToken(int, java.lang.String);

  public abstract org.antlr.runtime.Token createToken(org.antlr.runtime.Token);
}
