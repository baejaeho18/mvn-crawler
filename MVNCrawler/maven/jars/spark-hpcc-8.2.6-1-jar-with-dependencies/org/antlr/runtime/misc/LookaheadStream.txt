Compiled from "LookaheadStream.java"
public abstract class org.antlr.runtime.misc.LookaheadStream<T> extends org.antlr.runtime.misc.FastQueue<T> {
  public static final int UNINITIALIZED_EOF_ELEMENT_INDEX;

  protected int currentElementIndex;

  protected T prevElement;

  public T eof;

  protected int lastMarker;

  protected int markDepth;

  static final boolean $assertionsDisabled;

  public org.antlr.runtime.misc.LookaheadStream();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/antlr/runtime/misc/FastQueue."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field currentElementIndex:I
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field eof:Ljava/lang/Object;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field markDepth:I
      19: return

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/antlr/runtime/misc/FastQueue.reset:()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field currentElementIndex:I
       9: aload_0
      10: iconst_0
      11: putfield      #6                  // Field p:I
      14: aload_0
      15: aconst_null
      16: putfield      #7                  // Field prevElement:Ljava/lang/Object;
      19: return

  public abstract T nextElement();

  public abstract boolean isEOF(T);

  public T remove();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #8                  // Method elementAt:(I)Ljava/lang/Object;
       5: astore_1
       6: aload_0
       7: dup
       8: getfield      #6                  // Field p:I
      11: iconst_1
      12: iadd
      13: putfield      #6                  // Field p:I
      16: aload_0
      17: getfield      #6                  // Field p:I
      20: aload_0
      21: getfield      #9                  // Field data:Ljava/util/List;
      24: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      29: if_icmpne     48
      32: aload_0
      33: getfield      #4                  // Field markDepth:I
      36: ifne          48
      39: aload_0
      40: aload_1
      41: putfield      #7                  // Field prevElement:Ljava/lang/Object;
      44: aload_0
      45: invokevirtual #11                 // Method clear:()V
      48: aload_1
      49: areturn

  public void consume();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #12                 // Method syncAhead:(I)V
       5: aload_0
       6: invokevirtual #13                 // Method remove:()Ljava/lang/Object;
       9: pop
      10: aload_0
      11: dup
      12: getfield      #2                  // Field currentElementIndex:I
      15: iconst_1
      16: iadd
      17: putfield      #2                  // Field currentElementIndex:I
      20: return

  protected void syncAhead(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field p:I
       4: iload_1
       5: iadd
       6: iconst_1
       7: isub
       8: aload_0
       9: getfield      #9                  // Field data:Ljava/util/List;
      12: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      17: isub
      18: iconst_1
      19: iadd
      20: istore_2
      21: iload_2
      22: ifle          30
      25: aload_0
      26: iload_2
      27: invokevirtual #14                 // Method fill:(I)V
      30: return

  public void fill(int);
    Code:
       0: iconst_1
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpgt     42
       7: aload_0
       8: invokevirtual #15                 // Method nextElement:()Ljava/lang/Object;
      11: astore_3
      12: aload_0
      13: aload_3
      14: invokevirtual #16                 // Method isEOF:(Ljava/lang/Object;)Z
      17: ifeq          25
      20: aload_0
      21: aload_3
      22: putfield      #3                  // Field eof:Ljava/lang/Object;
      25: aload_0
      26: getfield      #9                  // Field data:Ljava/util/List;
      29: aload_3
      30: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      35: pop
      36: iinc          2, 1
      39: goto          2
      42: return

  public int size();
    Code:
       0: new           #18                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #19                 // String streams are of unknown size
       6: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public T LT(int);
    Code:
       0: iload_1
       1: ifne          6
       4: aconst_null
       5: areturn
       6: iload_1
       7: ifge          17
      10: aload_0
      11: iload_1
      12: ineg
      13: invokevirtual #21                 // Method LB:(I)Ljava/lang/Object;
      16: areturn
      17: aload_0
      18: iload_1
      19: invokevirtual #12                 // Method syncAhead:(I)V
      22: aload_0
      23: getfield      #6                  // Field p:I
      26: iload_1
      27: iadd
      28: iconst_1
      29: isub
      30: aload_0
      31: getfield      #9                  // Field data:Ljava/util/List;
      34: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      39: if_icmple     47
      42: aload_0
      43: getfield      #3                  // Field eof:Ljava/lang/Object;
      46: areturn
      47: aload_0
      48: iload_1
      49: iconst_1
      50: isub
      51: invokevirtual #8                  // Method elementAt:(I)Ljava/lang/Object;
      54: areturn

  public int index();
    Code:
       0: aload_0
       1: getfield      #2                  // Field currentElementIndex:I
       4: ireturn

  public int mark();
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field markDepth:I
       5: iconst_1
       6: iadd
       7: putfield      #4                  // Field markDepth:I
      10: aload_0
      11: aload_0
      12: getfield      #6                  // Field p:I
      15: putfield      #22                 // Field lastMarker:I
      18: aload_0
      19: getfield      #22                 // Field lastMarker:I
      22: ireturn

  public void release(int);
    Code:
       0: return

  public void rewind(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field markDepth:I
       5: iconst_1
       6: isub
       7: putfield      #4                  // Field markDepth:I
      10: aload_0
      11: getfield      #6                  // Field p:I
      14: iload_1
      15: isub
      16: istore_2
      17: aload_0
      18: dup
      19: getfield      #2                  // Field currentElementIndex:I
      22: iload_2
      23: isub
      24: putfield      #2                  // Field currentElementIndex:I
      27: aload_0
      28: iload_1
      29: putfield      #6                  // Field p:I
      32: return

  public void rewind();
    Code:
       0: aload_0
       1: getfield      #6                  // Field p:I
       4: aload_0
       5: getfield      #22                 // Field lastMarker:I
       8: isub
       9: istore_1
      10: aload_0
      11: dup
      12: getfield      #2                  // Field currentElementIndex:I
      15: iload_1
      16: isub
      17: putfield      #2                  // Field currentElementIndex:I
      20: aload_0
      21: aload_0
      22: getfield      #22                 // Field lastMarker:I
      25: putfield      #6                  // Field p:I
      28: return

  public void seek(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #23                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #24                 // String can\'t seek before the beginning of the input
      10: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #2                  // Field currentElementIndex:I
      18: iload_1
      19: isub
      20: istore_2
      21: aload_0
      22: getfield      #6                  // Field p:I
      25: iload_2
      26: isub
      27: ifge          40
      30: new           #18                 // class java/lang/UnsupportedOperationException
      33: dup
      34: ldc           #26                 // String can\'t seek before the beginning of this stream\'s buffer
      36: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: dup
      42: getfield      #6                  // Field p:I
      45: iload_2
      46: isub
      47: putfield      #6                  // Field p:I
      50: aload_0
      51: iload_1
      52: putfield      #2                  // Field currentElementIndex:I
      55: return

  protected T LB(int);
    Code:
       0: getstatic     #27                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: iload_1
       7: ifgt          18
      10: new           #28                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #29                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #6                  // Field p:I
      22: iload_1
      23: isub
      24: istore_2
      25: iload_2
      26: iconst_m1
      27: if_icmpne     35
      30: aload_0
      31: getfield      #7                  // Field prevElement:Ljava/lang/Object;
      34: areturn
      35: iload_2
      36: iflt          50
      39: aload_0
      40: getfield      #9                  // Field data:Ljava/util/List;
      43: iload_2
      44: invokeinterface #30,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: areturn
      50: iload_2
      51: iconst_m1
      52: if_icmpge     65
      55: new           #18                 // class java/lang/UnsupportedOperationException
      58: dup
      59: ldc           #31                 // String can\'t look more than one token before the beginning of this stream\'s buffer
      61: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: new           #18                 // class java/lang/UnsupportedOperationException
      68: dup
      69: ldc           #32                 // String can\'t look past the end of this stream\'s buffer using LB(int)
      71: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      74: athrow

  static {};
    Code:
       0: ldc_w         #33                 // class org/antlr/runtime/misc/LookaheadStream
       3: invokevirtual #34                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #27                 // Field $assertionsDisabled:Z
      17: return
}
