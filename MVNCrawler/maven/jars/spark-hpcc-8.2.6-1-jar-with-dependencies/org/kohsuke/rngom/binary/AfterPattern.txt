Compiled from "AfterPattern.java"
public class org.kohsuke.rngom.binary.AfterPattern extends org.kohsuke.rngom.binary.BinaryPattern {
  org.kohsuke.rngom.binary.AfterPattern(org.kohsuke.rngom.binary.Pattern, org.kohsuke.rngom.binary.Pattern);
    Code:
       0: aload_0
       1: iconst_0
       2: bipush        41
       4: aload_1
       5: invokevirtual #1                  // Method java/lang/Object.hashCode:()I
       8: aload_2
       9: invokevirtual #1                  // Method java/lang/Object.hashCode:()I
      12: invokestatic  #2                  // Method combineHashCode:(III)I
      15: aload_1
      16: aload_2
      17: invokespecial #3                  // Method org/kohsuke/rngom/binary/BinaryPattern."<init>":(ZILorg/kohsuke/rngom/binary/Pattern;Lorg/kohsuke/rngom/binary/Pattern;)V
      20: return

  boolean isNotAllowed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field p1:Lorg/kohsuke/rngom/binary/Pattern;
       4: invokevirtual #5                  // Method org/kohsuke/rngom/binary/Pattern.isNotAllowed:()Z
       7: ireturn

  public java.lang.Object apply(org.kohsuke.rngom.binary.visitor.PatternFunction);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #6,  2            // InterfaceMethod org/kohsuke/rngom/binary/visitor/PatternFunction.caseAfter:(Lorg/kohsuke/rngom/binary/AfterPattern;)Ljava/lang/Object;
       7: areturn

  public void accept(org.kohsuke.rngom.binary.visitor.PatternVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field p1:Lorg/kohsuke/rngom/binary/Pattern;
       5: aload_0
       6: getfield      #7                  // Field p2:Lorg/kohsuke/rngom/binary/Pattern;
       9: invokeinterface #8,  3            // InterfaceMethod org/kohsuke/rngom/binary/visitor/PatternVisitor.visitAfter:(Lorg/kohsuke/rngom/binary/Pattern;Lorg/kohsuke/rngom/binary/Pattern;)V
      14: return
}
