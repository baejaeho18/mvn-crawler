Compiled from "Pattern.java"
public abstract class org.kohsuke.rngom.binary.Pattern implements org.kohsuke.rngom.ast.om.ParsedPattern {
  private boolean nullable;

  private int hc;

  private int contentType;

  static final int TEXT_HASH_CODE;

  static final int ERROR_HASH_CODE;

  static final int EMPTY_HASH_CODE;

  static final int NOT_ALLOWED_HASH_CODE;

  static final int CHOICE_HASH_CODE;

  static final int GROUP_HASH_CODE;

  static final int INTERLEAVE_HASH_CODE;

  static final int ONE_OR_MORE_HASH_CODE;

  static final int ELEMENT_HASH_CODE;

  static final int VALUE_HASH_CODE;

  static final int ATTRIBUTE_HASH_CODE;

  static final int DATA_HASH_CODE;

  static final int LIST_HASH_CODE;

  static final int AFTER_HASH_CODE;

  static final int EMPTY_CONTENT_TYPE;

  static final int ELEMENT_CONTENT_TYPE;

  static final int MIXED_CONTENT_TYPE;

  static final int DATA_CONTENT_TYPE;

  static final int START_CONTEXT;

  static final int ELEMENT_CONTEXT;

  static final int ELEMENT_REPEAT_CONTEXT;

  static final int ELEMENT_REPEAT_GROUP_CONTEXT;

  static final int ELEMENT_REPEAT_INTERLEAVE_CONTEXT;

  static final int ATTRIBUTE_CONTEXT;

  static final int LIST_CONTEXT;

  static final int DATA_EXCEPT_CONTEXT;

  static int combineHashCode(int, int, int);
    Code:
       0: iload_0
       1: iload_1
       2: imul
       3: iload_2
       4: imul
       5: ireturn

  static int combineHashCode(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: imul
       3: ireturn

  org.kohsuke.rngom.binary.Pattern(boolean, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field nullable:Z
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field contentType:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field hc:I
      19: return

  org.kohsuke.rngom.binary.Pattern();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field nullable:Z
       9: aload_0
      10: aload_0
      11: invokevirtual #5                  // Method java/lang/Object.hashCode:()I
      14: putfield      #4                  // Field hc:I
      17: aload_0
      18: iconst_0
      19: putfield      #3                  // Field contentType:I
      22: return

  void checkRecursion(int) throws org.xml.sax.SAXException;
    Code:
       0: return

  org.kohsuke.rngom.binary.Pattern expand(org.kohsuke.rngom.binary.SchemaPatternBuilder);
    Code:
       0: aload_0
       1: areturn

  public final boolean isNullable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nullable:Z
       4: ireturn

  boolean isNotAllowed();
    Code:
       0: iconst_0
       1: ireturn

  void checkRestrictions(int, org.kohsuke.rngom.binary.DuplicateAttributeDetector, org.kohsuke.rngom.binary.Alphabet) throws org.kohsuke.rngom.binary.RestrictionViolationException;
    Code:
       0: return

  abstract boolean samePattern(org.kohsuke.rngom.binary.Pattern);

  final int patternHashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hc:I
       4: ireturn

  final int getContentType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field contentType:I
       4: ireturn

  boolean containsChoice(org.kohsuke.rngom.binary.Pattern);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  public abstract void accept(org.kohsuke.rngom.binary.visitor.PatternVisitor);

  public abstract java.lang.Object apply(org.kohsuke.rngom.binary.visitor.PatternFunction);

  static boolean contentTypeGroupable(int, int);
    Code:
       0: iload_0
       1: ifeq          8
       4: iload_1
       5: ifne          10
       8: iconst_1
       9: ireturn
      10: iload_0
      11: iconst_3
      12: if_icmpeq     20
      15: iload_1
      16: iconst_3
      17: if_icmpne     22
      20: iconst_0
      21: ireturn
      22: iconst_1
      23: ireturn
}
