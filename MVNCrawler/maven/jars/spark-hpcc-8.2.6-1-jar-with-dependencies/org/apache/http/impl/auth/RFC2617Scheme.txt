Compiled from "RFC2617Scheme.java"
public abstract class org.apache.http.impl.auth.RFC2617Scheme extends org.apache.http.impl.auth.AuthSchemeBase implements java.io.Serializable {
  private static final long serialVersionUID;

  private final java.util.Map<java.lang.String, java.lang.String> params;

  private transient java.nio.charset.Charset credentialsCharset;

  public org.apache.http.impl.auth.RFC2617Scheme(org.apache.http.auth.ChallengeState);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/http/impl/auth/AuthSchemeBase."<init>":(Lorg/apache/http/auth/ChallengeState;)V
       5: aload_0
       6: new           #2                  // class java/util/HashMap
       9: dup
      10: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      13: putfield      #4                  // Field params:Ljava/util/Map;
      16: aload_0
      17: getstatic     #5                  // Field org/apache/http/Consts.ASCII:Ljava/nio/charset/Charset;
      20: putfield      #6                  // Field credentialsCharset:Ljava/nio/charset/Charset;
      23: return

  public org.apache.http.impl.auth.RFC2617Scheme(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method org/apache/http/impl/auth/AuthSchemeBase."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field params:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: ifnull        24
      20: aload_1
      21: goto          27
      24: getstatic     #5                  // Field org/apache/http/Consts.ASCII:Ljava/nio/charset/Charset;
      27: putfield      #6                  // Field credentialsCharset:Ljava/nio/charset/Charset;
      30: return

  public org.apache.http.impl.auth.RFC2617Scheme();
    Code:
       0: aload_0
       1: getstatic     #5                  // Field org/apache/http/Consts.ASCII:Ljava/nio/charset/Charset;
       4: invokespecial #8                  // Method "<init>":(Ljava/nio/charset/Charset;)V
       7: return

  public java.nio.charset.Charset getCredentialsCharset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field credentialsCharset:Ljava/nio/charset/Charset;
       4: ifnull        14
       7: aload_0
       8: getfield      #6                  // Field credentialsCharset:Ljava/nio/charset/Charset;
      11: goto          17
      14: getstatic     #5                  // Field org/apache/http/Consts.ASCII:Ljava/nio/charset/Charset;
      17: areturn

  java.lang.String getCredentialsCharset(org.apache.http.HttpRequest);
    Code:
       0: aload_1
       1: invokeinterface #9,  1            // InterfaceMethod org/apache/http/HttpRequest.getParams:()Lorg/apache/http/params/HttpParams;
       6: ldc           #10                 // String http.auth.credential-charset
       8: invokeinterface #11,  2           // InterfaceMethod org/apache/http/params/HttpParams.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #12                 // class java/lang/String
      16: astore_2
      17: aload_2
      18: ifnonnull     29
      21: aload_0
      22: invokevirtual #13                 // Method getCredentialsCharset:()Ljava/nio/charset/Charset;
      25: invokevirtual #14                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      28: astore_2
      29: aload_2
      30: areturn

  protected void parseChallenge(org.apache.http.util.CharArrayBuffer, int, int) throws org.apache.http.auth.MalformedChallengeException;
    Code:
       0: getstatic     #15                 // Field org/apache/http/message/BasicHeaderValueParser.INSTANCE:Lorg/apache/http/message/BasicHeaderValueParser;
       3: astore        4
       5: new           #16                 // class org/apache/http/message/ParserCursor
       8: dup
       9: iload_2
      10: aload_1
      11: invokevirtual #17                 // Method org/apache/http/util/CharArrayBuffer.length:()I
      14: invokespecial #18                 // Method org/apache/http/message/ParserCursor."<init>":(II)V
      17: astore        5
      19: aload         4
      21: aload_1
      22: aload         5
      24: invokeinterface #19,  3           // InterfaceMethod org/apache/http/message/HeaderValueParser.parseElements:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)[Lorg/apache/http/HeaderElement;
      29: astore        6
      31: aload_0
      32: getfield      #4                  // Field params:Ljava/util/Map;
      35: invokeinterface #20,  1           // InterfaceMethod java/util/Map.clear:()V
      40: aload         6
      42: astore        7
      44: aload         7
      46: arraylength
      47: istore        8
      49: iconst_0
      50: istore        9
      52: iload         9
      54: iload         8
      56: if_icmpge     102
      59: aload         7
      61: iload         9
      63: aaload
      64: astore        10
      66: aload_0
      67: getfield      #4                  // Field params:Ljava/util/Map;
      70: aload         10
      72: invokeinterface #21,  1           // InterfaceMethod org/apache/http/HeaderElement.getName:()Ljava/lang/String;
      77: getstatic     #22                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      80: invokevirtual #23                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      83: aload         10
      85: invokeinterface #24,  1           // InterfaceMethod org/apache/http/HeaderElement.getValue:()Ljava/lang/String;
      90: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: iinc          9, 1
      99: goto          52
     102: return

  protected java.util.Map<java.lang.String, java.lang.String> getParameters();
    Code:
       0: aload_0
       1: getfield      #4                  // Field params:Ljava/util/Map;
       4: areturn

  public java.lang.String getParameter(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #4                  // Field params:Ljava/util/Map;
      10: aload_1
      11: getstatic     #22                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      14: invokevirtual #23                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      17: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #12                 // class java/lang/String
      25: areturn

  public java.lang.String getRealm();
    Code:
       0: aload_0
       1: ldc           #27                 // String realm
       3: invokevirtual #28                 // Method getParameter:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #29                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: getfield      #6                  // Field credentialsCharset:Ljava/nio/charset/Charset;
       9: invokevirtual #14                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      12: invokevirtual #30                 // Method java/io/ObjectOutputStream.writeUTF:(Ljava/lang/String;)V
      15: aload_1
      16: aload_0
      17: getfield      #31                 // Field challengeState:Lorg/apache/http/auth/ChallengeState;
      20: invokevirtual #32                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      23: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #34                 // Method java/io/ObjectInputStream.readUTF:()Ljava/lang/String;
       9: invokestatic  #35                 // Method org/apache/http/util/CharsetUtils.get:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      12: putfield      #6                  // Field credentialsCharset:Ljava/nio/charset/Charset;
      15: aload_0
      16: getfield      #6                  // Field credentialsCharset:Ljava/nio/charset/Charset;
      19: ifnonnull     29
      22: aload_0
      23: getstatic     #5                  // Field org/apache/http/Consts.ASCII:Ljava/nio/charset/Charset;
      26: putfield      #6                  // Field credentialsCharset:Ljava/nio/charset/Charset;
      29: aload_0
      30: aload_1
      31: invokevirtual #36                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      34: checkcast     #37                 // class org/apache/http/auth/ChallengeState
      37: putfield      #31                 // Field challengeState:Lorg/apache/http/auth/ChallengeState;
      40: return

  private void readObjectNoData() throws java.io.ObjectStreamException;
    Code:
       0: return
}
