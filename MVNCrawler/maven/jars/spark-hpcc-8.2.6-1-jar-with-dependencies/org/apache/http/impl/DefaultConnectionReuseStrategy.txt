Compiled from "DefaultConnectionReuseStrategy.java"
public class org.apache.http.impl.DefaultConnectionReuseStrategy implements org.apache.http.ConnectionReuseStrategy {
  public static final org.apache.http.impl.DefaultConnectionReuseStrategy INSTANCE;

  public org.apache.http.impl.DefaultConnectionReuseStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean keepAlive(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext);
    Code:
       0: aload_1
       1: ldc           #2                  // String HTTP response
       3: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #4                  // String HTTP context
      10: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_2
      15: ldc           #5                  // String http.request
      17: invokeinterface #6,  2            // InterfaceMethod org/apache/http/protocol/HttpContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      22: checkcast     #7                  // class org/apache/http/HttpRequest
      25: astore_3
      26: aload_3
      27: ifnull        88
      30: new           #8                  // class org/apache/http/message/BasicTokenIterator
      33: dup
      34: aload_3
      35: ldc           #9                  // String Connection
      37: invokeinterface #10,  2           // InterfaceMethod org/apache/http/HttpRequest.headerIterator:(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;
      42: invokespecial #11                 // Method org/apache/http/message/BasicTokenIterator."<init>":(Lorg/apache/http/HeaderIterator;)V
      45: astore        4
      47: aload         4
      49: invokeinterface #12,  1           // InterfaceMethod org/apache/http/TokenIterator.hasNext:()Z
      54: ifeq          81
      57: aload         4
      59: invokeinterface #13,  1           // InterfaceMethod org/apache/http/TokenIterator.nextToken:()Ljava/lang/String;
      64: astore        5
      66: ldc           #14                 // String Close
      68: aload         5
      70: invokevirtual #15                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      73: ifeq          78
      76: iconst_0
      77: ireturn
      78: goto          47
      81: goto          88
      84: astore        4
      86: iconst_0
      87: ireturn
      88: aload_1
      89: invokeinterface #17,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
      94: invokeinterface #18,  1           // InterfaceMethod org/apache/http/StatusLine.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
      99: astore        4
     101: aload_1
     102: ldc           #19                 // String Transfer-Encoding
     104: invokeinterface #20,  2           // InterfaceMethod org/apache/http/HttpResponse.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;
     109: astore        5
     111: aload         5
     113: ifnull        133
     116: ldc           #21                 // String chunked
     118: aload         5
     120: invokeinterface #22,  1           // InterfaceMethod org/apache/http/Header.getValue:()Ljava/lang/String;
     125: invokevirtual #15                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     128: ifne          196
     131: iconst_0
     132: ireturn
     133: aload_0
     134: aload_3
     135: aload_1
     136: invokespecial #23                 // Method canResponseHaveBody:(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpResponse;)Z
     139: ifeq          196
     142: aload_1
     143: ldc           #24                 // String Content-Length
     145: invokeinterface #25,  2           // InterfaceMethod org/apache/http/HttpResponse.getHeaders:(Ljava/lang/String;)[Lorg/apache/http/Header;
     150: astore        6
     152: aload         6
     154: arraylength
     155: iconst_1
     156: if_icmpne     194
     159: aload         6
     161: iconst_0
     162: aaload
     163: astore        7
     165: aload         7
     167: invokeinterface #22,  1           // InterfaceMethod org/apache/http/Header.getValue:()Ljava/lang/String;
     172: invokestatic  #26                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     175: istore        8
     177: iload         8
     179: ifge          184
     182: iconst_0
     183: ireturn
     184: goto          191
     187: astore        8
     189: iconst_0
     190: ireturn
     191: goto          196
     194: iconst_0
     195: ireturn
     196: aload_1
     197: ldc           #9                  // String Connection
     199: invokeinterface #28,  2           // InterfaceMethod org/apache/http/HttpResponse.headerIterator:(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;
     204: astore        6
     206: aload         6
     208: invokeinterface #29,  1           // InterfaceMethod org/apache/http/HeaderIterator.hasNext:()Z
     213: ifne          226
     216: aload_1
     217: ldc           #30                 // String Proxy-Connection
     219: invokeinterface #28,  2           // InterfaceMethod org/apache/http/HttpResponse.headerIterator:(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;
     224: astore        6
     226: aload         6
     228: invokeinterface #29,  1           // InterfaceMethod org/apache/http/HeaderIterator.hasNext:()Z
     233: ifeq          311
     236: new           #8                  // class org/apache/http/message/BasicTokenIterator
     239: dup
     240: aload         6
     242: invokespecial #11                 // Method org/apache/http/message/BasicTokenIterator."<init>":(Lorg/apache/http/HeaderIterator;)V
     245: astore        7
     247: iconst_0
     248: istore        8
     250: aload         7
     252: invokeinterface #12,  1           // InterfaceMethod org/apache/http/TokenIterator.hasNext:()Z
     257: ifeq          297
     260: aload         7
     262: invokeinterface #13,  1           // InterfaceMethod org/apache/http/TokenIterator.nextToken:()Ljava/lang/String;
     267: astore        9
     269: ldc           #14                 // String Close
     271: aload         9
     273: invokevirtual #15                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     276: ifeq          281
     279: iconst_0
     280: ireturn
     281: ldc           #31                 // String Keep-Alive
     283: aload         9
     285: invokevirtual #15                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     288: ifeq          294
     291: iconst_1
     292: istore        8
     294: goto          250
     297: iload         8
     299: ifeq          304
     302: iconst_1
     303: ireturn
     304: goto          311
     307: astore        7
     309: iconst_0
     310: ireturn
     311: aload         4
     313: getstatic     #32                 // Field org/apache/http/HttpVersion.HTTP_1_0:Lorg/apache/http/HttpVersion;
     316: invokevirtual #33                 // Method org/apache/http/ProtocolVersion.lessEquals:(Lorg/apache/http/ProtocolVersion;)Z
     319: ifne          326
     322: iconst_1
     323: goto          327
     326: iconst_0
     327: ireturn
    Exception table:
       from    to  target type
          30    77    84   Class org/apache/http/ParseException
          78    81    84   Class org/apache/http/ParseException
         165   183   187   Class java/lang/NumberFormatException
         236   280   307   Class org/apache/http/ParseException
         281   303   307   Class org/apache/http/ParseException

  protected org.apache.http.TokenIterator createTokenIterator(org.apache.http.HeaderIterator);
    Code:
       0: new           #8                  // class org/apache/http/message/BasicTokenIterator
       3: dup
       4: aload_1
       5: invokespecial #11                 // Method org/apache/http/message/BasicTokenIterator."<init>":(Lorg/apache/http/HeaderIterator;)V
       8: areturn

  private boolean canResponseHaveBody(org.apache.http.HttpRequest, org.apache.http.HttpResponse);
    Code:
       0: aload_1
       1: ifnull        25
       4: aload_1
       5: invokeinterface #34,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
      10: invokeinterface #35,  1           // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
      15: ldc           #36                 // String HEAD
      17: invokevirtual #15                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      20: ifeq          25
      23: iconst_0
      24: ireturn
      25: aload_2
      26: invokeinterface #17,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
      31: invokeinterface #37,  1           // InterfaceMethod org/apache/http/StatusLine.getStatusCode:()I
      36: istore_3
      37: iload_3
      38: sipush        200
      41: if_icmplt     69
      44: iload_3
      45: sipush        204
      48: if_icmpeq     69
      51: iload_3
      52: sipush        304
      55: if_icmpeq     69
      58: iload_3
      59: sipush        205
      62: if_icmpeq     69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn

  static {};
    Code:
       0: new           #38                 // class org/apache/http/impl/DefaultConnectionReuseStrategy
       3: dup
       4: invokespecial #39                 // Method "<init>":()V
       7: putstatic     #40                 // Field INSTANCE:Lorg/apache/http/impl/DefaultConnectionReuseStrategy;
      10: return
}
