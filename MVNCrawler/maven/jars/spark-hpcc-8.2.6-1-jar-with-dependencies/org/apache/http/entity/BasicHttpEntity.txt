Compiled from "BasicHttpEntity.java"
public class org.apache.http.entity.BasicHttpEntity extends org.apache.http.entity.AbstractHttpEntity {
  private java.io.InputStream content;

  private long length;

  public org.apache.http.entity.BasicHttpEntity();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/http/entity/AbstractHttpEntity."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long -1l
       8: putfield      #4                  // Field length:J
      11: return

  public long getContentLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field length:J
       4: lreturn

  public java.io.InputStream getContent() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field content:Ljava/io/InputStream;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #6                  // String Content has not been provided
      14: invokestatic  #7                  // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #5                  // Field content:Ljava/io/InputStream;
      21: areturn

  public boolean isRepeatable();
    Code:
       0: iconst_0
       1: ireturn

  public void setContentLength(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #4                  // Field length:J
       5: return

  public void setContent(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field content:Ljava/io/InputStream;
       5: return

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #8                  // String Output stream
       3: invokestatic  #9                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #10                 // Method getContent:()Ljava/io/InputStream;
      11: astore_2
      12: sipush        4096
      15: newarray       byte
      17: astore        4
      19: aload_2
      20: aload         4
      22: invokevirtual #11                 // Method java/io/InputStream.read:([B)I
      25: dup
      26: istore_3
      27: iconst_m1
      28: if_icmpeq     42
      31: aload_1
      32: aload         4
      34: iconst_0
      35: iload_3
      36: invokevirtual #12                 // Method java/io/OutputStream.write:([BII)V
      39: goto          19
      42: aload_2
      43: invokevirtual #13                 // Method java/io/InputStream.close:()V
      46: goto          58
      49: astore        5
      51: aload_2
      52: invokevirtual #13                 // Method java/io/InputStream.close:()V
      55: aload         5
      57: athrow
      58: return
    Exception table:
       from    to  target type
          12    42    49   any
          49    51    49   any

  public boolean isStreaming();
    Code:
       0: aload_0
       1: getfield      #5                  // Field content:Ljava/io/InputStream;
       4: ifnull        21
       7: aload_0
       8: getfield      #5                  // Field content:Ljava/io/InputStream;
      11: getstatic     #14                 // Field org/apache/http/impl/io/EmptyInputStream.INSTANCE:Lorg/apache/http/impl/io/EmptyInputStream;
      14: if_acmpeq     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn
}
