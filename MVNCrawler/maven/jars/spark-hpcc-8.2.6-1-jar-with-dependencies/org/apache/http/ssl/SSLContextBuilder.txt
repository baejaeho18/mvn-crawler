Compiled from "SSLContextBuilder.java"
public class org.apache.http.ssl.SSLContextBuilder {
  static final java.lang.String TLS;

  private java.lang.String protocol;

  private final java.util.Set<javax.net.ssl.KeyManager> keymanagers;

  private final java.util.Set<javax.net.ssl.TrustManager> trustmanagers;

  private java.security.SecureRandom secureRandom;

  public static org.apache.http.ssl.SSLContextBuilder create();
    Code:
       0: new           #1                  // class org/apache/http/ssl/SSLContextBuilder
       3: dup
       4: invokespecial #2                  // Method "<init>":()V
       7: areturn

  public org.apache.http.ssl.SSLContextBuilder();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/LinkedHashSet
       8: dup
       9: invokespecial #5                  // Method java/util/LinkedHashSet."<init>":()V
      12: putfield      #6                  // Field keymanagers:Ljava/util/Set;
      15: aload_0
      16: new           #4                  // class java/util/LinkedHashSet
      19: dup
      20: invokespecial #5                  // Method java/util/LinkedHashSet."<init>":()V
      23: putfield      #7                  // Field trustmanagers:Ljava/util/Set;
      26: return

  public org.apache.http.ssl.SSLContextBuilder useProtocol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field protocol:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.http.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field secureRandom:Ljava/security/SecureRandom;
       5: aload_0
       6: areturn

  public org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore, org.apache.http.ssl.TrustStrategy) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException;
    Code:
       0: invokestatic  #10                 // Method javax/net/ssl/TrustManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
       3: invokestatic  #11                 // Method javax/net/ssl/TrustManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;
       6: astore_3
       7: aload_3
       8: aload_1
       9: invokevirtual #12                 // Method javax/net/ssl/TrustManagerFactory.init:(Ljava/security/KeyStore;)V
      12: aload_3
      13: invokevirtual #13                 // Method javax/net/ssl/TrustManagerFactory.getTrustManagers:()[Ljavax/net/ssl/TrustManager;
      16: astore        4
      18: aload         4
      20: ifnull        121
      23: aload_2
      24: ifnull        77
      27: iconst_0
      28: istore        5
      30: iload         5
      32: aload         4
      34: arraylength
      35: if_icmpge     77
      38: aload         4
      40: iload         5
      42: aaload
      43: astore        6
      45: aload         6
      47: instanceof    #14                 // class javax/net/ssl/X509TrustManager
      50: ifeq          71
      53: aload         4
      55: iload         5
      57: new           #15                 // class org/apache/http/ssl/SSLContextBuilder$TrustManagerDelegate
      60: dup
      61: aload         6
      63: checkcast     #14                 // class javax/net/ssl/X509TrustManager
      66: aload_2
      67: invokespecial #16                 // Method org/apache/http/ssl/SSLContextBuilder$TrustManagerDelegate."<init>":(Ljavax/net/ssl/X509TrustManager;Lorg/apache/http/ssl/TrustStrategy;)V
      70: aastore
      71: iinc          5, 1
      74: goto          30
      77: aload         4
      79: astore        5
      81: aload         5
      83: arraylength
      84: istore        6
      86: iconst_0
      87: istore        7
      89: iload         7
      91: iload         6
      93: if_icmpge     121
      96: aload         5
      98: iload         7
     100: aaload
     101: astore        8
     103: aload_0
     104: getfield      #7                  // Field trustmanagers:Ljava/util/Set;
     107: aload         8
     109: invokeinterface #17,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     114: pop
     115: iinc          7, 1
     118: goto          89
     121: aload_0
     122: areturn

  public org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(org.apache.http.ssl.TrustStrategy) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #18                 // Method loadTrustMaterial:(Ljava/security/KeyStore;Lorg/apache/http/ssl/TrustStrategy;)Lorg/apache/http/ssl/SSLContextBuilder;
       6: areturn

  public org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.io.File, char[], org.apache.http.ssl.TrustStrategy) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.cert.CertificateException, java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #19                 // String Truststore file
       3: invokestatic  #20                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: invokestatic  #21                 // Method java/security/KeyStore.getDefaultType:()Ljava/lang/String;
      10: invokestatic  #22                 // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
      13: astore        4
      15: new           #23                 // class java/io/FileInputStream
      18: dup
      19: aload_1
      20: invokespecial #24                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      23: astore        5
      25: aload         4
      27: aload         5
      29: aload_2
      30: invokevirtual #25                 // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      33: aload         5
      35: invokevirtual #26                 // Method java/io/FileInputStream.close:()V
      38: goto          51
      41: astore        6
      43: aload         5
      45: invokevirtual #26                 // Method java/io/FileInputStream.close:()V
      48: aload         6
      50: athrow
      51: aload_0
      52: aload         4
      54: aload_3
      55: invokevirtual #18                 // Method loadTrustMaterial:(Ljava/security/KeyStore;Lorg/apache/http/ssl/TrustStrategy;)Lorg/apache/http/ssl/SSLContextBuilder;
      58: areturn
    Exception table:
       from    to  target type
          25    33    41   any
          41    43    41   any

  public org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.io.File, char[]) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.cert.CertificateException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #27                 // Method loadTrustMaterial:(Ljava/io/File;[CLorg/apache/http/ssl/TrustStrategy;)Lorg/apache/http/ssl/SSLContextBuilder;
       7: areturn

  public org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.io.File) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.cert.CertificateException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #28                 // Method loadTrustMaterial:(Ljava/io/File;[C)Lorg/apache/http/ssl/SSLContextBuilder;
       6: areturn

  public org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.net.URL, char[], org.apache.http.ssl.TrustStrategy) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.cert.CertificateException, java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #29                 // String Truststore URL
       3: invokestatic  #20                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: invokestatic  #21                 // Method java/security/KeyStore.getDefaultType:()Ljava/lang/String;
      10: invokestatic  #22                 // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
      13: astore        4
      15: aload_1
      16: invokevirtual #30                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      19: astore        5
      21: aload         4
      23: aload         5
      25: aload_2
      26: invokevirtual #25                 // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      29: aload         5
      31: invokevirtual #31                 // Method java/io/InputStream.close:()V
      34: goto          47
      37: astore        6
      39: aload         5
      41: invokevirtual #31                 // Method java/io/InputStream.close:()V
      44: aload         6
      46: athrow
      47: aload_0
      48: aload         4
      50: aload_3
      51: invokevirtual #18                 // Method loadTrustMaterial:(Ljava/security/KeyStore;Lorg/apache/http/ssl/TrustStrategy;)Lorg/apache/http/ssl/SSLContextBuilder;
      54: areturn
    Exception table:
       from    to  target type
          21    29    37   any
          37    39    37   any

  public org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.net.URL, char[]) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.cert.CertificateException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #32                 // Method loadTrustMaterial:(Ljava/net/URL;[CLorg/apache/http/ssl/TrustStrategy;)Lorg/apache/http/ssl/SSLContextBuilder;
       7: areturn

  public org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore, char[], org.apache.http.ssl.PrivateKeyStrategy) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.UnrecoverableKeyException;
    Code:
       0: invokestatic  #33                 // Method javax/net/ssl/KeyManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
       3: invokestatic  #34                 // Method javax/net/ssl/KeyManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/KeyManagerFactory;
       6: astore        4
       8: aload         4
      10: aload_1
      11: aload_2
      12: invokevirtual #35                 // Method javax/net/ssl/KeyManagerFactory.init:(Ljava/security/KeyStore;[C)V
      15: aload         4
      17: invokevirtual #36                 // Method javax/net/ssl/KeyManagerFactory.getKeyManagers:()[Ljavax/net/ssl/KeyManager;
      20: astore        5
      22: aload         5
      24: ifnull        125
      27: aload_3
      28: ifnull        81
      31: iconst_0
      32: istore        6
      34: iload         6
      36: aload         5
      38: arraylength
      39: if_icmpge     81
      42: aload         5
      44: iload         6
      46: aaload
      47: astore        7
      49: aload         7
      51: instanceof    #37                 // class javax/net/ssl/X509ExtendedKeyManager
      54: ifeq          75
      57: aload         5
      59: iload         6
      61: new           #38                 // class org/apache/http/ssl/SSLContextBuilder$KeyManagerDelegate
      64: dup
      65: aload         7
      67: checkcast     #37                 // class javax/net/ssl/X509ExtendedKeyManager
      70: aload_3
      71: invokespecial #39                 // Method org/apache/http/ssl/SSLContextBuilder$KeyManagerDelegate."<init>":(Ljavax/net/ssl/X509ExtendedKeyManager;Lorg/apache/http/ssl/PrivateKeyStrategy;)V
      74: aastore
      75: iinc          6, 1
      78: goto          34
      81: aload         5
      83: astore        6
      85: aload         6
      87: arraylength
      88: istore        7
      90: iconst_0
      91: istore        8
      93: iload         8
      95: iload         7
      97: if_icmpge     125
     100: aload         6
     102: iload         8
     104: aaload
     105: astore        9
     107: aload_0
     108: getfield      #6                  // Field keymanagers:Ljava/util/Set;
     111: aload         9
     113: invokeinterface #17,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     118: pop
     119: iinc          8, 1
     122: goto          93
     125: aload_0
     126: areturn

  public org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore, char[]) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.UnrecoverableKeyException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #40                 // Method loadKeyMaterial:(Ljava/security/KeyStore;[CLorg/apache/http/ssl/PrivateKeyStrategy;)Lorg/apache/http/ssl/SSLContextBuilder;
       7: areturn

  public org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.io.File, char[], char[], org.apache.http.ssl.PrivateKeyStrategy) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.UnrecoverableKeyException, java.security.cert.CertificateException, java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #41                 // String Keystore file
       3: invokestatic  #20                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: invokestatic  #21                 // Method java/security/KeyStore.getDefaultType:()Ljava/lang/String;
      10: invokestatic  #22                 // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
      13: astore        5
      15: new           #23                 // class java/io/FileInputStream
      18: dup
      19: aload_1
      20: invokespecial #24                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      23: astore        6
      25: aload         5
      27: aload         6
      29: aload_2
      30: invokevirtual #25                 // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      33: aload         6
      35: invokevirtual #26                 // Method java/io/FileInputStream.close:()V
      38: goto          51
      41: astore        7
      43: aload         6
      45: invokevirtual #26                 // Method java/io/FileInputStream.close:()V
      48: aload         7
      50: athrow
      51: aload_0
      52: aload         5
      54: aload_3
      55: aload         4
      57: invokevirtual #40                 // Method loadKeyMaterial:(Ljava/security/KeyStore;[CLorg/apache/http/ssl/PrivateKeyStrategy;)Lorg/apache/http/ssl/SSLContextBuilder;
      60: areturn
    Exception table:
       from    to  target type
          25    33    41   any
          41    43    41   any

  public org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.io.File, char[], char[]) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.UnrecoverableKeyException, java.security.cert.CertificateException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokevirtual #42                 // Method loadKeyMaterial:(Ljava/io/File;[C[CLorg/apache/http/ssl/PrivateKeyStrategy;)Lorg/apache/http/ssl/SSLContextBuilder;
       8: areturn

  public org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.net.URL, char[], char[], org.apache.http.ssl.PrivateKeyStrategy) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.UnrecoverableKeyException, java.security.cert.CertificateException, java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #43                 // String Keystore URL
       3: invokestatic  #20                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: invokestatic  #21                 // Method java/security/KeyStore.getDefaultType:()Ljava/lang/String;
      10: invokestatic  #22                 // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
      13: astore        5
      15: aload_1
      16: invokevirtual #30                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      19: astore        6
      21: aload         5
      23: aload         6
      25: aload_2
      26: invokevirtual #25                 // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      29: aload         6
      31: invokevirtual #31                 // Method java/io/InputStream.close:()V
      34: goto          47
      37: astore        7
      39: aload         6
      41: invokevirtual #31                 // Method java/io/InputStream.close:()V
      44: aload         7
      46: athrow
      47: aload_0
      48: aload         5
      50: aload_3
      51: aload         4
      53: invokevirtual #40                 // Method loadKeyMaterial:(Ljava/security/KeyStore;[CLorg/apache/http/ssl/PrivateKeyStrategy;)Lorg/apache/http/ssl/SSLContextBuilder;
      56: areturn
    Exception table:
       from    to  target type
          21    29    37   any
          37    39    37   any

  public org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.net.URL, char[], char[]) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.UnrecoverableKeyException, java.security.cert.CertificateException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokevirtual #44                 // Method loadKeyMaterial:(Ljava/net/URL;[C[CLorg/apache/http/ssl/PrivateKeyStrategy;)Lorg/apache/http/ssl/SSLContextBuilder;
       8: areturn

  protected void initSSLContext(javax.net.ssl.SSLContext, java.util.Collection<javax.net.ssl.KeyManager>, java.util.Collection<javax.net.ssl.TrustManager>, java.security.SecureRandom) throws java.security.KeyManagementException;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
       7: ifne          31
      10: aload_2
      11: aload_2
      12: invokeinterface #46,  1           // InterfaceMethod java/util/Collection.size:()I
      17: anewarray     #47                 // class javax/net/ssl/KeyManager
      20: invokeinterface #48,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      25: checkcast     #49                 // class "[Ljavax/net/ssl/KeyManager;"
      28: goto          32
      31: aconst_null
      32: aload_3
      33: invokeinterface #45,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      38: ifne          62
      41: aload_3
      42: aload_3
      43: invokeinterface #46,  1           // InterfaceMethod java/util/Collection.size:()I
      48: anewarray     #50                 // class javax/net/ssl/TrustManager
      51: invokeinterface #48,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      56: checkcast     #51                 // class "[Ljavax/net/ssl/TrustManager;"
      59: goto          63
      62: aconst_null
      63: aload         4
      65: invokevirtual #52                 // Method javax/net/ssl/SSLContext.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V
      68: return

  public javax.net.ssl.SSLContext build() throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field protocol:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #8                  // Field protocol:Ljava/lang/String;
      11: goto          16
      14: ldc           #53                 // String TLS
      16: invokestatic  #54                 // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
      19: astore_1
      20: aload_0
      21: aload_1
      22: aload_0
      23: getfield      #6                  // Field keymanagers:Ljava/util/Set;
      26: aload_0
      27: getfield      #7                  // Field trustmanagers:Ljava/util/Set;
      30: aload_0
      31: getfield      #9                  // Field secureRandom:Ljava/security/SecureRandom;
      34: invokevirtual #55                 // Method initSSLContext:(Ljavax/net/ssl/SSLContext;Ljava/util/Collection;Ljava/util/Collection;Ljava/security/SecureRandom;)V
      37: aload_1
      38: areturn
}
