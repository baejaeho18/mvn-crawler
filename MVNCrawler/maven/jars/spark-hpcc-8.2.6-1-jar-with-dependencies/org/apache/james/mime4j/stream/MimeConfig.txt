Compiled from "MimeConfig.java"
public final class org.apache.james.mime4j.stream.MimeConfig implements java.lang.Cloneable {
  private boolean strictParsing;

  private int maxLineLen;

  private int maxHeaderCount;

  private int maxHeaderLen;

  private long maxContentLen;

  private boolean countLineNumbers;

  private java.lang.String headlessParsing;

  private boolean malformedHeaderStartsBody;

  public org.apache.james.mime4j.stream.MimeConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field strictParsing:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field countLineNumbers:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field malformedHeaderStartsBody:Z
      19: aload_0
      20: sipush        1000
      23: putfield      #5                  // Field maxLineLen:I
      26: aload_0
      27: sipush        1000
      30: putfield      #6                  // Field maxHeaderCount:I
      33: aload_0
      34: sipush        10000
      37: putfield      #7                  // Field maxHeaderLen:I
      40: aload_0
      41: ldc2_w        #8                  // long -1l
      44: putfield      #10                 // Field maxContentLen:J
      47: aload_0
      48: aconst_null
      49: putfield      #11                 // Field headlessParsing:Ljava/lang/String;
      52: return

  public boolean isMalformedHeaderStartsBody();
    Code:
       0: aload_0
       1: getfield      #4                  // Field malformedHeaderStartsBody:Z
       4: ireturn

  public void setMalformedHeaderStartsBody(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field malformedHeaderStartsBody:Z
       5: return

  public boolean isStrictParsing();
    Code:
       0: aload_0
       1: getfield      #2                  // Field strictParsing:Z
       4: ireturn

  public void setStrictParsing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field strictParsing:Z
       5: return

  public int getMaxLineLen();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxLineLen:I
       4: ireturn

  public void setMaxLineLen(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field maxLineLen:I
       5: return

  public int getMaxHeaderCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxHeaderCount:I
       4: ireturn

  public void setMaxHeaderCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field maxHeaderCount:I
       5: return

  public int getMaxHeaderLen();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxHeaderLen:I
       4: ireturn

  public void setMaxHeaderLen(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field maxHeaderLen:I
       5: return

  public long getMaxContentLen();
    Code:
       0: aload_0
       1: getfield      #10                 // Field maxContentLen:J
       4: lreturn

  public void setMaxContentLen(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field maxContentLen:J
       5: return

  public boolean isCountLineNumbers();
    Code:
       0: aload_0
       1: getfield      #3                  // Field countLineNumbers:Z
       4: ireturn

  public void setCountLineNumbers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field countLineNumbers:Z
       5: return

  public java.lang.String getHeadlessParsing();
    Code:
       0: aload_0
       1: getfield      #11                 // Field headlessParsing:Ljava/lang/String;
       4: areturn

  public void setHeadlessParsing(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field headlessParsing:Ljava/lang/String;
       5: return

  public org.apache.james.mime4j.stream.MimeConfig clone();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #13                 // class org/apache/james/mime4j/stream/MimeConfig
       7: areturn
       8: astore_1
       9: new           #15                 // class java/lang/InternalError
      12: dup
      13: invokespecial #16                 // Method java/lang/InternalError."<init>":()V
      16: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.String toString();
    Code:
       0: new           #17                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #19                 // String [strict parsing:
       9: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field strictParsing:Z
      16: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      19: ldc           #22                 // String , max line length:
      21: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #5                  // Field maxLineLen:I
      28: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #24                 // String , max header count:
      33: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #6                  // Field maxHeaderCount:I
      40: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #25                 // String , max content length:
      45: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #10                 // Field maxContentLen:J
      52: invokevirtual #26                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      55: ldc           #27                 // String , count line numbers:
      57: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #3                  // Field countLineNumbers:Z
      64: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      67: ldc           #28                 // String ]
      69: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method clone:()Lorg/apache/james/mime4j/stream/MimeConfig;
       4: areturn
}
