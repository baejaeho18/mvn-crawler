Compiled from "QuotedPrintableOutputStream.java"
public class org.apache.james.mime4j.codec.QuotedPrintableOutputStream extends java.io.FilterOutputStream {
  private static final int DEFAULT_BUFFER_SIZE;

  private static final byte TB;

  private static final byte SP;

  private static final byte EQ;

  private static final byte DOT;

  private static final byte CR;

  private static final byte LF;

  private static final byte QUOTED_PRINTABLE_LAST_PLAIN;

  private static final int QUOTED_PRINTABLE_MAX_LINE_LENGTH;

  private static final int QUOTED_PRINTABLE_OCTETS_PER_ESCAPE;

  private static final byte[] HEX_DIGITS;

  private final byte[] outBuffer;

  private final boolean binary;

  private boolean pendingSpace;

  private boolean pendingTab;

  private boolean pendingCR;

  private int nextSoftBreak;

  private int outputIndex;

  private boolean closed;

  private byte[] singleByte;

  public org.apache.james.mime4j.codec.QuotedPrintableOutputStream(int, java.io.OutputStream, boolean);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field closed:Z
      10: aload_0
      11: iconst_1
      12: newarray       byte
      14: putfield      #3                  // Field singleByte:[B
      17: aload_0
      18: iload_1
      19: newarray       byte
      21: putfield      #4                  // Field outBuffer:[B
      24: aload_0
      25: iload_3
      26: putfield      #5                  // Field binary:Z
      29: aload_0
      30: iconst_0
      31: putfield      #6                  // Field pendingSpace:Z
      34: aload_0
      35: iconst_0
      36: putfield      #7                  // Field pendingTab:Z
      39: aload_0
      40: iconst_0
      41: putfield      #8                  // Field pendingCR:Z
      44: aload_0
      45: iconst_0
      46: putfield      #9                  // Field outputIndex:I
      49: aload_0
      50: bipush        77
      52: putfield      #10                 // Field nextSoftBreak:I
      55: return

  public org.apache.james.mime4j.codec.QuotedPrintableOutputStream(java.io.OutputStream, boolean);
    Code:
       0: aload_0
       1: sipush        3072
       4: aload_1
       5: iload_2
       6: invokespecial #11                 // Method "<init>":(ILjava/io/OutputStream;Z)V
       9: return

  private void encodeChunk(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: istore        4
       3: iload         4
       5: iload_3
       6: iload_2
       7: iadd
       8: if_icmpge     25
      11: aload_0
      12: aload_1
      13: iload         4
      15: baload
      16: invokespecial #12                 // Method encode:(B)V
      19: iinc          4, 1
      22: goto          3
      25: return

  private void completeEncoding() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method writePending:()V
       4: aload_0
       5: invokevirtual #14                 // Method flushOutput:()V
       8: return

  private void writePending() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field pendingSpace:Z
       4: ifeq          16
       7: aload_0
       8: bipush        32
      10: invokespecial #15                 // Method plain:(B)V
      13: goto          45
      16: aload_0
      17: getfield      #7                  // Field pendingTab:Z
      20: ifeq          32
      23: aload_0
      24: bipush        9
      26: invokespecial #15                 // Method plain:(B)V
      29: goto          45
      32: aload_0
      33: getfield      #8                  // Field pendingCR:Z
      36: ifeq          45
      39: aload_0
      40: bipush        13
      42: invokespecial #15                 // Method plain:(B)V
      45: aload_0
      46: invokespecial #16                 // Method clearPending:()V
      49: return

  private void clearPending() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #6                  // Field pendingSpace:Z
       5: aload_0
       6: iconst_0
       7: putfield      #7                  // Field pendingTab:Z
      10: aload_0
      11: iconst_0
      12: putfield      #8                  // Field pendingCR:Z
      15: return

  private void encode(byte) throws java.io.IOException;
    Code:
       0: iload_1
       1: bipush        10
       3: if_icmpne     84
       6: aload_0
       7: getfield      #5                  // Field binary:Z
      10: ifeq          25
      13: aload_0
      14: invokespecial #13                 // Method writePending:()V
      17: aload_0
      18: iload_1
      19: invokespecial #17                 // Method escape:(B)V
      22: goto          228
      25: aload_0
      26: getfield      #8                  // Field pendingCR:Z
      29: ifeq          72
      32: aload_0
      33: getfield      #6                  // Field pendingSpace:Z
      36: ifeq          48
      39: aload_0
      40: bipush        32
      42: invokespecial #17                 // Method escape:(B)V
      45: goto          61
      48: aload_0
      49: getfield      #7                  // Field pendingTab:Z
      52: ifeq          61
      55: aload_0
      56: bipush        9
      58: invokespecial #17                 // Method escape:(B)V
      61: aload_0
      62: invokespecial #18                 // Method lineBreak:()V
      65: aload_0
      66: invokespecial #16                 // Method clearPending:()V
      69: goto          228
      72: aload_0
      73: invokespecial #13                 // Method writePending:()V
      76: aload_0
      77: iload_1
      78: invokespecial #15                 // Method plain:(B)V
      81: goto          228
      84: iload_1
      85: bipush        13
      87: if_icmpne     113
      90: aload_0
      91: getfield      #5                  // Field binary:Z
      94: ifeq          105
      97: aload_0
      98: iload_1
      99: invokespecial #17                 // Method escape:(B)V
     102: goto          228
     105: aload_0
     106: iconst_1
     107: putfield      #8                  // Field pendingCR:Z
     110: goto          228
     113: aload_0
     114: invokespecial #13                 // Method writePending:()V
     117: iload_1
     118: bipush        32
     120: if_icmpne     146
     123: aload_0
     124: getfield      #5                  // Field binary:Z
     127: ifeq          138
     130: aload_0
     131: iload_1
     132: invokespecial #17                 // Method escape:(B)V
     135: goto          228
     138: aload_0
     139: iconst_1
     140: putfield      #6                  // Field pendingSpace:Z
     143: goto          228
     146: iload_1
     147: bipush        9
     149: if_icmpne     175
     152: aload_0
     153: getfield      #5                  // Field binary:Z
     156: ifeq          167
     159: aload_0
     160: iload_1
     161: invokespecial #17                 // Method escape:(B)V
     164: goto          228
     167: aload_0
     168: iconst_1
     169: putfield      #7                  // Field pendingTab:Z
     172: goto          228
     175: iload_1
     176: bipush        32
     178: if_icmpge     189
     181: aload_0
     182: iload_1
     183: invokespecial #17                 // Method escape:(B)V
     186: goto          228
     189: iload_1
     190: bipush        126
     192: if_icmple     203
     195: aload_0
     196: iload_1
     197: invokespecial #17                 // Method escape:(B)V
     200: goto          228
     203: iload_1
     204: bipush        61
     206: if_icmpeq     215
     209: iload_1
     210: bipush        46
     212: if_icmpne     223
     215: aload_0
     216: iload_1
     217: invokespecial #17                 // Method escape:(B)V
     220: goto          228
     223: aload_0
     224: iload_1
     225: invokespecial #15                 // Method plain:(B)V
     228: return

  private void plain(byte) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #10                 // Field nextSoftBreak:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #10                 // Field nextSoftBreak:I
      11: iconst_1
      12: if_icmpgt     19
      15: aload_0
      16: invokespecial #19                 // Method softBreak:()V
      19: aload_0
      20: iload_1
      21: invokespecial #20                 // Method write:(B)V
      24: return

  private void escape(byte) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #10                 // Field nextSoftBreak:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #10                 // Field nextSoftBreak:I
      11: iconst_3
      12: if_icmpgt     19
      15: aload_0
      16: invokespecial #19                 // Method softBreak:()V
      19: iload_1
      20: sipush        255
      23: iand
      24: istore_2
      25: aload_0
      26: bipush        61
      28: invokespecial #20                 // Method write:(B)V
      31: aload_0
      32: dup
      33: getfield      #10                 // Field nextSoftBreak:I
      36: iconst_1
      37: isub
      38: putfield      #10                 // Field nextSoftBreak:I
      41: aload_0
      42: getstatic     #21                 // Field HEX_DIGITS:[B
      45: iload_2
      46: iconst_4
      47: ishr
      48: baload
      49: invokespecial #20                 // Method write:(B)V
      52: aload_0
      53: dup
      54: getfield      #10                 // Field nextSoftBreak:I
      57: iconst_1
      58: isub
      59: putfield      #10                 // Field nextSoftBreak:I
      62: aload_0
      63: getstatic     #21                 // Field HEX_DIGITS:[B
      66: iload_2
      67: bipush        16
      69: irem
      70: baload
      71: invokespecial #20                 // Method write:(B)V
      74: return

  private void write(byte) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field outBuffer:[B
       4: aload_0
       5: dup
       6: getfield      #9                  // Field outputIndex:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #9                  // Field outputIndex:I
      15: iload_1
      16: bastore
      17: aload_0
      18: getfield      #9                  // Field outputIndex:I
      21: aload_0
      22: getfield      #4                  // Field outBuffer:[B
      25: arraylength
      26: if_icmplt     33
      29: aload_0
      30: invokevirtual #14                 // Method flushOutput:()V
      33: return

  private void softBreak() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        61
       3: invokespecial #20                 // Method write:(B)V
       6: aload_0
       7: invokespecial #18                 // Method lineBreak:()V
      10: return

  private void lineBreak() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        13
       3: invokespecial #20                 // Method write:(B)V
       6: aload_0
       7: bipush        10
       9: invokespecial #20                 // Method write:(B)V
      12: aload_0
      13: bipush        76
      15: putfield      #10                 // Field nextSoftBreak:I
      18: return

  void flushOutput() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field outputIndex:I
       4: aload_0
       5: getfield      #4                  // Field outBuffer:[B
       8: arraylength
       9: if_icmpge     31
      12: aload_0
      13: getfield      #22                 // Field out:Ljava/io/OutputStream;
      16: aload_0
      17: getfield      #4                  // Field outBuffer:[B
      20: iconst_0
      21: aload_0
      22: getfield      #9                  // Field outputIndex:I
      25: invokevirtual #23                 // Method java/io/OutputStream.write:([BII)V
      28: goto          42
      31: aload_0
      32: getfield      #22                 // Field out:Ljava/io/OutputStream;
      35: aload_0
      36: getfield      #4                  // Field outBuffer:[B
      39: invokevirtual #24                 // Method java/io/OutputStream.write:([B)V
      42: aload_0
      43: iconst_0
      44: putfield      #9                  // Field outputIndex:I
      47: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #25                 // Method completeEncoding:()V
      12: aload_0
      13: iconst_1
      14: putfield      #2                  // Field closed:Z
      17: goto          28
      20: astore_1
      21: aload_0
      22: iconst_1
      23: putfield      #2                  // Field closed:Z
      26: aload_1
      27: athrow
      28: return
    Exception table:
       from    to  target type
           8    12    20   any
          20    21    20   any

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method flushOutput:()V
       4: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field singleByte:[B
       4: iconst_0
       5: iload_1
       6: i2b
       7: bastore
       8: aload_0
       9: aload_0
      10: getfield      #3                  // Field singleByte:[B
      13: iconst_0
      14: iconst_1
      15: invokevirtual #26                 // Method write:([BII)V
      18: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field closed:Z
       4: ifeq          17
       7: new           #27                 // class java/io/IOException
      10: dup
      11: ldc           #28                 // String Stream has been closed
      13: invokespecial #29                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: iload_2
      20: iload_3
      21: invokespecial #30                 // Method encodeChunk:([BII)V
      24: return

  static {};
    Code:
       0: bipush        16
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        48
       8: bastore
       9: dup
      10: iconst_1
      11: bipush        49
      13: bastore
      14: dup
      15: iconst_2
      16: bipush        50
      18: bastore
      19: dup
      20: iconst_3
      21: bipush        51
      23: bastore
      24: dup
      25: iconst_4
      26: bipush        52
      28: bastore
      29: dup
      30: iconst_5
      31: bipush        53
      33: bastore
      34: dup
      35: bipush        6
      37: bipush        54
      39: bastore
      40: dup
      41: bipush        7
      43: bipush        55
      45: bastore
      46: dup
      47: bipush        8
      49: bipush        56
      51: bastore
      52: dup
      53: bipush        9
      55: bipush        57
      57: bastore
      58: dup
      59: bipush        10
      61: bipush        65
      63: bastore
      64: dup
      65: bipush        11
      67: bipush        66
      69: bastore
      70: dup
      71: bipush        12
      73: bipush        67
      75: bastore
      76: dup
      77: bipush        13
      79: bipush        68
      81: bastore
      82: dup
      83: bipush        14
      85: bipush        69
      87: bastore
      88: dup
      89: bipush        15
      91: bipush        70
      93: bastore
      94: putstatic     #21                 // Field HEX_DIGITS:[B
      97: return
}
