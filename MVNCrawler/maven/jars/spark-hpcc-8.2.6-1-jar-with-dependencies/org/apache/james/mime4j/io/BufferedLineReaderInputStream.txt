Compiled from "BufferedLineReaderInputStream.java"
public class org.apache.james.mime4j.io.BufferedLineReaderInputStream extends org.apache.james.mime4j.io.LineReaderInputStream {
  private boolean truncated;

  boolean tempBuffer;

  private byte[] origBuffer;

  private int origBufpos;

  private int origBuflen;

  private byte[] buffer;

  private int bufpos;

  private int buflen;

  private final int maxLineLen;

  public org.apache.james.mime4j.io.BufferedLineReaderInputStream(java.io.InputStream, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/james/mime4j/io/LineReaderInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field tempBuffer:Z
      10: aload_1
      11: ifnonnull     24
      14: new           #3                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #4                  // String Input stream may not be null
      20: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: iload_2
      25: ifgt          38
      28: new           #3                  // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #6                  // String Buffer size may not be negative or zero
      34: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iload_2
      40: newarray       byte
      42: putfield      #7                  // Field buffer:[B
      45: aload_0
      46: iconst_0
      47: putfield      #8                  // Field bufpos:I
      50: aload_0
      51: iconst_0
      52: putfield      #9                  // Field buflen:I
      55: aload_0
      56: iload_3
      57: putfield      #10                 // Field maxLineLen:I
      60: aload_0
      61: iconst_0
      62: putfield      #11                 // Field truncated:Z
      65: return

  public org.apache.james.mime4j.io.BufferedLineReaderInputStream(java.io.InputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_m1
       4: invokespecial #12                 // Method "<init>":(Ljava/io/InputStream;II)V
       7: return

  private void expand(int);
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_0
       5: invokespecial #13                 // Method bufferLen:()I
       8: istore_3
       9: iload_3
      10: ifle          30
      13: aload_0
      14: getfield      #7                  // Field buffer:[B
      17: aload_0
      18: getfield      #8                  // Field bufpos:I
      21: aload_2
      22: aload_0
      23: getfield      #8                  // Field bufpos:I
      26: iload_3
      27: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      30: aload_0
      31: aload_2
      32: putfield      #7                  // Field buffer:[B
      35: return

  public void ensureCapacity(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #7                  // Field buffer:[B
       5: arraylength
       6: if_icmple     14
       9: aload_0
      10: iload_1
      11: invokespecial #15                 // Method expand:(I)V
      14: return

  public int fillBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field tempBuffer:Z
       4: ifeq          62
       7: aload_0
       8: getfield      #8                  // Field bufpos:I
      11: aload_0
      12: getfield      #9                  // Field buflen:I
      15: if_icmpeq     28
      18: new           #16                 // class java/lang/IllegalStateException
      21: dup
      22: ldc           #17                 // String unread only works when a buffer is fully read before the next refill is asked!
      24: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_0
      30: getfield      #19                 // Field origBuffer:[B
      33: putfield      #7                  // Field buffer:[B
      36: aload_0
      37: aload_0
      38: getfield      #20                 // Field origBuflen:I
      41: putfield      #9                  // Field buflen:I
      44: aload_0
      45: aload_0
      46: getfield      #21                 // Field origBufpos:I
      49: putfield      #8                  // Field bufpos:I
      52: aload_0
      53: iconst_0
      54: putfield      #2                  // Field tempBuffer:Z
      57: aload_0
      58: invokespecial #13                 // Method bufferLen:()I
      61: ireturn
      62: aload_0
      63: getfield      #8                  // Field bufpos:I
      66: ifle          105
      69: aload_0
      70: invokespecial #13                 // Method bufferLen:()I
      73: istore_1
      74: iload_1
      75: ifle          95
      78: aload_0
      79: getfield      #7                  // Field buffer:[B
      82: aload_0
      83: getfield      #8                  // Field bufpos:I
      86: aload_0
      87: getfield      #7                  // Field buffer:[B
      90: iconst_0
      91: iload_1
      92: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      95: aload_0
      96: iconst_0
      97: putfield      #8                  // Field bufpos:I
     100: aload_0
     101: iload_1
     102: putfield      #9                  // Field buflen:I
     105: aload_0
     106: getfield      #9                  // Field buflen:I
     109: istore_2
     110: aload_0
     111: getfield      #7                  // Field buffer:[B
     114: arraylength
     115: iload_2
     116: isub
     117: istore_3
     118: aload_0
     119: getfield      #22                 // Field in:Ljava/io/InputStream;
     122: aload_0
     123: getfield      #7                  // Field buffer:[B
     126: iload_2
     127: iload_3
     128: invokevirtual #23                 // Method java/io/InputStream.read:([BII)I
     131: istore_1
     132: iload_1
     133: iconst_m1
     134: if_icmpne     139
     137: iconst_m1
     138: ireturn
     139: aload_0
     140: iload_2
     141: iload_1
     142: iadd
     143: putfield      #9                  // Field buflen:I
     146: iload_1
     147: ireturn

  private int bufferLen();
    Code:
       0: aload_0
       1: getfield      #9                  // Field buflen:I
       4: aload_0
       5: getfield      #8                  // Field bufpos:I
       8: isub
       9: ireturn

  public boolean hasBufferedData();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method bufferLen:()I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void truncate();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method clear:()V
       4: aload_0
       5: iconst_1
       6: putfield      #11                 // Field truncated:Z
       9: return

  protected boolean readAllowed();
    Code:
       0: aload_0
       1: getfield      #11                 // Field truncated:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method readAllowed:()Z
       4: ifne          9
       7: iconst_m1
       8: ireturn
       9: iconst_0
      10: istore_1
      11: aload_0
      12: invokevirtual #26                 // Method hasBufferedData:()Z
      15: ifne          30
      18: aload_0
      19: invokevirtual #27                 // Method fillBuffer:()I
      22: istore_1
      23: iload_1
      24: iconst_m1
      25: if_icmpne     11
      28: iconst_m1
      29: ireturn
      30: aload_0
      31: getfield      #7                  // Field buffer:[B
      34: aload_0
      35: dup
      36: getfield      #8                  // Field bufpos:I
      39: dup_x1
      40: iconst_1
      41: iadd
      42: putfield      #8                  // Field bufpos:I
      45: baload
      46: sipush        255
      49: iand
      50: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method readAllowed:()Z
       4: ifne          9
       7: iconst_m1
       8: ireturn
       9: aload_1
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: iconst_0
      16: istore        4
      18: aload_0
      19: invokevirtual #26                 // Method hasBufferedData:()Z
      22: ifne          39
      25: aload_0
      26: invokevirtual #27                 // Method fillBuffer:()I
      29: istore        4
      31: iload         4
      33: iconst_m1
      34: if_icmpne     18
      37: iconst_m1
      38: ireturn
      39: aload_0
      40: invokespecial #13                 // Method bufferLen:()I
      43: istore        5
      45: iload         5
      47: iload_3
      48: if_icmple     54
      51: iload_3
      52: istore        5
      54: aload_0
      55: getfield      #7                  // Field buffer:[B
      58: aload_0
      59: getfield      #8                  // Field bufpos:I
      62: aload_1
      63: iload_2
      64: iload         5
      66: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      69: aload_0
      70: dup
      71: getfield      #8                  // Field bufpos:I
      74: iload         5
      76: iadd
      77: putfield      #8                  // Field bufpos:I
      80: iload         5
      82: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method readAllowed:()Z
       4: ifne          9
       7: iconst_m1
       8: ireturn
       9: aload_1
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: aload_1
      17: iconst_0
      18: aload_1
      19: arraylength
      20: invokevirtual #28                 // Method read:([BII)I
      23: ireturn

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public int readLine(org.apache.james.mime4j.util.ByteArrayBuffer) throws org.apache.james.mime4j.io.MaxLineLimitException, java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #29                 // String Buffer may not be null
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #25                 // Method readAllowed:()Z
      18: ifne          23
      21: iconst_m1
      22: ireturn
      23: iconst_0
      24: istore_2
      25: iconst_0
      26: istore_3
      27: iconst_0
      28: istore        4
      30: iload_3
      31: ifne          154
      34: aload_0
      35: invokevirtual #26                 // Method hasBufferedData:()Z
      38: ifne          56
      41: aload_0
      42: invokevirtual #27                 // Method fillBuffer:()I
      45: istore        4
      47: iload         4
      49: iconst_m1
      50: if_icmpne     56
      53: goto          154
      56: aload_0
      57: bipush        10
      59: invokevirtual #30                 // Method indexOf:(B)I
      62: istore        5
      64: iload         5
      66: iconst_m1
      67: if_icmpeq     86
      70: iconst_1
      71: istore_3
      72: iload         5
      74: iconst_1
      75: iadd
      76: aload_0
      77: invokevirtual #31                 // Method pos:()I
      80: isub
      81: istore        6
      83: goto          92
      86: aload_0
      87: invokevirtual #32                 // Method length:()I
      90: istore        6
      92: iload         6
      94: ifle          123
      97: aload_1
      98: aload_0
      99: invokevirtual #33                 // Method buf:()[B
     102: aload_0
     103: invokevirtual #31                 // Method pos:()I
     106: iload         6
     108: invokevirtual #34                 // Method org/apache/james/mime4j/util/ByteArrayBuffer.append:([BII)V
     111: aload_0
     112: iload         6
     114: invokevirtual #35                 // Method skip:(I)I
     117: pop
     118: iload_2
     119: iload         6
     121: iadd
     122: istore_2
     123: aload_0
     124: getfield      #10                 // Field maxLineLen:I
     127: ifle          151
     130: aload_1
     131: invokevirtual #36                 // Method org/apache/james/mime4j/util/ByteArrayBuffer.length:()I
     134: aload_0
     135: getfield      #10                 // Field maxLineLen:I
     138: if_icmplt     151
     141: new           #37                 // class org/apache/james/mime4j/io/MaxLineLimitException
     144: dup
     145: ldc           #38                 // String Maximum line length limit exceeded
     147: invokespecial #39                 // Method org/apache/james/mime4j/io/MaxLineLimitException."<init>":(Ljava/lang/String;)V
     150: athrow
     151: goto          30
     154: iload_2
     155: ifne          166
     158: iload         4
     160: iconst_m1
     161: if_icmpne     166
     164: iconst_m1
     165: ireturn
     166: iload_2
     167: ireturn

  public int indexOf(byte[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #40                 // String Pattern may not be null
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: aload_0
      16: getfield      #8                  // Field bufpos:I
      19: if_icmplt     36
      22: iload_3
      23: iflt          36
      26: iload_2
      27: iload_3
      28: iadd
      29: aload_0
      30: getfield      #9                  // Field buflen:I
      33: if_icmple     101
      36: new           #41                 // class java/lang/IndexOutOfBoundsException
      39: dup
      40: new           #42                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #44                 // String looking for
      49: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: iload_2
      53: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: ldc           #47                 // String (
      58: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: iload_3
      62: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: ldc           #48                 // String )
      67: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: ldc           #49                 // String  in
      72: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_0
      76: getfield      #8                  // Field bufpos:I
      79: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: ldc           #50                 // String /
      84: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_0
      88: getfield      #9                  // Field buflen:I
      91: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #52                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: iload_3
     102: aload_1
     103: arraylength
     104: if_icmpge     109
     107: iconst_m1
     108: ireturn
     109: sipush        256
     112: newarray       int
     114: astore        4
     116: iconst_0
     117: istore        5
     119: iload         5
     121: aload         4
     123: arraylength
     124: if_icmpge     142
     127: aload         4
     129: iload         5
     131: aload_1
     132: arraylength
     133: iconst_1
     134: iadd
     135: iastore
     136: iinc          5, 1
     139: goto          119
     142: iconst_0
     143: istore        5
     145: iload         5
     147: aload_1
     148: arraylength
     149: if_icmpge     178
     152: aload_1
     153: iload         5
     155: baload
     156: sipush        255
     159: iand
     160: istore        6
     162: aload         4
     164: iload         6
     166: aload_1
     167: arraylength
     168: iload         5
     170: isub
     171: iastore
     172: iinc          5, 1
     175: goto          145
     178: iconst_0
     179: istore        5
     181: iload         5
     183: iload_3
     184: aload_1
     185: arraylength
     186: isub
     187: if_icmpgt     292
     190: iload_2
     191: iload         5
     193: iadd
     194: istore        6
     196: iconst_1
     197: istore        7
     199: iconst_0
     200: istore        8
     202: iload         8
     204: aload_1
     205: arraylength
     206: if_icmpge     238
     209: aload_0
     210: getfield      #7                  // Field buffer:[B
     213: iload         6
     215: iload         8
     217: iadd
     218: baload
     219: aload_1
     220: iload         8
     222: baload
     223: if_icmpeq     232
     226: iconst_0
     227: istore        7
     229: goto          238
     232: iinc          8, 1
     235: goto          202
     238: iload         7
     240: ifeq          246
     243: iload         6
     245: ireturn
     246: iload         6
     248: aload_1
     249: arraylength
     250: iadd
     251: istore        8
     253: iload         8
     255: aload_0
     256: getfield      #7                  // Field buffer:[B
     259: arraylength
     260: if_icmplt     266
     263: goto          292
     266: aload_0
     267: getfield      #7                  // Field buffer:[B
     270: iload         8
     272: baload
     273: sipush        255
     276: iand
     277: istore        9
     279: iload         5
     281: aload         4
     283: iload         9
     285: iaload
     286: iadd
     287: istore        5
     289: goto          181
     292: iconst_m1
     293: ireturn

  public int indexOf(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #8                  // Field bufpos:I
       6: aload_0
       7: getfield      #9                  // Field buflen:I
      10: aload_0
      11: getfield      #8                  // Field bufpos:I
      14: isub
      15: invokevirtual #53                 // Method indexOf:([BII)I
      18: ireturn

  public int indexOf(byte, int, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #8                  // Field bufpos:I
       5: if_icmplt     22
       8: iload_3
       9: iflt          22
      12: iload_2
      13: iload_3
      14: iadd
      15: aload_0
      16: getfield      #9                  // Field buflen:I
      19: if_icmple     30
      22: new           #41                 // class java/lang/IndexOutOfBoundsException
      25: dup
      26: invokespecial #54                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      29: athrow
      30: iload_2
      31: istore        4
      33: iload         4
      35: iload_2
      36: iload_3
      37: iadd
      38: if_icmpge     61
      41: aload_0
      42: getfield      #7                  // Field buffer:[B
      45: iload         4
      47: baload
      48: iload_1
      49: if_icmpne     55
      52: iload         4
      54: ireturn
      55: iinc          4, 1
      58: goto          33
      61: iconst_m1
      62: ireturn

  public int indexOf(byte);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #8                  // Field bufpos:I
       6: aload_0
       7: invokespecial #13                 // Method bufferLen:()I
      10: invokevirtual #55                 // Method indexOf:(BII)I
      13: ireturn

  public int byteAt(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #8                  // Field bufpos:I
       5: if_icmplt     16
       8: iload_1
       9: aload_0
      10: getfield      #9                  // Field buflen:I
      13: if_icmple     67
      16: new           #41                 // class java/lang/IndexOutOfBoundsException
      19: dup
      20: new           #42                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #44                 // String looking for
      29: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_1
      33: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #49                 // String  in
      38: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #8                  // Field bufpos:I
      45: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #50                 // String /
      50: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #9                  // Field buflen:I
      57: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #52                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #7                  // Field buffer:[B
      71: iload_1
      72: baload
      73: sipush        255
      76: iand
      77: ireturn

  protected byte[] buf();
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:[B
       4: areturn

  protected int pos();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bufpos:I
       4: ireturn

  protected int limit();
    Code:
       0: aload_0
       1: getfield      #9                  // Field buflen:I
       4: ireturn

  protected int length();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method bufferLen:()I
       4: ireturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:[B
       4: arraylength
       5: ireturn

  protected int skip(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokespecial #13                 // Method bufferLen:()I
       5: invokestatic  #56                 // Method java/lang/Math.min:(II)I
       8: istore_2
       9: aload_0
      10: dup
      11: getfield      #8                  // Field bufpos:I
      14: iload_2
      15: iadd
      16: putfield      #8                  // Field bufpos:I
      19: iload_2
      20: ireturn

  private void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #8                  // Field bufpos:I
       5: aload_0
       6: iconst_0
       7: putfield      #9                  // Field buflen:I
      10: return

  public java.lang.String toString();
    Code:
       0: new           #42                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #57                 // String [pos:
      11: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #8                  // Field bufpos:I
      20: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #58                 // String ]
      27: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: ldc           #59                 // String [limit:
      34: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: aload_0
      40: getfield      #9                  // Field buflen:I
      43: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: ldc           #58                 // String ]
      50: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_1
      55: ldc           #60                 // String [
      57: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_0
      62: getfield      #8                  // Field bufpos:I
      65: istore_2
      66: iload_2
      67: aload_0
      68: getfield      #9                  // Field buflen:I
      71: if_icmpge     92
      74: aload_1
      75: aload_0
      76: getfield      #7                  // Field buffer:[B
      79: iload_2
      80: baload
      81: i2c
      82: invokevirtual #61                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      85: pop
      86: iinc          2, 1
      89: goto          66
      92: aload_1
      93: ldc           #58                 // String ]
      95: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: pop
      99: aload_0
     100: getfield      #2                  // Field tempBuffer:Z
     103: ifeq          197
     106: aload_1
     107: ldc           #62                 // String -ORIG[pos:
     109: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: pop
     113: aload_1
     114: aload_0
     115: getfield      #21                 // Field origBufpos:I
     118: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     121: pop
     122: aload_1
     123: ldc           #58                 // String ]
     125: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: pop
     129: aload_1
     130: ldc           #59                 // String [limit:
     132: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: pop
     136: aload_1
     137: aload_0
     138: getfield      #20                 // Field origBuflen:I
     141: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     144: pop
     145: aload_1
     146: ldc           #58                 // String ]
     148: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: pop
     152: aload_1
     153: ldc           #60                 // String [
     155: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: pop
     159: aload_0
     160: getfield      #21                 // Field origBufpos:I
     163: istore_2
     164: iload_2
     165: aload_0
     166: getfield      #20                 // Field origBuflen:I
     169: if_icmpge     190
     172: aload_1
     173: aload_0
     174: getfield      #19                 // Field origBuffer:[B
     177: iload_2
     178: baload
     179: i2c
     180: invokevirtual #61                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     183: pop
     184: iinc          2, 1
     187: goto          164
     190: aload_1
     191: ldc           #58                 // String ]
     193: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: pop
     197: aload_1
     198: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: areturn

  public boolean unread(org.apache.james.mime4j.util.ByteArrayBuffer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field tempBuffer:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_0
      11: getfield      #7                  // Field buffer:[B
      14: putfield      #19                 // Field origBuffer:[B
      17: aload_0
      18: aload_0
      19: getfield      #9                  // Field buflen:I
      22: putfield      #20                 // Field origBuflen:I
      25: aload_0
      26: aload_0
      27: getfield      #8                  // Field bufpos:I
      30: putfield      #21                 // Field origBufpos:I
      33: aload_0
      34: iconst_0
      35: putfield      #8                  // Field bufpos:I
      38: aload_0
      39: aload_1
      40: invokevirtual #36                 // Method org/apache/james/mime4j/util/ByteArrayBuffer.length:()I
      43: putfield      #9                  // Field buflen:I
      46: aload_0
      47: aload_1
      48: invokevirtual #63                 // Method org/apache/james/mime4j/util/ByteArrayBuffer.buffer:()[B
      51: putfield      #7                  // Field buffer:[B
      54: aload_0
      55: iconst_1
      56: putfield      #2                  // Field tempBuffer:Z
      59: iconst_1
      60: ireturn
}
