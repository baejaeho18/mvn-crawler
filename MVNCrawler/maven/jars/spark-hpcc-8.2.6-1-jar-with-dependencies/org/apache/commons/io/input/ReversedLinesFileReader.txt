Compiled from "ReversedLinesFileReader.java"
public class org.apache.commons.io.input.ReversedLinesFileReader implements java.io.Closeable {
  private static final java.lang.String EMPTY_STRING;

  private static final int DEFAULT_BLOCK_SIZE;

  private final int blockSize;

  private final java.nio.charset.Charset encoding;

  private final java.nio.channels.SeekableByteChannel channel;

  private final long totalByteLength;

  private final long totalBlockCount;

  private final byte[][] newLineSequences;

  private final int avoidNewlineSplitBufferSize;

  private final int byteDecrement;

  private org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart;

  private boolean trailingNewlineOfFileSkipped;

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: invokestatic  #9                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       8: invokespecial #10                 // Method "<init>":(Ljava/io/File;ILjava/nio/charset/Charset;)V
      11: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       5: aload_2
       6: invokespecial #12                 // Method "<init>":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V
       9: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.nio.file.Path, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: aload_2
       6: invokespecial #13                 // Method "<init>":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V
       9: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, int, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       5: iload_2
       6: aload_3
       7: invokespecial #13                 // Method "<init>":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V
      10: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.nio.file.Path, int, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #15                 // Field trailingNewlineOfFileSkipped:Z
       9: aload_0
      10: iload_2
      11: putfield      #7                  // Field blockSize:I
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field encoding:Ljava/nio/charset/Charset;
      19: aload_3
      20: invokestatic  #16                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
      23: astore        4
      25: aload         4
      27: invokevirtual #17                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      30: astore        5
      32: aload         5
      34: invokevirtual #18                 // Method java/nio/charset/CharsetEncoder.maxBytesPerChar:()F
      37: fstore        6
      39: fload         6
      41: fconst_1
      42: fcmpl
      43: ifne          54
      46: aload_0
      47: iconst_1
      48: putfield      #3                  // Field byteDecrement:I
      51: goto          202
      54: aload         4
      56: getstatic     #19                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      59: if_acmpne     70
      62: aload_0
      63: iconst_1
      64: putfield      #3                  // Field byteDecrement:I
      67: goto          202
      70: aload         4
      72: ldc           #20                 // String Shift_JIS
      74: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      77: if_acmpeq     120
      80: aload         4
      82: ldc           #22                 // String windows-31j
      84: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      87: if_acmpeq     120
      90: aload         4
      92: ldc           #23                 // String x-windows-949
      94: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      97: if_acmpeq     120
     100: aload         4
     102: ldc           #24                 // String gbk
     104: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     107: if_acmpeq     120
     110: aload         4
     112: ldc           #25                 // String x-windows-950
     114: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     117: if_acmpne     128
     120: aload_0
     121: iconst_1
     122: putfield      #3                  // Field byteDecrement:I
     125: goto          202
     128: aload         4
     130: getstatic     #26                 // Field java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;
     133: if_acmpeq     144
     136: aload         4
     138: getstatic     #27                 // Field java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;
     141: if_acmpne     152
     144: aload_0
     145: iconst_2
     146: putfield      #3                  // Field byteDecrement:I
     149: goto          202
     152: aload         4
     154: getstatic     #28                 // Field java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;
     157: if_acmpne     170
     160: new           #29                 // class java/io/UnsupportedEncodingException
     163: dup
     164: ldc           #30                 // String For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)
     166: invokespecial #31                 // Method java/io/UnsupportedEncodingException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: new           #29                 // class java/io/UnsupportedEncodingException
     173: dup
     174: new           #32                 // class java/lang/StringBuilder
     177: dup
     178: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     181: ldc           #34                 // String Encoding
     183: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: aload_3
     187: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     190: ldc           #37                 // String  is not supported yet (feel free to submit a patch)
     192: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     198: invokespecial #31                 // Method java/io/UnsupportedEncodingException."<init>":(Ljava/lang/String;)V
     201: athrow
     202: aload_0
     203: iconst_3
     204: anewarray     #39                 // class "[B"
     207: dup
     208: iconst_0
     209: ldc           #40                 // String \r\n
     211: aload_3
     212: invokevirtual #41                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     215: aastore
     216: dup
     217: iconst_1
     218: ldc           #42                 // String \n
     220: aload_3
     221: invokevirtual #41                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     224: aastore
     225: dup
     226: iconst_2
     227: ldc           #43                 // String \r
     229: aload_3
     230: invokevirtual #41                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     233: aastore
     234: putfield      #2                  // Field newLineSequences:[[B
     237: aload_0
     238: aload_0
     239: getfield      #2                  // Field newLineSequences:[[B
     242: iconst_0
     243: aaload
     244: arraylength
     245: putfield      #4                  // Field avoidNewlineSplitBufferSize:I
     248: aload_0
     249: aload_1
     250: iconst_1
     251: anewarray     #44                 // class java/nio/file/OpenOption
     254: dup
     255: iconst_0
     256: getstatic     #45                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
     259: aastore
     260: invokestatic  #46                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
     263: putfield      #6                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
     266: aload_0
     267: aload_0
     268: getfield      #6                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
     271: invokeinterface #47,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.size:()J
     276: putfield      #48                 // Field totalByteLength:J
     279: aload_0
     280: getfield      #48                 // Field totalByteLength:J
     283: iload_2
     284: i2l
     285: lrem
     286: l2i
     287: istore        7
     289: iload         7
     291: ifle          310
     294: aload_0
     295: aload_0
     296: getfield      #48                 // Field totalByteLength:J
     299: iload_2
     300: i2l
     301: ldiv
     302: lconst_1
     303: ladd
     304: putfield      #49                 // Field totalBlockCount:J
     307: goto          333
     310: aload_0
     311: aload_0
     312: getfield      #48                 // Field totalByteLength:J
     315: iload_2
     316: i2l
     317: ldiv
     318: putfield      #49                 // Field totalBlockCount:J
     321: aload_0
     322: getfield      #48                 // Field totalByteLength:J
     325: lconst_0
     326: lcmp
     327: ifle          333
     330: iload_2
     331: istore        7
     333: aload_0
     334: new           #50                 // class org/apache/commons/io/input/ReversedLinesFileReader$FilePart
     337: dup
     338: aload_0
     339: aload_0
     340: getfield      #49                 // Field totalBlockCount:J
     343: iload         7
     345: aconst_null
     346: aconst_null
     347: invokespecial #51                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart."<init>":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V
     350: putfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
     353: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       5: iload_2
       6: aload_3
       7: invokespecial #53                 // Method "<init>":(Ljava/nio/file/Path;ILjava/lang/String;)V
      10: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.nio.file.Path, int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokestatic  #54                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       7: invokespecial #13                 // Method "<init>":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V
      10: return

  public java.lang.String readLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
       4: invokestatic  #55                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$100:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ifnonnull     41
      12: aload_0
      13: aload_0
      14: getfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      17: invokestatic  #56                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$200:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      20: putfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      23: aload_0
      24: getfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      27: ifnull        41
      30: aload_0
      31: getfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      34: invokestatic  #55                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$100:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;
      37: astore_1
      38: goto          8
      41: ldc           #57                 // String
      43: aload_1
      44: invokevirtual #58                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          67
      50: aload_0
      51: getfield      #15                 // Field trailingNewlineOfFileSkipped:Z
      54: ifne          67
      57: aload_0
      58: iconst_1
      59: putfield      #15                 // Field trailingNewlineOfFileSkipped:Z
      62: aload_0
      63: invokevirtual #59                 // Method readLine:()Ljava/lang/String;
      66: astore_1
      67: aload_1
      68: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
       4: invokeinterface #60,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
       9: return

  static int access$300(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #7                  // Field blockSize:I
       4: ireturn

  static java.nio.channels.SeekableByteChannel access$400(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
       4: areturn

  static java.nio.charset.Charset access$500(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #5                  // Field encoding:Ljava/nio/charset/Charset;
       4: areturn

  static int access$600(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #4                  // Field avoidNewlineSplitBufferSize:I
       4: ireturn

  static int access$700(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #3                  // Field byteDecrement:I
       4: ireturn

  static byte[][] access$800(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #2                  // Field newLineSequences:[[B
       4: areturn
}
