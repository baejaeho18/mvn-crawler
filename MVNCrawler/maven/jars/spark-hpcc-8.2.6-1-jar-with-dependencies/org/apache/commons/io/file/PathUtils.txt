Compiled from "PathUtils.java"
public final class org.apache.commons.io.file.PathUtils {
  public static final java.nio.file.FileVisitOption[] EMPTY_FILE_VISIT_OPTION_ARRAY;

  public static final java.nio.file.LinkOption[] EMPTY_LINK_OPTION_ARRAY;

  public static final java.nio.file.OpenOption[] EMPTY_OPEN_OPTION_ARRAY;

  private static org.apache.commons.io.file.AccumulatorPathVisitor accumulate(java.nio.file.Path, int, java.nio.file.LinkOption[], java.nio.file.FileVisitOption[]) throws java.io.IOException;
    Code:
       0: invokestatic  #2                  // Method org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;
       3: aload_0
       4: aload_3
       5: invokestatic  #3                  // Method toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;
       8: iload_1
       9: invokestatic  #4                  // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;
      12: checkcast     #5                  // class org/apache/commons/io/file/AccumulatorPathVisitor
      15: areturn

  public static org.apache.commons.io.file.Counters$PathCounters cleanDirectory(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: invokestatic  #6                  // Method org/apache/commons/io/file/CleaningPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;
       3: aload_0
       4: invokestatic  #7                  // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
       7: checkcast     #8                  // class org/apache/commons/io/file/CountingPathVisitor
      10: invokevirtual #9                  // Method org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
      13: areturn

  public static org.apache.commons.io.file.Counters$PathCounters copyDirectory(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: new           #10                 // class org/apache/commons/io/file/CopyDirectoryVisitor
       3: dup
       4: invokestatic  #11                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #12                 // Method org/apache/commons/io/file/CopyDirectoryVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V
      13: aload_0
      14: invokestatic  #7                  // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
      17: checkcast     #10                 // class org/apache/commons/io/file/CopyDirectoryVisitor
      20: invokevirtual #13                 // Method org/apache/commons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
      23: areturn

  public static java.nio.file.Path copyFile(java.net.URL, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
       4: astore_3
       5: aconst_null
       6: astore        4
       8: aload_3
       9: aload_1
      10: aload_2
      11: invokestatic  #15                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
      14: pop2
      15: aload_1
      16: astore        5
      18: aload_3
      19: ifnull        50
      22: aload         4
      24: ifnull        46
      27: aload_3
      28: invokevirtual #16                 // Method java/io/InputStream.close:()V
      31: goto          50
      34: astore        6
      36: aload         4
      38: aload         6
      40: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      43: goto          50
      46: aload_3
      47: invokevirtual #16                 // Method java/io/InputStream.close:()V
      50: aload         5
      52: areturn
      53: astore        5
      55: aload         5
      57: astore        4
      59: aload         5
      61: athrow
      62: astore        7
      64: aload_3
      65: ifnull        96
      68: aload         4
      70: ifnull        92
      73: aload_3
      74: invokevirtual #16                 // Method java/io/InputStream.close:()V
      77: goto          96
      80: astore        8
      82: aload         4
      84: aload         8
      86: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      89: goto          96
      92: aload_3
      93: invokevirtual #16                 // Method java/io/InputStream.close:()V
      96: aload         7
      98: athrow
    Exception table:
       from    to  target type
          27    31    34   Class java/lang/Throwable
           8    18    53   Class java/lang/Throwable
           8    18    62   any
          73    77    80   Class java/lang/Throwable
          53    64    62   any

  public static java.nio.file.Path copyFileToDirectory(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
       8: invokeinterface #20,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      13: aload_2
      14: invokestatic  #21                 // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      17: areturn

  public static java.nio.file.Path copyFileToDirectory(java.net.URL, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
       4: astore_3
       5: aconst_null
       6: astore        4
       8: aload_3
       9: aload_1
      10: aload_0
      11: invokevirtual #22                 // Method java/net/URL.getFile:()Ljava/lang/String;
      14: invokeinterface #23,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      19: aload_2
      20: invokestatic  #15                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
      23: pop2
      24: aload_1
      25: astore        5
      27: aload_3
      28: ifnull        59
      31: aload         4
      33: ifnull        55
      36: aload_3
      37: invokevirtual #16                 // Method java/io/InputStream.close:()V
      40: goto          59
      43: astore        6
      45: aload         4
      47: aload         6
      49: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      52: goto          59
      55: aload_3
      56: invokevirtual #16                 // Method java/io/InputStream.close:()V
      59: aload         5
      61: areturn
      62: astore        5
      64: aload         5
      66: astore        4
      68: aload         5
      70: athrow
      71: astore        7
      73: aload_3
      74: ifnull        105
      77: aload         4
      79: ifnull        101
      82: aload_3
      83: invokevirtual #16                 // Method java/io/InputStream.close:()V
      86: goto          105
      89: astore        8
      91: aload         4
      93: aload         8
      95: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      98: goto          105
     101: aload_3
     102: invokevirtual #16                 // Method java/io/InputStream.close:()V
     105: aload         7
     107: athrow
    Exception table:
       from    to  target type
          36    40    43   Class java/lang/Throwable
           8    27    62   Class java/lang/Throwable
           8    27    71   any
          82    86    89   Class java/lang/Throwable
          62    73    71   any

  public static org.apache.commons.io.file.Counters$PathCounters countDirectory(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: new           #8                  // class org/apache/commons/io/file/CountingPathVisitor
       3: dup
       4: invokestatic  #11                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
       7: invokespecial #24                 // Method org/apache/commons/io/file/CountingPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
      10: aload_0
      11: invokestatic  #7                  // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
      14: checkcast     #8                  // class org/apache/commons/io/file/CountingPathVisitor
      17: invokevirtual #9                  // Method org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
      20: areturn

  public static org.apache.commons.io.file.Counters$PathCounters delete(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #25                 // class java/nio/file/LinkOption
       5: invokestatic  #26                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifeq          18
      11: aload_0
      12: invokestatic  #27                 // Method deleteDirectory:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;
      15: goto          22
      18: aload_0
      19: invokestatic  #28                 // Method deleteFile:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;
      22: areturn

  public static org.apache.commons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: invokestatic  #29                 // Method org/apache/commons/io/file/DeletingPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/DeletingPathVisitor;
       3: aload_0
       4: invokestatic  #7                  // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
       7: checkcast     #30                 // class org/apache/commons/io/file/DeletingPathVisitor
      10: invokevirtual #31                 // Method org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
      13: areturn

  public static org.apache.commons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #25                 // class java/nio/file/LinkOption
       5: invokestatic  #26                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifeq          25
      11: new           #32                 // class java/nio/file/NotDirectoryException
      14: dup
      15: aload_0
      16: invokeinterface #33,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      21: invokespecial #34                 // Method java/nio/file/NotDirectoryException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: invokestatic  #11                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
      28: astore_1
      29: aload_0
      30: iconst_0
      31: anewarray     #25                 // class java/nio/file/LinkOption
      34: invokestatic  #35                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      37: ifeq          47
      40: aload_0
      41: invokestatic  #36                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
      44: goto          48
      47: lconst_0
      48: lstore_2
      49: aload_0
      50: invokestatic  #37                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      53: ifeq          79
      56: aload_1
      57: invokeinterface #38,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;
      62: invokeinterface #39,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.increment:()V
      67: aload_1
      68: invokeinterface #40,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;
      73: lload_2
      74: invokeinterface #41,  3           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.add:(J)V
      79: aload_1
      80: areturn

  public static boolean directoryAndFileContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #42                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
       5: getstatic     #43                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
       8: getstatic     #44                 // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
      11: invokestatic  #45                 // Method directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z
      14: ireturn

  public static boolean directoryAndFileContentEquals(java.nio.file.Path, java.nio.file.Path, java.nio.file.LinkOption[], java.nio.file.OpenOption[], java.nio.file.FileVisitOption[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     10
       4: aload_1
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: aload_1
      20: ifnonnull     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ixor
      29: ifeq          34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: iconst_0
      36: anewarray     #25                 // class java/nio/file/LinkOption
      39: invokestatic  #35                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      42: ifne          58
      45: aload_1
      46: iconst_0
      47: anewarray     #25                 // class java/nio/file/LinkOption
      50: invokestatic  #35                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      53: ifne          58
      56: iconst_1
      57: ireturn
      58: new           #46                 // class org/apache/commons/io/file/PathUtils$RelativeSortedPaths
      61: dup
      62: aload_0
      63: aload_1
      64: ldc           #48                 // int 2147483647
      66: aload_2
      67: aload         4
      69: aconst_null
      70: invokespecial #49                 // Method org/apache/commons/io/file/PathUtils$RelativeSortedPaths."<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V
      73: astore        5
      75: aload         5
      77: getfield      #50                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: aload         5
      87: getfield      #51                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;
      90: astore        6
      92: aload         5
      94: getfield      #52                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;
      97: astore        7
      99: aload         6
     101: invokeinterface #53,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     106: astore        8
     108: aload         8
     110: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     115: ifeq          191
     118: aload         8
     120: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     125: checkcast     #56                 // class java/nio/file/Path
     128: astore        9
     130: aload         7
     132: aload         9
     134: invokestatic  #57                 // Method java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I
     137: istore        10
     139: iload         10
     141: iconst_m1
     142: if_icmple     171
     145: aload_0
     146: aload         9
     148: invokeinterface #20,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
     153: aload_1
     154: aload         9
     156: invokeinterface #20,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
     161: aload_2
     162: aload_3
     163: invokestatic  #58                 // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z
     166: ifne          188
     169: iconst_0
     170: ireturn
     171: new           #59                 // class java/lang/IllegalStateException
     174: dup
     175: ldc           #60                 // String Unexpected mismatch.
     177: iconst_0
     178: anewarray     #61                 // class java/lang/Object
     181: invokestatic  #62                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     184: invokespecial #63                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     187: athrow
     188: goto          108
     191: iconst_1
     192: ireturn

  public static boolean directoryContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #48                 // int 2147483647
       4: getstatic     #42                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
       7: getstatic     #44                 // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
      10: invokestatic  #64                 // Method directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z
      13: ireturn

  public static boolean directoryContentEquals(java.nio.file.Path, java.nio.file.Path, int, java.nio.file.LinkOption[], java.nio.file.FileVisitOption[]) throws java.io.IOException;
    Code:
       0: new           #46                 // class org/apache/commons/io/file/PathUtils$RelativeSortedPaths
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: aconst_null
      11: invokespecial #49                 // Method org/apache/commons/io/file/PathUtils$RelativeSortedPaths."<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V
      14: getfield      #50                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z
      17: ireturn

  public static boolean fileContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #42                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
       5: getstatic     #43                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
       8: invokestatic  #58                 // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z
      11: ireturn

  public static boolean fileContentEquals(java.nio.file.Path, java.nio.file.Path, java.nio.file.LinkOption[], java.nio.file.OpenOption[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     10
       4: aload_1
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: aload_1
      20: ifnonnull     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ixor
      29: ifeq          34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: invokeinterface #65,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      40: astore        4
      42: aload_1
      43: invokeinterface #65,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      48: astore        5
      50: aload         4
      52: aload_2
      53: invokestatic  #35                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      56: istore        6
      58: iload         6
      60: aload         5
      62: aload_2
      63: invokestatic  #35                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      66: if_icmpeq     71
      69: iconst_0
      70: ireturn
      71: iload         6
      73: ifne          78
      76: iconst_1
      77: ireturn
      78: aload         4
      80: aload_2
      81: invokestatic  #26                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      84: ifeq          115
      87: new           #66                 // class java/io/IOException
      90: dup
      91: new           #67                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #68                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #69                 // String Can\'t compare directories, only files:
     100: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload         4
     105: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     108: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokespecial #73                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     114: athrow
     115: aload         5
     117: aload_2
     118: invokestatic  #26                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     121: ifeq          152
     124: new           #66                 // class java/io/IOException
     127: dup
     128: new           #67                 // class java/lang/StringBuilder
     131: dup
     132: invokespecial #68                 // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #69                 // String Can\'t compare directories, only files:
     137: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload         5
     142: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     145: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokespecial #73                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     151: athrow
     152: aload         4
     154: invokestatic  #36                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
     157: aload         5
     159: invokestatic  #36                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
     162: lcmp
     163: ifeq          168
     166: iconst_0
     167: ireturn
     168: aload_0
     169: aload_1
     170: invokeinterface #74,  2           // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z
     175: ifeq          180
     178: iconst_1
     179: ireturn
     180: aload         4
     182: aload_3
     183: invokestatic  #75                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
     186: astore        7
     188: aconst_null
     189: astore        8
     191: aload         5
     193: aload_3
     194: invokestatic  #75                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
     197: astore        9
     199: aconst_null
     200: astore        10
     202: aload         7
     204: aload         9
     206: invokestatic  #76                 // Method org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z
     209: istore        11
     211: aload         9
     213: ifnull        246
     216: aload         10
     218: ifnull        241
     221: aload         9
     223: invokevirtual #16                 // Method java/io/InputStream.close:()V
     226: goto          246
     229: astore        12
     231: aload         10
     233: aload         12
     235: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     238: goto          246
     241: aload         9
     243: invokevirtual #16                 // Method java/io/InputStream.close:()V
     246: aload         7
     248: ifnull        281
     251: aload         8
     253: ifnull        276
     256: aload         7
     258: invokevirtual #16                 // Method java/io/InputStream.close:()V
     261: goto          281
     264: astore        12
     266: aload         8
     268: aload         12
     270: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     273: goto          281
     276: aload         7
     278: invokevirtual #16                 // Method java/io/InputStream.close:()V
     281: iload         11
     283: ireturn
     284: astore        11
     286: aload         11
     288: astore        10
     290: aload         11
     292: athrow
     293: astore        13
     295: aload         9
     297: ifnull        330
     300: aload         10
     302: ifnull        325
     305: aload         9
     307: invokevirtual #16                 // Method java/io/InputStream.close:()V
     310: goto          330
     313: astore        14
     315: aload         10
     317: aload         14
     319: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     322: goto          330
     325: aload         9
     327: invokevirtual #16                 // Method java/io/InputStream.close:()V
     330: aload         13
     332: athrow
     333: astore        9
     335: aload         9
     337: astore        8
     339: aload         9
     341: athrow
     342: astore        15
     344: aload         7
     346: ifnull        379
     349: aload         8
     351: ifnull        374
     354: aload         7
     356: invokevirtual #16                 // Method java/io/InputStream.close:()V
     359: goto          379
     362: astore        16
     364: aload         8
     366: aload         16
     368: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     371: goto          379
     374: aload         7
     376: invokevirtual #16                 // Method java/io/InputStream.close:()V
     379: aload         15
     381: athrow
    Exception table:
       from    to  target type
         221   226   229   Class java/lang/Throwable
         256   261   264   Class java/lang/Throwable
         202   211   284   Class java/lang/Throwable
         202   211   293   any
         305   310   313   Class java/lang/Throwable
         284   295   293   any
         191   246   333   Class java/lang/Throwable
         284   333   333   Class java/lang/Throwable
         191   246   342   any
         354   359   362   Class java/lang/Throwable
         284   344   342   any

  public static boolean isEmpty(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #25                 // class java/nio/file/LinkOption
       5: invokestatic  #26                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifeq          18
      11: aload_0
      12: invokestatic  #77                 // Method isEmptyDirectory:(Ljava/nio/file/Path;)Z
      15: goto          22
      18: aload_0
      19: invokestatic  #78                 // Method isEmptyFile:(Ljava/nio/file/Path;)Z
      22: ireturn

  public static boolean isEmptyDirectory(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #79                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: aload_1
       8: invokeinterface #80,  1           // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;
      13: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          59
      21: iconst_0
      22: istore_3
      23: aload_1
      24: ifnull        57
      27: aload_2
      28: ifnull        51
      31: aload_1
      32: invokeinterface #81,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      37: goto          57
      40: astore        4
      42: aload_2
      43: aload         4
      45: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      48: goto          57
      51: aload_1
      52: invokeinterface #81,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      57: iload_3
      58: ireturn
      59: aload_1
      60: ifnull        138
      63: aload_2
      64: ifnull        85
      67: aload_1
      68: invokeinterface #81,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      73: goto          138
      76: astore_3
      77: aload_2
      78: aload_3
      79: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      82: goto          138
      85: aload_1
      86: invokeinterface #81,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      91: goto          138
      94: astore_3
      95: aload_3
      96: astore_2
      97: aload_3
      98: athrow
      99: astore        5
     101: aload_1
     102: ifnull        135
     105: aload_2
     106: ifnull        129
     109: aload_1
     110: invokeinterface #81,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     115: goto          135
     118: astore        6
     120: aload_2
     121: aload         6
     123: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     126: goto          135
     129: aload_1
     130: invokeinterface #81,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     135: aload         5
     137: athrow
     138: iconst_1
     139: ireturn
    Exception table:
       from    to  target type
          31    37    40   Class java/lang/Throwable
          67    73    76   Class java/lang/Throwable
           7    23    94   Class java/lang/Throwable
           7    23    99   any
         109   115   118   Class java/lang/Throwable
          94   101    99   any

  public static boolean isEmptyFile(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
       4: lconst_0
       5: lcmp
       6: ifgt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static java.util.List<java.nio.file.Path> relativize(java.util.Collection<java.nio.file.Path>, java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);
    Code:
       0: aload_0
       1: invokeinterface #82,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: aload_1
       7: invokedynamic #83,  0             // InvokeDynamic #0:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;
      12: invokeinterface #84,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      17: astore        4
      19: iload_2
      20: ifeq          47
      23: aload_3
      24: ifnonnull     37
      27: aload         4
      29: invokeinterface #85,  1           // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;
      34: goto          45
      37: aload         4
      39: aload_3
      40: invokeinterface #86,  2           // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
      45: astore        4
      47: aload         4
      49: invokestatic  #87                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      52: invokeinterface #88,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      57: checkcast     #89                 // class java/util/List
      60: areturn

  static java.util.Set<java.nio.file.FileVisitOption> toFileVisitOptionSet(java.nio.file.FileVisitOption...);
    Code:
       0: aload_0
       1: ifnonnull     12
       4: ldc           #90                 // class java/nio/file/FileVisitOption
       6: invokestatic  #91                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       9: goto          27
      12: aload_0
      13: invokestatic  #92                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      16: invokestatic  #93                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      19: invokeinterface #88,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #94                 // class java/util/Set
      27: areturn

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #95                 // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
       5: pop
       6: aload_0
       7: areturn

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.nio.file.Path, java.util.Set<java.nio.file.FileVisitOption>, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: aload_0
       4: invokestatic  #96                 // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;
       7: pop
       8: aload_0
       9: areturn

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.lang.String, java.lang.String...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #97                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
       6: invokestatic  #7                  // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
       9: areturn

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.net.URI) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
       5: invokestatic  #7                  // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
       8: areturn

  private org.apache.commons.io.file.PathUtils();
    Code:
       0: aload_0
       1: invokespecial #99                 // Method java/lang/Object."<init>":()V
       4: return

  private static java.nio.file.Path lambda$relativize$0(java.nio.file.Path, java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #100,  2          // InterfaceMethod java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
       7: areturn

  static org.apache.commons.io.file.AccumulatorPathVisitor access$000(java.nio.file.Path, int, java.nio.file.LinkOption[], java.nio.file.FileVisitOption[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1                  // Method accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;
       7: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #90                 // class java/nio/file/FileVisitOption
       4: putstatic     #44                 // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
       7: iconst_0
       8: anewarray     #25                 // class java/nio/file/LinkOption
      11: putstatic     #42                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
      14: iconst_0
      15: anewarray     #101                // class java/nio/file/OpenOption
      18: putstatic     #43                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
      21: return
}
