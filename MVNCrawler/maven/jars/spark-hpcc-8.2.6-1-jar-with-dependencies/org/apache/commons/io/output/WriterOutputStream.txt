Compiled from "WriterOutputStream.java"
public class org.apache.commons.io.output.WriterOutputStream extends java.io.OutputStream {
  private static final int BUFFER_SIZE;

  private final java.io.Writer writer;

  private final java.nio.charset.CharsetDecoder decoder;

  private final boolean writeImmediately;

  private final java.nio.ByteBuffer decoderIn;

  private final java.nio.CharBuffer decoderOut;

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.nio.charset.CharsetDecoder);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        1024
       6: iconst_0
       7: invokespecial #2                  // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V
      10: return

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.nio.charset.CharsetDecoder, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: sipush        128
       8: invokestatic  #4                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      11: putfield      #5                  // Field decoderIn:Ljava/nio/ByteBuffer;
      14: aload_2
      15: invokevirtual #6                  // Method java/nio/charset/CharsetDecoder.charset:()Ljava/nio/charset/Charset;
      18: invokestatic  #7                  // Method checkIbmJdkWithBrokenUTF16:(Ljava/nio/charset/Charset;)V
      21: aload_0
      22: aload_1
      23: putfield      #8                  // Field writer:Ljava/io/Writer;
      26: aload_0
      27: aload_2
      28: putfield      #9                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
      31: aload_0
      32: iload         4
      34: putfield      #10                 // Field writeImmediately:Z
      37: aload_0
      38: iload_3
      39: invokestatic  #11                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      42: putfield      #12                 // Field decoderOut:Ljava/nio/CharBuffer;
      45: return

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.nio.charset.Charset, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #13                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
       6: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
       9: invokevirtual #15                 // Method java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
      12: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      15: invokevirtual #16                 // Method java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
      18: ldc           #17                 // String ?
      20: invokevirtual #18                 // Method java/nio/charset/CharsetDecoder.replaceWith:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;
      23: iload_3
      24: iload         4
      26: invokespecial #2                  // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V
      29: return

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        1024
       6: iconst_0
       7: invokespecial #19                 // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V
      10: return

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.lang.String, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #20                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       6: iload_3
       7: iload         4
       9: invokespecial #19                 // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V
      12: return

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        1024
       6: iconst_0
       7: invokespecial #21                 // Method "<init>":(Ljava/io/Writer;Ljava/lang/String;IZ)V
      10: return

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       5: sipush        1024
       8: iconst_0
       9: invokespecial #19                 // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V
      12: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          47
       4: iload_3
       5: aload_0
       6: getfield      #5                  // Field decoderIn:Ljava/nio/ByteBuffer;
       9: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
      12: invokestatic  #24                 // Method java/lang/Math.min:(II)I
      15: istore        4
      17: aload_0
      18: getfield      #5                  // Field decoderIn:Ljava/nio/ByteBuffer;
      21: aload_1
      22: iload_2
      23: iload         4
      25: invokevirtual #25                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      28: pop
      29: aload_0
      30: iconst_0
      31: invokespecial #26                 // Method processInput:(Z)V
      34: iload_3
      35: iload         4
      37: isub
      38: istore_3
      39: iload_2
      40: iload         4
      42: iadd
      43: istore_2
      44: goto          0
      47: aload_0
      48: getfield      #10                 // Field writeImmediately:Z
      51: ifeq          58
      54: aload_0
      55: invokespecial #27                 // Method flushOutput:()V
      58: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #28                 // Method write:([BII)V
       8: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: newarray       byte
       4: dup
       5: iconst_0
       6: iload_1
       7: i2b
       8: bastore
       9: iconst_0
      10: iconst_1
      11: invokevirtual #28                 // Method write:([BII)V
      14: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #27                 // Method flushOutput:()V
       4: aload_0
       5: getfield      #8                  // Field writer:Ljava/io/Writer;
       8: invokevirtual #29                 // Method java/io/Writer.flush:()V
      11: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #26                 // Method processInput:(Z)V
       5: aload_0
       6: invokespecial #27                 // Method flushOutput:()V
       9: aload_0
      10: getfield      #8                  // Field writer:Ljava/io/Writer;
      13: invokevirtual #30                 // Method java/io/Writer.close:()V
      16: return

  private void processInput(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field decoderIn:Ljava/nio/ByteBuffer;
       4: invokevirtual #31                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: getfield      #9                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
      12: aload_0
      13: getfield      #5                  // Field decoderIn:Ljava/nio/ByteBuffer;
      16: aload_0
      17: getfield      #12                 // Field decoderOut:Ljava/nio/CharBuffer;
      20: iload_1
      21: invokevirtual #32                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
      24: astore_2
      25: aload_2
      26: invokevirtual #33                 // Method java/nio/charset/CoderResult.isOverflow:()Z
      29: ifeq          39
      32: aload_0
      33: invokespecial #27                 // Method flushOutput:()V
      36: goto          8
      39: aload_2
      40: invokevirtual #34                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
      43: ifeq          49
      46: goto          59
      49: new           #35                 // class java/io/IOException
      52: dup
      53: ldc           #36                 // String Unexpected coder result
      55: invokespecial #37                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_0
      60: getfield      #5                  // Field decoderIn:Ljava/nio/ByteBuffer;
      63: invokevirtual #38                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      66: pop
      67: return

  private void flushOutput() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field decoderOut:Ljava/nio/CharBuffer;
       4: invokevirtual #39                 // Method java/nio/CharBuffer.position:()I
       7: ifle          40
      10: aload_0
      11: getfield      #8                  // Field writer:Ljava/io/Writer;
      14: aload_0
      15: getfield      #12                 // Field decoderOut:Ljava/nio/CharBuffer;
      18: invokevirtual #40                 // Method java/nio/CharBuffer.array:()[C
      21: iconst_0
      22: aload_0
      23: getfield      #12                 // Field decoderOut:Ljava/nio/CharBuffer;
      26: invokevirtual #39                 // Method java/nio/CharBuffer.position:()I
      29: invokevirtual #41                 // Method java/io/Writer.write:([CII)V
      32: aload_0
      33: getfield      #12                 // Field decoderOut:Ljava/nio/CharBuffer;
      36: invokevirtual #42                 // Method java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;
      39: pop
      40: return

  private static void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset);
    Code:
       0: ldc           #43                 // String UTF-16
       2: aload_0
       3: invokevirtual #44                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
       6: invokevirtual #45                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifne          13
      12: return
      13: ldc           #46                 // String vés
      15: astore_1
      16: ldc           #46                 // String vés
      18: aload_0
      19: invokevirtual #47                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      22: astore_2
      23: aload_0
      24: invokevirtual #13                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
      27: astore_3
      28: bipush        16
      30: invokestatic  #4                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      33: astore        4
      35: ldc           #46                 // String vés
      37: invokevirtual #48                 // Method java/lang/String.length:()I
      40: invokestatic  #11                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      43: astore        5
      45: aload_2
      46: arraylength
      47: istore        6
      49: iconst_0
      50: istore        7
      52: iload         7
      54: iload         6
      56: if_icmpge     125
      59: aload         4
      61: aload_2
      62: iload         7
      64: baload
      65: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      68: pop
      69: aload         4
      71: invokevirtual #31                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      74: pop
      75: aload_3
      76: aload         4
      78: aload         5
      80: iload         7
      82: iload         6
      84: iconst_1
      85: isub
      86: if_icmpne     93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: invokevirtual #32                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
      97: pop
      98: goto          113
     101: astore        8
     103: new           #51                 // class java/lang/UnsupportedOperationException
     106: dup
     107: ldc           #52                 // String UTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream
     109: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: aload         4
     115: invokevirtual #38                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     118: pop
     119: iinc          7, 1
     122: goto          52
     125: aload         5
     127: invokevirtual #42                 // Method java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;
     130: pop
     131: ldc           #46                 // String vés
     133: aload         5
     135: invokevirtual #54                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;
     138: invokevirtual #45                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     141: ifne          154
     144: new           #51                 // class java/lang/UnsupportedOperationException
     147: dup
     148: ldc           #52                 // String UTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream
     150: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     153: athrow
     154: return
    Exception table:
       from    to  target type
          75    98   101   Class java/lang/IllegalArgumentException
}
