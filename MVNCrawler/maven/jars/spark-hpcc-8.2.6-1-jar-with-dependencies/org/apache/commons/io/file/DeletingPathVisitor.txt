Compiled from "DeletingPathVisitor.java"
public class org.apache.commons.io.file.DeletingPathVisitor extends org.apache.commons.io.file.CountingPathVisitor {
  private final java.lang.String[] skip;

  public static org.apache.commons.io.file.DeletingPathVisitor withBigIntegerCounters();
    Code:
       0: new           #1                  // class org/apache/commons/io/file/DeletingPathVisitor
       3: dup
       4: invokestatic  #2                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
       7: iconst_0
       8: anewarray     #3                  // class java/lang/String
      11: invokespecial #4                  // Method "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V
      14: areturn

  public static org.apache.commons.io.file.DeletingPathVisitor withLongCounters();
    Code:
       0: new           #1                  // class org/apache/commons/io/file/DeletingPathVisitor
       3: dup
       4: invokestatic  #5                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
       7: iconst_0
       8: anewarray     #3                  // class java/lang/String
      11: invokespecial #4                  // Method "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V
      14: areturn

  public org.apache.commons.io.file.DeletingPathVisitor(org.apache.commons.io.file.Counters$PathCounters, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/apache/commons/io/file/CountingPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
       5: aload_2
       6: ifnull        19
       9: aload_2
      10: invokevirtual #7                  // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
      13: checkcast     #8                  // class "[Ljava/lang/String;"
      16: goto          22
      19: getstatic     #9                  // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
      22: astore_3
      23: aload_3
      24: invokestatic  #10                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
      27: aload_0
      28: aload_3
      29: putfield      #11                 // Field skip:[Ljava/lang/String;
      32: return

  private boolean accept(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #11                 // Field skip:[Ljava/lang/String;
       4: aload_1
       5: invokeinterface #12,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
      10: aconst_null
      11: invokestatic  #13                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
      14: invokestatic  #14                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I
      17: ifge          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path, java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #15                 // Method org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #16                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      11: pop
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokespecial #17                 // Method org/apache/commons/io/file/CountingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
      18: areturn

  public java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #18                 // Method org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       6: pop
       7: aload_0
       8: aload_1
       9: invokespecial #19                 // Method accept:(Ljava/nio/file/Path;)Z
      12: ifeq          21
      15: getstatic     #20                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      18: goto          24
      21: getstatic     #21                 // Field java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;
      24: areturn

  public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method accept:(Ljava/nio/file/Path;)Z
       5: ifeq          24
       8: aload_1
       9: iconst_0
      10: anewarray     #22                 // class java/nio/file/LinkOption
      13: invokestatic  #23                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      16: ifeq          24
      19: aload_1
      20: invokestatic  #16                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      23: pop
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #24                 // Method updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V
      30: getstatic     #20                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      33: areturn

  public java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object, java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #26                 // Method postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
       9: areturn

  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #27                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn

  public java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #28                 // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn
}
