Compiled from "ProxyInputStream.java"
public abstract class org.apache.commons.io.input.ProxyInputStream extends java.io.FilterInputStream {
  public org.apache.commons.io.input.ProxyInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #3                  // Method beforeRead:(I)V
       5: aload_0
       6: getfield      #4                  // Field in:Ljava/io/InputStream;
       9: invokevirtual #5                  // Method java/io/InputStream.read:()I
      12: istore_1
      13: aload_0
      14: iload_1
      15: iconst_m1
      16: if_icmpeq     23
      19: iconst_1
      20: goto          24
      23: iconst_m1
      24: invokevirtual #6                  // Method afterRead:(I)V
      27: iload_1
      28: ireturn
      29: astore_1
      30: aload_0
      31: aload_1
      32: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V
      35: iconst_m1
      36: ireturn
    Exception table:
       from    to  target type
           0    28    29   Class java/io/IOException

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #9                  // Method org/apache/commons/io/IOUtils.length:([B)I
       5: invokevirtual #3                  // Method beforeRead:(I)V
       8: aload_0
       9: getfield      #4                  // Field in:Ljava/io/InputStream;
      12: aload_1
      13: invokevirtual #10                 // Method java/io/InputStream.read:([B)I
      16: istore_2
      17: aload_0
      18: iload_2
      19: invokevirtual #6                  // Method afterRead:(I)V
      22: iload_2
      23: ireturn
      24: astore_2
      25: aload_0
      26: aload_2
      27: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V
      30: iconst_m1
      31: ireturn
    Exception table:
       from    to  target type
           0    23    24   Class java/io/IOException

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #3                  // Method beforeRead:(I)V
       5: aload_0
       6: getfield      #4                  // Field in:Ljava/io/InputStream;
       9: aload_1
      10: iload_2
      11: iload_3
      12: invokevirtual #11                 // Method java/io/InputStream.read:([BII)I
      15: istore        4
      17: aload_0
      18: iload         4
      20: invokevirtual #6                  // Method afterRead:(I)V
      23: iload         4
      25: ireturn
      26: astore        4
      28: aload_0
      29: aload         4
      31: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V
      34: iconst_m1
      35: ireturn
    Exception table:
       from    to  target type
           0    25    26   Class java/io/IOException

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Ljava/io/InputStream;
       4: lload_1
       5: invokevirtual #12                 // Method java/io/InputStream.skip:(J)J
       8: lreturn
       9: astore_3
      10: aload_0
      11: aload_3
      12: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V
      15: lconst_0
      16: lreturn
    Exception table:
       from    to  target type
           0     8     9   Class java/io/IOException

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/io/FilterInputStream.available:()I
       4: ireturn
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V
      11: iconst_0
      12: ireturn
    Exception table:
       from    to  target type
           0     4     5   Class java/io/IOException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Ljava/io/InputStream;
       4: aload_0
       5: invokedynamic #14,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;
      10: invokestatic  #15                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V
      13: return

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Ljava/io/InputStream;
       4: iload_1
       5: invokevirtual #16                 // Method java/io/InputStream.mark:(I)V
       8: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Ljava/io/InputStream;
       4: invokevirtual #17                 // Method java/io/InputStream.reset:()V
       7: goto          16
      10: astore_1
      11: aload_0
      12: aload_1
      13: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V
      16: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException

  public boolean markSupported();
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Ljava/io/InputStream;
       4: invokevirtual #18                 // Method java/io/InputStream.markSupported:()Z
       7: ireturn

  protected void beforeRead(int) throws java.io.IOException;
    Code:
       0: return

  protected void afterRead(int) throws java.io.IOException;
    Code:
       0: return

  protected void handleIOException(java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_1
       1: athrow

  private void lambda$close$0(java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V
       5: return
}
