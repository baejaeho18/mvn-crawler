Compiled from "DiskFileItemFactory.java"
public class org.apache.commons.fileupload.disk.DiskFileItemFactory implements org.apache.commons.fileupload.FileItemFactory {
  public static final int DEFAULT_SIZE_THRESHOLD;

  private java.io.File repository;

  private int sizeThreshold;

  private org.apache.commons.io.FileCleaningTracker fileCleaningTracker;

  public org.apache.commons.fileupload.disk.DiskFileItemFactory();
    Code:
       0: aload_0
       1: sipush        10240
       4: aconst_null
       5: invokespecial #2                  // Method "<init>":(ILjava/io/File;)V
       8: return

  public org.apache.commons.fileupload.disk.DiskFileItemFactory(int, java.io.File);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        10240
       8: putfield      #4                  // Field sizeThreshold:I
      11: aload_0
      12: iload_1
      13: putfield      #4                  // Field sizeThreshold:I
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field repository:Ljava/io/File;
      21: return

  public java.io.File getRepository();
    Code:
       0: aload_0
       1: getfield      #5                  // Field repository:Ljava/io/File;
       4: areturn

  public void setRepository(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field repository:Ljava/io/File;
       5: return

  public int getSizeThreshold();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sizeThreshold:I
       4: ireturn

  public void setSizeThreshold(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field sizeThreshold:I
       5: return

  public org.apache.commons.fileupload.FileItem createItem(java.lang.String, java.lang.String, boolean, java.lang.String);
    Code:
       0: new           #6                  // class org/apache/commons/fileupload/disk/DiskFileItem
       3: dup
       4: aload_1
       5: aload_2
       6: iload_3
       7: aload         4
       9: aload_0
      10: getfield      #4                  // Field sizeThreshold:I
      13: aload_0
      14: getfield      #5                  // Field repository:Ljava/io/File;
      17: invokespecial #7                  // Method org/apache/commons/fileupload/disk/DiskFileItem."<init>":(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;ILjava/io/File;)V
      20: astore        5
      22: aload_0
      23: invokevirtual #8                  // Method getFileCleaningTracker:()Lorg/apache/commons/io/FileCleaningTracker;
      26: astore        6
      28: aload         6
      30: ifnull        45
      33: aload         6
      35: aload         5
      37: invokevirtual #9                  // Method org/apache/commons/fileupload/disk/DiskFileItem.getTempFile:()Ljava/io/File;
      40: aload         5
      42: invokevirtual #10                 // Method org/apache/commons/io/FileCleaningTracker.track:(Ljava/io/File;Ljava/lang/Object;)V
      45: aload         5
      47: areturn

  public org.apache.commons.io.FileCleaningTracker getFileCleaningTracker();
    Code:
       0: aload_0
       1: getfield      #11                 // Field fileCleaningTracker:Lorg/apache/commons/io/FileCleaningTracker;
       4: areturn

  public void setFileCleaningTracker(org.apache.commons.io.FileCleaningTracker);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field fileCleaningTracker:Lorg/apache/commons/io/FileCleaningTracker;
       5: return
}
