Compiled from "DiskFileItem.java"
public class org.apache.commons.fileupload.disk.DiskFileItem implements org.apache.commons.fileupload.FileItem {
  public static final java.lang.String SERIALIZABLE_PROPERTY;

  private static final long serialVersionUID;

  public static final java.lang.String DEFAULT_CHARSET;

  private static final java.lang.String UID;

  private static final java.util.concurrent.atomic.AtomicInteger COUNTER;

  private java.lang.String fieldName;

  private final java.lang.String contentType;

  private boolean isFormField;

  private final java.lang.String fileName;

  private long size;

  private final int sizeThreshold;

  private final java.io.File repository;

  private byte[] cachedContent;

  private transient org.apache.commons.io.output.DeferredFileOutputStream dfos;

  private transient java.io.File tempFile;

  private java.io.File dfosFile;

  private org.apache.commons.fileupload.FileItemHeaders headers;

  public org.apache.commons.fileupload.disk.DiskFileItem(java.lang.String, java.lang.String, boolean, java.lang.String, int, java.io.File);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long -1l
       8: putfield      #4                  // Field size:J
      11: aload_0
      12: aload_1
      13: putfield      #5                  // Field fieldName:Ljava/lang/String;
      16: aload_0
      17: aload_2
      18: putfield      #6                  // Field contentType:Ljava/lang/String;
      21: aload_0
      22: iload_3
      23: putfield      #7                  // Field isFormField:Z
      26: aload_0
      27: aload         4
      29: putfield      #8                  // Field fileName:Ljava/lang/String;
      32: aload_0
      33: iload         5
      35: putfield      #9                  // Field sizeThreshold:I
      38: aload_0
      39: aload         6
      41: putfield      #10                 // Field repository:Ljava/io/File;
      44: return

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method isInMemory:()Z
       4: ifne          22
       7: new           #12                 // class java/io/FileInputStream
      10: dup
      11: aload_0
      12: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
      15: invokevirtual #14                 // Method org/apache/commons/io/output/DeferredFileOutputStream.getFile:()Ljava/io/File;
      18: invokespecial #15                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      21: areturn
      22: aload_0
      23: getfield      #16                 // Field cachedContent:[B
      26: ifnonnull     40
      29: aload_0
      30: aload_0
      31: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
      34: invokevirtual #17                 // Method org/apache/commons/io/output/DeferredFileOutputStream.getData:()[B
      37: putfield      #16                 // Field cachedContent:[B
      40: new           #18                 // class java/io/ByteArrayInputStream
      43: dup
      44: aload_0
      45: getfield      #16                 // Field cachedContent:[B
      48: invokespecial #19                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      51: areturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field contentType:Ljava/lang/String;
       4: areturn

  public java.lang.String getCharSet();
    Code:
       0: new           #20                 // class org/apache/commons/fileupload/ParameterParser
       3: dup
       4: invokespecial #21                 // Method org/apache/commons/fileupload/ParameterParser."<init>":()V
       7: astore_1
       8: aload_1
       9: iconst_1
      10: invokevirtual #22                 // Method org/apache/commons/fileupload/ParameterParser.setLowerCaseNames:(Z)V
      13: aload_1
      14: aload_0
      15: invokevirtual #23                 // Method getContentType:()Ljava/lang/String;
      18: bipush        59
      20: invokevirtual #24                 // Method org/apache/commons/fileupload/ParameterParser.parse:(Ljava/lang/String;C)Ljava/util/Map;
      23: astore_2
      24: aload_2
      25: ldc           #25                 // String charset
      27: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #27                 // class java/lang/String
      35: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field fileName:Ljava/lang/String;
       4: invokestatic  #28                 // Method org/apache/commons/fileupload/util/Streams.checkFileName:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public boolean isInMemory();
    Code:
       0: aload_0
       1: getfield      #16                 // Field cachedContent:[B
       4: ifnull        9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
      13: invokevirtual #29                 // Method org/apache/commons/io/output/DeferredFileOutputStream.isInMemory:()Z
      16: ireturn

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field size:J
       4: lconst_0
       5: lcmp
       6: iflt          14
       9: aload_0
      10: getfield      #4                  // Field size:J
      13: lreturn
      14: aload_0
      15: getfield      #16                 // Field cachedContent:[B
      18: ifnull        28
      21: aload_0
      22: getfield      #16                 // Field cachedContent:[B
      25: arraylength
      26: i2l
      27: lreturn
      28: aload_0
      29: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
      32: invokevirtual #29                 // Method org/apache/commons/io/output/DeferredFileOutputStream.isInMemory:()Z
      35: ifeq          48
      38: aload_0
      39: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
      42: invokevirtual #17                 // Method org/apache/commons/io/output/DeferredFileOutputStream.getData:()[B
      45: arraylength
      46: i2l
      47: lreturn
      48: aload_0
      49: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
      52: invokevirtual #14                 // Method org/apache/commons/io/output/DeferredFileOutputStream.getFile:()Ljava/io/File;
      55: invokevirtual #30                 // Method java/io/File.length:()J
      58: lreturn

  public byte[] get();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method isInMemory:()Z
       4: ifeq          30
       7: aload_0
       8: getfield      #16                 // Field cachedContent:[B
      11: ifnonnull     25
      14: aload_0
      15: aload_0
      16: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
      19: invokevirtual #17                 // Method org/apache/commons/io/output/DeferredFileOutputStream.getData:()[B
      22: putfield      #16                 // Field cachedContent:[B
      25: aload_0
      26: getfield      #16                 // Field cachedContent:[B
      29: areturn
      30: aload_0
      31: invokevirtual #31                 // Method getSize:()J
      34: l2i
      35: newarray       byte
      37: astore_1
      38: aconst_null
      39: astore_2
      40: new           #32                 // class java/io/BufferedInputStream
      43: dup
      44: new           #12                 // class java/io/FileInputStream
      47: dup
      48: aload_0
      49: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
      52: invokevirtual #14                 // Method org/apache/commons/io/output/DeferredFileOutputStream.getFile:()Ljava/io/File;
      55: invokespecial #15                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      58: invokespecial #33                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      61: astore_2
      62: aload_2
      63: aload_1
      64: invokevirtual #34                 // Method java/io/InputStream.read:([B)I
      67: pop
      68: aload_2
      69: ifnull        119
      72: aload_2
      73: invokevirtual #35                 // Method java/io/InputStream.close:()V
      76: goto          119
      79: astore_3
      80: goto          119
      83: astore_3
      84: aconst_null
      85: astore_1
      86: aload_2
      87: ifnull        119
      90: aload_2
      91: invokevirtual #35                 // Method java/io/InputStream.close:()V
      94: goto          119
      97: astore_3
      98: goto          119
     101: astore        4
     103: aload_2
     104: ifnull        116
     107: aload_2
     108: invokevirtual #35                 // Method java/io/InputStream.close:()V
     111: goto          116
     114: astore        5
     116: aload         4
     118: athrow
     119: aload_1
     120: areturn
    Exception table:
       from    to  target type
          72    76    79   Class java/io/IOException
          40    68    83   Class java/io/IOException
          90    94    97   Class java/io/IOException
          40    68   101   any
          83    86   101   any
         107   111   114   Class java/io/IOException
         101   103   101   any

  public java.lang.String getString(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: new           #27                 // class java/lang/String
       3: dup
       4: aload_0
       5: invokevirtual #37                 // Method get:()[B
       8: aload_1
       9: invokespecial #38                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
      12: areturn

  public java.lang.String getString();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method get:()[B
       4: astore_1
       5: aload_0
       6: invokevirtual #39                 // Method getCharSet:()Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: ifnonnull     17
      14: ldc           #41                 // String ISO-8859-1
      16: astore_2
      17: new           #27                 // class java/lang/String
      20: dup
      21: aload_1
      22: aload_2
      23: invokespecial #38                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
      26: areturn
      27: astore_3
      28: new           #27                 // class java/lang/String
      31: dup
      32: aload_1
      33: invokespecial #43                 // Method java/lang/String."<init>":([B)V
      36: areturn
    Exception table:
       from    to  target type
          17    26    27   Class java/io/UnsupportedEncodingException

  public void write(java.io.File) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method isInMemory:()Z
       4: ifeq          51
       7: aconst_null
       8: astore_2
       9: new           #44                 // class java/io/FileOutputStream
      12: dup
      13: aload_1
      14: invokespecial #45                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      17: astore_2
      18: aload_2
      19: aload_0
      20: invokevirtual #37                 // Method get:()[B
      23: invokevirtual #46                 // Method java/io/FileOutputStream.write:([B)V
      26: aload_2
      27: ifnull        48
      30: aload_2
      31: invokevirtual #47                 // Method java/io/FileOutputStream.close:()V
      34: goto          48
      37: astore_3
      38: aload_2
      39: ifnull        46
      42: aload_2
      43: invokevirtual #47                 // Method java/io/FileOutputStream.close:()V
      46: aload_3
      47: athrow
      48: goto          198
      51: aload_0
      52: invokevirtual #48                 // Method getStoreLocation:()Ljava/io/File;
      55: astore_2
      56: aload_2
      57: ifnull        188
      60: aload_0
      61: aload_2
      62: invokevirtual #30                 // Method java/io/File.length:()J
      65: putfield      #4                  // Field size:J
      68: aload_2
      69: aload_1
      70: invokevirtual #49                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      73: ifne          198
      76: aconst_null
      77: astore_3
      78: aconst_null
      79: astore        4
      81: new           #32                 // class java/io/BufferedInputStream
      84: dup
      85: new           #12                 // class java/io/FileInputStream
      88: dup
      89: aload_2
      90: invokespecial #15                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      93: invokespecial #33                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      96: astore_3
      97: new           #50                 // class java/io/BufferedOutputStream
     100: dup
     101: new           #44                 // class java/io/FileOutputStream
     104: dup
     105: aload_1
     106: invokespecial #45                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
     109: invokespecial #51                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
     112: astore        4
     114: aload_3
     115: aload         4
     117: invokestatic  #52                 // Method org/apache/commons/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I
     120: pop
     121: aload_3
     122: ifnull        134
     125: aload_3
     126: invokevirtual #53                 // Method java/io/BufferedInputStream.close:()V
     129: goto          134
     132: astore        5
     134: aload         4
     136: ifnull        185
     139: aload         4
     141: invokevirtual #54                 // Method java/io/BufferedOutputStream.close:()V
     144: goto          185
     147: astore        5
     149: goto          185
     152: astore        6
     154: aload_3
     155: ifnull        167
     158: aload_3
     159: invokevirtual #53                 // Method java/io/BufferedInputStream.close:()V
     162: goto          167
     165: astore        7
     167: aload         4
     169: ifnull        182
     172: aload         4
     174: invokevirtual #54                 // Method java/io/BufferedOutputStream.close:()V
     177: goto          182
     180: astore        7
     182: aload         6
     184: athrow
     185: goto          198
     188: new           #55                 // class org/apache/commons/fileupload/FileUploadException
     191: dup
     192: ldc           #56                 // String Cannot write uploaded file to disk!
     194: invokespecial #57                 // Method org/apache/commons/fileupload/FileUploadException."<init>":(Ljava/lang/String;)V
     197: athrow
     198: return
    Exception table:
       from    to  target type
           9    26    37   any
         125   129   132   Class java/io/IOException
         139   144   147   Class java/io/IOException
          81   121   152   any
         158   162   165   Class java/io/IOException
         172   177   180   Class java/io/IOException
         152   154   152   any

  public void delete();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #16                 // Field cachedContent:[B
       5: aload_0
       6: invokevirtual #48                 // Method getStoreLocation:()Ljava/io/File;
       9: astore_1
      10: aload_1
      11: ifnull        26
      14: aload_1
      15: invokevirtual #58                 // Method java/io/File.exists:()Z
      18: ifeq          26
      21: aload_1
      22: invokevirtual #59                 // Method java/io/File.delete:()Z
      25: pop
      26: return

  public java.lang.String getFieldName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fieldName:Ljava/lang/String;
       4: areturn

  public void setFieldName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field fieldName:Ljava/lang/String;
       5: return

  public boolean isFormField();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isFormField:Z
       4: ireturn

  public void setFormField(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field isFormField:Z
       5: return

  public java.io.OutputStream getOutputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
       4: ifnonnull     28
       7: aload_0
       8: invokevirtual #60                 // Method getTempFile:()Ljava/io/File;
      11: astore_1
      12: aload_0
      13: new           #61                 // class org/apache/commons/io/output/DeferredFileOutputStream
      16: dup
      17: aload_0
      18: getfield      #9                  // Field sizeThreshold:I
      21: aload_1
      22: invokespecial #62                 // Method org/apache/commons/io/output/DeferredFileOutputStream."<init>":(ILjava/io/File;)V
      25: putfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
      28: aload_0
      29: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
      32: areturn

  public java.io.File getStoreLocation();
    Code:
       0: aload_0
       1: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
      13: invokevirtual #14                 // Method org/apache/commons/io/output/DeferredFileOutputStream.getFile:()Ljava/io/File;
      16: areturn

  protected void finalize();
    Code:
       0: aload_0
       1: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
       4: invokevirtual #14                 // Method org/apache/commons/io/output/DeferredFileOutputStream.getFile:()Ljava/io/File;
       7: astore_1
       8: aload_1
       9: ifnull        24
      12: aload_1
      13: invokevirtual #58                 // Method java/io/File.exists:()Z
      16: ifeq          24
      19: aload_1
      20: invokevirtual #59                 // Method java/io/File.delete:()Z
      23: pop
      24: return

  protected java.io.File getTempFile();
    Code:
       0: aload_0
       1: getfield      #63                 // Field tempFile:Ljava/io/File;
       4: ifnonnull     64
       7: aload_0
       8: getfield      #10                 // Field repository:Ljava/io/File;
      11: astore_1
      12: aload_1
      13: ifnonnull     29
      16: new           #64                 // class java/io/File
      19: dup
      20: ldc           #65                 // String java.io.tmpdir
      22: invokestatic  #66                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      25: invokespecial #67                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      28: astore_1
      29: ldc           #68                 // String upload_%s_%s.tmp
      31: iconst_2
      32: anewarray     #69                 // class java/lang/Object
      35: dup
      36: iconst_0
      37: getstatic     #70                 // Field UID:Ljava/lang/String;
      40: aastore
      41: dup
      42: iconst_1
      43: invokestatic  #71                 // Method getUniqueId:()Ljava/lang/String;
      46: aastore
      47: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      50: astore_2
      51: aload_0
      52: new           #64                 // class java/io/File
      55: dup
      56: aload_1
      57: aload_2
      58: invokespecial #73                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      61: putfield      #63                 // Field tempFile:Ljava/io/File;
      64: aload_0
      65: getfield      #63                 // Field tempFile:Ljava/io/File;
      68: areturn

  private static java.lang.String getUniqueId();
    Code:
       0: ldc           #74                 // int 100000000
       2: istore_0
       3: getstatic     #75                 // Field COUNTER:Ljava/util/concurrent/atomic/AtomicInteger;
       6: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       9: istore_1
      10: iload_1
      11: invokestatic  #77                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      14: astore_2
      15: iload_1
      16: ldc           #74                 // int 100000000
      18: if_icmpge     48
      21: new           #78                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #80                 // String 00000000
      30: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: aload_2
      41: invokevirtual #83                 // Method java/lang/String.length:()I
      44: invokevirtual #84                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      47: astore_2
      48: aload_2
      49: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #85                 // String name=%s, StoreLocation=%s, size=%s bytes, isFormField=%s, FieldName=%s
       2: iconst_5
       3: anewarray     #69                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #86                 // Method getName:()Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: invokevirtual #48                 // Method getStoreLocation:()Ljava/io/File;
      19: aastore
      20: dup
      21: iconst_2
      22: aload_0
      23: invokevirtual #31                 // Method getSize:()J
      26: invokestatic  #87                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: aastore
      30: dup
      31: iconst_3
      32: aload_0
      33: invokevirtual #88                 // Method isFormField:()Z
      36: invokestatic  #89                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      39: aastore
      40: dup
      41: iconst_4
      42: aload_0
      43: invokevirtual #90                 // Method getFieldName:()Ljava/lang/String;
      46: aastore
      47: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      50: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
       4: invokevirtual #29                 // Method org/apache/commons/io/output/DeferredFileOutputStream.isInMemory:()Z
       7: ifeq          21
      10: aload_0
      11: aload_0
      12: invokevirtual #37                 // Method get:()[B
      15: putfield      #16                 // Field cachedContent:[B
      18: goto          37
      21: aload_0
      22: aconst_null
      23: putfield      #16                 // Field cachedContent:[B
      26: aload_0
      27: aload_0
      28: getfield      #13                 // Field dfos:Lorg/apache/commons/io/output/DeferredFileOutputStream;
      31: invokevirtual #14                 // Method org/apache/commons/io/output/DeferredFileOutputStream.getFile:()Ljava/io/File;
      34: putfield      #91                 // Field dfosFile:Ljava/io/File;
      37: aload_1
      38: invokevirtual #92                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
      41: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: getstatic     #93                 // Field SERIALIZABLE_PROPERTY:Ljava/lang/String;
       3: invokestatic  #94                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       6: ifne          43
       9: new           #95                 // class java/lang/IllegalStateException
      12: dup
      13: new           #78                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #96                 // String Property
      22: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: getstatic     #93                 // Field SERIALIZABLE_PROPERTY:Ljava/lang/String;
      28: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #97                 // String  is not true, rejecting to deserialize a DiskFileItem.
      33: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #98                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_1
      44: invokevirtual #99                 // Method java/io/ObjectInputStream.defaultReadObject:()V
      47: aload_0
      48: getfield      #10                 // Field repository:Ljava/io/File;
      51: ifnull        133
      54: aload_0
      55: getfield      #10                 // Field repository:Ljava/io/File;
      58: invokevirtual #100                // Method java/io/File.isDirectory:()Z
      61: ifeq          106
      64: aload_0
      65: getfield      #10                 // Field repository:Ljava/io/File;
      68: invokevirtual #101                // Method java/io/File.getPath:()Ljava/lang/String;
      71: ldc           #102                // String \u0000
      73: invokevirtual #103                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      76: ifeq          133
      79: new           #36                 // class java/io/IOException
      82: dup
      83: ldc           #104                // String The repository [%s] contains a null character
      85: iconst_1
      86: anewarray     #69                 // class java/lang/Object
      89: dup
      90: iconst_0
      91: aload_0
      92: getfield      #10                 // Field repository:Ljava/io/File;
      95: invokevirtual #101                // Method java/io/File.getPath:()Ljava/lang/String;
      98: aastore
      99: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     102: invokespecial #105                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     105: athrow
     106: new           #36                 // class java/io/IOException
     109: dup
     110: ldc           #106                // String The repository [%s] is not a directory
     112: iconst_1
     113: anewarray     #69                 // class java/lang/Object
     116: dup
     117: iconst_0
     118: aload_0
     119: getfield      #10                 // Field repository:Ljava/io/File;
     122: invokevirtual #107                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     125: aastore
     126: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     129: invokespecial #105                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     132: athrow
     133: aload_0
     134: invokevirtual #108                // Method getOutputStream:()Ljava/io/OutputStream;
     137: astore_2
     138: aload_0
     139: getfield      #16                 // Field cachedContent:[B
     142: ifnull        156
     145: aload_2
     146: aload_0
     147: getfield      #16                 // Field cachedContent:[B
     150: invokevirtual #109                // Method java/io/OutputStream.write:([B)V
     153: goto          187
     156: new           #12                 // class java/io/FileInputStream
     159: dup
     160: aload_0
     161: getfield      #91                 // Field dfosFile:Ljava/io/File;
     164: invokespecial #15                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
     167: astore_3
     168: aload_3
     169: aload_2
     170: invokestatic  #52                 // Method org/apache/commons/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I
     173: pop
     174: aload_0
     175: getfield      #91                 // Field dfosFile:Ljava/io/File;
     178: invokevirtual #59                 // Method java/io/File.delete:()Z
     181: pop
     182: aload_0
     183: aconst_null
     184: putfield      #91                 // Field dfosFile:Ljava/io/File;
     187: aload_2
     188: invokevirtual #110                // Method java/io/OutputStream.close:()V
     191: aload_0
     192: aconst_null
     193: putfield      #16                 // Field cachedContent:[B
     196: return

  public org.apache.commons.fileupload.FileItemHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #111                // Field headers:Lorg/apache/commons/fileupload/FileItemHeaders;
       4: areturn

  public void setHeaders(org.apache.commons.fileupload.FileItemHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #111                // Field headers:Lorg/apache/commons/fileupload/FileItemHeaders;
       5: return

  static {};
    Code:
       0: new           #78                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #40                 // class org/apache/commons/fileupload/disk/DiskFileItem
       9: invokevirtual #112                // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #113                // String .serializable
      17: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: putstatic     #93                 // Field SERIALIZABLE_PROPERTY:Ljava/lang/String;
      26: invokestatic  #114                // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      29: invokevirtual #115                // Method java/util/UUID.toString:()Ljava/lang/String;
      32: bipush        45
      34: bipush        95
      36: invokevirtual #116                // Method java/lang/String.replace:(CC)Ljava/lang/String;
      39: putstatic     #70                 // Field UID:Ljava/lang/String;
      42: new           #117                // class java/util/concurrent/atomic/AtomicInteger
      45: dup
      46: iconst_0
      47: invokespecial #118                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      50: putstatic     #75                 // Field COUNTER:Ljava/util/concurrent/atomic/AtomicInteger;
      53: return
}
