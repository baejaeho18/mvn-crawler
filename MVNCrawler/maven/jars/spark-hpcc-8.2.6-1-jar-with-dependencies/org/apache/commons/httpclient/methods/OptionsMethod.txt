Compiled from "OptionsMethod.java"
public class org.apache.commons.httpclient.methods.OptionsMethod extends org.apache.commons.httpclient.HttpMethodBase {
  private static final org.apache.commons.logging.Log LOG;

  private java.util.Vector methodsAllowed;

  static java.lang.Class class$org$apache$commons$httpclient$methods$OptionsMethod;

  public org.apache.commons.httpclient.methods.OptionsMethod();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/commons/httpclient/HttpMethodBase."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/Vector
       8: dup
       9: invokespecial #8                  // Method java/util/Vector."<init>":()V
      12: putfield      #9                  // Field methodsAllowed:Ljava/util/Vector;
      15: return

  public org.apache.commons.httpclient.methods.OptionsMethod(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method org/apache/commons/httpclient/HttpMethodBase."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #7                  // class java/util/Vector
       9: dup
      10: invokespecial #8                  // Method java/util/Vector."<init>":()V
      13: putfield      #9                  // Field methodsAllowed:Ljava/util/Vector;
      16: return

  public java.lang.String getName();
    Code:
       0: ldc           #11                 // String OPTIONS
       2: areturn

  public boolean isAllowed(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method checkUsed:()V
       4: aload_0
       5: getfield      #9                  // Field methodsAllowed:Ljava/util/Vector;
       8: aload_1
       9: invokevirtual #13                 // Method java/util/Vector.contains:(Ljava/lang/Object;)Z
      12: ireturn

  public java.util.Enumeration getAllowedMethods();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method checkUsed:()V
       4: aload_0
       5: getfield      #9                  // Field methodsAllowed:Ljava/util/Vector;
       8: invokevirtual #14                 // Method java/util/Vector.elements:()Ljava/util/Enumeration;
      11: areturn

  protected void processResponseHeaders(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection);
    Code:
       0: getstatic     #15                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #16                 // String enter OptionsMethod.processResponseHeaders(HttpState, HttpConnection)
       5: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: ldc           #18                 // String allow
      13: invokevirtual #19                 // Method getResponseHeader:(Ljava/lang/String;)Lorg/apache/commons/httpclient/Header;
      16: astore_3
      17: aload_3
      18: ifnull        73
      21: aload_3
      22: invokevirtual #20                 // Method org/apache/commons/httpclient/Header.getValue:()Ljava/lang/String;
      25: astore        4
      27: new           #21                 // class java/util/StringTokenizer
      30: dup
      31: aload         4
      33: ldc           #22                 // String ,
      35: invokespecial #23                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      38: astore        5
      40: aload         5
      42: invokevirtual #24                 // Method java/util/StringTokenizer.hasMoreElements:()Z
      45: ifeq          73
      48: aload         5
      50: invokevirtual #25                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      53: invokevirtual #26                 // Method java/lang/String.trim:()Ljava/lang/String;
      56: invokevirtual #27                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      59: astore        6
      61: aload_0
      62: getfield      #9                  // Field methodsAllowed:Ljava/util/Vector;
      65: aload         6
      67: invokevirtual #28                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      70: goto          40
      73: return

  public boolean needContentLength();
    Code:
       0: iconst_0
       1: ireturn

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/ClassNotFoundException.getMessage:()Ljava/lang/String;
      14: invokespecial #5                  // Method java/lang/NoClassDefFoundError."<init>":(Ljava/lang/String;)V
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: getstatic     #29                 // Field class$org$apache$commons$httpclient$methods$OptionsMethod:Ljava/lang/Class;
       3: ifnonnull     18
       6: ldc           #30                 // String org.apache.commons.httpclient.methods.OptionsMethod
       8: invokestatic  #31                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      11: dup
      12: putstatic     #29                 // Field class$org$apache$commons$httpclient$methods$OptionsMethod:Ljava/lang/Class;
      15: goto          21
      18: getstatic     #29                 // Field class$org$apache$commons$httpclient$methods$OptionsMethod:Ljava/lang/Class;
      21: invokestatic  #32                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      24: putstatic     #15                 // Field LOG:Lorg/apache/commons/logging/Log;
      27: return
}
