Compiled from "ChunkedInputStream.java"
public class org.apache.commons.httpclient.ChunkedInputStream extends java.io.InputStream {
  private java.io.InputStream in;

  private int chunkSize;

  private int pos;

  private boolean bof;

  private boolean eof;

  private boolean closed;

  private org.apache.commons.httpclient.HttpMethod method;

  private static final org.apache.commons.logging.Log LOG;

  static java.lang.Class class$org$apache$commons$httpclient$ChunkedInputStream;

  public org.apache.commons.httpclient.ChunkedInputStream(java.io.InputStream, org.apache.commons.httpclient.HttpMethod) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #7                  // Field bof:Z
       9: aload_0
      10: iconst_0
      11: putfield      #8                  // Field eof:Z
      14: aload_0
      15: iconst_0
      16: putfield      #9                  // Field closed:Z
      19: aload_0
      20: aconst_null
      21: putfield      #10                 // Field method:Lorg/apache/commons/httpclient/HttpMethod;
      24: aload_1
      25: ifnonnull     38
      28: new           #11                 // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #12                 // String InputStream parameter may not be null
      34: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aload_1
      40: putfield      #14                 // Field in:Ljava/io/InputStream;
      43: aload_0
      44: aload_2
      45: putfield      #10                 // Field method:Lorg/apache/commons/httpclient/HttpMethod;
      48: aload_0
      49: iconst_0
      50: putfield      #15                 // Field pos:I
      53: return

  public org.apache.commons.httpclient.ChunkedInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #16                 // Method "<init>":(Ljava/io/InputStream;Lorg/apache/commons/httpclient/HttpMethod;)V
       6: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field closed:Z
       4: ifeq          17
       7: new           #17                 // class java/io/IOException
      10: dup
      11: ldc           #18                 // String Attempted read from closed stream.
      13: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #8                  // Field eof:Z
      21: ifeq          26
      24: iconst_m1
      25: ireturn
      26: aload_0
      27: getfield      #15                 // Field pos:I
      30: aload_0
      31: getfield      #20                 // Field chunkSize:I
      34: if_icmplt     50
      37: aload_0
      38: invokespecial #21                 // Method nextChunk:()V
      41: aload_0
      42: getfield      #8                  // Field eof:Z
      45: ifeq          50
      48: iconst_m1
      49: ireturn
      50: aload_0
      51: dup
      52: getfield      #15                 // Field pos:I
      55: iconst_1
      56: iadd
      57: putfield      #15                 // Field pos:I
      60: aload_0
      61: getfield      #14                 // Field in:Ljava/io/InputStream;
      64: invokevirtual #22                 // Method java/io/InputStream.read:()I
      67: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field closed:Z
       4: ifeq          17
       7: new           #17                 // class java/io/IOException
      10: dup
      11: ldc           #18                 // String Attempted read from closed stream.
      13: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #8                  // Field eof:Z
      21: ifeq          26
      24: iconst_m1
      25: ireturn
      26: aload_0
      27: getfield      #15                 // Field pos:I
      30: aload_0
      31: getfield      #20                 // Field chunkSize:I
      34: if_icmplt     50
      37: aload_0
      38: invokespecial #21                 // Method nextChunk:()V
      41: aload_0
      42: getfield      #8                  // Field eof:Z
      45: ifeq          50
      48: iconst_m1
      49: ireturn
      50: iload_3
      51: aload_0
      52: getfield      #20                 // Field chunkSize:I
      55: aload_0
      56: getfield      #15                 // Field pos:I
      59: isub
      60: invokestatic  #23                 // Method java/lang/Math.min:(II)I
      63: istore_3
      64: aload_0
      65: getfield      #14                 // Field in:Ljava/io/InputStream;
      68: aload_1
      69: iload_2
      70: iload_3
      71: invokevirtual #24                 // Method java/io/InputStream.read:([BII)I
      74: istore        4
      76: aload_0
      77: dup
      78: getfield      #15                 // Field pos:I
      81: iload         4
      83: iadd
      84: putfield      #15                 // Field pos:I
      87: iload         4
      89: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #25                 // Method read:([BII)I
       8: ireturn

  private void readCRLF() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field in:Ljava/io/InputStream;
       4: invokevirtual #22                 // Method java/io/InputStream.read:()I
       7: istore_1
       8: aload_0
       9: getfield      #14                 // Field in:Ljava/io/InputStream;
      12: invokevirtual #22                 // Method java/io/InputStream.read:()I
      15: istore_2
      16: iload_1
      17: bipush        13
      19: if_icmpne     28
      22: iload_2
      23: bipush        10
      25: if_icmpeq     64
      28: new           #17                 // class java/io/IOException
      31: dup
      32: new           #26                 // class java/lang/StringBuffer
      35: dup
      36: invokespecial #27                 // Method java/lang/StringBuffer."<init>":()V
      39: ldc           #28                 // String CRLF expected at end of chunk:
      41: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      44: iload_1
      45: invokevirtual #30                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      48: ldc           #31                 // String /
      50: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      53: iload_2
      54: invokevirtual #30                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      57: invokevirtual #32                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      60: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: return

  private void nextChunk() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bof:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #33                 // Method readCRLF:()V
      11: aload_0
      12: aload_0
      13: getfield      #14                 // Field in:Ljava/io/InputStream;
      16: invokestatic  #34                 // Method getChunkSizeFromInputStream:(Ljava/io/InputStream;)I
      19: putfield      #20                 // Field chunkSize:I
      22: aload_0
      23: iconst_0
      24: putfield      #7                  // Field bof:Z
      27: aload_0
      28: iconst_0
      29: putfield      #15                 // Field pos:I
      32: aload_0
      33: getfield      #20                 // Field chunkSize:I
      36: ifne          48
      39: aload_0
      40: iconst_1
      41: putfield      #8                  // Field eof:Z
      44: aload_0
      45: invokespecial #35                 // Method parseTrailerHeaders:()V
      48: return

  private static int getChunkSizeFromInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #36                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #37                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: iconst_m1
      12: if_icmpeq     192
      15: aload_0
      16: invokevirtual #22                 // Method java/io/InputStream.read:()I
      19: istore_3
      20: iload_3
      21: iconst_m1
      22: if_icmpne     35
      25: new           #17                 // class java/io/IOException
      28: dup
      29: ldc           #38                 // String chunked stream ended unexpectedly
      31: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: iload_2
      36: tableswitch   { // 0 to 2
                     0: 64
                     1: 107
                     2: 128
               default: 179
          }
      64: iload_3
      65: lookupswitch  { // 2
                    13: 92
                    34: 97
               default: 99
          }
      92: iconst_1
      93: istore_2
      94: goto          189
      97: iconst_2
      98: istore_2
      99: aload_1
     100: iload_3
     101: invokevirtual #39                 // Method java/io/ByteArrayOutputStream.write:(I)V
     104: goto          189
     107: iload_3
     108: bipush        10
     110: if_icmpne     118
     113: iconst_m1
     114: istore_2
     115: goto          189
     118: new           #17                 // class java/io/IOException
     121: dup
     122: ldc           #40                 // String Protocol violation: Unexpected single newline character in chunk size
     124: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     127: athrow
     128: iload_3
     129: lookupswitch  { // 2
                    34: 169
                    92: 156
               default: 171
          }
     156: aload_0
     157: invokevirtual #22                 // Method java/io/InputStream.read:()I
     160: istore_3
     161: aload_1
     162: iload_3
     163: invokevirtual #39                 // Method java/io/ByteArrayOutputStream.write:(I)V
     166: goto          189
     169: iconst_0
     170: istore_2
     171: aload_1
     172: iload_3
     173: invokevirtual #39                 // Method java/io/ByteArrayOutputStream.write:(I)V
     176: goto          189
     179: new           #41                 // class java/lang/RuntimeException
     182: dup
     183: ldc           #42                 // String assertion failed
     185: invokespecial #43                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     188: athrow
     189: goto          10
     192: aload_1
     193: invokevirtual #44                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     196: invokestatic  #45                 // Method org/apache/commons/httpclient/util/EncodingUtil.getAsciiString:([B)Ljava/lang/String;
     199: astore_3
     200: aload_3
     201: bipush        59
     203: invokevirtual #46                 // Method java/lang/String.indexOf:(I)I
     206: istore        4
     208: iload         4
     210: ifle          226
     213: aload_3
     214: iconst_0
     215: iload         4
     217: invokevirtual #47                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     220: invokevirtual #48                 // Method java/lang/String.trim:()Ljava/lang/String;
     223: goto          230
     226: aload_3
     227: invokevirtual #48                 // Method java/lang/String.trim:()Ljava/lang/String;
     230: astore_3
     231: aload_3
     232: invokevirtual #48                 // Method java/lang/String.trim:()Ljava/lang/String;
     235: bipush        16
     237: invokestatic  #49                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
     240: istore        5
     242: goto          274
     245: astore        6
     247: new           #17                 // class java/io/IOException
     250: dup
     251: new           #26                 // class java/lang/StringBuffer
     254: dup
     255: invokespecial #27                 // Method java/lang/StringBuffer."<init>":()V
     258: ldc           #51                 // String Bad chunk size:
     260: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     263: aload_3
     264: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     267: invokevirtual #32                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     270: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     273: athrow
     274: iload         5
     276: ireturn
    Exception table:
       from    to  target type
         231   242   245   Class java/lang/NumberFormatException

  private void parseTrailerHeaders() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: ldc           #52                 // String US-ASCII
       4: astore_2
       5: aload_0
       6: getfield      #10                 // Field method:Lorg/apache/commons/httpclient/HttpMethod;
       9: ifnull        25
      12: aload_0
      13: getfield      #10                 // Field method:Lorg/apache/commons/httpclient/HttpMethod;
      16: invokeinterface #53,  1           // InterfaceMethod org/apache/commons/httpclient/HttpMethod.getParams:()Lorg/apache/commons/httpclient/params/HttpMethodParams;
      21: invokevirtual #54                 // Method org/apache/commons/httpclient/params/HttpMethodParams.getHttpElementCharset:()Ljava/lang/String;
      24: astore_2
      25: aload_0
      26: getfield      #14                 // Field in:Ljava/io/InputStream;
      29: aload_2
      30: invokestatic  #55                 // Method org/apache/commons/httpclient/HttpParser.parseHeaders:(Ljava/io/InputStream;Ljava/lang/String;)[Lorg/apache/commons/httpclient/Header;
      33: astore_1
      34: goto          68
      37: astore_2
      38: getstatic     #57                 // Field LOG:Lorg/apache/commons/logging/Log;
      41: ldc           #58                 // String Error parsing trailer headers
      43: aload_2
      44: invokeinterface #59,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      49: new           #17                 // class java/io/IOException
      52: dup
      53: aload_2
      54: invokevirtual #60                 // Method org/apache/commons/httpclient/HttpException.getMessage:()Ljava/lang/String;
      57: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      60: astore_3
      61: aload_3
      62: aload_2
      63: invokestatic  #61                 // Method org/apache/commons/httpclient/util/ExceptionUtil.initCause:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
      66: aload_3
      67: athrow
      68: aload_0
      69: getfield      #10                 // Field method:Lorg/apache/commons/httpclient/HttpMethod;
      72: ifnull        101
      75: iconst_0
      76: istore_2
      77: iload_2
      78: aload_1
      79: arraylength
      80: if_icmpge     101
      83: aload_0
      84: getfield      #10                 // Field method:Lorg/apache/commons/httpclient/HttpMethod;
      87: aload_1
      88: iload_2
      89: aaload
      90: invokeinterface #62,  2           // InterfaceMethod org/apache/commons/httpclient/HttpMethod.addResponseFooter:(Lorg/apache/commons/httpclient/Header;)V
      95: iinc          2, 1
      98: goto          77
     101: return
    Exception table:
       from    to  target type
           2    34    37   Class org/apache/commons/httpclient/HttpException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field closed:Z
       4: ifne          44
       7: aload_0
       8: getfield      #8                  // Field eof:Z
      11: ifne          18
      14: aload_0
      15: invokestatic  #63                 // Method exhaustInputStream:(Ljava/io/InputStream;)V
      18: aload_0
      19: iconst_1
      20: putfield      #8                  // Field eof:Z
      23: aload_0
      24: iconst_1
      25: putfield      #9                  // Field closed:Z
      28: goto          44
      31: astore_1
      32: aload_0
      33: iconst_1
      34: putfield      #8                  // Field eof:Z
      37: aload_0
      38: iconst_1
      39: putfield      #9                  // Field closed:Z
      42: aload_1
      43: athrow
      44: return
    Exception table:
       from    to  target type
           7    18    31   any
          31    32    31   any

  static void exhaustInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: sipush        1024
       3: newarray       byte
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokevirtual #64                 // Method java/io/InputStream.read:([B)I
      11: iflt          17
      14: goto          6
      17: return

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/ClassNotFoundException.getMessage:()Ljava/lang/String;
      14: invokespecial #5                  // Method java/lang/NoClassDefFoundError."<init>":(Ljava/lang/String;)V
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: getstatic     #65                 // Field class$org$apache$commons$httpclient$ChunkedInputStream:Ljava/lang/Class;
       3: ifnonnull     18
       6: ldc           #66                 // String org.apache.commons.httpclient.ChunkedInputStream
       8: invokestatic  #67                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      11: dup
      12: putstatic     #65                 // Field class$org$apache$commons$httpclient$ChunkedInputStream:Ljava/lang/Class;
      15: goto          21
      18: getstatic     #65                 // Field class$org$apache$commons$httpclient$ChunkedInputStream:Ljava/lang/Class;
      21: invokestatic  #68                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      24: putstatic     #57                 // Field LOG:Lorg/apache/commons/logging/Log;
      27: return
}
