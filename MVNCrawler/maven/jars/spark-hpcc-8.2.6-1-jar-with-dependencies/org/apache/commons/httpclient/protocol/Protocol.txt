Compiled from "Protocol.java"
public class org.apache.commons.httpclient.protocol.Protocol {
  private static final java.util.Map PROTOCOLS;

  private java.lang.String scheme;

  private org.apache.commons.httpclient.protocol.ProtocolSocketFactory socketFactory;

  private int defaultPort;

  private boolean secure;

  public static void registerProtocol(java.lang.String, org.apache.commons.httpclient.protocol.Protocol);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #1                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #2                  // String id is null
      10: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ifnonnull     28
      18: new           #1                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #4                  // String protocol is null
      24: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: getstatic     #5                  // Field PROTOCOLS:Ljava/util/Map;
      31: aload_0
      32: aload_1
      33: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: return

  public static void unregisterProtocol(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #1                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #2                  // String id is null
      10: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #5                  // Field PROTOCOLS:Ljava/util/Map;
      17: aload_0
      18: invokeinterface #7,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  public static org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #1                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #2                  // String id is null
      10: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #5                  // Field PROTOCOLS:Ljava/util/Map;
      17: aload_0
      18: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #9                  // class org/apache/commons/httpclient/protocol/Protocol
      26: astore_1
      27: aload_1
      28: ifnonnull     36
      31: aload_0
      32: invokestatic  #10                 // Method lazyRegisterProtocol:(Ljava/lang/String;)Lorg/apache/commons/httpclient/protocol/Protocol;
      35: astore_1
      36: aload_1
      37: areturn

  private static org.apache.commons.httpclient.protocol.Protocol lazyRegisterProtocol(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: ldc           #11                 // String http
       2: aload_0
       3: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          32
       9: new           #9                  // class org/apache/commons/httpclient/protocol/Protocol
      12: dup
      13: ldc           #11                 // String http
      15: invokestatic  #13                 // Method org/apache/commons/httpclient/protocol/DefaultProtocolSocketFactory.getSocketFactory:()Lorg/apache/commons/httpclient/protocol/DefaultProtocolSocketFactory;
      18: bipush        80
      20: invokespecial #14                 // Method "<init>":(Ljava/lang/String;Lorg/apache/commons/httpclient/protocol/ProtocolSocketFactory;I)V
      23: astore_1
      24: ldc           #11                 // String http
      26: aload_1
      27: invokestatic  #15                 // Method registerProtocol:(Ljava/lang/String;Lorg/apache/commons/httpclient/protocol/Protocol;)V
      30: aload_1
      31: areturn
      32: ldc           #16                 // String https
      34: aload_0
      35: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          65
      41: new           #9                  // class org/apache/commons/httpclient/protocol/Protocol
      44: dup
      45: ldc           #16                 // String https
      47: invokestatic  #17                 // Method org/apache/commons/httpclient/protocol/SSLProtocolSocketFactory.getSocketFactory:()Lorg/apache/commons/httpclient/protocol/SSLProtocolSocketFactory;
      50: sipush        443
      53: invokespecial #18                 // Method "<init>":(Ljava/lang/String;Lorg/apache/commons/httpclient/protocol/SecureProtocolSocketFactory;I)V
      56: astore_1
      57: ldc           #16                 // String https
      59: aload_1
      60: invokestatic  #15                 // Method registerProtocol:(Ljava/lang/String;Lorg/apache/commons/httpclient/protocol/Protocol;)V
      63: aload_1
      64: areturn
      65: new           #19                 // class java/lang/IllegalStateException
      68: dup
      69: new           #20                 // class java/lang/StringBuffer
      72: dup
      73: invokespecial #21                 // Method java/lang/StringBuffer."<init>":()V
      76: ldc           #22                 // String unsupported protocol: \'
      78: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      81: aload_0
      82: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      85: ldc           #24                 // String \'
      87: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      90: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      93: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      96: athrow

  public org.apache.commons.httpclient.protocol.Protocol(java.lang.String, org.apache.commons.httpclient.protocol.ProtocolSocketFactory, int);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #1                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #28                 // String scheme is null
      14: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #1                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #29                 // String socketFactory is null
      28: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: iload_3
      33: ifgt          63
      36: new           #1                  // class java/lang/IllegalArgumentException
      39: dup
      40: new           #20                 // class java/lang/StringBuffer
      43: dup
      44: invokespecial #21                 // Method java/lang/StringBuffer."<init>":()V
      47: ldc           #30                 // String port is invalid:
      49: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      52: iload_3
      53: invokevirtual #31                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      56: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      59: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_0
      64: aload_1
      65: putfield      #32                 // Field scheme:Ljava/lang/String;
      68: aload_0
      69: aload_2
      70: putfield      #33                 // Field socketFactory:Lorg/apache/commons/httpclient/protocol/ProtocolSocketFactory;
      73: aload_0
      74: iload_3
      75: putfield      #34                 // Field defaultPort:I
      78: aload_0
      79: aload_2
      80: instanceof    #35                 // class org/apache/commons/httpclient/protocol/SecureProtocolSocketFactory
      83: putfield      #36                 // Field secure:Z
      86: return

  public org.apache.commons.httpclient.protocol.Protocol(java.lang.String, org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #14                 // Method "<init>":(Ljava/lang/String;Lorg/apache/commons/httpclient/protocol/ProtocolSocketFactory;I)V
       7: return

  public int getDefaultPort();
    Code:
       0: aload_0
       1: getfield      #34                 // Field defaultPort:I
       4: ireturn

  public org.apache.commons.httpclient.protocol.ProtocolSocketFactory getSocketFactory();
    Code:
       0: aload_0
       1: getfield      #33                 // Field socketFactory:Lorg/apache/commons/httpclient/protocol/ProtocolSocketFactory;
       4: areturn

  public java.lang.String getScheme();
    Code:
       0: aload_0
       1: getfield      #32                 // Field scheme:Ljava/lang/String;
       4: areturn

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #36                 // Field secure:Z
       4: ireturn

  public int resolvePort(int);
    Code:
       0: iload_1
       1: ifgt          11
       4: aload_0
       5: invokevirtual #37                 // Method getDefaultPort:()I
       8: goto          12
      11: iload_1
      12: ireturn

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuffer."<init>":()V
       7: aload_0
       8: getfield      #32                 // Field scheme:Ljava/lang/String;
      11: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: ldc           #38                 // String :
      16: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: aload_0
      20: getfield      #34                 // Field defaultPort:I
      23: invokevirtual #31                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      26: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      29: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #9                  // class org/apache/commons/httpclient/protocol/Protocol
       4: ifeq          68
       7: aload_1
       8: checkcast     #9                  // class org/apache/commons/httpclient/protocol/Protocol
      11: astore_2
      12: aload_0
      13: getfield      #34                 // Field defaultPort:I
      16: aload_2
      17: invokevirtual #37                 // Method getDefaultPort:()I
      20: if_icmpne     66
      23: aload_0
      24: getfield      #32                 // Field scheme:Ljava/lang/String;
      27: aload_2
      28: invokevirtual #39                 // Method getScheme:()Ljava/lang/String;
      31: invokevirtual #40                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      34: ifeq          66
      37: aload_0
      38: getfield      #36                 // Field secure:Z
      41: aload_2
      42: invokevirtual #41                 // Method isSecure:()Z
      45: if_icmpne     66
      48: aload_0
      49: getfield      #33                 // Field socketFactory:Lorg/apache/commons/httpclient/protocol/ProtocolSocketFactory;
      52: aload_2
      53: invokevirtual #42                 // Method getSocketFactory:()Lorg/apache/commons/httpclient/protocol/ProtocolSocketFactory;
      56: invokevirtual #43                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      59: ifeq          66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: ireturn
      68: iconst_0
      69: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: iload_1
       4: aload_0
       5: getfield      #34                 // Field defaultPort:I
       8: invokestatic  #44                 // Method org/apache/commons/httpclient/util/LangUtils.hashCode:(II)I
      11: istore_1
      12: iload_1
      13: aload_0
      14: getfield      #32                 // Field scheme:Ljava/lang/String;
      17: invokevirtual #45                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      20: invokestatic  #46                 // Method org/apache/commons/httpclient/util/LangUtils.hashCode:(ILjava/lang/Object;)I
      23: istore_1
      24: iload_1
      25: aload_0
      26: getfield      #36                 // Field secure:Z
      29: invokestatic  #47                 // Method org/apache/commons/httpclient/util/LangUtils.hashCode:(IZ)I
      32: istore_1
      33: iload_1
      34: aload_0
      35: getfield      #33                 // Field socketFactory:Lorg/apache/commons/httpclient/protocol/ProtocolSocketFactory;
      38: invokestatic  #46                 // Method org/apache/commons/httpclient/util/LangUtils.hashCode:(ILjava/lang/Object;)I
      41: istore_1
      42: iload_1
      43: ireturn

  static {};
    Code:
       0: new           #48                 // class java/util/HashMap
       3: dup
       4: invokespecial #49                 // Method java/util/HashMap."<init>":()V
       7: invokestatic  #50                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      10: putstatic     #5                  // Field PROTOCOLS:Ljava/util/Map;
      13: return
}
