Compiled from "PolicyContainingPrimitiveAssertion.java"
public class org.apache.neethi.builders.PolicyContainingPrimitiveAssertion extends org.apache.neethi.builders.PrimitiveAssertion implements org.apache.neethi.PolicyContainingAssertion {
  protected org.apache.neethi.Policy nested;

  public org.apache.neethi.builders.PolicyContainingPrimitiveAssertion(javax.xml.namespace.QName, boolean, boolean, org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #1                  // Method org/apache/neethi/builders/PrimitiveAssertion."<init>":(Ljavax/xml/namespace/QName;ZZ)V
       7: aload_0
       8: aload         4
      10: putfield      #2                  // Field nested:Lorg/apache/neethi/Policy;
      13: return

  public org.apache.neethi.builders.PolicyContainingPrimitiveAssertion(javax.xml.namespace.QName, boolean, boolean, java.util.Map<javax.xml.namespace.QName, java.lang.String>, org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: invokespecial #3                  // Method org/apache/neethi/builders/PrimitiveAssertion."<init>":(Ljavax/xml/namespace/QName;ZZLjava/util/Map;)V
       9: aload_0
      10: aload         5
      12: putfield      #2                  // Field nested:Lorg/apache/neethi/Policy;
      15: return

  public org.apache.neethi.PolicyComponent normalize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nested:Lorg/apache/neethi/Policy;
       4: iconst_1
       5: invokevirtual #4                  // Method org/apache/neethi/Policy.normalize:(Z)Lorg/apache/neethi/Policy;
       8: astore_1
       9: new           #5                  // class org/apache/neethi/Policy
      12: dup
      13: aload_0
      14: getfield      #2                  // Field nested:Lorg/apache/neethi/Policy;
      17: invokevirtual #6                  // Method org/apache/neethi/Policy.getPolicyRegistry:()Lorg/apache/neethi/PolicyRegistry;
      20: aload_0
      21: getfield      #2                  // Field nested:Lorg/apache/neethi/Policy;
      24: invokevirtual #7                  // Method org/apache/neethi/Policy.getNamespace:()Ljava/lang/String;
      27: invokespecial #8                  // Method org/apache/neethi/Policy."<init>":(Lorg/apache/neethi/PolicyRegistry;Ljava/lang/String;)V
      30: astore_2
      31: new           #9                  // class org/apache/neethi/ExactlyOne
      34: dup
      35: invokespecial #10                 // Method org/apache/neethi/ExactlyOne."<init>":()V
      38: astore_3
      39: aload_2
      40: aload_3
      41: invokevirtual #11                 // Method org/apache/neethi/Policy.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
      44: aload_0
      45: invokevirtual #12                 // Method isOptional:()Z
      48: ifeq          62
      51: aload_3
      52: new           #13                 // class org/apache/neethi/All
      55: dup
      56: invokespecial #14                 // Method org/apache/neethi/All."<init>":()V
      59: invokevirtual #15                 // Method org/apache/neethi/ExactlyOne.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
      62: aload_1
      63: invokevirtual #16                 // Method org/apache/neethi/Policy.getAlternatives:()Ljava/util/Iterator;
      66: astore        4
      68: aload         4
      70: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          186
      78: new           #13                 // class org/apache/neethi/All
      81: dup
      82: invokespecial #14                 // Method org/apache/neethi/All."<init>":()V
      85: astore        5
      87: aload         4
      89: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      94: checkcast     #19                 // class java/util/List
      97: astore        6
      99: new           #5                  // class org/apache/neethi/Policy
     102: dup
     103: aload_0
     104: getfield      #2                  // Field nested:Lorg/apache/neethi/Policy;
     107: invokevirtual #6                  // Method org/apache/neethi/Policy.getPolicyRegistry:()Lorg/apache/neethi/PolicyRegistry;
     110: aload_0
     111: getfield      #2                  // Field nested:Lorg/apache/neethi/Policy;
     114: invokevirtual #7                  // Method org/apache/neethi/Policy.getNamespace:()Ljava/lang/String;
     117: invokespecial #8                  // Method org/apache/neethi/Policy."<init>":(Lorg/apache/neethi/PolicyRegistry;Ljava/lang/String;)V
     120: astore        7
     122: aload_0
     123: iconst_0
     124: aload         7
     126: invokevirtual #20                 // Method clone:(ZLorg/apache/neethi/Policy;)Lorg/apache/neethi/Assertion;
     129: astore        8
     131: new           #9                  // class org/apache/neethi/ExactlyOne
     134: dup
     135: invokespecial #10                 // Method org/apache/neethi/ExactlyOne."<init>":()V
     138: astore        9
     140: aload         7
     142: aload         9
     144: invokevirtual #11                 // Method org/apache/neethi/Policy.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
     147: new           #13                 // class org/apache/neethi/All
     150: dup
     151: invokespecial #14                 // Method org/apache/neethi/All."<init>":()V
     154: astore        10
     156: aload         9
     158: aload         10
     160: invokevirtual #15                 // Method org/apache/neethi/ExactlyOne.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
     163: aload         10
     165: aload         6
     167: invokevirtual #21                 // Method org/apache/neethi/All.addPolicyComponents:(Ljava/util/List;)V
     170: aload         5
     172: aload         8
     174: invokevirtual #22                 // Method org/apache/neethi/All.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
     177: aload_3
     178: aload         5
     180: invokevirtual #15                 // Method org/apache/neethi/ExactlyOne.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
     183: goto          68
     186: aload_2
     187: areturn

  protected org.apache.neethi.Assertion clone(boolean, org.apache.neethi.Policy);
    Code:
       0: new           #23                 // class org/apache/neethi/builders/PolicyContainingPrimitiveAssertion
       3: dup
       4: aload_0
       5: getfield      #24                 // Field name:Ljavax/xml/namespace/QName;
       8: iload_1
       9: aload_0
      10: getfield      #25                 // Field ignorable:Z
      13: aload_0
      14: getfield      #26                 // Field attributes:Ljava/util/Map;
      17: aload_2
      18: invokespecial #27                 // Method "<init>":(Ljavax/xml/namespace/QName;ZZLjava/util/Map;Lorg/apache/neethi/Policy;)V
      21: areturn

  public boolean equal(org.apache.neethi.PolicyComponent);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: aload_1
       9: invokespecial #28                 // Method org/apache/neethi/builders/PrimitiveAssertion.equal:(Lorg/apache/neethi/PolicyComponent;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_1
      18: checkcast     #23                 // class org/apache/neethi/builders/PolicyContainingPrimitiveAssertion
      21: astore_2
      22: aload_0
      23: invokevirtual #29                 // Method getPolicy:()Lorg/apache/neethi/Policy;
      26: aload_2
      27: invokevirtual #29                 // Method getPolicy:()Lorg/apache/neethi/Policy;
      30: invokevirtual #30                 // Method org/apache/neethi/Policy.equal:(Lorg/apache/neethi/PolicyComponent;)Z
      33: ireturn

  public void setPolicy(org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field nested:Lorg/apache/neethi/Policy;
       5: return

  public org.apache.neethi.Policy getPolicy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nested:Lorg/apache/neethi/Policy;
       4: areturn

  protected void writeContents(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field nested:Lorg/apache/neethi/Policy;
       4: aload_1
       5: invokevirtual #31                 // Method org/apache/neethi/Policy.serialize:(Ljavax/xml/stream/XMLStreamWriter;)V
       8: return

  protected boolean hasContents();
    Code:
       0: iconst_1
       1: ireturn
}
