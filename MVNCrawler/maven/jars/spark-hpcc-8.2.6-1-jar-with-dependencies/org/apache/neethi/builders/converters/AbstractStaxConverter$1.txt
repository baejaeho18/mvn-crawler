Compiled from "AbstractStaxConverter.java"
class org.apache.neethi.builders.converters.AbstractStaxConverter$1 implements java.util.Iterator<javax.xml.stream.XMLStreamReader> {
  boolean first;

  final javax.xml.stream.XMLStreamReader val$s;

  final javax.xml.namespace.QName val$base;

  final org.apache.neethi.builders.converters.AbstractStaxConverter this$0;

  org.apache.neethi.builders.converters.AbstractStaxConverter$1(org.apache.neethi.builders.converters.AbstractStaxConverter, javax.xml.stream.XMLStreamReader, javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/neethi/builders/converters/AbstractStaxConverter;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$s:Ljavax/xml/stream/XMLStreamReader;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$base:Ljavax/xml/namespace/QName;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: aload_0
      20: iconst_1
      21: putfield      #5                  // Field first:Z
      24: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field first:Z
       4: ifeq          31
       7: aload_0
       8: iconst_0
       9: putfield      #5                  // Field first:Z
      12: aload_0
      13: getfield      #2                  // Field val$s:Ljavax/xml/stream/XMLStreamReader;
      16: invokeinterface #6,  1            // InterfaceMethod javax/xml/stream/XMLStreamReader.getEventType:()I
      21: iconst_2
      22: if_icmpeq     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn
      31: aload_0
      32: getfield      #2                  // Field val$s:Ljavax/xml/stream/XMLStreamReader;
      35: invokeinterface #7,  1            // InterfaceMethod javax/xml/stream/XMLStreamReader.next:()I
      40: istore_1
      41: aload_0
      42: getfield      #2                  // Field val$s:Ljavax/xml/stream/XMLStreamReader;
      45: invokeinterface #8,  1            // InterfaceMethod javax/xml/stream/XMLStreamReader.hasNext:()Z
      50: ifeq          76
      53: iload_1
      54: iconst_2
      55: if_icmpeq     76
      58: iload_1
      59: iconst_1
      60: if_icmpeq     76
      63: aload_0
      64: getfield      #2                  // Field val$s:Ljavax/xml/stream/XMLStreamReader;
      67: invokeinterface #7,  1            // InterfaceMethod javax/xml/stream/XMLStreamReader.next:()I
      72: istore_1
      73: goto          41
      76: iload_1
      77: iconst_2
      78: if_icmpne     145
      81: aload_0
      82: getfield      #2                  // Field val$s:Ljavax/xml/stream/XMLStreamReader;
      85: invokeinterface #9,  1            // InterfaceMethod javax/xml/stream/XMLStreamReader.getName:()Ljavax/xml/namespace/QName;
      90: aload_0
      91: getfield      #3                  // Field val$base:Ljavax/xml/namespace/QName;
      94: invokevirtual #10                 // Method javax/xml/namespace/QName.equals:(Ljava/lang/Object;)Z
      97: ifne          145
     100: aload_0
     101: getfield      #2                  // Field val$s:Ljavax/xml/stream/XMLStreamReader;
     104: invokeinterface #7,  1            // InterfaceMethod javax/xml/stream/XMLStreamReader.next:()I
     109: istore_1
     110: aload_0
     111: getfield      #2                  // Field val$s:Ljavax/xml/stream/XMLStreamReader;
     114: invokeinterface #8,  1            // InterfaceMethod javax/xml/stream/XMLStreamReader.hasNext:()Z
     119: ifeq          145
     122: iload_1
     123: iconst_2
     124: if_icmpeq     145
     127: iload_1
     128: iconst_1
     129: if_icmpeq     145
     132: aload_0
     133: getfield      #2                  // Field val$s:Ljavax/xml/stream/XMLStreamReader;
     136: invokeinterface #7,  1            // InterfaceMethod javax/xml/stream/XMLStreamReader.next:()I
     141: istore_1
     142: goto          110
     145: iload_1
     146: iconst_1
     147: if_icmpne     154
     150: iconst_1
     151: goto          155
     154: iconst_0
     155: ireturn
     156: astore_1
     157: iconst_0
     158: ireturn
    Exception table:
       from    to  target type
          31   155   156   Class java/lang/Exception

  public javax.xml.stream.XMLStreamReader next();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$s:Ljavax/xml/stream/XMLStreamReader;
       4: areturn

  public void remove();
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method next:()Ljavax/xml/stream/XMLStreamReader;
       4: areturn
}
