Compiled from "Policy.java"
class org.apache.neethi.Policy$PolicyIterator implements java.util.Iterator<java.util.List<org.apache.neethi.Assertion>> {
  java.util.Iterator<org.apache.neethi.PolicyComponent> alternatives;

  final org.apache.neethi.Policy this$0;

  public org.apache.neethi.Policy$PolicyIterator(org.apache.neethi.Policy, org.apache.neethi.Policy, org.apache.neethi.PolicyRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/neethi/Policy;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_2
      10: aload_3
      11: iconst_0
      12: invokevirtual #3                  // Method org/apache/neethi/Policy.normalize:(Lorg/apache/neethi/PolicyRegistry;Z)Lorg/apache/neethi/Policy;
      15: astore_2
      16: aload_2
      17: invokevirtual #4                  // Method org/apache/neethi/Policy.getFirstPolicyComponent:()Lorg/apache/neethi/PolicyComponent;
      20: checkcast     #5                  // class org/apache/neethi/ExactlyOne
      23: astore        4
      25: aload_0
      26: aload         4
      28: invokevirtual #6                  // Method org/apache/neethi/ExactlyOne.getPolicyComponents:()Ljava/util/List;
      31: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      36: putfield      #8                  // Field alternatives:Ljava/util/Iterator;
      39: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #8                  // Field alternatives:Ljava/util/Iterator;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public java.util.List<org.apache.neethi.Assertion> next();
    Code:
       0: aload_0
       1: getfield      #8                  // Field alternatives:Ljava/util/Iterator;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       9: checkcast     #11                 // class org/apache/neethi/All
      12: invokevirtual #12                 // Method org/apache/neethi/All.getPolicyComponents:()Ljava/util/List;
      15: astore_1
      16: new           #13                 // class java/util/ArrayList
      19: dup
      20: aload_1
      21: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
      26: invokespecial #15                 // Method java/util/ArrayList."<init>":(I)V
      29: astore_2
      30: aload_1
      31: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      36: astore_3
      37: aload_3
      38: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          80
      46: aload_3
      47: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #17                 // class org/apache/neethi/PolicyComponent
      55: astore        4
      57: aload         4
      59: instanceof    #18                 // class org/apache/neethi/Assertion
      62: ifeq          77
      65: aload_2
      66: aload         4
      68: checkcast     #18                 // class org/apache/neethi/Assertion
      71: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      76: pop
      77: goto          37
      80: aload_2
      81: areturn

  public void remove();
    Code:
       0: new           #20                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #21                 // String policyAlternative.remove() is not supported
       6: invokespecial #22                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method next:()Ljava/util/List;
       4: areturn
}
