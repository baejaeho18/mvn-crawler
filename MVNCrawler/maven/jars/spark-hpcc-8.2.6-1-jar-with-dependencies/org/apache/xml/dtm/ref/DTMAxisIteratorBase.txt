Compiled from "DTMAxisIteratorBase.java"
public abstract class org.apache.xml.dtm.ref.DTMAxisIteratorBase implements org.apache.xml.dtm.DTMAxisIterator {
  protected int _last;

  protected int _position;

  protected int _markedNode;

  protected int _startNode;

  protected boolean _includeSelf;

  protected boolean _isRestartable;

  public org.apache.xml.dtm.ref.DTMAxisIteratorBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field _last:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field _position:I
      14: aload_0
      15: iconst_m1
      16: putfield      #4                  // Field _startNode:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field _includeSelf:Z
      24: aload_0
      25: iconst_1
      26: putfield      #6                  // Field _isRestartable:Z
      29: return

  public int getStartNode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _startNode:I
       4: ireturn

  public org.apache.xml.dtm.DTMAxisIterator reset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _isRestartable:Z
       4: istore_1
       5: aload_0
       6: iconst_1
       7: putfield      #6                  // Field _isRestartable:Z
      10: aload_0
      11: aload_0
      12: getfield      #4                  // Field _startNode:I
      15: invokevirtual #7                  // Method setStartNode:(I)Lorg/apache/xml/dtm/DTMAxisIterator;
      18: pop
      19: aload_0
      20: iload_1
      21: putfield      #6                  // Field _isRestartable:Z
      24: aload_0
      25: areturn

  public org.apache.xml.dtm.DTMAxisIterator includeSelf();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field _includeSelf:Z
       5: aload_0
       6: areturn

  public int getLast();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _last:I
       4: iconst_m1
       5: if_icmpne     49
       8: aload_0
       9: getfield      #3                  // Field _position:I
      12: istore_1
      13: aload_0
      14: invokevirtual #8                  // Method setMark:()V
      17: aload_0
      18: invokevirtual #9                  // Method reset:()Lorg/apache/xml/dtm/DTMAxisIterator;
      21: pop
      22: aload_0
      23: dup
      24: getfield      #2                  // Field _last:I
      27: iconst_1
      28: iadd
      29: putfield      #2                  // Field _last:I
      32: aload_0
      33: invokevirtual #10                 // Method next:()I
      36: iconst_m1
      37: if_icmpne     22
      40: aload_0
      41: invokevirtual #11                 // Method gotoMark:()V
      44: aload_0
      45: iload_1
      46: putfield      #3                  // Field _position:I
      49: aload_0
      50: getfield      #2                  // Field _last:I
      53: ireturn

  public int getPosition();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _position:I
       4: ifne          11
       7: iconst_1
       8: goto          15
      11: aload_0
      12: getfield      #3                  // Field _position:I
      15: ireturn

  public boolean isReverse();
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.xml.dtm.DTMAxisIterator cloneIterator();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #13                 // class org/apache/xml/dtm/ref/DTMAxisIteratorBase
       7: astore_1
       8: aload_1
       9: iconst_0
      10: putfield      #6                  // Field _isRestartable:Z
      13: aload_1
      14: areturn
      15: astore_1
      16: new           #15                 // class org/apache/xml/utils/WrappedRuntimeException
      19: dup
      20: aload_1
      21: invokespecial #16                 // Method org/apache/xml/utils/WrappedRuntimeException."<init>":(Ljava/lang/Exception;)V
      24: athrow
    Exception table:
       from    to  target type
           0    15    15   Class java/lang/CloneNotSupportedException

  protected final int returnNode(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field _position:I
       5: iconst_1
       6: iadd
       7: putfield      #3                  // Field _position:I
      10: iload_1
      11: ireturn

  protected final org.apache.xml.dtm.DTMAxisIterator resetPosition();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field _position:I
       5: aload_0
       6: areturn

  public boolean isDocOrdered();
    Code:
       0: iconst_1
       1: ireturn

  public int getAxis();
    Code:
       0: iconst_m1
       1: ireturn

  public void setRestartable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field _isRestartable:Z
       5: return

  public int getNodeByPosition(int);
    Code:
       0: iload_1
       1: ifle          47
       4: aload_0
       5: invokevirtual #17                 // Method isReverse:()Z
       8: ifeq          22
      11: aload_0
      12: invokevirtual #18                 // Method getLast:()I
      15: iload_1
      16: isub
      17: iconst_1
      18: iadd
      19: goto          23
      22: iload_1
      23: istore_2
      24: goto          37
      27: iload_2
      28: aload_0
      29: invokevirtual #19                 // Method getPosition:()I
      32: if_icmpne     37
      35: iload_3
      36: ireturn
      37: aload_0
      38: invokevirtual #10                 // Method next:()I
      41: dup
      42: istore_3
      43: iconst_m1
      44: if_icmpne     27
      47: iconst_m1
      48: ireturn

  public abstract org.apache.xml.dtm.DTMAxisIterator setStartNode(int);

  public abstract void gotoMark();

  public abstract void setMark();

  public abstract int next();
}
