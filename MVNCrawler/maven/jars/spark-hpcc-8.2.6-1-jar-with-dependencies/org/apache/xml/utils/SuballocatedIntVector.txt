Compiled from "SuballocatedIntVector.java"
public class org.apache.xml.utils.SuballocatedIntVector {
  protected int m_blocksize;

  protected int m_SHIFT;

  protected int m_MASK;

  protected static final int NUMBLOCKS_DEFAULT;

  protected int m_numblocks;

  protected int[][] m_map;

  protected int m_firstFree;

  protected int[] m_map0;

  protected int[] m_buildCache;

  protected int m_buildCacheStartIndex;

  public org.apache.xml.utils.SuballocatedIntVector();
    Code:
       0: aload_0
       1: sipush        2048
       4: invokespecial #1                  // Method "<init>":(I)V
       7: return

  public org.apache.xml.utils.SuballocatedIntVector(int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        32
       7: putfield      #3                  // Field m_numblocks:I
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field m_firstFree:I
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field m_SHIFT:I
      20: goto          33
      23: aload_0
      24: dup
      25: getfield      #5                  // Field m_SHIFT:I
      28: iconst_1
      29: iadd
      30: putfield      #5                  // Field m_SHIFT:I
      33: iconst_0
      34: iload_1
      35: iconst_1
      36: iushr
      37: dup
      38: istore_1
      39: if_icmpne     23
      42: aload_0
      43: iconst_1
      44: aload_0
      45: getfield      #5                  // Field m_SHIFT:I
      48: ishl
      49: putfield      #6                  // Field m_blocksize:I
      52: aload_0
      53: aload_0
      54: getfield      #6                  // Field m_blocksize:I
      57: iconst_1
      58: isub
      59: putfield      #7                  // Field m_MASK:I
      62: aload_0
      63: iload_2
      64: putfield      #3                  // Field m_numblocks:I
      67: aload_0
      68: aload_0
      69: getfield      #6                  // Field m_blocksize:I
      72: newarray       int
      74: putfield      #8                  // Field m_map0:[I
      77: aload_0
      78: iload_2
      79: anewarray     #9                  // class "[I"
      82: putfield      #10                 // Field m_map:[[I
      85: aload_0
      86: getfield      #10                 // Field m_map:[[I
      89: iconst_0
      90: aload_0
      91: getfield      #8                  // Field m_map0:[I
      94: aastore
      95: aload_0
      96: aload_0
      97: getfield      #8                  // Field m_map0:[I
     100: putfield      #11                 // Field m_buildCache:[I
     103: aload_0
     104: iconst_0
     105: putfield      #12                 // Field m_buildCacheStartIndex:I
     108: return

  public org.apache.xml.utils.SuballocatedIntVector(int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        32
       4: invokespecial #13                 // Method "<init>":(II)V
       7: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: ireturn

  public void setSize(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: iload_1
       5: if_icmple     13
       8: aload_0
       9: iload_1
      10: putfield      #4                  // Field m_firstFree:I
      13: return

  public void addElement(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: aload_0
       5: getfield      #12                 // Field m_buildCacheStartIndex:I
       8: isub
       9: istore_2
      10: iload_2
      11: iflt          42
      14: iload_2
      15: aload_0
      16: getfield      #6                  // Field m_blocksize:I
      19: if_icmpge     42
      22: aload_0
      23: getfield      #11                 // Field m_buildCache:[I
      26: iload_2
      27: iload_1
      28: iastore
      29: aload_0
      30: dup
      31: getfield      #4                  // Field m_firstFree:I
      34: iconst_1
      35: iadd
      36: putfield      #4                  // Field m_firstFree:I
      39: goto          171
      42: aload_0
      43: getfield      #4                  // Field m_firstFree:I
      46: aload_0
      47: getfield      #5                  // Field m_SHIFT:I
      50: iushr
      51: istore_3
      52: aload_0
      53: getfield      #4                  // Field m_firstFree:I
      56: aload_0
      57: getfield      #7                  // Field m_MASK:I
      60: iand
      61: istore        4
      63: iload_3
      64: aload_0
      65: getfield      #10                 // Field m_map:[[I
      68: arraylength
      69: if_icmplt     109
      72: iload_3
      73: aload_0
      74: getfield      #3                  // Field m_numblocks:I
      77: iadd
      78: istore        5
      80: iload         5
      82: anewarray     #9                  // class "[I"
      85: astore        6
      87: aload_0
      88: getfield      #10                 // Field m_map:[[I
      91: iconst_0
      92: aload         6
      94: iconst_0
      95: aload_0
      96: getfield      #10                 // Field m_map:[[I
      99: arraylength
     100: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     103: aload_0
     104: aload         6
     106: putfield      #10                 // Field m_map:[[I
     109: aload_0
     110: getfield      #10                 // Field m_map:[[I
     113: iload_3
     114: aaload
     115: astore        5
     117: aconst_null
     118: aload         5
     120: if_acmpne     138
     123: aload_0
     124: getfield      #10                 // Field m_map:[[I
     127: iload_3
     128: aload_0
     129: getfield      #6                  // Field m_blocksize:I
     132: newarray       int
     134: dup_x2
     135: aastore
     136: astore        5
     138: aload         5
     140: iload         4
     142: iload_1
     143: iastore
     144: aload_0
     145: aload         5
     147: putfield      #11                 // Field m_buildCache:[I
     150: aload_0
     151: aload_0
     152: getfield      #4                  // Field m_firstFree:I
     155: iload         4
     157: isub
     158: putfield      #12                 // Field m_buildCacheStartIndex:I
     161: aload_0
     162: dup
     163: getfield      #4                  // Field m_firstFree:I
     166: iconst_1
     167: iadd
     168: putfield      #4                  // Field m_firstFree:I
     171: return

  private void addElements(int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: iload_2
       5: iadd
       6: aload_0
       7: getfield      #6                  // Field m_blocksize:I
      10: if_icmpge     46
      13: iconst_0
      14: istore_3
      15: goto          38
      18: aload_0
      19: getfield      #8                  // Field m_map0:[I
      22: aload_0
      23: dup
      24: getfield      #4                  // Field m_firstFree:I
      27: dup_x1
      28: iconst_1
      29: iadd
      30: putfield      #4                  // Field m_firstFree:I
      33: iload_1
      34: iastore
      35: iinc          3, 1
      38: iload_3
      39: iload_2
      40: if_icmplt     18
      43: goto          221
      46: aload_0
      47: getfield      #4                  // Field m_firstFree:I
      50: aload_0
      51: getfield      #5                  // Field m_SHIFT:I
      54: iushr
      55: istore        4
      57: aload_0
      58: getfield      #4                  // Field m_firstFree:I
      61: aload_0
      62: getfield      #7                  // Field m_MASK:I
      65: iand
      66: istore        5
      68: aload_0
      69: dup
      70: getfield      #4                  // Field m_firstFree:I
      73: iload_2
      74: iadd
      75: putfield      #4                  // Field m_firstFree:I
      78: goto          217
      81: iload         4
      83: aload_0
      84: getfield      #10                 // Field m_map:[[I
      87: arraylength
      88: if_icmplt     129
      91: iload         4
      93: aload_0
      94: getfield      #3                  // Field m_numblocks:I
      97: iadd
      98: istore        6
     100: iload         6
     102: anewarray     #9                  // class "[I"
     105: astore        7
     107: aload_0
     108: getfield      #10                 // Field m_map:[[I
     111: iconst_0
     112: aload         7
     114: iconst_0
     115: aload_0
     116: getfield      #10                 // Field m_map:[[I
     119: arraylength
     120: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     123: aload_0
     124: aload         7
     126: putfield      #10                 // Field m_map:[[I
     129: aload_0
     130: getfield      #10                 // Field m_map:[[I
     133: iload         4
     135: aaload
     136: astore        6
     138: aconst_null
     139: aload         6
     141: if_acmpne     160
     144: aload_0
     145: getfield      #10                 // Field m_map:[[I
     148: iload         4
     150: aload_0
     151: getfield      #6                  // Field m_blocksize:I
     154: newarray       int
     156: dup_x2
     157: aastore
     158: astore        6
     160: aload_0
     161: getfield      #6                  // Field m_blocksize:I
     164: iload         5
     166: isub
     167: iload_2
     168: if_icmpge     181
     171: aload_0
     172: getfield      #6                  // Field m_blocksize:I
     175: iload         5
     177: isub
     178: goto          182
     181: iload_2
     182: istore        7
     184: iload_2
     185: iload         7
     187: isub
     188: istore_2
     189: goto          201
     192: aload         6
     194: iload         5
     196: iinc          5, 1
     199: iload_1
     200: iastore
     201: iload         7
     203: dup
     204: iconst_1
     205: isub
     206: istore        7
     208: ifgt          192
     211: iinc          4, 1
     214: iconst_0
     215: istore        5
     217: iload_2
     218: ifgt          81
     221: return

  private void addElements(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: iload_1
       5: iadd
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #6                  // Field m_blocksize:I
      12: if_icmple     69
      15: aload_0
      16: getfield      #4                  // Field m_firstFree:I
      19: aload_0
      20: getfield      #5                  // Field m_SHIFT:I
      23: iushr
      24: istore_3
      25: aload_0
      26: getfield      #4                  // Field m_firstFree:I
      29: iload_1
      30: iadd
      31: aload_0
      32: getfield      #5                  // Field m_SHIFT:I
      35: iushr
      36: istore        4
      38: iload_3
      39: iconst_1
      40: iadd
      41: istore        5
      43: goto          62
      46: aload_0
      47: getfield      #10                 // Field m_map:[[I
      50: iload         5
      52: aload_0
      53: getfield      #6                  // Field m_blocksize:I
      56: newarray       int
      58: aastore
      59: iinc          5, 1
      62: iload         5
      64: iload         4
      66: if_icmple     46
      69: aload_0
      70: iload_2
      71: putfield      #4                  // Field m_firstFree:I
      74: return

  private void insertElementAt(int, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #4                  // Field m_firstFree:I
       5: if_icmpne     16
       8: aload_0
       9: iload_1
      10: invokevirtual #15                 // Method addElement:(I)V
      13: goto          263
      16: iload_2
      17: aload_0
      18: getfield      #4                  // Field m_firstFree:I
      21: if_icmple     131
      24: iload_2
      25: aload_0
      26: getfield      #5                  // Field m_SHIFT:I
      29: iushr
      30: istore_3
      31: iload_3
      32: aload_0
      33: getfield      #10                 // Field m_map:[[I
      36: arraylength
      37: if_icmplt     77
      40: iload_3
      41: aload_0
      42: getfield      #3                  // Field m_numblocks:I
      45: iadd
      46: istore        4
      48: iload         4
      50: anewarray     #9                  // class "[I"
      53: astore        5
      55: aload_0
      56: getfield      #10                 // Field m_map:[[I
      59: iconst_0
      60: aload         5
      62: iconst_0
      63: aload_0
      64: getfield      #10                 // Field m_map:[[I
      67: arraylength
      68: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: aload_0
      72: aload         5
      74: putfield      #10                 // Field m_map:[[I
      77: aload_0
      78: getfield      #10                 // Field m_map:[[I
      81: iload_3
      82: aaload
      83: astore        4
      85: aconst_null
      86: aload         4
      88: if_acmpne     106
      91: aload_0
      92: getfield      #10                 // Field m_map:[[I
      95: iload_3
      96: aload_0
      97: getfield      #6                  // Field m_blocksize:I
     100: newarray       int
     102: dup_x2
     103: aastore
     104: astore        4
     106: iload_2
     107: aload_0
     108: getfield      #7                  // Field m_MASK:I
     111: iand
     112: istore        5
     114: aload         4
     116: iload         5
     118: iload_1
     119: iastore
     120: aload_0
     121: iload         5
     123: iconst_1
     124: iadd
     125: putfield      #4                  // Field m_firstFree:I
     128: goto          263
     131: iload_2
     132: aload_0
     133: getfield      #5                  // Field m_SHIFT:I
     136: iushr
     137: istore_3
     138: aload_0
     139: getfield      #4                  // Field m_firstFree:I
     142: aload_0
     143: getfield      #5                  // Field m_SHIFT:I
     146: iushr
     147: istore        4
     149: aload_0
     150: dup
     151: getfield      #4                  // Field m_firstFree:I
     154: iconst_1
     155: iadd
     156: putfield      #4                  // Field m_firstFree:I
     159: iload_2
     160: aload_0
     161: getfield      #7                  // Field m_MASK:I
     164: iand
     165: istore        5
     167: goto          257
     170: aload_0
     171: getfield      #6                  // Field m_blocksize:I
     174: iload         5
     176: isub
     177: iconst_1
     178: isub
     179: istore        7
     181: aload_0
     182: getfield      #10                 // Field m_map:[[I
     185: iload_3
     186: aaload
     187: astore        8
     189: aconst_null
     190: aload         8
     192: if_acmpne     216
     195: iconst_0
     196: istore        6
     198: aload_0
     199: getfield      #10                 // Field m_map:[[I
     202: iload_3
     203: aload_0
     204: getfield      #6                  // Field m_blocksize:I
     207: newarray       int
     209: dup_x2
     210: aastore
     211: astore        8
     213: goto          242
     216: aload         8
     218: aload_0
     219: getfield      #6                  // Field m_blocksize:I
     222: iconst_1
     223: isub
     224: iaload
     225: istore        6
     227: aload         8
     229: iload         5
     231: aload         8
     233: iload         5
     235: iconst_1
     236: iadd
     237: iload         7
     239: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     242: aload         8
     244: iload         5
     246: iload_1
     247: iastore
     248: iload         6
     250: istore_1
     251: iconst_0
     252: istore        5
     254: iinc          3, 1
     257: iload_3
     258: iload         4
     260: if_icmple     170
     263: return

  public void removeAllElements();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field m_firstFree:I
       5: aload_0
       6: aload_0
       7: getfield      #8                  // Field m_map0:[I
      10: putfield      #11                 // Field m_buildCache:[I
      13: aload_0
      14: iconst_0
      15: putfield      #12                 // Field m_buildCacheStartIndex:I
      18: return

  private boolean removeElement(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #16                 // Method indexOf:(II)I
       6: istore_2
       7: iload_2
       8: ifge          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: iload_2
      15: invokespecial #17                 // Method removeElementAt:(I)V
      18: iconst_1
      19: ireturn

  private void removeElementAt(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field m_firstFree:I
       5: if_icmpge     160
       8: iload_1
       9: aload_0
      10: getfield      #5                  // Field m_SHIFT:I
      13: iushr
      14: istore_2
      15: aload_0
      16: getfield      #4                  // Field m_firstFree:I
      19: aload_0
      20: getfield      #5                  // Field m_SHIFT:I
      23: iushr
      24: istore_3
      25: iload_1
      26: aload_0
      27: getfield      #7                  // Field m_MASK:I
      30: iand
      31: istore        4
      33: goto          155
      36: aload_0
      37: getfield      #6                  // Field m_blocksize:I
      40: iload         4
      42: isub
      43: iconst_1
      44: isub
      45: istore        5
      47: aload_0
      48: getfield      #10                 // Field m_map:[[I
      51: iload_2
      52: aaload
      53: astore        6
      55: aconst_null
      56: aload         6
      58: if_acmpne     79
      61: aload_0
      62: getfield      #10                 // Field m_map:[[I
      65: iload_2
      66: aload_0
      67: getfield      #6                  // Field m_blocksize:I
      70: newarray       int
      72: dup_x2
      73: aastore
      74: astore        6
      76: goto          94
      79: aload         6
      81: iload         4
      83: iconst_1
      84: iadd
      85: aload         6
      87: iload         4
      89: iload         5
      91: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      94: iload_2
      95: iload_3
      96: if_icmpge     139
      99: aload_0
     100: getfield      #10                 // Field m_map:[[I
     103: iload_2
     104: iconst_1
     105: iadd
     106: aaload
     107: astore        7
     109: aload         7
     111: ifnull        136
     114: aload         6
     116: aload_0
     117: getfield      #6                  // Field m_blocksize:I
     120: iconst_1
     121: isub
     122: aload         7
     124: ifnull        134
     127: aload         7
     129: iconst_0
     130: iaload
     131: goto          135
     134: iconst_0
     135: iastore
     136: goto          149
     139: aload         6
     141: aload_0
     142: getfield      #6                  // Field m_blocksize:I
     145: iconst_1
     146: isub
     147: iconst_0
     148: iastore
     149: iconst_0
     150: istore        4
     152: iinc          2, 1
     155: iload_2
     156: iload_3
     157: if_icmple     36
     160: aload_0
     161: dup
     162: getfield      #4                  // Field m_firstFree:I
     165: iconst_1
     166: isub
     167: putfield      #4                  // Field m_firstFree:I
     170: return

  public void setElementAt(int, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #6                  // Field m_blocksize:I
       5: if_icmpge     18
       8: aload_0
       9: getfield      #8                  // Field m_map0:[I
      12: iload_2
      13: iload_1
      14: iastore
      15: goto          114
      18: iload_2
      19: aload_0
      20: getfield      #5                  // Field m_SHIFT:I
      23: iushr
      24: istore_3
      25: iload_2
      26: aload_0
      27: getfield      #7                  // Field m_MASK:I
      30: iand
      31: istore        4
      33: iload_3
      34: aload_0
      35: getfield      #10                 // Field m_map:[[I
      38: arraylength
      39: if_icmplt     79
      42: iload_3
      43: aload_0
      44: getfield      #3                  // Field m_numblocks:I
      47: iadd
      48: istore        5
      50: iload         5
      52: anewarray     #9                  // class "[I"
      55: astore        6
      57: aload_0
      58: getfield      #10                 // Field m_map:[[I
      61: iconst_0
      62: aload         6
      64: iconst_0
      65: aload_0
      66: getfield      #10                 // Field m_map:[[I
      69: arraylength
      70: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      73: aload_0
      74: aload         6
      76: putfield      #10                 // Field m_map:[[I
      79: aload_0
      80: getfield      #10                 // Field m_map:[[I
      83: iload_3
      84: aaload
      85: astore        5
      87: aconst_null
      88: aload         5
      90: if_acmpne     108
      93: aload_0
      94: getfield      #10                 // Field m_map:[[I
      97: iload_3
      98: aload_0
      99: getfield      #6                  // Field m_blocksize:I
     102: newarray       int
     104: dup_x2
     105: aastore
     106: astore        5
     108: aload         5
     110: iload         4
     112: iload_1
     113: iastore
     114: iload_2
     115: aload_0
     116: getfield      #4                  // Field m_firstFree:I
     119: if_icmplt     129
     122: aload_0
     123: iload_2
     124: iconst_1
     125: iadd
     126: putfield      #4                  // Field m_firstFree:I
     129: return

  public int elementAt(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field m_blocksize:I
       5: if_icmpge     15
       8: aload_0
       9: getfield      #8                  // Field m_map0:[I
      12: iload_1
      13: iaload
      14: ireturn
      15: aload_0
      16: getfield      #10                 // Field m_map:[[I
      19: iload_1
      20: aload_0
      21: getfield      #5                  // Field m_SHIFT:I
      24: iushr
      25: aaload
      26: iload_1
      27: aload_0
      28: getfield      #7                  // Field m_MASK:I
      31: iand
      32: iaload
      33: ireturn

  private boolean contains(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #16                 // Method indexOf:(II)I
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public int indexOf(int, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #4                  // Field m_firstFree:I
       5: if_icmplt     10
       8: iconst_m1
       9: ireturn
      10: iload_2
      11: aload_0
      12: getfield      #5                  // Field m_SHIFT:I
      15: iushr
      16: istore_3
      17: iload_2
      18: aload_0
      19: getfield      #7                  // Field m_MASK:I
      22: iand
      23: istore        4
      25: aload_0
      26: getfield      #4                  // Field m_firstFree:I
      29: aload_0
      30: getfield      #5                  // Field m_SHIFT:I
      33: iushr
      34: istore        5
      36: goto          96
      39: aload_0
      40: getfield      #10                 // Field m_map:[[I
      43: iload_3
      44: aaload
      45: astore        6
      47: aload         6
      49: ifnull        90
      52: iload         4
      54: istore        7
      56: goto          81
      59: aload         6
      61: iload         7
      63: iaload
      64: iload_1
      65: if_icmpne     78
      68: iload         7
      70: iload_3
      71: aload_0
      72: getfield      #6                  // Field m_blocksize:I
      75: imul
      76: iadd
      77: ireturn
      78: iinc          7, 1
      81: iload         7
      83: aload_0
      84: getfield      #6                  // Field m_blocksize:I
      87: if_icmplt     59
      90: iconst_0
      91: istore        4
      93: iinc          3, 1
      96: iload_3
      97: iload         5
      99: if_icmplt     39
     102: aload_0
     103: getfield      #4                  // Field m_firstFree:I
     106: aload_0
     107: getfield      #7                  // Field m_MASK:I
     110: iand
     111: istore        7
     113: aload_0
     114: getfield      #10                 // Field m_map:[[I
     117: iload         5
     119: aaload
     120: astore        6
     122: iload         4
     124: istore        8
     126: goto          152
     129: aload         6
     131: iload         8
     133: iaload
     134: iload_1
     135: if_icmpne     149
     138: iload         8
     140: iload         5
     142: aload_0
     143: getfield      #6                  // Field m_blocksize:I
     146: imul
     147: iadd
     148: ireturn
     149: iinc          8, 1
     152: iload         8
     154: iload         7
     156: if_icmplt     129
     159: iconst_m1
     160: ireturn

  public int indexOf(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #16                 // Method indexOf:(II)I
       6: ireturn

  private int lastIndexOf(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: aload_0
       5: getfield      #7                  // Field m_MASK:I
       8: iand
       9: istore_2
      10: aload_0
      11: getfield      #4                  // Field m_firstFree:I
      14: aload_0
      15: getfield      #5                  // Field m_SHIFT:I
      18: iushr
      19: istore_3
      20: goto          74
      23: aload_0
      24: getfield      #10                 // Field m_map:[[I
      27: iload_3
      28: aaload
      29: astore        4
      31: aload         4
      33: ifnull        69
      36: iload_2
      37: istore        5
      39: goto          64
      42: aload         4
      44: iload         5
      46: iaload
      47: iload_1
      48: if_icmpne     61
      51: iload         5
      53: iload_3
      54: aload_0
      55: getfield      #6                  // Field m_blocksize:I
      58: imul
      59: iadd
      60: ireturn
      61: iinc          5, -1
      64: iload         5
      66: ifge          42
      69: iconst_0
      70: istore_2
      71: iinc          3, -1
      74: iload_3
      75: ifge          23
      78: iconst_m1
      79: ireturn

  public final int[] getMap0();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_map0:[I
       4: areturn

  public final int[][] getMap();
    Code:
       0: aload_0
       1: getfield      #10                 // Field m_map:[[I
       4: areturn
}
