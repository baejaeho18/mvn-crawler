Compiled from "NamespaceSupport2.java"
final class org.apache.xml.utils.Context2 {
  private static final java.util.Enumeration EMPTY_ENUMERATION;

  java.util.Hashtable prefixTable;

  java.util.Hashtable uriTable;

  java.util.Hashtable elementNameTable;

  java.util.Hashtable attributeNameTable;

  java.lang.String defaultNS;

  private java.util.Vector declarations;

  private boolean tablesDirty;

  private org.apache.xml.utils.Context2 parent;

  private org.apache.xml.utils.Context2 child;

  org.apache.xml.utils.Context2(org.apache.xml.utils.Context2);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field defaultNS:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field declarations:Ljava/util/Vector;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field tablesDirty:Z
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field parent:Lorg/apache/xml/utils/Context2;
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field child:Lorg/apache/xml/utils/Context2;
      29: aload_1
      30: ifnonnull     68
      33: aload_0
      34: new           #7                  // class java/util/Hashtable
      37: dup
      38: invokespecial #8                  // Method java/util/Hashtable."<init>":()V
      41: putfield      #9                  // Field prefixTable:Ljava/util/Hashtable;
      44: aload_0
      45: new           #7                  // class java/util/Hashtable
      48: dup
      49: invokespecial #8                  // Method java/util/Hashtable."<init>":()V
      52: putfield      #10                 // Field uriTable:Ljava/util/Hashtable;
      55: aload_0
      56: aconst_null
      57: putfield      #11                 // Field elementNameTable:Ljava/util/Hashtable;
      60: aload_0
      61: aconst_null
      62: putfield      #12                 // Field attributeNameTable:Ljava/util/Hashtable;
      65: goto          73
      68: aload_0
      69: aload_1
      70: invokevirtual #13                 // Method setParent:(Lorg/apache/xml/utils/Context2;)V
      73: return

  org.apache.xml.utils.Context2 getChild();
    Code:
       0: aload_0
       1: getfield      #6                  // Field child:Lorg/apache/xml/utils/Context2;
       4: areturn

  org.apache.xml.utils.Context2 getParent();
    Code:
       0: aload_0
       1: getfield      #5                  // Field parent:Lorg/apache/xml/utils/Context2;
       4: areturn

  void setParent(org.apache.xml.utils.Context2);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field parent:Lorg/apache/xml/utils/Context2;
       5: aload_1
       6: aload_0
       7: putfield      #6                  // Field child:Lorg/apache/xml/utils/Context2;
      10: aload_0
      11: aconst_null
      12: putfield      #3                  // Field declarations:Ljava/util/Vector;
      15: aload_0
      16: aload_1
      17: getfield      #9                  // Field prefixTable:Ljava/util/Hashtable;
      20: putfield      #9                  // Field prefixTable:Ljava/util/Hashtable;
      23: aload_0
      24: aload_1
      25: getfield      #10                 // Field uriTable:Ljava/util/Hashtable;
      28: putfield      #10                 // Field uriTable:Ljava/util/Hashtable;
      31: aload_0
      32: aload_1
      33: getfield      #11                 // Field elementNameTable:Ljava/util/Hashtable;
      36: putfield      #11                 // Field elementNameTable:Ljava/util/Hashtable;
      39: aload_0
      40: aload_1
      41: getfield      #12                 // Field attributeNameTable:Ljava/util/Hashtable;
      44: putfield      #12                 // Field attributeNameTable:Ljava/util/Hashtable;
      47: aload_0
      48: aload_1
      49: getfield      #2                  // Field defaultNS:Ljava/lang/String;
      52: putfield      #2                  // Field defaultNS:Ljava/lang/String;
      55: aload_0
      56: iconst_0
      57: putfield      #4                  // Field tablesDirty:Z
      60: return

  void declarePrefix(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tablesDirty:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #14                 // Method copyTables:()V
      11: aload_0
      12: getfield      #3                  // Field declarations:Ljava/util/Vector;
      15: ifnonnull     29
      18: aload_0
      19: new           #15                 // class java/util/Vector
      22: dup
      23: invokespecial #16                 // Method java/util/Vector."<init>":()V
      26: putfield      #3                  // Field declarations:Ljava/util/Vector;
      29: aload_1
      30: invokevirtual #17                 // Method java/lang/String.intern:()Ljava/lang/String;
      33: astore_1
      34: aload_2
      35: invokevirtual #17                 // Method java/lang/String.intern:()Ljava/lang/String;
      38: astore_2
      39: ldc           #18                 // String
      41: aload_1
      42: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      45: ifeq          73
      48: ldc           #18                 // String
      50: aload_2
      51: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      54: ifeq          65
      57: aload_0
      58: aconst_null
      59: putfield      #2                  // Field defaultNS:Ljava/lang/String;
      62: goto          93
      65: aload_0
      66: aload_2
      67: putfield      #2                  // Field defaultNS:Ljava/lang/String;
      70: goto          93
      73: aload_0
      74: getfield      #9                  // Field prefixTable:Ljava/util/Hashtable;
      77: aload_1
      78: aload_2
      79: invokevirtual #20                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: aload_0
      84: getfield      #10                 // Field uriTable:Ljava/util/Hashtable;
      87: aload_2
      88: aload_1
      89: invokevirtual #20                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload_0
      94: getfield      #3                  // Field declarations:Ljava/util/Vector;
      97: aload_1
      98: invokevirtual #21                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     101: return

  java.lang.String[] processName(java.lang.String, boolean);
    Code:
       0: iload_2
       1: ifeq          31
       4: aload_0
       5: getfield      #11                 // Field elementNameTable:Ljava/util/Hashtable;
       8: ifnonnull     22
      11: aload_0
      12: new           #7                  // class java/util/Hashtable
      15: dup
      16: invokespecial #8                  // Method java/util/Hashtable."<init>":()V
      19: putfield      #11                 // Field elementNameTable:Ljava/util/Hashtable;
      22: aload_0
      23: getfield      #11                 // Field elementNameTable:Ljava/util/Hashtable;
      26: astore        4
      28: goto          55
      31: aload_0
      32: getfield      #12                 // Field attributeNameTable:Ljava/util/Hashtable;
      35: ifnonnull     49
      38: aload_0
      39: new           #7                  // class java/util/Hashtable
      42: dup
      43: invokespecial #8                  // Method java/util/Hashtable."<init>":()V
      46: putfield      #12                 // Field attributeNameTable:Ljava/util/Hashtable;
      49: aload_0
      50: getfield      #12                 // Field attributeNameTable:Ljava/util/Hashtable;
      53: astore        4
      55: aload         4
      57: aload_1
      58: invokevirtual #22                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #23                 // class "[Ljava/lang/String;"
      64: astore_3
      65: aload_3
      66: ifnull        71
      69: aload_3
      70: areturn
      71: iconst_3
      72: anewarray     #24                 // class java/lang/String
      75: astore_3
      76: aload_1
      77: bipush        58
      79: invokevirtual #25                 // Method java/lang/String.indexOf:(I)I
      82: istore        5
      84: iload         5
      86: iconst_m1
      87: if_icmpne     132
      90: iload_2
      91: ifne          101
      94: aload_0
      95: getfield      #2                  // Field defaultNS:Ljava/lang/String;
      98: ifnonnull     109
     101: aload_3
     102: iconst_0
     103: ldc           #18                 // String
     105: aastore
     106: goto          116
     109: aload_3
     110: iconst_0
     111: aload_0
     112: getfield      #2                  // Field defaultNS:Ljava/lang/String;
     115: aastore
     116: aload_3
     117: iconst_1
     118: aload_1
     119: invokevirtual #17                 // Method java/lang/String.intern:()Ljava/lang/String;
     122: aastore
     123: aload_3
     124: iconst_2
     125: aload_3
     126: iconst_1
     127: aaload
     128: aastore
     129: goto          211
     132: aload_1
     133: iconst_0
     134: iload         5
     136: invokevirtual #26                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     139: astore        6
     141: aload_1
     142: iload         5
     144: iconst_1
     145: iadd
     146: invokevirtual #27                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     149: astore        7
     151: ldc           #18                 // String
     153: aload         6
     155: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     158: ifeq          170
     161: aload_0
     162: getfield      #2                  // Field defaultNS:Ljava/lang/String;
     165: astore        8
     167: goto          184
     170: aload_0
     171: getfield      #9                  // Field prefixTable:Ljava/util/Hashtable;
     174: aload         6
     176: invokevirtual #22                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
     179: checkcast     #24                 // class java/lang/String
     182: astore        8
     184: aload         8
     186: ifnonnull     191
     189: aconst_null
     190: areturn
     191: aload_3
     192: iconst_0
     193: aload         8
     195: aastore
     196: aload_3
     197: iconst_1
     198: aload         7
     200: invokevirtual #17                 // Method java/lang/String.intern:()Ljava/lang/String;
     203: aastore
     204: aload_3
     205: iconst_2
     206: aload_1
     207: invokevirtual #17                 // Method java/lang/String.intern:()Ljava/lang/String;
     210: aastore
     211: aload         4
     213: aload_3
     214: iconst_2
     215: aaload
     216: aload_3
     217: invokevirtual #20                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     220: pop
     221: aload_0
     222: iconst_1
     223: putfield      #4                  // Field tablesDirty:Z
     226: aload_3
     227: areturn

  java.lang.String getURI(java.lang.String);
    Code:
       0: ldc           #18                 // String
       2: aload_1
       3: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          14
       9: aload_0
      10: getfield      #2                  // Field defaultNS:Ljava/lang/String;
      13: areturn
      14: aload_0
      15: getfield      #9                  // Field prefixTable:Ljava/util/Hashtable;
      18: ifnonnull     23
      21: aconst_null
      22: areturn
      23: aload_0
      24: getfield      #9                  // Field prefixTable:Ljava/util/Hashtable;
      27: aload_1
      28: invokevirtual #22                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #24                 // class java/lang/String
      34: areturn

  java.lang.String getPrefix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field uriTable:Ljava/util/Hashtable;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #10                 // Field uriTable:Ljava/util/Hashtable;
      13: aload_1
      14: invokevirtual #22                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #24                 // class java/lang/String
      20: areturn

  java.util.Enumeration getDeclaredPrefixes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field declarations:Ljava/util/Vector;
       4: ifnonnull     11
       7: getstatic     #28                 // Field EMPTY_ENUMERATION:Ljava/util/Enumeration;
      10: areturn
      11: aload_0
      12: getfield      #3                  // Field declarations:Ljava/util/Vector;
      15: invokevirtual #29                 // Method java/util/Vector.elements:()Ljava/util/Enumeration;
      18: areturn

  java.util.Enumeration getPrefixes();
    Code:
       0: aload_0
       1: getfield      #9                  // Field prefixTable:Ljava/util/Hashtable;
       4: ifnonnull     11
       7: getstatic     #28                 // Field EMPTY_ENUMERATION:Ljava/util/Enumeration;
      10: areturn
      11: aload_0
      12: getfield      #9                  // Field prefixTable:Ljava/util/Hashtable;
      15: invokevirtual #30                 // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
      18: areturn

  private void copyTables();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field prefixTable:Ljava/util/Hashtable;
       5: invokevirtual #31                 // Method java/util/Hashtable.clone:()Ljava/lang/Object;
       8: checkcast     #7                  // class java/util/Hashtable
      11: putfield      #9                  // Field prefixTable:Ljava/util/Hashtable;
      14: aload_0
      15: aload_0
      16: getfield      #10                 // Field uriTable:Ljava/util/Hashtable;
      19: invokevirtual #31                 // Method java/util/Hashtable.clone:()Ljava/lang/Object;
      22: checkcast     #7                  // class java/util/Hashtable
      25: putfield      #10                 // Field uriTable:Ljava/util/Hashtable;
      28: aload_0
      29: getfield      #11                 // Field elementNameTable:Ljava/util/Hashtable;
      32: ifnull        46
      35: aload_0
      36: new           #7                  // class java/util/Hashtable
      39: dup
      40: invokespecial #8                  // Method java/util/Hashtable."<init>":()V
      43: putfield      #11                 // Field elementNameTable:Ljava/util/Hashtable;
      46: aload_0
      47: getfield      #12                 // Field attributeNameTable:Ljava/util/Hashtable;
      50: ifnull        64
      53: aload_0
      54: new           #7                  // class java/util/Hashtable
      57: dup
      58: invokespecial #8                  // Method java/util/Hashtable."<init>":()V
      61: putfield      #12                 // Field attributeNameTable:Ljava/util/Hashtable;
      64: aload_0
      65: iconst_1
      66: putfield      #4                  // Field tablesDirty:Z
      69: return

  static {};
    Code:
       0: new           #15                 // class java/util/Vector
       3: dup
       4: invokespecial #16                 // Method java/util/Vector."<init>":()V
       7: invokevirtual #29                 // Method java/util/Vector.elements:()Ljava/util/Enumeration;
      10: putstatic     #28                 // Field EMPTY_ENUMERATION:Ljava/util/Enumeration;
      13: return
}
