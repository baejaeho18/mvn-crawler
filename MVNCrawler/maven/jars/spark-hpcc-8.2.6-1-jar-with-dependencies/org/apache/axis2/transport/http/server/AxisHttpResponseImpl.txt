Compiled from "AxisHttpResponseImpl.java"
public class org.apache.axis2.transport.http.server.AxisHttpResponseImpl implements org.apache.axis2.transport.http.server.AxisHttpResponse,org.apache.axis2.transport.OutTransportInfo {
  private final org.apache.http.HttpResponse response;

  private final org.apache.axis2.transport.http.server.AxisHttpConnection conn;

  private final org.apache.http.protocol.HttpProcessor httpproc;

  private final org.apache.http.protocol.HttpContext context;

  private org.apache.axis2.transport.http.server.AxisHttpResponseImpl$AutoCommitOutputStream outstream;

  private java.lang.String contentType;

  private volatile boolean commited;

  public org.apache.axis2.transport.http.server.AxisHttpResponseImpl(org.apache.axis2.transport.http.server.AxisHttpConnection, org.apache.http.HttpResponse, org.apache.http.protocol.HttpProcessor, org.apache.http.protocol.HttpContext);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: ifnonnull     18
       8: new           #3                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #4                  // String HTTP response may not be null
      14: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: ifnonnull     32
      22: new           #3                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #6                  // String HTTP connection may not be null
      28: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_3
      33: ifnonnull     46
      36: new           #3                  // class java/lang/IllegalArgumentException
      39: dup
      40: ldc           #7                  // String HTTP processor may not be null
      42: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload         4
      48: ifnonnull     61
      51: new           #3                  // class java/lang/IllegalArgumentException
      54: dup
      55: ldc           #8                  // String HTTP context may not be null
      57: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: aload_2
      63: putfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
      66: aload_0
      67: aload_1
      68: putfield      #1                  // Field conn:Lorg/apache/axis2/transport/http/server/AxisHttpConnection;
      71: aload_0
      72: aload_3
      73: putfield      #10                 // Field httpproc:Lorg/apache/http/protocol/HttpProcessor;
      76: aload_0
      77: aload         4
      79: putfield      #11                 // Field context:Lorg/apache/http/protocol/HttpContext;
      82: return

  private void assertNotCommitted();
    Code:
       0: aload_0
       1: getfield      #12                 // Field commited:Z
       4: ifeq          17
       7: new           #13                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #14                 // String Response already committed
      13: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public boolean isCommitted();
    Code:
       0: aload_0
       1: getfield      #12                 // Field commited:Z
       4: ireturn

  public void commit() throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field commited:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #12                 // Field commited:Z
      13: aload_0
      14: getfield      #11                 // Field context:Lorg/apache/http/protocol/HttpContext;
      17: ldc           #17                 // String http.connection
      19: aload_0
      20: getfield      #1                  // Field conn:Lorg/apache/axis2/transport/http/server/AxisHttpConnection;
      23: invokeinterface #18,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: getfield      #11                 // Field context:Lorg/apache/http/protocol/HttpContext;
      32: ldc           #19                 // String http.response
      34: aload_0
      35: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
      38: invokeinterface #18,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      43: new           #20                 // class org/apache/http/entity/BasicHttpEntity
      46: dup
      47: invokespecial #21                 // Method org/apache/http/entity/BasicHttpEntity."<init>":()V
      50: astore_1
      51: aload_1
      52: iconst_1
      53: invokevirtual #22                 // Method org/apache/http/entity/BasicHttpEntity.setChunked:(Z)V
      56: aload_1
      57: aload_0
      58: getfield      #23                 // Field contentType:Ljava/lang/String;
      61: invokevirtual #24                 // Method org/apache/http/entity/BasicHttpEntity.setContentType:(Ljava/lang/String;)V
      64: aload_0
      65: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
      68: aload_1
      69: invokeinterface #25,  2           // InterfaceMethod org/apache/http/HttpResponse.setEntity:(Lorg/apache/http/HttpEntity;)V
      74: aload_0
      75: getfield      #10                 // Field httpproc:Lorg/apache/http/protocol/HttpProcessor;
      78: aload_0
      79: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
      82: aload_0
      83: getfield      #11                 // Field context:Lorg/apache/http/protocol/HttpContext;
      86: invokeinterface #26,  3           // InterfaceMethod org/apache/http/protocol/HttpProcessor.process:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V
      91: aload_0
      92: getfield      #1                  // Field conn:Lorg/apache/axis2/transport/http/server/AxisHttpConnection;
      95: aload_0
      96: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
      99: invokeinterface #27,  2           // InterfaceMethod org/apache/axis2/transport/http/server/AxisHttpConnection.sendResponse:(Lorg/apache/http/HttpResponse;)V
     104: return

  public java.io.OutputStream getOutputStream();
    Code:
       0: aload_0
       1: getfield      #28                 // Field outstream:Lorg/apache/axis2/transport/http/server/AxisHttpResponseImpl$AutoCommitOutputStream;
       4: ifnonnull     19
       7: aload_0
       8: new           #29                 // class org/apache/axis2/transport/http/server/AxisHttpResponseImpl$AutoCommitOutputStream
      11: dup
      12: aload_0
      13: invokespecial #30                 // Method org/apache/axis2/transport/http/server/AxisHttpResponseImpl$AutoCommitOutputStream."<init>":(Lorg/apache/axis2/transport/http/server/AxisHttpResponseImpl;)V
      16: putfield      #28                 // Field outstream:Lorg/apache/axis2/transport/http/server/AxisHttpResponseImpl$AutoCommitOutputStream;
      19: aload_0
      20: getfield      #28                 // Field outstream:Lorg/apache/axis2/transport/http/server/AxisHttpResponseImpl$AutoCommitOutputStream;
      23: areturn

  public void sendError(int, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method assertNotCommitted:()V
       4: aload_0
       5: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       8: invokeinterface #32,  1           // InterfaceMethod org/apache/http/HttpResponse.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
      13: astore_3
      14: aload_0
      15: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
      18: aload_3
      19: iload_1
      20: aload_2
      21: invokeinterface #33,  4           // InterfaceMethod org/apache/http/HttpResponse.setStatusLine:(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)V
      26: return

  public void sendError(int);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method assertNotCommitted:()V
       4: aload_0
       5: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       8: iload_1
       9: invokeinterface #34,  2           // InterfaceMethod org/apache/http/HttpResponse.setStatusCode:(I)V
      14: return

  public void setStatus(int);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method assertNotCommitted:()V
       4: aload_0
       5: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       8: iload_1
       9: invokeinterface #34,  2           // InterfaceMethod org/apache/http/HttpResponse.setStatusCode:(I)V
      14: return

  public void setContentType(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method assertNotCommitted:()V
       4: aload_0
       5: aload_1
       6: putfield      #23                 // Field contentType:Ljava/lang/String;
       9: return

  public org.apache.http.ProtocolVersion getProtocolVersion();
    Code:
       0: aload_0
       1: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       4: invokeinterface #32,  1           // InterfaceMethod org/apache/http/HttpResponse.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
       9: areturn

  public void addHeader(org.apache.http.Header);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method assertNotCommitted:()V
       4: aload_0
       5: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       8: aload_1
       9: invokeinterface #35,  2           // InterfaceMethod org/apache/http/HttpResponse.addHeader:(Lorg/apache/http/Header;)V
      14: return

  public void addHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method assertNotCommitted:()V
       4: aload_0
       5: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       8: aload_1
       9: aload_2
      10: invokeinterface #36,  3           // InterfaceMethod org/apache/http/HttpResponse.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      15: return

  public boolean containsHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod org/apache/http/HttpResponse.containsHeader:(Ljava/lang/String;)Z
      10: ireturn

  public org.apache.http.Header[] getAllHeaders();
    Code:
       0: aload_0
       1: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       4: invokeinterface #38,  1           // InterfaceMethod org/apache/http/HttpResponse.getAllHeaders:()[Lorg/apache/http/Header;
       9: areturn

  public org.apache.http.Header getFirstHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod org/apache/http/HttpResponse.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;
      10: areturn

  public org.apache.http.Header[] getHeaders(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod org/apache/http/HttpResponse.getHeaders:(Ljava/lang/String;)[Lorg/apache/http/Header;
      10: areturn

  public org.apache.http.Header getLastHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod org/apache/http/HttpResponse.getLastHeader:(Ljava/lang/String;)Lorg/apache/http/Header;
      10: areturn

  public org.apache.http.HeaderIterator headerIterator();
    Code:
       0: aload_0
       1: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       4: invokeinterface #42,  1           // InterfaceMethod org/apache/http/HttpResponse.headerIterator:()Lorg/apache/http/HeaderIterator;
       9: areturn

  public org.apache.http.HeaderIterator headerIterator(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       4: aload_1
       5: invokeinterface #43,  2           // InterfaceMethod org/apache/http/HttpResponse.headerIterator:(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;
      10: areturn

  public void removeHeader(org.apache.http.Header);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method assertNotCommitted:()V
       4: aload_0
       5: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod org/apache/http/HttpResponse.removeHeader:(Lorg/apache/http/Header;)V
      14: return

  public void removeHeaders(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method assertNotCommitted:()V
       4: aload_0
       5: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       8: aload_1
       9: invokeinterface #45,  2           // InterfaceMethod org/apache/http/HttpResponse.removeHeaders:(Ljava/lang/String;)V
      14: return

  public void setHeader(org.apache.http.Header);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method assertNotCommitted:()V
       4: aload_0
       5: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       8: aload_1
       9: invokeinterface #46,  2           // InterfaceMethod org/apache/http/HttpResponse.setHeader:(Lorg/apache/http/Header;)V
      14: return

  public void setHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method assertNotCommitted:()V
       4: aload_0
       5: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       8: aload_1
       9: aload_2
      10: invokeinterface #47,  3           // InterfaceMethod org/apache/http/HttpResponse.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      15: return

  public void setHeaders(org.apache.http.Header[]);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method assertNotCommitted:()V
       4: aload_0
       5: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       8: aload_1
       9: invokeinterface #48,  2           // InterfaceMethod org/apache/http/HttpResponse.setHeaders:([Lorg/apache/http/Header;)V
      14: return

  public org.apache.http.params.HttpParams getParams();
    Code:
       0: aload_0
       1: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       4: invokeinterface #49,  1           // InterfaceMethod org/apache/http/HttpResponse.getParams:()Lorg/apache/http/params/HttpParams;
       9: areturn

  public void setParams(org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: getfield      #9                  // Field response:Lorg/apache/http/HttpResponse;
       4: aload_1
       5: invokeinterface #50,  2           // InterfaceMethod org/apache/http/HttpResponse.setParams:(Lorg/apache/http/params/HttpParams;)V
      10: return

  static org.apache.axis2.transport.http.server.AxisHttpConnection access$000(org.apache.axis2.transport.http.server.AxisHttpResponseImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field conn:Lorg/apache/axis2/transport/http/server/AxisHttpConnection;
       4: areturn
}
