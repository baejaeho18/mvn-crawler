Compiled from "CommonsTransportHeaders.java"
public abstract class org.apache.axis2.transport.http.CommonsTransportHeaders implements java.util.Map {
  java.util.HashMap headerMap;

  public org.apache.axis2.transport.http.CommonsTransportHeaders();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field headerMap:Ljava/util/HashMap;
       9: return

  protected abstract void init();

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #3                  // Method init:()V
      11: aload_0
      12: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
      15: invokevirtual #4                  // Method java/util/HashMap.size:()I
      18: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: ifnull        14
       7: aload_0
       8: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
      11: invokevirtual #5                  // Method java/util/HashMap.clear:()V
      14: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #3                  // Method init:()V
      11: aload_0
      12: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
      15: invokevirtual #6                  // Method java/util/HashMap.isEmpty:()Z
      18: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #3                  // Method init:()V
      11: aload_0
      12: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
      15: aload_1
      16: invokevirtual #7                  // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      19: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #3                  // Method init:()V
      11: aload_0
      12: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
      15: aload_1
      16: invokevirtual #8                  // Method java/util/HashMap.containsValue:(Ljava/lang/Object;)Z
      19: ireturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #3                  // Method init:()V
      11: aload_0
      12: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
      15: invokevirtual #9                  // Method java/util/HashMap.values:()Ljava/util/Collection;
      18: areturn

  public void putAll(java.util.Map);
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #3                  // Method init:()V
      11: aload_0
      12: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
      15: aload_1
      16: invokevirtual #10                 // Method java/util/HashMap.putAll:(Ljava/util/Map;)V
      19: return

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #3                  // Method init:()V
      11: aload_0
      12: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
      15: invokevirtual #11                 // Method java/util/HashMap.entrySet:()Ljava/util/Set;
      18: areturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #3                  // Method init:()V
      11: aload_0
      12: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
      15: invokevirtual #12                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
      18: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #3                  // Method init:()V
      11: aload_0
      12: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
      15: aload_1
      16: invokevirtual #13                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #3                  // Method init:()V
      11: aload_0
      12: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
      15: aload_1
      16: invokevirtual #14                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #3                  // Method init:()V
      11: aload_0
      12: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
      15: aload_1
      16: aload_2
      17: invokevirtual #15                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public java.util.HashMap getHeaderMap();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerMap:Ljava/util/HashMap;
       4: areturn

  public void setHeaderMap(java.util.HashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field headerMap:Ljava/util/HashMap;
       5: return
}
