Compiled from "RESTRequestEntity.java"
public abstract class org.apache.axis2.transport.http.RESTRequestEntity {
  private byte[] bytes;

  private java.lang.String charSetEnc;

  private boolean chunked;

  private org.apache.axiom.om.OMElement element;

  private org.apache.axis2.context.MessageContext msgCtxt;

  private java.lang.String soapActionString;

  private org.apache.axiom.om.OMOutputFormat format;

  public org.apache.axis2.transport.http.RESTRequestEntity(org.apache.axiom.om.OMElement, boolean, org.apache.axis2.context.MessageContext, java.lang.String, java.lang.String, org.apache.axiom.om.OMOutputFormat);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field element:Lorg/apache/axiom/om/OMElement;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field chunked:Z
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field msgCtxt:Lorg/apache/axis2/context/MessageContext;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field charSetEnc:Ljava/lang/String;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field soapActionString:Ljava/lang/String;
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field format:Lorg/apache/axiom/om/OMOutputFormat;
      37: return

  private void handleOMOutput(java.io.OutputStream, boolean) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field format:Lorg/apache/axiom/om/OMOutputFormat;
       4: iload_2
       5: invokevirtual #8                  // Method org/apache/axiom/om/OMOutputFormat.setDoOptimize:(Z)V
       8: aload_0
       9: getfield      #2                  // Field element:Lorg/apache/axiom/om/OMElement;
      12: aload_1
      13: aload_0
      14: getfield      #7                  // Field format:Lorg/apache/axiom/om/OMOutputFormat;
      17: invokeinterface #9,  3            // InterfaceMethod org/apache/axiom/om/OMElement.serializeAndConsume:(Ljava/io/OutputStream;Lorg/apache/axiom/om/OMOutputFormat;)V
      22: return

  public byte[] writeBytes() throws org.apache.axis2.AxisFault;
    Code:
       0: new           #10                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #11                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field format:Lorg/apache/axiom/om/OMOutputFormat;
      12: invokevirtual #12                 // Method org/apache/axiom/om/OMOutputFormat.isOptimized:()Z
      15: ifne          50
      18: new           #13                 // class org/apache/axiom/om/OMOutputFormat
      21: dup
      22: invokespecial #14                 // Method org/apache/axiom/om/OMOutputFormat."<init>":()V
      25: astore_2
      26: aload_2
      27: aload_0
      28: getfield      #5                  // Field charSetEnc:Ljava/lang/String;
      31: invokevirtual #15                 // Method org/apache/axiom/om/OMOutputFormat.setCharSetEncoding:(Ljava/lang/String;)V
      34: aload_0
      35: getfield      #2                  // Field element:Lorg/apache/axiom/om/OMElement;
      38: aload_1
      39: aload_2
      40: invokeinterface #9,  3            // InterfaceMethod org/apache/axiom/om/OMElement.serializeAndConsume:(Ljava/io/OutputStream;Lorg/apache/axiom/om/OMOutputFormat;)V
      45: aload_1
      46: invokevirtual #16                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      49: areturn
      50: aload_0
      51: getfield      #7                  // Field format:Lorg/apache/axiom/om/OMOutputFormat;
      54: aload_0
      55: getfield      #5                  // Field charSetEnc:Ljava/lang/String;
      58: invokevirtual #15                 // Method org/apache/axiom/om/OMOutputFormat.setCharSetEncoding:(Ljava/lang/String;)V
      61: aload_0
      62: getfield      #7                  // Field format:Lorg/apache/axiom/om/OMOutputFormat;
      65: iconst_1
      66: invokevirtual #8                  // Method org/apache/axiom/om/OMOutputFormat.setDoOptimize:(Z)V
      69: aload_0
      70: getfield      #2                  // Field element:Lorg/apache/axiom/om/OMElement;
      73: aload_1
      74: aload_0
      75: getfield      #7                  // Field format:Lorg/apache/axiom/om/OMOutputFormat;
      78: invokeinterface #9,  3            // InterfaceMethod org/apache/axiom/om/OMElement.serializeAndConsume:(Ljava/io/OutputStream;Lorg/apache/axiom/om/OMOutputFormat;)V
      83: aload_1
      84: invokevirtual #16                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      87: areturn
      88: astore_1
      89: aload_1
      90: invokestatic  #18                 // Method org/apache/axis2/AxisFault.makeFault:(Ljava/lang/Throwable;)Lorg/apache/axis2/AxisFault;
      93: athrow
      94: astore_1
      95: aload_1
      96: invokestatic  #18                 // Method org/apache/axis2/AxisFault.makeFault:(Ljava/lang/Throwable;)Lorg/apache/axis2/AxisFault;
      99: athrow
    Exception table:
       from    to  target type
           0    49    88   Class javax/xml/stream/XMLStreamException
          50    87    88   Class javax/xml/stream/XMLStreamException
           0    49    94   Class javax/xml/stream/FactoryConfigurationError
          50    87    94   Class javax/xml/stream/FactoryConfigurationError

  public void writeRequest(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field chunked:Z
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: aload_0
      10: getfield      #7                  // Field format:Lorg/apache/axiom/om/OMOutputFormat;
      13: invokevirtual #20                 // Method org/apache/axiom/om/OMOutputFormat.isDoingSWA:()Z
      16: invokespecial #21                 // Method handleOMOutput:(Ljava/io/OutputStream;Z)V
      19: goto          45
      22: aload_0
      23: getfield      #22                 // Field bytes:[B
      26: ifnonnull     37
      29: aload_0
      30: aload_0
      31: invokevirtual #23                 // Method writeBytes:()[B
      34: putfield      #22                 // Field bytes:[B
      37: aload_1
      38: aload_0
      39: getfield      #22                 // Field bytes:[B
      42: invokevirtual #24                 // Method java/io/OutputStream.write:([B)V
      45: aload_1
      46: invokevirtual #25                 // Method java/io/OutputStream.flush:()V
      49: goto          70
      52: astore_2
      53: aload_2
      54: invokestatic  #18                 // Method org/apache/axis2/AxisFault.makeFault:(Ljava/lang/Throwable;)Lorg/apache/axis2/AxisFault;
      57: athrow
      58: astore_2
      59: aload_2
      60: invokestatic  #18                 // Method org/apache/axis2/AxisFault.makeFault:(Ljava/lang/Throwable;)Lorg/apache/axis2/AxisFault;
      63: athrow
      64: astore_2
      65: aload_2
      66: invokestatic  #18                 // Method org/apache/axis2/AxisFault.makeFault:(Ljava/lang/Throwable;)Lorg/apache/axis2/AxisFault;
      69: athrow
      70: return
    Exception table:
       from    to  target type
           0    49    52   Class javax/xml/stream/XMLStreamException
           0    49    58   Class javax/xml/stream/FactoryConfigurationError
           0    49    64   Class java/io/IOException

  public long getContentLength();
    Code:
       0: aload_0
       1: getfield      #3                  // Field chunked:Z
       4: ifeq          11
       7: ldc2_w        #27                 // long -1l
      10: lreturn
      11: aload_0
      12: getfield      #22                 // Field bytes:[B
      15: ifnonnull     26
      18: aload_0
      19: aload_0
      20: invokevirtual #23                 // Method writeBytes:()[B
      23: putfield      #22                 // Field bytes:[B
      26: aload_0
      27: getfield      #22                 // Field bytes:[B
      30: arraylength
      31: i2l
      32: lreturn
      33: astore_1
      34: ldc2_w        #27                 // long -1l
      37: lreturn
    Exception table:
       from    to  target type
           0    10    33   Class org/apache/axis2/AxisFault
          11    32    33   Class org/apache/axis2/AxisFault

  public java.lang.String getContentTypeAsString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field format:Lorg/apache/axiom/om/OMOutputFormat;
       4: invokevirtual #30                 // Method org/apache/axiom/om/OMOutputFormat.getCharSetEncoding:()Ljava/lang/String;
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field format:Lorg/apache/axiom/om/OMOutputFormat;
      12: invokevirtual #31                 // Method org/apache/axiom/om/OMOutputFormat.getContentType:()Ljava/lang/String;
      15: astore_2
      16: aload_1
      17: ifnull        44
      20: new           #32                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      27: aload_2
      28: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #35                 // String ; charset=
      33: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: astore_2
      44: aload_0
      45: getfield      #4                  // Field msgCtxt:Lorg/apache/axis2/context/MessageContext;
      48: invokevirtual #37                 // Method org/apache/axis2/context/MessageContext.isSOAP11:()Z
      51: ifne          123
      54: aload_0
      55: getfield      #6                  // Field soapActionString:Ljava/lang/String;
      58: ifnull        123
      61: ldc           #38                 // String
      63: aload_0
      64: getfield      #6                  // Field soapActionString:Ljava/lang/String;
      67: invokevirtual #39                 // Method java/lang/String.trim:()Ljava/lang/String;
      70: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifne          123
      76: ldc           #41                 // String \"\"
      78: aload_0
      79: getfield      #6                  // Field soapActionString:Ljava/lang/String;
      82: invokevirtual #39                 // Method java/lang/String.trim:()Ljava/lang/String;
      85: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      88: ifne          123
      91: new           #32                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      98: aload_2
      99: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: ldc           #42                 // String ;action=\"
     104: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_0
     108: getfield      #6                  // Field soapActionString:Ljava/lang/String;
     111: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: ldc           #43                 // String \";
     116: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: astore_2
     123: aload_2
     124: areturn

  public boolean isRepeatable();
    Code:
       0: iconst_1
       1: ireturn

  public byte[] getBytes();
    Code:
       0: aload_0
       1: getfield      #22                 // Field bytes:[B
       4: areturn

  public void setBytes(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field bytes:[B
       5: return

  public java.lang.String getCharSetEnc();
    Code:
       0: aload_0
       1: getfield      #5                  // Field charSetEnc:Ljava/lang/String;
       4: areturn

  public void setCharSetEnc(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field charSetEnc:Ljava/lang/String;
       5: return

  public boolean isChunked();
    Code:
       0: aload_0
       1: getfield      #3                  // Field chunked:Z
       4: ireturn

  public void setChunked(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field chunked:Z
       5: return

  public org.apache.axiom.om.OMElement getElement();
    Code:
       0: aload_0
       1: getfield      #2                  // Field element:Lorg/apache/axiom/om/OMElement;
       4: areturn

  public void setElement(org.apache.axiom.om.OMElement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field element:Lorg/apache/axiom/om/OMElement;
       5: return

  public org.apache.axis2.context.MessageContext getMsgCtxt();
    Code:
       0: aload_0
       1: getfield      #4                  // Field msgCtxt:Lorg/apache/axis2/context/MessageContext;
       4: areturn

  public void setMsgCtxt(org.apache.axis2.context.MessageContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field msgCtxt:Lorg/apache/axis2/context/MessageContext;
       5: return

  public java.lang.String getSoapActionString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field soapActionString:Ljava/lang/String;
       4: areturn

  public void setSoapActionString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field soapActionString:Ljava/lang/String;
       5: return

  public org.apache.axiom.om.OMOutputFormat getFormat();
    Code:
       0: aload_0
       1: getfield      #7                  // Field format:Lorg/apache/axiom/om/OMOutputFormat;
       4: areturn

  public void setFormat(org.apache.axiom.om.OMOutputFormat);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field format:Lorg/apache/axiom/om/OMOutputFormat;
       5: return
}
