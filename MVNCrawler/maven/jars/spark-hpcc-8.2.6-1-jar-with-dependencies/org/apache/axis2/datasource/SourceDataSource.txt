Compiled from "SourceDataSource.java"
public class org.apache.axis2.datasource.SourceDataSource extends org.apache.axiom.om.ds.OMDataSourceExtBase {
  private static final org.apache.commons.logging.Log log;

  javax.xml.transform.Source data;

  public org.apache.axis2.datasource.SourceDataSource(javax.xml.transform.Source);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/axiom/om/ds/OMDataSourceExtBase."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field data:Ljavax/xml/transform/Source;
       9: return

  public void close();
    Code:
       0: return

  public org.apache.axiom.om.OMDataSourceExt copy();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getObject();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:Ljavax/xml/transform/Source;
       4: areturn

  public javax.xml.stream.XMLStreamReader getReader() throws javax.xml.stream.XMLStreamException;
    Code:
       0: ldc           #3                  // String utf-8
       2: astore_1
       3: new           #4                  // class java/io/ByteArrayInputStream
       6: dup
       7: aload_0
       8: aload_1
       9: invokevirtual #5                  // Method getXMLBytes:(Ljava/lang/String;)[B
      12: invokespecial #6                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      15: astore_2
      16: aload_2
      17: aload_1
      18: invokestatic  #7                  // Method org/apache/axiom/om/util/StAXUtils.createXMLStreamReader:(Ljava/io/InputStream;Ljava/lang/String;)Ljavax/xml/stream/XMLStreamReader;
      21: areturn
      22: astore_1
      23: new           #9                  // class javax/xml/stream/XMLStreamException
      26: dup
      27: aload_1
      28: invokespecial #10                 // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/Throwable;)V
      31: athrow
    Exception table:
       from    to  target type
           0    21    22   Class java/io/UnsupportedEncodingException

  public byte[] getXMLBytes(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
       3: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          21
      11: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
      14: ldc           #13                 // String Start getXMLBytes
      16: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      21: aconst_null
      22: astore_2
      23: aconst_null
      24: checkcast     #15                 // class "[B"
      27: astore_2
      28: aload_0
      29: getfield      #2                  // Field data:Ljavax/xml/transform/Source;
      32: instanceof    #16                 // class javax/xml/transform/stream/StreamSource
      35: ifeq          61
      38: aload_0
      39: getfield      #2                  // Field data:Ljavax/xml/transform/Source;
      42: checkcast     #16                 // class javax/xml/transform/stream/StreamSource
      45: invokevirtual #17                 // Method javax/xml/transform/stream/StreamSource.getInputStream:()Ljava/io/InputStream;
      48: astore_3
      49: aload_3
      50: ifnull        58
      53: aload_3
      54: invokestatic  #18                 // Method getBytesFromStream:(Ljava/io/InputStream;)[B
      57: astore_2
      58: goto          103
      61: new           #19                 // class java/io/ByteArrayOutputStream
      64: dup
      65: invokespecial #20                 // Method java/io/ByteArrayOutputStream."<init>":()V
      68: astore_3
      69: new           #21                 // class javax/xml/transform/stream/StreamResult
      72: dup
      73: aload_3
      74: invokespecial #22                 // Method javax/xml/transform/stream/StreamResult."<init>":(Ljava/io/OutputStream;)V
      77: astore        4
      79: invokestatic  #23                 // Method javax/xml/transform/TransformerFactory.newInstance:()Ljavax/xml/transform/TransformerFactory;
      82: invokevirtual #24                 // Method javax/xml/transform/TransformerFactory.newTransformer:()Ljavax/xml/transform/Transformer;
      85: astore        5
      87: aload         5
      89: aload_0
      90: getfield      #2                  // Field data:Ljavax/xml/transform/Source;
      93: aload         4
      95: invokevirtual #25                 // Method javax/xml/transform/Transformer.transform:(Ljavax/xml/transform/Source;Ljavax/xml/transform/Result;)V
      98: aload_3
      99: invokevirtual #26                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     102: astore_2
     103: goto          122
     106: astore_3
     107: aload_3
     108: athrow
     109: astore_3
     110: aload_3
     111: athrow
     112: astore_3
     113: new           #27                 // class org/apache/axiom/om/OMException
     116: dup
     117: aload_3
     118: invokespecial #29                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/Throwable;)V
     121: athrow
     122: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
     125: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     130: ifeq          143
     133: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
     136: ldc           #30                 // String End getXMLBytes
     138: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     143: aload_2
     144: areturn
    Exception table:
       from    to  target type
          23   103   106   Class org/apache/axiom/om/OMException
          23   103   109   Class java/io/UnsupportedEncodingException
          23   103   112   Class java/lang/Throwable

  public boolean isDestructiveRead();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isDestructiveWrite();
    Code:
       0: iconst_0
       1: ireturn

  private static byte[] getBytesFromStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method java/io/InputStream.available:()I
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokevirtual #32                 // Method java/io/InputStream.read:([B)I
      12: pop
      13: aload_1
      14: areturn

  static {};
    Code:
       0: ldc           #33                 // class org/apache/axis2/datasource/SourceDataSource
       2: invokestatic  #34                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
       8: return
}
