Compiled from "PolicyUtil.java"
public class org.apache.axis2.util.PolicyUtil {
  public org.apache.axis2.util.PolicyUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String getSafeString(java.lang.String);
    Code:
       0: new           #2                  // class java/lang/StringBuffer
       3: dup
       4: invokespecial #3                  // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #4                  // Method java/lang/String.toCharArray:()[C
      12: astore_2
      13: iconst_0
      14: istore_3
      15: iload_3
      16: aload_2
      17: arraylength
      18: if_icmpge     153
      21: aload_2
      22: iload_3
      23: caload
      24: istore        4
      26: iload         4
      28: lookupswitch  { // 4
                    10: 106
                    13: 123
                    34: 89
                    92: 72
               default: 140
          }
      72: aload_1
      73: bipush        92
      75: invokevirtual #5                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      78: pop
      79: aload_1
      80: bipush        92
      82: invokevirtual #5                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      85: pop
      86: goto          147
      89: aload_1
      90: bipush        92
      92: invokevirtual #5                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      95: pop
      96: aload_1
      97: bipush        34
      99: invokevirtual #5                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     102: pop
     103: goto          147
     106: aload_1
     107: bipush        92
     109: invokevirtual #5                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     112: pop
     113: aload_1
     114: bipush        110
     116: invokevirtual #5                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     119: pop
     120: goto          147
     123: aload_1
     124: bipush        92
     126: invokevirtual #5                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     129: pop
     130: aload_1
     131: bipush        114
     133: invokevirtual #5                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     136: pop
     137: goto          147
     140: aload_1
     141: iload         4
     143: invokevirtual #5                  // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     146: pop
     147: iinc          3, 1
     150: goto          15
     153: aload_1
     154: invokevirtual #6                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     157: areturn

  public static org.apache.neethi.PolicyReference createPolicyReference(org.apache.neethi.Policy);
    Code:
       0: new           #7                  // class org/apache/neethi/PolicyReference
       3: dup
       4: invokespecial #8                  // Method org/apache/neethi/PolicyReference."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #9                  // Method org/apache/neethi/Policy.getName:()Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: ifnonnull     61
      17: aload_0
      18: invokevirtual #10                 // Method org/apache/neethi/Policy.getId:()Ljava/lang/String;
      21: astore_2
      22: aload_2
      23: ifnonnull     35
      26: invokestatic  #11                 // Method org/apache/axiom/util/UIDGenerator.generateUID:()Ljava/lang/String;
      29: astore_2
      30: aload_0
      31: aload_2
      32: invokevirtual #12                 // Method org/apache/neethi/Policy.setId:(Ljava/lang/String;)V
      35: aload_1
      36: new           #13                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #15                 // String #
      45: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_2
      49: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokevirtual #18                 // Method org/apache/neethi/PolicyReference.setURI:(Ljava/lang/String;)V
      58: goto          66
      61: aload_1
      62: aload_2
      63: invokevirtual #18                 // Method org/apache/neethi/PolicyReference.setURI:(Ljava/lang/String;)V
      66: aload_1
      67: areturn

  public static org.apache.axiom.om.OMElement getPolicyComponentAsOMElement(org.apache.neethi.PolicyComponent, org.apache.axis2.util.ExternalPolicySerializer) throws javax.xml.stream.XMLStreamException, javax.xml.stream.FactoryConfigurationError;
    Code:
       0: aload_0
       1: instanceof    #19                 // class org/apache/neethi/Policy
       4: ifeq          44
       7: new           #20                 // class java/io/ByteArrayOutputStream
      10: dup
      11: invokespecial #21                 // Method java/io/ByteArrayOutputStream."<init>":()V
      14: astore_2
      15: aload_1
      16: aload_0
      17: checkcast     #19                 // class org/apache/neethi/Policy
      20: aload_2
      21: invokevirtual #22                 // Method org/apache/axis2/util/ExternalPolicySerializer.serialize:(Lorg/apache/neethi/Policy;Ljava/io/OutputStream;)V
      24: new           #23                 // class java/io/ByteArrayInputStream
      27: dup
      28: aload_2
      29: invokevirtual #24                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      32: invokespecial #25                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      35: astore_3
      36: aload_3
      37: invokestatic  #26                 // Method org/apache/axis2/util/XMLUtils.toOM:(Ljava/io/InputStream;)Lorg/apache/axiom/om/OMNode;
      40: checkcast     #27                 // class org/apache/axiom/om/OMElement
      43: areturn
      44: invokestatic  #28                 // Method org/apache/axiom/om/OMAbstractFactory.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      47: astore_2
      48: aload_2
      49: ldc           #30                 // String PolicyReference
      51: ldc           #31                 // String http://www.w3.org/ns/ws-policy
      53: ldc           #32                 // String wsp
      55: invokeinterface #33,  4           // InterfaceMethod org/apache/axiom/om/OMFactory.createOMElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/axiom/om/OMElement;
      60: astore_3
      61: aload_3
      62: ldc           #34                 // String URI
      64: aload_0
      65: checkcast     #7                  // class org/apache/neethi/PolicyReference
      68: invokevirtual #35                 // Method org/apache/neethi/PolicyReference.getURI:()Ljava/lang/String;
      71: aconst_null
      72: invokeinterface #36,  4           // InterfaceMethod org/apache/axiom/om/OMElement.addAttribute:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/axiom/om/OMNamespace;)Lorg/apache/axiom/om/OMAttribute;
      77: pop
      78: aload_3
      79: areturn

  public static org.apache.axiom.om.OMElement getPolicyComponentAsOMElement(org.apache.neethi.PolicyComponent) throws javax.xml.stream.XMLStreamException, javax.xml.stream.FactoryConfigurationError;
    Code:
       0: new           #20                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #21                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: invokestatic  #37                 // Method javax/xml/stream/XMLOutputFactory.newInstance:()Ljavax/xml/stream/XMLOutputFactory;
      11: aload_1
      12: invokevirtual #38                 // Method javax/xml/stream/XMLOutputFactory.createXMLStreamWriter:(Ljava/io/OutputStream;)Ljavax/xml/stream/XMLStreamWriter;
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokeinterface #39,  2           // InterfaceMethod org/apache/neethi/PolicyComponent.serialize:(Ljavax/xml/stream/XMLStreamWriter;)V
      23: aload_2
      24: invokeinterface #40,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.flush:()V
      29: new           #23                 // class java/io/ByteArrayInputStream
      32: dup
      33: aload_1
      34: invokevirtual #24                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      37: invokespecial #25                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      40: astore_3
      41: aload_3
      42: invokestatic  #26                 // Method org/apache/axis2/util/XMLUtils.toOM:(Ljava/io/InputStream;)Lorg/apache/axiom/om/OMNode;
      45: checkcast     #27                 // class org/apache/axiom/om/OMElement
      48: areturn

  public static org.apache.neethi.PolicyComponent getPolicyComponentFromOMElement(org.apache.axiom.om.OMElement) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokeinterface #41,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getQName:()Ljavax/xml/namespace/QName;
       6: invokestatic  #42                 // Method org/apache/neethi/Constants.isPolicyElement:(Ljavax/xml/namespace/QName;)Z
       9: ifeq          17
      12: aload_0
      13: invokestatic  #43                 // Method org/apache/neethi/PolicyEngine.getPolicy:(Lorg/apache/axiom/om/OMElement;)Lorg/apache/neethi/Policy;
      16: areturn
      17: aload_0
      18: invokeinterface #41,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getQName:()Ljavax/xml/namespace/QName;
      23: invokestatic  #44                 // Method org/apache/neethi/Constants.isPolicyRef:(Ljavax/xml/namespace/QName;)Z
      26: ifeq          34
      29: aload_0
      30: invokestatic  #45                 // Method org/apache/neethi/PolicyEngine.getPolicyReference:(Lorg/apache/axiom/om/OMElement;)Lorg/apache/neethi/PolicyReference;
      33: areturn
      34: new           #46                 // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #47                 // String Argument is neither a <wsp:Policy> nor a <wsp:PolicyReference> element
      40: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow

  public static org.apache.neethi.Policy getPolicyFromOMElement(org.apache.axiom.om.OMElement);
    Code:
       0: aload_0
       1: invokeinterface #41,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getQName:()Ljavax/xml/namespace/QName;
       6: invokestatic  #42                 // Method org/apache/neethi/Constants.isPolicyElement:(Ljavax/xml/namespace/QName;)Z
       9: ifeq          17
      12: aload_0
      13: invokestatic  #43                 // Method org/apache/neethi/PolicyEngine.getPolicy:(Lorg/apache/axiom/om/OMElement;)Lorg/apache/neethi/Policy;
      16: areturn
      17: new           #46                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #49                 // String argument is not a <wsp:Policy ..> element
      23: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow

  public static org.apache.neethi.PolicyReference getPolicyReferenceFromOMElement(org.apache.axiom.om.OMElement);
    Code:
       0: aload_0
       1: invokeinterface #41,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getQName:()Ljavax/xml/namespace/QName;
       6: invokestatic  #44                 // Method org/apache/neethi/Constants.isPolicyRef:(Ljavax/xml/namespace/QName;)Z
       9: ifeq          17
      12: aload_0
      13: invokestatic  #45                 // Method org/apache/neethi/PolicyEngine.getPolicyReference:(Lorg/apache/axiom/om/OMElement;)Lorg/apache/neethi/PolicyReference;
      16: areturn
      17: new           #46                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #50                 // String argument is not a <wsp:PolicyReference> element
      23: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow

  public static org.apache.neethi.PolicyComponent getPolicyComponent(org.w3c.dom.Element);
    Code:
       0: aload_0
       1: invokeinterface #51,  1           // InterfaceMethod org/w3c/dom/Element.getNamespaceURI:()Ljava/lang/String;
       6: aload_0
       7: invokeinterface #52,  1           // InterfaceMethod org/w3c/dom/Element.getLocalName:()Ljava/lang/String;
      12: invokestatic  #53                 // Method org/apache/neethi/Constants.isPolicyElement:(Ljava/lang/String;Ljava/lang/String;)Z
      15: ifeq          23
      18: aload_0
      19: invokestatic  #54                 // Method org/apache/neethi/PolicyEngine.getPolicy:(Ljava/lang/Object;)Lorg/apache/neethi/Policy;
      22: areturn
      23: aload_0
      24: invokeinterface #51,  1           // InterfaceMethod org/w3c/dom/Element.getNamespaceURI:()Ljava/lang/String;
      29: aload_0
      30: invokeinterface #52,  1           // InterfaceMethod org/w3c/dom/Element.getLocalName:()Ljava/lang/String;
      35: invokestatic  #55                 // Method org/apache/neethi/Constants.isPolicyRef:(Ljava/lang/String;Ljava/lang/String;)Z
      38: ifeq          46
      41: aload_0
      42: invokestatic  #56                 // Method org/apache/neethi/PolicyEngine.getPolicyReference:(Ljava/lang/Object;)Lorg/apache/neethi/PolicyReference;
      45: areturn
      46: new           #46                 // class java/lang/IllegalArgumentException
      49: dup
      50: ldc           #47                 // String Argument is neither a <wsp:Policy> nor a <wsp:PolicyReference> element
      52: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow

  public static java.lang.String policyComponentToString(org.apache.neethi.PolicyComponent) throws javax.xml.stream.XMLStreamException, javax.xml.stream.FactoryConfigurationError;
    Code:
       0: new           #20                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #21                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: invokestatic  #37                 // Method javax/xml/stream/XMLOutputFactory.newInstance:()Ljavax/xml/stream/XMLOutputFactory;
      11: aload_1
      12: invokevirtual #38                 // Method javax/xml/stream/XMLOutputFactory.createXMLStreamWriter:(Ljava/io/OutputStream;)Ljavax/xml/stream/XMLStreamWriter;
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokeinterface #39,  2           // InterfaceMethod org/apache/neethi/PolicyComponent.serialize:(Ljavax/xml/stream/XMLStreamWriter;)V
      23: aload_2
      24: invokeinterface #40,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.flush:()V
      29: aload_1
      30: invokevirtual #57                 // Method java/io/ByteArrayOutputStream.toString:()Ljava/lang/String;
      33: areturn

  public static java.lang.String generateId(org.apache.axis2.description.AxisDescription);
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method org/apache/axis2/description/AxisDescription.getPolicySubject:()Lorg/apache/axis2/description/PolicySubject;
       4: astore_1
       5: ldc           #59                 // String -policy-1
       7: astore_2
       8: aload_0
       9: instanceof    #60                 // class org/apache/axis2/description/AxisMessage
      12: ifeq          50
      15: new           #13                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #61                 // String msg-
      24: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: checkcast     #60                 // class org/apache/axis2/description/AxisMessage
      31: invokevirtual #62                 // Method org/apache/axis2/description/AxisMessage.getName:()Ljava/lang/String;
      34: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_2
      38: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore_2
      45: aload_0
      46: invokevirtual #63                 // Method org/apache/axis2/description/AxisDescription.getParent:()Lorg/apache/axis2/description/AxisDescription;
      49: astore_0
      50: aload_0
      51: instanceof    #64                 // class org/apache/axis2/description/AxisOperation
      54: ifeq          92
      57: new           #13                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #65                 // String op-
      66: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: checkcast     #64                 // class org/apache/axis2/description/AxisOperation
      73: invokevirtual #66                 // Method org/apache/axis2/description/AxisOperation.getName:()Ljavax/xml/namespace/QName;
      76: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: aload_2
      80: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: astore_2
      87: aload_0
      88: invokevirtual #63                 // Method org/apache/axis2/description/AxisDescription.getParent:()Lorg/apache/axis2/description/AxisDescription;
      91: astore_0
      92: aload_0
      93: instanceof    #68                 // class org/apache/axis2/description/AxisService
      96: ifeq          129
      99: new           #13                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #69                 // String service-
     108: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_0
     112: checkcast     #68                 // class org/apache/axis2/description/AxisService
     115: invokevirtual #70                 // Method org/apache/axis2/description/AxisService.getName:()Ljava/lang/String;
     118: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_2
     122: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: astore_2
     129: bipush        49
     131: istore_3
     132: aload_1
     133: aload_2
     134: invokevirtual #71                 // Method org/apache/axis2/description/PolicySubject.getAttachedPolicyComponent:(Ljava/lang/String;)Lorg/apache/neethi/PolicyComponent;
     137: ifnull        157
     140: aload_2
     141: iload_3
     142: i2c
     143: iload_3
     144: iconst_1
     145: iadd
     146: i2c
     147: invokevirtual #72                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
     150: astore_2
     151: iinc          3, 1
     154: goto          132
     157: aload_2
     158: areturn

  public static org.apache.neethi.Policy getMergedPolicy(java.util.Collection<org.apache.neethi.PolicyComponent>, org.apache.axis2.description.AxisDescription);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokeinterface #73,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          104
      18: aload_3
      19: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore        4
      26: aload         4
      28: instanceof    #19                 // class org/apache/neethi/Policy
      31: ifeq          59
      34: aload_2
      35: ifnonnull     46
      38: aload         4
      40: checkcast     #19                 // class org/apache/neethi/Policy
      43: goto          55
      46: aload_2
      47: aload         4
      49: checkcast     #19                 // class org/apache/neethi/Policy
      52: invokevirtual #76                 // Method org/apache/neethi/Policy.merge:(Lorg/apache/neethi/Policy;)Lorg/apache/neethi/Policy;
      55: astore_2
      56: goto          101
      59: aload         4
      61: checkcast     #7                  // class org/apache/neethi/PolicyReference
      64: astore        5
      66: aload         5
      68: new           #77                 // class org/apache/axis2/util/AxisPolicyLocator
      71: dup
      72: aload_1
      73: invokespecial #78                 // Method org/apache/axis2/util/AxisPolicyLocator."<init>":(Lorg/apache/axis2/description/AxisDescription;)V
      76: iconst_0
      77: invokevirtual #79                 // Method org/apache/neethi/PolicyReference.normalize:(Lorg/apache/neethi/PolicyRegistry;Z)Lorg/apache/neethi/PolicyComponent;
      80: checkcast     #19                 // class org/apache/neethi/Policy
      83: astore        6
      85: aload_2
      86: ifnonnull     94
      89: aload         6
      91: goto          100
      94: aload_2
      95: aload         6
      97: invokevirtual #76                 // Method org/apache/neethi/Policy.merge:(Lorg/apache/neethi/Policy;)Lorg/apache/neethi/Policy;
     100: astore_2
     101: goto          9
     104: aload_2
     105: ifnull        122
     108: aload_2
     109: new           #77                 // class org/apache/axis2/util/AxisPolicyLocator
     112: dup
     113: aload_1
     114: invokespecial #78                 // Method org/apache/axis2/util/AxisPolicyLocator."<init>":(Lorg/apache/axis2/description/AxisDescription;)V
     117: iconst_0
     118: invokevirtual #80                 // Method org/apache/neethi/Policy.normalize:(Lorg/apache/neethi/PolicyRegistry;Z)Lorg/apache/neethi/Policy;
     121: astore_2
     122: aload_2
     123: areturn

  public static org.apache.neethi.Policy getMergedPolicy(java.util.List, org.apache.axis2.description.AxisService);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokeinterface #81,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          104
      18: aload_3
      19: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore        4
      26: aload         4
      28: instanceof    #19                 // class org/apache/neethi/Policy
      31: ifeq          59
      34: aload_2
      35: ifnonnull     46
      38: aload         4
      40: checkcast     #19                 // class org/apache/neethi/Policy
      43: goto          55
      46: aload_2
      47: aload         4
      49: checkcast     #19                 // class org/apache/neethi/Policy
      52: invokevirtual #76                 // Method org/apache/neethi/Policy.merge:(Lorg/apache/neethi/Policy;)Lorg/apache/neethi/Policy;
      55: astore_2
      56: goto          101
      59: aload         4
      61: checkcast     #7                  // class org/apache/neethi/PolicyReference
      64: astore        5
      66: aload         5
      68: new           #82                 // class org/apache/axis2/util/PolicyLocator
      71: dup
      72: aload_1
      73: invokespecial #83                 // Method org/apache/axis2/util/PolicyLocator."<init>":(Lorg/apache/axis2/description/AxisService;)V
      76: iconst_0
      77: invokevirtual #79                 // Method org/apache/neethi/PolicyReference.normalize:(Lorg/apache/neethi/PolicyRegistry;Z)Lorg/apache/neethi/PolicyComponent;
      80: checkcast     #19                 // class org/apache/neethi/Policy
      83: astore        6
      85: aload_2
      86: ifnonnull     94
      89: aload         6
      91: goto          100
      94: aload_2
      95: aload         6
      97: invokevirtual #76                 // Method org/apache/neethi/Policy.merge:(Lorg/apache/neethi/Policy;)Lorg/apache/neethi/Policy;
     100: astore_2
     101: goto          9
     104: aload_2
     105: ifnull        122
     108: aload_2
     109: new           #82                 // class org/apache/axis2/util/PolicyLocator
     112: dup
     113: aload_1
     114: invokespecial #83                 // Method org/apache/axis2/util/PolicyLocator."<init>":(Lorg/apache/axis2/description/AxisService;)V
     117: iconst_0
     118: invokevirtual #80                 // Method org/apache/neethi/Policy.normalize:(Lorg/apache/neethi/PolicyRegistry;Z)Lorg/apache/neethi/Policy;
     121: astore_2
     122: aload_2
     123: areturn

  public static java.util.Iterator<org.apache.axiom.om.OMElement> getPolicyChildren(org.apache.axiom.om.OMElement);
    Code:
       0: new           #84                 // class java/util/ArrayList
       3: dup
       4: invokespecial #85                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #86,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getChildElements:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          57
      24: aload_2
      25: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #27                 // class org/apache/axiom/om/OMElement
      33: astore_3
      34: aload_3
      35: invokeinterface #41,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getQName:()Ljavax/xml/namespace/QName;
      40: invokestatic  #42                 // Method org/apache/neethi/Constants.isPolicyElement:(Ljavax/xml/namespace/QName;)Z
      43: ifeq          54
      46: aload_1
      47: aload_3
      48: invokeinterface #87,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: goto          15
      57: aload_1
      58: invokeinterface #81,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      63: areturn

  public static java.util.Iterator<org.apache.axiom.om.OMElement> getPolicyRefChildren(org.apache.axiom.om.OMElement);
    Code:
       0: new           #84                 // class java/util/ArrayList
       3: dup
       4: invokespecial #85                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #86,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getChildElements:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          57
      24: aload_2
      25: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #27                 // class org/apache/axiom/om/OMElement
      33: astore_3
      34: aload_3
      35: invokeinterface #41,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getQName:()Ljavax/xml/namespace/QName;
      40: invokestatic  #44                 // Method org/apache/neethi/Constants.isPolicyRef:(Ljavax/xml/namespace/QName;)Z
      43: ifeq          54
      46: aload_1
      47: aload_3
      48: invokeinterface #87,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: goto          15
      57: aload_1
      58: invokeinterface #81,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      63: areturn
}
