Compiled from "AbstractContext.java"
public abstract class org.apache.axis2.context.AbstractContext {
  private static final org.apache.axis2.util.OnDemandLogger log;

  private static final int DEFAULT_MAP_SIZE;

  private static boolean DEBUG_ENABLED;

  private static boolean DEBUG_PROPERTY_SET;

  private boolean isClusteringOn;

  private boolean isClusteringCheckDone;

  public static final java.lang.String COPY_PROPERTIES;

  protected long lastTouchedTime;

  protected transient org.apache.axis2.context.AbstractContext parent;

  protected transient java.util.Map<java.lang.String, java.lang.Object> properties;

  private transient java.util.Map<java.lang.String, java.lang.Object> propertyDifferences;

  protected org.apache.axis2.context.AbstractContext(org.apache.axis2.context.AbstractContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field isClusteringOn:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field isClusteringCheckDone:Z
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field parent:Lorg/apache/axis2/context/AbstractContext;
      19: return

  protected org.apache.axis2.context.AbstractContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field isClusteringOn:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field isClusteringCheckDone:Z
      14: return

  public org.apache.axis2.context.AbstractContext getParent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field parent:Lorg/apache/axis2/context/AbstractContext;
       4: areturn

  public boolean isAncestor(org.apache.axis2.context.AbstractContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #5                  // Method getParent:()Lorg/apache/axis2/context/AbstractContext;
      10: astore_2
      11: aload_2
      12: ifnull        30
      15: aload_2
      16: aload_1
      17: if_acmpne     22
      20: iconst_1
      21: ireturn
      22: aload_2
      23: invokevirtual #5                  // Method getParent:()Lorg/apache/axis2/context/AbstractContext;
      26: astore_2
      27: goto          11
      30: iconst_0
      31: ireturn

  public java.util.Map<java.lang.String, java.lang.Object> getProperties();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method initPropertiesMap:()V
       4: aload_0
       5: getfield      #7                  // Field properties:Ljava/util/Map;
       8: areturn

  public java.util.Iterator<java.lang.String> getPropertyNames();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method initPropertiesMap:()V
       4: new           #8                  // class java/util/HashSet
       7: dup
       8: aload_0
       9: getfield      #7                  // Field properties:Ljava/util/Map;
      12: invokeinterface #9,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      17: invokespecial #10                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      20: invokevirtual #11                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
      23: areturn
      24: astore_1
      25: goto          4
    Exception table:
       from    to  target type
           4    23    24   Class java/lang/Exception

  public java.lang.Object getProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field properties:Ljava/util/Map;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #7                  // Field properties:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: astore_2
      22: aload_2
      23: ifnull        63
      26: aload_0
      27: getfield      #3                  // Field isClusteringCheckDone:Z
      30: ifne          46
      33: aload_0
      34: iconst_1
      35: putfield      #3                  // Field isClusteringCheckDone:Z
      38: aload_0
      39: aload_0
      40: invokespecial #14                 // Method needPropertyDifferences:()Z
      43: putfield      #2                  // Field isClusteringOn:Z
      46: aload_0
      47: getfield      #2                  // Field isClusteringOn:Z
      50: ifeq          79
      53: aload_0
      54: aload_1
      55: aload_2
      56: iconst_0
      57: invokespecial #15                 // Method addPropertyDifference:(Ljava/lang/String;Ljava/lang/Object;Z)V
      60: goto          79
      63: aload_0
      64: getfield      #4                  // Field parent:Lorg/apache/axis2/context/AbstractContext;
      67: ifnull        79
      70: aload_0
      71: getfield      #4                  // Field parent:Lorg/apache/axis2/context/AbstractContext;
      74: aload_1
      75: invokevirtual #16                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      78: astore_2
      79: aload_2
      80: areturn

  public java.lang.Object getLocalProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field properties:Ljava/util/Map;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #7                  // Field properties:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: astore_2
      22: aload_2
      23: ifnonnull     36
      26: aload_0
      27: getfield      #4                  // Field parent:Lorg/apache/axis2/context/AbstractContext;
      30: ifnull        36
      33: goto          70
      36: aload_0
      37: getfield      #3                  // Field isClusteringCheckDone:Z
      40: ifne          56
      43: aload_0
      44: iconst_1
      45: putfield      #3                  // Field isClusteringCheckDone:Z
      48: aload_0
      49: aload_0
      50: invokespecial #14                 // Method needPropertyDifferences:()Z
      53: putfield      #2                  // Field isClusteringOn:Z
      56: aload_0
      57: getfield      #2                  // Field isClusteringOn:Z
      60: ifeq          70
      63: aload_0
      64: aload_1
      65: aload_2
      66: iconst_0
      67: invokespecial #15                 // Method addPropertyDifference:(Ljava/lang/String;Ljava/lang/Object;Z)V
      70: aload_2
      71: areturn

  public java.lang.Object getPropertyNonReplicable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field properties:Ljava/util/Map;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #7                  // Field properties:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: astore_2
      22: aload_2
      23: ifnonnull     42
      26: aload_0
      27: getfield      #4                  // Field parent:Lorg/apache/axis2/context/AbstractContext;
      30: ifnull        42
      33: aload_0
      34: getfield      #4                  // Field parent:Lorg/apache/axis2/context/AbstractContext;
      37: aload_1
      38: invokevirtual #17                 // Method getPropertyNonReplicable:(Ljava/lang/String;)Ljava/lang/Object;
      41: astore_2
      42: aload_2
      43: areturn

  public void setProperty(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method initPropertiesMap:()V
       4: aload_0
       5: getfield      #7                  // Field properties:Ljava/util/Map;
       8: aload_1
       9: aload_2
      10: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: goto          23
      19: astore_3
      20: goto          4
      23: aload_0
      24: getfield      #3                  // Field isClusteringCheckDone:Z
      27: ifne          43
      30: aload_0
      31: iconst_1
      32: putfield      #3                  // Field isClusteringCheckDone:Z
      35: aload_0
      36: aload_0
      37: invokespecial #14                 // Method needPropertyDifferences:()Z
      40: putfield      #2                  // Field isClusteringOn:Z
      43: aload_0
      44: getfield      #2                  // Field isClusteringOn:Z
      47: ifeq          57
      50: aload_0
      51: aload_1
      52: aload_2
      53: iconst_0
      54: invokespecial #15                 // Method addPropertyDifference:(Ljava/lang/String;Ljava/lang/Object;Z)V
      57: getstatic     #20                 // Field DEBUG_ENABLED:Z
      60: ifeq          69
      63: aload_0
      64: aload_1
      65: aload_2
      66: invokespecial #21                 // Method debugPropertySet:(Ljava/lang/String;Ljava/lang/Object;)V
      69: return
    Exception table:
       from    to  target type
           4    16    19   Class java/util/ConcurrentModificationException

  private void addPropertyDifference(java.lang.String, java.lang.Object, boolean);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #22                 // Field propertyDifferences:Ljava/util/Map;
       9: ifnonnull     25
      12: aload_0
      13: new           #23                 // class java/util/HashMap
      16: dup
      17: bipush        64
      19: invokespecial #25                 // Method java/util/HashMap."<init>":(I)V
      22: putfield      #22                 // Field propertyDifferences:Ljava/util/Map;
      25: aload_0
      26: getfield      #22                 // Field propertyDifferences:Ljava/util/Map;
      29: aload_1
      30: new           #26                 // class org/apache/axis2/context/PropertyDifference
      33: dup
      34: aload_1
      35: aload_2
      36: iload_3
      37: invokespecial #27                 // Method org/apache/axis2/context/PropertyDifference."<init>":(Ljava/lang/String;Ljava/lang/Object;Z)V
      40: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload         4
      48: monitorexit
      49: goto          60
      52: astore        5
      54: aload         4
      56: monitorexit
      57: aload         5
      59: athrow
      60: return
    Exception table:
       from    to  target type
           5    49    52   any
          52    57    52   any

  private boolean needPropertyDifferences();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getRootContext:()Lorg/apache/axis2/context/ConfigurationContext;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_1
      12: invokevirtual #29                 // Method org/apache/axis2/context/ConfigurationContext.getAxisConfiguration:()Lorg/apache/axis2/engine/AxisConfiguration;
      15: invokevirtual #30                 // Method org/apache/axis2/engine/AxisConfiguration.getClusteringAgent:()Lorg/apache/axis2/clustering/ClusteringAgent;
      18: astore_2
      19: aload_2
      20: ifnull        32
      23: aload_2
      24: invokeinterface #31,  1           // InterfaceMethod org/apache/axis2/clustering/ClusteringAgent.getStateManager:()Lorg/apache/axis2/clustering/state/StateManager;
      29: ifnonnull     34
      32: iconst_0
      33: ireturn
      34: iconst_1
      35: ireturn

  public void setNonReplicableProperty(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method initPropertiesMap:()V
       4: aload_0
       5: getfield      #7                  // Field properties:Ljava/util/Map;
       8: aload_1
       9: aload_2
      10: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: goto          23
      19: astore_3
      20: goto          4
      23: return
    Exception table:
       from    to  target type
           4    16    19   Class java/util/ConcurrentModificationException

  public synchronized void removeProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field properties:Ljava/util/Map;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #7                  // Field properties:Ljava/util/Map;
      12: aload_1
      13: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: astore_2
      19: aload_2
      20: ifnull        82
      23: aload_0
      24: getfield      #7                  // Field properties:Ljava/util/Map;
      27: ifnull        48
      30: aload_0
      31: getfield      #7                  // Field properties:Ljava/util/Map;
      34: aload_1
      35: invokeinterface #32,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: goto          48
      44: astore_3
      45: goto          30
      48: aload_0
      49: getfield      #3                  // Field isClusteringCheckDone:Z
      52: ifne          68
      55: aload_0
      56: iconst_1
      57: putfield      #3                  // Field isClusteringCheckDone:Z
      60: aload_0
      61: aload_0
      62: invokespecial #14                 // Method needPropertyDifferences:()Z
      65: putfield      #2                  // Field isClusteringOn:Z
      68: aload_0
      69: getfield      #2                  // Field isClusteringOn:Z
      72: ifeq          82
      75: aload_0
      76: aload_1
      77: aload_2
      78: iconst_1
      79: invokespecial #15                 // Method addPropertyDifference:(Ljava/lang/String;Ljava/lang/Object;Z)V
      82: return
    Exception table:
       from    to  target type
          30    41    44   Class java/util/ConcurrentModificationException

  public synchronized void removePropertyNonReplicable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field properties:Ljava/util/Map;
       4: ifnull        25
       7: aload_0
       8: getfield      #7                  // Field properties:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #32,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: goto          25
      21: astore_2
      22: goto          7
      25: return
    Exception table:
       from    to  target type
           7    18    21   Class java/util/ConcurrentModificationException

  public synchronized java.util.Map<java.lang.String, java.lang.Object> getPropertyDifferences();
    Code:
       0: aload_0
       1: getfield      #22                 // Field propertyDifferences:Ljava/util/Map;
       4: ifnonnull     20
       7: aload_0
       8: new           #23                 // class java/util/HashMap
      11: dup
      12: bipush        64
      14: invokespecial #25                 // Method java/util/HashMap."<init>":(I)V
      17: putfield      #22                 // Field propertyDifferences:Ljava/util/Map;
      20: aload_0
      21: getfield      #22                 // Field propertyDifferences:Ljava/util/Map;
      24: areturn

  public synchronized void clearPropertyDifferences();
    Code:
       0: aload_0
       1: getfield      #22                 // Field propertyDifferences:Ljava/util/Map;
       4: ifnull        16
       7: aload_0
       8: getfield      #22                 // Field propertyDifferences:Ljava/util/Map;
      11: invokeinterface #33,  1           // InterfaceMethod java/util/Map.clear:()V
      16: return

  public void setParent(org.apache.axis2.context.AbstractContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field parent:Lorg/apache/axis2/context/AbstractContext;
       5: return

  public void setProperties(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aconst_null
       6: putfield      #7                  // Field properties:Ljava/util/Map;
       9: goto          132
      12: aload_1
      13: ldc           #34                 // String CopyProperties
      15: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #35                 // class java/lang/Boolean
      23: astore_2
      24: aload_2
      25: ifnull        43
      28: aload_2
      29: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      32: ifeq          43
      35: aload_0
      36: aload_1
      37: invokevirtual #37                 // Method mergeProperties:(Ljava/util/Map;)V
      40: goto          132
      43: aload_0
      44: getfield      #7                  // Field properties:Ljava/util/Map;
      47: aload_1
      48: if_acmpeq     113
      51: getstatic     #20                 // Field DEBUG_ENABLED:Z
      54: ifeq          113
      57: aload_1
      58: invokeinterface #38,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      63: invokeinterface #39,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      68: astore_3
      69: aload_3
      70: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          113
      78: aload_3
      79: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: checkcast     #42                 // class java/util/Map$Entry
      87: astore        4
      89: aload_0
      90: aload         4
      92: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      97: checkcast     #44                 // class java/lang/String
     100: aload         4
     102: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     107: invokespecial #21                 // Method debugPropertySet:(Ljava/lang/String;Ljava/lang/Object;)V
     110: goto          69
     113: aload_0
     114: new           #23                 // class java/util/HashMap
     117: dup
     118: aload_1
     119: invokespecial #46                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     122: putfield      #7                  // Field properties:Ljava/util/Map;
     125: goto          132
     128: astore_3
     129: goto          113
     132: return
    Exception table:
       from    to  target type
         113   125   128   Class java/util/ConcurrentModificationException

  public void mergeProperties(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnull        85
       4: aload_0
       5: invokespecial #6                  // Method initPropertiesMap:()V
       8: aload_1
       9: invokeinterface #9,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      14: invokeinterface #39,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          85
      29: aload_2
      30: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #44                 // class java/lang/String
      38: astore_3
      39: aload_1
      40: aload_3
      41: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: astore        4
      48: aload_0
      49: getfield      #7                  // Field properties:Ljava/util/Map;
      52: aload_3
      53: aload         4
      55: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: goto          69
      64: astore        5
      66: goto          48
      69: getstatic     #20                 // Field DEBUG_ENABLED:Z
      72: ifeq          82
      75: aload_0
      76: aload_3
      77: aload         4
      79: invokespecial #21                 // Method debugPropertySet:(Ljava/lang/String;Ljava/lang/Object;)V
      82: goto          20
      85: return
    Exception table:
       from    to  target type
          48    61    64   Class java/util/ConcurrentModificationException

  protected void touch();
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method java/lang/System.currentTimeMillis:()J
       4: putfield      #48                 // Field lastTouchedTime:J
       7: aload_0
       8: getfield      #4                  // Field parent:Lorg/apache/axis2/context/AbstractContext;
      11: ifnull        21
      14: aload_0
      15: getfield      #4                  // Field parent:Lorg/apache/axis2/context/AbstractContext;
      18: invokevirtual #49                 // Method touch:()V
      21: return

  public long getLastTouchedTime();
    Code:
       0: aload_0
       1: getfield      #48                 // Field lastTouchedTime:J
       4: lreturn

  public void setLastTouchedTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #48                 // Field lastTouchedTime:J
       5: return

  public void flush() throws org.apache.axis2.AxisFault;
    Code:
       0: aload_0
       1: invokestatic  #50                 // Method org/apache/axis2/clustering/state/Replicator.replicate:(Lorg/apache/axis2/context/AbstractContext;)V
       4: return

  public abstract org.apache.axis2.context.ConfigurationContext getRootContext();

  private void debugPropertySet(java.lang.String, java.lang.Object);
    Code:
       0: getstatic     #51                 // Field DEBUG_PROPERTY_SET:Z
       3: ifeq          279
       6: aload_2
       7: ifnonnull     15
      10: ldc           #52                 // String null
      12: goto          22
      15: aload_2
      16: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: invokevirtual #54                 // Method java/lang/Class.getName:()Ljava/lang/String;
      22: astore_3
      23: ldc           #52                 // String null
      25: astore        4
      27: aload_2
      28: ifnull        49
      31: aload_2
      32: invokestatic  #55                 // Method org/apache/axis2/util/Utils.getObjectClassLoader:(Ljava/lang/Object;)Ljava/lang/ClassLoader;
      35: astore        5
      37: aload         5
      39: ifnull        49
      42: aload         5
      44: invokevirtual #56                 // Method java/lang/Object.toString:()Ljava/lang/String;
      47: astore        4
      49: aload_2
      50: instanceof    #44                 // class java/lang/String
      53: ifeq          63
      56: aload_2
      57: invokevirtual #56                 // Method java/lang/Object.toString:()Ljava/lang/String;
      60: goto          64
      63: aconst_null
      64: astore        5
      66: new           #57                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      73: aload_0
      74: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      77: invokevirtual #54                 // Method java/lang/Class.getName:()Ljava/lang/String;
      80: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: bipush        64
      85: invokevirtual #60                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      88: aload_0
      89: invokestatic  #61                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      92: invokestatic  #62                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      95: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: astore        6
     103: getstatic     #64                 // Field log:Lorg/apache/axis2/util/OnDemandLogger;
     106: ldc           #65                 // String ==================
     108: invokevirtual #66                 // Method org/apache/axis2/util/OnDemandLogger.debug:(Ljava/lang/Object;)V
     111: getstatic     #64                 // Field log:Lorg/apache/axis2/util/OnDemandLogger;
     114: new           #57                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #67                 // String  Property set on object
     123: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         6
     128: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokevirtual #66                 // Method org/apache/axis2/util/OnDemandLogger.debug:(Ljava/lang/Object;)V
     137: getstatic     #64                 // Field log:Lorg/apache/axis2/util/OnDemandLogger;
     140: new           #57                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #68                 // String   Key =
     149: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_1
     153: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokevirtual #66                 // Method org/apache/axis2/util/OnDemandLogger.debug:(Ljava/lang/Object;)V
     162: aload         5
     164: ifnull        193
     167: getstatic     #64                 // Field log:Lorg/apache/axis2/util/OnDemandLogger;
     170: new           #57                 // class java/lang/StringBuilder
     173: dup
     174: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     177: ldc           #69                 // String   Value =
     179: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: aload         5
     184: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     190: invokevirtual #66                 // Method org/apache/axis2/util/OnDemandLogger.debug:(Ljava/lang/Object;)V
     193: getstatic     #64                 // Field log:Lorg/apache/axis2/util/OnDemandLogger;
     196: new           #57                 // class java/lang/StringBuilder
     199: dup
     200: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     203: ldc           #70                 // String   Value Class =
     205: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: aload_3
     209: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: invokevirtual #66                 // Method org/apache/axis2/util/OnDemandLogger.debug:(Ljava/lang/Object;)V
     218: getstatic     #64                 // Field log:Lorg/apache/axis2/util/OnDemandLogger;
     221: new           #57                 // class java/lang/StringBuilder
     224: dup
     225: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     228: ldc           #71                 // String   Value Classloader =
     230: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: aload         4
     235: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     241: invokevirtual #66                 // Method org/apache/axis2/util/OnDemandLogger.debug:(Ljava/lang/Object;)V
     244: getstatic     #64                 // Field log:Lorg/apache/axis2/util/OnDemandLogger;
     247: new           #57                 // class java/lang/StringBuilder
     250: dup
     251: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     254: ldc           #72                 // String Call Stack =
     256: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     259: invokestatic  #73                 // Method org/apache/axis2/util/JavaUtils.callStackToString:()Ljava/lang/String;
     262: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     265: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     268: invokevirtual #66                 // Method org/apache/axis2/util/OnDemandLogger.debug:(Ljava/lang/Object;)V
     271: getstatic     #64                 // Field log:Lorg/apache/axis2/util/OnDemandLogger;
     274: ldc           #65                 // String ==================
     276: invokevirtual #66                 // Method org/apache/axis2/util/OnDemandLogger.debug:(Ljava/lang/Object;)V
     279: return

  private void initPropertiesMap();
    Code:
       0: aload_0
       1: getfield      #7                  // Field properties:Ljava/util/Map;
       4: ifnonnull     20
       7: aload_0
       8: new           #23                 // class java/util/HashMap
      11: dup
      12: bipush        64
      14: invokespecial #25                 // Method java/util/HashMap."<init>":(I)V
      17: putfield      #7                  // Field properties:Ljava/util/Map;
      20: return

  static {};
    Code:
       0: new           #74                 // class org/apache/axis2/util/OnDemandLogger
       3: dup
       4: ldc           #24                 // class org/apache/axis2/context/AbstractContext
       6: invokespecial #75                 // Method org/apache/axis2/util/OnDemandLogger."<init>":(Ljava/lang/Class;)V
       9: putstatic     #64                 // Field log:Lorg/apache/axis2/util/OnDemandLogger;
      12: getstatic     #64                 // Field log:Lorg/apache/axis2/util/OnDemandLogger;
      15: invokevirtual #76                 // Method org/apache/axis2/util/OnDemandLogger.isTraceEnabled:()Z
      18: putstatic     #20                 // Field DEBUG_ENABLED:Z
      21: iconst_0
      22: putstatic     #51                 // Field DEBUG_PROPERTY_SET:Z
      25: return
}
