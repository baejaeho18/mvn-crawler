Compiled from "SOAPHeaderElementImpl.java"
public class org.apache.axis2.saaj.SOAPHeaderElementImpl extends org.apache.axis2.saaj.SOAPElementImpl<org.apache.axiom.soap.SOAPHeaderBlock> implements javax.xml.soap.SOAPHeaderElement {
  public org.apache.axis2.saaj.SOAPHeaderElementImpl(org.apache.axiom.soap.SOAPHeaderBlock);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/axis2/saaj/SOAPElementImpl."<init>":(Lorg/apache/axiom/om/OMElement;)V
       5: return

  public void setActor(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPHeaderBlock
       7: aload_1
       8: invokeinterface #4,  2            // InterfaceMethod org/apache/axiom/soap/SOAPHeaderBlock.setRole:(Ljava/lang/String;)V
      13: return

  public java.lang.String getActor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPHeaderBlock
       7: invokeinterface #5,  1            // InterfaceMethod org/apache/axiom/soap/SOAPHeaderBlock.getRole:()Ljava/lang/String;
      12: areturn

  public void setMustUnderstand(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPHeaderBlock
       7: iload_1
       8: invokeinterface #6,  2            // InterfaceMethod org/apache/axiom/soap/SOAPHeaderBlock.setMustUnderstand:(Z)V
      13: return

  public boolean getMustUnderstand();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPHeaderBlock
       7: invokeinterface #7,  1            // InterfaceMethod org/apache/axiom/soap/SOAPHeaderBlock.getMustUnderstand:()Z
      12: ireturn

  public void setRole(java.lang.String) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPHeaderBlock
       7: invokeinterface #8,  1            // InterfaceMethod org/apache/axiom/soap/SOAPHeaderBlock.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #9                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #10,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #11                 // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     34
      26: new           #12                 // class java/lang/UnsupportedOperationException
      29: dup
      30: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      38: checkcast     #3                  // class org/apache/axiom/soap/SOAPHeaderBlock
      41: aload_1
      42: invokeinterface #4,  2            // InterfaceMethod org/apache/axiom/soap/SOAPHeaderBlock.setRole:(Ljava/lang/String;)V
      47: return

  public java.lang.String getRole();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPHeaderBlock
       7: invokeinterface #8,  1            // InterfaceMethod org/apache/axiom/soap/SOAPHeaderBlock.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #9                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #10,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #11                 // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     34
      26: new           #12                 // class java/lang/UnsupportedOperationException
      29: dup
      30: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      38: checkcast     #3                  // class org/apache/axiom/soap/SOAPHeaderBlock
      41: invokeinterface #5,  1            // InterfaceMethod org/apache/axiom/soap/SOAPHeaderBlock.getRole:()Ljava/lang/String;
      46: areturn

  public void setRelay(boolean) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPHeaderBlock
       7: invokeinterface #8,  1            // InterfaceMethod org/apache/axiom/soap/SOAPHeaderBlock.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #9                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #10,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #11                 // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     34
      26: new           #12                 // class java/lang/UnsupportedOperationException
      29: dup
      30: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      38: checkcast     #3                  // class org/apache/axiom/soap/SOAPHeaderBlock
      41: iload_1
      42: invokeinterface #14,  2           // InterfaceMethod org/apache/axiom/soap/SOAPHeaderBlock.setRelay:(Z)V
      47: return

  public boolean getRelay();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPHeaderBlock
       7: invokeinterface #8,  1            // InterfaceMethod org/apache/axiom/soap/SOAPHeaderBlock.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #9                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #10,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #11                 // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     34
      26: new           #12                 // class java/lang/UnsupportedOperationException
      29: dup
      30: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      38: checkcast     #3                  // class org/apache/axiom/soap/SOAPHeaderBlock
      41: invokeinterface #15,  1           // InterfaceMethod org/apache/axiom/soap/SOAPHeaderBlock.getRelay:()Z
      46: ireturn

  public void setParentElement(javax.xml.soap.SOAPElement) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_1
       1: instanceof    #16                 // class javax/xml/soap/SOAPHeader
       4: ifne          17
       7: new           #17                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #18                 // String Parent is not a SOAPHeader
      13: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokespecial #20                 // Method org/apache/axis2/saaj/SOAPElementImpl.setParentElement:(Ljavax/xml/soap/SOAPElement;)V
      22: return
}
