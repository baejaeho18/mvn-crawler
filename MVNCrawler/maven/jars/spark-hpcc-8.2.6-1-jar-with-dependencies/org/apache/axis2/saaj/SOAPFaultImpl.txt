Compiled from "SOAPFaultImpl.java"
public class org.apache.axis2.saaj.SOAPFaultImpl extends org.apache.axis2.saaj.SOAPBodyElementImpl<org.apache.axiom.soap.SOAPFault> implements javax.xml.soap.SOAPFault {
  private boolean isDetailAdded;

  private java.util.Locale faultReasonLocale;

  private boolean defaultsSet;

  public org.apache.axis2.saaj.SOAPFaultImpl(org.apache.axiom.soap.SOAPFault);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/axis2/saaj/SOAPBodyElementImpl."<init>":(Lorg/apache/axiom/om/OMElement;)V
       5: return

  void setDefaults() throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     36
      26: aload_0
      27: getstatic     #8                  // Field org/apache/axiom/soap/SOAP11Constants.QNAME_SENDER_FAULTCODE:Ljavax/xml/namespace/QName;
      30: invokevirtual #9                  // Method setFaultCode:(Ljavax/xml/namespace/QName;)V
      33: goto          43
      36: aload_0
      37: getstatic     #10                 // Field org/apache/axiom/soap/SOAP12Constants.QNAME_SENDER_FAULTCODE:Ljavax/xml/namespace/QName;
      40: invokevirtual #9                  // Method setFaultCode:(Ljavax/xml/namespace/QName;)V
      43: aload_0
      44: ldc           #11                 // String Fault string, and possibly fault code, not set
      46: invokevirtual #12                 // Method setFaultString:(Ljava/lang/String;)V
      49: aload_0
      50: iconst_1
      51: putfield      #13                 // Field defaultsSet:Z
      54: return

  void removeDefaults();
    Code:
       0: aload_0
       1: getfield      #13                 // Field defaultsSet:Z
       4: ifeq          36
       7: aload_0
       8: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      11: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      14: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
      19: astore_1
      20: aload_1
      21: ifnull        31
      24: aload_1
      25: invokeinterface #15,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultReason.detach:()Lorg/apache/axiom/om/OMNode;
      30: pop
      31: aload_0
      32: iconst_0
      33: putfield      #13                 // Field defaultsSet:Z
      36: return

  public void setFaultCode(java.lang.String) throws javax.xml.soap.SOAPException;
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aload_1
       5: ldc           #16                 // String :
       7: invokevirtual #17                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      10: iconst_m1
      11: if_icmpne     24
      14: new           #18                 // class javax/xml/soap/SOAPException
      17: dup
      18: ldc           #19                 // String faultCode must be of the form prefix:localName
      20: invokespecial #20                 // Method javax/xml/soap/SOAPException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      28: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      31: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      36: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      39: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      44: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      47: if_acmpne     90
      50: aload_0
      51: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      54: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      57: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      62: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      65: astore_2
      66: aload_2
      67: aload_0
      68: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      71: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      74: invokeinterface #21,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultCode:(Lorg/apache/axiom/soap/SOAPFault;)Lorg/apache/axiom/soap/SOAPFaultCode;
      79: astore_3
      80: aload_3
      81: aload_1
      82: invokeinterface #22,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultCode.setText:(Ljava/lang/String;)V
      87: goto          171
      90: aload_0
      91: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      94: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      97: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
     102: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
     105: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
     110: invokestatic  #23                 // Method org/apache/axiom/soap/SOAP12Version.getSingleton:()Lorg/apache/axiom/soap/SOAP12Version;
     113: if_acmpne     171
     116: aload_0
     117: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     120: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     123: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
     128: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
     131: astore_2
     132: aload_2
     133: aload_0
     134: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     137: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     140: invokeinterface #21,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultCode:(Lorg/apache/axiom/soap/SOAPFault;)Lorg/apache/axiom/soap/SOAPFaultCode;
     145: astore_3
     146: aload_2
     147: aload_3
     148: invokeinterface #24,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultValue:(Lorg/apache/axiom/soap/SOAPFaultCode;)Lorg/apache/axiom/soap/SOAPFaultValue;
     153: astore        4
     155: aload_3
     156: aload         4
     158: invokeinterface #25,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultCode.setValue:(Lorg/apache/axiom/soap/SOAPFaultValue;)V
     163: aload         4
     165: aload_1
     166: invokeinterface #26,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultValue.setText:(Ljava/lang/String;)V
     171: aload_0
     172: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     175: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     178: aload_3
     179: invokeinterface #27,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFault.setCode:(Lorg/apache/axiom/soap/SOAPFaultCode;)V
     184: return

  public java.lang.String getFaultCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: ifnull        117
       7: aload_0
       8: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      11: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      14: invokeinterface #28,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getCode:()Lorg/apache/axiom/soap/SOAPFaultCode;
      19: ifnull        117
      22: aload_0
      23: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      26: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      29: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      34: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      37: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      42: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      45: if_acmpne     66
      48: aload_0
      49: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      52: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      55: invokeinterface #28,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getCode:()Lorg/apache/axiom/soap/SOAPFaultCode;
      60: invokeinterface #29,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultCode.getText:()Ljava/lang/String;
      65: areturn
      66: aload_0
      67: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      70: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      73: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      78: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      81: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      86: invokestatic  #23                 // Method org/apache/axiom/soap/SOAP12Version.getSingleton:()Lorg/apache/axiom/soap/SOAP12Version;
      89: if_acmpne     115
      92: aload_0
      93: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      96: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      99: invokeinterface #28,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getCode:()Lorg/apache/axiom/soap/SOAPFaultCode;
     104: invokeinterface #30,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultCode.getValue:()Lorg/apache/axiom/soap/SOAPFaultValue;
     109: invokeinterface #31,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultValue.getText:()Ljava/lang/String;
     114: areturn
     115: aconst_null
     116: areturn
     117: aconst_null
     118: areturn

  public void setFaultActor(java.lang.String) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #32,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getRole:()Lorg/apache/axiom/soap/SOAPFaultRole;
      12: ifnonnull     66
      15: aload_0
      16: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      19: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      22: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      27: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      30: aload_0
      31: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      34: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      37: invokeinterface #33,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultRole:(Lorg/apache/axiom/soap/SOAPFault;)Lorg/apache/axiom/soap/SOAPFaultRole;
      42: astore_2
      43: aload_2
      44: aload_1
      45: invokeinterface #34,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultRole.setRoleValue:(Ljava/lang/String;)V
      50: aload_0
      51: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      54: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      57: aload_2
      58: invokeinterface #35,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFault.setRole:(Lorg/apache/axiom/soap/SOAPFaultRole;)V
      63: goto          86
      66: aload_0
      67: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      70: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      73: invokeinterface #32,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getRole:()Lorg/apache/axiom/soap/SOAPFaultRole;
      78: astore_2
      79: aload_2
      80: aload_1
      81: invokeinterface #34,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultRole.setRoleValue:(Ljava/lang/String;)V
      86: return

  public java.lang.String getFaultActor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #32,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getRole:()Lorg/apache/axiom/soap/SOAPFaultRole;
      12: ifnull        33
      15: aload_0
      16: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      19: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      22: invokeinterface #32,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getRole:()Lorg/apache/axiom/soap/SOAPFaultRole;
      27: invokeinterface #36,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultRole.getRoleValue:()Ljava/lang/String;
      32: areturn
      33: aconst_null
      34: areturn

  public void setFaultString(java.lang.String) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     35
      26: aload_0
      27: aload_1
      28: aconst_null
      29: invokevirtual #37                 // Method setFaultString:(Ljava/lang/String;Ljava/util/Locale;)V
      32: goto          69
      35: aload_0
      36: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      39: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      42: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      47: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      50: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      55: invokestatic  #23                 // Method org/apache/axiom/soap/SOAP12Version.getSingleton:()Lorg/apache/axiom/soap/SOAP12Version;
      58: if_acmpne     69
      61: aload_0
      62: aload_1
      63: invokestatic  #38                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      66: invokevirtual #37                 // Method setFaultString:(Ljava/lang/String;Ljava/util/Locale;)V
      69: return

  public java.lang.String getFaultString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #39,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getNamespace:()Lorg/apache/axiom/om/OMNamespace;
      12: invokeinterface #40,  1           // InterfaceMethod org/apache/axiom/om/OMNamespace.getNamespaceURI:()Ljava/lang/String;
      17: ldc           #42                 // String http://schemas.xmlsoap.org/soap/envelope/
      19: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      22: ifeq          43
      25: aload_0
      26: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      29: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      32: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
      37: invokeinterface #44,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultReason.getText:()Ljava/lang/String;
      42: areturn
      43: aload_0
      44: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      47: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      50: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
      55: ifnull        101
      58: aload_0
      59: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      62: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      65: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
      70: invokeinterface #45,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultReason.getFirstSOAPText:()Lorg/apache/axiom/soap/SOAPFaultText;
      75: ifnull        101
      78: aload_0
      79: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      82: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      85: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
      90: invokeinterface #45,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultReason.getFirstSOAPText:()Lorg/apache/axiom/soap/SOAPFaultText;
      95: invokeinterface #46,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultText.getText:()Ljava/lang/String;
     100: areturn
     101: aconst_null
     102: areturn

  public javax.xml.soap.Detail getDetail();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       5: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       8: invokeinterface #47,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getDetail:()Lorg/apache/axiom/soap/SOAPFaultDetail;
      13: checkcast     #48                 // class org/w3c/dom/Node
      16: invokevirtual #49                 // Method toSAAJNode:(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;
      19: checkcast     #50                 // class javax/xml/soap/Detail
      22: areturn

  public void setFaultCode(javax.xml.soap.Name) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_1
       1: invokeinterface #51,  1           // InterfaceMethod javax/xml/soap/Name.getURI:()Ljava/lang/String;
       6: ifnull        24
       9: aload_1
      10: invokeinterface #51,  1           // InterfaceMethod javax/xml/soap/Name.getURI:()Ljava/lang/String;
      15: invokevirtual #52                 // Method java/lang/String.trim:()Ljava/lang/String;
      18: invokevirtual #53                 // Method java/lang/String.length:()I
      21: ifne          34
      24: new           #18                 // class javax/xml/soap/SOAPException
      27: dup
      28: ldc           #54                 // String faultCodeQName must be namespace qualified.
      30: invokespecial #20                 // Method javax/xml/soap/SOAPException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: new           #55                 // class javax/xml/namespace/QName
      37: dup
      38: aload_1
      39: invokeinterface #51,  1           // InterfaceMethod javax/xml/soap/Name.getURI:()Ljava/lang/String;
      44: aload_1
      45: invokeinterface #56,  1           // InterfaceMethod javax/xml/soap/Name.getLocalName:()Ljava/lang/String;
      50: aload_1
      51: invokeinterface #57,  1           // InterfaceMethod javax/xml/soap/Name.getPrefix:()Ljava/lang/String;
      56: invokespecial #58                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      59: astore_2
      60: aload_0
      61: aload_2
      62: invokevirtual #9                  // Method setFaultCode:(Ljavax/xml/namespace/QName;)V
      65: return

  public javax.xml.soap.Detail addDetail() throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field isDetailAdded:Z
       4: ifeq          17
       7: new           #18                 // class javax/xml/soap/SOAPException
      10: dup
      11: ldc           #60                 // String This SOAPFault already contains a Detail element. Please remove the existing Detail element before calling addDetail()
      13: invokespecial #20                 // Method javax/xml/soap/SOAPException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      21: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      24: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      29: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      32: astore_2
      33: aload_2
      34: aload_0
      35: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      38: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      41: invokeinterface #61,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultDetail:(Lorg/apache/axiom/soap/SOAPFault;)Lorg/apache/axiom/soap/SOAPFaultDetail;
      46: astore_1
      47: new           #62                 // class org/apache/axis2/saaj/DetailImpl
      50: dup
      51: aload_1
      52: invokespecial #63                 // Method org/apache/axis2/saaj/DetailImpl."<init>":(Lorg/apache/axiom/soap/SOAPFaultDetail;)V
      55: astore_3
      56: aload_0
      57: iconst_1
      58: putfield      #59                 // Field isDetailAdded:Z
      61: aload_3
      62: areturn

  public javax.xml.soap.Name getFaultCodeAsName();
    Code:
       0: new           #64                 // class org/apache/axis2/saaj/PrefixedQName
       3: dup
       4: aload_0
       5: invokevirtual #65                 // Method getFaultCodeAsQName:()Ljavax/xml/namespace/QName;
       8: invokespecial #66                 // Method org/apache/axis2/saaj/PrefixedQName."<init>":(Ljavax/xml/namespace/QName;)V
      11: areturn

  public void setFaultString(java.lang.String, java.util.Locale) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
      12: ifnull        99
      15: aload_0
      16: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      19: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      22: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
      27: astore_3
      28: aload_0
      29: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      32: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      35: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      40: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      43: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      48: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      51: if_acmpne     64
      54: aload_3
      55: aload_1
      56: invokeinterface #67,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultReason.setText:(Ljava/lang/String;)V
      61: goto          96
      64: aload_0
      65: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      68: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      71: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      76: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      79: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      84: invokestatic  #23                 // Method org/apache/axiom/soap/SOAP12Version.getSingleton:()Lorg/apache/axiom/soap/SOAP12Version;
      87: if_acmpne     96
      90: aload_0
      91: aload_1
      92: aload_2
      93: invokevirtual #68                 // Method addFaultReasonText:(Ljava/lang/String;Ljava/util/Locale;)V
      96: goto          195
      99: aload_0
     100: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     103: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     106: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
     111: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
     114: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
     119: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
     122: if_acmpne     163
     125: aload_0
     126: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     129: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     132: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
     137: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
     140: aload_0
     141: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     144: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     147: invokeinterface #69,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultReason:(Lorg/apache/axiom/soap/SOAPFault;)Lorg/apache/axiom/soap/SOAPFaultReason;
     152: astore_3
     153: aload_3
     154: aload_1
     155: invokeinterface #67,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultReason.setText:(Ljava/lang/String;)V
     160: goto          195
     163: aload_0
     164: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     167: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     170: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
     175: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
     178: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
     183: invokestatic  #23                 // Method org/apache/axiom/soap/SOAP12Version.getSingleton:()Lorg/apache/axiom/soap/SOAP12Version;
     186: if_acmpne     195
     189: aload_0
     190: aload_1
     191: aload_2
     192: invokevirtual #68                 // Method addFaultReasonText:(Ljava/lang/String;Ljava/util/Locale;)V
     195: aload_0
     196: aload_2
     197: putfield      #70                 // Field faultReasonLocale:Ljava/util/Locale;
     200: return

  public java.util.Locale getFaultStringLocale();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     31
      26: aload_0
      27: getfield      #70                 // Field faultReasonLocale:Ljava/util/Locale;
      30: areturn
      31: aload_0
      32: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      35: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      38: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      43: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      46: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      51: invokestatic  #23                 // Method org/apache/axiom/soap/SOAP12Version.getSingleton:()Lorg/apache/axiom/soap/SOAP12Version;
      54: if_acmpne     94
      57: aconst_null
      58: astore_1
      59: aload_0
      60: invokevirtual #71                 // Method getFaultReasonLocales:()Ljava/util/Iterator;
      63: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          84
      71: aload_0
      72: invokevirtual #71                 // Method getFaultReasonLocales:()Ljava/util/Iterator;
      75: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      80: checkcast     #74                 // class java/util/Locale
      83: astore_1
      84: goto          92
      87: astore_2
      88: aload_2
      89: invokevirtual #75                 // Method javax/xml/soap/SOAPException.printStackTrace:()V
      92: aload_1
      93: areturn
      94: aconst_null
      95: areturn
    Exception table:
       from    to  target type
          59    84    87   Class javax/xml/soap/SOAPException

  public void addFaultReasonText(java.lang.String, java.util.Locale) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #18                 // class javax/xml/soap/SOAPException
       7: dup
       8: ldc           #76                 // String Received null for locale
      10: invokespecial #20                 // Method javax/xml/soap/SOAPException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      18: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      21: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      26: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      29: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      34: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      37: if_acmpne     50
      40: new           #77                 // class java/lang/UnsupportedOperationException
      43: dup
      44: ldc           #78                 // String Not supported in SOAP 1.1
      46: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      54: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      57: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      62: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      65: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      70: invokestatic  #23                 // Method org/apache/axiom/soap/SOAP12Version.getSingleton:()Lorg/apache/axiom/soap/SOAP12Version;
      73: if_acmpne     272
      76: aload_0
      77: invokevirtual #80                 // Method removeDefaults:()V
      80: aload_0
      81: aload_2
      82: invokevirtual #81                 // Method getFaultReasonText:(Ljava/util/Locale;)Ljava/lang/String;
      85: astore_3
      86: aload_3
      87: ifnonnull     198
      90: aconst_null
      91: astore        4
      93: aload_0
      94: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      97: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     100: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
     105: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
     108: astore        4
     110: aload_0
     111: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     114: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     117: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
     122: ifnonnull     155
     125: aload         4
     127: aload_0
     128: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     131: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     134: invokeinterface #69,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultReason:(Lorg/apache/axiom/soap/SOAPFault;)Lorg/apache/axiom/soap/SOAPFaultReason;
     139: astore        5
     141: aload_0
     142: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     145: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     148: aload         5
     150: invokeinterface #82,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFault.setReason:(Lorg/apache/axiom/soap/SOAPFaultReason;)V
     155: aload         4
     157: aload_0
     158: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     161: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     164: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
     169: invokeinterface #83,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultText:(Lorg/apache/axiom/soap/SOAPFaultReason;)Lorg/apache/axiom/soap/SOAPFaultText;
     174: astore        5
     176: aload         5
     178: aload_1
     179: invokeinterface #84,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultText.setText:(Ljava/lang/String;)V
     184: aload         5
     186: aload_2
     187: invokevirtual #85                 // Method java/util/Locale.toString:()Ljava/lang/String;
     190: invokeinterface #86,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultText.setLang:(Ljava/lang/String;)V
     195: goto          272
     198: aload_0
     199: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     202: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     205: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
     210: invokeinterface #87,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultReason.getAllSoapTexts:()Ljava/util/List;
     215: invokeinterface #88,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     220: astore        4
     222: aload         4
     224: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     229: ifeq          272
     232: aload         4
     234: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     239: checkcast     #89                 // class org/apache/axiom/soap/SOAPFaultText
     242: astore        5
     244: aload         5
     246: invokeinterface #90,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultText.getLang:()Ljava/lang/String;
     251: aload_2
     252: invokevirtual #85                 // Method java/util/Locale.toString:()Ljava/lang/String;
     255: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     258: ifeq          269
     261: aload         5
     263: aload_1
     264: invokeinterface #84,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultText.setText:(Ljava/lang/String;)V
     269: goto          222
     272: return

  public void appendFaultSubcode(javax.xml.namespace.QName) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: astore_2
      16: aconst_null
      17: astore_3
      18: aload_1
      19: invokevirtual #91                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      22: ifnull        38
      25: aload_1
      26: invokevirtual #91                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      29: invokevirtual #52                 // Method java/lang/String.trim:()Ljava/lang/String;
      32: invokevirtual #53                 // Method java/lang/String.length:()I
      35: ifne          65
      38: new           #18                 // class javax/xml/soap/SOAPException
      41: dup
      42: new           #92                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #94                 // String Unqualified QName object :
      51: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #20                 // Method javax/xml/soap/SOAPException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_0
      66: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      69: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      72: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      77: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      80: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      85: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      88: if_acmpne     99
      91: new           #77                 // class java/lang/UnsupportedOperationException
      94: dup
      95: invokespecial #98                 // Method java/lang/UnsupportedOperationException."<init>":()V
      98: athrow
      99: aload_0
     100: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     103: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     106: invokeinterface #28,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getCode:()Lorg/apache/axiom/soap/SOAPFaultCode;
     111: ifnonnull     150
     114: aload_2
     115: aload_0
     116: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     119: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     122: invokeinterface #21,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultCode:(Lorg/apache/axiom/soap/SOAPFault;)Lorg/apache/axiom/soap/SOAPFaultCode;
     127: pop
     128: aload_2
     129: aload_0
     130: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     133: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     136: invokeinterface #28,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getCode:()Lorg/apache/axiom/soap/SOAPFaultCode;
     141: invokeinterface #99,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultSubCode:(Lorg/apache/axiom/soap/SOAPFaultCode;)Lorg/apache/axiom/soap/SOAPFaultSubCode;
     146: astore_3
     147: goto          220
     150: aload_0
     151: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     154: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     157: invokeinterface #28,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getCode:()Lorg/apache/axiom/soap/SOAPFaultCode;
     162: invokeinterface #100,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFaultCode.getSubCode:()Lorg/apache/axiom/soap/SOAPFaultSubCode;
     167: ifnull        201
     170: aload_2
     171: aload_0
     172: aload_0
     173: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     176: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     179: invokeinterface #28,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getCode:()Lorg/apache/axiom/soap/SOAPFaultCode;
     184: invokeinterface #100,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFaultCode.getSubCode:()Lorg/apache/axiom/soap/SOAPFaultSubCode;
     189: invokespecial #101                // Method getLastSubCode:(Lorg/apache/axiom/soap/SOAPFaultSubCode;)Lorg/apache/axiom/soap/SOAPFaultSubCode;
     192: invokeinterface #102,  2          // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultSubCode:(Lorg/apache/axiom/soap/SOAPFaultSubCode;)Lorg/apache/axiom/soap/SOAPFaultSubCode;
     197: astore_3
     198: goto          220
     201: aload_2
     202: aload_0
     203: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     206: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     209: invokeinterface #28,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getCode:()Lorg/apache/axiom/soap/SOAPFaultCode;
     214: invokeinterface #99,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultSubCode:(Lorg/apache/axiom/soap/SOAPFaultCode;)Lorg/apache/axiom/soap/SOAPFaultSubCode;
     219: astore_3
     220: aload_3
     221: ifnull        285
     224: aload_2
     225: aload_3
     226: invokeinterface #103,  2          // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultValue:(Lorg/apache/axiom/soap/SOAPFaultSubCode;)Lorg/apache/axiom/soap/SOAPFaultValue;
     231: astore        4
     233: aload         4
     235: new           #92                 // class java/lang/StringBuilder
     238: dup
     239: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
     242: aload_1
     243: invokevirtual #104                // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
     246: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: ldc           #16                 // String :
     251: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     254: aload_1
     255: invokevirtual #105                // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     258: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     264: invokeinterface #26,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultValue.setText:(Ljava/lang/String;)V
     269: aload         4
     271: aload_1
     272: invokevirtual #91                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     275: aload_1
     276: invokevirtual #104                // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
     279: invokeinterface #106,  3          // InterfaceMethod org/apache/axiom/soap/SOAPFaultValue.declareNamespace:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/axiom/om/OMNamespace;
     284: pop
     285: return

  private org.apache.axiom.soap.SOAPFaultSubCode getLastSubCode(org.apache.axiom.soap.SOAPFaultSubCode);
    Code:
       0: aload_1
       1: invokeinterface #107,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFaultSubCode.getSubCode:()Lorg/apache/axiom/soap/SOAPFaultSubCode;
       6: astore_2
       7: aload_2
       8: ifnull        17
      11: aload_0
      12: aload_2
      13: invokespecial #101                // Method getLastSubCode:(Lorg/apache/axiom/soap/SOAPFaultSubCode;)Lorg/apache/axiom/soap/SOAPFaultSubCode;
      16: areturn
      17: aload_1
      18: areturn

  public javax.xml.namespace.QName getFaultCodeAsQName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #28,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getCode:()Lorg/apache/axiom/soap/SOAPFaultCode;
      12: astore_1
      13: aload_1
      14: ifnull        26
      17: aload_1
      18: invokeinterface #108,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFaultCode.getValueAsQName:()Ljavax/xml/namespace/QName;
      23: goto          27
      26: aconst_null
      27: areturn

  public java.lang.String getFaultNode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     36
      26: new           #77                 // class java/lang/UnsupportedOperationException
      29: dup
      30: ldc           #109                // String Message does not support the SOAP 1.2 concept of Fault Node
      32: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      40: ifnull        96
      43: aload_0
      44: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      47: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      50: invokeinterface #110,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFault.getNode:()Lorg/apache/axiom/soap/SOAPFaultNode;
      55: ifnull        96
      58: aload_0
      59: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      62: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      65: invokeinterface #110,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFault.getNode:()Lorg/apache/axiom/soap/SOAPFaultNode;
      70: invokeinterface #111,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFaultNode.getText:()Ljava/lang/String;
      75: ifnull        96
      78: aload_0
      79: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      82: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      85: invokeinterface #110,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFault.getNode:()Lorg/apache/axiom/soap/SOAPFaultNode;
      90: invokeinterface #111,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFaultNode.getText:()Ljava/lang/String;
      95: areturn
      96: aconst_null
      97: areturn

  public java.util.Iterator getFaultReasonLocales() throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     36
      26: new           #77                 // class java/lang/UnsupportedOperationException
      29: dup
      30: ldc           #112                // String Message does not support the SOAP 1.2 concept of Fault Reason
      32: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: new           #113                // class java/util/ArrayList
      39: dup
      40: invokespecial #114                // Method java/util/ArrayList."<init>":()V
      43: astore_1
      44: aload_0
      45: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      48: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      51: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
      56: invokeinterface #87,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultReason.getAllSoapTexts:()Ljava/util/List;
      61: astore_2
      62: aload_2
      63: ifnull        196
      66: aload_2
      67: invokeinterface #88,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      72: astore_3
      73: aload_3
      74: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          196
      82: aload_3
      83: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      88: checkcast     #89                 // class org/apache/axiom/soap/SOAPFaultText
      91: astore        4
      93: aload         4
      95: invokeinterface #90,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultText.getLang:()Ljava/lang/String;
     100: astore        5
     102: aload         5
     104: ifnonnull     118
     107: aload_1
     108: invokestatic  #38                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
     111: invokevirtual #115                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     114: pop
     115: goto          193
     118: aload         5
     120: ldc           #116                // String _
     122: invokevirtual #17                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
     125: iconst_m1
     126: if_icmpeq     179
     129: aload         5
     131: iconst_0
     132: aload         5
     134: ldc           #116                // String _
     136: invokevirtual #17                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
     139: invokevirtual #117                // Method java/lang/String.substring:(II)Ljava/lang/String;
     142: astore        6
     144: aload         5
     146: aload         5
     148: ldc           #116                // String _
     150: invokevirtual #17                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
     153: iconst_1
     154: iadd
     155: invokevirtual #118                // Method java/lang/String.substring:(I)Ljava/lang/String;
     158: astore        7
     160: aload_1
     161: new           #74                 // class java/util/Locale
     164: dup
     165: aload         6
     167: aload         7
     169: invokespecial #119                // Method java/util/Locale."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     172: invokevirtual #115                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     175: pop
     176: goto          193
     179: aload_1
     180: new           #74                 // class java/util/Locale
     183: dup
     184: aload         5
     186: invokespecial #120                // Method java/util/Locale."<init>":(Ljava/lang/String;)V
     189: invokevirtual #115                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     192: pop
     193: goto          73
     196: aload_1
     197: invokevirtual #121                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     200: areturn

  public java.lang.String getFaultReasonText(java.util.Locale) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     36
      26: new           #77                 // class java/lang/UnsupportedOperationException
      29: dup
      30: ldc           #112                // String Message does not support the SOAP 1.2 concept of Fault Reason
      32: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aconst_null
      37: astore_2
      38: aload_0
      39: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      42: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      45: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
      50: astore_3
      51: aload_3
      52: ifnull        124
      55: aload_3
      56: invokeinterface #87,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultReason.getAllSoapTexts:()Ljava/util/List;
      61: astore        4
      63: aload         4
      65: ifnull        124
      68: aload         4
      70: invokeinterface #88,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      75: astore_2
      76: aload_2
      77: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          124
      85: aload_2
      86: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #89                 // class org/apache/axiom/soap/SOAPFaultText
      94: astore        5
      96: aload         5
      98: invokeinterface #90,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultText.getLang:()Ljava/lang/String;
     103: aload_1
     104: invokevirtual #85                 // Method java/util/Locale.toString:()Ljava/lang/String;
     107: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     110: ifeq          121
     113: aload         5
     115: invokeinterface #46,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultText.getText:()Ljava/lang/String;
     120: areturn
     121: goto          76
     124: aconst_null
     125: areturn

  public java.util.Iterator getFaultReasonTexts() throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     34
      26: new           #77                 // class java/lang/UnsupportedOperationException
      29: dup
      30: invokespecial #98                 // Method java/lang/UnsupportedOperationException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      38: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      41: invokeinterface #14,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getReason:()Lorg/apache/axiom/soap/SOAPFaultReason;
      46: invokeinterface #87,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultReason.getAllSoapTexts:()Ljava/util/List;
      51: invokeinterface #88,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      56: astore_1
      57: new           #113                // class java/util/ArrayList
      60: dup
      61: invokespecial #114                // Method java/util/ArrayList."<init>":()V
      64: astore_2
      65: aload_1
      66: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          98
      74: aload_1
      75: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      80: checkcast     #89                 // class org/apache/axiom/soap/SOAPFaultText
      83: astore_3
      84: aload_2
      85: aload_3
      86: invokeinterface #46,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFaultText.getText:()Ljava/lang/String;
      91: invokevirtual #115                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      94: pop
      95: goto          65
      98: aload_2
      99: invokevirtual #121                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     102: areturn

  public java.lang.String getFaultRole();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     36
      26: new           #77                 // class java/lang/UnsupportedOperationException
      29: dup
      30: ldc           #112                // String Message does not support the SOAP 1.2 concept of Fault Reason
      32: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      40: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      43: invokeinterface #32,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getRole:()Lorg/apache/axiom/soap/SOAPFaultRole;
      48: ifnull        69
      51: aload_0
      52: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      55: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      58: invokeinterface #32,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getRole:()Lorg/apache/axiom/soap/SOAPFaultRole;
      63: invokeinterface #122,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFaultRole.getText:()Ljava/lang/String;
      68: areturn
      69: aconst_null
      70: areturn

  public java.util.Iterator getFaultSubcodes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     34
      26: new           #77                 // class java/lang/UnsupportedOperationException
      29: dup
      30: invokespecial #98                 // Method java/lang/UnsupportedOperationException."<init>":()V
      33: athrow
      34: new           #113                // class java/util/ArrayList
      37: dup
      38: invokespecial #114                // Method java/util/ArrayList."<init>":()V
      41: astore_1
      42: aload_0
      43: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      46: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      49: invokeinterface #28,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getCode:()Lorg/apache/axiom/soap/SOAPFaultCode;
      54: invokeinterface #100,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFaultCode.getSubCode:()Lorg/apache/axiom/soap/SOAPFaultSubCode;
      59: astore_2
      60: aload_2
      61: ifnull        85
      64: aload_1
      65: aload_2
      66: invokeinterface #123,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFaultSubCode.getValueAsQName:()Ljavax/xml/namespace/QName;
      71: invokevirtual #115                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      74: pop
      75: aload_2
      76: invokeinterface #107,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFaultSubCode.getSubCode:()Lorg/apache/axiom/soap/SOAPFaultSubCode;
      81: astore_2
      82: goto          60
      85: aload_1
      86: invokevirtual #121                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      89: areturn

  public boolean hasDetail();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #47,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getDetail:()Lorg/apache/axiom/soap/SOAPFaultDetail;
      12: ifnull        17
      15: iconst_1
      16: ireturn
      17: iconst_0
      18: ireturn

  public void removeAllFaultSubcodes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      20: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      23: if_acmpne     34
      26: new           #77                 // class java/lang/UnsupportedOperationException
      29: dup
      30: invokespecial #98                 // Method java/lang/UnsupportedOperationException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      38: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      41: invokeinterface #28,  1           // InterfaceMethod org/apache/axiom/soap/SOAPFault.getCode:()Lorg/apache/axiom/soap/SOAPFaultCode;
      46: invokeinterface #100,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFaultCode.getSubCode:()Lorg/apache/axiom/soap/SOAPFaultSubCode;
      51: invokeinterface #124,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFaultSubCode.detach:()Lorg/apache/axiom/om/OMNode;
      56: pop
      57: return

  public void setFaultCode(javax.xml.namespace.QName) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_1
       1: invokevirtual #91                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
       4: ifnull        20
       7: aload_1
       8: invokevirtual #91                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      11: invokevirtual #52                 // Method java/lang/String.trim:()Ljava/lang/String;
      14: invokevirtual #53                 // Method java/lang/String.length:()I
      17: ifne          47
      20: new           #18                 // class javax/xml/soap/SOAPException
      23: dup
      24: new           #92                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #94                 // String Unqualified QName object :
      33: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #20                 // Method javax/xml/soap/SOAPException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aconst_null
      48: astore_2
      49: aload_0
      50: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      53: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      56: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      61: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      64: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      69: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      72: if_acmpne     94
      75: aload_0
      76: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      79: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      82: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      87: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      90: astore_2
      91: goto          191
      94: aload_0
      95: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      98: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     101: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
     106: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
     109: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
     114: invokestatic  #23                 // Method org/apache/axiom/soap/SOAP12Version.getSingleton:()Lorg/apache/axiom/soap/SOAP12Version;
     117: if_acmpne     181
     120: aload_1
     121: invokevirtual #91                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     124: ldc           #126                // String http://www.w3.org/2003/05/soap-envelope
     126: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     129: ifne          162
     132: new           #18                 // class javax/xml/soap/SOAPException
     135: dup
     136: new           #92                 // class java/lang/StringBuilder
     139: dup
     140: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
     143: ldc           #127                // String Incorrect URI
     145: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: aload_1
     149: invokevirtual #91                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     152: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: invokespecial #20                 // Method javax/xml/soap/SOAPException."<init>":(Ljava/lang/String;)V
     161: athrow
     162: aload_0
     163: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     166: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     169: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
     174: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
     177: astore_2
     178: goto          191
     181: new           #18                 // class javax/xml/soap/SOAPException
     184: dup
     185: ldc           #128                // String Invalid SOAP version
     187: invokespecial #20                 // Method javax/xml/soap/SOAPException."<init>":(Ljava/lang/String;)V
     190: athrow
     191: aload_2
     192: aload_0
     193: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     196: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     199: invokeinterface #21,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultCode:(Lorg/apache/axiom/soap/SOAPFault;)Lorg/apache/axiom/soap/SOAPFaultCode;
     204: astore_3
     205: aload_1
     206: invokevirtual #104                // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
     209: ifnull        231
     212: aload_1
     213: invokevirtual #104                // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
     216: ldc           #129                // String
     218: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     221: ifne          231
     224: aload_1
     225: invokevirtual #104                // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
     228: goto          246
     231: aload_0
     232: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     235: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     238: invokeinterface #130,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFault.getQName:()Ljavax/xml/namespace/QName;
     243: invokevirtual #104                // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
     246: astore        4
     248: aload_0
     249: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     252: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     255: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
     260: astore        5
     262: aload         5
     264: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
     267: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
     272: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
     275: if_acmpne     340
     278: aload_3
     279: new           #92                 // class java/lang/StringBuilder
     282: dup
     283: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
     286: aload         4
     288: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     291: ldc           #16                 // String :
     293: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     296: aload_1
     297: invokevirtual #105                // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     300: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     303: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     306: invokeinterface #22,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultCode.setText:(Ljava/lang/String;)V
     311: aload         5
     313: aload_1
     314: invokevirtual #91                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     317: aload_1
     318: invokevirtual #104                // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
     321: invokeinterface #131,  3          // InterfaceMethod org/apache/axiom/om/OMFactory.createOMNamespace:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/axiom/om/OMNamespace;
     326: astore        6
     328: aload_3
     329: aload         6
     331: invokeinterface #132,  2          // InterfaceMethod org/apache/axiom/soap/SOAPFaultCode.declareNamespace:(Lorg/apache/axiom/om/OMNamespace;)Lorg/apache/axiom/om/OMNamespace;
     336: pop
     337: goto          434
     340: aload         5
     342: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
     345: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
     350: invokestatic  #23                 // Method org/apache/axiom/soap/SOAP12Version.getSingleton:()Lorg/apache/axiom/soap/SOAP12Version;
     353: if_acmpne     434
     356: aload_2
     357: aload_3
     358: invokeinterface #24,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultValue:(Lorg/apache/axiom/soap/SOAPFaultCode;)Lorg/apache/axiom/soap/SOAPFaultValue;
     363: astore        6
     365: aload         6
     367: new           #92                 // class java/lang/StringBuilder
     370: dup
     371: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
     374: aload         4
     376: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     379: ldc           #16                 // String :
     381: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     384: aload_1
     385: invokevirtual #105                // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     388: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     391: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     394: invokeinterface #26,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultValue.setText:(Ljava/lang/String;)V
     399: aload         5
     401: aload_1
     402: invokevirtual #91                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     405: aload_1
     406: invokevirtual #104                // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
     409: invokeinterface #131,  3          // InterfaceMethod org/apache/axiom/om/OMFactory.createOMNamespace:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/axiom/om/OMNamespace;
     414: astore        7
     416: aload         6
     418: aload         7
     420: invokeinterface #133,  2          // InterfaceMethod org/apache/axiom/soap/SOAPFaultValue.declareNamespace:(Lorg/apache/axiom/om/OMNamespace;)Lorg/apache/axiom/om/OMNamespace;
     425: pop
     426: aload_3
     427: aload         6
     429: invokeinterface #25,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultCode.setValue:(Lorg/apache/axiom/soap/SOAPFaultValue;)V
     434: aload_0
     435: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
     438: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
     441: aload_3
     442: invokeinterface #27,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFault.setCode:(Lorg/apache/axiom/soap/SOAPFaultCode;)V
     447: return

  public void setFaultNode(java.lang.String) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: astore_2
      16: aload_0
      17: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      20: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      23: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      28: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      31: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      36: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      39: if_acmpne     52
      42: new           #77                 // class java/lang/UnsupportedOperationException
      45: dup
      46: ldc           #134                // String message does not support the SOAP 1.2 concept of Fault Node
      48: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_2
      53: aload_0
      54: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      57: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      60: invokeinterface #135,  2          // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultNode:(Lorg/apache/axiom/soap/SOAPFault;)Lorg/apache/axiom/soap/SOAPFaultNode;
      65: astore_3
      66: aload_3
      67: aload_1
      68: invokeinterface #136,  2          // InterfaceMethod org/apache/axiom/soap/SOAPFaultNode.setText:(Ljava/lang/String;)V
      73: aload_0
      74: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      77: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      80: aload_3
      81: invokeinterface #137,  2          // InterfaceMethod org/apache/axiom/soap/SOAPFault.setNode:(Lorg/apache/axiom/soap/SOAPFaultNode;)V
      86: return

  public void setFaultRole(java.lang.String) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       4: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       7: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      12: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      15: astore_2
      16: aload_0
      17: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      20: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      23: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFault.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      28: checkcast     #5                  // class org/apache/axiom/soap/SOAPFactory
      31: invokeinterface #6,  1            // InterfaceMethod org/apache/axiom/soap/SOAPFactory.getSOAPVersion:()Lorg/apache/axiom/soap/SOAPVersion;
      36: invokestatic  #7                  // Method org/apache/axiom/soap/SOAP11Version.getSingleton:()Lorg/apache/axiom/soap/SOAP11Version;
      39: if_acmpne     52
      42: new           #77                 // class java/lang/UnsupportedOperationException
      45: dup
      46: ldc           #138                // String message does not support the SOAP 1.2 concept of Fault Role
      48: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_2
      53: aload_0
      54: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      57: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      60: invokeinterface #33,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPFaultRole:(Lorg/apache/axiom/soap/SOAPFault;)Lorg/apache/axiom/soap/SOAPFaultRole;
      65: astore_3
      66: aload_3
      67: aload_1
      68: invokeinterface #34,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFaultRole.setRoleValue:(Ljava/lang/String;)V
      73: aload_0
      74: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      77: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      80: aload_3
      81: invokeinterface #35,  2           // InterfaceMethod org/apache/axiom/soap/SOAPFault.setRole:(Lorg/apache/axiom/soap/SOAPFaultRole;)V
      86: return

  public java.util.Iterator getChildElements(javax.xml.soap.Name);
    Code:
       0: new           #55                 // class javax/xml/namespace/QName
       3: dup
       4: aload_1
       5: invokeinterface #51,  1           // InterfaceMethod javax/xml/soap/Name.getURI:()Ljava/lang/String;
      10: aload_1
      11: invokeinterface #56,  1           // InterfaceMethod javax/xml/soap/Name.getLocalName:()Ljava/lang/String;
      16: invokespecial #139                // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      19: astore_2
      20: aload_0
      21: aload_0
      22: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
      25: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
      28: aload_2
      29: invokeinterface #140,  2          // InterfaceMethod org/apache/axiom/soap/SOAPFault.getChildrenWithName:(Ljavax/xml/namespace/QName;)Ljava/util/Iterator;
      34: invokespecial #141                // Method getChildren:(Ljava/util/Iterator;)Ljava/util/Iterator;
      37: areturn

  public java.util.Iterator getChildElements();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field omTarget:Lorg/apache/axiom/om/OMInformationItem;
       5: checkcast     #3                  // class org/apache/axiom/soap/SOAPFault
       8: invokeinterface #142,  1          // InterfaceMethod org/apache/axiom/soap/SOAPFault.getChildren:()Ljava/util/Iterator;
      13: invokespecial #141                // Method getChildren:(Ljava/util/Iterator;)Ljava/util/Iterator;
      16: areturn

  private java.util.Iterator getChildren(java.util.Iterator);
    Code:
       0: new           #113                // class java/util/ArrayList
       3: dup
       4: invokespecial #114                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          75
      17: aload_1
      18: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #48                 // class org/w3c/dom/Node
      26: astore_3
      27: aload_0
      28: aload_3
      29: invokevirtual #49                 // Method toSAAJNode:(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;
      32: astore        4
      34: aload         4
      36: instanceof    #143                // class javax/xml/soap/SOAPFaultElement
      39: ifne          63
      42: aload_2
      43: new           #144                // class org/apache/axis2/saaj/SOAPFaultElementImpl
      46: dup
      47: aload_3
      48: checkcast     #145                // class org/apache/axiom/om/OMElement
      51: invokespecial #146                // Method org/apache/axis2/saaj/SOAPFaultElementImpl."<init>":(Lorg/apache/axiom/om/OMElement;)V
      54: invokeinterface #147,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      59: pop
      60: goto          72
      63: aload_2
      64: aload         4
      66: invokeinterface #147,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          8
      75: aload_2
      76: invokeinterface #148,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      81: areturn
}
