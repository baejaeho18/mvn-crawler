Compiled from "JAXBUtils.java"
class org.apache.axis2.jaxws.message.databinding.JAXBUtils$Pool<K, V> {
  private java.lang.ref.SoftReference<java.util.Map<K, java.util.List<V>>> softMap;

  private static int MAX_LIST_FACTOR;

  private int count;

  private org.apache.axis2.jaxws.message.databinding.JAXBUtils$Pool();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/lang/ref/SoftReference
       8: dup
       9: new           #4                  // class java/util/concurrent/ConcurrentHashMap
      12: dup
      13: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      16: invokespecial #6                  // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      19: putfield      #7                  // Field softMap:Ljava/lang/ref/SoftReference;
      22: aload_0
      23: iconst_0
      24: putfield      #8                  // Field count:I
      27: return

  public V get(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method getValues:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: dup
       8: astore_3
       9: monitorenter
      10: aload_2
      11: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      16: ifle          40
      19: aload_2
      20: aload_2
      21: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      26: iconst_1
      27: isub
      28: invokeinterface #11,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      33: astore        4
      35: aload         4
      37: aload_3
      38: monitorexit
      39: areturn
      40: aload_3
      41: monitorexit
      42: goto          52
      45: astore        5
      47: aload_3
      48: monitorexit
      49: aload         5
      51: athrow
      52: aconst_null
      53: areturn
    Exception table:
       from    to  target type
          10    39    45   any
          40    42    45   any
          45    49    45   any

  public void put(K, V);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method adjustSize:()V
       4: aload_0
       5: aload_1
       6: invokespecial #9                  // Method getValues:(Ljava/lang/Object;)Ljava/util/List;
       9: astore_3
      10: aload_3
      11: dup
      12: astore        4
      14: monitorenter
      15: aload_3
      16: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      21: getstatic     #13                 // Field MAX_LIST_FACTOR:I
      24: if_icmpge     35
      27: aload_3
      28: aload_2
      29: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      34: pop
      35: aload         4
      37: monitorexit
      38: goto          49
      41: astore        5
      43: aload         4
      45: monitorexit
      46: aload         5
      48: athrow
      49: return
    Exception table:
       from    to  target type
          15    38    41   any
          41    46    41   any

  private java.util.List<V> getValues(K);
    Code:
       0: aload_0
       1: getfield      #7                  // Field softMap:Ljava/lang/ref/SoftReference;
       4: invokevirtual #15                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
       7: checkcast     #16                 // class java/util/Map
      10: astore_2
      11: aconst_null
      12: astore_3
      13: aload_2
      14: ifnull        34
      17: aload_2
      18: aload_1
      19: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #18                 // class java/util/List
      27: astore_3
      28: aload_3
      29: ifnull        34
      32: aload_3
      33: areturn
      34: aload_0
      35: dup
      36: astore        4
      38: monitorenter
      39: aload_2
      40: ifnull        54
      43: aload_2
      44: aload_1
      45: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #18                 // class java/util/List
      53: astore_3
      54: aload_3
      55: ifnonnull     99
      58: aload_2
      59: ifnonnull     82
      62: new           #4                  // class java/util/concurrent/ConcurrentHashMap
      65: dup
      66: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      69: astore_2
      70: aload_0
      71: new           #3                  // class java/lang/ref/SoftReference
      74: dup
      75: aload_2
      76: invokespecial #6                  // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      79: putfield      #7                  // Field softMap:Ljava/lang/ref/SoftReference;
      82: new           #19                 // class java/util/ArrayList
      85: dup
      86: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      89: astore_3
      90: aload_2
      91: aload_1
      92: aload_3
      93: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: aload_3
     100: aload         4
     102: monitorexit
     103: areturn
     104: astore        5
     106: aload         4
     108: monitorexit
     109: aload         5
     111: athrow
    Exception table:
       from    to  target type
          39   103   104   any
         104   109   104   any

  private void adjustSize();
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field count:I
       5: iconst_1
       6: iadd
       7: putfield      #8                  // Field count:I
      10: aload_0
      11: getfield      #8                  // Field count:I
      14: bipush        10
      16: if_icmpge     20
      19: return
      20: aload_0
      21: iconst_0
      22: putfield      #8                  // Field count:I
      25: aload_0
      26: getfield      #7                  // Field softMap:Ljava/lang/ref/SoftReference;
      29: invokevirtual #15                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      32: checkcast     #16                 // class java/util/Map
      35: astore_1
      36: aload_1
      37: ifnull        105
      40: aload_1
      41: invokeinterface #22,  1           // InterfaceMethod java/util/Map.size:()I
      46: invokestatic  #23                 // Method org/apache/axis2/jaxws/message/databinding/JAXBUtils.access$100:()I
      49: if_icmple     105
      52: aload_1
      53: invokeinterface #24,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      58: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      63: astore_2
      64: iconst_0
      65: istore_3
      66: aload_2
      67: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          105
      75: aload_2
      76: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: pop
      82: iload_3
      83: ifeq          92
      86: aload_2
      87: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.remove:()V
      92: iload_3
      93: ifne          100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: istore_3
     102: goto          66
     105: return

  org.apache.axis2.jaxws.message.databinding.JAXBUtils$Pool(org.apache.axis2.jaxws.message.databinding.JAXBUtils$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return

  static {};
    Code:
       0: bipush        50
       2: putstatic     #13                 // Field MAX_LIST_FACTOR:I
       5: return
}
