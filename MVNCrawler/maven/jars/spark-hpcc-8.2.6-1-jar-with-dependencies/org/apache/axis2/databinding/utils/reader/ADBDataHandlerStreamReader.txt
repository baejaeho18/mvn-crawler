Compiled from "ADBDataHandlerStreamReader.java"
public class org.apache.axis2.databinding.utils.reader.ADBDataHandlerStreamReader implements org.apache.axis2.databinding.utils.reader.ADBXMLStreamReader,org.apache.axiom.ext.stax.datahandler.DataHandlerReader {
  private static final int START_ELEMENT_STATE;

  private static final int TEXT_STATE;

  private static final int END_ELEMENT_STATE;

  private org.apache.axis2.databinding.utils.reader.ADBNamespaceContext namespaceContext;

  private javax.xml.namespace.QName name;

  private javax.activation.DataHandler value;

  private int state;

  private boolean nsDeclared;

  private java.lang.String convertedText;

  public org.apache.axis2.databinding.utils.reader.ADBDataHandlerStreamReader(javax.xml.namespace.QName, javax.activation.DataHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/axis2/databinding/utils/reader/ADBNamespaceContext
       8: dup
       9: invokespecial #3                  // Method org/apache/axis2/databinding/utils/reader/ADBNamespaceContext."<init>":()V
      12: putfield      #4                  // Field namespaceContext:Lorg/apache/axis2/databinding/utils/reader/ADBNamespaceContext;
      15: aload_0
      16: iconst_0
      17: putfield      #6                  // Field state:I
      20: aload_0
      21: iconst_0
      22: putfield      #7                  // Field nsDeclared:Z
      25: aload_0
      26: aconst_null
      27: putfield      #8                  // Field convertedText:Ljava/lang/String;
      30: aload_0
      31: aload_1
      32: putfield      #9                  // Field name:Ljavax/xml/namespace/QName;
      35: aload_0
      36: aload_2
      37: putfield      #10                 // Field value:Ljavax/activation/DataHandler;
      40: return

  public java.lang.Object getProperty(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #11                 // Method org/apache/axiom/util/stax/XMLStreamReaderUtils.processGetProperty:(Lorg/apache/axiom/ext/stax/datahandler/DataHandlerReader;Ljava/lang/String;)Ljava/lang/Object;
       5: areturn

  public boolean isBinary();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isOptimized();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isDeferred();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getContentID();
    Code:
       0: aconst_null
       1: areturn

  public javax.activation.DataHandler getDataHandler() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field value:Ljavax/activation/DataHandler;
       4: areturn

  public org.apache.axiom.ext.stax.datahandler.DataHandlerProvider getDataHandlerProvider();
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int next() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: tableswitch   { // 0 to 2
                     0: 32
                     1: 49
                     2: 39
               default: 56
          }
      32: aload_0
      33: iconst_1
      34: putfield      #6                  // Field state:I
      37: iconst_4
      38: ireturn
      39: new           #15                 // class javax/xml/stream/XMLStreamException
      42: dup
      43: ldc           #16                 // String end already reached!
      45: invokespecial #17                 // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: iconst_2
      51: putfield      #6                  // Field state:I
      54: iconst_2
      55: ireturn
      56: new           #15                 // class javax/xml/stream/XMLStreamException
      59: dup
      60: ldc           #18                 // String unknown event type!
      62: invokespecial #17                 // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/String;)V
      65: athrow

  public void require(int, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;
    Code:
       0: return

  public java.lang.String getElementText() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpne     36
       8: aload_0
       9: iconst_2
      10: putfield      #6                  // Field state:I
      13: aload_0
      14: getfield      #8                  // Field convertedText:Ljava/lang/String;
      17: ifnonnull     31
      20: aload_0
      21: aload_0
      22: getfield      #10                 // Field value:Ljavax/activation/DataHandler;
      25: invokestatic  #19                 // Method org/apache/axis2/databinding/utils/ConverterUtil.getStringFromDatahandler:(Ljavax/activation/DataHandler;)Ljava/lang/String;
      28: putfield      #8                  // Field convertedText:Ljava/lang/String;
      31: aload_0
      32: getfield      #8                  // Field convertedText:Ljava/lang/String;
      35: areturn
      36: new           #15                 // class javax/xml/stream/XMLStreamException
      39: dup
      40: invokespecial #20                 // Method javax/xml/stream/XMLStreamException."<init>":()V
      43: athrow

  public int nextTag() throws javax.xml.stream.XMLStreamException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasNext() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_2
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void close() throws javax.xml.stream.XMLStreamException;
    Code:
       0: return

  public java.lang.String getNamespaceURI(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field namespaceContext:Lorg/apache/axis2/databinding/utils/reader/ADBNamespaceContext;
       4: aload_1
       5: invokevirtual #21                 // Method org/apache/axis2/databinding/utils/reader/ADBNamespaceContext.getNamespaceURI:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public boolean isStartElement();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isEndElement();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isCharacters();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isWhiteSpace();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getAttributeValue(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public int getAttributeCount();
    Code:
       0: iconst_0
       1: ireturn

  public javax.xml.namespace.QName getAttributeName(int);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getAttributeNamespace(int);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getAttributeLocalName(int);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getAttributePrefix(int);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getAttributeType(int);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getAttributeValue(int);
    Code:
       0: aconst_null
       1: areturn

  public boolean isAttributeSpecified(int);
    Code:
       0: iconst_0
       1: ireturn

  public int getNamespaceCount();
    Code:
       0: aload_0
       1: getfield      #7                  // Field nsDeclared:Z
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getNamespacePrefix(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nsDeclared:Z
       4: ifeq          21
       7: iload_1
       8: ifne          21
      11: aload_0
      12: getfield      #9                  // Field name:Ljavax/xml/namespace/QName;
      15: invokevirtual #22                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
      18: goto          22
      21: aconst_null
      22: areturn

  public java.lang.String getNamespaceURI(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nsDeclared:Z
       4: ifeq          21
       7: iload_1
       8: ifne          21
      11: aload_0
      12: getfield      #9                  // Field name:Ljavax/xml/namespace/QName;
      15: invokevirtual #23                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      18: goto          22
      21: aconst_null
      22: areturn

  public javax.xml.namespace.NamespaceContext getNamespaceContext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field namespaceContext:Lorg/apache/axis2/databinding/utils/reader/ADBNamespaceContext;
       4: areturn

  public int getEventType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: tableswitch   { // 0 to 2
                     0: 32
                     1: 36
                     2: 34
               default: 38
          }
      32: iconst_1
      33: ireturn
      34: iconst_2
      35: ireturn
      36: iconst_4
      37: ireturn
      38: new           #12                 // class java/lang/UnsupportedOperationException
      41: dup
      42: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
      45: athrow

  public java.lang.String getText();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpne     31
       8: aload_0
       9: getfield      #8                  // Field convertedText:Ljava/lang/String;
      12: ifnonnull     26
      15: aload_0
      16: aload_0
      17: getfield      #10                 // Field value:Ljavax/activation/DataHandler;
      20: invokestatic  #19                 // Method org/apache/axis2/databinding/utils/ConverterUtil.getStringFromDatahandler:(Ljavax/activation/DataHandler;)Ljava/lang/String;
      23: putfield      #8                  // Field convertedText:Ljava/lang/String;
      26: aload_0
      27: getfield      #8                  // Field convertedText:Ljava/lang/String;
      30: areturn
      31: new           #24                 // class java/lang/IllegalStateException
      34: dup
      35: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":()V
      38: athrow

  public char[] getTextCharacters();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpne     34
       8: aload_0
       9: getfield      #8                  // Field convertedText:Ljava/lang/String;
      12: ifnonnull     26
      15: aload_0
      16: aload_0
      17: getfield      #10                 // Field value:Ljavax/activation/DataHandler;
      20: invokestatic  #19                 // Method org/apache/axis2/databinding/utils/ConverterUtil.getStringFromDatahandler:(Ljavax/activation/DataHandler;)Ljava/lang/String;
      23: putfield      #8                  // Field convertedText:Ljava/lang/String;
      26: aload_0
      27: getfield      #8                  // Field convertedText:Ljava/lang/String;
      30: invokevirtual #26                 // Method java/lang/String.toCharArray:()[C
      33: areturn
      34: new           #24                 // class java/lang/IllegalStateException
      37: dup
      38: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":()V
      41: athrow

  public int getTextCharacters(int, char[], int, int) throws javax.xml.stream.XMLStreamException;
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int getTextStart();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpne     10
       8: iconst_0
       9: ireturn
      10: new           #24                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow

  public int getTextLength();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpne     34
       8: aload_0
       9: getfield      #8                  // Field convertedText:Ljava/lang/String;
      12: ifnonnull     26
      15: aload_0
      16: aload_0
      17: getfield      #10                 // Field value:Ljavax/activation/DataHandler;
      20: invokestatic  #19                 // Method org/apache/axis2/databinding/utils/ConverterUtil.getStringFromDatahandler:(Ljavax/activation/DataHandler;)Ljava/lang/String;
      23: putfield      #8                  // Field convertedText:Ljava/lang/String;
      26: aload_0
      27: getfield      #8                  // Field convertedText:Ljava/lang/String;
      30: invokevirtual #27                 // Method java/lang/String.length:()I
      33: ireturn
      34: new           #24                 // class java/lang/IllegalStateException
      37: dup
      38: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":()V
      41: athrow

  public java.lang.String getEncoding();
    Code:
       0: aconst_null
       1: areturn

  public boolean hasText();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public javax.xml.stream.Location getLocation();
    Code:
       0: new           #28                 // class org/apache/axis2/databinding/utils/reader/ADBDataHandlerStreamReader$1
       3: dup
       4: aload_0
       5: invokespecial #29                 // Method org/apache/axis2/databinding/utils/reader/ADBDataHandlerStreamReader$1."<init>":(Lorg/apache/axis2/databinding/utils/reader/ADBDataHandlerStreamReader;)V
       8: areturn

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpeq     13
       8: aload_0
       9: getfield      #9                  // Field name:Ljavax/xml/namespace/QName;
      12: areturn
      13: aconst_null
      14: areturn

  public java.lang.String getLocalName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #9                  // Field name:Ljavax/xml/namespace/QName;
      12: invokevirtual #30                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      15: areturn
      16: aconst_null
      17: areturn

  public boolean hasName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.lang.String getNamespaceURI();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #9                  // Field name:Ljavax/xml/namespace/QName;
      12: invokevirtual #23                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      15: areturn
      16: aconst_null
      17: areturn

  public java.lang.String getPrefix();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #9                  // Field name:Ljavax/xml/namespace/QName;
      12: invokevirtual #22                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
      15: areturn
      16: aconst_null
      17: areturn

  public java.lang.String getVersion();
    Code:
       0: aconst_null
       1: areturn

  public boolean isStandalone();
    Code:
       0: iconst_0
       1: ireturn

  public boolean standaloneSet();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getCharacterEncodingScheme();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getPITarget();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getPIData();
    Code:
       0: aconst_null
       1: areturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void addNamespaceContext(javax.xml.namespace.NamespaceContext);
    Code:
       0: aload_0
       1: getfield      #4                  // Field namespaceContext:Lorg/apache/axis2/databinding/utils/reader/ADBNamespaceContext;
       4: aload_1
       5: invokevirtual #31                 // Method org/apache/axis2/databinding/utils/reader/ADBNamespaceContext.setParentNsContext:(Ljavax/xml/namespace/NamespaceContext;)V
       8: return

  public void init();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field name:Ljavax/xml/namespace/QName;
       5: invokevirtual #22                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
       8: aload_0
       9: getfield      #9                  // Field name:Ljavax/xml/namespace/QName;
      12: invokevirtual #23                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      15: invokespecial #32                 // Method addToNsMap:(Ljava/lang/String;Ljava/lang/String;)V
      18: return

  private void addToNsMap(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #4                  // Field namespaceContext:Lorg/apache/axis2/databinding/utils/reader/ADBNamespaceContext;
       5: aload_1
       6: invokevirtual #21                 // Method org/apache/axis2/databinding/utils/reader/ADBNamespaceContext.getNamespaceURI:(Ljava/lang/String;)Ljava/lang/String;
       9: invokevirtual #33                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifne          29
      15: aload_0
      16: getfield      #4                  // Field namespaceContext:Lorg/apache/axis2/databinding/utils/reader/ADBNamespaceContext;
      19: aload_1
      20: aload_2
      21: invokevirtual #34                 // Method org/apache/axis2/databinding/utils/reader/ADBNamespaceContext.pushNamespace:(Ljava/lang/String;Ljava/lang/String;)V
      24: aload_0
      25: iconst_1
      26: putfield      #7                  // Field nsDeclared:Z
      29: return
}
