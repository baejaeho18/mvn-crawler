Compiled from "NonPositiveInteger.java"
public class org.apache.axis2.databinding.types.NonPositiveInteger extends java.math.BigInteger {
  private static final long serialVersionUID;

  private java.math.BigInteger zero;

  public org.apache.axis2.databinding.types.NonPositiveInteger(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/math/BigInteger."<init>":([B)V
       5: aload_0
       6: new           #2                  // class java/math/BigInteger
       9: dup
      10: ldc           #3                  // String 0
      12: invokespecial #4                  // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      15: putfield      #5                  // Field zero:Ljava/math/BigInteger;
      18: aload_0
      19: invokespecial #6                  // Method checkValidity:()V
      22: return

  public org.apache.axis2.databinding.types.NonPositiveInteger(int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #7                  // Method java/math/BigInteger."<init>":(I[B)V
       6: aload_0
       7: new           #2                  // class java/math/BigInteger
      10: dup
      11: ldc           #3                  // String 0
      13: invokespecial #4                  // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      16: putfield      #5                  // Field zero:Ljava/math/BigInteger;
      19: aload_0
      20: invokespecial #6                  // Method checkValidity:()V
      23: return

  public org.apache.axis2.databinding.types.NonPositiveInteger(int, int, java.util.Random);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: invokespecial #8                  // Method java/math/BigInteger."<init>":(IILjava/util/Random;)V
       7: aload_0
       8: new           #2                  // class java/math/BigInteger
      11: dup
      12: ldc           #3                  // String 0
      14: invokespecial #4                  // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      17: putfield      #5                  // Field zero:Ljava/math/BigInteger;
      20: aload_0
      21: invokespecial #6                  // Method checkValidity:()V
      24: return

  public org.apache.axis2.databinding.types.NonPositiveInteger(int, java.util.Random);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #9                  // Method java/math/BigInteger."<init>":(ILjava/util/Random;)V
       6: aload_0
       7: new           #2                  // class java/math/BigInteger
      10: dup
      11: ldc           #3                  // String 0
      13: invokespecial #4                  // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      16: putfield      #5                  // Field zero:Ljava/math/BigInteger;
      19: aload_0
      20: invokespecial #6                  // Method checkValidity:()V
      23: return

  public org.apache.axis2.databinding.types.NonPositiveInteger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #2                  // class java/math/BigInteger
       9: dup
      10: ldc           #3                  // String 0
      12: invokespecial #4                  // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      15: putfield      #5                  // Field zero:Ljava/math/BigInteger;
      18: aload_0
      19: invokespecial #6                  // Method checkValidity:()V
      22: return

  public org.apache.axis2.databinding.types.NonPositiveInteger(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #10                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: new           #2                  // class java/math/BigInteger
      10: dup
      11: ldc           #3                  // String 0
      13: invokespecial #4                  // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      16: putfield      #5                  // Field zero:Ljava/math/BigInteger;
      19: aload_0
      20: invokespecial #6                  // Method checkValidity:()V
      23: return

  private void checkValidity();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field zero:Ljava/math/BigInteger;
       5: invokevirtual #11                 // Method compareTo:(Ljava/math/BigInteger;)I
       8: ifle          38
      11: new           #12                 // class java/lang/NumberFormatException
      14: dup
      15: new           #13                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #15                 // String :
      24: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #19                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: return

  public java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: new           #20                 // class org/apache/axis2/databinding/types/NonPositiveInteger$BigIntegerRep
       3: dup
       4: aload_0
       5: invokevirtual #21                 // Method toByteArray:()[B
       8: invokespecial #22                 // Method org/apache/axis2/databinding/types/NonPositiveInteger$BigIntegerRep."<init>":([B)V
      11: areturn
}
