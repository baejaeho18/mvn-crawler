Compiled from "UUEncoderStream.java"
public class org.apache.geronimo.mail.util.UUEncoderStream extends java.io.FilterOutputStream {
  protected static final int DEFAULT_MODE;

  protected static final java.lang.String DEFAULT_NAME;

  protected static final int MAX_CHARS_PER_LINE;

  protected java.lang.String name;

  protected int mode;

  protected boolean beginWritten;

  protected org.apache.geronimo.mail.util.UUEncoder encoder;

  protected int bufferedBytes;

  protected byte[] buffer;

  public org.apache.geronimo.mail.util.UUEncoderStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #1                  // String encoder.buf
       4: sipush        644
       7: invokespecial #2                  // Method "<init>":(Ljava/io/OutputStream;Ljava/lang/String;I)V
      10: return

  public org.apache.geronimo.mail.util.UUEncoderStream(java.io.OutputStream, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        644
       6: invokespecial #2                  // Method "<init>":(Ljava/io/OutputStream;Ljava/lang/String;I)V
       9: return

  public org.apache.geronimo.mail.util.UUEncoderStream(java.io.OutputStream, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: aload_0
       6: iconst_0
       7: putfield      #4                  // Field beginWritten:Z
      10: aload_0
      11: new           #5                  // class org/apache/geronimo/mail/util/UUEncoder
      14: dup
      15: invokespecial #6                  // Method org/apache/geronimo/mail/util/UUEncoder."<init>":()V
      18: putfield      #7                  // Field encoder:Lorg/apache/geronimo/mail/util/UUEncoder;
      21: aload_0
      22: iconst_0
      23: putfield      #8                  // Field bufferedBytes:I
      26: aload_0
      27: bipush        45
      29: newarray       byte
      31: putfield      #9                  // Field buffer:[B
      34: aload_0
      35: aload_2
      36: putfield      #10                 // Field name:Ljava/lang/String;
      39: aload_0
      40: iload_3
      41: putfield      #11                 // Field mode:I
      44: return

  private void checkBegin() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field beginWritten:Z
       4: ifne          71
       7: new           #12                 // class java/io/PrintStream
      10: dup
      11: aload_0
      12: getfield      #13                 // Field out:Ljava/io/OutputStream;
      15: invokespecial #14                 // Method java/io/PrintStream."<init>":(Ljava/io/OutputStream;)V
      18: astore_1
      19: aload_1
      20: new           #15                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #17                 // String begin
      29: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: getfield      #11                 // Field mode:I
      36: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #20                 // String
      41: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #10                 // Field name:Ljava/lang/String;
      48: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #21                 // String \r\n
      53: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokevirtual #23                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      62: aload_1
      63: invokevirtual #24                 // Method java/io/PrintStream.flush:()V
      66: aload_0
      67: iconst_1
      68: putfield      #4                  // Field beginWritten:Z
      71: return

  private void writeEnd() throws java.io.IOException;
    Code:
       0: new           #12                 // class java/io/PrintStream
       3: dup
       4: aload_0
       5: getfield      #13                 // Field out:Ljava/io/OutputStream;
       8: invokespecial #14                 // Method java/io/PrintStream."<init>":(Ljava/io/OutputStream;)V
      11: astore_1
      12: aload_1
      13: ldc           #25                 // String \nend\r\n
      15: invokevirtual #23                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      18: aload_1
      19: invokevirtual #24                 // Method java/io/PrintStream.flush:()V
      22: return

  private void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #26                 // Method checkBegin:()V
       4: aload_0
       5: getfield      #8                  // Field bufferedBytes:I
       8: ifeq          37
      11: aload_0
      12: getfield      #7                  // Field encoder:Lorg/apache/geronimo/mail/util/UUEncoder;
      15: aload_0
      16: getfield      #9                  // Field buffer:[B
      19: iconst_0
      20: aload_0
      21: getfield      #8                  // Field bufferedBytes:I
      24: aload_0
      25: getfield      #13                 // Field out:Ljava/io/OutputStream;
      28: invokevirtual #27                 // Method org/apache/geronimo/mail/util/UUEncoder.encode:([BIILjava/io/OutputStream;)I
      31: pop
      32: aload_0
      33: iconst_0
      34: putfield      #8                  // Field bufferedBytes:I
      37: return

  private int bufferSpace();
    Code:
       0: bipush        45
       2: aload_0
       3: getfield      #8                  // Field bufferedBytes:I
       6: isub
       7: ireturn

  private boolean isBufferFull();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bufferedBytes:I
       4: bipush        45
       6: if_icmplt     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:[B
       4: aload_0
       5: dup
       6: getfield      #8                  // Field bufferedBytes:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #8                  // Field bufferedBytes:I
      15: iload_1
      16: i2b
      17: bastore
      18: aload_0
      19: invokespecial #28                 // Method isBufferFull:()Z
      22: ifeq          29
      25: aload_0
      26: invokespecial #29                 // Method flushBuffer:()V
      29: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #30                 // Method write:([BII)V
       8: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #31                 // Method bufferSpace:()I
       4: iload_3
       5: invokestatic  #32                 // Method java/lang/Math.min:(II)I
       8: istore        4
      10: aload_0
      11: getfield      #9                  // Field buffer:[B
      14: aload_0
      15: getfield      #8                  // Field bufferedBytes:I
      18: aload_1
      19: iload_2
      20: iload         4
      22: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: aload_0
      26: dup
      27: getfield      #8                  // Field bufferedBytes:I
      30: iload         4
      32: iadd
      33: putfield      #8                  // Field bufferedBytes:I
      36: iload_2
      37: iload         4
      39: iadd
      40: istore_2
      41: iload_3
      42: iload         4
      44: isub
      45: istore_3
      46: aload_0
      47: invokespecial #28                 // Method isBufferFull:()Z
      50: ifeq          57
      53: aload_0
      54: invokespecial #29                 // Method flushBuffer:()V
      57: iload_3
      58: bipush        45
      60: if_icmplt     98
      63: iload_3
      64: bipush        45
      66: idiv
      67: bipush        45
      69: imul
      70: istore        5
      72: aload_0
      73: getfield      #7                  // Field encoder:Lorg/apache/geronimo/mail/util/UUEncoder;
      76: aload_1
      77: iload_2
      78: iload         5
      80: aload_0
      81: getfield      #13                 // Field out:Ljava/io/OutputStream;
      84: invokevirtual #27                 // Method org/apache/geronimo/mail/util/UUEncoder.encode:([BIILjava/io/OutputStream;)I
      87: pop
      88: iload_2
      89: iload         5
      91: iadd
      92: istore_2
      93: iload_3
      94: iload         5
      96: isub
      97: istore_3
      98: iload_3
      99: ifle          131
     102: aload_0
     103: getfield      #9                  // Field buffer:[B
     106: iconst_0
     107: aload_1
     108: iload_2
     109: iload_3
     110: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     113: aload_0
     114: dup
     115: getfield      #8                  // Field bufferedBytes:I
     118: iload_3
     119: iadd
     120: putfield      #8                  // Field bufferedBytes:I
     123: iload_2
     124: iload_3
     125: iadd
     126: istore_2
     127: iload_3
     128: iload_3
     129: isub
     130: istore_3
     131: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #29                 // Method flushBuffer:()V
       4: aload_0
       5: invokespecial #34                 // Method writeEnd:()V
       8: aload_0
       9: getfield      #13                 // Field out:Ljava/io/OutputStream;
      12: invokevirtual #35                 // Method java/io/OutputStream.flush:()V
      15: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method flush:()V
       4: aload_0
       5: getfield      #13                 // Field out:Ljava/io/OutputStream;
       8: invokevirtual #37                 // Method java/io/OutputStream.close:()V
      11: return
}
